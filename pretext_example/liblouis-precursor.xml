<?xml version="1.0" encoding="UTF-8"?>
<html>
  <head/>
  <body>
    <section xmlns:svg="http://www.w3.org/2000/svg" class="book" id="aZr">
      <div class="fullpage">Abstract Algebra<br/>Theory and Applications<br/>Thomas W. Judson<br/>Department of Mathematics and Statistics<br/>Stephen F. Austin State University<br/><br/><div class="date">August 3, 2020</div><br/></div>
      <div data-braille="tableofcontents">Contents</div>
      <section class="colophon" id="colophon-1">
        <div class="centerpage">
          <span class="title">Colophon</span>
        </div>
        <p class="credit"><b class="title">Edition</b> Annual Edition 2020</p>
        <p class="credit"><b class="title">Website</b> <a href="http://abstract.pugetsound.edu"><code class="code-inline tex2jax_ignore">abstract.pugetsound.edu</code></a></p>
        <p class="copyright">©1997–2020 Thomas W. Judson, Robert A. Beezer</p>
        <p class="license">Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the appendix entitled “GNU Free Documentation License.”</p>
      </section>
      <section class="acknowledgement" id="acknowledgement-1">
        <div class="centerpage">
          <span class="title">Acknowledgements</span>
        </div>
        <p id="ewA">I would like to acknowledge the following reviewers for their helpful comments and suggestions.</p>
        <ul class="outerlist">
          <li>• <p id="EeD">David Anderson, University of Tennessee, Knoxville</p></li>
          <li>• <p id="klM">Robert Beezer, University of Puget Sound</p></li>
          <li>• <p id="QsV">Myron Hood, California Polytechnic State University</p></li>
          <li>• <p id="wAe">Herbert Kasube, Bradley University</p></li>
          <li>• <p id="cHn">John Kurtzke, University of Portland</p></li>
          <li>• <p id="IOw">Inessa Levi, University of Louisville</p></li>
          <li>• <p id="oVF">Geoffrey Mason, University of California, Santa Cruz</p></li>
          <li>• <p id="VcO">Bruce Mericle, Mankato State University</p></li>
          <li>• <p id="BjX">Kimmo Rosenthal, Union College</p></li>
          <li>• <p id="hrg">Mark Teply, University of Wisconsin</p></li>
        </ul>
        <p id="KDJ">I would also like to thank Steve Quigley, Marnie Pommett, Cathie Griffin, Kelle Karshick, and the rest of the staff at PWS Publishing for their guidance throughout this project. It has been a pleasure to work with them.</p>
        <p id="qKS">Robert Beezer encouraged me to make <em class="emphasis">Abstract Algebra: Theory and Applications</em> available as an open source textbook, a decision that I have never regretted. With his assistance, the book has been rewritten in PreTeXt (<a class="external" href="https://pretextbook.org" target="_blank"><code class="code-inline tex2jax_ignore">pretextbook.org</code></a>), making it possible to quickly output print, web, <abbr class="acronym">PDF</abbr> versions and more from the same source. The open source version of this book has received support from the National Science Foundation (Awards #DUE-1020957, #DUE–1625223, and #DUE–1821329).</p>
      </section>
      <section class="preface" id="Cpq">
        <div class="centerpage">
          <span class="title">Preface</span>
        </div>
        <p id="Nyp">This text is intended for a one or two-semester undergraduate course in abstract algebra. Traditionally, these courses have covered the theoretical aspects of groups, rings, and fields. However, with the development of computing in the last several decades, applications that involve abstract algebra and discrete mathematics have become increasingly important, and many science, engineering, and computer science students are now electing to minor in mathematics. Though theory still occupies a central role in the subject of abstract algebra and no student should go through such a course without a good notion of what a proof is, the importance of applications such as coding theory and cryptography has grown significantly.</p>
        <p id="tFy">Until recently most abstract algebra texts included few if any applications. However, one of the major problems in teaching an abstract algebra course is that for many students it is their first encounter with an environment that requires them to do rigorous proofs. Such students often find it hard to see the use of learning to prove theorems and propositions; applied examples help the instructor provide motivation.</p>
        <p id="ZMH">This text contains more material than can possibly be covered in a single semester. Certainly there is adequate material for a two-semester course, and perhaps more; however, for a one-semester course it would be quite easy to omit selected chapters and still have a useful text. The order of presentation of topics is standard: groups, then rings, and finally fields. Emphasis can be placed either on theory or on applications. A typical one-semester course might cover groups and rings while briefly touching on field theory, using Chapters 1 through 6, 9, 10, 11, 13 (the first part), 16, 17, 18 (the first part), 20, and 21. Parts of these chapters could be deleted and applications substituted according to the interests of the students and the instructor. A two-semester course emphasizing theory might cover Chapters 1 through 6, 9, 10, 11, 13 through 18, 20, 21, 22 (the first part), and 23. On the other hand, if applications are to be emphasized, the course might cover Chapters 1 through 14, and 16 through 22. In an applied course, some of the more theoretical results could be assumed or omitted. A chapter dependency chart appears below. (A broken line indicates a partial dependency.)</p>
        <div class="sidebyside">
          <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
            <div class="sbspanel" style="width:100%;justify-content:flex-start;">
              <div data-braille="image">
                <p>Image: Chapter dependency graph.  Chapter 23 depends on Chapters 13 and 15. Chapter 22 depends on Chapter 21 and Chapter 8.  Chapter 21 depends on Chapter 20.  Chapters 18-20 depend on Chapter 17.  Chapter 17 depends on Chapter 16.  Chapter 15 depends on Chapter 14.  Chapters 12, 13, 14, and 16 depend on Chapter 11. Chapter 11 depends on Chapter 10, which depends on Chapter 9. Chapters 7-9 depend on Chapters 1-6</p>
                <p>ID: preface-dependencies</p>
              </div>
            </div>
          </div>
        </div>
        <p id="FTQ">Though there are no specific prerequisites for a course in abstract algebra, students who have had other higher-level courses in mathematics will generally be more prepared than those who have not, because they will possess a bit more mathematical sophistication. Occasionally, we shall assume some basic linear algebra; that is, we shall take for granted an elementary knowledge of matrices and determinants. This should present no great problem, since most students taking a course in abstract algebra have been introduced to matrices and determinants elsewhere in their career, if they have not already taken a sophomore or junior-level course in linear algebra.</p>
        <p id="maZ">Exercise sections are the heart of any mathematics text. An exercise set appears at the end of each chapter. The nature of the exercises ranges over several categories; computational, conceptual, and theoretical problems are included. A section presenting hints and solutions to many of the exercises appears at the end of the text. Often in the solutions a proof is only sketched, and it is up to the student to provide the details. The exercises range in difficulty from very easy to very challenging. Many of the more substantial problems require careful thought, so the student should not be discouraged if the solution is not forthcoming after a few minutes of work.</p>
        <p id="Sii">There are additional exercises or computer projects at the ends of many of the chapters. The computer projects usually require a knowledge of programming. All of these exercises and projects are more substantial in nature and allow the exploration of new results and theory.</p>
        <p id="ypr">Sage (<a class="external" href="http://sagemath.org" target="_blank">sagemath.org</a>) is a free, open source, software system for advanced mathematics, which is ideal for assisting with a study of abstract algebra. Sage can be used either on your own computer, a local server, or on CoCalc (<a class="external" href="https://cocalc.com" target="_blank"><code class="code-inline tex2jax_ignore">cocalc.com</code></a>). Robert Beezer has written a comprehensive introduction to Sage and a selection of relevant exercises that appear at the end of each chapter, including live Sage cells in the web version of the book. All of the Sage code has been subject to automated tests of accuracy, using the most recent version available at this time: SageMath Version 9.1 (released 2020-05-20).</p>
        <cite class="attribution">Thomas W. Judson<br/>Nacogdoches, Texas 2020</cite>
      </section>
      <section class="chapter" id="xcu">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">1</span> <span class="title">Preliminaries</span></div>
        <section class="introduction" id="Put">
          <p id="DBN">A certain amount of mathematical maturity is necessary to find and study applications of abstract algebra. A basic knowledge of set theory, mathematical induction, equivalence relations, and matrices is a must. Even more important is the ability to read and understand mathematical proofs. In this chapter we will outline the background needed for a course in abstract algebra.</p>
        </section>
        <section class="section" id="yRH">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">1.1</span> <span class="title">A Short Note on Proofs</span></div>
          <section class="introduction" id="vBC">
            <p id="jIW">Abstract mathematics is different from other sciences. In laboratory sciences such as chemistry and physics, scientists perform experiments to discover new principles and verify theories. Although mathematics is often motivated by physical experimentation or by computer simulations, it is made rigorous through the use of logical arguments. In studying abstract mathematics, we take what is called an axiomatic approach; that is, we take a collection of objects <nemeth class="inline">⠈⠠⠎</nemeth> and assume some rules about their structure. These rules are called <dfn class="terminology">axioms</dfn>. Using the axioms for <nemeth class="inline">⠈⠠⠎</nemeth>, we wish to derive other information about <nemeth class="inline">⠈⠠⠎</nemeth> by using logical arguments. We require that our axioms be consistent; that is, they should not contradict one another. We also demand that there not be too many axioms. If a system of axioms is too restrictive, there will be few examples of the mathematical structure.</p>
            <p id="PQf">A <dfn class="terminology">statement</dfn> in logic or mathematics is an assertion that is either true or false. Consider the following examples:</p>
            <ul class="outerlist">
              <li>• <p id="glA"><nemeth class="inline">⠼⠒⠬⠢⠖⠤⠂⠒⠬⠦⠸⠌⠆</nemeth>.</p></li>
              <li>• <p id="MsJ">All cats are black.</p></li>
              <li>• <p id="szS"><nemeth class="inline">⠼⠆⠬⠒⠀⠨⠅⠀⠼⠢</nemeth>.</p></li>
              <li>• <p id="YHb"><nemeth class="inline">⠼⠆⠭⠀⠨⠅⠀⠼⠖</nemeth> exactly when <nemeth class="inline">⠭⠀⠨⠅⠀⠼⠲</nemeth>.</p></li>
              <li>• <p id="EOk">If <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>, then</p><div class="displaymath"><nemeth>⠭⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth></div><p data-braille="continuation">.</p></li>
              <li>• <p id="kVt"><nemeth class="inline">⠭⠘⠒⠐⠤⠲⠭⠘⠆⠬⠢⠭⠤⠖</nemeth>.</p></li>
            </ul>
            <p data-braille="continuation">All but the first  and last examples are statements, and must be either true or false.</p>
            <p id="vXo">A <dfn class="terminology">mathematical proof</dfn> is nothing more than a convincing argument about the accuracy of a statement. Such an argument should contain enough detail to convince the audience; for instance, we can see that the statement “<nemeth class="inline">⠼⠆⠭⠀⠨⠅⠀⠼⠖</nemeth> exactly when <nemeth class="inline">⠭⠀⠨⠅⠀⠼⠲</nemeth>” is false by evaluating <nemeth class="inline">⠼⠆⠡⠲</nemeth> and noting that <nemeth class="inline">⠼⠖⠀⠌⠨⠅⠀⠼⠦</nemeth>, an argument that would satisfy anyone. Of course, audiences may vary widely: proofs can be addressed to another student, to a professor, or to the reader of a text. If more detail than needed is presented in the proof, then the explanation will be either long-winded or poorly written. If too much detail is omitted, then the proof may not be convincing. Again it is important to keep the audience in mind. High school students require much more detail than do graduate students. A good rule of thumb for an argument in an introductory abstract algebra course is that it should be written to convince one's peers, whether those peers be other students or other readers of the text.</p>
            <p id="cex">Let us examine different types of statements. A statement could be as simple as “<nemeth class="inline">⠼⠂⠴⠸⠌⠢⠀⠨⠅⠀⠼⠆</nemeth>;” however, mathematicians are usually interested in more complex statements such as “If <i class="one-letter">p</i>, then <i class="one-letter">q</i>,” where <i class="one-letter">p</i> and <i class="one-letter">q</i> are both statements. If certain statements are known or assumed to be true, we wish to know what we can say about other statements. Here <i class="one-letter">p</i> is called the <dfn class="terminology">hypothesis</dfn> and <i class="one-letter">q</i> is known as the <dfn class="terminology">conclusion</dfn>. Consider the following statement: If <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">. The hypothesis is <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>; the conclusion is</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">. Notice that the  statement says nothing about whether or not the hypothesis is true. However, if this entire statement is true and we can show that <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> with <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth> is true, then the conclusion <em class="emphasis">must</em> be true. A proof of this statement might simply be a series of equations:</p>
            <div class="displaymath">
              <nemeth>⠁⠭⠘⠆⠬⠃⠭⠬⠉⠀⠀⠨⠅⠀⠼⠴⠀⠭⠘⠆⠐⠬⠹⠃⠌⠁⠼⠭⠀⠀⠨⠅⠀⠤⠹⠉⠌⠁⠼⠀⠭⠘⠆⠐⠬⠹⠃⠌⠁⠼⠭⠬⠷⠹⠃⠌⠆⠁⠼⠾⠘⠆⠀⠀⠨⠅⠀⠷⠹⠃⠌⠆⠁⠼⠾⠘⠆⠐⠤⠹⠉⠌⠁⠼⠀⠷⠭⠬⠹⠃⠌⠆⠁⠼⠾⠘⠆⠀⠀⠨⠅⠀⠹⠃⠘⠆⠐⠤⠲⠁⠉⠌⠲⠁⠘⠆⠐⠼⠀⠭⠬⠹⠃⠌⠆⠁⠼⠀⠀⠨⠅⠀⠹⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼⠀⠭⠀⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="IlG">If we can prove a statement true, then that statement is called a <dfn class="terminology">proposition</dfn>. A proposition of major importance is called a <dfn class="terminology">theorem</dfn>. Sometimes instead of proving a theorem or proposition all at once, we break the proof down into modules; that is, we prove several supporting propositions, which are called <dfn class="terminology">lemmas</dfn>, and use the results of these propositions to prove the main result. If we can prove a proposition or a theorem, we will often, with very little effort, be able to derive other related propositions called <dfn class="terminology">corollaries</dfn>.</p>
          </section>
          <section class="subsection" id="djD">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.1.1</span> <span class="title">Some Cautions and Suggestions</span></div>
            <p id="IVA">There are several different strategies for proving propositions. In addition to using different methods of proof, students often make some common mistakes when they are first learning how to prove theorems. To aid students who are studying abstract mathematics for the first time, we list here some of the difficulties that they may encounter and some of the strategies of proof available to them. It is a good idea to keep referring back to this list as a reminder. (Other techniques of proof will become apparent throughout this chapter and the remainder of the text.)</p>
            <ul class="outerlist">
              <li>• <p id="RcC">A theorem cannot be proved by example; however, the standard way to show that a statement is not a theorem is to provide a counterexample.</p></li>
              <li>• <p id="xjL">Quantifiers are important. Words and phrases such as <em class="emphasis">only</em>, <em class="emphasis">for all</em>, <em class="emphasis">for every</em>, and <em class="emphasis">for some</em> possess different meanings.</p></li>
              <li>• <p id="dqU">Never assume any hypothesis that is not explicitly stated in the theorem. <em class="emphasis">You cannot take things for granted.</em></p></li>
              <li>• <p id="Jyd">Suppose you wish to show that an object <em class="emphasis">exists</em> and is <em class="emphasis">unique</em>. First show that there actually is such an object. To show that it is unique, assume that there are two such objects, say <i class="one-letter">r</i> and <i class="one-letter">s</i>, and then show that <nemeth class="inline">⠗⠀⠨⠅⠀⠎</nemeth>.</p></li>
              <li>• <p id="pFm">Sometimes it is easier to prove the contrapositive of a statement. Proving the statement “If <i class="one-letter">p</i>, then <i class="one-letter">q</i>” is exactly the same as proving the statement “If not <i class="one-letter">q</i>, then not <i class="one-letter">p</i>.”</p></li>
              <li>• <p id="VMv">Although it is usually better to find a direct proof of a theorem, this task can sometimes be difficult. It may be easier to assume that the theorem that you are trying to prove is false, and to hope that in the course of your argument you are forced to make some statement that cannot possibly be true.</p></li>
            </ul>
            <p data-braille="continuation">Remember that one of the main objectives of higher mathematics is proving theorems. Theorems are tools that make new and productive applications of mathematics possible. We use examples to give insight  into existing theorems and to foster intuitions as to what new theorems might be true. Applications, examples, and proofs are tightly interconnected—much more so than they may seem at first appearance.</p>
          </section>
        </section>
        <section class="section" id="eYQ">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">1.2</span> <span class="title">Sets and Equivalence Relations</span></div>
          <section class="subsection" id="JqM">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.2.1</span> <span class="title">Set Theory</span></div>
            <p id="pcJ">A <dfn class="terminology">set</dfn> is a well-defined collection of objects; that is, it is defined in such a manner that we can determine for any given object <i class="one-letter">x</i> whether or not <i class="one-letter">x</i> belongs to the set. The objects that belong to a set are called its <dfn class="terminology">elements</dfn> or <dfn class="terminology">members</dfn>. We will denote sets by capital letters, such as <i class="one-letter">A</i> or <i class="one-letter">X</i>; if <i class="one-letter">a</i> is an element of the set <i class="one-letter">A</i>, we write <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth>. </p>
            <p id="VjS">A set is usually specified either by listing all of its elements inside a pair of braces or by stating the property that determines whether or not an object <i class="one-letter">x</i> belongs to the set. We might write</p>
            <div class="displaymath">
              <nemeth>⠠⠭⠀⠨⠅⠀⠨⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">for a set containing elements <nemeth class="inline">⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐</nemeth> or</p>
            <div class="displaymath">
              <nemeth>⠠⠭⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠎⠁⠞⠊⠎⠋⠊⠑⠎⠈⠠⠏⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">if each <i class="one-letter">x</i> in <i class="one-letter">X</i> satisfies a certain property <nemeth class="inline">⠈⠠⠏</nemeth>. For example, if <i class="one-letter">E</i> is the set of even positive integers, we can describe <i class="one-letter">E</i> by writing either</p>
            <div class="displaymath">
              <nemeth>⠠⠑⠀⠨⠅⠀⠨⠷⠼⠆⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠄⠄⠄⠨⠾⠕⠗⠠⠑⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠊⠎⠀⠁⠝⠀⠑⠧⠑⠝⠀⠊⠝⠞⠑⠛⠑⠗⠀⠁⠝⠙⠭⠀⠨⠂⠀⠼⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. We write <nemeth class="inline">⠼⠆⠀⠈⠑⠀⠠⠑</nemeth> when we want to say that 2 is in the set <i class="one-letter">E</i>, and <nemeth class="inline">⠤⠼⠒⠀⠌⠈⠑⠀⠠⠑</nemeth> to say that <nemeth class="inline">⠤⠼⠒</nemeth> is not in the set <i class="one-letter">E</i>.</p>
            <p id="Brb">Some of the more important sets that we will consider are the following:</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠝⠀⠨⠅⠀⠨⠷⠝⠒⠀⠝⠊⠎⠀⠁⠀⠝⠁⠞⠥⠗⠁⠇⠀⠝⠥⠍⠃⠑⠗⠨⠾⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠄⠄⠄⠨⠾⠆⠀⠸⠠⠵⠀⠨⠅⠀⠨⠷⠝⠒⠀⠝⠊⠎⠀⠁⠝⠀⠊⠝⠞⠑⠛⠑⠗⠨⠾⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠨⠾⠆⠀⠸⠠⠟⠀⠨⠅⠀⠨⠷⠗⠒⠀⠗⠊⠎⠀⠁⠀⠗⠁⠞⠊⠕⠝⠁⠇⠀⠝⠥⠍⠃⠑⠗⠨⠾⠀⠨⠅⠀⠨⠷⠏⠸⠌⠟⠒⠀⠏⠠⠀⠟⠀⠈⠑⠀⠸⠠⠵⠺⠓⠑⠗⠑⠟⠀⠌⠨⠅⠀⠼⠴⠨⠾⠆⠀⠸⠠⠗⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠊⠎⠀⠁⠀⠗⠑⠁⠇⠀⠝⠥⠍⠃⠑⠗⠨⠾⠆⠀⠸⠠⠉⠀⠨⠅⠀⠨⠷⠵⠒⠀⠵⠊⠎⠀⠁⠀⠉⠕⠍⠏⠇⠑⠭⠀⠝⠥⠍⠃⠑⠗⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. </p>
            <p id="hyk">We can find various relations between sets as well as perform operations on sets. A set <i class="one-letter">A</i> is a <dfn class="terminology">subset</dfn> of <i class="one-letter">B</i>, written <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠃</nemeth> or <nemeth class="inline">⠠⠃⠀⠸⠨⠂⠀⠠⠁</nemeth>, if every element of <i class="one-letter">A</i> is also an element of <i class="one-letter">B</i>.  For example,</p>
            <div class="displaymath">
              <nemeth>⠨⠷⠼⠲⠠⠀⠼⠢⠠⠀⠼⠦⠨⠾⠀⠸⠐⠅⠀⠨⠷⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠖⠠⠀⠼⠶⠠⠀⠼⠦⠠⠀⠼⠔⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠝⠀⠸⠐⠅⠀⠸⠠⠵⠀⠸⠐⠅⠀⠸⠠⠟⠀⠸⠐⠅⠀⠸⠠⠗⠀⠸⠐⠅⠀⠸⠠⠉</nemeth>
            </div>
            <p data-braille="continuation">. Trivially, every set is a subset of itself. A set <i class="one-letter">B</i> is a <dfn class="terminology">proper subset</dfn> of a set <i class="one-letter">A</i> if <nemeth class="inline">⠠⠃⠀⠸⠐⠅⠀⠠⠁</nemeth> but <nemeth class="inline">⠠⠃⠀⠌⠨⠅⠀⠠⠁</nemeth>. If <i class="one-letter">A</i> is not a subset of <i class="one-letter">B</i>, we write <nemeth class="inline">⠠⠁⠀⠌⠸⠐⠅⠀⠠⠃</nemeth>; for example, <nemeth class="inline">⠨⠷⠼⠲⠠⠀⠼⠶⠠⠀⠼⠔⠨⠾⠀⠌⠸⠐⠅⠀⠨⠷⠼⠆⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠦⠠⠀⠼⠔⠨⠾</nemeth>. Two sets are <dfn class="terminology">equal</dfn>, written <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠠⠃</nemeth>, if we can show that <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠃</nemeth> and <nemeth class="inline">⠠⠃⠀⠸⠐⠅⠀⠠⠁</nemeth>.</p>
            <p id="NFt">It is convenient to have a set with no elements in it. This set is called the <dfn class="terminology">empty set</dfn> and is denoted by <nemeth class="inline">⠸⠴</nemeth>. Note that the empty set is a subset of every set. </p>
            <p id="tMC">To construct new sets out of old sets, we can perform certain operations: the <dfn class="terminology">union</dfn> <nemeth class="inline">⠠⠁⠨⠬⠠⠃</nemeth> of two sets <i class="one-letter">A</i> and <i class="one-letter">B</i> is defined as</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠕⠗⠭⠀⠈⠑⠀⠠⠃⠨⠾⠆</nemeth>
            </div>
            <p data-braille="continuation">the <dfn class="terminology">intersection</dfn> of <i class="one-letter">A</i> and <i class="one-letter">B</i>  is defined by</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠁⠝⠙⠭⠀⠈⠑⠀⠠⠃⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.  If <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠢⠨⠾</nemeth> and <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠔⠨⠾</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠢⠠⠀⠼⠔⠨⠾⠁⠝⠙⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠒⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. We can consider the union and the intersection of more than two sets. In this case we write</p>
            <div class="displaymath">
              <nemeth>⠐⠨⠬⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠠⠁⠰⠊⠐⠀⠨⠅⠀⠠⠁⠂⠨⠬⠄⠄⠄⠨⠬⠠⠁⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠐⠨⠩⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠠⠁⠰⠊⠐⠀⠨⠅⠀⠠⠁⠂⠨⠩⠄⠄⠄⠨⠩⠠⠁⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">for the union and intersection, respectively, of the sets <nemeth class="inline">⠠⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠠⠁⠰⠝⠐</nemeth>.</p>
            <p id="ZTL">When two sets have no elements in common, they are said to be <dfn class="terminology">disjoint</dfn>; for example, if <i class="one-letter">E</i> is the set of even integers and <i class="one-letter">O</i> is the set of odd integers, then <i class="one-letter">E</i> and <i class="one-letter">O</i> are disjoint. Two sets <i class="one-letter">A</i> and <i class="one-letter">B</i> are disjoint exactly when <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠸⠴</nemeth>.</p>
            <p id="GaU">Sometimes we will work within one fixed set <i class="one-letter">U</i>, called the <dfn class="terminology">universal set</dfn>. For any set <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠥</nemeth>, we define the <dfn class="terminology">complement</dfn> of <i class="one-letter">A</i>, denoted by <nemeth class="inline">⠠⠁⠄</nemeth>, to be the set </p>
            <div class="displaymath">
              <nemeth>⠠⠁⠘⠄⠐⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠥⠁⠝⠙⠭⠀⠌⠈⠑⠀⠠⠁⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="mid">We define the <dfn class="terminology">difference</dfn> of two sets <i class="one-letter">A</i> and <i class="one-letter">B</i> to be </p>
            <div class="displaymath">
              <nemeth>⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠀⠨⠅⠀⠠⠁⠨⠩⠠⠃⠘⠄⠐⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠁⠝⠙⠭⠀⠌⠈⠑⠀⠠⠃⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="example example-like" data-braille="example-like" id="DBA">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="gew">Let <nemeth class="inline">⠸⠠⠗</nemeth> be the universal set and suppose that</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠴⠀⠐⠅⠀⠭⠀⠐⠅⠱⠀⠼⠒⠨⠾⠁⠝⠙⠠⠃⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠆⠀⠐⠅⠱⠀⠭⠀⠐⠅⠀⠼⠲⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠨⠩⠠⠃⠀⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠆⠀⠐⠅⠱⠀⠭⠀⠐⠅⠱⠀⠼⠒⠨⠾⠀⠠⠁⠨⠬⠠⠃⠀⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠴⠀⠐⠅⠀⠭⠀⠐⠅⠀⠼⠲⠨⠾⠀⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠀⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠴⠀⠐⠅⠀⠭⠀⠐⠅⠀⠼⠆⠨⠾⠀⠠⠁⠄⠀⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠭⠀⠐⠅⠱⠀⠼⠴⠕⠗⠭⠀⠨⠂⠀⠼⠒⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="Xur">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="TQe">Let <i class="one-letter">A</i>, <i class="one-letter">B</i>, and <i class="one-letter">C</i> be sets. Then</p>
              <ol class="outerlist">
                <li>1. <p id="BTE"><nemeth class="inline">⠠⠁⠨⠬⠠⠁⠀⠨⠅⠀⠠⠁</nemeth>, <nemeth class="inline">⠠⠁⠨⠩⠠⠁⠀⠨⠅⠀⠠⠁</nemeth>, and <nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠀⠨⠅⠀⠸⠴</nemeth>;</p></li>
                <li>2. <p id="iaN"><nemeth class="inline">⠠⠁⠨⠬⠸⠴⠀⠨⠅⠀⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠸⠴⠀⠨⠅⠀⠸⠴</nemeth>;</p></li>
                <li>3. <p id="OhW"><nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠬⠠⠉</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠩⠠⠉</nemeth>;</p></li>
                <li>4. <p id="upf"><nemeth class="inline">⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠠⠃⠨⠬⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠠⠃⠨⠩⠠⠁</nemeth>;</p></li>
                <li>5. <p id="awo"><nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>;</p></li>
                <li>6. <p id="GDx"><nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠨⠩⠠⠉⠾</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="gsE">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="tyh">We will prove (1) and (3) and leave the remaining results to be proven in the exercises.</p>
              <p id="ZFq">(1) Observe that</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠨⠬⠠⠁⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠕⠗⠭⠀⠈⠑⠀⠠⠁⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠨⠾⠀⠀⠀⠀⠨⠅⠀⠠⠁</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠨⠩⠠⠁⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠁⠝⠙⠭⠀⠈⠑⠀⠠⠁⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠨⠾⠀⠀⠀⠀⠨⠅⠀⠠⠁</nemeth>
              </div>
              <p data-braille="continuation">. Also, <nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠀⠨⠅⠀⠠⠁⠨⠩⠠⠁⠘⠄⠐⠀⠨⠅⠀⠸⠴</nemeth>.</p>
              <p id="FMz">(3) For sets <i class="one-letter">A</i>, <i class="one-letter">B</i>, and <i class="one-letter">C</i>,</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠨⠬⠷⠠⠃⠨⠬⠠⠉⠾⠀⠀⠨⠅⠀⠠⠁⠨⠬⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠃⠕⠗⠭⠀⠈⠑⠀⠠⠉⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠕⠗⠭⠀⠈⠑⠀⠠⠃⠠⠀⠕⠗⠭⠀⠈⠑⠀⠠⠉⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠕⠗⠭⠀⠈⠑⠀⠠⠃⠨⠾⠨⠬⠠⠉⠀⠀⠀⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠬⠠⠉</nemeth>
              </div>
              <p data-braille="continuation">. A similar argument proves that  <nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠩⠠⠉</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="rni">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.3</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">De Morgan's Laws.</span>
              </h6>
              <p id="vnu">Let <i class="one-letter">A</i> and <i class="one-letter">B</i> be sets. Then</p>
              <ol class="outerlist">
                <li>1. <p id="mKG"><nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠨⠅⠀⠠⠁⠘⠄⠐⠨⠩⠠⠃⠄</nemeth>;</p></li>
                <li>2. <p id="SRP"><nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠘⠄⠐⠀⠨⠅⠀⠠⠁⠘⠄⠐⠨⠬⠠⠃⠄</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="HPU">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="lTI">(1) If <nemeth class="inline">⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠸⠴</nemeth>, then the theorem follows immediately since both <i class="one-letter">A</i> and <i class="one-letter">B</i> are the empty set. Otherwise, we must show that <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠸⠐⠅⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth> and <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠸⠨⠂⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth>. Let <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠄</nemeth>. Then <nemeth class="inline">⠭⠀⠌⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth>. So <i class="one-letter">x</i> is neither in <i class="one-letter">A</i> nor in <i class="one-letter">B</i>, by the definition of the union of sets. By the definition of the complement, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠄</nemeth> and <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠃⠄</nemeth>. Therefore, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth> and we have <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠸⠐⠅⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth>.</p>
              <p id="SaR">To show the reverse inclusion, suppose that <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth>. Then <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠄</nemeth> and <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠃⠄</nemeth>, and so <nemeth class="inline">⠭⠀⠌⠈⠑⠀⠠⠁</nemeth> and <nemeth class="inline">⠭⠀⠌⠈⠑⠀⠠⠃</nemeth>. Thus <nemeth class="inline">⠭⠀⠌⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth> and so <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠄</nemeth>. Hence, <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠸⠨⠂⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth> and so <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠨⠅⠀⠠⠁⠘⠄⠐⠨⠩⠠⠃⠄</nemeth>.</p>
              <p id="yia">The proof of (2) is left as an exercise.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="jIJ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="MlF">Other relations between sets often hold true. For example,</p>
              <div class="displaymath">
                <nemeth>⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠨⠅⠀⠸⠴</nemeth>
              </div>
              <p data-braille="continuation">. To see that this is true, observe that</p>
              <div class="displaymath">
                <nemeth>⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠘⠄⠐⠾⠨⠩⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠀⠀⠀⠨⠅⠀⠠⠁⠨⠩⠠⠁⠘⠄⠐⠨⠩⠠⠃⠨⠩⠠⠃⠘⠄⠐⠀⠀⠀⠀⠨⠅⠀⠸⠴</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="pxV">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.2.2</span> <span class="title">Cartesian Products and Mappings</span></div>
            <p id="Spm">Given sets <i class="one-letter">A</i> and <i class="one-letter">B</i>, we can define a new set <nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth>, called the <dfn class="terminology">Cartesian product</dfn> of <i class="one-letter">A</i> and <i class="one-letter">B</i>, as a set of ordered pairs. That is, </p>
            <div class="displaymath">
              <nemeth>⠠⠁⠈⠡⠠⠃⠀⠨⠅⠀⠨⠷⠷⠁⠠⠀⠃⠾⠒⠀⠁⠀⠈⠑⠀⠠⠁⠁⠝⠙⠃⠀⠈⠑⠀⠠⠃⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="example example-like" data-braille="example-like" id="cek">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="ssO">If <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠨⠷⠭⠠⠀⠽⠨⠾</nemeth>, <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, and <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠸⠴</nemeth>, then <nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth> is the set</p>
              <div class="displaymath">
                <nemeth>⠨⠷⠷⠭⠠⠀⠼⠂⠾⠠⠀⠷⠭⠠⠀⠼⠆⠾⠠⠀⠷⠭⠠⠀⠼⠒⠾⠠⠀⠷⠽⠠⠀⠼⠂⠾⠠⠀⠷⠽⠠⠀⠼⠆⠾⠠⠀⠷⠽⠠⠀⠼⠒⠾⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠈⠡⠠⠉⠀⠨⠅⠀⠸⠴</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="ywv">We define the <dfn class="terminology">Cartesian product of <i class="one-letter">n</i> sets</dfn> to be</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠂⠈⠡⠄⠄⠄⠈⠡⠠⠁⠰⠝⠐⠀⠨⠅⠀⠨⠷⠷⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠒⠀⠁⠰⠊⠐⠀⠈⠑⠀⠠⠁⠰⠊⠐⠋⠕⠗⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠠⠁⠂⠀⠨⠅⠀⠠⠁⠆⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠠⠁⠰⠝</nemeth>, we often write <nemeth class="inline">⠠⠁⠘⠝</nemeth> for <nemeth class="inline">⠠⠁⠈⠡⠄⠄⠄⠈⠡⠠⠁</nemeth> (where <i class="one-letter">A</i> would be written <i class="one-letter">n</i> times).  For example, the set <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> consists of all of 3-tuples of real numbers.</p>
            <p id="eDE">Subsets of <nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth> are called <dfn class="terminology">relations</dfn>. We will define a  <dfn class="terminology">mapping</dfn> or <dfn class="terminology">function</dfn> <nemeth class="inline">⠋⠀⠸⠐⠅⠀⠠⠁⠈⠡⠠⠃</nemeth> from a set <i class="one-letter">A</i> to a set <i class="one-letter">B</i> to be the special type of relation where each element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> has a unique element <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> such that <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠋</nemeth>. Another way of saying this is that for every element in <i class="one-letter">A</i>, <i class="one-letter">f</i> assigns a unique element in <i class="one-letter">B</i>. We usually write <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> or <nemeth class="inline">⠠⠁⠐⠀⠫⠕⠀⠣⠋⠻⠠⠃</nemeth>. Instead of writing down ordered pairs  <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠁⠈⠡⠠⠃</nemeth>, we write <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth> or <nemeth class="inline">⠋⠒⠀⠁⠀⠫⠳⠒⠒⠕⠀⠃</nemeth>. The set  <i class="one-letter">A</i> is called the <dfn class="terminology">domain</dfn> of <i class="one-letter">f</i> and</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠠⠁⠾⠀⠨⠅⠀⠨⠷⠋⠷⠁⠾⠒⠀⠁⠀⠈⠑⠀⠠⠁⠨⠾⠀⠸⠐⠅⠀⠠⠃</nemeth>
            </div>
            <p data-braille="continuation">is called the <dfn class="terminology">range</dfn>  or <dfn class="terminology">image</dfn> of <i class="one-letter">f</i>. We can think of the elements in the function's domain as input values and the elements in the function's range as output values.</p>
            <article class="example example-like" data-braille="example-like" id="Ilt">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="YzX">Suppose <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth> and <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. In Figure 1.2.7 we define relations <i class="one-letter">f</i> and <i class="one-letter">g</i> from <i class="one-letter">A</i> to <i class="one-letter">B</i>. The relation <i class="one-letter">f</i> is a mapping, but <i class="one-letter">g</i> is not because <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠁</nemeth> is not assigned to a unique element in <i class="one-letter">B</i>; that is, <nemeth class="inline">⠛⠷⠼⠂⠾⠀⠨⠅⠀⠁</nemeth> and <nemeth class="inline">⠛⠷⠼⠂⠾⠀⠨⠅⠀⠃</nemeth>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="EHg">
                <div data-braille="image">
                  <p>Image: Two sets of ovals, A and B, relating 1, 2, 3 to a, b, c.  The first mapping, f, sends 1 to b and 2 and 3 to c.  The second relation, g, sends 1 to a and b, 2 to c, and 3 to a</p>
                  <p>ID: sets-mappings</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">1.2.7<span class="period">.</span></span><span class="space"> </span>Mappings and relations</figcaption>
              </figure>
            </article>
            <p id="KKN">Given a function <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth>, it is often possible to write a list describing what the function does to each specific element in the domain. However, not all functions can be described in this manner. For example, the function <nemeth class="inline">⠋⠒⠀⠸⠠⠗⠀⠫⠕⠀⠸⠠⠗</nemeth> that sends each real number to its cube is a mapping that must be described by writing <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒</nemeth> or <nemeth class="inline">⠋⠒⠀⠭⠀⠫⠳⠒⠒⠕⠀⠭⠘⠒</nemeth>.</p>
            <p id="qRW">Consider the relation <nemeth class="inline">⠋⠒⠀⠸⠠⠟⠀⠫⠕⠀⠸⠠⠵</nemeth> given by <nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠏</nemeth>. We know that <nemeth class="inline">⠼⠂⠸⠌⠆⠀⠨⠅⠀⠼⠆⠸⠌⠲</nemeth>, but is <nemeth class="inline">⠋⠷⠂⠸⠌⠆⠾⠀⠨⠅⠀⠼⠂</nemeth> or <nemeth class="inline">⠼⠆</nemeth>? This relation cannot be a mapping because it is not well-defined. A relation is <dfn class="terminology">well-defined</dfn>  if each element in the domain is assigned to a <em class="emphasis">unique</em> element in the range.</p>
            <p id="WZf">If <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> is a map and the image of <i class="one-letter">f</i> is <i class="one-letter">B</i>, i.e., <nemeth class="inline">⠋⠷⠠⠁⠾⠀⠨⠅⠀⠠⠃</nemeth>, then <i class="one-letter">f</i> is said to be <dfn class="terminology">onto</dfn>  or <dfn class="terminology">surjective</dfn>.  In other words, if there exists an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> for each <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth>, then <i class="one-letter">f</i> is onto. A map is <dfn class="terminology">one-to-one</dfn> or <dfn class="terminology">injective</dfn> if <nemeth class="inline">⠁⠂⠀⠌⠨⠅⠀⠁⠆</nemeth> implies <nemeth class="inline">⠋⠷⠁⠂⠾⠀⠌⠨⠅⠀⠋⠷⠁⠆⠾</nemeth>. Equivalently, a function is one-to-one if <nemeth class="inline">⠋⠷⠁⠂⠾⠀⠨⠅⠀⠋⠷⠁⠆⠾</nemeth> implies <nemeth class="inline">⠁⠂⠀⠨⠅⠀⠁⠆</nemeth>. A map that is both one-to-one and onto is called <dfn class="terminology">bijective</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="osC">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="kOp">Let <nemeth class="inline">⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠟</nemeth> be defined by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠝⠸⠌⠂</nemeth>. Then <i class="one-letter">f</i> is one-to-one but not onto. Define <nemeth class="inline">⠛⠒⠀⠸⠠⠟⠀⠫⠕⠀⠸⠠⠵</nemeth> by <nemeth class="inline">⠛⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠏</nemeth> where <nemeth class="inline">⠏⠸⠌⠟</nemeth> is a rational number expressed in its lowest terms with a positive denominator. The function <i class="one-letter">g</i> is onto but not one-to-one.</p>
            </article>
            <p id="Dgo">Given two functions, we can construct a new function by using the range of the first function as the domain of the second function. Let <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> and <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> be mappings. Define a new map, the <dfn class="terminology">composition</dfn> of <i class="one-letter">f</i> and <i class="one-letter">g</i> from <i class="one-letter">A</i> to <i class="one-letter">C</i>, by <nemeth class="inline">⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾</nemeth>.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="PuG">
              <div data-braille="image">
                <p>Image: Two sets of ovals, A and B, relating 1, 2, 3 to a, b, c and a, b, c to X, Y, Z.  The first mapping, f, sends 1 to b, 2  2 to c, and 3 to a.  The second relation, g, sends a and b to Z and c to X.  The bottom map, g circle f, sends 1 and 3 to Z and 2 to X.</p>
                <p>ID: sets-composition</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">1.2.9<span class="period">.</span></span><span class="space"> </span>Composition of maps</figcaption>
            </figure>
            <article class="example example-like" data-braille="example-like" id="UzL">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="QVy">Consider the functions <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> and <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> that are defined in Figure 1.2.9 (top). The composition of these functions, <nemeth class="inline">⠛⠘⠨⠡⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠉</nemeth>, is defined in Figure 1.2.9 (bottom).</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="AGU">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="xcH">Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠼⠆⠭⠬⠢</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠷⠋⠘⠨⠡⠛⠾⠷⠭⠾⠀⠨⠅⠀⠋⠷⠛⠷⠭⠾⠾⠀⠨⠅⠀⠷⠼⠆⠭⠬⠢⠾⠘⠆⠐⠀⠨⠅⠀⠼⠲⠭⠘⠆⠐⠬⠆⠴⠭⠬⠆⠢</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠼⠆⠭⠘⠆⠐⠬⠢</nemeth>
              </div>
              <p data-braille="continuation">. In general, order makes a difference; that is, in most cases <nemeth class="inline">⠋⠘⠨⠡⠛⠀⠌⠨⠅⠀⠛⠘⠨⠡⠋</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="MVm">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.12</span>
                <span class="period">.</span>
              </h6>
              <p id="djQ">Sometimes it is the case that <nemeth class="inline">⠋⠘⠨⠡⠛⠀⠨⠅⠀⠛⠘⠨⠡⠋</nemeth>. Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠣⠒⠜⠭⠻</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠷⠋⠘⠨⠡⠛⠾⠷⠭⠾⠀⠨⠅⠀⠋⠷⠛⠷⠭⠾⠾⠀⠨⠅⠀⠋⠷⠣⠒⠜⠭⠻⠾⠀⠨⠅⠀⠷⠣⠒⠜⠭⠻⠾⠘⠒⠐⠀⠨⠅⠀⠭</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠛⠷⠭⠘⠒⠐⠾⠀⠨⠅⠀⠣⠒⠜⠭⠘⠒⠐⠻⠀⠨⠅⠀⠭</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="tcv">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.13</span>
                <span class="period">.</span>
              </h6>
              <p id="JqZ">Given a <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, we can define a map <nemeth class="inline">⠠⠞⠰⠠⠁⠐⠒⠀⠸⠠⠗⠘⠆⠐⠀⠫⠕⠀⠸⠠⠗⠘⠆</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠁⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠁⠭⠬⠃⠽⠠⠀⠉⠭⠬⠙⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">for <nemeth class="inline">⠷⠭⠠⠀⠽⠾</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>. This is actually matrix multiplication; that is,</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾⠭⠀⠽⠀⠨⠅⠀⠁⠭⠬⠃⠽⠀⠉⠭⠬⠙⠽</nemeth>
              </div>
              <p data-braille="continuation">. Maps from <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠍</nemeth> given by matrices are called <dfn class="terminology">linear maps</dfn> or <dfn class="terminology">linear transformations</dfn>. </p>
            </article>
            <article class="example example-like" data-braille="example-like" id="ZjE">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.14</span>
                <span class="period">.</span>
              </h6>
              <p id="pyi">Suppose that <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>. Define a map <nemeth class="inline">⠨⠏⠒⠀⠠⠎⠀⠫⠕⠀⠠⠎</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠼⠂⠾⠀⠨⠅⠀⠼⠆⠠⠀⠏⠷⠼⠆⠾⠀⠨⠅⠀⠼⠂⠠⠀⠏⠷⠼⠒⠾⠀⠨⠅⠀⠼⠒</nemeth>
              </div>
              <p data-braille="continuation">. This is a bijective map. An alternative way to  write <nemeth class="inline">⠨⠏</nemeth> is</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠏⠷⠼⠂⠾⠀⠏⠷⠼⠆⠾⠀⠏⠷⠼⠒⠾⠠⠾⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠆⠀⠂⠀⠒⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. For any set <i class="one-letter">S</i>, a one-to-one and onto mapping <nemeth class="inline">⠨⠏⠒⠀⠠⠎⠀⠫⠕⠀⠠⠎</nemeth> is called a <dfn class="terminology">permutation</dfn> of <i class="one-letter">S</i>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="PPS">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.15</span>
                <span class="period">.</span>
              </h6>
              <p id="buD">Let <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth>, <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth>, and <nemeth class="inline">⠓⠒⠀⠠⠉⠀⠫⠕⠀⠠⠙</nemeth>. Then</p>
              <ol class="outerlist">
                <li>1. <p id="yYY">The composition of mappings is associative; that is, <nemeth class="inline">⠷⠓⠘⠨⠡⠛⠾⠘⠨⠡⠋⠀⠨⠅⠀⠓⠘⠨⠡⠷⠛⠘⠨⠡⠋⠾</nemeth>;</p></li>
                <li>2. <p id="fgh">If <i class="one-letter">f</i> and <i class="one-letter">g</i> are both one-to-one, then the mapping <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one;</p></li>
                <li>3. <p id="Lnq">If <i class="one-letter">f</i> and <i class="one-letter">g</i> are both onto, then the mapping <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is onto;</p></li>
                <li>4. <p id="ruz">If <i class="one-letter">f</i> and <i class="one-letter">g</i> are bijective, then so is <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="nXd">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="epj">We will prove (1) and (3). Part (2) is left as an exercise. Part (4) follows directly from (2) and (3).</p>
              <p id="Kws">(1) We must show that</p>
              <div class="displaymath">
                <nemeth>⠓⠘⠨⠡⠷⠛⠘⠨⠡⠋⠾⠀⠨⠅⠀⠷⠓⠘⠨⠡⠛⠾⠘⠨⠡⠋</nemeth>
              </div>
              <p data-braille="continuation">. For <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> we have</p>
              <div class="displaymath">
                <nemeth>⠷⠓⠘⠨⠡⠷⠛⠘⠨⠡⠋⠾⠾⠷⠁⠾⠀⠀⠨⠅⠀⠓⠷⠷⠛⠘⠨⠡⠋⠾⠷⠁⠾⠾⠀⠀⠀⠀⠨⠅⠀⠓⠷⠛⠷⠋⠷⠁⠾⠾⠾⠀⠀⠀⠀⠨⠅⠀⠷⠓⠘⠨⠡⠛⠾⠷⠋⠷⠁⠾⠾⠀⠀⠀⠀⠨⠅⠀⠷⠷⠓⠘⠨⠡⠛⠾⠘⠨⠡⠋⠾⠷⠁⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="qDB">(3) Assume that <i class="one-letter">f</i> and <i class="one-letter">g</i> are both onto functions. Given <nemeth class="inline">⠉⠀⠈⠑⠀⠠⠉</nemeth>, we must show that there exists an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> such that <nemeth class="inline">⠷⠛⠘⠨⠡⠋⠾⠷⠁⠾⠀⠨⠅⠀⠛⠷⠋⠷⠁⠾⠾⠀⠨⠅⠀⠉</nemeth>. However, since <i class="one-letter">g</i> is onto, there is an element <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> such that <nemeth class="inline">⠛⠷⠃⠾⠀⠨⠅⠀⠉</nemeth>. Similarly, there is an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth>. Accordingly,</p>
              <div class="displaymath">
                <nemeth>⠷⠛⠘⠨⠡⠋⠾⠷⠁⠾⠀⠨⠅⠀⠛⠷⠋⠷⠁⠾⠾⠀⠨⠅⠀⠛⠷⠃⠾⠀⠨⠅⠀⠉</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="jnx">If <i class="one-letter">S</i> is any set, we will use <nemeth class="inline">⠊⠙⠰⠠⠎</nemeth> or <nemeth class="inline">⠊⠙</nemeth> to denote the <dfn class="terminology">identity mapping</dfn>  from <i class="one-letter">S</i> to itself. Define this map by <nemeth class="inline">⠊⠙⠷⠎⠾⠀⠨⠅⠀⠎</nemeth> for all <nemeth class="inline">⠎⠀⠈⠑⠀⠠⠎</nemeth>. A map <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠁</nemeth> is an <dfn class="terminology">inverse mapping</dfn> of <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> if <nemeth class="inline">⠛⠘⠨⠡⠋⠀⠨⠅⠀⠊⠙⠰⠠⠁</nemeth> and <nemeth class="inline">⠋⠘⠨⠡⠛⠀⠨⠅⠀⠊⠙⠰⠠⠃</nemeth>; in other words, the inverse function of a function simply “undoes” the function. A map is said to be <dfn class="terminology">invertible</dfn> if it has an inverse. We usually write <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth> for the inverse of <i class="one-letter">f</i>. </p>
            <article class="example example-like" data-braille="example-like" id="FqN">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.16</span>
                <span class="period">.</span>
              </h6>
              <p id="VFr">The function <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒</nemeth> has inverse <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠭⠾⠀⠨⠅⠀⠣⠒⠜⠭⠻</nemeth> by Example 1.2.12.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="lxW">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.17</span>
                <span class="period">.</span>
              </h6>
              <p id="BMA">The natural logarithm and the exponential functions, <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠇⠝⠀⠭</nemeth> and <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠭⠾⠀⠨⠅⠀⠑⠘⠭</nemeth>, are inverses of each other provided that we are careful about choosing domains. Observe that</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠋⠘⠤⠼⠂⠐⠷⠭⠾⠾⠀⠨⠅⠀⠋⠷⠑⠘⠭⠐⠾⠀⠨⠅⠀⠇⠝⠀⠑⠘⠭⠐⠀⠨⠅⠀⠭</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠋⠘⠤⠼⠂⠐⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠋⠘⠤⠼⠂⠐⠷⠇⠝⠀⠭⠾⠀⠨⠅⠀⠑⠘⠇⠝⠀⠭⠐⠀⠨⠅⠀⠭</nemeth>
              </div>
              <p data-braille="continuation">whenever composition makes sense.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="RFf">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.18</span>
                <span class="period">.</span>
              </h6>
              <p id="hTJ">Suppose that</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠒⠀⠂⠠⠾⠀⠠⠷⠢⠀⠆⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then <i class="one-letter">A</i> defines a map from <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠁⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠼⠒⠭⠬⠽⠠⠀⠼⠢⠭⠬⠆⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">. We can find an inverse map of <nemeth class="inline">⠠⠞⠰⠠⠁</nemeth> by simply inverting the matrix <i class="one-letter">A</i>; that is, <nemeth class="inline">⠠⠞⠰⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠞⠰⠠⠁⠰⠘⠤⠼⠂</nemeth>. In this example,</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠼⠆⠀⠤⠼⠂⠠⠾⠀⠠⠷⠤⠼⠢⠀⠒⠠⠾⠆</nemeth>
              </div>
              <p data-braille="continuation">hence, the inverse map is given by</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠁⠘⠤⠼⠂⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠼⠆⠭⠤⠽⠠⠀⠤⠼⠢⠭⠬⠒⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">. It is easy to check that</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠁⠘⠤⠼⠂⠐⠘⠨⠡⠠⠞⠰⠠⠁⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠠⠞⠰⠠⠁⠐⠘⠨⠡⠠⠞⠰⠠⠁⠘⠤⠼⠂⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠭⠠⠀⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">. Not every map has an inverse. If we consider the map</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠃⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠼⠒⠭⠠⠀⠼⠴⠾</nemeth>
              </div>
              <p data-braille="continuation">given by the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠃⠀⠨⠅⠀⠠⠷⠼⠒⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, then an inverse map would have to be of the form</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠃⠘⠤⠼⠂⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠁⠭⠬⠃⠽⠠⠀⠉⠭⠬⠙⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠠⠞⠰⠠⠃⠐⠘⠨⠡⠠⠞⠰⠠⠃⠘⠤⠼⠂⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠼⠒⠁⠭⠬⠒⠃⠽⠠⠀⠼⠴⠾</nemeth>
              </div>
              <p data-braille="continuation">for all <i class="one-letter">x</i> and <i class="one-letter">y</i>. Clearly this is  impossible because <i class="one-letter">y</i> might not be <nemeth class="inline">⠼⠴</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="xMo">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.19</span>
                <span class="period">.</span>
              </h6>
              <p id="OaS">Given the permutation</p>
              <div class="displaymath">
                <nemeth>⠨⠏⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠆⠀⠒⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">on <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, it is easy to see that the permutation defined by</p>
              <div class="displaymath">
                <nemeth>⠨⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠒⠀⠂⠀⠆⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">is the inverse of <nemeth class="inline">⠨⠏</nemeth>. In fact, any bijective mapping possesses an inverse, as we will see in the next theorem.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="vXb">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.20</span>
                <span class="period">.</span>
              </h6>
              <p id="HBM">A mapping is invertible if and only if it is both one-to-one and onto.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Uem">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="WKK">Suppose first that <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> is invertible with inverse <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠁</nemeth>. Then <nemeth class="inline">⠛⠘⠨⠡⠋⠀⠨⠅⠀⠊⠙⠰⠠⠁</nemeth> is the identity map; that is, <nemeth class="inline">⠛⠷⠋⠷⠁⠾⠾⠀⠨⠅⠀⠁</nemeth>. If <nemeth class="inline">⠁⠂⠠⠀⠁⠆⠀⠈⠑⠀⠠⠁</nemeth> with <nemeth class="inline">⠋⠷⠁⠂⠾⠀⠨⠅⠀⠋⠷⠁⠆⠾</nemeth>, then <nemeth class="inline">⠁⠂⠀⠨⠅⠀⠛⠷⠋⠷⠁⠂⠾⠾⠀⠨⠅⠀⠛⠷⠋⠷⠁⠆⠾⠾⠀⠨⠅⠀⠁⠆</nemeth>. Consequently, <i class="one-letter">f</i> is one-to-one. Now suppose that <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth>. To show that <i class="one-letter">f</i> is onto, it is necessary to find an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth>, but <nemeth class="inline">⠋⠷⠛⠷⠃⠾⠾⠀⠨⠅⠀⠃</nemeth> with <nemeth class="inline">⠛⠷⠃⠾⠀⠈⠑⠀⠠⠁</nemeth>. Let <nemeth class="inline">⠁⠀⠨⠅⠀⠛⠷⠃⠾</nemeth>.</p>
              <p id="CRT">Conversely, let <i class="one-letter">f</i> be bijective and let <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth>. Since <i class="one-letter">f</i> is onto, there exists an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth>. Because <i class="one-letter">f</i> is one-to-one, <i class="one-letter">a</i> must be unique. Define <i class="one-letter">g</i> by letting <nemeth class="inline">⠛⠷⠃⠾⠀⠨⠅⠀⠁</nemeth>. We have now constructed the inverse of <i class="one-letter">f</i>.</p>
            </article>
          </section>
          <section class="subsection" id="VFe">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.2.3</span> <span class="title">Equivalence Relations and Partitions</span></div>
            <p id="vBP">A fundamental notion in mathematics is that of equality. We can generalize equality with equivalence relations and equivalence classes. An <dfn class="terminology">equivalence relation</dfn>  on a set <i class="one-letter">X</i> is a relation <nemeth class="inline">⠠⠗⠀⠸⠐⠅⠀⠠⠭⠈⠡⠠⠭</nemeth> such that</p>
            <ul class="outerlist">
              <li>• <p id="XBI"><nemeth class="inline">⠷⠭⠠⠀⠭⠾⠀⠈⠑⠀⠠⠗</nemeth> for all <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> (<dfn class="terminology">reflexive property</dfn>);</p></li>
              <li>• <p id="DIR"><nemeth class="inline">⠷⠭⠠⠀⠽⠾⠀⠈⠑⠀⠠⠗</nemeth> implies <nemeth class="inline">⠷⠽⠠⠀⠭⠾⠀⠈⠑⠀⠠⠗</nemeth> (<dfn class="terminology">symmetric property</dfn>);</p></li>
              <li>• <p id="jQa"><nemeth class="inline">⠷⠭⠠⠀⠽⠾</nemeth> and <nemeth class="inline">⠷⠽⠠⠀⠵⠾⠀⠈⠑⠀⠠⠗</nemeth> imply <nemeth class="inline">⠷⠭⠠⠀⠵⠾⠀⠈⠑⠀⠠⠗</nemeth> (<dfn class="terminology">transitive property</dfn>).</p></li>
            </ul>
            <p data-braille="continuation">Given an equivalence relation <i class="one-letter">R</i> on a set <i class="one-letter">X</i>, we usually write <nemeth class="inline">⠭⠈⠱⠽</nemeth> instead of <nemeth class="inline">⠷⠭⠠⠀⠽⠾⠀⠈⠑⠀⠠⠗</nemeth>. If the equivalence relation already has an associated notation such as <nemeth class="inline">⠀⠨⠅⠀</nemeth>, <nemeth class="inline">⠀⠸⠇⠀</nemeth>, or <nemeth class="inline">⠀⠈⠱⠈⠱⠀</nemeth>, we will use that notation.</p>
            <article class="example example-like" data-braille="example-like" id="qhP">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.21</span>
                <span class="period">.</span>
              </h6>
              <p id="uib">Let <i class="one-letter">p</i>, <i class="one-letter">q</i>, <i class="one-letter">r</i>, and <i class="one-letter">s</i> be integers, where <i class="one-letter">q</i> and <i class="one-letter">s</i> are nonzero. Define <nemeth class="inline">⠏⠸⠌⠟⠈⠱⠗⠸⠌⠎</nemeth> if <nemeth class="inline">⠏⠎⠀⠨⠅⠀⠟⠗</nemeth>. Clearly <nemeth class="inline">⠈⠱</nemeth> is reflexive and symmetric. To show that it is also transitive, suppose that <nemeth class="inline">⠏⠸⠌⠟⠈⠱⠗⠸⠌⠎</nemeth> and <nemeth class="inline">⠗⠸⠌⠎⠈⠱⠞⠸⠌⠥</nemeth>, with <i class="one-letter">q</i>, <i class="one-letter">s</i>, and <i class="one-letter">u</i> all nonzero. Then <nemeth class="inline">⠏⠎⠀⠨⠅⠀⠟⠗</nemeth> and <nemeth class="inline">⠗⠥⠀⠨⠅⠀⠎⠞</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠏⠎⠥⠀⠨⠅⠀⠟⠗⠥⠀⠨⠅⠀⠟⠎⠞</nemeth>
              </div>
              <p data-braille="continuation">. Since <nemeth class="inline">⠎⠀⠌⠨⠅⠀⠼⠴</nemeth>, <nemeth class="inline">⠏⠥⠀⠨⠅⠀⠟⠞</nemeth>. Consequently, <nemeth class="inline">⠏⠸⠌⠟⠈⠱⠞⠸⠌⠥</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="WoY">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.22</span>
                <span class="period">.</span>
              </h6>
              <p id="apk">Suppose that <i class="one-letter">f</i> and <i class="one-letter">g</i> are differentiable functions on <nemeth class="inline">⠸⠠⠗</nemeth>. We can define an equivalence relation on such functions by letting <nemeth class="inline">⠋⠷⠭⠾⠈⠱⠛⠷⠭⠾</nemeth> if <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠛⠘⠄⠐⠷⠭⠾</nemeth>. It is clear that <nemeth class="inline">⠈⠱</nemeth> is both reflexive and symmetric. To demonstrate transitivity, suppose that <nemeth class="inline">⠋⠷⠭⠾⠈⠱⠛⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠈⠱⠓⠷⠭⠾</nemeth>. From calculus we know that <nemeth class="inline">⠋⠷⠭⠾⠤⠛⠷⠭⠾⠀⠨⠅⠀⠉⠂</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠤⠓⠷⠭⠾⠀⠨⠅⠀⠉⠆</nemeth>, where <nemeth class="inline">⠉⠂</nemeth> and <nemeth class="inline">⠉⠆</nemeth> are both constants. Hence,</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠤⠓⠷⠭⠾⠀⠨⠅⠀⠷⠋⠷⠭⠾⠤⠛⠷⠭⠾⠾⠬⠷⠛⠷⠭⠾⠤⠓⠷⠭⠾⠾⠀⠨⠅⠀⠉⠂⠬⠉⠆</nemeth>
              </div>
              <p data-braille="continuation">and <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾⠤⠓⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth>. Therefore, <nemeth class="inline">⠋⠷⠭⠾⠈⠱⠓⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Cwh">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.23</span>
                <span class="period">.</span>
              </h6>
              <p id="Gwt">For <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾</nemeth> and <nemeth class="inline">⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>, define <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠈⠱⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> if <nemeth class="inline">⠭⠂⠘⠆⠐⠬⠽⠂⠘⠆⠐⠀⠨⠅⠀⠭⠆⠘⠆⠐⠬⠽⠆⠘⠆</nemeth>. Then <nemeth class="inline">⠈⠱</nemeth> is an equivalence relation on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="iDq">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.24</span>
                <span class="period">.</span>
              </h6>
              <p id="mDC">Let <i class="one-letter">A</i> and <i class="one-letter">B</i> be <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in the real numbers. We can define an equivalence relation on the set of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices, by saying <nemeth class="inline">⠠⠁⠈⠱⠠⠃</nemeth> if there exists an invertible matrix <i class="one-letter">P</i> such that <nemeth class="inline">⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠃</nemeth>. For example, if</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠠⠾⠀⠠⠷⠤⠼⠂⠀⠂⠠⠾⠁⠝⠙⠠⠃⠀⠨⠅⠀⠠⠷⠤⠼⠂⠦⠀⠒⠒⠠⠾⠀⠠⠷⠤⠼⠂⠂⠀⠆⠴⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, then <nemeth class="inline">⠠⠁⠈⠱⠠⠃</nemeth> since <nemeth class="inline">⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠃</nemeth> for</p>
              <div class="displaymath">
                <nemeth>⠠⠏⠀⠨⠅⠀⠠⠷⠼⠆⠀⠢⠠⠾⠀⠠⠷⠂⠀⠒⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Let <i class="one-letter">I</i> be the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> identity matrix; that is,</p>
              <div class="displaymath">
                <nemeth>⠠⠊⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then <nemeth class="inline">⠠⠊⠠⠁⠠⠊⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠊⠠⠁⠠⠊⠀⠨⠅⠀⠠⠁</nemeth>; therefore, the relation is reflexive. To show symmetry, suppose that <nemeth class="inline">⠠⠁⠈⠱⠠⠃</nemeth>. Then there exists an invertible matrix <i class="one-letter">P</i> such that <nemeth class="inline">⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠃</nemeth>. So</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠏⠘⠤⠼⠂⠐⠠⠃⠠⠏⠀⠨⠅⠀⠠⠏⠘⠤⠼⠂⠐⠠⠃⠷⠠⠏⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. Finally, suppose that <nemeth class="inline">⠠⠁⠈⠱⠠⠃</nemeth> and <nemeth class="inline">⠠⠃⠈⠱⠠⠉</nemeth>. Then there exist invertible matrices <i class="one-letter">P</i> and <i class="one-letter">Q</i> such that <nemeth class="inline">⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠃</nemeth> and  <nemeth class="inline">⠠⠟⠠⠃⠠⠟⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠉</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠠⠉⠀⠨⠅⠀⠠⠟⠠⠃⠠⠟⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠟⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠠⠟⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠠⠟⠠⠏⠾⠠⠁⠷⠠⠟⠠⠏⠾⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">, the relation is transitive. Two matrices that are equivalent in this manner are said to be <dfn class="terminology">similar</dfn>. </p>
            </article>
            <p id="bIY">A <dfn class="terminology">partition</dfn>  <nemeth class="inline">⠈⠠⠏</nemeth> of a set <i class="one-letter">X</i> is a collection of nonempty sets <nemeth class="inline">⠠⠭⠂⠠⠀⠠⠭⠆⠠⠀⠄⠄⠄</nemeth> such that <nemeth class="inline">⠠⠭⠰⠊⠐⠨⠩⠠⠭⠰⠚⠐⠀⠨⠅⠀⠸⠴</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth> and <nemeth class="inline">⠐⠨⠬⠩⠅⠻⠠⠭⠰⠅⠐⠀⠨⠅⠀⠠⠭</nemeth>. Let <nemeth class="inline">⠈⠱</nemeth> be an equivalence relation on a set <i class="one-letter">X</i> and let <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>. Then <nemeth class="inline">⠈⠷⠭⠈⠾⠀⠨⠅⠀⠨⠷⠽⠀⠈⠑⠀⠠⠭⠒⠀⠽⠈⠱⠭⠨⠾</nemeth> is called the <dfn class="terminology">equivalence class</dfn>  of <i class="one-letter">x</i>. We will see that an equivalence relation gives rise to a partition via equivalence classes. Also, whenever a partition of a set exists, there is some natural underlying equivalence relation, as the following theorem demonstrates.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="dTx">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.25</span>
                <span class="period">.</span>
              </h6>
              <p id="nIV">Given an equivalence relation <nemeth class="inline">⠈⠱</nemeth> on a set <i class="one-letter">X</i>, the equivalence classes of <i class="one-letter">X</i> form a partition of <i class="one-letter">X</i>. Conversely, if <nemeth class="inline">⠈⠠⠏⠀⠨⠅⠀⠨⠷⠠⠭⠰⠊⠐⠨⠾</nemeth> is a partition of a set <i class="one-letter">X</i>, then there is an equivalence relation on <i class="one-letter">X</i> with equivalence classes <nemeth class="inline">⠠⠭⠰⠊</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Alv">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="iZc">Suppose there exists an equivalence relation <nemeth class="inline">⠈⠱</nemeth> on the set <i class="one-letter">X</i>. For any <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>, the reflexive property shows that <nemeth class="inline">⠭⠀⠈⠑⠀⠈⠷⠭⠈⠾</nemeth> and so <nemeth class="inline">⠈⠷⠭⠈⠾</nemeth> is nonempty. Clearly <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠐⠨⠬⠩⠭⠀⠈⠑⠀⠠⠭⠻⠈⠷⠭⠈⠾</nemeth>. Now let <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠭</nemeth>. We need to show that either <nemeth class="inline">⠈⠷⠭⠈⠾⠀⠨⠅⠀⠈⠷⠽⠈⠾</nemeth> or <nemeth class="inline">⠈⠷⠭⠈⠾⠨⠩⠈⠷⠽⠈⠾⠀⠨⠅⠀⠸⠴</nemeth>. Suppose that the intersection of <nemeth class="inline">⠈⠷⠭⠈⠾</nemeth> and <nemeth class="inline">⠈⠷⠽⠈⠾</nemeth> is not empty and that <nemeth class="inline">⠵⠀⠈⠑⠀⠈⠷⠭⠈⠾⠨⠩⠈⠷⠽⠈⠾</nemeth>. Then <nemeth class="inline">⠵⠈⠱⠭</nemeth> and <nemeth class="inline">⠵⠈⠱⠽</nemeth>. By symmetry and transitivity <nemeth class="inline">⠭⠈⠱⠽</nemeth>; hence, <nemeth class="inline">⠈⠷⠭⠈⠾⠀⠸⠐⠅⠀⠈⠷⠽⠈⠾</nemeth>. Similarly, <nemeth class="inline">⠈⠷⠽⠈⠾⠀⠸⠐⠅⠀⠈⠷⠭⠈⠾</nemeth> and so <nemeth class="inline">⠈⠷⠭⠈⠾⠀⠨⠅⠀⠈⠷⠽⠈⠾</nemeth>. Therefore, any two equivalence classes are either disjoint or exactly the same.</p>
              <p id="Pgl">Conversely, suppose that <nemeth class="inline">⠈⠠⠏⠀⠨⠅⠀⠨⠷⠠⠭⠰⠊⠐⠨⠾</nemeth> is a partition of a set <i class="one-letter">X</i>. Let two elements be equivalent if they are in the same partition. Clearly, the relation is reflexive. If <i class="one-letter">x</i> is in the same partition as <i class="one-letter">y</i>, then <i class="one-letter">y</i> is in the same partition as <i class="one-letter">x</i>, so <nemeth class="inline">⠭⠈⠱⠽</nemeth> implies <nemeth class="inline">⠽⠈⠱⠭</nemeth>. Finally, if <i class="one-letter">x</i> is in the same partition as <i class="one-letter">y</i> and <i class="one-letter">y</i> is in the same partition as <i class="one-letter">z</i>, then <i class="one-letter">x</i> must be in the same partition as <i class="one-letter">z</i>, and transitivity holds.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="KaG">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.26</span>
                <span class="period">.</span>
              </h6>
              <p id="zXn">Two equivalence classes of an equivalence relation are either disjoint or equal.</p>
            </article>
            <p id="HQh">Let us examine some of the partitions given by the equivalence classes in the last set of examples.</p>
            <article class="example example-like" data-braille="example-like" id="OKz">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.27</span>
                <span class="period">.</span>
              </h6>
              <p id="SKL">In the equivalence relation in Example 1.2.21, two pairs of integers, <nemeth class="inline">⠷⠏⠠⠀⠟⠾</nemeth> and <nemeth class="inline">⠷⠗⠠⠀⠎⠾</nemeth>, are in the same equivalence class when they reduce to the same fraction in its lowest terms.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="uRI">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.28</span>
                <span class="period">.</span>
              </h6>
              <p id="yRU">In the equivalence relation in Example 1.2.22, two functions <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> are in the same partition when they differ by a constant.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="aYR">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.29</span>
                <span class="period">.</span>
              </h6>
              <p id="eZd">We defined an equivalence class on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> by <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠈⠱⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> if <nemeth class="inline">⠭⠂⠘⠆⠐⠬⠽⠂⠘⠆⠐⠀⠨⠅⠀⠭⠆⠘⠆⠐⠬⠽⠆⠘⠆</nemeth>. Two pairs of real numbers are in the same partition when they lie on the same circle about the origin.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Hga">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.30</span>
                <span class="period">.</span>
              </h6>
              <p id="Lgm">Let <i class="one-letter">r</i> and <i class="one-letter">s</i> be two integers and suppose that <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>. We say that <i class="one-letter">r</i> is <dfn class="terminology">congruent</dfn> to <i class="one-letter">s</i> <dfn class="terminology">modulo</dfn> <i class="one-letter">n</i>, or <i class="one-letter">r</i> is congruent to <i class="one-letter">s</i> mod <i class="one-letter">n</i>, if <nemeth class="inline">⠗⠤⠎</nemeth> is evenly divisible by <i class="one-letter">n</i>; that is, <nemeth class="inline">⠗⠤⠎⠀⠨⠅⠀⠝⠅</nemeth>  for some <nemeth class="inline">⠅⠀⠈⠑⠀⠸⠠⠵</nemeth>. In this case we write <nemeth class="inline">⠗⠀⠸⠇⠀⠎⠷⠍⠕⠙⠀⠝⠾</nemeth>.  For example, <nemeth class="inline">⠼⠲⠂⠀⠸⠇⠀⠼⠂⠶⠷⠍⠕⠙⠀⠦⠾</nemeth> since <nemeth class="inline">⠼⠲⠂⠤⠂⠶⠀⠨⠅⠀⠼⠆⠲</nemeth> is divisible by <nemeth class="inline">⠼⠦</nemeth>. We claim that congruence modulo <i class="one-letter">n</i> forms an equivalence relation of <nemeth class="inline">⠸⠠⠵</nemeth>. Certainly any integer <i class="one-letter">r</i> is equivalent to itself since <nemeth class="inline">⠗⠤⠗⠀⠨⠅⠀⠼⠴</nemeth> is divisible by <i class="one-letter">n</i>. We will now show that the relation is symmetric. If <nemeth class="inline">⠗⠀⠸⠇⠀⠎⠷⠍⠕⠙⠀⠝⠾</nemeth>, then <nemeth class="inline">⠗⠤⠎⠀⠨⠅⠀⠤⠷⠎⠤⠗⠾</nemeth> is divisible by <i class="one-letter">n</i>. So <nemeth class="inline">⠎⠤⠗</nemeth> is divisible by <i class="one-letter">n</i> and <nemeth class="inline">⠎⠀⠸⠇⠀⠗⠷⠍⠕⠙⠀⠝⠾</nemeth>. Now suppose that <nemeth class="inline">⠗⠀⠸⠇⠀⠎⠷⠍⠕⠙⠀⠝⠾</nemeth> and <nemeth class="inline">⠎⠀⠸⠇⠀⠞⠷⠍⠕⠙⠀⠝⠾</nemeth>. Then there exist integers <i class="one-letter">k</i> and <i class="one-letter">l</i> such that <nemeth class="inline">⠗⠤⠎⠀⠨⠅⠀⠅⠝</nemeth> and <nemeth class="inline">⠎⠤⠞⠀⠨⠅⠀⠇⠝</nemeth>. To show transitivity, it is necessary to prove that <nemeth class="inline">⠗⠤⠞</nemeth> is divisible by <i class="one-letter">n</i>. However,</p>
              <div class="displaymath">
                <nemeth>⠗⠤⠞⠀⠨⠅⠀⠗⠤⠎⠬⠎⠤⠞⠀⠨⠅⠀⠅⠝⠬⠇⠝⠀⠨⠅⠀⠷⠅⠬⠇⠾⠝</nemeth>
              </div>
              <p data-braille="continuation">, and so <nemeth class="inline">⠗⠤⠞</nemeth> is divisible by <i class="one-letter">n</i>.</p>
              <p id="rnv">If we consider the equivalence relation established by the integers modulo <nemeth class="inline">⠼⠒</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠼⠴⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠒⠠⠀⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠄⠄⠄⠨⠾⠠⠀⠈⠷⠂⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠆⠠⠀⠼⠂⠠⠀⠼⠲⠠⠀⠼⠶⠠⠀⠄⠄⠄⠨⠾⠠⠀⠈⠷⠆⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠆⠠⠀⠼⠢⠠⠀⠼⠦⠠⠀⠄⠄⠄⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Notice that <nemeth class="inline">⠈⠷⠼⠴⠈⠾⠨⠬⠈⠷⠂⠈⠾⠨⠬⠈⠷⠆⠈⠾⠀⠨⠅⠀⠸⠠⠵</nemeth> and also that the sets are disjoint. The sets <nemeth class="inline">⠈⠷⠼⠴⠈⠾</nemeth>, <nemeth class="inline">⠈⠷⠼⠂⠈⠾</nemeth>, and <nemeth class="inline">⠈⠷⠼⠆⠈⠾</nemeth> form a partition of the integers.</p>
              <p id="XuE">The integers modulo <i class="one-letter">n</i> are a very important example in the study of abstract algebra and will become quite useful in our investigation of various algebraic structures such as groups and rings. In our discussion of the integers modulo <i class="one-letter">n</i> we have actually assumed a result known as the division algorithm, which will be stated and proved in Chapter 2.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="ibN">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">1.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="Kix">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="OSq">What do relations and mappings have in common?</p>
          </article>
          <article class="exercise exercise-like" id="qpG">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="uZz">What makes relations and mappings different?</p>
          </article>
          <article class="exercise exercise-like" id="WwP">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="bgI">State carefully the three defining properties of an equivalence relation. In other words, do not just <em class="emphasis">name</em> the properties, give their definitions.</p>
          </article>
          <article class="exercise exercise-like" id="CDY">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="HnR">What is the big deal about equivalence relations? (Hint: Partitions.)</p>
          </article>
          <article class="exercise exercise-like" id="iLh">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="nva">Describe a general technique for proving that two sets are equal.</p>
          </article>
        </section>
        <section class="exercises" id="mDp">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">1.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="nnj">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="AHh">Suppose that</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠸⠠⠝⠁⠝⠙⠭⠊⠎⠀⠑⠧⠑⠝⠨⠾⠠⠀⠠⠃⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠸⠠⠝⠁⠝⠙⠭⠊⠎⠀⠏⠗⠊⠍⠑⠨⠾⠠⠀⠠⠉⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠸⠠⠝⠁⠝⠙⠭⠊⠎⠀⠁⠀⠍⠥⠇⠞⠊⠏⠇⠑⠀⠕⠋⠼⠢⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Describe each of the following sets.</p>
            <ol class="outerlist">
              <li>a. <p id="PXj"><nemeth class="inline">⠠⠁⠨⠩⠠⠃</nemeth></p></li>
              <li>b. <p id="wes"><nemeth class="inline">⠠⠃⠨⠩⠠⠉</nemeth></p></li>
              <li>c. <p id="clB"><nemeth class="inline">⠠⠁⠨⠬⠠⠃</nemeth></p></li>
              <li>d. <p id="IsK"><nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="sGW"><span class="type">Hint</span>:<p id="rIU">(a) <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠨⠷⠼⠆⠨⠾</nemeth>; (b) <nemeth class="inline">⠠⠃⠨⠩⠠⠉⠀⠨⠅⠀⠨⠷⠼⠢⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Tus">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="gOq">If <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>, <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠨⠷⠭⠨⠾</nemeth>, and <nemeth class="inline">⠠⠙⠀⠨⠅⠀⠸⠴</nemeth>, list all of the elements in each of the following sets.</p>
            <ol class="outerlist">
              <li>a. <p id="NcD"><nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth></p></li>
              <li>b. <p id="tjM"><nemeth class="inline">⠠⠃⠈⠡⠠⠁</nemeth></p></li>
              <li>c. <p id="ZqV"><nemeth class="inline">⠠⠁⠈⠡⠠⠃⠈⠡⠠⠉</nemeth></p></li>
              <li>d. <p id="Fye"><nemeth class="inline">⠠⠁⠈⠡⠠⠙</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="EVo"><span class="type">Hint</span>:<p id="XQd">(a) <nemeth class="inline">⠠⠁⠈⠡⠠⠃⠀⠨⠅⠀⠨⠷⠷⠁⠠⠀⠼⠂⠾⠠⠀⠷⠁⠠⠀⠼⠆⠾⠠⠀⠷⠁⠠⠀⠼⠒⠾⠠⠀⠷⠃⠠⠀⠼⠂⠾⠠⠀⠷⠃⠠⠀⠼⠆⠾⠠⠀⠷⠃⠠⠀⠼⠒⠾⠠⠀⠷⠉⠠⠀⠼⠂⠾⠠⠀⠷⠉⠠⠀⠼⠆⠾⠠⠀⠷⠉⠠⠀⠼⠒⠾⠨⠾</nemeth>; (d) <nemeth class="inline">⠠⠁⠈⠡⠠⠙⠀⠨⠅⠀⠸⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="zBB">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="MVz">Find an example of two nonempty sets <i class="one-letter">A</i> and <i class="one-letter">B</i> for which <nemeth class="inline">⠠⠁⠈⠡⠠⠃⠀⠨⠅⠀⠠⠃⠈⠡⠠⠁</nemeth> is true.</p>
          </article>
          <article class="exercise exercise-like" id="fIK">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="tcI">Prove <nemeth class="inline">⠠⠁⠨⠬⠸⠴⠀⠨⠅⠀⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠸⠴⠀⠨⠅⠀⠸⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LPT">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ZjR">Prove <nemeth class="inline">⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠠⠃⠨⠬⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠠⠃⠨⠩⠠⠁</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="rXc">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="Fra">Prove <nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="JFh"><span class="type">Hint</span>:<p id="DXm">If <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth>, then either <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth> or <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠃⠨⠩⠠⠉</nemeth>. Thus, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth> and <nemeth class="inline">⠠⠁⠨⠬⠠⠉</nemeth>. Hence, <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>. Therefore, <nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠸⠐⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>. Conversely, if <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>, then <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth> and <nemeth class="inline">⠠⠁⠨⠬⠠⠉</nemeth>. Thus, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth> or <i class="one-letter">x</i> is in both <i class="one-letter">B</i> and <i class="one-letter">C</i>. So <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth> and therefore <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾⠀⠸⠐⠅⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth>. Hence, <nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Yel">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="lyj">Prove <nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠨⠩⠠⠉⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Elu">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="RFs">Prove <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠃</nemeth> if and only if <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠠⠁</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ksD">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="xMB">Prove <nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠘⠄⠐⠀⠨⠅⠀⠠⠁⠘⠄⠐⠨⠬⠠⠃⠄</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="QzM">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="dTK">Prove <nemeth class="inline">⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠬⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Opa"><span class="type">Hint</span>:<p id="kev"><nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠬⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠨⠩⠠⠃⠘⠄⠐⠾⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠈⠷⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠃⠘⠄⠐⠾⠈⠾⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠠⠁⠨⠬⠠⠃</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="wGV">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="KaT">Prove <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠈⠡⠠⠉⠀⠨⠅⠀⠷⠠⠁⠈⠡⠠⠉⠾⠨⠬⠷⠠⠃⠈⠡⠠⠉⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="cOe">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="qic">Prove <nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠀⠨⠅⠀⠸⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="IVn">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="Wpl">Prove <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠀⠨⠅⠀⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="pcw">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="Cwu">Prove <nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠉⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="SYT"><span class="type">Hint</span>:<p id="QlE"><nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾⠘⠄⠐⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠁⠾⠨⠩⠷⠠⠃⠘⠄⠐⠨⠩⠠⠉⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠘⠄⠐⠾⠨⠩⠷⠠⠁⠨⠩⠠⠉⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠉⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="VjF">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="iDD">Prove <nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠁⠨⠩⠠⠉⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="BqO">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="OKM">Prove <nemeth class="inline">⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠬⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠁⠨⠩⠠⠃⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="hxX">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="uRV">Which of the following relations <nemeth class="inline">⠋⠒⠀⠸⠠⠟⠀⠫⠕⠀⠸⠠⠟</nemeth> define a mapping? In each case, supply a reason why <i class="one-letter">f</i> is or is not a mapping.</p>
            <ol class="outerlist">
              <li>a. <p id="KhX"><nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠹⠏⠬⠂⠌⠏⠤⠆⠼</nemeth></p></li>
              <li>b. <p id="qpg"><nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠹⠒⠏⠌⠒⠟⠼</nemeth></p></li>
              <li>c. <p id="Wwp"><nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠹⠏⠬⠟⠌⠟⠘⠆⠐⠼</nemeth></p></li>
              <li>d. <p id="CDy"><nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠹⠒⠏⠘⠆⠐⠌⠶⠟⠘⠆⠐⠼⠤⠹⠏⠌⠟⠼</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="rBD"><span class="type">Hint</span>:<p id="wsN">(a) Not a map since <nemeth class="inline">⠋⠷⠆⠸⠌⠒⠾</nemeth> is undefined; (b) this is a map; (c) not a map, since <nemeth class="inline">⠋⠷⠂⠸⠌⠆⠾⠀⠨⠅⠀⠼⠒⠸⠌⠲</nemeth> but <nemeth class="inline">⠋⠷⠆⠸⠌⠲⠾⠀⠨⠅⠀⠼⠒⠸⠌⠦</nemeth>; (d) this is a map.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NFg">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="aZe">Determine which of the following functions are one-to-one and which are onto. If the function is not onto, determine its range.</p>
            <ol class="outerlist">
              <li>a. <p id="iKH"><nemeth class="inline">⠋⠒⠀⠸⠠⠗⠀⠫⠕⠀⠸⠠⠗</nemeth> defined by <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠑⠘⠭</nemeth></p></li>
              <li>b. <p id="ORQ"><nemeth class="inline">⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠵</nemeth> defined by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠝⠘⠆⠐⠬⠒</nemeth></p></li>
              <li>c. <p id="uYZ"><nemeth class="inline">⠋⠒⠀⠸⠠⠗⠀⠫⠕⠀⠸⠠⠗</nemeth> defined by <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠎⠊⠝⠀⠭</nemeth></p></li>
              <li>d. <p id="bgi"><nemeth class="inline">⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠵</nemeth> defined by <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="DPV"><span class="type">Hint</span>:<p id="czW">(a) <i class="one-letter">f</i> is one-to-one but not onto. <nemeth class="inline">⠋⠷⠸⠠⠗⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠭⠀⠨⠂⠀⠼⠴⠨⠾</nemeth>. (c) <i class="one-letter">f</i> is neither one-to-one nor onto. <nemeth class="inline">⠋⠷⠸⠠⠗⠾⠀⠨⠅⠀⠨⠷⠭⠒⠀⠤⠼⠂⠀⠐⠅⠱⠀⠭⠀⠐⠅⠱⠀⠼⠂⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="tMp">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="Hgn">Let <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> and <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> be invertible mappings; that is, mappings such that <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth> and <nemeth class="inline">⠛⠘⠤⠼⠂</nemeth> exist. Show that <nemeth class="inline">⠷⠛⠘⠨⠡⠋⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠋⠘⠤⠼⠂⠐⠘⠨⠡⠛⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ZTy">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <ol class="outerlist">
              <li>a. <p id="Hnr">Define a function <nemeth class="inline">⠋⠒⠀⠸⠠⠝⠀⠫⠕⠀⠸⠠⠝</nemeth> that is one-to-one but not onto.</p></li>
              <li>b. <p id="nuA">Define a function <nemeth class="inline">⠋⠒⠀⠸⠠⠝⠀⠫⠕⠀⠸⠠⠝</nemeth> that is onto but not one-to-one.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="wlw"><span class="type">Hint</span>:<p id="IHf">(a) <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠝⠬⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GaH">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="TuF">Prove the relation defined on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> by <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠈⠱⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> if <nemeth class="inline">⠭⠂⠘⠆⠐⠬⠽⠂⠘⠆⠐⠀⠨⠅⠀⠭⠆⠘⠆⠐⠬⠽⠆⠘⠆</nemeth> is an equivalence relation.</p>
          </article>
          <article class="exercise exercise-like" id="mhQ">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="zBO">Let <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> and <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> be maps.</p>
            <ol class="outerlist">
              <li>a. <p id="TBJ">If <i class="one-letter">f</i> and <i class="one-letter">g</i> are both one-to-one functions, show that <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one.</p></li>
              <li>b. <p id="zIS">If <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is onto, show that <i class="one-letter">g</i> is onto.</p></li>
              <li>c. <p id="fQb">If <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one, show that <i class="one-letter">f</i> is one-to-one.</p></li>
              <li>d. <p id="LXk">If <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one and <i class="one-letter">f</i> is onto, show that <i class="one-letter">g</i> is one-to-one.</p></li>
              <li>e. <p id="set">If <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is onto and <i class="one-letter">g</i> is one-to-one, show that <i class="one-letter">f</i> is onto.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="oGX"><span class="type">Hint</span>:<p id="oOo">(a) Let <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠁</nemeth>. Then <nemeth class="inline">⠛⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠽⠾⠀⠨⠅⠀⠛⠷⠋⠷⠽⠾⠾</nemeth>. Thus, <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠋⠷⠽⠾</nemeth> and <nemeth class="inline">⠭⠀⠨⠅⠀⠽</nemeth>, so <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one. (b) Let <nemeth class="inline">⠉⠀⠈⠑⠀⠠⠉</nemeth>, then <nemeth class="inline">⠉⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾</nemeth> for some <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth>. Since <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠃</nemeth>, <i class="one-letter">g</i> is onto.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="SoZ">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="fIX">Define a function on the real numbers by</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠹⠭⠬⠂⠌⠭⠤⠂⠼</nemeth>
            </div>
            <p data-braille="continuation">. What are the domain and range of <i class="one-letter">f</i>? What is the inverse of <i class="one-letter">f</i>? Compute <nemeth class="inline">⠋⠘⠨⠡⠋⠘⠤⠼⠂</nemeth> and <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠘⠨⠡⠋</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="AVp"><span class="type">Hint</span>:<p id="UVx"><nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠭⠾⠀⠨⠅⠀⠷⠭⠬⠂⠾⠸⠌⠷⠭⠤⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ywi">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="LQg">Let <nemeth class="inline">⠋⠒⠀⠠⠭⠀⠫⠕⠀⠠⠽</nemeth> be a map with <nemeth class="inline">⠠⠁⠂⠠⠀⠠⠁⠆⠀⠸⠐⠅⠀⠠⠭</nemeth> and <nemeth class="inline">⠠⠃⠂⠠⠀⠠⠃⠆⠀⠸⠐⠅⠀⠠⠽</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="cVv">Prove <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾⠀⠨⠅⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>.</p></li>
              <li>b. <p id="JcE">Prove <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠩⠠⠁⠆⠾⠀⠸⠐⠅⠀⠋⠷⠠⠁⠂⠾⠨⠩⠋⠷⠠⠁⠆⠾</nemeth>. Give an example in which equality fails.</p></li>
              <li>c. <p id="pjN">Prove <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠨⠬⠠⠃⠆⠾⠀⠨⠅⠀⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠾⠨⠬⠋⠘⠤⠼⠂⠐⠷⠠⠃⠆⠾</nemeth>, where</p><div class="displaymath"><nemeth>⠋⠘⠤⠼⠂⠐⠷⠠⠃⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠠⠭⠒⠀⠋⠷⠭⠾⠀⠈⠑⠀⠠⠃⠨⠾</nemeth></div><p data-braille="continuation">.</p></li>
              <li>d. <p id="VqW">Prove <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠨⠩⠠⠃⠆⠾⠀⠨⠅⠀⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠾⠨⠩⠋⠘⠤⠼⠂⠐⠷⠠⠃⠆⠾</nemeth>.</p></li>
              <li>e. <p id="Byf">Prove <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠽⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠂⠾⠀⠨⠅⠀⠠⠭⠄⡳⠭⠆⠆⠂⠖⠄⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠾</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="NjH"><span class="type">Hint</span>:<p id="BcG">(a) Let <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾</nemeth>. Then there exists an <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠂⠨⠬⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Hence, <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾</nemeth> or <nemeth class="inline">⠋⠷⠠⠁⠆⠾</nemeth>. Therefore, <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>. Consequently, <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾⠀⠸⠐⠅⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>. Conversely, if <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>, then <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾</nemeth> or <nemeth class="inline">⠋⠷⠠⠁⠆⠾</nemeth>. Hence, there exists an <i class="one-letter">x</i> in <nemeth class="inline">⠠⠁⠂</nemeth> or <nemeth class="inline">⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Thus, there exists an <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠂⠨⠬⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Therefore, <nemeth class="inline">⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾⠀⠸⠐⠅⠀⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾</nemeth>, and <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾⠀⠨⠅⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="eDr">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="rXp">Determine whether or not the following relations are equivalence relations on the given set. If the relation is an equivalence relation, describe the partition given by it. If the relation is not an equivalence relation, state why it fails to be one.</p>
            <ol class="outerlist">
              <li>a. <p id="mph"><nemeth class="inline">⠭⠈⠱⠽</nemeth> in <nemeth class="inline">⠸⠠⠗</nemeth> if <nemeth class="inline">⠭⠀⠨⠂⠱⠀⠽</nemeth></p></li>
              <li>b. <p id="Swq"><nemeth class="inline">⠍⠈⠱⠝</nemeth> in <nemeth class="inline">⠸⠠⠵</nemeth> if <nemeth class="inline">⠍⠝⠀⠨⠂⠀⠼⠴</nemeth></p></li>
              <li>c. <p id="yDz"><nemeth class="inline">⠭⠈⠱⠽</nemeth> in <nemeth class="inline">⠸⠠⠗</nemeth> if <nemeth class="inline">⠳⠭⠤⠽⠳⠀⠐⠅⠱⠀⠼⠲</nemeth></p></li>
              <li>d. <p id="eKI"><nemeth class="inline">⠍⠈⠱⠝</nemeth> in <nemeth class="inline">⠸⠠⠵</nemeth> if <nemeth class="inline">⠍⠀⠸⠇⠀⠝⠷⠍⠕⠙⠀⠼⠖⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ZxZ"><span class="type">Hint</span>:<p id="hjP">(a) The relation fails to be symmetric. (b) The relation is not reflexive, since <nemeth class="inline">⠼⠴</nemeth> is not equivalent to itself. (c) The relation is not transitive.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="KKA">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="Yey">Define a relation <nemeth class="inline">⠈⠱</nemeth> on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> by stating that <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠈⠱⠷⠉⠠⠀⠙⠾</nemeth> if and only if <nemeth class="inline">⠁⠘⠆⠐⠬⠃⠘⠆⠐⠀⠐⠅⠱⠀⠉⠘⠆⠐⠬⠙⠘⠆</nemeth>. Show that <nemeth class="inline">⠈⠱</nemeth> is reflexive and transitive but not symmetric.</p>
          </article>
          <article class="exercise exercise-like" id="qRJ">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="ElH">Show that an <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrix gives rise to a well-defined map from <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠍</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="WYS">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="ksQ">Find the error in the following argument by providing a counterexample. “The reflexive property is redundant in the axioms for an equivalence relation. If <nemeth class="inline">⠭⠈⠱⠽</nemeth>, then <nemeth class="inline">⠽⠈⠱⠭</nemeth> by the symmetric property. Using the transitive property, we can deduce that <nemeth class="inline">⠭⠈⠱⠭</nemeth>.”</p>
            <div class="solutions">
              <div class="hint solution-like" id="yaJ"><span class="type">Hint</span>:<p id="NqY">Let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠸⠠⠝⠨⠬⠨⠷⠜⠆⠻⠨⠾</nemeth> and define <nemeth class="inline">⠭⠈⠱⠽</nemeth> if <nemeth class="inline">⠭⠬⠽⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Dgb">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Projective Real Line.</span>
            </h6>
            <p id="QzZ">Define a relation on <nemeth class="inline">⠸⠠⠗⠘⠆⠐⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠨⠾</nemeth> by letting <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠈⠱⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> if there exists a nonzero real number <nemeth class="inline">⠨⠇</nemeth> such that <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠀⠨⠅⠀⠷⠨⠇⠭⠆⠠⠀⠨⠇⠽⠆⠾</nemeth>. Prove that <nemeth class="inline">⠈⠱</nemeth> defines an equivalence relation on <nemeth class="inline">⠸⠠⠗⠘⠆⠐⠄⡳⠭⠆⠆⠂⠖⠄⠷⠼⠴⠠⠀⠼⠴⠾</nemeth>. What are the corresponding equivalence classes? This equivalence relation defines the projective line, denoted by <nemeth class="inline">⠸⠠⠏⠷⠸⠠⠗⠾</nemeth>, which is very important in geometry.</p>
          </article>
        </section>
        <section class="references" id="ztb">
          <div class="none"><span class="type">References</span> <span class="codenumber">1.5</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="fAk"><div class="bibitem">[1]</div>  <div class="bibentry"> Artin, M. <i>Algebra (Classic Version)</i>. 2nd ed. Pearson, Upper Saddle River, NJ, 2018.</div></article>
          <article class="bib" id="LHt"><div class="bibitem">[2]</div>  <div class="bibentry"> Childs, L. <i>A Concrete Introduction to Higher Algebra</i>. 2nd ed. Springer-Verlag, New York, 1995.</div></article>
          <article class="bib" id="rOC"><div class="bibitem">[3]</div>  <div class="bibentry"> Dummit, D. and Foote, R. <i>Abstract Algebra</i>. 3rd ed. Wiley, New York, 2003.</div></article>
          <article class="bib" id="XVL"><div class="bibitem">[4]</div>  <div class="bibentry"> Ehrlich, G. <i>Fundamental Concepts of Algebra</i>. PWS-KENT, Boston, 1991.</div></article>
          <article class="bib" id="EcU"><div class="bibitem">[5]</div>  <div class="bibentry"> Fraleigh, J. B. <i>A First Course in Abstract Algebra</i>. 7th ed. Pearson, Upper Saddle River, NJ, 2003.</div></article>
          <article class="bib" id="kkd"><div class="bibitem">[6]</div>  <div class="bibentry"> Gallian, J. A. <i>Contemporary Abstract Algebra</i>. 7th ed. Brooks/Cole, Belmont, CA, 2009.</div></article>
          <article class="bib" id="Qrm"><div class="bibitem">[7]</div>  <div class="bibentry"> Halmos, P. <i>Naive Set Theory</i>.  Springer, New York, 1991. One of the best references for set theory.</div></article>
          <article class="bib" id="wyv"><div class="bibitem">[8]</div>  <div class="bibentry"> Herstein, I. N. <i>Abstract Algebra</i>. 3rd ed. Wiley, New York, 1996.</div></article>
          <article class="bib" id="cFE"><div class="bibitem">[9]</div>  <div class="bibentry"> Hungerford, T. W. <i>Algebra</i>. Springer, New York, 1974. One of the standard graduate algebra texts.</div></article>
          <article class="bib" id="IMN"><div class="bibitem">[10]</div>  <div class="bibentry"> Lang, S. <i>Algebra</i>. 3rd ed. Springer, New York, 2002. Another standard graduate text.</div></article>
          <article class="bib" id="oTW"><div class="bibitem">[11]</div>  <div class="bibentry"> Lidl, R. and Pilz, G. <i>Applied Abstract Algebra</i>. 2nd ed. Springer, New York, 1998.</div></article>
          <article class="bib" id="Vbf"><div class="bibitem">[12]</div>  <div class="bibentry"> Mackiw, G. <i>Applications of Abstract Algebra</i>. Wiley, New York, 1985.</div></article>
          <article class="bib" id="Bio"><div class="bibitem">[13]</div>  <div class="bibentry"> Nickelson, W. K.  <i>Introduction to Abstract Algebra</i>. 3rd ed. Wiley, New York, 2006.</div></article>
          <article class="bib" id="hpx"><div class="bibitem">[14]</div>  <div class="bibentry"> Solow, D. <i>How to Read and Do Proofs</i>. 5th ed. Wiley, New York, 2009.</div></article>
          <article class="bib" id="NwG"><div class="bibitem">[15]</div>  <div class="bibentry"> van der Waerden, B. L. <i>A History of Algebra</i>. Springer-Verlag, New York, 1985. An account of the historical development of algebra.</div></article>
        </section>
        <section class="section" id="LfZ">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">1.6</span> <span class="title">Sage</span></div>
          <section class="introduction" id="bIL">
            <p id="osP">Sage is a powerful system for studying and exploring many different areas of mathematics. In this textbook, you will study a variety of algebraic structures, such as groups, rings and fields. Sage does an excellent job of implementing many features of these objects as we will see in the chapters ahead. But here and now, in this initial chapter, we will concentrate on a few general ways of getting the most out of working with Sage.</p>
            <p id="UzY">You may use Sage several different ways. It may be used as a command-line program when installed on your own computer. Or it might be a web application such as the SageMathCloud. Our writing will assume that you are reading this as a worksheet within the Sage Notebook (a web browser interface), or this is a section of the entire book presented as web pages, and you are employing the Sage Cell Server via those pages. After the first few chapters the explanations should work equally well for whatever vehicle you use to execute Sage commands.</p>
          </section>
          <section class="subsection" id="BMn">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.1</span> <span class="title">Executing Sage Commands</span></div>
            <p id="nXq">Most of your interaction will be by typing commands into a <em class="emphasis">compute cell</em>. If you are reading this in the Sage Notebook or as a webpage version of the book, then you will see a compute cell just below this paragraph. Click once inside the compute cell and if you are in the Sage Notebook, you will get a more distinctive border around it, a blinking cursor inside, plus a cute little “evaluate” link below.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"> 
</div>
            </article>
            <p id="Uez">At the cursor, type <code class="code-inline tex2jax_ignore">2+2</code> and then click on the evaluate link. Did a <code class="code-inline tex2jax_ignore">4</code> appear below the cell? If so, you have successfully sent a command off for Sage to evaluate and you have received back the (correct) answer.</p>
            <p id="AlI">Here is another compute cell. Try evaluating the command <code class="code-inline tex2jax_ignore">factorial(300)</code> here.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"> 
</div>
            </article>
            <p id="gsR">Hmmmmm. That is quite a big integer! If you see slashes at the end of each line, this means the result is continued onto the next line, since there are 615 total digits in the result.</p>
            <p id="MAa">To make new compute cells in the Sage Notebook (only), hover your mouse just above another compute cell, or just below some output from a compute cell. When you see a skinny blue bar across the width of your worksheet, click and you will open up a new compute cell, ready for input. Note that your worksheet will remember any calculations you make, in the order you make them, no matter where you put the cells, so it is best to stay organized and add new cells at the bottom.</p>
            <p id="sHj">Try placing your cursor just below the monstrous value of <nemeth class="inline">⠼⠒⠴⠴⠯</nemeth> that you have. Click on the blue bar and try another factorial computation in the new compute cell.</p>
            <p id="YOs">Each compute cell will show output due to only the very last command in the cell. Try to predict the following output before evaluating the cell.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 10
b = 6
b = b - 10
a = a + 20
a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">30
</div>
            </article>
            <p id="EVB">The following compute cell will not print anything since the one command does not create output. But it will have an effect, as you can see when you execute the subsequent cell. Notice how this uses the value of <code class="code-inline tex2jax_ignore">b</code> from above. Execute this compute cell <em class="emphasis">once</em>. Exactly once. Even if it <em class="emphasis">appears</em> to do nothing. If you execute the cell twice, your credit card may be charged twice.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = b + 50
</div>
            </article>
            <p id="lcK">Now execute this cell, which will produce some output.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b + 20
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">66
</div>
            </article>
            <p id="RjT">So <code class="code-inline tex2jax_ignore">b</code> came into existence as <code class="code-inline tex2jax_ignore">6</code>. We subtracted <nemeth class="inline">⠼⠂⠴</nemeth> immediately afterward. Then a subsequent cell added <code class="code-inline tex2jax_ignore">50</code>. This assumes you executed this cell <em class="emphasis">exactly</em> once! In the last cell we create <code class="code-inline tex2jax_ignore">b+20</code> (but do not save it) and it is this value (<nemeth class="inline">⠼⠖⠖</nemeth>) that is output, while <code class="code-inline tex2jax_ignore">b</code> is still <nemeth class="inline">⠼⠲⠖</nemeth>.</p>
            <p id="xrc">You can combine several commands on one line with a semi-colon. This is a great way to get multiple outputs from a compute cell. The syntax for building a matrix should be somewhat obvious when you see the output, but if not, it is not particularly important to understand now.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A = matrix([[3, 1], [5,2]]); A
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3 1]
[5 2]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">print(A); print(); print(A.inverse())
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3 1]
[5 2]
&lt;BLANKLINE&gt;
[ 2 -1]
[-5  3]
</div>
            </article>
          </section>
          <section class="subsection" id="hTw">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.2</span> <span class="title">Immediate Help</span></div>
            <p id="dyl">Some commands in Sage are “functions,” an example is <code class="code-inline tex2jax_ignore">factorial()</code> above. Other commands are “methods” of an object and are like characteristics of objects, an example is <code class="code-inline tex2jax_ignore">.inverse()</code> as a method of a matrix. Once you know how to create an object (such as a matrix), then it is easy to see all the available methods. Write the name of the object, place a period (“dot”) and hit the TAB key. If you have <code class="code-inline tex2jax_ignore">A</code> defined from above, then the compute cell below is ready to go, click into it and then hit TAB (not “evaluate”!). You should get a long list of possible methods.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.
</div>
            </article>
            <p id="JFu">To get some help on how to use a method with an object, write its name after a dot (with no parentheses) and then use a question-mark and hit TAB. (Hit the escape key “ESC” to remove the list, or click on the text for a method.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.inverse?
</div>
            </article>
            <p id="pMD">With one more question-mark and a TAB you can see the actual computer instructions that were programmed into Sage to make the method work, once you scoll down past the documentation delimited by the triple quotes (<code class="code-inline tex2jax_ignore">"""</code>):</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.inverse??
</div>
            </article>
            <p id="VTM">It is worthwhile to see what Sage does when there is an error. You will probably see a lot of these at first, and initially they will be a bit intimidating. But with time, you will learn how to use them effectively and you will also become more proficient with Sage and see them less often. Execute the compute cell below, it asks for the inverse of a matrix that has no inverse. Then reread the commentary.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">B = matrix([[2, 20], [5, 50]])
B.inverse()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
ZeroDivisionError: matrix must be nonsingular
</div>
            </article>
            <p id="CaV">Click just to the left of the error message to expand it fully (another click hides it totally, and a third click brings back the abbreviated form). Read the bottom of an error message first, it is your best explanation. Here a <code class="code-inline tex2jax_ignore">ZeroDivisionError</code> is not 100% accurate, but is close. The matrix is not invertible, not dissimilar to how we cannot divide scalars by zero. The remainder of the message begins at the top showing were the error first happened in your code and then the various places where intermediate functions were called, until the actual piece of Sage where the problem occurred. Sometimes this information will give you some clues, sometimes it is totally undecipherable. So do not let it scare you if it seems mysterious, but do remember to always read the last line first, then go back and read the first few lines for something that looks like your code.</p>
          </section>
          <section class="subsection" id="OaF">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.3</span> <span class="title">Annotating Your Work</span></div>
            <p id="iie">It is easy to comment on your work when you use the Sage Notebook. (The following only applies if you are reading this within a Sage Notebook. If you are not, then perhaps you can go open up a worksheet in the Sage Notebook and experiment there.) You can open up a small word-processor by hovering your mouse until you get a skinny blue bar again, but now when you click, also hold the SHIFT key at the same time. Experiment with fonts, colors, bullet lists, etc and then click the “Save changes” button to exit. Double-click on your text if you need to go back and edit it later.</p>
            <p id="Opn">Open the word-processor again to create a new bit of text (maybe next to the empty compute cell just below). Type all of the following <em class="emphasis">exactly,</em></p>
            <pre class="code-block tex2jax_ignore">Pythagorean Theorem: $c^2=a^2+b^2$
</pre>
            <p data-braille="continuation">and save your changes. The symbols between the dollar signs are written according to the mathematical typesetting language known as <span class="latex-logo">T<span class="E">e</span>X</span> — cruise the internet to learn more about this very popular tool. (Well, it is extremely popular among mathematicians and physical scientists.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"> 
</div>
            </article>
          </section>
          <section class="subsection" id="uhO">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.4</span> <span class="title">Lists</span></div>
            <p id="uww">Much of our interaction with sets will be through Sage lists. These are not really sets — they allow duplicates, and order matters. But they are so close to sets, and so easy and powerful to use that we will use them regularly. We will use a fun made-up list for practice, the quote marks mean the items are just text, with no special mathematical meaning. Execute these compute cells as we work through them.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo = ['snake', 'parrot', 'elephant', 'baboon', 'beetle']
zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['snake', 'parrot', 'elephant', 'baboon', 'beetle']
</div>
            </article>
            <p id="aDF">So the square brackets define the boundaries of our list, commas separate items, and we can give the list a name. To work with just one element of the list, we use the name and a pair of brackets with an index. Notice that lists have indices that <em class="emphasis">begin counting at zero</em>. This will seem odd at first and will seem very natural later.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo[2]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">'elephant'
</div>
            </article>
            <p id="GKO">We can add a new creature to the zoo, it is joined up at the far right end.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo.append('ostrich'); zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['snake', 'parrot', 'elephant', 'baboon', 'beetle', 'ostrich']
</div>
            </article>
            <p id="mRX">We can remove a creature.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo.remove('parrot')
zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['snake', 'elephant', 'baboon', 'beetle', 'ostrich']
</div>
            </article>
            <p id="SZg">We can extract a sublist. Here we start with element 1 (the elephant) and go all the way up to, <em class="emphasis">but not including</em>, element 3 (the beetle). Again a bit odd, but it will feel natural later. For now, notice that we are extracting two elements of the lists, exactly <nemeth class="inline">⠼⠒⠤⠂⠀⠨⠅⠀⠼⠆</nemeth> elements.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">mammals = zoo[1:3]
mammals
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['elephant', 'baboon']
</div>
            </article>
            <p id="zgp">Often we will want to see if two lists are equal. To do that we will need to sort a list first. A function creates a new, sorted list, leaving the original alone. So we need to save the new one with a new name.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">newzoo = sorted(zoo)
newzoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['baboon', 'beetle', 'elephant', 'ostrich', 'snake']
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo.sort()
zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['baboon', 'beetle', 'elephant', 'ostrich', 'snake']
</div>
            </article>
            <p id="fny">Notice that if you run this last compute cell your zoo has changed and some commands above will not necessarily execute the same way. If you want to experiment, go all the way back to the first creation of the zoo and start executing cells again from there with a fresh zoo.</p>
            <p id="LuH">A construction called a <dfn class="terminology">list comprehension</dfn> is especially powerful, especially since it almost exactly mirrors notation we use to describe sets. Suppose we want to form the plural of the names of the creatures in our zoo. We build a new list, based on all of the elements of our old list.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">plurality_zoo = [animal+'s' for animal in zoo]
plurality_zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['baboons', 'beetles', 'elephants', 'ostrichs', 'snakes']
</div>
            </article>
            <p id="rBQ">Almost like it says: we add an “s” to each animal name, for each animal in the zoo, and place them in a new list. Perfect. (Except for getting the plural of “ostrich” wrong.)</p>
          </section>
          <section class="subsection" id="aoX">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.5</span> <span class="title">Lists of Integers</span></div>
            <p id="XIZ">One final type of list, with numbers this time. The <code class="code-inline tex2jax_ignore">srange()</code> function will create lists of integers. (The “s” in the name stands for “Sage” and so will produce integers that Sage understands best. Many early difficulties with Sage and group theory can be alleviated by using only this command to create lists of integers.) In its simplest form an invocation like <code class="code-inline tex2jax_ignore">srange(12)</code> will create a list of 12 integers, <em class="emphasis">starting at zero</em> and working up to, <em class="emphasis">but not including</em>, 12. Does this sound familiar?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">dozen = srange(12); dozen
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
</div>
            </article>
            <p id="DQi">Here are two other forms, that you should be able to understand by studying the examples.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">teens = srange(13, 20); teens
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[13, 14, 15, 16, 17, 18, 19]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">decades = srange(1900, 2000, 10); decades
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990]
</div>
            </article>
          </section>
          <section class="subsection" id="Gwg">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.6</span> <span class="title">Saving and Sharing Your Work</span></div>
            <p id="jXr">There is a “Save” button in the upper-right corner of the Sage Notebook. This will save a current copy of your worksheet that you can retrieve your work from within your notebook again later, though you have to re-execute all the cells when you re-open the worksheet.</p>
            <p id="QeA">There is also a “File” drop-down list, on the left, just above your very top compute cell (not be confused with your browser's File menu item!). You will see a choice here labeled “Save worksheet to a file...” When you do this, you are creating a copy of your worksheet in the <code class="code-inline tex2jax_ignore">sws</code> format (short for “Sage WorkSheet”). You can email this file, or post it on a website, for other Sage users and they can use the “Upload” link on the homepage of their notebook to incorporate a copy of your worksheet into their notebook.</p>
            <p id="wlJ">There are other ways to share worksheets that you can experiment with, but this gives you one way to share any worksheet with anybody almost anywhere.</p>
            <p id="csS">We have covered a lot here in this section, so come back later to pick up tidbits you might have missed. There are also many more features in the Sage Notebook that we have not covered.</p>
          </section>
        </section>
        <section class="exercises" id="SKy">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">1.7</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="jnk">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="wHi">This exercise is just about making sure you know how to use Sage. You may be using the Sage Notebook server the online CoCalc service through your web browser. In either event, create a new worksheet. Do some non-trivial computation, maybe a pretty plot or some gruesome numerical computation to an insane precision. Create an interesting list and experiment with it some. Maybe include some nicely formatted text or <span class="latex-logo">T<span class="E">e</span>X</span> using the included mini-word-processor of the Sage Notebook (hover until a blue bar appears between cells and then shift-click) or create commentary in cells within CoCalc using the <dfn class="terminology">magics</dfn> <code class="code-inline tex2jax_ignore">%html</code> or <code class="code-inline tex2jax_ignore">%md</code> on a line of their own followed by text in <abbr class="initialism">HTML</abbr> or Markdown syntax (respectively).</p>
            <p id="cOr">Use whatever mechanism your instructor has in place for submitting your work. Or save your worksheet and then trade with a classmate.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="mtY">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">2</span> <span class="title">The Integers</span></div>
        <section class="introduction" id="Ace">
          <p id="vVb">The integers are the building blocks of mathematics. In this chapter we will investigate the fundamental properties of the integers, including mathematical induction, the division algorithm, and the Fundamental Theorem of Arithmetic.</p>
        </section>
        <section class="section" id="bUT">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">2.1</span> <span class="title">Mathematical Induction</span></div>
          <p id="xoP">Suppose we wish to show that</p>
          <div class="displaymath">
            <nemeth>⠼⠂⠬⠆⠬⠄⠄⠄⠬⠝⠀⠨⠅⠀⠹⠝⠷⠝⠬⠂⠾⠌⠆⠼</nemeth>
          </div>
          <p data-braille="continuation">for any natural number <i class="one-letter">n</i>. This formula is easily  verified for small numbers such as <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, or <nemeth class="inline">⠼⠲</nemeth>, but it is impossible to verify for all natural numbers on a case-by-case basis. To prove the formula true in general, a more generic method is required.</p>
          <p id="dvY">Suppose we have verified the equation for the first <i class="one-letter">n</i> cases. We will attempt to show that we can generate the formula for the <nemeth class="inline">⠷⠝⠬⠂⠾</nemeth>th case from this knowledge. The formula is true for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth> since</p>
          <div class="displaymath">
            <nemeth>⠼⠂⠀⠨⠅⠀⠹⠂⠷⠂⠬⠂⠾⠌⠆⠼</nemeth>
          </div>
          <p data-braille="continuation">. If we have verified the first <i class="one-letter">n</i> cases, then</p>
          <div class="displaymath">
            <nemeth>⠼⠂⠬⠆⠬⠄⠄⠄⠬⠝⠬⠷⠝⠬⠂⠾⠀⠀⠨⠅⠀⠹⠝⠷⠝⠬⠂⠾⠌⠆⠼⠬⠝⠬⠂⠀⠀⠀⠀⠨⠅⠀⠹⠝⠘⠆⠐⠬⠒⠝⠬⠆⠌⠆⠼⠀⠀⠀⠀⠨⠅⠀⠹⠷⠝⠬⠂⠾⠈⠷⠷⠝⠬⠂⠾⠬⠂⠈⠾⠌⠆⠼</nemeth>
          </div>
          <p data-braille="continuation">. This is exactly the formula for the <nemeth class="inline">⠷⠝⠬⠂⠾</nemeth>th case.</p>
          <p id="JDh">This method of proof is known as <dfn class="terminology">mathematical induction</dfn>. Instead of attempting to verify a statement about some subset <i class="one-letter">S</i> of the positive integers <nemeth class="inline">⠸⠠⠝</nemeth> on a case-by-case basis, an impossible task if <i class="one-letter">S</i> is an infinite set, we give a specific proof for the smallest integer being considered, followed by a generic argument showing that if the statement holds for a given case, then it must also hold for the next case in the sequence. We summarize mathematical induction in the following axiom.</p>
          <article class="principle theorem-like" data-braille="theorem-like" id="Plc">
            <h6 class="heading">
              <span class="type">Principle</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.1</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">First Principle of Mathematical Induction.</span>
            </h6>
            <p id="yPH">Let <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> be a statement about integers for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth> and suppose <nemeth class="inline">⠠⠎⠷⠝⠴⠾</nemeth> is true for some integer <nemeth class="inline">⠝⠴</nemeth>. If for all integers <i class="one-letter">k</i> with <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠝⠴</nemeth>, <nemeth class="inline">⠠⠎⠷⠅⠾</nemeth> implies that <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true, then <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all integers <i class="one-letter">n</i> greater than or equal to <nemeth class="inline">⠝⠴</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="HGD">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="rli">For all integers <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>, <nemeth class="inline">⠼⠆⠘⠝⠐⠀⠨⠂⠀⠝⠬⠲</nemeth>. Since</p>
            <div class="displaymath">
              <nemeth>⠼⠦⠀⠨⠅⠀⠼⠆⠘⠒⠐⠀⠨⠂⠀⠼⠒⠬⠲⠀⠨⠅⠀⠼⠶</nemeth>
            </div>
            <p data-braille="continuation">, the statement is true for <nemeth class="inline">⠝⠴⠀⠨⠅⠀⠼⠒</nemeth>. Assume that <nemeth class="inline">⠼⠆⠘⠅⠐⠀⠨⠂⠀⠅⠬⠲</nemeth> for <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠼⠒</nemeth>. Then <nemeth class="inline">⠼⠆⠘⠅⠬⠂⠐⠀⠨⠅⠀⠼⠆⠡⠆⠘⠅⠐⠀⠨⠂⠀⠼⠆⠷⠅⠬⠲⠾</nemeth>. But</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠷⠅⠬⠲⠾⠀⠨⠅⠀⠼⠆⠅⠬⠦⠀⠨⠂⠀⠅⠬⠢⠀⠨⠅⠀⠷⠅⠬⠂⠾⠬⠲</nemeth>
            </div>
            <p data-braille="continuation">since <i class="one-letter">k</i> is positive. Hence, by induction, the statement holds for all integers <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="nNM">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="Xsr">Every integer <nemeth class="inline">⠼⠂⠴⠘⠝⠬⠂⠐⠬⠒⠡⠂⠴⠘⠝⠬⠢</nemeth> is divisible by <nemeth class="inline">⠼⠔</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>. For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠴⠘⠂⠬⠂⠐⠬⠒⠡⠂⠴⠬⠢⠀⠨⠅⠀⠼⠂⠒⠢⠀⠨⠅⠀⠼⠔⠡⠂⠢</nemeth>
            </div>
            <p data-braille="continuation">is divisible by <nemeth class="inline">⠼⠔</nemeth>. Suppose that <nemeth class="inline">⠼⠂⠴⠘⠅⠬⠂⠐⠬⠒⠡⠂⠴⠘⠅⠬⠢</nemeth> is divisible by <nemeth class="inline">⠼⠔</nemeth> for <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠼⠂</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠴⠘⠷⠅⠬⠂⠾⠬⠂⠐⠬⠒⠡⠂⠴⠘⠅⠬⠂⠬⠢⠀⠀⠨⠅⠀⠼⠂⠴⠘⠅⠬⠆⠐⠬⠒⠡⠂⠴⠘⠅⠬⠂⠐⠬⠢⠴⠤⠲⠢⠀⠀⠀⠀⠨⠅⠀⠼⠂⠴⠷⠂⠴⠘⠅⠬⠂⠐⠬⠒⠡⠂⠴⠘⠅⠐⠬⠢⠾⠤⠲⠢</nemeth>
            </div>
            <p data-braille="continuation">is divisible by <nemeth class="inline">⠼⠔</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="TUV">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="DzA">We will prove the binomial theorem using mathematical induction; that is,</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠾⠘⠝⠐⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠁⠘⠅⠐⠃⠘⠝⠤⠅</nemeth>
            </div>
            <p data-braille="continuation">, where <i class="one-letter">a</i> and <i class="one-letter">b</i> are real numbers, <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>, and</p>
            <div class="displaymath">
              <nemeth>⠝⠀⠅⠀⠨⠅⠀⠹⠝⠯⠌⠅⠖⠀⠷⠝⠤⠅⠾⠯⠼</nemeth>
            </div>
            <p data-braille="continuation">is the binomial coefficient.  We first show that</p>
            <div class="displaymath">
              <nemeth>⠝⠬⠂⠀⠅⠀⠨⠅⠀⠝⠀⠅⠬⠝⠀⠅⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">. This result follows from</p>
            <div class="displaymath">
              <nemeth>⠝⠀⠅⠬⠝⠀⠅⠤⠂⠀⠀⠨⠅⠀⠹⠝⠯⠌⠅⠖⠀⠷⠝⠤⠅⠾⠯⠼⠬⠹⠝⠯⠌⠷⠅⠤⠂⠾⠖⠀⠷⠝⠤⠅⠬⠂⠾⠯⠼⠀⠀⠀⠀⠨⠅⠀⠹⠷⠝⠬⠂⠾⠯⠌⠅⠖⠀⠷⠝⠬⠂⠤⠅⠾⠯⠼⠀⠀⠀⠀⠨⠅⠀⠝⠬⠂⠀⠅</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>, the binomial theorem is easy to verify. Now assume that the result is true for <i class="one-letter">n</i> greater than or equal to <nemeth class="inline">⠼⠂</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠾⠘⠝⠬⠂⠀⠀⠨⠅⠀⠷⠁⠬⠃⠾⠷⠁⠬⠃⠾⠘⠝⠐⠀⠀⠀⠀⠨⠅⠀⠷⠁⠬⠃⠾⠷⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠁⠘⠅⠐⠃⠘⠝⠤⠅⠐⠾⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠁⠘⠅⠬⠂⠐⠃⠘⠝⠤⠅⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅⠐⠀⠀⠀⠀⠨⠅⠀⠁⠘⠝⠬⠂⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠝⠀⠅⠤⠂⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠝⠀⠅⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅⠐⠬⠃⠘⠝⠬⠂⠐⠀⠀⠀⠀⠨⠅⠀⠁⠘⠝⠬⠂⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠈⠷⠝⠀⠅⠤⠂⠬⠝⠀⠅⠈⠾⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅⠐⠬⠃⠘⠝⠬⠂⠐⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠬⠂⠻⠝⠬⠂⠀⠅⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="pKq">We have an equivalent statement of the Principle of Mathematical Induction that is often very useful.</p>
          <article class="principle theorem-like" data-braille="theorem-like" id="vsl">
            <h6 class="heading">
              <span class="type">Principle</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.5</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Second Principle of Mathematical Induction.</span>
            </h6>
            <p id="eWQ">Let <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> be a statement about integers for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth> and suppose <nemeth class="inline">⠠⠎⠷⠝⠴⠾</nemeth> is true for some integer <nemeth class="inline">⠝⠴</nemeth>. If <nemeth class="inline">⠠⠎⠷⠝⠴⠾⠠⠀⠠⠎⠷⠝⠴⠬⠂⠾⠠⠀⠄⠄⠄⠀⠠⠀⠠⠎⠷⠅⠾</nemeth> imply that <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> for <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠝⠴</nemeth>, then the statement <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all integers <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠝⠴</nemeth>.</p>
          </article>
          <p id="VRz">A nonempty subset <i class="one-letter">S</i> of <nemeth class="inline">⠸⠠⠵</nemeth> is <dfn class="terminology">well-ordered</dfn>  if <i class="one-letter">S</i> contains a least element. Notice that the set <nemeth class="inline">⠸⠠⠵</nemeth> is not well-ordered since it does not contain a smallest element. However, the natural numbers are well-ordered.</p>
          <article class="principle theorem-like" data-braille="theorem-like" id="bzu">
            <h6 class="heading">
              <span class="type">Principle</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.6</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Principle of Well-Ordering.</span>
            </h6>
            <p id="LdZ">Every nonempty subset of the natural numbers is well-ordered.</p>
          </article>
          <p id="BYI">The Principle of Well-Ordering is equivalent to the Principle of Mathematical Induction.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="CWK">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="Gug">The Principle of Mathematical Induction implies that <nemeth class="inline">⠼⠂</nemeth> is the least positive natural number.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="xhy">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="Mjs">Let <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠝⠀⠈⠑⠀⠸⠠⠝⠒⠀⠝⠀⠨⠂⠱⠀⠼⠂⠨⠾</nemeth>. Then <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠎</nemeth>. Assume that <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠎</nemeth>. Since <nemeth class="inline">⠼⠴⠀⠐⠅⠀⠼⠂</nemeth>, it must be the case that <nemeth class="inline">⠝⠀⠨⠅⠀⠝⠬⠴⠀⠐⠅⠀⠝⠬⠂</nemeth>. Therefore, <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠝⠀⠐⠅⠀⠝⠬⠂</nemeth>. Consequently, if <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠎</nemeth>, then <nemeth class="inline">⠝⠬⠂</nemeth> must also be in <i class="one-letter">S</i>, and by the Principle of Mathematical Induction, and <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="KBj">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.8</span>
              <span class="period">.</span>
            </h6>
            <p id="BKn">The Principle of Mathematical Induction implies the Principle of Well-Ordering. That is, every nonempty subset of <nemeth class="inline">⠸⠠⠝</nemeth> contains a least element.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="sxF">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="sqB">We must show that if <i class="one-letter">S</i> is a nonempty subset of the natural numbers, then <i class="one-letter">S</i> contains a least element. If <i class="one-letter">S</i> contains 1, then the theorem is true by Lemma 2.1.7. Assume that if <i class="one-letter">S</i> contains an integer <i class="one-letter">k</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠱⠀⠝</nemeth>, then <i class="one-letter">S</i> contains a least element. We will show that if a set <i class="one-letter">S</i> contains an integer less than or equal to <nemeth class="inline">⠝⠬⠂</nemeth>, then <i class="one-letter">S</i> has a least element. If <i class="one-letter">S</i> does not contain an integer less than <nemeth class="inline">⠝⠬⠂</nemeth>, then <nemeth class="inline">⠝⠬⠂</nemeth> is the smallest integer in <i class="one-letter">S</i>. Otherwise, since <i class="one-letter">S</i> is nonempty, <i class="one-letter">S</i> must contain an integer less than or equal to <i class="one-letter">n</i>. In this case, by induction, <i class="one-letter">S</i> contains a least element.</p>
          </article>
          <p id="ifR">Induction can also be very useful in formulating definitions. For instance, there are two ways to define <nemeth class="inline">⠝⠯</nemeth>, the factorial of a positive integer <i class="one-letter">n</i>.</p>
          <ul class="outerlist">
            <li>• <p id="Dlf">The <em class="emphasis">explicit</em> definition: <nemeth class="inline">⠝⠖⠀⠀⠨⠅⠀⠼⠂⠡⠆⠡⠒⠀⠄⠄⠄⠀⠷⠝⠤⠂⠾⠡⠝</nemeth>.</p></li>
            <li>• <p id="jso">The <em class="emphasis">inductive</em> or <em class="emphasis">recursive</em> definition: <nemeth class="inline">⠼⠂⠖⠀⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠝⠖⠀⠀⠨⠅⠀⠝⠷⠝⠤⠂⠾⠯</nemeth> for <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth>.</p></li>
          </ul>
          <p data-braille="continuation">Every good mathematician or computer scientist knows that looking at problems recursively, as opposed to explicitly, often results in better understanding of complex issues.</p>
        </section>
        <section class="section" id="Icc">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">2.2</span> <span class="title">The Division Algorithm</span></div>
          <section class="introduction" id="gjn">
            <p id="cck">An application of the Principle of Well-Ordering that we will use often is the division algorithm.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="qIs">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.1</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Division Algorithm.</span>
              </h6>
              <p id="hRw">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be integers, with <nemeth class="inline">⠃⠀⠨⠂⠀⠼⠴</nemeth>. Then there exist unique integers <i class="one-letter">q</i> and <i class="one-letter">r</i> such that</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth>
              </div>
              <p data-braille="continuation">where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠃</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="YEO">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="YxK">This is a perfect example of the existence-and-uniqueness type of proof. We must first prove that the numbers <i class="one-letter">q</i> and <i class="one-letter">r</i> actually exist. Then we must show that if <nemeth class="inline">⠟⠄</nemeth> and <nemeth class="inline">⠗⠄</nemeth> are two other such numbers, then <nemeth class="inline">⠟⠀⠨⠅⠀⠟⠄</nemeth> and <nemeth class="inline">⠗⠀⠨⠅⠀⠗⠄</nemeth>.</p>
              <p id="EET"><em class="emphasis">Existence of <i class="one-letter">q</i> and <i class="one-letter">r</i>.</em> Let</p>
              <div class="displaymath">
                <nemeth>⠠⠎⠀⠨⠅⠀⠨⠷⠁⠤⠃⠅⠒⠀⠅⠀⠈⠑⠀⠸⠠⠵⠁⠝⠙⠁⠤⠃⠅⠀⠨⠂⠱⠀⠼⠴⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. If <nemeth class="inline">⠼⠴⠀⠈⠑⠀⠠⠎</nemeth>, then <i class="one-letter">b</i> divides <i class="one-letter">a</i>, and  we can let <nemeth class="inline">⠟⠀⠨⠅⠀⠁⠸⠌⠃</nemeth> and <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth>. If <nemeth class="inline">⠼⠴⠀⠌⠈⠑⠀⠠⠎</nemeth>, we can use the Well-Ordering Principle. We must first show that <i class="one-letter">S</i> is nonempty. If <nemeth class="inline">⠁⠀⠨⠂⠀⠼⠴</nemeth>, then <nemeth class="inline">⠁⠤⠃⠡⠴⠀⠈⠑⠀⠠⠎</nemeth>. If <nemeth class="inline">⠁⠀⠐⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠁⠤⠃⠷⠼⠆⠁⠾⠀⠨⠅⠀⠁⠷⠂⠤⠆⠃⠾⠀⠈⠑⠀⠠⠎</nemeth>. In either case <nemeth class="inline">⠠⠎⠀⠌⠨⠅⠀⠸⠴</nemeth>. By the Well-Ordering Principle, <i class="one-letter">S</i> must have a smallest member, say <nemeth class="inline">⠗⠀⠨⠅⠀⠁⠤⠃⠟</nemeth>. Therefore, <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth>, <nemeth class="inline">⠗⠀⠨⠂⠱⠀⠼⠴</nemeth>. We now show that <nemeth class="inline">⠗⠀⠐⠅⠀⠃</nemeth>. Suppose that <nemeth class="inline">⠗⠀⠨⠂⠀⠃</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠁⠤⠃⠷⠟⠬⠂⠾⠀⠨⠅⠀⠁⠤⠃⠟⠤⠃⠀⠨⠅⠀⠗⠤⠃⠀⠨⠂⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. In this case we would have <nemeth class="inline">⠁⠤⠃⠷⠟⠬⠂⠾</nemeth> in the set <i class="one-letter">S</i>. But then <nemeth class="inline">⠁⠤⠃⠷⠟⠬⠂⠾⠀⠐⠅⠀⠁⠤⠃⠟</nemeth>, which would contradict the fact that <nemeth class="inline">⠗⠀⠨⠅⠀⠁⠤⠃⠟</nemeth> is the smallest member  of <i class="one-letter">S</i>. So <nemeth class="inline">⠗⠀⠐⠅⠱⠀⠃</nemeth>. Since <nemeth class="inline">⠼⠴⠀⠌⠈⠑⠀⠠⠎</nemeth>, <nemeth class="inline">⠗⠀⠌⠨⠅⠀⠃</nemeth> and so <nemeth class="inline">⠗⠀⠐⠅⠀⠃</nemeth>.</p>
              <p id="kMc"><em class="emphasis">Uniqueness of <i class="one-letter">q</i> and <i class="one-letter">r</i>.</em> Suppose there exist integers <i class="one-letter">r</i>, <nemeth class="inline">⠗⠄</nemeth>, <i class="one-letter">q</i>, and <nemeth class="inline">⠟⠄</nemeth> such that</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠃⠟⠬⠗⠠⠀⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠃⠁⠝⠙⠁⠀⠨⠅⠀⠃⠟⠘⠄⠐⠬⠗⠘⠄⠐⠠⠀⠼⠴⠀⠐⠅⠱⠀⠗⠘⠄⠐⠀⠐⠅⠀⠃</nemeth>
              </div>
              <p data-braille="continuation">. Then <nemeth class="inline">⠃⠟⠬⠗⠀⠨⠅⠀⠃⠟⠘⠄⠐⠬⠗⠄</nemeth>. Assume that <nemeth class="inline">⠗⠘⠄⠐⠀⠨⠂⠱⠀⠗</nemeth>. From the last equation we have <nemeth class="inline">⠃⠷⠟⠤⠟⠘⠄⠐⠾⠀⠨⠅⠀⠗⠘⠄⠐⠤⠗</nemeth>; therefore, <i class="one-letter">b</i> must divide <nemeth class="inline">⠗⠘⠄⠐⠤⠗</nemeth> and <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠘⠄⠐⠤⠗⠀⠐⠅⠱⠀⠗⠘⠄⠐⠀⠐⠅⠀⠃</nemeth>. This is possible only if <nemeth class="inline">⠗⠘⠄⠐⠤⠗⠀⠨⠅⠀⠼⠴</nemeth>. Hence, <nemeth class="inline">⠗⠀⠨⠅⠀⠗⠄</nemeth> and  <nemeth class="inline">⠟⠀⠨⠅⠀⠟⠄</nemeth>.</p>
            </article>
            <p id="Ijt">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be integers. If <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠅</nemeth> for some integer <i class="one-letter">k</i>, we write <nemeth class="inline">⠁⠳⠃</nemeth>. An integer <i class="one-letter">d</i> is called a <dfn class="terminology">common divisor</dfn> of <i class="one-letter">a</i> and <i class="one-letter">b</i> if <nemeth class="inline">⠙⠳⠁</nemeth> and <nemeth class="inline">⠙⠳⠃</nemeth>. The <dfn class="terminology">greatest common divisor</dfn> of integers <i class="one-letter">a</i> and <i class="one-letter">b</i> is a positive integer <i class="one-letter">d</i> such that <i class="one-letter">d</i> is a common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> and if <nemeth class="inline">⠙⠄</nemeth> is any other common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>, then <nemeth class="inline">⠙⠘⠄⠐⠳⠙</nemeth>.  We write <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth>; for example, <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠆⠲⠠⠀⠼⠒⠖⠾⠀⠨⠅⠀⠼⠂⠆</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠂⠆⠴⠠⠀⠼⠂⠴⠆⠾⠀⠨⠅⠀⠼⠖</nemeth>. We say that two integers <i class="one-letter">a</i> and <i class="one-letter">b</i> are <dfn class="terminology">relatively prime</dfn> if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="WPB">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="NYF">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be nonzero integers. Then there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that</p>
              <div class="displaymath">
                <nemeth>⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠁⠗⠬⠃⠎</nemeth>
              </div>
              <p data-braille="continuation">. Furthermore, the greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> is unique.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ELX">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="QTl">Let</p>
              <div class="displaymath">
                <nemeth>⠠⠎⠀⠨⠅⠀⠨⠷⠁⠍⠬⠃⠝⠒⠀⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵⠁⠝⠙⠁⠍⠬⠃⠝⠀⠨⠂⠀⠼⠴⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Clearly, the set <i class="one-letter">S</i> is nonempty; hence, by the Well-Ordering Principle <i class="one-letter">S</i> must have a smallest member, say <nemeth class="inline">⠙⠀⠨⠅⠀⠁⠗⠬⠃⠎</nemeth>. We claim that <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth>. Write <nemeth class="inline">⠁⠀⠨⠅⠀⠙⠟⠬⠗⠄</nemeth> where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠘⠄⠐⠀⠐⠅⠀⠙</nemeth>. If <nemeth class="inline">⠗⠘⠄⠐⠀⠨⠂⠀⠼⠴</nemeth>, then </p>
              <div class="displaymath">
                <nemeth>⠗⠄⠀⠀⠨⠅⠀⠁⠤⠙⠟⠀⠀⠀⠀⠨⠅⠀⠁⠤⠷⠁⠗⠬⠃⠎⠾⠟⠀⠀⠀⠀⠨⠅⠀⠁⠤⠁⠗⠟⠤⠃⠎⠟⠀⠀⠀⠀⠨⠅⠀⠁⠷⠂⠤⠗⠟⠾⠬⠃⠷⠤⠎⠟⠾</nemeth>
              </div>
              <p data-braille="continuation">, which is in <i class="one-letter">S</i>. But this would contradict the fact that <i class="one-letter">d</i> is the smallest member of <i class="one-letter">S</i>. Hence, <nemeth class="inline">⠗⠘⠄⠐⠀⠨⠅⠀⠼⠴</nemeth> and <i class="one-letter">d</i> divides <i class="one-letter">a</i>. A similar argument shows that <i class="one-letter">d</i> divides <i class="one-letter">b</i>. Therefore, <i class="one-letter">d</i> is a common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>.</p>
              <p id="xau">Suppose that <nemeth class="inline">⠙⠄</nemeth> is another common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>, and we want to show that <nemeth class="inline">⠙⠘⠄⠐⠳⠙</nemeth>. If we let <nemeth class="inline">⠁⠀⠨⠅⠀⠙⠘⠄⠐⠓</nemeth> and <nemeth class="inline">⠃⠀⠨⠅⠀⠙⠘⠄⠐⠅</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠙⠀⠨⠅⠀⠁⠗⠬⠃⠎⠀⠨⠅⠀⠙⠘⠄⠐⠓⠗⠬⠙⠘⠄⠐⠅⠎⠀⠨⠅⠀⠙⠘⠄⠐⠷⠓⠗⠬⠅⠎⠾</nemeth>
              </div>
              <p data-braille="continuation">. So <nemeth class="inline">⠙⠄</nemeth> must divide <i class="one-letter">d</i>. Hence, <i class="one-letter">d</i> must be the unique greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="jdT">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="SIy">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be two integers that are relatively prime. Then there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="SBh">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.2.1</span> <span class="title">The Euclidean Algorithm</span></div>
            <p id="mfQ">Among other things, Theorem 2.2.2 allows us to compute the greatest common divisor of two integers.</p>
            <article class="example example-like" data-braille="example-like" id="Uqu">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="jGJ">Let us compute the greatest common divisor of <nemeth class="inline">⠼⠔⠲⠢</nemeth> and <nemeth class="inline">⠼⠆⠲⠂⠢</nemeth>. First observe that</p>
              <div class="displaymath">
                <nemeth>⠼⠆⠲⠂⠢⠀⠀⠨⠅⠀⠼⠔⠲⠢⠡⠆⠬⠢⠆⠢⠀⠔⠲⠢⠀⠀⠨⠅⠀⠼⠢⠆⠢⠡⠂⠬⠲⠆⠴⠀⠢⠆⠢⠀⠀⠨⠅⠀⠼⠲⠆⠴⠡⠂⠬⠂⠴⠢⠀⠲⠆⠴⠀⠀⠨⠅⠀⠼⠂⠴⠢⠡⠲⠬⠴</nemeth>
              </div>
              <p data-braille="continuation">. Reversing our steps, <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides <nemeth class="inline">⠼⠲⠆⠴</nemeth>, <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides <nemeth class="inline">⠼⠢⠆⠢</nemeth>, <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides <nemeth class="inline">⠼⠔⠲⠢</nemeth>, and <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides <nemeth class="inline">⠼⠆⠲⠂⠢</nemeth>. Hence, <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides both <nemeth class="inline">⠼⠔⠲⠢</nemeth> and <nemeth class="inline">⠼⠆⠲⠂⠢</nemeth>. If <i class="one-letter">d</i> were another common divisor of <nemeth class="inline">⠼⠔⠲⠢</nemeth> and <nemeth class="inline">⠼⠆⠲⠂⠢</nemeth>, then <i class="one-letter">d</i> would also have to divide <nemeth class="inline">⠼⠂⠴⠢</nemeth>. Therefore, <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠔⠲⠢⠠⠀⠼⠆⠲⠂⠢⠾⠀⠨⠅⠀⠼⠂⠴⠢</nemeth>.</p>
              <p id="PNS">If we work backward through the above sequence of equations, we can also obtain numbers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠼⠔⠲⠢⠗⠬⠆⠲⠂⠢⠎⠀⠨⠅⠀⠼⠂⠴⠢</nemeth>. Observe that</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠴⠢⠀⠀⠨⠅⠀⠼⠢⠆⠢⠬⠷⠤⠼⠂⠾⠡⠲⠆⠴⠀⠀⠀⠀⠨⠅⠀⠼⠢⠆⠢⠬⠷⠤⠼⠂⠾⠡⠈⠷⠔⠲⠢⠬⠷⠤⠼⠂⠾⠡⠢⠆⠢⠈⠾⠀⠀⠀⠀⠨⠅⠀⠼⠆⠡⠢⠆⠢⠬⠷⠤⠼⠂⠾⠡⠔⠲⠢⠀⠀⠀⠀⠨⠅⠀⠼⠆⠡⠈⠷⠆⠲⠂⠢⠬⠷⠤⠼⠆⠾⠡⠔⠲⠢⠈⠾⠬⠷⠤⠼⠂⠾⠡⠔⠲⠢⠀⠀⠀⠀⠨⠅⠀⠼⠆⠡⠆⠲⠂⠢⠬⠷⠤⠼⠢⠾⠡⠔⠲⠢</nemeth>
              </div>
              <p data-braille="continuation">. So <nemeth class="inline">⠗⠀⠨⠅⠀⠤⠼⠢</nemeth> and <nemeth class="inline">⠎⠀⠨⠅⠀⠼⠆</nemeth>. Notice that <i class="one-letter">r</i> and <i class="one-letter">s</i> are not unique, since <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠲⠂</nemeth> and <nemeth class="inline">⠎⠀⠨⠅⠀⠤⠼⠂⠖</nemeth> would also work.</p>
            </article>
            <p id="SmZ">To compute <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠙</nemeth>, we are using repeated divisions to obtain a decreasing sequence of positive integers <nemeth class="inline">⠗⠂⠀⠨⠂⠀⠗⠆⠀⠨⠂⠀⠄⠄⠄⠀⠨⠂⠀⠗⠰⠝⠐⠀⠨⠅⠀⠙</nemeth>; that is,</p>
            <div class="displaymath">
              <nemeth>⠃⠀⠀⠨⠅⠀⠁⠟⠂⠬⠗⠂⠀⠁⠀⠀⠨⠅⠀⠗⠂⠟⠆⠬⠗⠆⠀⠗⠂⠀⠀⠨⠅⠀⠗⠆⠟⠒⠬⠗⠒⠀⠀⠀⠣⠄⠄⠄⠀⠗⠰⠝⠤⠆⠀⠀⠨⠅⠀⠗⠰⠝⠤⠂⠐⠟⠰⠝⠐⠬⠗⠰⠝⠐⠀⠗⠰⠝⠤⠂⠀⠀⠨⠅⠀⠗⠰⠝⠐⠟⠰⠝⠬⠂</nemeth>
            </div>
            <p data-braille="continuation">. To find <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠙</nemeth>, we begin with this last equation and substitute results obtained from the previous equations:</p>
            <div class="displaymath">
              <nemeth>⠙⠀⠀⠨⠅⠀⠗⠰⠝⠐⠀⠀⠀⠀⠨⠅⠀⠗⠰⠝⠤⠆⠐⠤⠗⠰⠝⠤⠂⠐⠟⠰⠝⠐⠀⠀⠀⠀⠨⠅⠀⠗⠰⠝⠤⠆⠐⠤⠟⠰⠝⠐⠷⠗⠰⠝⠤⠒⠐⠤⠟⠰⠝⠤⠂⠐⠗⠰⠝⠤⠆⠐⠾⠀⠀⠀⠀⠨⠅⠀⠤⠟⠰⠝⠐⠗⠰⠝⠤⠒⠐⠬⠷⠂⠬⠟⠰⠝⠐⠟⠰⠝⠤⠂⠐⠾⠗⠰⠝⠤⠆⠐⠀⠀⠀⠣⠄⠄⠄⠀⠀⠀⠀⠨⠅⠀⠗⠁⠬⠎⠃</nemeth>
            </div>
            <p data-braille="continuation">. The algorithm that we have just used to find the greatest common divisor <i class="one-letter">d</i> of two integers <i class="one-letter">a</i> and <i class="one-letter">b</i> and to write <i class="one-letter">d</i> as the linear combination of <i class="one-letter">a</i> and <i class="one-letter">b</i> is known as the <dfn class="terminology">Euclidean algorithm</dfn>. </p>
          </section>
          <section class="subsection" id="yIq">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.2.2</span> <span class="title">Prime Numbers</span></div>
            <p id="yui">Let <i class="one-letter">p</i> be an integer such that <nemeth class="inline">⠏⠀⠨⠂⠀⠼⠂</nemeth>. We say that <i class="one-letter">p</i> is a <dfn class="terminology">prime number</dfn>,  or simply <i class="one-letter">p</i> is <dfn class="terminology">prime</dfn>, if the only positive numbers that divide <i class="one-letter">p</i> are <nemeth class="inline">⠼⠂</nemeth> and <i class="one-letter">p</i> itself. An integer <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth> that is not prime is said to be <dfn class="terminology">composite</dfn>. </p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="MLV">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.5</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Euclid.</span>
              </h6>
              <p id="mBp">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be integers and <i class="one-letter">p</i> be a prime number. If <nemeth class="inline">⠏⠳⠁⠃</nemeth>, then either <nemeth class="inline">⠏⠳⠁</nemeth> or <nemeth class="inline">⠏⠳⠃</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="doH">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="dhD">Suppose that <i class="one-letter">p</i> does not divide <i class="one-letter">a</i>. We must show that <nemeth class="inline">⠏⠳⠃</nemeth>. Since <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠏⠾⠀⠨⠅⠀⠼⠂</nemeth>, there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠏⠎⠀⠨⠅⠀⠼⠂</nemeth>. So</p>
              <div class="displaymath">
                <nemeth>⠃⠀⠨⠅⠀⠃⠷⠁⠗⠬⠏⠎⠾⠀⠨⠅⠀⠷⠁⠃⠾⠗⠬⠏⠷⠃⠎⠾</nemeth>
              </div>
              <p data-braille="continuation">. Since <i class="one-letter">p</i> divides both <nemeth class="inline">⠁⠃</nemeth> and itself, <i class="one-letter">p</i> must divide <nemeth class="inline">⠃⠀⠨⠅⠀⠷⠁⠃⠾⠗⠬⠏⠷⠃⠎⠾</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="AxD">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.6</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Euclid.</span>
              </h6>
              <p id="ufO">There exist an infinite number of primes.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="kTg">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="JoM">We will prove this theorem by contradiction. Suppose that there are only a finite number of primes, say <nemeth class="inline">⠏⠂⠠⠀⠏⠆⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠝⠐</nemeth>. Let <nemeth class="inline">⠠⠏⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠝⠐⠬⠂</nemeth>. Then <i class="one-letter">P</i> must be divisible by some <nemeth class="inline">⠏⠰⠊</nemeth> for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠊⠀⠐⠅⠱⠀⠝</nemeth>. In this case, <nemeth class="inline">⠏⠰⠊</nemeth> must divide <nemeth class="inline">⠠⠏⠤⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>, which is a contradiction. Hence, either <i class="one-letter">P</i> is prime or there exists an additional prime number <nemeth class="inline">⠏⠀⠌⠨⠅⠀⠏⠰⠊</nemeth> that divides <i class="one-letter">P</i>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="gEM">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.7</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Fundamental Theorem of Arithmetic.</span>
              </h6>
              <p id="amX">Let <i class="one-letter">n</i> be an integer such that <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠅⠐</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠏⠂⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠅⠐</nemeth> are  primes (not necessarily distinct). Furthermore, this factorization is unique; that is, if</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠨⠅⠀⠟⠂⠟⠆⠀⠄⠄⠄⠀⠟⠰⠇⠐</nemeth>
              </div>
              <p data-braille="continuation">, then <nemeth class="inline">⠅⠀⠨⠅⠀⠇</nemeth> and the <nemeth class="inline">⠟⠰⠊</nemeth>'s are just the <nemeth class="inline">⠏⠰⠊</nemeth>'s rearranged.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Rap">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="pvV"><em class="emphasis">Uniqueness.</em>  To show uniqueness we will use induction on <i class="one-letter">n</i>. The theorem is certainly true for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠆</nemeth> since in this case <i class="one-letter">n</i> is prime. Now assume that the result holds for all integers <i class="one-letter">m</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠍⠀⠐⠅⠀⠝</nemeth>, and</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠅⠐⠀⠨⠅⠀⠟⠂⠟⠆⠀⠄⠄⠄⠀⠟⠰⠇⠐</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠏⠂⠀⠐⠅⠱⠀⠏⠆⠀⠐⠅⠱⠀⠄⠄⠄⠀⠐⠅⠱⠀⠏⠰⠅</nemeth> and <nemeth class="inline">⠟⠂⠀⠐⠅⠱⠀⠟⠆⠀⠐⠅⠱⠀⠄⠄⠄⠀⠐⠅⠱⠀⠟⠰⠇</nemeth>. By Lemma 2.2.5, <nemeth class="inline">⠏⠂⠳⠟⠰⠊</nemeth> for some <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠇</nemeth> and <nemeth class="inline">⠟⠂⠳⠏⠰⠚</nemeth> for some <nemeth class="inline">⠚⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠅</nemeth>. Since all of the <nemeth class="inline">⠏⠰⠊</nemeth>'s and <nemeth class="inline">⠟⠰⠊</nemeth>'s are prime, <nemeth class="inline">⠏⠂⠀⠨⠅⠀⠟⠰⠊</nemeth> and  <nemeth class="inline">⠟⠂⠀⠨⠅⠀⠏⠰⠚</nemeth>. Hence, <nemeth class="inline">⠏⠂⠀⠨⠅⠀⠟⠂</nemeth> since <nemeth class="inline">⠏⠂⠀⠐⠅⠱⠀⠏⠰⠚⠐⠀⠨⠅⠀⠟⠂⠀⠐⠅⠱⠀⠟⠰⠊⠐⠀⠨⠅⠀⠏⠂</nemeth>. By the induction hypothesis,</p>
              <div class="displaymath">
                <nemeth>⠝⠘⠄⠐⠀⠨⠅⠀⠏⠆⠀⠄⠄⠄⠀⠏⠰⠅⠐⠀⠨⠅⠀⠟⠆⠀⠄⠄⠄⠀⠟⠰⠇⠐</nemeth>
              </div>
              <p data-braille="continuation">has a unique factorization. Hence, <nemeth class="inline">⠅⠀⠨⠅⠀⠇</nemeth> and <nemeth class="inline">⠟⠰⠊⠐⠀⠨⠅⠀⠏⠰⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠅</nemeth>.</p>
              <p id="VDe"><em class="emphasis">Existence.</em> To show existence, suppose that there is some integer that cannot be written as the product of primes. Let <i class="one-letter">S</i> be the set of all such numbers. By the Principle of Well-Ordering, <i class="one-letter">S</i> has a smallest number, say <i class="one-letter">a</i>. If the only positive factors of <i class="one-letter">a</i> are <i class="one-letter">a</i> and <nemeth class="inline">⠼⠂</nemeth>, then <i class="one-letter">a</i> is prime, which is a contradiction. Hence, <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠂⠁⠆</nemeth> where <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠁⠂⠀⠐⠅⠀⠁</nemeth> and <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠁⠆⠀⠐⠅⠀⠁</nemeth>. Neither <nemeth class="inline">⠁⠂⠀⠈⠑⠀⠠⠎</nemeth> nor <nemeth class="inline">⠁⠆⠀⠈⠑⠀⠠⠎</nemeth>, since <i class="one-letter">a</i> is the smallest element in <i class="one-letter">S</i>. So</p>
              <div class="displaymath">
                <nemeth>⠁⠂⠀⠀⠨⠅⠀⠏⠂⠀⠄⠄⠄⠀⠏⠰⠗⠐⠀⠁⠆⠀⠀⠨⠅⠀⠟⠂⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>
              </div>
              <p data-braille="continuation">. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠁⠂⠁⠆⠀⠨⠅⠀⠏⠂⠀⠄⠄⠄⠀⠏⠰⠗⠐⠟⠂⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>
              </div>
              <p data-braille="continuation">. So <nemeth class="inline">⠁⠀⠌⠈⠑⠀⠠⠎</nemeth>, which is a contradiction.</p>
            </article>
          </section>
          <section class="subsection" id="ePz">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.2.3</span> <span class="title">Historical Note</span></div>
            <p id="eBr">Prime numbers were first studied by the ancient Greeks. Two important results from antiquity are Euclid's proof that an infinite number of primes exist and the Sieve of Eratosthenes, a method of computing all of the prime numbers less than a fixed positive integer <i class="one-letter">n</i>. One problem in number theory is to find a function <i class="one-letter">f</i> such that <nemeth class="inline">⠋⠷⠝⠾</nemeth> is prime for each integer <i class="one-letter">n</i>. Pierre Fermat (1601?–1665) conjectured that <nemeth class="inline">⠼⠆⠘⠆⠘⠘⠝⠐⠬⠂</nemeth> was prime for all <i class="one-letter">n</i>, but later it was shown by Leonhard Euler (1707–1783) that</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠘⠆⠘⠘⠢⠐⠬⠂⠀⠨⠅⠀⠼⠲⠠⠆⠔⠲⠠⠔⠖⠶⠠⠆⠔⠶</nemeth>
            </div>
            <p data-braille="continuation">is a composite number. One of the many unproven conjectures about prime numbers is Goldbach's Conjecture. In a letter to Euler in 1742, Christian Goldbach stated the conjecture that every even integer with the exception of <nemeth class="inline">⠼⠆</nemeth> seemed to be the sum of two primes: <nemeth class="inline">⠼⠲⠀⠨⠅⠀⠼⠆⠬⠆</nemeth>, <nemeth class="inline">⠼⠖⠀⠨⠅⠀⠼⠒⠬⠒</nemeth>, <nemeth class="inline">⠼⠦⠀⠨⠅⠀⠼⠒⠬⠢</nemeth>, <nemeth class="inline">⠄⠄⠄</nemeth>. Although the conjecture has been verified for the numbers up through <nemeth class="inline">⠼⠲⠈⠡⠂⠴⠘⠂⠦</nemeth>, it has yet to be proven in general. Since prime numbers play an important role in public key cryptography, there is currently a great deal of interest in determining whether or not a large number is prime.</p>
            <article class="paragraphs" id="vNK">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="KIA">Sage's original purpose was to support research in number theory, so it is perfect for the types of computations with the integers that we have in this chapter.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="kWt">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">2.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="aSn">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="fCg">Use Sage to express <nemeth class="inline">⠼⠂⠆⠒⠲⠢⠖⠶⠔⠆</nemeth> as a product of prime numbers.</p>
          </article>
          <article class="exercise exercise-like" id="GZw">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="LJp">Find the greatest common divisor of <nemeth class="inline">⠼⠦⠲</nemeth> and <nemeth class="inline">⠼⠢⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ngF">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="rQy">Find integers <i class="one-letter">r</i> and <i class="one-letter">s</i> so that <nemeth class="inline">⠗⠷⠼⠦⠲⠾⠬⠎⠷⠼⠢⠆⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠼⠦⠲⠠⠀⠼⠢⠆⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="TnO">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="XXH">Explain the use of the term “induction hypothesis.”</p>
          </article>
          <article class="exercise exercise-like" id="zuX">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="EeQ">What is Goldbach's Conjecture? And why is it called a “conjecture”?</p>
          </article>
        </section>
        <section class="exercises" id="Dsj">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">2.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="sTe">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="AEU">Prove that</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠘⠆⠐⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠝⠘⠆⠐⠀⠨⠅⠀⠹⠝⠷⠝⠬⠂⠾⠷⠆⠝⠬⠂⠾⠌⠖⠼</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="pCZ"><span class="type">Hint</span>:<p id="iWP">The base case, <nemeth class="inline">⠠⠎⠷⠼⠂⠾⠒⠀⠈⠷⠼⠂⠷⠂⠬⠂⠾⠷⠆⠷⠂⠾⠬⠂⠾⠈⠾⠸⠌⠖⠀⠨⠅⠀⠼⠂⠀⠨⠅⠀⠼⠂⠘⠆</nemeth> is true. Assume that <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠼⠂⠘⠆⠐⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠅⠘⠆⠐⠀⠨⠅⠀⠈⠷⠅⠷⠅⠬⠂⠾⠷⠆⠅⠬⠂⠾⠈⠾⠸⠌⠖</nemeth> is true. Then</p><div class="displaymath"><nemeth>⠼⠂⠘⠆⠐⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠅⠘⠆⠐⠬⠷⠅⠬⠂⠾⠘⠆⠀⠀⠨⠅⠀⠈⠷⠅⠷⠅⠬⠂⠾⠷⠆⠅⠬⠂⠾⠈⠾⠸⠌⠖⠬⠷⠅⠬⠂⠾⠘⠆⠐⠀⠀⠀⠀⠨⠅⠀⠈⠷⠷⠅⠬⠂⠾⠷⠷⠅⠬⠂⠾⠬⠂⠾⠷⠆⠷⠅⠬⠂⠾⠬⠂⠾⠈⠾⠸⠌⠖</nemeth></div><p data-braille="continuation">, and so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Thus, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Zan">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="gMd">Prove that</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠘⠒⠐⠬⠆⠘⠒⠐⠬⠄⠄⠄⠬⠝⠘⠒⠐⠀⠨⠅⠀⠹⠝⠘⠆⠐⠷⠝⠬⠂⠾⠘⠆⠐⠌⠲⠼</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Fhw">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="MTm">Prove that <nemeth class="inline">⠝⠖⠀⠀⠨⠂⠀⠼⠆⠘⠝</nemeth> for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠲</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="hYA"><span class="type">Hint</span>:<p id="PdY">The base case, <nemeth class="inline">⠠⠎⠷⠼⠲⠾⠒⠀⠼⠲⠖⠀⠀⠨⠅⠀⠼⠆⠲⠀⠨⠂⠀⠼⠂⠖⠀⠨⠅⠀⠼⠆⠘⠲</nemeth> is true. Assume <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠅⠖⠀⠀⠨⠂⠀⠼⠆⠘⠅</nemeth> is true. Then <nemeth class="inline">⠷⠅⠬⠂⠾⠖⠀⠀⠨⠅⠀⠅⠖⠀⠷⠅⠬⠂⠾⠀⠨⠂⠀⠼⠆⠘⠅⠐⠡⠆⠀⠨⠅⠀⠼⠆⠘⠅⠬⠂</nemeth>, so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Thus, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="loF">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="tav">Prove that</p>
            <div class="displaymath">
              <nemeth>⠭⠬⠲⠭⠬⠶⠭⠬⠄⠄⠄⠬⠷⠒⠝⠤⠆⠾⠭⠀⠨⠅⠀⠹⠝⠷⠒⠝⠤⠂⠾⠭⠌⠆⠼</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="RvO">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ZhE">Prove that <nemeth class="inline">⠼⠂⠴⠘⠝⠬⠂⠐⠬⠂⠴⠘⠝⠐⠬⠂</nemeth> is divisible by <nemeth class="inline">⠼⠒</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="xCX">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="FoN">Prove that <nemeth class="inline">⠼⠲⠡⠂⠴⠘⠆⠝⠬⠔⠡⠂⠴⠘⠆⠝⠤⠂⠬⠢</nemeth> is divisible by <nemeth class="inline">⠼⠔⠔</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="dKg">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="lvW">Show that</p>
            <div class="displaymath">
              <nemeth>⠣⠝⠜⠁⠂⠁⠆⠀⠄⠄⠄⠀⠁⠰⠝⠐⠻⠀⠐⠅⠱⠀⠹⠂⠌⠝⠼⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠁⠰⠅</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="JRp">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="RDf">Prove the Leibniz rule for <nemeth class="inline">⠋⠘⠷⠝⠾⠐⠷⠭⠾</nemeth>, where <nemeth class="inline">⠋⠘⠷⠝⠾</nemeth> is the <i class="one-letter">n</i>th derivative of <i class="one-letter">f</i>; that is, show that</p>
            <div class="displaymath">
              <nemeth>⠷⠋⠛⠾⠘⠷⠝⠾⠐⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠋⠘⠷⠅⠾⠐⠷⠭⠾⠛⠘⠷⠝⠤⠅⠾⠐⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <div class="solutions">
              <div class="hint solution-like" id="SPC"><span class="type">Hint</span>:<p id="vlh">Follow the proof in Example 2.1.4.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="pYy">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="xKo">Use induction to prove that <nemeth class="inline">⠼⠂⠬⠆⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠆⠘⠝⠐⠀⠨⠅⠀⠼⠆⠘⠝⠬⠂⠐⠤⠂</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="WfH">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="dRx">Prove that</p>
            <div class="displaymath">
              <nemeth>⠹⠂⠌⠆⠼⠬⠹⠂⠌⠖⠼⠬⠄⠄⠄⠬⠹⠂⠌⠝⠷⠝⠬⠂⠾⠼⠀⠨⠅⠀⠹⠝⠌⠝⠬⠂⠼</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="CmQ">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="JYG">If <i class="one-letter">x</i> is a nonnegative real number, then show that <nemeth class="inline">⠷⠼⠂⠬⠭⠾⠘⠝⠐⠤⠂⠀⠨⠂⠱⠀⠝⠭</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="rsm"><span class="type">Hint</span>:<p id="bsq">The base case, <nemeth class="inline">⠠⠎⠷⠼⠴⠾⠒⠀⠷⠼⠂⠬⠭⠾⠘⠴⠐⠤⠂⠀⠨⠅⠀⠼⠴⠀⠨⠂⠱⠀⠼⠴⠀⠨⠅⠀⠼⠴⠡⠭</nemeth> is true. Assume <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠷⠼⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠨⠂⠱⠀⠅⠭</nemeth> is true. Then</p><div class="displaymath"><nemeth>⠷⠼⠂⠬⠭⠾⠘⠅⠬⠂⠐⠤⠂⠀⠀⠨⠅⠀⠷⠼⠂⠬⠭⠾⠷⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠀⠀⠀⠨⠅⠀⠷⠼⠂⠬⠭⠾⠘⠅⠐⠬⠭⠷⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠀⠀⠀⠨⠂⠱⠀⠅⠭⠬⠭⠷⠂⠬⠭⠾⠘⠅⠐⠀⠀⠀⠀⠨⠂⠱⠀⠅⠭⠬⠭⠀⠀⠀⠀⠨⠅⠀⠷⠅⠬⠂⠾⠭</nemeth></div><p data-braille="continuation">, so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Therefore, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="itZ">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Power Sets.</span>
            </h6>
            <p id="qfP">Let <i class="one-letter">X</i> be a set. Define the <dfn class="terminology">power set</dfn> of <i class="one-letter">X</i>, denoted <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>, to be the set of all subsets  of <i class="one-letter">X</i>.  For example,</p>
            <div class="displaymath">
              <nemeth>⠈⠠⠏⠷⠨⠷⠁⠠⠀⠃⠨⠾⠾⠀⠨⠅⠀⠨⠷⠸⠴⠠⠀⠨⠷⠁⠨⠾⠠⠀⠨⠷⠃⠨⠾⠠⠀⠨⠷⠁⠠⠀⠃⠨⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. For every positive integer <i class="one-letter">n</i>, show that a set with exactly <i class="one-letter">n</i> elements has a power set with exactly <nemeth class="inline">⠼⠆⠘⠝</nemeth> elements.</p>
          </article>
          <article class="exercise exercise-like" id="OBi">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="WmY">Prove that the two principles of mathematical induction stated in Section 2.1 are equivalent.</p>
          </article>
          <article class="exercise exercise-like" id="uIr">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="Cuh">Show that the Principle of Well-Ordering for the natural numbers implies that 1 is the smallest natural number. Use this result to show that the Principle of Well-Ordering implies the Principle of Mathematical Induction; that is, show that if <nemeth class="inline">⠠⠎⠀⠸⠐⠅⠀⠸⠠⠝</nemeth> such that <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠎</nemeth> and <nemeth class="inline">⠝⠬⠂⠀⠈⠑⠀⠠⠎</nemeth> whenever <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠎</nemeth>, then <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="aPA">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="iBq">For each of the following pairs of numbers <i class="one-letter">a</i> and <i class="one-letter">b</i>, calculate <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth> and find integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠗⠁⠬⠎⠃</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="bNP"><nemeth class="inline">⠼⠂⠲</nemeth> and <nemeth class="inline">⠼⠒⠔</nemeth></p></li>
              <li>b. <p id="HUY"><nemeth class="inline">⠼⠆⠒⠲</nemeth> and <nemeth class="inline">⠼⠂⠖⠢</nemeth></p></li>
              <li>c. <p id="och"><nemeth class="inline">⠼⠂⠶⠒⠔</nemeth> and <nemeth class="inline">⠼⠔⠔⠆⠒</nemeth></p></li>
              <li>d. <p id="Ujq"><nemeth class="inline">⠼⠲⠶⠂</nemeth> and <nemeth class="inline">⠼⠢⠖⠆</nemeth></p></li>
              <li>e. <p id="Aqz"><nemeth class="inline">⠼⠆⠒⠶⠶⠂</nemeth> and <nemeth class="inline">⠼⠂⠔⠔⠲⠢</nemeth></p></li>
              <li>f. <p id="gxI"><nemeth class="inline">⠤⠼⠲⠒⠢⠶</nemeth> and <nemeth class="inline">⠼⠒⠶⠢⠲</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="GWJ">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="OIz">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be nonzero integers. If there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>, show that <i class="one-letter">a</i> and <i class="one-letter">b</i> are relatively prime.</p>
          </article>
          <article class="exercise exercise-like" id="ndS">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Fibonacci Numbers.</span>
            </h6>
            <p id="uPI">The Fibonacci numbers are</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠢⠠⠀⠼⠦⠠⠀⠼⠂⠒⠠⠀⠼⠆⠂⠠⠀⠄⠄⠄</nemeth>
            </div>
            <p data-braille="continuation">. We can define them inductively by <nemeth class="inline">⠋⠂⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠋⠆⠀⠨⠅⠀⠼⠂</nemeth>, and <nemeth class="inline">⠋⠰⠝⠬⠆⠐⠀⠨⠅⠀⠋⠰⠝⠬⠂⠐⠬⠋⠰⠝</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="xvT">Prove that <nemeth class="inline">⠋⠰⠝⠐⠀⠐⠅⠀⠼⠆⠘⠝</nemeth>.</p></li>
              <li>b. <p id="dDc">Prove that <nemeth class="inline">⠋⠰⠝⠬⠂⠐⠋⠰⠝⠤⠂⠐⠀⠨⠅⠀⠋⠰⠝⠘⠆⠐⠬⠷⠤⠼⠂⠾⠘⠝</nemeth>, <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>.</p></li>
              <li>c. <p id="JKl">Prove that <nemeth class="inline">⠋⠰⠝⠐⠀⠨⠅⠀⠈⠷⠷⠼⠂⠬⠜⠢⠻⠾⠘⠝⠐⠤⠷⠂⠤⠜⠢⠻⠾⠘⠝⠐⠈⠾⠸⠌⠆⠘⠝⠐⠜⠢⠻</nemeth>.</p></li>
              <li>d. <p id="pRu">Show that <nemeth class="inline">⠐⠇⠊⠍⠩⠝⠀⠫⠕⠀⠠⠿⠻⠀⠋⠰⠝⠐⠸⠌⠋⠰⠝⠬⠂⠐⠀⠨⠅⠀⠷⠜⠢⠻⠤⠂⠾⠸⠌⠆</nemeth>.</p></li>
              <li>e. <p id="VYD">Prove that <nemeth class="inline">⠋⠰⠝</nemeth> and <nemeth class="inline">⠋⠰⠝⠬⠂</nemeth> are relatively prime.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Iqx"><span class="type">Hint</span>:<p id="Hzz">For (a) and (b) use mathematical induction. (c) Show that <nemeth class="inline">⠋⠂⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠋⠆⠀⠨⠅⠀⠼⠂</nemeth>, and <nemeth class="inline">⠋⠰⠝⠬⠆⠐⠀⠨⠅⠀⠋⠰⠝⠬⠂⠐⠬⠋⠰⠝</nemeth>. (d) Use part (c). (e) Use part (b) and Exercise 2.4.16.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Tlb">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="aWR">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be integers such that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>. Let <i class="one-letter">r</i> and <i class="one-letter">s</i> be integers such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>. Prove that</p>
            <div class="displaymath">
              <nemeth>⠛⠉⠙⠀⠷⠁⠠⠀⠎⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠗⠠⠀⠃⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠗⠠⠀⠎⠾⠀⠨⠅⠀⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="zsk">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="Hea">Let <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠸⠠⠝</nemeth> be relatively prime. If <nemeth class="inline">⠭⠽</nemeth> is a perfect square, prove that <i class="one-letter">x</i> and <i class="one-letter">y</i> must both be perfect squares.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ALY"><span class="type">Hint</span>:<p id="nGI">Use the Fundamental Theorem of Arithmetic.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="fzt">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="nlj">Using the division algorithm, show that every perfect square is of the form <nemeth class="inline">⠼⠲⠅</nemeth> or <nemeth class="inline">⠼⠲⠅⠬⠂</nemeth> for some nonnegative integer <i class="one-letter">k</i>.</p>
          </article>
          <article class="exercise exercise-like" id="LGC">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="Tss">Suppose that <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠗⠠⠀⠎</nemeth> are pairwise relatively prime and that</p>
            <div class="displaymath">
              <nemeth>⠁⠘⠆⠐⠬⠃⠘⠆⠀⠀⠨⠅⠀⠗⠘⠆⠐⠀⠁⠘⠆⠐⠤⠃⠘⠆⠀⠀⠨⠅⠀⠎⠘⠆</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <i class="one-letter">a</i>, <i class="one-letter">r</i>, and <i class="one-letter">s</i> are odd and <i class="one-letter">b</i> is even.</p>
          </article>
          <article class="exercise exercise-like" id="rNL">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="zzB">Let <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>. Use the division algorithm to prove that every integer is congruent mod <i class="one-letter">n</i> to precisely one of the integers <nemeth class="inline">⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠂</nemeth>. Conclude that if <i class="one-letter">r</i> is an integer, then there is exactly one <i class="one-letter">s</i> in <nemeth class="inline">⠸⠠⠵</nemeth> such that <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠎⠀⠐⠅⠀⠝</nemeth> and <nemeth class="inline">⠈⠷⠗⠈⠾⠀⠨⠅⠀⠈⠷⠎⠈⠾</nemeth>. Hence, the integers are indeed partitioned by congruence mod <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="XUU">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="fGK">Define the <dfn class="terminology">least common multiple</dfn> of two nonzero integers <i class="one-letter">a</i> and <i class="one-letter">b</i>, denoted by <nemeth class="inline">⠇⠉⠍⠷⠁⠠⠀⠃⠾</nemeth>, to be the nonnegative integer <i class="one-letter">m</i> such that both <i class="one-letter">a</i> and <i class="one-letter">b</i> divide <i class="one-letter">m</i>, and if <i class="one-letter">a</i> and <i class="one-letter">b</i> divide any other integer <i class="one-letter">n</i>, then <i class="one-letter">m</i> also divides <i class="one-letter">n</i>.  Prove there exists a unique least common multiple for any two integers <i class="one-letter">a</i> and <i class="one-letter">b</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="FvR"><span class="type">Hint</span>:<p id="TNR">Use the Principle of Well-Ordering and the division algorithm.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Ecd">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="LNT">If <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth> and <nemeth class="inline">⠍⠀⠨⠅⠀⠇⠉⠍⠷⠁⠠⠀⠃⠾</nemeth>, prove that <nemeth class="inline">⠙⠍⠀⠨⠅⠀⠳⠁⠃⠳</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="kjm">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="rVc">Show that <nemeth class="inline">⠇⠉⠍⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠁⠃</nemeth> if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Qqv">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="Ycl">Prove that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠉⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠃⠠⠀⠉⠾⠀⠨⠅⠀⠼⠂</nemeth> if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠃⠠⠀⠉⠾⠀⠨⠅⠀⠼⠂</nemeth> for integers <i class="one-letter">a</i>, <i class="one-letter">b</i>, and <i class="one-letter">c</i>.</p>
          </article>
          <article class="exercise exercise-like" id="wxE">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="Eju">Let <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠸⠠⠵</nemeth>. Prove that if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠁⠳⠃⠉</nemeth>, then <nemeth class="inline">⠁⠳⠉</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="KfK"><span class="type">Hint</span>:<p id="zVa">Since <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>, there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>. Thus, <nemeth class="inline">⠁⠉⠗⠬⠃⠉⠎⠀⠨⠅⠀⠉</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="cEN">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="kqD">Let <nemeth class="inline">⠏⠀⠨⠂⠱⠀⠼⠆</nemeth>. Prove that if <nemeth class="inline">⠼⠆⠘⠏⠐⠤⠂</nemeth> is prime, then <i class="one-letter">p</i> must also be prime.</p>
          </article>
          <article class="exercise exercise-like" id="ILW">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="QxM">Prove that there are an infinite number of primes of the form <nemeth class="inline">⠼⠖⠝⠬⠢</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="CBl"><span class="type">Hint</span>:<p id="gcj">Every prime must be of the form <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠖⠝⠬⠂</nemeth>, or <nemeth class="inline">⠼⠖⠝⠬⠢</nemeth>. Suppose there are only finitely many primes of the form <nemeth class="inline">⠼⠖⠅⠬⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="oTf">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="wEV">Prove that there are an infinite number of primes of the form <nemeth class="inline">⠼⠲⠝⠤⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Vao">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="cMe">Using the fact that <nemeth class="inline">⠼⠆</nemeth> is prime, show that there do not exist integers <i class="one-letter">p</i> and <i class="one-letter">q</i> such that <nemeth class="inline">⠏⠘⠆⠐⠀⠨⠅⠀⠼⠆⠟⠘⠆</nemeth>. Demonstrate that therefore <nemeth class="inline">⠜⠆⠻</nemeth> cannot be a rational number.</p>
          </article>
        </section>
        <section class="exercises" id="jzs">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">2.5</span> <span class="title">Programming Exercises</span></div>
          <article class="exercise exercise-like" id="Bhx">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">The Sieve of Eratosthenes.</span>
            </h6>
            <p id="ITn">One method of computing all of the prime numbers less than a certain fixed positive integer <i class="one-letter">N</i> is to list all of the numbers <i class="one-letter">n</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠝⠀⠐⠅⠀⠠⠝</nemeth>. Begin by eliminating all of the multiples of <nemeth class="inline">⠼⠆</nemeth>. Next eliminate all of the multiples of <nemeth class="inline">⠼⠒</nemeth>. Now eliminate all of the multiples of <nemeth class="inline">⠼⠢</nemeth>. Notice that <nemeth class="inline">⠼⠲</nemeth> has already been crossed out. Continue in this manner, noticing that we do not have to go all the way to <i class="one-letter">N</i>; it suffices to stop at <nemeth class="inline">⠜⠠⠝⠻</nemeth>. Using this method, compute all of the prime numbers less than <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠼⠆⠢⠴</nemeth>. We can also use this method to find all of the integers that are relatively prime to an integer <i class="one-letter">N</i>. Simply eliminate the prime factors of <i class="one-letter">N</i> and all of their multiples. Using this method, find all of the numbers that are relatively prime to <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠼⠂⠆⠴</nemeth>. Using the Sieve of Eratosthenes, write a program that will compute all of the primes less than an integer <i class="one-letter">N</i>.</p>
          </article>
          <article class="exercise exercise-like" id="hoG">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="paw">Let <nemeth class="inline">⠸⠠⠝⠘⠴⠐⠀⠨⠅⠀⠸⠠⠝⠨⠬⠨⠷⠴⠨⠾</nemeth>. Ackermann's function is the function <nemeth class="inline">⠠⠁⠒⠀⠸⠠⠝⠘⠴⠐⠈⠡⠸⠠⠝⠘⠴⠐⠀⠫⠕⠀⠸⠠⠝⠘⠴</nemeth> defined by the equations</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠷⠼⠴⠠⠀⠽⠾⠀⠀⠨⠅⠀⠽⠬⠂⠠⠀⠠⠁⠷⠭⠬⠂⠠⠀⠼⠴⠾⠀⠀⠨⠅⠀⠠⠁⠷⠭⠠⠀⠼⠂⠾⠠⠀⠠⠁⠷⠭⠬⠂⠠⠀⠽⠬⠂⠾⠀⠀⠨⠅⠀⠠⠁⠷⠭⠠⠀⠠⠁⠷⠭⠬⠂⠠⠀⠽⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">. Use this definition to compute <nemeth class="inline">⠠⠁⠷⠼⠒⠠⠀⠼⠂⠾</nemeth>. Write a program to evaluate Ackermann's function. Modify the  program to count the number of statements executed in the program when Ackermann's function is evaluated. How many statements are executed in the evaluation of <nemeth class="inline">⠠⠁⠷⠼⠲⠠⠀⠼⠂⠾</nemeth>? What about <nemeth class="inline">⠠⠁⠷⠼⠢⠠⠀⠼⠂⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="NvP">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="VhF">Write a computer program that will implement the Euclidean algorithm. The program should accept two positive integers <i class="one-letter">a</i> and <i class="one-letter">b</i> as input and should output <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth> as well as integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that</p>
            <div class="displaymath">
              <nemeth>⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠗⠁⠬⠎⠃</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
        </section>
        <section class="references" id="Dta">
          <div class="none"><span class="type">References</span> <span class="codenumber">2.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="jAj"><div class="bibitem">[1]</div>  <div class="bibentry"> Brookshear, J. G. <i>Theory of Computation: Formal Languages, Automata, and Complexity</i>.  Benjamin/Cummings, Redwood City, CA, 1989. Shows the relationships of the theoretical aspects of computer science to set theory and the integers.</div></article>
          <article class="bib" id="PHs"><div class="bibitem">[2]</div>  <div class="bibentry"> Hardy, G. H. and Wright, E. M. <i>An Introduction to the Theory of Numbers</i>.  6th ed. Oxford University Press, New York, 2008.</div></article>
          <article class="bib" id="vOB"><div class="bibitem">[3]</div>  <div class="bibentry"> Niven, I. and Zuckerman, H. S. <i>An Introduction to the Theory of Numbers</i>.  5th ed. Wiley, New York, 1991.</div></article>
          <article class="bib" id="bVK"><div class="bibitem">[4]</div>  <div class="bibentry"> Vanden Eynden, C. <i>Elementary Number Theory</i>. 2nd ed.  Waveland Press, Long Grove IL, 2001.</div></article>
        </section>
        <section class="section" id="ojl">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">2.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="Mqw">
            <p id="oqC">Many properties of the algebraic objects we will study can be determined from properties of associated integers. And Sage has many powerful functions for analyzing integers.</p>
          </section>
          <section class="subsection" id="KWI">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.7.1</span> <span class="title">Division Algorithm</span></div>
            <p id="qPJ">The code <code class="code-inline tex2jax_ignore">a % b</code> will return the remainder upon division of <i class="one-letter">a</i> by <i class="one-letter">b</i>. In other words, the result is the unique integer <i class="one-letter">r</i> such that (1) <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠃</nemeth>, and (2) <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth> for some integer <i class="one-letter">q</i> (the quotient), as guaranteed by the Division Algorithm (Theorem 2.2.1). Then <nemeth class="inline">⠷⠁⠤⠗⠾⠸⠌⠃</nemeth> will equal <i class="one-letter">q</i>. For example,</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r = 14 % 3
r
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">q = (14 - r)/3
q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4
</div>
            </article>
            <p id="WWS">It is also possible to get both the quotient and remainder at the same time with the <code class="code-inline tex2jax_ignore">.quo_rem()</code> method (quotient and remainder).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 14
b = 3
a.quo_rem(b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4, 2)
</div>
            </article>
            <p id="Deb">A remainder of zero indicates divisibility. So <code class="code-inline tex2jax_ignore">(a % b) == 0</code> will return <code class="code-inline tex2jax_ignore">True</code> if <i class="one-letter">b</i> divides <i class="one-letter">a</i>, and will otherwise return <code class="code-inline tex2jax_ignore">False</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(20 % 5) == 0
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(17 % 4) == 0
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="jlk">The <code class="code-inline tex2jax_ignore">.divides()</code> method is another option.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = 5
c.divides(20)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d = 4
d.divides(17)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
          </section>
          <section class="subsection" id="rdR">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.7.2</span> <span class="title">Greatest Common Divisor</span></div>
            <p id="Pst">The greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> is obtained with the command <code class="code-inline tex2jax_ignore">gcd(a, b)</code>, where in our first uses, <i class="one-letter">a</i> and <i class="one-letter">b</i> are integers. Later, <i class="one-letter">a</i> and <i class="one-letter">b</i> can be other objects with a notion of divisibility and “greatness,” such as polynomials. For example,</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">gcd(2776, 2452)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4
</div>
            </article>
            <p id="vzC">We can use the <code class="code-inline tex2jax_ignore">gcd</code> command to determine if a pair of integers are relatively prime.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 31049
b = 2105
gcd(a, b) == 1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 3563
b = 2947
gcd(a, b) == 1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="bGL">The command <code class="code-inline tex2jax_ignore">xgcd(a,b)</code>(“eXtended GCD”) returns a triple where the first element is the greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> (as with the <code class="code-inline tex2jax_ignore">gcd(a,b)</code> command above), but the next two elements are values of <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠗⠁⠬⠎⠃⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">xgcd(633,331)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, -137, 262)
</div>
            </article>
            <p id="HNU">Portions of the triple can be extracted using <code class="code-inline tex2jax_ignore">[ ]</code>(“indexing”) to access the entries of the triple, starting with the first as number <code class="code-inline tex2jax_ignore">0</code>. For example, the following should always return the result <code class="code-inline tex2jax_ignore">True</code>, even if you change the values of <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code>. Try changing the values of <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code> below, to see that the result is always <code class="code-inline tex2jax_ignore">True</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 633
b = 331
extended = xgcd(a, b)
g = extended[0]
r = extended[1]
s = extended[2]
g == r*a + s*b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="nVd">Studying this block of code will go a long way towards helping you get the most out of Sage's output. Note that <code class="code-inline tex2jax_ignore">=</code> is how a value is <em class="emphasis">assigned</em> to a variable, while as in the last line, <code class="code-inline tex2jax_ignore">==</code> is how we compare two items for <em class="emphasis">equality</em>.</p>
          </section>
          <section class="subsection" id="Xla">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.7.3</span> <span class="title">Primes and Factoring</span></div>
            <p id="Ucm">The method <code class="code-inline tex2jax_ignore">.is_prime()</code> will determine if an integer is prime or not.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 117371
a.is_prime()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = 14547073
b.is_prime()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b == 1597 * 9109
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="Ajv">The command <code class="code-inline tex2jax_ignore">random_prime(a, proof=True)</code> will generate a random prime number between <nemeth class="inline">⠼⠆</nemeth> and <i class="one-letter">a</i>. Experiment by executing the following two compute cells several times. (Replacing <code class="code-inline tex2jax_ignore">proof=True</code> by <code class="code-inline tex2jax_ignore">proof=False</code> will speed up the search, but there will be a very, very, very small probability the result will not be prime.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = random_prime(10^21, proof=True)
a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">424729101793542195193
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.is_prime()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="gqE">The command <code class="code-inline tex2jax_ignore">prime_range(a, b)</code> returns an ordered list of all the primes from <i class="one-letter">a</i> to <nemeth class="inline">⠃⠤⠂</nemeth>, inclusive. For example,</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">prime_range(500, 550)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[503, 509, 521, 523, 541, 547]
</div>
            </article>
            <p id="MxN">The commands <code class="code-inline tex2jax_ignore">next_prime(a)</code> and <code class="code-inline tex2jax_ignore">previous_prime(a)</code> are other ways to get a single prime number of a desired size. Give them a try below if you have an empty compute cell there (as you will if you are reading in the Sage Notebook, or are reading the online version). (The hash symbol, <code class="code-inline tex2jax_ignore">#</code>, is used to indicate a “comment” line, which will not be evaluated by Sage. So erase this line, or start on the one below it.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
            <p id="sEW">In addition to checking if integers are prime or not, or generating prime numbers, Sage can also decompose any integer into its prime factors, as described by the Fundamental Theorem of Arithmetic (Theorem 2.2.7).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 2600
a.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2^3 * 5^2 * 13
</div>
            </article>
            <p id="YMf">So <nemeth class="inline">⠼⠆⠖⠴⠴⠀⠨⠅⠀⠼⠆⠘⠒⠐⠈⠡⠢⠘⠆⠐⠈⠡⠂⠒</nemeth> and this is the unique way to write <nemeth class="inline">⠼⠆⠖⠴⠴</nemeth> as a product of prime numbers (other than rearranging the order of the primes themselves in the product).</p>
            <p id="ETo">While Sage will print a factorization nicely, it is carried internally as a list of pairs of integers, with each pair being a base (a prime number) and an exponent (a positive integer). Study the following carefully, as it is another good exercise in working with Sage output in the form of lists.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 2600
factored = a.factor()
first_term = factored[0]
first_term
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2, 3)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">second_term = factored[1]
second_term
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(5, 2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">third_term = factored[2]
third_term
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(13, 1)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">first_prime = first_term[0]
first_prime
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">first_exponent = first_term[1]
first_exponent
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <p id="lax">The next compute cell reveals the internal version of the factorization by asking for the actual list. And we show how you could determine exactly how many terms the factorization has by using the length command, <code class="code-inline tex2jax_ignore">len()</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">list(factored)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(2, 3), (5, 2), (13, 1)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">len(factored)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <p id="RhG">Can you extract the next two primes, and their exponents, from <code class="code-inline tex2jax_ignore">a</code>?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="PGB">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">2.8</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="tCY">
            <p id="UxL">These exercises are about investigating basic properties of the integers, something we will frequently do when investigating groups. Sage worksheets have extensive capabilities for making new cells with carefully formatted text, include support for <span class="latex-logo">L<span class="A">a</span>T<span class="E">e</span>X</span> syntax to express mathematics. So when a question asks for explanation or commentary, make a new cell and communicate clearly with your audience.</p>
          </section>
          <article class="exercise exercise-like" id="ZKh">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="BoO">Use the <code class="code-inline tex2jax_ignore">next_prime()</code> command to construct two different 8-digit prime numbers and save them in variables named <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code>.</p>
          </article>
          <article class="exercise exercise-like" id="FRq">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="hvX">Use the <code class="code-inline tex2jax_ignore">.is_prime()</code> method to verify that your primes <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code> are really prime.</p>
          </article>
          <article class="exercise exercise-like" id="lYz">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="NDg">Verify that <nemeth class="inline">⠼⠂</nemeth> is the greatest common divisor of your two primes from the previous exercises.</p>
          </article>
          <article class="exercise exercise-like" id="SfI">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="tKp">Find two integers that make a “linear combination” of your two primes equal to <nemeth class="inline">⠼⠂</nemeth>. Include a verification of your result.</p>
          </article>
          <article class="exercise exercise-like" id="ymR">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ZRy">Determine a factorization into powers of primes for <nemeth class="inline">⠉⠀⠨⠅⠀⠼⠲⠢⠔⠦⠴⠒⠶⠆⠒⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="eua">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="FYH">Write a compute cell that defines the same value of <code class="code-inline tex2jax_ignore">c</code> again, and then defines a candidate divisor of <code class="code-inline tex2jax_ignore">c</code> named <code class="code-inline tex2jax_ignore">d</code>. The third line of the cell should return <code class="code-inline tex2jax_ignore">True</code> if and only if <code class="code-inline tex2jax_ignore">d</code> is a divisor of <code class="code-inline tex2jax_ignore">c</code>. Illustrate the use of your cell by testing your code with <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠶</nemeth> and in a new copy of the cell, testing your code with <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠂⠂</nemeth>.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="ZbN">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">3</span> <span class="title">Groups</span></div>
        <section class="introduction" id="sdG">
          <p id="nfF">We begin our study of algebraic structures by investigating sets associated with single operations that satisfy certain reasonable axioms; that is, we want to define an operation on a set in a way that will generalize such familiar structures as the integers <nemeth class="inline">⠸⠠⠵</nemeth> together with the single operation of addition, or invertible <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices together with the single operation of matrix multiplication. The integers and the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices, together with their respective single operations, are examples of algebraic structures known as groups.</p>
          <p id="TmO">The theory of groups occupies a central position in mathematics. Modern group theory arose from an attempt to find the roots of a polynomial in terms of its coefficients. Groups now play a central role in such areas as coding theory, counting, and the study of symmetries; many areas of biology, chemistry, and physics have benefited from group theory.</p>
        </section>
        <section class="section" id="nfs">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">3.1</span> <span class="title">Integer Equivalence Classes and Symmetries</span></div>
          <section class="introduction" id="YkP">
            <p id="ztX">Let us now investigate some mathematical structures that can be viewed as sets with single operations.</p>
          </section>
          <section class="subsection" id="FiW">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.1.1</span> <span class="title">The Integers mod <i class="one-letter">n</i></span></div>
            <p id="RLW">The integers mod <i class="one-letter">n</i> have become indispensable in the theory and applications of algebra. In mathematics they are used in cryptography, coding theory, and the detection of errors in identification codes.</p>
            <p id="xTf">We have already seen that two integers <i class="one-letter">a</i> and <i class="one-letter">b</i> are equivalent mod <i class="one-letter">n</i> if <i class="one-letter">n</i> divides <nemeth class="inline">⠁⠤⠃</nemeth>. The integers mod <i class="one-letter">n</i> also partition <nemeth class="inline">⠸⠠⠵</nemeth> into <i class="one-letter">n</i> different equivalence classes; we will denote the set of these equivalence classes by <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.  Consider the integers modulo <nemeth class="inline">⠼⠂⠆</nemeth> and the corresponding partition of the integers:</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠼⠴⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠆⠠⠀⠼⠴⠠⠀⠼⠂⠆⠠⠀⠼⠆⠲⠠⠀⠄⠄⠄⠨⠾⠠⠀⠈⠷⠂⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠂⠠⠀⠼⠂⠠⠀⠼⠂⠒⠠⠀⠼⠆⠢⠠⠀⠄⠄⠄⠨⠾⠠⠀⠀⠀⠣⠄⠄⠄⠀⠈⠷⠂⠂⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠂⠂⠠⠀⠼⠆⠒⠠⠀⠼⠒⠢⠠⠀⠄⠄⠄⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. When no confusion can arise, we will use <nemeth class="inline">⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠂</nemeth> to indicate the equivalence classes  <nemeth class="inline">⠈⠷⠼⠴⠈⠾⠠⠀⠈⠷⠼⠂⠈⠾⠠⠀⠄⠄⠄⠀⠠⠀⠈⠷⠼⠂⠂⠈⠾</nemeth> respectively. We can do arithmetic on <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. For two integers <i class="one-letter">a</i> and <i class="one-letter">b</i>, define addition modulo <i class="one-letter">n</i> to be <nemeth class="inline">⠷⠁⠬⠃⠾⠷⠍⠕⠙⠀⠝⠾</nemeth>; that is, the remainder when <nemeth class="inline">⠁⠬⠃</nemeth> is divided by <i class="one-letter">n</i>. Similarly, multiplication modulo <i class="one-letter">n</i> is defined as <nemeth class="inline">⠷⠁⠃⠾⠷⠍⠕⠙⠀⠝⠾</nemeth>, the remainder when <nemeth class="inline">⠁⠃</nemeth> is divided by <i class="one-letter">n</i>.</p>
            <article class="example example-like" data-braille="example-like" id="rPl">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="gGz">The following examples illustrate integer arithmetic modulo <i class="one-letter">n</i>:</p>
              <div class="displaymath">
                <nemeth>⠼⠶⠬⠲⠀⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠢⠾⠀⠶⠡⠒⠀⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠢⠾⠀⠒⠬⠢⠀⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠦⠾⠀⠒⠡⠢⠀⠀⠸⠇⠀⠼⠶⠷⠍⠕⠙⠀⠦⠾⠀⠒⠬⠲⠀⠀⠸⠇⠀⠼⠶⠷⠍⠕⠙⠀⠂⠆⠾⠀⠒⠡⠲⠀⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠂⠆⠾</nemeth>
              </div>
              <p data-braille="continuation">. In particular, notice that it is possible that the product of two nonzero numbers modulo <i class="one-letter">n</i> can be equivalent to <nemeth class="inline">⠼⠴</nemeth> modulo <i class="one-letter">n</i>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="XWu">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="MNI">Most, but not all, of the usual laws of arithmetic hold for addition and multiplication in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. For instance, it is not necessarily true that there is a multiplicative inverse. Consider the multiplication table for <nemeth class="inline">⠸⠠⠵⠦</nemeth> in Figure 3.1.3. Notice that <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠲</nemeth>, and <nemeth class="inline">⠼⠖</nemeth> do not have multiplicative inverses; that is, for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠆</nemeth>, <nemeth class="inline">⠼⠲</nemeth>, or <nemeth class="inline">⠼⠖</nemeth>, there is no integer <i class="one-letter">k</i> such that <nemeth class="inline">⠅⠝⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠦⠾</nemeth>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="PPF">
                <div class="displaymath">
                  <nemeth>⠡⠀⠴⠀⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠀⠶⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠀⠶⠀⠆⠀⠴⠀⠆⠀⠲⠀⠖⠀⠴⠀⠆⠀⠲⠀⠖⠀⠒⠀⠴⠀⠒⠀⠖⠀⠂⠀⠲⠀⠶⠀⠆⠀⠢⠀⠲⠀⠴⠀⠲⠀⠴⠀⠲⠀⠴⠀⠲⠀⠴⠀⠲⠀⠢⠀⠴⠀⠢⠀⠆⠀⠶⠀⠲⠀⠂⠀⠖⠀⠒⠀⠖⠀⠴⠀⠖⠀⠲⠀⠆⠀⠴⠀⠖⠀⠲⠀⠆⠀⠶⠀⠴⠀⠶⠀⠖⠀⠢⠀⠲⠀⠒⠀⠆⠀⠂</nemeth>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.1.3<span class="period">.</span></span><span class="space"> </span>Multiplication table for <nemeth class="inline">⠸⠠⠵⠦</nemeth></figcaption>
              </figure>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="LIc">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="DtW">Let <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> be the set of equivalence classes of the integers mod <i class="one-letter">n</i> and <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠸⠠⠵⠰⠝⠐</nemeth>.</p>
              <ol class="outerlist">
                <li>1. <p id="CvH">Addition and multiplication are commutative:</p><div class="displaymath"><nemeth>⠁⠬⠃⠀⠀⠸⠇⠀⠃⠬⠁⠷⠍⠕⠙⠀⠝⠾⠀⠁⠃⠀⠀⠸⠇⠀⠃⠁⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>2. <p id="iCQ">Addition and multiplication are associative:</p><div class="displaymath"><nemeth>⠷⠁⠬⠃⠾⠬⠉⠀⠀⠸⠇⠀⠁⠬⠷⠃⠬⠉⠾⠷⠍⠕⠙⠀⠝⠾⠀⠷⠁⠃⠾⠉⠀⠀⠸⠇⠀⠁⠷⠃⠉⠾⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>3. <p id="OJZ">There are both additive and multiplicative identities:</p><div class="displaymath"><nemeth>⠁⠬⠴⠀⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠾⠀⠁⠡⠂⠀⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>4. <p id="uRi">Multiplication distributes over addition:</p><div class="displaymath"><nemeth>⠁⠷⠃⠬⠉⠾⠀⠸⠇⠀⠁⠃⠬⠁⠉⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>5. <p id="aYr">For every integer <i class="one-letter">a</i> there is an additive inverse <nemeth class="inline">⠤⠁</nemeth>:</p><div class="displaymath"><nemeth>⠁⠬⠷⠤⠁⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>6. <p id="HfA">Let <i class="one-letter">a</i> be a nonzero integer. Then <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth> if and only if there exists a multiplicative inverse <i class="one-letter">b</i> for <nemeth class="inline">⠁⠷⠍⠕⠙⠀⠝⠾</nemeth>; that is, a nonzero integer <i class="one-letter">b</i> such that</p><div class="displaymath"><nemeth>⠁⠃⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="QGq">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="VxA">We will prove (1) and (6) and leave the remaining properties to be proven in the exercises.</p>
              <p id="BEJ">(1) Addition and multiplication are commutative modulo <i class="one-letter">n</i> since the remainder of <nemeth class="inline">⠁⠬⠃</nemeth> divided by <i class="one-letter">n</i> is the same as the remainder of <nemeth class="inline">⠃⠬⠁</nemeth> divided by <i class="one-letter">n</i>.</p>
              <p id="hLS">(6) Suppose that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>. Then there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠝⠎⠀⠨⠅⠀⠼⠂</nemeth>. Since <nemeth class="inline">⠝⠎⠀⠨⠅⠀⠼⠂⠤⠁⠗</nemeth>, it must be the case that <nemeth class="inline">⠁⠗⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>. Letting <i class="one-letter">b</i> be the equivalence class of <i class="one-letter">r</i>, <nemeth class="inline">⠁⠃⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>.</p>
              <p id="NTb">Conversely, suppose that there exists an integer <i class="one-letter">b</i> such that <nemeth class="inline">⠁⠃⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>. Then <i class="one-letter">n</i> divides <nemeth class="inline">⠁⠃⠤⠂</nemeth>, so there is an integer <i class="one-letter">k</i> such that <nemeth class="inline">⠁⠃⠤⠝⠅⠀⠨⠅⠀⠼⠂</nemeth>. Let <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠝⠾</nemeth>. Since <i class="one-letter">d</i> divides <nemeth class="inline">⠁⠃⠤⠝⠅</nemeth>, <i class="one-letter">d</i> must also divide <nemeth class="inline">⠼⠂</nemeth>; hence, <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="lqf">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.1.2</span> <span class="title">Symmetries</span></div>
            <figure class="figure figure-like" data-braille="figure-like" id="iKh">
              <div data-braille="image">
                <p>Image: The four symmetries ot a rectangle: (1) sending rectangle ABCD to rectangle ABCD, (2) sending rectangle ABCD to rectangle CDAB, (3) sending rectangle ABCD to rectangle BADC, and (4) sending rectangle ABCD to rectangle DCBA.</p>
                <p>ID: groups-rectangle</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.1.5<span class="period">.</span></span><span class="space"> </span>Rigid motions of a rectangle</figcaption>
            </figure>
            <p id="eao">A <dfn class="terminology">symmetry</dfn> of a geometric figure is a rearrangement of the figure preserving the arrangement of its sides and vertices as well as its distances and angles. A map from the plane to itself preserving the symmetry of an object is called a <dfn class="terminology">rigid motion</dfn>.  For example, if we look at the rectangle in Figure 3.1.5, it is easy to see that a rotation of <nemeth class="inline">⠼⠂⠦⠴⠘⠘⠨⠡</nemeth> or <nemeth class="inline">⠼⠒⠖⠴⠘⠘⠨⠡</nemeth> returns a rectangle in the plane with the same orientation as the original rectangle and the same relationship among the vertices. A reflection of the rectangle across either the vertical axis or the horizontal axis can also be seen to be a symmetry. However, a <nemeth class="inline">⠼⠔⠴⠘⠘⠨⠡</nemeth> rotation in either direction cannot be a symmetry unless the rectangle is a square.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="ORq">
              <div data-braille="image">
                <p>Image: The six symmetries of a triangle: (1) triangle ABC to triangle ABC, (2) ABC to CAB, (3) ABC to BCA, (4) ABC to ACB, (5) ABC to CBA, and (6) ABC to BAC</p>
                <p>ID: groups-s3-symmetry</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.1.6<span class="period">.</span></span><span class="space"> </span>Symmetries of a triangle</figcaption>
            </figure>
            <p id="Khx">Let us find the symmetries of the equilateral triangle <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth>. To find a symmetry of <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth>, we must first examine the permutations of the vertices <i class="one-letter">A</i>, <i class="one-letter">B</i>, and <i class="one-letter">C</i> and then ask if a permutation extends to a symmetry of the triangle. Recall that a <dfn class="terminology">permutation</dfn> of a set <i class="one-letter">S</i> is a one-to-one and onto map <nemeth class="inline">⠨⠏⠒⠀⠠⠎⠀⠫⠕⠀⠠⠎</nemeth>. The three vertices have <nemeth class="inline">⠼⠒⠖⠀⠀⠨⠅⠀⠼⠖</nemeth> permutations, so the triangle has at most six symmetries. To see that there are six permutations, observe there are three different possibilities for the first vertex, and two for the second, and the remaining vertex is determined by the placement of the first two. So we have <nemeth class="inline">⠼⠒⠡⠆⠡⠂⠀⠨⠅⠀⠼⠒⠖⠀⠀⠨⠅⠀⠼⠖</nemeth> different arrangements. To denote the permutation of the vertices of an equilateral triangle that sends <i class="one-letter">A</i> to <i class="one-letter">B</i>, <i class="one-letter">B</i> to <i class="one-letter">C</i>, and <i class="one-letter">C</i> to <i class="one-letter">A</i>, we write the array</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠃⠀⠠⠉⠀⠠⠁⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">. Notice that this particular permutation corresponds to the rigid motion of rotating the triangle by <nemeth class="inline">⠼⠂⠆⠴⠘⠘⠨⠡</nemeth> in a clockwise direction. In fact, every permutation gives rise to a symmetry of the triangle. All of these symmetries are shown in Figure 3.1.6.</p>
            <p id="qoG">A natural question to ask is what happens if one motion of the triangle <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth> is followed by another. Which symmetry is <nemeth class="inline">⠨⠍⠂⠨⠗⠂</nemeth>; that is, what happens when we do the permutation <nemeth class="inline">⠨⠗⠂</nemeth> and then the permutation <nemeth class="inline">⠨⠍⠂</nemeth>? <em class="emphasis">Remember that we are composing functions here. Although we usually multiply left to right, we compose functions right to left.</em> We have</p>
            <div class="displaymath">
              <nemeth>⠷⠍⠂⠗⠂⠾⠷⠠⠁⠾⠀⠀⠨⠅⠀⠍⠂⠷⠗⠂⠷⠠⠁⠾⠾⠀⠨⠅⠀⠍⠂⠷⠠⠃⠾⠀⠨⠅⠀⠠⠉⠀⠷⠍⠂⠗⠂⠾⠷⠠⠃⠾⠀⠀⠨⠅⠀⠍⠂⠷⠗⠂⠷⠠⠃⠾⠾⠀⠨⠅⠀⠍⠂⠷⠠⠉⠾⠀⠨⠅⠀⠠⠃⠀⠷⠍⠂⠗⠂⠾⠷⠠⠉⠾⠀⠀⠨⠅⠀⠍⠂⠷⠗⠂⠷⠠⠉⠾⠾⠀⠨⠅⠀⠍⠂⠷⠠⠁⠾⠀⠨⠅⠀⠠⠁</nemeth>
            </div>
            <p data-braille="continuation">. This is the same symmetry as <nemeth class="inline">⠨⠍⠆</nemeth>. Suppose we do these motions in the opposite order, <nemeth class="inline">⠨⠗⠂</nemeth> then <nemeth class="inline">⠨⠍⠂</nemeth>. It is easy to determine that this is the same as the symmetry <nemeth class="inline">⠨⠍⠒</nemeth>; hence, <nemeth class="inline">⠨⠗⠂⠨⠍⠂⠀⠌⠨⠅⠀⠨⠍⠂⠨⠗⠂</nemeth>. A multiplication table for the symmetries of an equilateral triangle <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth> is given in Figure 3.1.7.</p>
            <p id="WvP">Notice that in the multiplication table for the symmetries of an equilateral triangle, for every motion of the triangle <nemeth class="inline">⠨⠁</nemeth> there is another motion <nemeth class="inline">⠨⠃</nemeth> such that <nemeth class="inline">⠨⠁⠨⠃⠀⠨⠅⠀⠊⠙</nemeth>; that is, for every motion there is another motion that takes the triangle back to its original orientation.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="osp">
              <div class="displaymath">
                <nemeth>⠘⠨⠡⠀⠊⠙⠀⠨⠗⠂⠀⠨⠗⠆⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠍⠒⠀⠊⠙⠀⠊⠙⠀⠨⠗⠂⠀⠨⠗⠆⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠍⠒⠀⠨⠗⠂⠀⠨⠗⠂⠀⠨⠗⠆⠀⠊⠙⠀⠨⠍⠒⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠗⠆⠀⠨⠗⠆⠀⠊⠙⠀⠨⠗⠂⠀⠨⠍⠆⠀⠨⠍⠒⠀⠨⠍⠂⠀⠨⠍⠂⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠍⠒⠀⠊⠙⠀⠨⠗⠂⠀⠨⠗⠆⠀⠨⠍⠆⠀⠨⠍⠆⠀⠨⠍⠒⠀⠨⠍⠂⠀⠨⠗⠆⠀⠊⠙⠀⠨⠗⠂⠀⠨⠍⠒⠀⠨⠍⠒⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠗⠂⠀⠨⠗⠆⠀⠊⠙</nemeth>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.1.7<span class="period">.</span></span><span class="space"> </span>Symmetries of an equilateral triangle</figcaption>
            </figure>
          </section>
        </section>
        <section class="section" id="TmB">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">3.2</span> <span class="title">Definitions and Examples</span></div>
          <section class="introduction" id="ErY">
            <p id="fBg">The integers mod <i class="one-letter">n</i> and the symmetries of a triangle or a rectangle are examples of groups. A <dfn class="terminology">binary operation</dfn>  or <dfn class="terminology">law of composition</dfn> on a set <i class="one-letter">G</i> is a function <nemeth class="inline">⠠⠛⠈⠡⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> that assigns to each pair <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠛⠈⠡⠠⠛</nemeth> a unique element <nemeth class="inline">⠁⠘⠨⠡⠃</nemeth>, or <nemeth class="inline">⠁⠃</nemeth> in <i class="one-letter">G</i>, called the composition of <i class="one-letter">a</i> and <i class="one-letter">b</i>. A <dfn class="terminology">group</dfn> <nemeth class="inline">⠷⠠⠛⠠⠀⠘⠨⠡⠾</nemeth> is a set <i class="one-letter">G</i> together with a law of composition <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠫⠳⠒⠒⠕⠀⠁⠘⠨⠡⠃</nemeth> that satisfies the following axioms.</p>
            <ul class="outerlist">
              <li>• <p id="nmJ">The law of composition is <dfn class="terminology">associative</dfn>. That is,</p><div class="displaymath"><nemeth>⠷⠁⠘⠨⠡⠃⠾⠘⠨⠡⠉⠀⠨⠅⠀⠁⠘⠨⠡⠷⠃⠘⠨⠡⠉⠾</nemeth></div><p data-braille="continuation">for <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠛</nemeth>.</p></li>
              <li>• <p id="TtS">There exists an element <nemeth class="inline">⠑⠀⠈⠑⠀⠠⠛</nemeth>, called the <dfn class="terminology">identity element</dfn>,  such that for any element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth></p><div class="displaymath"><nemeth>⠑⠘⠨⠡⠁⠀⠨⠅⠀⠁⠘⠨⠡⠑⠀⠨⠅⠀⠁</nemeth></div><p data-braille="continuation">.</p></li>
              <li>• <p id="zBb">For each element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>, there exists an <dfn class="terminology">inverse element</dfn>  in G, denoted by <nemeth class="inline">⠁⠘⠤⠼⠂</nemeth>, such that</p><div class="displaymath"><nemeth>⠁⠘⠨⠡⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠘⠨⠡⠁⠀⠨⠅⠀⠑</nemeth></div><p data-braille="continuation">.</p></li>
            </ul>
            <p id="LIp">A group <i class="one-letter">G</i> with the property that <nemeth class="inline">⠁⠘⠨⠡⠃⠀⠨⠅⠀⠃⠘⠨⠡⠁</nemeth> for all <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth> is called <dfn class="terminology">abelian</dfn>  or <dfn class="terminology">commutative</dfn>.  Groups not satisfying this property are said to be <dfn class="terminology">nonabelian</dfn>  or <dfn class="terminology">noncommutative</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="bfv">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Zca">The integers <nemeth class="inline">⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠨⠾</nemeth> form a group under the operation of addition. The binary operation on two integers <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth> is just their sum. Since the integers under addition already have a well-established notation, we will use the operator <nemeth class="inline">⠬</nemeth> instead of <nemeth class="inline">⠘⠨⠡</nemeth>; that is, we shall write <nemeth class="inline">⠍⠬⠝</nemeth> instead of <nemeth class="inline">⠍⠘⠨⠡⠝</nemeth>. The identity is <nemeth class="inline">⠼⠴</nemeth>, and the inverse of <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth> is written as <nemeth class="inline">⠤⠝</nemeth> instead of <nemeth class="inline">⠝⠘⠤⠼⠂</nemeth>. Notice that the set of integers under addition have the additional property that <nemeth class="inline">⠍⠬⠝⠀⠨⠅⠀⠝⠬⠍</nemeth> and therefore form an abelian group.</p>
            </article>
            <p id="rPy">Most of the time we will write <nemeth class="inline">⠁⠃</nemeth> instead of <nemeth class="inline">⠁⠘⠨⠡⠃</nemeth>; however, if the group already has a natural operation such as addition in the integers, we will use that operation. That is, if we are adding two integers, we still write <nemeth class="inline">⠍⠬⠝</nemeth>, <nemeth class="inline">⠤⠝</nemeth> for the inverse, and 0 for the identity as usual. We also write <nemeth class="inline">⠍⠤⠝</nemeth> instead of <nemeth class="inline">⠍⠬⠷⠤⠝⠾</nemeth>.</p>
            <p id="XWH">It is often convenient to describe a group in terms of an addition or multiplication table. Such a table is called a <dfn class="terminology">Cayley table</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="HmE">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="Fjj">The integers mod <i class="one-letter">n</i> form a group under addition modulo <i class="one-letter">n</i>. Consider <nemeth class="inline">⠸⠠⠵⠢</nemeth>, consisting of the equivalence classes of the integers <nemeth class="inline">⠼⠴</nemeth>, <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, and <nemeth class="inline">⠼⠲</nemeth>. We define the group operation on <nemeth class="inline">⠸⠠⠵⠢</nemeth> by modular addition. We write the binary operation on the group additively; that is, we write <nemeth class="inline">⠍⠬⠝</nemeth>. The element 0 is the identity of the group and each element in <nemeth class="inline">⠸⠠⠵⠢</nemeth> has an inverse. For instance, <nemeth class="inline">⠼⠆⠬⠒⠀⠨⠅⠀⠼⠒⠬⠆⠀⠨⠅⠀⠼⠴</nemeth>. Figure 3.2.3 is a Cayley table for <nemeth class="inline">⠸⠠⠵⠢</nemeth>. By Proposition 3.1.4, <nemeth class="inline">⠸⠠⠵⠰⠝⠐⠀⠨⠅⠀⠨⠷⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠂⠨⠾</nemeth> is a group under the binary operation of addition mod <i class="one-letter">n</i>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="vWO">
                <div class="displaymath">
                  <nemeth>⠬⠀⠴⠀⠂⠀⠆⠀⠒⠀⠲⠀⠴⠀⠴⠀⠂⠀⠆⠀⠒⠀⠲⠀⠂⠀⠂⠀⠆⠀⠒⠀⠲⠀⠴⠀⠆⠀⠆⠀⠒⠀⠲⠀⠴⠀⠂⠀⠒⠀⠒⠀⠲⠀⠴⠀⠂⠀⠆⠀⠲⠀⠲⠀⠴⠀⠂⠀⠆⠀⠒</nemeth>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.2.3<span class="period">.</span></span><span class="space"> </span>Cayley table for <nemeth class="inline">⠷⠸⠠⠵⠢⠠⠀⠬⠾</nemeth></figcaption>
              </figure>
            </article>
            <article class="example example-like" data-braille="example-like" id="ntN">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="RxB">Not every set with a binary operation is a group. For example, if we let modular multiplication be the binary operation on <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, then <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> fails to be a group. The element 1 acts as a group identity since <nemeth class="inline">⠼⠂⠡⠅⠀⠨⠅⠀⠅⠡⠂⠀⠨⠅⠀⠅</nemeth> for any <nemeth class="inline">⠅⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth>; however, a multiplicative inverse for <nemeth class="inline">⠼⠴</nemeth> does not exist since <nemeth class="inline">⠼⠴⠡⠅⠀⠨⠅⠀⠅⠡⠴⠀⠨⠅⠀⠼⠴</nemeth> for every <i class="one-letter">k</i> in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. Even if we consider the set <nemeth class="inline">⠸⠠⠵⠰⠝⠐⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠴⠨⠾</nemeth>, we still may not have a group. For instance, let <nemeth class="inline">⠼⠆⠀⠈⠑⠀⠸⠠⠵⠖</nemeth>. Then 2 has no multiplicative inverse since</p>
              <div class="displaymath">
                <nemeth>⠼⠴⠡⠆⠀⠀⠨⠅⠀⠼⠴⠂⠡⠆⠀⠨⠅⠀⠼⠆⠀⠆⠡⠆⠀⠀⠨⠅⠀⠼⠲⠒⠡⠆⠀⠨⠅⠀⠼⠴⠀⠲⠡⠆⠀⠀⠨⠅⠀⠼⠆⠢⠡⠆⠀⠨⠅⠀⠼⠲</nemeth>
              </div>
              <p data-braille="continuation">. By Proposition 3.1.4, every nonzero <i class="one-letter">k</i> does have an inverse in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> if <i class="one-letter">k</i> is relatively prime to <i class="one-letter">n</i>. Denote the set of all such nonzero elements in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> by <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth>.  Then <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> is a group called the <dfn class="terminology">group of units</dfn>  of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. Figure 3.2.5 is a Cayley table for the group <nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="cdX">
                <div class="displaymath">
                  <nemeth>⠡⠀⠂⠀⠒⠀⠢⠀⠶⠀⠂⠀⠂⠀⠒⠀⠢⠀⠶⠀⠒⠀⠒⠀⠂⠀⠶⠀⠢⠀⠢⠀⠢⠀⠶⠀⠂⠀⠒⠀⠶⠀⠶⠀⠢⠀⠒⠀⠂</nemeth>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.2.5<span class="period">.</span></span><span class="space"> </span>Multiplication table for <nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth></figcaption>
              </figure>
            </article>
            <article class="example example-like" data-braille="example-like" id="TAW">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="dLT">The symmetries of an equilateral triangle described in Section 3.1 form a nonabelian group. As we observed, it is not necessarily true that <nemeth class="inline">⠨⠁⠨⠃⠀⠨⠅⠀⠨⠃⠨⠁</nemeth> for two symmetries <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth>. Using Figure 3.1.7, which is a Cayley table for this group, we can easily check that the symmetries of an equilateral triangle are indeed a group. We will denote this group by either <nemeth class="inline">⠠⠎⠒</nemeth> or <nemeth class="inline">⠠⠙⠒</nemeth>, for reasons that will be explained later.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="zIf">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="JTc">We use  <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> to denote the set of all <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices. Let <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> be the subset of <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> consisting of invertible matrices; that is, a matrix </p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">is in  <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> if there exists a matrix <nemeth class="inline">⠠⠁⠘⠤⠼⠂</nemeth> such that <nemeth class="inline">⠠⠁⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠁⠘⠤⠼⠂⠐⠠⠁⠀⠨⠅⠀⠠⠊</nemeth>, where <i class="one-letter">I</i> is the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> identity matrix. For <i class="one-letter">A</i> to have an inverse is equivalent to requiring that the determinant of <i class="one-letter">A</i> be nonzero; that is, <nemeth class="inline">⠙⠑⠞⠀⠠⠁⠀⠨⠅⠀⠁⠙⠤⠃⠉⠀⠌⠨⠅⠀⠼⠴</nemeth>.  The set of invertible matrices forms a group called the <dfn class="terminology">general linear group</dfn>.  The identity of the group is the identity matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠊⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. The inverse of <nemeth class="inline">⠠⠁⠀⠈⠑⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠹⠂⠌⠁⠙⠤⠃⠉⠼⠠⠷⠙⠀⠤⠃⠠⠾⠀⠠⠷⠤⠉⠀⠁⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. The product of two invertible matrices is again invertible. Matrix multiplication is associative, satisfying the other group axiom. For matrices it is not true in general that <nemeth class="inline">⠠⠁⠠⠃⠀⠨⠅⠀⠠⠃⠠⠁</nemeth>; hence, <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is another example of a nonabelian group.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="fPo">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="qal">Let</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠊⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠚⠀⠀⠨⠅⠀⠠⠷⠼⠴⠀⠊⠠⠾⠀⠠⠷⠊⠀⠴⠠⠾⠠⠅⠀⠨⠅⠀⠠⠷⠊⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠊⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>. Then the relations <nemeth class="inline">⠠⠊⠘⠆⠐⠀⠨⠅⠀⠠⠚⠘⠆⠐⠀⠨⠅⠀⠠⠅⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>, <nemeth class="inline">⠠⠊⠠⠚⠀⠨⠅⠀⠠⠅</nemeth>, <nemeth class="inline">⠠⠚⠠⠅⠀⠨⠅⠀⠠⠊</nemeth>, <nemeth class="inline">⠠⠅⠠⠊⠀⠨⠅⠀⠠⠚</nemeth>, <nemeth class="inline">⠠⠚⠠⠊⠀⠨⠅⠀⠤⠠⠅</nemeth>, <nemeth class="inline">⠠⠅⠠⠚⠀⠨⠅⠀⠤⠠⠊</nemeth>, and <nemeth class="inline">⠠⠊⠠⠅⠀⠨⠅⠀⠤⠠⠚</nemeth> hold. The set  <nemeth class="inline">⠠⠟⠦⠀⠨⠅⠀⠨⠷⠬⠤⠼⠂⠠⠀⠬⠤⠠⠊⠠⠀⠬⠤⠠⠚⠠⠀⠬⠤⠠⠅⠨⠾</nemeth> is a group called the <dfn class="terminology">quaternion group</dfn>.  Notice that <nemeth class="inline">⠠⠟⠦</nemeth> is noncommutative.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="LWx">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="Whu">Let <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> be the set of nonzero complex numbers.  Under the operation of multiplication <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> forms a group. The identity is <nemeth class="inline">⠼⠂</nemeth>. If <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> is a nonzero complex number, then</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠹⠁⠤⠃⠊⠌⠁⠘⠆⠐⠬⠃⠘⠆⠐⠼</nemeth>
              </div>
              <p data-braille="continuation">is the inverse of <i class="one-letter">z</i>. It is easy to see that the remaining group axioms hold.</p>
            </article>
            <p id="EdQ">A group is <dfn class="terminology">finite</dfn>,  or has <dfn class="terminology">finite order</dfn>, if it contains a finite number of elements; otherwise, the group is said to be <dfn class="terminology">infinite</dfn> or to have <dfn class="terminology">infinite order</dfn>.  The <dfn class="terminology">order</dfn>  of a finite group is the number of elements that it contains. If <i class="one-letter">G</i> is a group containing <i class="one-letter">n</i> elements, we write <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠝</nemeth>.  The group <nemeth class="inline">⠸⠠⠵⠢</nemeth> is a finite group of order <nemeth class="inline">⠼⠢</nemeth>; the integers <nemeth class="inline">⠸⠠⠵</nemeth> form an infinite group under addition, and we sometimes write <nemeth class="inline">⠳⠸⠠⠵⠳⠀⠨⠅⠀⠠⠿</nemeth>.</p>
          </section>
          <section class="subsection" id="Rxo">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.2.1</span> <span class="title">Basic Properties of Groups</span></div>
            <article class="proposition theorem-like" data-braille="theorem-like" id="kkM">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="jBf">The identity element in a group <i class="one-letter">G</i> is unique; that is, there exists only one element <nemeth class="inline">⠑⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠑⠛⠀⠨⠅⠀⠛⠑⠀⠨⠅⠀⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="wNz">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="uak">Suppose that <i class="one-letter">e</i> and <nemeth class="inline">⠑⠄</nemeth> are both identities in <i class="one-letter">G</i>. Then <nemeth class="inline">⠑⠛⠀⠨⠅⠀⠛⠑⠀⠨⠅⠀⠛</nemeth> and <nemeth class="inline">⠑⠘⠄⠐⠛⠀⠨⠅⠀⠛⠑⠘⠄⠐⠀⠨⠅⠀⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. We need to show that <nemeth class="inline">⠑⠀⠨⠅⠀⠑⠄</nemeth>. If we think of <i class="one-letter">e</i> as the identity, then <nemeth class="inline">⠑⠑⠘⠄⠐⠀⠨⠅⠀⠑⠄</nemeth>; but if <nemeth class="inline">⠑⠄</nemeth> is the identity, then <nemeth class="inline">⠑⠑⠘⠄⠐⠀⠨⠅⠀⠑</nemeth>. Combining these two equations, we have <nemeth class="inline">⠑⠀⠨⠅⠀⠑⠑⠘⠄⠐⠀⠨⠅⠀⠑⠄</nemeth>.</p>
            </article>
            <p id="uYz">Inverses in a group are also unique. If <nemeth class="inline">⠛⠄</nemeth> and <nemeth class="inline">⠛⠄⠄</nemeth> are both inverses of an element <i class="one-letter">g</i> in a group <i class="one-letter">G</i>, then <nemeth class="inline">⠛⠛⠘⠄⠐⠀⠨⠅⠀⠛⠘⠄⠐⠛⠀⠨⠅⠀⠑</nemeth> and <nemeth class="inline">⠛⠛⠘⠄⠄⠐⠀⠨⠅⠀⠛⠘⠄⠄⠐⠛⠀⠨⠅⠀⠑</nemeth>. We want to show that <nemeth class="inline">⠛⠘⠄⠐⠀⠨⠅⠀⠛⠄⠄</nemeth>, but <nemeth class="inline">⠛⠘⠄⠐⠀⠨⠅⠀⠛⠘⠄⠐⠑⠀⠨⠅⠀⠛⠘⠄⠐⠷⠛⠛⠘⠄⠄⠐⠾⠀⠨⠅⠀⠷⠛⠘⠄⠐⠛⠾⠛⠘⠄⠄⠐⠀⠨⠅⠀⠑⠛⠘⠄⠄⠐⠀⠨⠅⠀⠛⠄⠄</nemeth>. We summarize this fact in the following proposition.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="QrV">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="PIo">If <i class="one-letter">g</i> is any element in a group <i class="one-letter">G</i>, then the inverse of <i class="one-letter">g</i>, denoted by <nemeth class="inline">⠛⠘⠤⠼⠂</nemeth>, is unique.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="wze">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.12</span>
                <span class="period">.</span>
              </h6>
              <p id="vPx">Let <i class="one-letter">G</i> be a group. If <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>, then <nemeth class="inline">⠷⠁⠃⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="cUI">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="aht">Let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>. Then <nemeth class="inline">⠁⠃⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠑⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠑</nemeth>. Similarly, <nemeth class="inline">⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂⠐⠁⠃⠀⠨⠅⠀⠑</nemeth>. But by the previous proposition, inverses are unique; hence, <nemeth class="inline">⠷⠁⠃⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂</nemeth>.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="cGn">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.13</span>
                <span class="period">.</span>
              </h6>
              <p id="bWG">Let <i class="one-letter">G</i> be a group. For any <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>, <nemeth class="inline">⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="JbR">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="GoC">Observe that <nemeth class="inline">⠁⠘⠤⠼⠂⠐⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠑</nemeth>. Consequently, multiplying both sides of this equation by <i class="one-letter">a</i>, we have</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠑⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠁⠘⠤⠼⠂⠐⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠑⠀⠨⠅⠀⠁</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="bfI">It makes sense to write equations with group elements and group operations. If <i class="one-letter">a</i> and <i class="one-letter">b</i> are two elements in a group <i class="one-letter">G</i>, does there exist an element <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth>? If such an <i class="one-letter">x</i> does exist, is it unique? The following proposition answers both of these questions positively.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="INw">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.14</span>
                <span class="period">.</span>
              </h6>
              <p id="IdP">Let <i class="one-letter">G</i> be a group and <i class="one-letter">a</i> and <i class="one-letter">b</i> be any two elements in <i class="one-letter">G</i>. Then the equations <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth> and <nemeth class="inline">⠭⠁⠀⠨⠅⠀⠃</nemeth> have unique solutions in <i class="one-letter">G</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="pja">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="mvL">Suppose that <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth>. We must show that such an <i class="one-letter">x</i> exists. We can multiply both sides of <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth> by <nemeth class="inline">⠁⠘⠤⠼⠂</nemeth> to find <nemeth class="inline">⠭⠀⠨⠅⠀⠑⠭⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠁⠭⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠃</nemeth>.</p>
              <p id="SCU">To show uniqueness, suppose that <nemeth class="inline">⠭⠂</nemeth> and <nemeth class="inline">⠭⠆</nemeth> are both solutions of <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth>; then <nemeth class="inline">⠁⠭⠂⠀⠨⠅⠀⠃⠀⠨⠅⠀⠁⠭⠆</nemeth>. So <nemeth class="inline">⠭⠂⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠁⠭⠂⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠁⠭⠆⠀⠨⠅⠀⠭⠆</nemeth>. The proof for the existence and uniqueness of the solution of <nemeth class="inline">⠭⠁⠀⠨⠅⠀⠃</nemeth> is similar.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="oUF">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.15</span>
                <span class="period">.</span>
              </h6>
              <p id="okY">If <i class="one-letter">G</i> is a group and <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠛</nemeth>, then <nemeth class="inline">⠃⠁⠀⠨⠅⠀⠉⠁</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth> and <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠁⠉</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth>.</p>
            </article>
            <p id="HmR">This proposition tells us that the <dfn class="terminology">right and left cancellation laws</dfn> are true in groups. We leave the proof as an exercise.</p>
            <p id="nua">We can use exponential notation for groups just as we do in ordinary algebra. If <i class="one-letter">G</i> is a group and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, then we define <nemeth class="inline">⠛⠘⠴⠐⠀⠨⠅⠀⠑</nemeth>. For <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>, we define</p>
            <div class="displaymath">
              <nemeth>⠛⠘⠝⠐⠀⠨⠅⠀⠐⠐⠛⠡⠛⠀⠄⠄⠄⠀⠛⠩⠄⡳⠭⠆⠒⠙⠋⠄⠻⠩⠝⠞⠊⠍⠑⠎⠻</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠛⠘⠤⠝⠐⠀⠨⠅⠀⠐⠐⠛⠘⠤⠼⠂⠐⠡⠛⠘⠤⠼⠂⠐⠀⠄⠄⠄⠀⠛⠘⠤⠼⠂⠐⠩⠄⡳⠭⠆⠒⠙⠋⠄⠻⠩⠝⠞⠊⠍⠑⠎⠻</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="EdD">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.16</span>
                <span class="period">.</span>
              </h6>
              <p id="XmN">In a group, the usual laws of exponents hold; that is, for all <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠛</nemeth>,</p>
              <ol class="outerlist">
                <li>1. <p id="fIk"><nemeth class="inline">⠛⠘⠍⠐⠛⠘⠝⠐⠀⠨⠅⠀⠛⠘⠍⠬⠝</nemeth> for all <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>;</p></li>
                <li>2. <p id="LPt"><nemeth class="inline">⠷⠛⠘⠍⠐⠾⠘⠝⠐⠀⠨⠅⠀⠛⠘⠍⠝</nemeth> for all <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>;</p></li>
                <li>3. <p id="rWC"><nemeth class="inline">⠷⠛⠓⠾⠘⠝⠐⠀⠨⠅⠀⠷⠓⠘⠤⠼⠂⠐⠛⠘⠤⠼⠂⠐⠾⠘⠤⠝</nemeth> for all <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>. Furthermore, if <i class="one-letter">G</i> is abelian, then <nemeth class="inline">⠷⠛⠓⠾⠘⠝⠐⠀⠨⠅⠀⠛⠘⠝⠐⠓⠘⠝</nemeth>.</p></li>
              </ol>
            </article>
            <p id="TBj">We will leave the proof of this theorem as an exercise. Notice that <nemeth class="inline">⠷⠛⠓⠾⠘⠝⠐⠀⠌⠨⠅⠀⠛⠘⠝⠐⠓⠘⠝</nemeth> in general, since the group may not be abelian. If the group is <nemeth class="inline">⠸⠠⠵</nemeth> or <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, we write the group operation additively and the exponential operation multiplicatively; that is, we write <nemeth class="inline">⠝⠛</nemeth> instead of <nemeth class="inline">⠛⠘⠝</nemeth>. The laws of exponents now become</p>
            <ol class="outerlist">
              <li>1. <p id="YdL"><nemeth class="inline">⠍⠛⠬⠝⠛⠀⠨⠅⠀⠷⠍⠬⠝⠾⠛</nemeth> for all <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>;</p></li>
              <li>2. <p id="EkU"><nemeth class="inline">⠍⠷⠝⠛⠾⠀⠨⠅⠀⠷⠍⠝⠾⠛</nemeth> for all <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>;</p></li>
              <li>3. <p id="ksd"><nemeth class="inline">⠍⠷⠛⠬⠓⠾⠀⠨⠅⠀⠍⠛⠬⠍⠓</nemeth> for all <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>.</p></li>
            </ol>
            <p id="zIs">It is important to realize that the last statement can be made only because <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> are commutative groups.</p>
          </section>
          <section class="subsection" id="xEx">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.2.2</span> <span class="title">Historical Note</span></div>
            <p id="fPB">Although the first clear axiomatic definition of a group was not given until the late 1800s, group-theoretic methods had been employed before this time in the development of many areas of mathematics, including geometry and the theory of algebraic equations.</p>
            <p id="LWK">Joseph-Louis Lagrange  used group-theoretic methods in a 1770–1771 memoir to study methods of solving polynomial equations. Later, Évariste Galois  (1811–1832) succeeded in developing the mathematics necessary to determine exactly which polynomial equations could be solved in terms of the coefficients of the polynomial. Galois' primary tool was group theory.</p>
            <p id="sdT">The study of geometry was revolutionized in 1872 when Felix Klein  proposed that geometric spaces should be studied by examining those properties that are invariant under a transformation of the space. Sophus Lie,  a contemporary of Klein, used group theory to study solutions of partial differential equations. One of the first modern treatments of group theory appeared in William Burnside's  <span class="booktitle">The Theory of Groups of Finite Order</span> [1], first published in 1897.</p>
          </section>
        </section>
        <section class="section" id="ztK">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">3.3</span> <span class="title">Subgroups</span></div>
          <section class="subsection" id="dLG">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.3.1</span> <span class="title">Definitions and Examples</span></div>
            <p id="Ylc">Sometimes we wish to investigate smaller groups sitting inside a larger group. The set of even integers <nemeth class="inline">⠼⠆⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠆⠠⠀⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠄⠄⠄⠨⠾</nemeth> is a group under the operation of addition. This smaller group sits naturally inside of the group of integers under addition. We define a <dfn class="terminology">subgroup</dfn> <i class="one-letter">H</i> of a group <i class="one-letter">G</i> to be a subset <i class="one-letter">H</i> of <i class="one-letter">G</i> such that when the group operation of <i class="one-letter">G</i> is restricted to <i class="one-letter">H</i>, <i class="one-letter">H</i> is a group in its own right. Observe that every group <i class="one-letter">G</i> with at least two elements will always have at least two subgroups, the subgroup consisting of the identity element alone and the entire group itself. The subgroup <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth> of a group <i class="one-letter">G</i> is called the <dfn class="terminology">trivial subgroup</dfn>.  A subgroup that is a proper subset of <i class="one-letter">G</i> is called a <dfn class="terminology">proper subgroup</dfn>.  In many of the examples that we have investigated up to this point, there exist other subgroups besides the trivial and improper subgroups.</p>
            <article class="example example-like" data-braille="example-like" id="VbO">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.1</span>
                <span class="period">.</span>
              </h6>
              <p id="CoD">Consider the set of nonzero real numbers, <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth>, with the group operation of multiplication.  The identity of this group is <nemeth class="inline">⠼⠂</nemeth> and the inverse of any element <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠗⠘⠈⠼</nemeth> is just <nemeth class="inline">⠼⠂⠸⠌⠁</nemeth>. We will show that</p>
              <div class="displaymath">
                <nemeth>⠸⠠⠟⠘⠈⠼⠐⠀⠨⠅⠀⠨⠷⠏⠸⠌⠟⠒⠀⠏⠁⠝⠙⠟⠁⠗⠑⠀⠝⠕⠝⠵⠑⠗⠕⠀⠊⠝⠞⠑⠛⠑⠗⠎⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">is a subgroup of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth>.  The identity of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> is <nemeth class="inline">⠼⠂</nemeth>; however,  <nemeth class="inline">⠼⠂⠀⠨⠅⠀⠼⠂⠸⠌⠂</nemeth> is the quotient of two nonzero integers. Hence, the identity of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> is in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>. Given two elements in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>, say <nemeth class="inline">⠏⠸⠌⠟</nemeth> and <nemeth class="inline">⠗⠸⠌⠎</nemeth>, their product <nemeth class="inline">⠏⠗⠸⠌⠟⠎</nemeth> is also in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>. The inverse of any element <nemeth class="inline">⠏⠸⠌⠟⠀⠈⠑⠀⠸⠠⠟⠘⠈⠼</nemeth> is again in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> since <nemeth class="inline">⠷⠏⠸⠌⠟⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠟⠸⠌⠏</nemeth>. Since multiplication in <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> is associative, multiplication in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> is associative.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="BiX">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.2</span>
                <span class="period">.</span>
              </h6>
              <p id="ivM">Recall that <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> is the multiplicative group of nonzero complex numbers. Let <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠤⠼⠂⠠⠀⠊⠠⠀⠤⠊⠨⠾</nemeth>. Then <i class="one-letter">H</i> is a subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>. It is quite easy to verify that <i class="one-letter">H</i> is a group under multiplication and that <nemeth class="inline">⠠⠓⠀⠸⠐⠅⠀⠸⠠⠉⠘⠈⠼</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="hqg">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.3</span>
                <span class="period">.</span>
              </h6>
              <p id="OCV">Let <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> be the subset of <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> consisting of matrices of determinant one; that is, a matrix </p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">is in <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> exactly when <nemeth class="inline">⠁⠙⠤⠃⠉⠀⠨⠅⠀⠼⠂</nemeth>. To show that <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is a subgroup of the general linear group, we must show that it is a group under matrix multiplication. The <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> identity matrix is in <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>, as is the inverse of the matrix <i class="one-letter">A</i>:</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠙⠀⠤⠃⠠⠾⠀⠠⠷⠤⠉⠀⠁⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. It remains to show that multiplication is closed; that is, that the product of two matrices of determinant one also has determinant one. We will leave this task as an exercise. The group <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is called the <dfn class="terminology">special linear group</dfn>. </p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Nxp">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.4</span>
                <span class="period">.</span>
              </h6>
              <p id="uKe">It is important to realize that a subset <i class="one-letter">H</i> of a group <i class="one-letter">G</i> can be a group without being a subgroup of <i class="one-letter">G</i>. For <i class="one-letter">H</i> to be a subgroup of <i class="one-letter">G</i>, it must inherit the binary operation of <i class="one-letter">G</i>. The set of all <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices, <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth>, forms a group under the operation of addition. The <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> general linear group is a subset of <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> and is a group under matrix multiplication, but it is not a subgroup of <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth>. If we add two invertible matrices, we do not necessarily obtain another invertible matrix. Observe that</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠬⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾⠀⠨⠅⠀⠠⠷⠼⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, but the zero matrix is not in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="tEy">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.5</span>
                <span class="period">.</span>
              </h6>
              <p id="aRn">One way of telling whether or not two groups are the same is by examining their subgroups. Other than the trivial subgroup and the group itself, the group <nemeth class="inline">⠸⠠⠵⠲</nemeth> has a single subgroup consisting of the elements <nemeth class="inline">⠼⠴</nemeth> and <nemeth class="inline">⠼⠆</nemeth>. From the group <nemeth class="inline">⠸⠠⠵⠆</nemeth>, we can form another group of four elements as follows. As a set this group is <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>. We perform the group operation coordinatewise; that is, <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠬⠷⠉⠠⠀⠙⠾⠀⠨⠅⠀⠷⠁⠬⠉⠠⠀⠃⠬⠙⠾</nemeth>. Figure 3.3.6 is an addition table for <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>. Since there are three nontrivial proper subgroups of <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>, <nemeth class="inline">⠠⠓⠂⠀⠨⠅⠀⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠠⠀⠷⠼⠴⠠⠀⠼⠂⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠆⠀⠨⠅⠀⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠠⠀⠷⠼⠂⠠⠀⠼⠴⠾⠨⠾</nemeth>, and <nemeth class="inline">⠠⠓⠒⠀⠨⠅⠀⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠠⠀⠷⠼⠂⠠⠀⠼⠂⠾⠨⠾</nemeth>, <nemeth class="inline">⠸⠠⠵⠲</nemeth> and <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth> must be different groups.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="Ilg">
                <div class="displaymath">
                  <nemeth>⠬⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾</nemeth>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.3.6<span class="period">.</span></span><span class="space"> </span>Addition table for <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth></figcaption>
              </figure>
            </article>
          </section>
          <section class="subsection" id="JSP">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.3.2</span> <span class="title">Some Subgroup Theorems</span></div>
            <p id="Esl">Let us examine some criteria for determining exactly when a subset of a group is a subgroup.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="ZLH">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.7</span>
                <span class="period">.</span>
              </h6>
              <p id="Ush">A subset <i class="one-letter">H</i> of <i class="one-letter">G</i> is a subgroup if and only if it satisfies the following conditions.</p>
              <ol class="outerlist">
                <li>1. <p id="Qzm">The identity <i class="one-letter">e</i> of <i class="one-letter">G</i> is in <i class="one-letter">H</i>.</p></li>
                <li>2. <p id="wGv">If <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>, then <nemeth class="inline">⠓⠂⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>.</p></li>
                <li>3. <p id="cNE">If <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth>, then <nemeth class="inline">⠓⠘⠤⠼⠂⠐⠀⠈⠑⠀⠠⠓</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Vqj">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="yKd">First suppose that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>. We must show that the three conditions hold. Since <i class="one-letter">H</i> is a group, it must have an identity <nemeth class="inline">⠑⠰⠠⠓</nemeth>. We must show that <nemeth class="inline">⠑⠰⠠⠓⠐⠀⠨⠅⠀⠑</nemeth>, where <i class="one-letter">e</i> is the identity of <i class="one-letter">G</i>. We know that <nemeth class="inline">⠑⠰⠠⠓⠐⠑⠰⠠⠓⠐⠀⠨⠅⠀⠑⠰⠠⠓</nemeth> and that <nemeth class="inline">⠑⠑⠰⠠⠓⠐⠀⠨⠅⠀⠑⠰⠠⠓⠐⠑⠀⠨⠅⠀⠑⠰⠠⠓</nemeth>; hence, <nemeth class="inline">⠑⠑⠰⠠⠓⠐⠀⠨⠅⠀⠑⠰⠠⠓⠐⠑⠰⠠⠓</nemeth>. By right-hand cancellation, <nemeth class="inline">⠑⠀⠨⠅⠀⠑⠰⠠⠓</nemeth>. The second condition holds since a subgroup <i class="one-letter">H</i> is a group. To prove the third condition, let <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth>. Since <i class="one-letter">H</i> is a group, there is an element <nemeth class="inline">⠓⠘⠄⠐⠀⠈⠑⠀⠠⠓</nemeth> such that <nemeth class="inline">⠓⠓⠘⠄⠐⠀⠨⠅⠀⠓⠘⠄⠐⠓⠀⠨⠅⠀⠑</nemeth>. By the uniqueness of the inverse in <i class="one-letter">G</i>, <nemeth class="inline">⠓⠘⠄⠐⠀⠨⠅⠀⠓⠘⠤⠼⠂</nemeth>.</p>
              <p id="eRm">Conversely, if the three conditions hold, we must show that <i class="one-letter">H</i> is a group under the same operation as <i class="one-letter">G</i>; however, these conditions plus the associativity of the binary operation are exactly the axioms stated in the definition of a group.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="FSQ">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.8</span>
                <span class="period">.</span>
              </h6>
              <p id="Azq">Let <i class="one-letter">H</i> be a subset of a group <i class="one-letter">G</i>. Then <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i> if and only if <nemeth class="inline">⠠⠓⠀⠌⠨⠅⠀⠸⠴</nemeth>, and whenever <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠓</nemeth> then <nemeth class="inline">⠛⠓⠘⠤⠼⠂</nemeth> is in <i class="one-letter">H</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Bxs">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="KYv">First assume that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>. We wish to show that <nemeth class="inline">⠛⠓⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓</nemeth> whenever <i class="one-letter">g</i> and <i class="one-letter">h</i> are in <i class="one-letter">H</i>. Since <i class="one-letter">h</i> is in <i class="one-letter">H</i>, its inverse <nemeth class="inline">⠓⠘⠤⠼⠂</nemeth> must also be in <i class="one-letter">H</i>. Because of the closure of the group operation, <nemeth class="inline">⠛⠓⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓</nemeth>.</p>
              <p id="rfE">Conversely, suppose that <nemeth class="inline">⠠⠓⠀⠸⠐⠅⠀⠠⠛</nemeth> such that <nemeth class="inline">⠠⠓⠀⠌⠨⠅⠀⠸⠴</nemeth> and <nemeth class="inline">⠛⠓⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓</nemeth> whenever <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠓</nemeth>. If <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠓</nemeth>, then <nemeth class="inline">⠛⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠑</nemeth> is in <i class="one-letter">H</i>. If <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠓</nemeth>, then <nemeth class="inline">⠑⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠛⠘⠤⠼⠂</nemeth> is also in <i class="one-letter">H</i>. Now let <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>. We must show that their product is also in <i class="one-letter">H</i>. However, <nemeth class="inline">⠓⠂⠷⠓⠆⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠓⠂⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>. Hence, <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>.</p>
            </article>
            <article class="paragraphs" id="GYj">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="kzu">The first half of this text is about group theory. Sage includes Groups, Algorithms and Programming (<abbr class="acronym">GAP</abbr>), a program designed primarly for just group theory, and in continuous development since 1986. Many of Sage's computations for groups ultimately are performed by GAP.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="VNv">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">3.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="fgH">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="PXJ">In the group <nemeth class="inline">⠸⠠⠵⠦</nemeth> compute, (a) <nemeth class="inline">⠼⠖⠬⠶</nemeth>, and (b) <nemeth class="inline">⠼⠆⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LnQ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="weS">In the group <nemeth class="inline">⠠⠥⠷⠼⠂⠖⠾</nemeth> compute, (a) <nemeth class="inline">⠼⠢⠡⠶</nemeth>, and (b) <nemeth class="inline">⠼⠒⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ruZ">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="cmb">State the definition of a group.</p>
          </article>
          <article class="exercise exercise-like" id="XCi">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="Itk">Explain a single method that will decide if a subset of a group is itself a subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="DJr">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="oAt">Explain the origin of the term “abelian” for a commutative group.</p>
          </article>
          <article class="exercise exercise-like" id="jQA">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="UHC">Give an example of a group you have seen in your previous mathematical experience, but that is not an example in this chapter.</p>
          </article>
        </section>
        <section class="exercises" id="OCI">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">3.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="lZZ">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="wzr">Find all <nemeth class="inline">⠭⠀⠈⠑⠀⠸⠠⠵</nemeth> satisfying each of the following equations.</p>
            <ol class="outerlist">
              <li>a. <p id="IUN"><nemeth class="inline">⠼⠒⠭⠀⠸⠇⠀⠼⠆⠷⠍⠕⠙⠀⠶⠾</nemeth></p></li>
              <li>b. <p id="pbW"><nemeth class="inline">⠼⠢⠭⠬⠂⠀⠸⠇⠀⠼⠂⠒⠷⠍⠕⠙⠀⠆⠒⠾</nemeth></p></li>
              <li>c. <p id="Vjf"><nemeth class="inline">⠼⠢⠭⠬⠂⠀⠸⠇⠀⠼⠂⠒⠷⠍⠕⠙⠀⠆⠖⠾</nemeth></p></li>
              <li>d. <p id="Bqo"><nemeth class="inline">⠼⠔⠭⠀⠸⠇⠀⠼⠒⠷⠍⠕⠙⠀⠢⠾</nemeth></p></li>
              <li>e. <p id="hxx"><nemeth class="inline">⠼⠢⠭⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠖⠾</nemeth></p></li>
              <li>f. <p id="NEG"><nemeth class="inline">⠼⠒⠭⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠖⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="NLK"><span class="type">Hint</span>:<p id="nBe">(a) <nemeth class="inline">⠼⠒⠬⠶⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠲⠠⠀⠼⠒⠠⠀⠼⠂⠴⠠⠀⠄⠄⠄⠨⠾</nemeth>; (c) <nemeth class="inline">⠼⠂⠦⠬⠆⠖⠸⠠⠵</nemeth>; (e) <nemeth class="inline">⠼⠢⠬⠖⠸⠠⠵</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Shi">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="cGA">Which of the following multiplication tables defined on the set <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠠⠀⠙⠨⠾</nemeth> form a group? Support your answer in each case.</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠘⠨⠡⠀⠁⠀⠃⠀⠉⠀⠙⠀⠁⠀⠁⠀⠉⠀⠙⠀⠁⠀⠃⠀⠃⠀⠃⠀⠉⠀⠙⠀⠉⠀⠉⠀⠙⠀⠁⠀⠃⠀⠙⠀⠙⠀⠁⠀⠃⠀⠉</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠘⠨⠡⠀⠁⠀⠃⠀⠉⠀⠙⠀⠁⠀⠁⠀⠃⠀⠉⠀⠙⠀⠃⠀⠃⠀⠁⠀⠙⠀⠉⠀⠉⠀⠉⠀⠙⠀⠁⠀⠃⠀⠙⠀⠙⠀⠉⠀⠃⠀⠁</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠘⠨⠡⠀⠁⠀⠃⠀⠉⠀⠙⠀⠁⠀⠁⠀⠃⠀⠉⠀⠙⠀⠃⠀⠃⠀⠉⠀⠙⠀⠁⠀⠉⠀⠉⠀⠙⠀⠁⠀⠃⠀⠙⠀⠙⠀⠁⠀⠃⠀⠉</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠘⠨⠡⠀⠁⠀⠃⠀⠉⠀⠙⠀⠁⠀⠁⠀⠃⠀⠉⠀⠙⠀⠃⠀⠃⠀⠁⠀⠉⠀⠙⠀⠉⠀⠉⠀⠃⠀⠁⠀⠙⠀⠙⠀⠙⠀⠙⠀⠃⠀⠉</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="aac"><span class="type">Hint</span>:<p id="TIn">(a) Not a group; (c) a group.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="yor">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="INJ">Write out Cayley tables for groups formed by the symmetries of a rectangle and for <nemeth class="inline">⠷⠸⠠⠵⠲⠠⠀⠬⠾</nemeth>. How many elements are in each group? Are the groups the same? Why or why not?</p>
          </article>
          <article class="exercise exercise-like" id="evA">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="oUS">Describe the symmetries of a rhombus and prove that the set of symmetries forms a group. Give Cayley tables for both the symmetries of a rectangle and the symmetries of a rhombus. Are the symmetries of a rectangle and those of a rhombus the same?</p>
          </article>
          <article class="exercise exercise-like" id="KCJ">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Vcb">Describe the symmetries of a square and prove that the set of symmetries is a group. Give a Cayley table for the symmetries. How many ways can the vertices of a square be permuted? Is each permutation necessarily a symmetry of the square? The symmetry group of the square is denoted by <nemeth class="inline">⠠⠙⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="qJS">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="Bjk">Give a multiplication table for the group <nemeth class="inline">⠠⠥⠷⠼⠂⠆⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="eJV"><span class="type">Hint</span>:<div class="displaymath"><nemeth>⠡⠀⠂⠀⠢⠀⠶⠀⠂⠂⠀⠂⠀⠂⠀⠢⠀⠶⠀⠂⠂⠀⠢⠀⠢⠀⠂⠀⠂⠂⠀⠶⠀⠶⠀⠶⠀⠂⠂⠀⠂⠀⠢⠀⠂⠂⠀⠂⠂⠀⠶⠀⠢⠀⠂</nemeth></div></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="WRb">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="hqt">Let <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠸⠠⠗⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠤⠼⠂⠨⠾</nemeth> and define a binary operation on <i class="one-letter">S</i> by <nemeth class="inline">⠁⠈⠼⠃⠀⠨⠅⠀⠁⠬⠃⠬⠁⠃</nemeth>. Prove that <nemeth class="inline">⠷⠠⠎⠠⠀⠈⠼⠾</nemeth> is an abelian group.</p>
          </article>
          <article class="exercise exercise-like" id="CYk">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="NxC">Give an example of two elements <i class="one-letter">A</i> and <i class="one-letter">B</i> in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> with <nemeth class="inline">⠠⠁⠠⠃⠀⠌⠨⠅⠀⠠⠃⠠⠁</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Xfw"><span class="type">Hint</span>:<p id="fWF">Pick two matrices. Almost any pair will work.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="jft">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="tEL">Prove that the product of two matrices in <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> has determinant one.</p>
          </article>
          <article class="exercise exercise-like" id="PmC">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="ZLU">Prove that the set of matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠭⠀⠽⠠⠾⠀⠠⠷⠴⠀⠂⠀⠵⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">is a group under matrix multiplication. This group, known as the <dfn class="terminology">Heisenberg group</dfn>, is important in quantum physics. Matrix multiplication in the Heisenberg group is defined by</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠭⠀⠽⠠⠾⠀⠠⠷⠴⠀⠂⠀⠵⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠠⠷⠂⠀⠭⠘⠄⠐⠀⠽⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠂⠀⠵⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠨⠅⠀⠠⠷⠼⠂⠀⠭⠬⠭⠘⠄⠐⠀⠽⠬⠽⠘⠄⠐⠬⠭⠵⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠂⠀⠵⠬⠵⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="vtL">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="FTd">Prove that <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠠⠃⠾⠀⠨⠅⠀⠙⠑⠞⠀⠷⠠⠁⠾⠙⠑⠞⠀⠷⠠⠃⠾</nemeth> in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>. Use this result to show that the binary operation in the group <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is closed; that is, if <i class="one-letter">A</i> and <i class="one-letter">B</i> are in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>, then <nemeth class="inline">⠠⠁⠠⠃⠀⠈⠑⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="bAU">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="mam">Let <nemeth class="inline">⠸⠠⠵⠆⠘⠝⠐⠀⠨⠅⠀⠨⠷⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠒⠀⠁⠰⠊⠐⠀⠈⠑⠀⠸⠠⠵⠆⠨⠾</nemeth>. Define a binary operation on <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> by</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠬⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠝⠐⠾⠀⠨⠅⠀⠷⠁⠂⠬⠃⠂⠠⠀⠁⠆⠬⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠬⠃⠰⠝⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> is a group under this operation. This group is important in algebraic coding theory.</p>
          </article>
          <article class="exercise exercise-like" id="HId">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="Shv">Show that <nemeth class="inline">⠸⠠⠗⠘⠈⠼⠐⠀⠨⠅⠀⠸⠠⠗⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠴⠨⠾</nemeth> is a group under the operation of multiplication.</p>
          </article>
          <article class="exercise exercise-like" id="nPm">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="yoE">Given the groups <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> and <nemeth class="inline">⠸⠠⠵</nemeth>, let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠸⠠⠗⠘⠈⠼⠐⠈⠡⠸⠠⠵</nemeth>. Define a binary operation <nemeth class="inline">⠘⠨⠡</nemeth> on <i class="one-letter">G</i> by <nemeth class="inline">⠷⠁⠠⠀⠍⠾⠘⠨⠡⠷⠃⠠⠀⠝⠾⠀⠨⠅⠀⠷⠁⠃⠠⠀⠍⠬⠝⠾</nemeth>. Show that <i class="one-letter">G</i> is a group under this operation.</p>
          </article>
          <article class="exercise exercise-like" id="TWv">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="evN">Prove or disprove that every group containing six elements is abelian.</p>
            <div class="solutions">
              <div class="hint solution-like" id="UkQ"><span class="type">Hint</span>:<p id="MdO">There is a nonabelian group containing six elements.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="AdE">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="KCW">Give a specific example of some group <i class="one-letter">G</i> and elements <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠛</nemeth> where <nemeth class="inline">⠷⠛⠓⠾⠘⠝⠐⠀⠌⠨⠅⠀⠛⠘⠝⠐⠓⠘⠝</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="gzi"><span class="type">Hint</span>:<p id="skX">Look at the symmetry group of an equilateral triangle or a square.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="gkN">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="qKf">Give an example of three different groups with eight elements. Why are the groups different?</p>
            <div class="solutions">
              <div class="hint solution-like" id="sNA"><span class="type">Hint</span>:<p id="Ysg">The are five different groups of order 8.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="MrW">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="WRo">Show that there are <nemeth class="inline">⠝⠯</nemeth> permutations of a set containing <i class="one-letter">n</i> items.</p>
            <div class="solutions">
              <div class="hint solution-like" id="FbS"><span class="type">Hint</span>:<p id="Ezp">Let</p><div class="displaymath"><nemeth>⠨⠎⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠄⠄⠄⠀⠝⠠⠾⠀⠠⠷⠁⠂⠀⠁⠆⠀⠄⠄⠄⠀⠁⠰⠝⠠⠾</nemeth></div><p data-braille="continuation">be in <nemeth class="inline">⠠⠎⠰⠝</nemeth>. All of the <nemeth class="inline">⠁⠰⠊</nemeth>s must be distinct. There are <i class="one-letter">n</i> ways to choose <nemeth class="inline">⠁⠂</nemeth>, <nemeth class="inline">⠝⠤⠂</nemeth> ways to choose <nemeth class="inline">⠁⠆⠠⠀⠄⠄⠄</nemeth>, 2 ways to choose <nemeth class="inline">⠁⠰⠝⠤⠂</nemeth>, and only one way to choose <nemeth class="inline">⠁⠰⠝</nemeth>. Therefore, we can form <nemeth class="inline">⠨⠎</nemeth> in <nemeth class="inline">⠝⠷⠝⠤⠂⠾⠀⠄⠄⠄⠀⠼⠆⠡⠂⠀⠨⠅⠀⠝⠯</nemeth> ways.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="szf">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="CYx">Show that</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠬⠁⠀⠸⠇⠀⠁⠬⠴⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">for all <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="YGo">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="jfG">Prove that there is a multiplicative identity for the integers modulo <i class="one-letter">n</i>:</p>
            <div class="displaymath">
              <nemeth>⠁⠡⠂⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="ENx">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="PmP">For each <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth> find an element <nemeth class="inline">⠃⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠁⠬⠃⠀⠸⠇⠀⠃⠬⠁⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="kUG">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="vtY">Show that addition and multiplication mod <i class="one-letter">n</i> are well defined operations. That is, show that the operations do not depend on the choice of the representative from the equivalence classes mod <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="RbP">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="bBh">Show that addition and multiplication mod <i class="one-letter">n</i> are associative operations.</p>
          </article>
          <article class="exercise exercise-like" id="xiY">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="HIq">Show that multiplication distributes over addition modulo <i class="one-letter">n</i>:</p>
            <div class="displaymath">
              <nemeth>⠁⠷⠃⠬⠉⠾⠀⠸⠇⠀⠁⠃⠬⠁⠉⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="dqh">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="nPz">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be elements in a group <i class="one-letter">G</i>. Prove that <nemeth class="inline">⠁⠃⠘⠝⠐⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠘⠝</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Chm"><span class="type">Hint</span>:<div class="displaymath"><nemeth>⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠘⠝⠀⠀⠨⠅⠀⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠀⠄⠄⠄⠀⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠀⠄⠄⠄⠀⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠁⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠁⠃⠘⠝⠐⠁⠘⠤⠼⠂</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Jxq">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="TWI">Let <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> be the group of units in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. If <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠆</nemeth>, prove that there is an element <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠥⠷⠝⠾</nemeth> such that <nemeth class="inline">⠅⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠅⠀⠌⠨⠅⠀⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="pEz">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="AdR">Prove that the inverse of <nemeth class="inline">⠛⠂⠛⠆⠀⠄⠄⠄⠀⠛⠰⠝⠐</nemeth> is <nemeth class="inline">⠛⠰⠝⠘⠤⠼⠂⠐⠛⠰⠝⠤⠂⠘⠤⠼⠂⠐⠀⠄⠄⠄⠀⠛⠂⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="VLI">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="gla">Prove the remainder of Proposition 3.2.14: if <i class="one-letter">G</i> is a group and <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>, then the equation <nemeth class="inline">⠭⠁⠀⠨⠅⠀⠃</nemeth> has a unique solution in <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="BSR">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="Msj">Prove Theorem 3.2.16.</p>
          </article>
          <article class="exercise exercise-like" id="iaa">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="szs">Prove the right and left cancellation laws for a group <i class="one-letter">G</i>; that is, show that in the group <i class="one-letter">G</i>, <nemeth class="inline">⠃⠁⠀⠨⠅⠀⠉⠁</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth> and <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠁⠉</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth> for elements <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠛</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Ohj">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="YGB">Show that if <nemeth class="inline">⠁⠘⠆⠐⠀⠨⠅⠀⠑</nemeth> for all elements <i class="one-letter">a</i> in a group <i class="one-letter">G</i>, then <i class="one-letter">G</i> must be abelian.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Tfx"><span class="type">Hint</span>:<p id="QNH">Since <nemeth class="inline">⠁⠃⠁⠃⠀⠨⠅⠀⠷⠁⠃⠾⠘⠆⠐⠀⠨⠅⠀⠑⠀⠨⠅⠀⠁⠘⠆⠐⠃⠘⠆⠐⠀⠨⠅⠀⠁⠁⠃⠃</nemeth>, we know that <nemeth class="inline">⠃⠁⠀⠨⠅⠀⠁⠃</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uos">
            <h6 class="heading">
              <span class="codenumber">32<span class="period">.</span></span>
            </h6>
            <p id="ENK">Show that if <i class="one-letter">G</i> is a finite group of even order, then there is an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> such that <i class="one-letter">a</i> is not the identity and <nemeth class="inline">⠁⠘⠆⠐⠀⠨⠅⠀⠑</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="avB">
            <h6 class="heading">
              <span class="codenumber">33<span class="period">.</span></span>
            </h6>
            <p id="kUT">Let <i class="one-letter">G</i> be a group and suppose that <nemeth class="inline">⠷⠁⠃⠾⠘⠆⠐⠀⠨⠅⠀⠁⠘⠆⠐⠃⠘⠆</nemeth> for all <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">G</i>. Prove that <i class="one-letter">G</i> is an abelian group.</p>
          </article>
          <article class="exercise exercise-like" id="GCK">
            <h6 class="heading">
              <span class="codenumber">34<span class="period">.</span></span>
            </h6>
            <p id="Rcc">Find all the subgroups of <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒</nemeth>. Use this information to show that <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒</nemeth> is not the same group as <nemeth class="inline">⠸⠠⠵⠔</nemeth>. (See Example 3.3.5 for a short description of the product of groups.)</p>
          </article>
          <article class="exercise exercise-like" id="mJT">
            <h6 class="heading">
              <span class="codenumber">35<span class="period">.</span></span>
            </h6>
            <p id="xjl">Find all the subgroups of the symmetry group of an equilateral triangle.</p>
            <div class="solutions">
              <div class="hint solution-like" id="DWz"><span class="type">Hint</span>:<p id="wUQ"><nemeth class="inline">⠠⠓⠂⠀⠨⠅⠀⠨⠷⠊⠙⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠆⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠗⠂⠠⠀⠨⠗⠆⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠒⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠂⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠲⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠆⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠢⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠎⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="SRc">
            <h6 class="heading">
              <span class="codenumber">36<span class="period">.</span></span>
            </h6>
            <p id="dqu">Compute the subgroups of the symmetry group of a square.</p>
          </article>
          <article class="exercise exercise-like" id="yYl">
            <h6 class="heading">
              <span class="codenumber">37<span class="period">.</span></span>
            </h6>
            <p id="JxD">Let <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠆⠘⠅⠐⠒⠀⠅⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>. Show that <i class="one-letter">H</i> is a subgroup of <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ffu">
            <h6 class="heading">
              <span class="codenumber">38<span class="period">.</span></span>
            </h6>
            <p id="pEM">Let <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth> and <nemeth class="inline">⠝⠸⠠⠵⠀⠨⠅⠀⠨⠷⠝⠅⠒⠀⠅⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>. Prove that <nemeth class="inline">⠝⠸⠠⠵</nemeth> is a subgroup of <nemeth class="inline">⠸⠠⠵</nemeth>. Show that these subgroups are the only subgroups of <nemeth class="inline">⠸⠠⠵</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LmD">
            <h6 class="heading">
              <span class="codenumber">39<span class="period">.</span></span>
            </h6>
            <p id="VLV">Let <nemeth class="inline">⠸⠠⠞⠀⠨⠅⠀⠨⠷⠵⠀⠈⠑⠀⠸⠠⠉⠘⠈⠼⠐⠒⠀⠳⠵⠳⠀⠨⠅⠀⠼⠂⠨⠾</nemeth>. Prove that <nemeth class="inline">⠸⠠⠞</nemeth> is a subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="rtM">
            <h6 class="heading">
              <span class="codenumber">40<span class="period">.</span></span>
            </h6>
            <p id="BTe">Let <i class="one-letter">G</i> consist of the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠉⠕⠎⠀⠨⠹⠀⠤⠎⠊⠝⠀⠨⠹⠠⠾⠀⠠⠷⠎⠊⠝⠀⠨⠹⠀⠉⠕⠎⠀⠨⠹⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠨⠹⠀⠈⠑⠀⠸⠠⠗</nemeth>. Prove that <i class="one-letter">G</i> is a subgroup of <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="XAV">
            <h6 class="heading">
              <span class="codenumber">41<span class="period">.</span></span>
            </h6>
            <p id="ian">Prove that</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠁⠝⠙⠁⠁⠝⠙⠃⠁⠗⠑⠀⠝⠕⠞⠀⠃⠕⠞⠓⠀⠵⠑⠗⠕⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a subgroup of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> under the group operation of multiplication.</p>
            <div class="solutions">
              <div class="hint solution-like" id="UUK"><span class="type">Hint</span>:<p id="dbZ">The identity of <i class="one-letter">G</i> is <nemeth class="inline">⠼⠂⠀⠨⠅⠀⠼⠂⠬⠴⠜⠆⠻</nemeth>. Since <nemeth class="inline">⠷⠁⠬⠃⠜⠆⠻⠾⠷⠉⠬⠙⠜⠆⠻⠾⠀⠨⠅⠀⠷⠁⠉⠬⠆⠃⠙⠾⠬⠷⠁⠙⠬⠃⠉⠾⠜⠆⠻</nemeth>, <i class="one-letter">G</i> is closed under multiplication. Finally, <nemeth class="inline">⠷⠁⠬⠃⠜⠆⠻⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠸⠌⠷⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠾⠤⠃⠜⠆⠻⠸⠌⠷⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="jPn">
            <h6 class="heading">
              <span class="codenumber">42<span class="period">.</span></span>
            </h6>
            <p id="Ohw">Let <i class="one-letter">G</i> be the group of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices under addition and</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠨⠷⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾⠒⠀⠁⠬⠙⠀⠨⠅⠀⠼⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="PWw">
            <h6 class="heading">
              <span class="codenumber">43<span class="period">.</span></span>
            </h6>
            <p id="uoF">Prove or disprove: <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠵⠾</nemeth>, the set of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with integer entries and determinant one, is a subgroup of <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="wdF">
            <h6 class="heading">
              <span class="codenumber">44<span class="period">.</span></span>
            </h6>
            <p id="avO">List the subgroups of the quaternion group, <nemeth class="inline">⠠⠟⠦</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ckO">
            <h6 class="heading">
              <span class="codenumber">45<span class="period">.</span></span>
            </h6>
            <p id="GCX">Prove that the intersection of two subgroups of a group <i class="one-letter">G</i> is also a subgroup of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="IrX">
            <h6 class="heading">
              <span class="codenumber">46<span class="period">.</span></span>
            </h6>
            <p id="mKg">Prove or disprove: If <i class="one-letter">H</i> and <i class="one-letter">K</i> are subgroups of a group <i class="one-letter">G</i>, then <nemeth class="inline">⠠⠓⠨⠬⠠⠅</nemeth> is a subgroup of <i class="one-letter">G</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="FLM"><span class="type">Hint</span>:<p id="Jji">Look at <nemeth class="inline">⠠⠎⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ozg">
            <h6 class="heading">
              <span class="codenumber">47<span class="period">.</span></span>
            </h6>
            <p id="SRp">Prove or disprove: If <i class="one-letter">H</i> and <i class="one-letter">K</i> are subgroups of a group <i class="one-letter">G</i>, then <nemeth class="inline">⠠⠓⠠⠅⠀⠨⠅⠀⠨⠷⠓⠅⠒⠀⠓⠀⠈⠑⠀⠠⠓⠁⠝⠙⠅⠀⠈⠑⠀⠠⠅⠨⠾</nemeth> is a subgroup of <i class="one-letter">G</i>. What if <i class="one-letter">G</i> is abelian?</p>
          </article>
          <article class="exercise exercise-like" id="UGp">
            <h6 class="heading">
              <span class="codenumber">48<span class="period">.</span></span>
            </h6>
            <p id="yYy">Let <i class="one-letter">G</i> be a group and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Show that</p>
            <div class="displaymath">
              <nemeth>⠠⠵⠷⠠⠛⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠠⠛⠒⠀⠛⠭⠀⠨⠅⠀⠭⠛⠋⠕⠗⠀⠁⠇⠇⠛⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a subgroup of <i class="one-letter">G</i>. This subgroup is called the <dfn class="terminology">center</dfn> of <i class="one-letter">G</i>. </p>
          </article>
          <article class="exercise exercise-like" id="ANy">
            <h6 class="heading">
              <span class="codenumber">49<span class="period">.</span></span>
            </h6>
            <p id="ffH">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be elements of a group <i class="one-letter">G</i>. If <nemeth class="inline">⠁⠘⠲⠐⠃⠀⠨⠅⠀⠃⠁</nemeth> and <nemeth class="inline">⠁⠘⠒⠐⠀⠨⠅⠀⠑</nemeth>, prove that <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠃⠁</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="eow"><span class="type">Hint</span>:<p id="pqr"><nemeth class="inline">⠃⠁⠀⠨⠅⠀⠁⠘⠲⠐⠃⠀⠨⠅⠀⠁⠘⠒⠐⠁⠃⠀⠨⠅⠀⠁⠃</nemeth></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="gUH">
            <h6 class="heading">
              <span class="codenumber">50<span class="period">.</span></span>
            </h6>
            <p id="LmQ">Give an example of an infinite group in which every nontrivial subgroup is infinite.</p>
          </article>
          <article class="exercise exercise-like" id="NbQ">
            <h6 class="heading">
              <span class="codenumber">51<span class="period">.</span></span>
            </h6>
            <p id="rtZ">If <nemeth class="inline">⠭⠽⠀⠨⠅⠀⠭⠘⠤⠼⠂⠐⠽⠘⠤⠼⠂</nemeth> for all <i class="one-letter">x</i> and <i class="one-letter">y</i> in <i class="one-letter">G</i>, prove that <i class="one-letter">G</i> must be abelian.</p>
          </article>
          <article class="exercise exercise-like" id="tiZ">
            <h6 class="heading">
              <span class="codenumber">52<span class="period">.</span></span>
            </h6>
            <p id="XBi">Prove or disprove: Every proper subgroup of a nonabelian group is nonabelian.</p>
          </article>
          <article class="exercise exercise-like" id="Zqi">
            <h6 class="heading">
              <span class="codenumber">53<span class="period">.</span></span>
            </h6>
            <p id="DIr">Let <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i> and</p>
            <div class="displaymath">
              <nemeth>⠠⠉⠷⠠⠓⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠓⠀⠨⠅⠀⠓⠛⠋⠕⠗⠀⠁⠇⠇⠓⠀⠈⠑⠀⠠⠓⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Prove <nemeth class="inline">⠠⠉⠷⠠⠓⠾</nemeth> is a subgroup of <i class="one-letter">G</i>. This subgroup is called the <dfn class="terminology">centralizer</dfn> of <i class="one-letter">H</i> in <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="Fxr">
            <h6 class="heading">
              <span class="codenumber">54<span class="period">.</span></span>
            </h6>
            <p id="jPA">Let <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i>. If <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, show that <nemeth class="inline">⠛⠠⠓⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠷⠛⠓⠛⠘⠤⠼⠂⠐⠒⠀⠓⠀⠈⠑⠀⠠⠓⠨⠾</nemeth> is also a subgroup of <i class="one-letter">G</i>.</p>
          </article>
        </section>
        <section class="exercises" id="uJR">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">3.6</span> <span class="title">Additional Exercises: Detecting Errors</span></div>
          <article class="exercise exercise-like" id="lEA">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title"><abbr class="acronym">UPC</abbr> Symbols.</span>
            </h6>
            <p id="PWJ">Universal Product Code  (<abbr class="acronym">UPC</abbr>) symbols are found on most products in grocery and retail stores. The <abbr class="acronym">UPC</abbr> symbol is a 12-digit code identifying the manufacturer of a product and the product itself (Figure 3.6.1). The first 11 digits contain information about the product; the twelfth digit is used for error detection. If <nemeth class="inline">⠙⠂⠙⠆⠀⠄⠄⠄⠀⠙⠂⠆</nemeth> is a valid <abbr class="acronym">UPC</abbr> number, then</p>
            <div class="displaymath">
              <nemeth>⠼⠒⠡⠙⠂⠬⠂⠡⠙⠆⠬⠒⠡⠙⠒⠬⠄⠄⠄⠬⠒⠡⠙⠂⠂⠬⠂⠡⠙⠂⠆⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠂⠴⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <ol class="outerlist">
              <li>a. <p id="Soz">Show that the <abbr class="acronym">UPC</abbr> number 0-50000-30042-6, which appears in Figure 3.6.1, is a valid <abbr class="acronym">UPC</abbr> number.</p></li>
              <li>b. <p id="yvI">Show that the number 0-50000-30043-6 is not a valid <abbr class="acronym">UPC</abbr> number.</p></li>
              <li>c. <p id="eCR">Write a formula to calculate the check digit, <nemeth class="inline">⠙⠂⠆</nemeth>, in the <abbr class="acronym">UPC</abbr> number.</p></li>
              <li>d. <p id="KKa">The <abbr class="acronym">UPC</abbr> error detection scheme can detect most transposition errors; that is, it can determine if two digits have been interchanged. Show that the transposition error 0-05000-30042-6 is not detected. Find a transposition error that is detected. Can you find a general rule for the types of transposition errors that can be detected?</p></li>
              <li>e. <p id="qRj">Write a program that will determine whether or not a <abbr class="acronym">UPC</abbr> number is valid.</p></li>
            </ol>
            <figure class="figure figure-like" data-braille="figure-like" id="wdS">
              <div data-braille="image">
                <p>Image: The vertical lines of a UPC bar scan code for 0-05000-30042-6</p>
                <p>ID: image-6</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.6.1<span class="period">.</span></span><span class="space"> </span>A <abbr class="acronym">UPC</abbr> code</figcaption>
            </figure>
          </article>
          <article class="exercise exercise-like" id="RLJ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="clb">It is often useful to use an inner product notation for this type of error detection scheme; hence, we will use the notion</p>
            <div class="displaymath">
              <nemeth>⠷⠙⠂⠠⠀⠙⠆⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠅⠐⠾⠡⠷⠺⠂⠠⠀⠺⠆⠠⠀⠄⠄⠄⠀⠠⠀⠺⠰⠅⠐⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">to mean</p>
            <div class="displaymath">
              <nemeth>⠙⠂⠺⠂⠬⠙⠆⠺⠆⠬⠄⠄⠄⠬⠙⠰⠅⠐⠺⠰⠅⠐⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="Isk">Suppose that <nemeth class="inline">⠷⠙⠂⠠⠀⠙⠆⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠅⠐⠾⠡⠷⠺⠂⠠⠀⠺⠆⠠⠀⠄⠄⠄⠀⠠⠀⠺⠰⠅⠐⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth> is an error detection scheme for the <i class="one-letter">k</i>-digit identification number <nemeth class="inline">⠙⠂⠙⠆⠀⠄⠄⠄⠀⠙⠰⠅⠐</nemeth>, where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠙⠰⠊⠐⠀⠐⠅⠀⠝</nemeth>. Prove that all single-digit errors are detected if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠺⠰⠊⠐⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠊⠀⠐⠅⠱⠀⠅</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="xSS">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="ozt">Let <nemeth class="inline">⠷⠙⠂⠠⠀⠙⠆⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠅⠐⠾⠡⠷⠺⠂⠠⠀⠺⠆⠠⠀⠄⠄⠄⠀⠠⠀⠺⠰⠅⠐⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth> be an error detection scheme for the <i class="one-letter">k</i>-digit identification number <nemeth class="inline">⠙⠂⠙⠆⠀⠄⠄⠄⠀⠙⠰⠅⠐</nemeth>, where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠙⠰⠊⠐⠀⠐⠅⠀⠝</nemeth>. Prove that all transposition errors of two digits <nemeth class="inline">⠙⠰⠊</nemeth> and <nemeth class="inline">⠙⠰⠚</nemeth> are detected if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠺⠰⠊⠐⠤⠺⠰⠚⠐⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth> for <i class="one-letter">i</i> and <i class="one-letter">j</i> between <nemeth class="inline">⠼⠂</nemeth> and <i class="one-letter">k</i>.</p>
          </article>
          <article class="exercise exercise-like" id="eab">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title"><abbr class="acronym">ISBN</abbr> Codes.</span>
            </h6>
            <p id="UGC">Every book has an International Standard Book Number (<abbr class="acronym">ISBN</abbr>) code. This is a 10-digit code indicating the book's publisher and title. The tenth digit is a check digit satisfying</p>
            <div class="displaymath">
              <nemeth>⠷⠙⠂⠠⠀⠙⠆⠠⠀⠄⠄⠄⠀⠠⠀⠙⠂⠴⠾⠡⠷⠼⠂⠴⠠⠀⠼⠔⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠂⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. One problem is that <nemeth class="inline">⠙⠂⠴</nemeth> might have to be a 10 to make the inner product zero; in this case, 11 digits would be  needed to make this scheme work. Therefore, the character X is used for the eleventh digit. So <abbr class="acronym">ISBN</abbr> 3-540-96035-X is a valid <abbr class="acronym">ISBN</abbr> code.</p>
            <ol class="outerlist">
              <li>a. <p id="WYs">Is <abbr class="acronym">ISBN</abbr> 0-534-91500-0 a valid <abbr class="acronym">ISBN</abbr> code? What about <abbr class="acronym">ISBN</abbr> 0-534-91700-0 and <abbr class="acronym">ISBN</abbr> 0-534-19500-0?</p></li>
              <li>b. <p id="DfB">Does this method detect all single-digit errors? What about all transposition errors?</p></li>
              <li>c. <p id="jmK">How many different <abbr class="acronym">ISBN</abbr> codes are there?</p></li>
              <li>d. <p id="PtT">Write a computer program that will calculate the check digit for the first nine digits of an <abbr class="acronym">ISBN</abbr> code.</p></li>
              <li>e. <p id="vBc">A publisher has houses in Germany and the United States. Its German prefix is 3-540. If its United States prefix will be 0-<code class="code-inline tex2jax_ignore">abc</code>, find <code class="code-inline tex2jax_ignore">abc</code> such that the rest of the <abbr class="acronym">ISBN</abbr> code will be the same for a book printed in Germany and in the United States. Under the <abbr class="acronym">ISBN</abbr> coding method the first digit identifies the language; German is 3 and English is 0. The next group of numbers identifies the publisher, and the last group identifies the specific book.</p></li>
            </ol>
          </article>
        </section>
        <section class="references" id="muP">
          <div class="none"><span class="type">References</span> <span class="codenumber">3.7</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="SBY"><div class="bibitem">[1]</div>  <div class="bibentry">Burnside, W. <i>Theory of Groups of Finite Order</i>. 2nd ed. Cambridge University Press, Cambridge, 1911; Dover, New York, 1953.  A classic.  Also available at books.google.com.</div></article>
          <article class="bib" id="yJh"><div class="bibitem">[2]</div>  <div class="bibentry">Gallian, J. A. and Winters, S. “Modular Arithmetic in the Marketplace,” <i>The American Mathematical Monthly</i> <b>95</b> (1988): 548–51.</div></article>
          <article class="bib" id="eQq"><div class="bibitem">[3]</div>  <div class="bibentry">Gallian, J. A. <i>Contemporary Abstract Algebra</i>. 7th ed. Brooks/Cole, Belmont, CA, 2009.</div></article>
          <article class="bib" id="KXz"><div class="bibitem">[4]</div>  <div class="bibentry">Hall, M. <i>Theory of Groups</i>. 2nd ed. American Mathematical Society, Providence, 1959.</div></article>
          <article class="bib" id="reI"><div class="bibitem">[5]</div>  <div class="bibentry">Kurosh, A. E. <i>The Theory of Groups</i>, vols. I and II. American Mathematical Society, Providence, 1979.</div></article>
          <article class="bib" id="XlR"><div class="bibitem">[6]</div>  <div class="bibentry">Rotman, J. J. <i>An Introduction to the Theory of Groups</i>. 4th ed. Springer, New York, 1995.</div></article>
        </section>
        <section class="section" id="fAT">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">3.8</span> <span class="title">Sage</span></div>
          <section class="introduction" id="kzh">
            <p id="kkZ">Many of the groups discussed in this chapter are available for study in Sage. It is important to understand that sets that form algebraic objects (groups in this chapter) are called “parents” in Sage, and elements of these objects are called, well, “elements.” So every element belongs to a parent (in other words, is contained in some set). We can ask about properties of parents (finite? order? abelian?), and we can ask about properties of individual elements (identity? inverse?). In the following we will show you how to create some of these common groups and begin to explore their properties with Sage.</p>
          </section>
          <section class="subsection" id="pZY">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.8.1</span> <span class="title">Integers mod n</span></div>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z8 = Integers(8)
Z8
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z8.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[0, 1, 2, 3, 4, 5, 6, 7]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = Z8.an_element(); a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 8
</div>
            </article>
            <p id="QGD">We would like to work with elements of <code class="code-inline tex2jax_ignore">Z8</code>. If you were to type a <code class="code-inline tex2jax_ignore">6</code> into a compute cell right now, what would you mean? The integer <nemeth class="inline">⠼⠖</nemeth>, the rational number <nemeth class="inline">⠹⠖⠌⠂⠼</nemeth>, the real number <nemeth class="inline">⠼⠖⠨⠴⠴⠴⠴⠴</nemeth>, or the complex number <nemeth class="inline">⠼⠖⠨⠴⠴⠴⠴⠴⠬⠴⠨⠴⠴⠴⠴⠴⠊</nemeth>? Or perhaps you really do want the integer <nemeth class="inline">⠼⠖</nemeth> mod <nemeth class="inline">⠼⠦</nemeth>? Sage really has no idea what you mean or want. To make this clear, you can “coerce” <code class="code-inline tex2jax_ignore">6</code> into <code class="code-inline tex2jax_ignore">Z8</code> with the syntax <code class="code-inline tex2jax_ignore">Z8(6)</code>. Without this, Sage will treat a input number like <code class="code-inline tex2jax_ignore">6</code> as an integer, the simplest possible interpretation in some sense. Study the following carefully, where we first work with “normal” integers and then with integers mod 8.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 6
a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Integer Ring
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = 7
c = a + b; c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">13
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d = Z8(6)
d
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">e = Z8(7)
f = d+e; f
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">5
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">g = Z8(85); g
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">5
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">f == g
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="wNM"><code class="code-inline tex2jax_ignore">Z8</code> is a bit unusual as a first example, since it has two operations defined, both addition and multiplication, with addition forming a group, and multiplication not forming a group. Still, we can work with the additive portion, here forming the Cayley table for the addition.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z8.addition_table(names='elements')
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">+  0 1 2 3 4 5 6 7
 +----------------
0| 0 1 2 3 4 5 6 7
1| 1 2 3 4 5 6 7 0
2| 2 3 4 5 6 7 0 1
3| 3 4 5 6 7 0 1 2
4| 4 5 6 7 0 1 2 3
5| 5 6 7 0 1 2 3 4
6| 6 7 0 1 2 3 4 5
7| 7 0 1 2 3 4 5 6
</div>
            </article>
            <p id="cUV">When <i class="one-letter">n</i> is a prime number, the multipicative structure (excluding zero), will also form a group.</p>
            <p id="Jce">The integers mod <i class="one-letter">n</i> are very important, so Sage implements both addition and multiplication together. Groups of symmetries are a better example of how Sage implements groups, since there is just one operation present.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="Whh">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.8.2</span> <span class="title">Groups of symmetries</span></div>
            <p id="pjn">The symmetries of some geometric shapes are already defined in Sage, albeit with different names. They are implemented as “permutation groups” which we will begin to study carefully in Chapter 5.</p>
            <p id="Vqw">Sage uses integers to label vertices, starting the count at <code class="code-inline tex2jax_ignore">1</code>, instead of letters. Elements by default are printed using “cycle notation” which we will see described carefully in Chapter 5. Here is an example, with both the mathematics and Sage. For the Sage part, we create the group of symmetries and then create the symmetry <nemeth class="inline">⠨⠗⠆</nemeth> with coercion, followed by outputting the element in cycle notation. Then we create just the <em class="emphasis">bottom row</em> of the notation we are using for permutations.</p>
            <div class="displaymath">
              <nemeth>⠨⠗⠆⠀⠨⠅⠀⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠉⠀⠠⠁⠀⠠⠃⠠⠾⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠒⠀⠂⠀⠆⠠⠾</nemeth>
            </div>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">triangle = SymmetricGroup(3)
rho2 = triangle([3,1,2])
rho2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3,2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[rho2(x) for x in triangle.domain()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3, 1, 2]
</div>
            </article>
            <p id="BxF">The final list comprehension deserves comment. The <code class="code-inline tex2jax_ignore">.domain()</code> method gives a list of the symbols used for the permutation group <code class="code-inline tex2jax_ignore">triangle</code> and then <code class="code-inline tex2jax_ignore">rho2</code> is employed with syntax like it is a function (it <em class="emphasis">is</em> a function) to create the images that would occupy the bottom row.</p>
            <p id="hEO">With a double list comprehension we can list all six elements of the group in the “bottom row” format. A good exercise would be to pair up each element with its name as given in Figure 3.1.6.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[[a(x) for x in triangle.domain()] for a in triangle]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[1, 2, 3], [3, 1, 2], [2, 3, 1], [1, 3, 2], [3, 2, 1], [2, 1, 3]]
</div>
            </article>
            <p id="NLX">Different books, different authors, different software all have different ideas about the order in which to write multiplication of functions. This textbook builds on the idea of composition of functions, so that <nemeth class="inline">⠋⠛</nemeth> is the composition <nemeth class="inline">⠷⠋⠛⠾⠷⠭⠾⠀⠨⠅⠀⠋⠷⠛⠷⠭⠾⠾</nemeth> and it is natural to apply <i class="one-letter">g</i> first. Sage takes the opposite view and since we write <nemeth class="inline">⠋⠛</nemeth>, Sage will understand that we want to do <i class="one-letter">f</i> first. Neither approach is wrong, and neither is necessarily superior, they are just different and there are good arguments for either one. When you consult other books that work with permutation groups, you want to first determine which approach it takes. (Be aware that this discussion of Sage function composition is limited to permutations only—“regular” functions in Sage compose in the order you might be familiar with from a calculus course.)</p>
            <p id="tTg">The translation here between the text and Sage will be worthwhile practice. Here we will reprise the discussion at the end of Section 3.1, but reverse the order on each product to compute Sage-style and exactly mirror what the text does.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">mu1 = triangle([1,3,2])
mu2 = triangle([3,2,1])
mu3 = triangle([2,1,3])
rho1 = triangle([2,3,1])
product = rho1*mu1
product == mu2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[product(x) for x in triangle.domain()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3, 2, 1]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho1*mu1 == mu1*rho1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">mu1*rho1 == mu3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="aap">Now that we understand that Sage does multiplication in reverse, we can compute the Cayley table for this group. Default behavior is to just name elements of a group as letters, <code class="code-inline tex2jax_ignore">a,
        b, c</code>, <nemeth class="inline">⠄⠄⠄</nemeth> in the same order that the <code class="code-inline tex2jax_ignore">.list()</code> command would produce the elements of the group. But you can also print the elements in the table as themselves (that uses cycle notation here), or you can give the elements names. We will use <code class="code-inline tex2jax_ignore">u</code> as shorthand for <nemeth class="inline">⠨⠍</nemeth> and <code class="code-inline tex2jax_ignore">r</code> as shorthand for <nemeth class="inline">⠨⠗</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">triangle.cayley_table()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*  a b c d e f
 +------------
a| a b c d e f
b| b a d c f e
c| c e a f b d
d| d f b e a c
e| e c f a d b
f| f d e b c a
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">triangle.cayley_table(names='elements')
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">      *       ()   (2,3)   (1,2) (1,2,3) (1,3,2)   (1,3)
       +------------------------------------------------
     ()|      ()   (2,3)   (1,2) (1,2,3) (1,3,2)   (1,3)
  (2,3)|   (2,3)      () (1,2,3)   (1,2)   (1,3) (1,3,2)
  (1,2)|   (1,2) (1,3,2)      ()   (1,3)   (2,3) (1,2,3)
(1,2,3)| (1,2,3)   (1,3)   (2,3) (1,3,2)      ()   (1,2)
(1,3,2)| (1,3,2)   (1,2)   (1,3)      () (1,2,3)   (2,3)
  (1,3)|   (1,3) (1,2,3) (1,3,2)   (2,3)   (1,2)      ()
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">triangle.cayley_table(names=['id','u3','r1','r2','u1','u2'])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb"> *  id u3 r1 r2 u1 u2
  +------------------
id| id u3 r1 r2 u1 u2
u3| u3 id r2 r1 u2 u1
r1| r1 u1 id u2 u3 r2
r2| r2 u2 u3 u1 id r1
u1| u1 r1 u2 id r2 u3
u2| u2 r2 u1 u3 r1 id
</div>
            </article>
            <p id="Ghy">You should verify that the table above is correct, just like Table 3.2 is correct. Remember that the convention is to multiply a row label times a column label, in that order. However, to do a check across the two tables, you will need to recall the difference in ordering between your textbook and Sage.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="Coq">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.8.3</span> <span class="title">Quaternions</span></div>
            <p id="moH">Sage implements the quaternions, but the elements are not matrices, but rather are permutations. Despite appearances the structure is identical. It should not matter which version you have in mind (matrices or permutations) if you build the Cayley table and use the default behavior of using letters to name the elements. As permutations, or as letters, can you identify <nemeth class="inline">⠤⠼⠂</nemeth>, <i class="one-letter">I</i>, <i class="one-letter">J</i> and <i class="one-letter">K</i>?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q = QuaternionGroup()
[[a(x) for x in Q.domain()] for a in Q]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[1, 2, 3, 4, 5, 6, 7, 8], [3, 4, 1, 2, 7, 8, 5, 6],
 [4, 1, 2, 3, 8, 5, 6, 7], [2, 3, 4, 1, 6, 7, 8, 5],
 [7, 6, 5, 8, 1, 4, 3, 2], [5, 8, 7, 6, 3, 2, 1, 4],
 [8, 7, 6, 5, 2, 1, 4, 3], [6, 5, 8, 7, 4, 3, 2, 1]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.cayley_table()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*  a b c d e f g h
 +----------------
a| a b c d e f g h
b| b c d a h e f g
c| c d a b g h e f
d| d a b c f g h e
e| e f g h c d a b
f| f g h e b c d a
g| g h e f a b c d
h| h e f g d a b c
</div>
            </article>
            <p id="SvQ">It should be fairly obvious that <code class="code-inline tex2jax_ignore">a</code> is the identity element of the group (<nemeth class="inline">⠼⠂</nemeth>), either from its behavior in the table, or from its “bottom row” representation as the first element of the list above. And if you prefer, you can ask Sage for a list of its outputs when viewed as a function.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">id = Q.identity()
[id(x) for x in Q.domain()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 2, 3, 4, 5, 6, 7, 8]
</div>
            </article>
            <p id="yCZ">Now <nemeth class="inline">⠤⠼⠂</nemeth> should have the property that <nemeth class="inline">⠤⠼⠂⠡⠤⠼⠂⠀⠨⠅⠀⠼⠂</nemeth>. We see that the identity element <code class="code-inline tex2jax_ignore">a</code> is on the diagonal of the Cayley table only when we compute <code class="code-inline tex2jax_ignore">d*d</code>. We can verify this easily, borrowing the fourth “bottom row” element from the list above. With this information, once we locate <i class="one-letter">I</i>, we can easily compute <nemeth class="inline">⠤⠠⠊</nemeth>, and so on.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">minus_one = Q([3, 4, 1, 2, 7, 8, 5, 6])
minus_one*minus_one == Q.identity()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="eKi">See if you can pair up the letters with all eight elements of the quaternions. Be a bit careful with your names, the symbol <code class="code-inline tex2jax_ignore">I</code> is used by Sage for the imaginary number <nemeth class="inline">⠊⠀⠨⠅⠀⠜⠤⠂⠻</nemeth> (which we will use below), but Sage will silently let you redefine it to be anything you like. Same goes for using lower-case <code class="code-inline tex2jax_ignore">i</code> in Sage. So call your elements of the quaternions something like <code class="code-inline tex2jax_ignore">QI, QJ, QK</code> to avoid confusion.</p>
            <p id="KRr">As we begin to work with groups it is instructive to work with the actual elements. But many properties of groups are totally independent of the order we use for multiplication, or the names or representations we use for the elements. Here are facts about the quaternions we can compute without any knowledge of just how the elements are written or multiplied.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_finite()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="ivz">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.8.4</span> <span class="title">Subgroups</span></div>
            <p id="qYA">The best techniques for creating subgroups will come in future chapters, but we can create some groups that are naturally subgroups of other groups.</p>
            <p id="XfJ">Elements of the quaternions were represented by certain permutations of the integers 1 through 8. We can also build the group of <em class="emphasis">all</em> permutations of these eight integers. It gets pretty big, so do not list it unless you want a lot of output! (I dare you.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S8 = SymmetricGroup(8)
a = S8.random_element()
[a(x) for x in S8.domain()]     # random
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[5, 2, 6, 4, 1, 8, 3, 7]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S8.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">40320
</div>
            </article>
            <p id="DmS">The quaternions, <code class="code-inline tex2jax_ignore">Q</code>, is a subgroup of the full group of all permutations, the symmetric group <nemeth class="inline">⠠⠎⠦</nemeth> or <code class="code-inline tex2jax_ignore">S8</code>, and Sage regards this as a property of <code class="code-inline tex2jax_ignore">Q</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_subgroup(S8)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="jub">In Sage the complex numbers are known by the name <code class="code-inline tex2jax_ignore">CC</code>. We can create a list of the elements in the subgroup described in Example 3.2.9. Then we can verify that this set is a subgroup by examining the Cayley table, using multiplication as the operation.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = [CC(1), CC(-1), CC(I), CC(-I)]
CC.multiplication_table(elements=H,
                        names=['1', '-1', 'i', '-i'])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*   1 -1  i -i
  +------------
 1|  1 -1  i -i
-1| -1  1 -i  i
 i|  i -i -1  1
-i| -i  i  1 -1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="aRa">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">3.9</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="Khk">
            <p id="Qsi">These exercises are about becoming comfortable working with groups in Sage. Sage worksheets have extensive capabilities for making new cells with carefully formatted text, include support for <span class="latex-logo">L<span class="A">a</span>T<span class="E">e</span>X</span> syntax to express mathematics. So when a question asks for explanation or commentary, make a new cell and communicate clearly with your audience.</p>
          </section>
          <article class="exercise exercise-like" id="qot">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ANL">Create the groups <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(8)</code> and <code class="code-inline tex2jax_ignore">DihedralGroup(4)</code> and name these groups <code class="code-inline tex2jax_ignore">C</code> and <code class="code-inline tex2jax_ignore">D</code>, respectively. We will understand these constructions better shortly, but for now just understand that both objects you create are actually groups.</p>
          </article>
          <article class="exercise exercise-like" id="WvC">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="gUU">Check that <code class="code-inline tex2jax_ignore">C</code> and <code class="code-inline tex2jax_ignore">D</code> have the same size by using the <code class="code-inline tex2jax_ignore">.order()</code> method. Determine which group is abelian, and which is not, by using the <code class="code-inline tex2jax_ignore">.is_abelian()</code> method.</p>
          </article>
          <article class="exercise exercise-like" id="CCL">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Ncd">Use the <code class="code-inline tex2jax_ignore">.cayley_table()</code> method to create the Cayley table for each group.</p>
          </article>
          <article class="exercise exercise-like" id="iJU">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="tjm">Write a nicely formatted discussion identifying differences between the two groups that are discernible in properties of their Cayley tables. In other words, what is <em class="emphasis">different</em> about these two groups that you can “see” in the Cayley tables? (In the Sage notebook, a Shift-click on a blue bar will bring up a mini-word-processor, and you can use use dollar signs to embed mathematics formatted using <span class="latex-logo">T<span class="E">e</span>X</span> syntax.)</p>
          </article>
          <article class="exercise exercise-like" id="ORd">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Zqv">For <code class="code-inline tex2jax_ignore">C</code> locate the one subgroup of order <nemeth class="inline">⠼⠲</nemeth>. The group <code class="code-inline tex2jax_ignore">D</code> has three subgroups of order <nemeth class="inline">⠼⠲</nemeth>. Select one of the three subgroups of <code class="code-inline tex2jax_ignore">D</code> that has a different structure than the subgroup you obtained from <code class="code-inline tex2jax_ignore">C</code>.</p>
            <p id="FxE">The <code class="code-inline tex2jax_ignore">.subgroups()</code> method will give you a list of all of the subgroups to help you get started. A Cayley table will help you tell the difference between the two subgroups. What properties of these tables did you use to determine the difference in the structure of the subgroups?</p>
          </article>
          <article class="exercise exercise-like" id="uYm">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="lEN">The <code class="code-inline tex2jax_ignore">.subgroup(elt_list)</code> method of a group will create the smallest subgroup containing the specified elements of the group, when given the elements as a list <code class="code-inline tex2jax_ignore">elt_list</code>. Use this command to discover the shortest list of elements necessary to recreate the subgroups you found in the previous exercise. The equality comparison, <code class="code-inline tex2jax_ignore">==</code>, can be used to test if two subgroups are equal.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="KKE">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">4</span> <span class="title">Cyclic Groups</span></div>
        <section class="introduction" id="vQb">
          <p id="EeH">The groups <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, which are among the most familiar and easily understood groups, are both examples of what are called cyclic groups. In this chapter we will study the properties of cyclic groups and cyclic subgroups, which play a fundamental part in the classification of all abelian groups.</p>
        </section>
        <section class="section" id="MzR">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">4.1</span> <span class="title">Cyclic Subgroups</span></div>
          <section class="introduction" id="bXk">
            <p id="klQ">Often a subgroup will depend entirely on a single element of the group; that is, knowing that particular element will allow us to compute any other element in the subgroup.</p>
            <article class="example example-like" data-braille="example-like" id="Gpg">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="JTT">Suppose that we consider <nemeth class="inline">⠼⠒⠀⠈⠑⠀⠸⠠⠵</nemeth> and look at all multiples (both positive and negative) of <nemeth class="inline">⠼⠒</nemeth>. As a set, this is</p>
              <div class="displaymath">
                <nemeth>⠼⠒⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠒⠠⠀⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠄⠄⠄⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. It is easy to see that <nemeth class="inline">⠼⠒⠸⠠⠵</nemeth> is a subgroup of the integers. This subgroup is completely determined by the element <nemeth class="inline">⠼⠒</nemeth> since we can obtain all of the other elements of the group by taking multiples of <nemeth class="inline">⠼⠒</nemeth>. Every element in the subgroup is “generated” by <nemeth class="inline">⠼⠒</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="mwp">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="qbc">If <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠆⠘⠝⠐⠒⠀⠝⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>, then <i class="one-letter">H</i> is a subgroup of the multiplicative group of nonzero rational numbers, <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>. If <nemeth class="inline">⠁⠀⠨⠅⠀⠼⠆⠘⠍</nemeth> and <nemeth class="inline">⠃⠀⠨⠅⠀⠼⠆⠘⠝</nemeth> are in <i class="one-letter">H</i>, then <nemeth class="inline">⠁⠃⠘⠤⠼⠂⠐⠀⠨⠅⠀⠼⠆⠘⠍⠐⠆⠘⠤⠝⠐⠀⠨⠅⠀⠼⠆⠘⠍⠤⠝</nemeth> is also in <i class="one-letter">H</i>. By Proposition 3.3.8, <i class="one-letter">H</i> is a subgroup of <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> determined by the element <nemeth class="inline">⠼⠆</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="hMw">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="UsY">Let <i class="one-letter">G</i> be a group and <i class="one-letter">a</i> be any element in <i class="one-letter">G</i>. Then the set </p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠷⠁⠘⠅⠐⠒⠀⠅⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">is a subgroup of <i class="one-letter">G</i>. Furthermore, <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> is the smallest subgroup of <i class="one-letter">G</i> that contains <i class="one-letter">a</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="UsL">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="rgv">The identity is in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> since <nemeth class="inline">⠁⠘⠴⠐⠀⠨⠅⠀⠑</nemeth>. If <i class="one-letter">g</i> and <i class="one-letter">h</i> are any two elements in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>, then by the definition of <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> we can write <nemeth class="inline">⠛⠀⠨⠅⠀⠁⠘⠍</nemeth> and <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠘⠝</nemeth> for some integers <i class="one-letter">m</i> and <i class="one-letter">n</i>. So <nemeth class="inline">⠛⠓⠀⠨⠅⠀⠁⠘⠍⠐⠁⠘⠝⠐⠀⠨⠅⠀⠁⠘⠍⠬⠝</nemeth> is again in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>. Finally, if <nemeth class="inline">⠛⠀⠨⠅⠀⠁⠘⠝</nemeth> in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>, then the inverse <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠘⠤⠝</nemeth> is also in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>. Clearly, any subgroup <i class="one-letter">H</i> of <i class="one-letter">G</i> containing <i class="one-letter">a</i> must contain all the powers of <i class="one-letter">a</i> by closure; hence, <i class="one-letter">H</i> contains <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>. Therefore, <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> is the smallest subgroup of <i class="one-letter">G</i> containing <i class="one-letter">a</i>.</p>
            </article>
            <article class="remark remark-like" data-braille="remark-like" id="PIS">
              <h6 class="heading">
                <span class="type">Remark</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="XXy">If we are using the “+” notation, as in the case of the integers under addition, we write <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠷⠝⠁⠒⠀⠝⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>.</p>
            </article>
            <p id="QsZ">For <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>, we call <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> the <dfn class="terminology">cyclic subgroup</dfn>  generated by <i class="one-letter">a</i>. If <i class="one-letter">G</i> contains some element <i class="one-letter">a</i> such that <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>, then <i class="one-letter">G</i> is a <dfn class="terminology">cyclic group</dfn>.  In this case <i class="one-letter">a</i> is a <dfn class="terminology">generator</dfn> of <i class="one-letter">G</i>. If <i class="one-letter">a</i> is an element of a group <i class="one-letter">G</i>, we define the <dfn class="terminology">order</dfn>  of <i class="one-letter">a</i> to be the smallest positive integer <i class="one-letter">n</i> such that <nemeth class="inline">⠁⠘⠝⠐⠀⠨⠅⠀⠑</nemeth>, and we write <nemeth class="inline">⠳⠁⠳⠀⠨⠅⠀⠝</nemeth>.  If there is no such integer <i class="one-letter">n</i>, we say that the order of <i class="one-letter">a</i> is infinite and write <nemeth class="inline">⠳⠁⠳⠀⠨⠅⠀⠠⠿</nemeth> to denote the order of <i class="one-letter">a</i>.</p>
            <article class="example example-like" data-braille="example-like" id="SDy">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="Wil">Notice that a cyclic group can have more than a single generator. Both <nemeth class="inline">⠼⠂</nemeth> and <nemeth class="inline">⠼⠢</nemeth> generate <nemeth class="inline">⠸⠠⠵⠖</nemeth>; hence, <nemeth class="inline">⠸⠠⠵⠖</nemeth> is a cyclic group. Not every element in a cyclic group is necessarily a generator of the group. The order of <nemeth class="inline">⠼⠆⠀⠈⠑⠀⠸⠠⠵⠖</nemeth> is <nemeth class="inline">⠼⠒</nemeth>. The cyclic subgroup generated by <nemeth class="inline">⠼⠆</nemeth> is <nemeth class="inline">⠨⠨⠷⠼⠆⠨⠨⠾⠀⠨⠅⠀⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠨⠾</nemeth>.</p>
            </article>
            <p id="wAi">The groups <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> are cyclic groups. The elements <nemeth class="inline">⠼⠂</nemeth> and <nemeth class="inline">⠤⠼⠂</nemeth> are generators for <nemeth class="inline">⠸⠠⠵</nemeth>. We can certainly generate <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> with 1 although there may be other generators of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, as in the case of <nemeth class="inline">⠸⠠⠵⠖</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="yKH">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="Cpu">The group of units, <nemeth class="inline">⠠⠥⠷⠼⠔⠾</nemeth>, in <nemeth class="inline">⠸⠠⠵⠔</nemeth> is a cyclic group. As a set, <nemeth class="inline">⠠⠥⠷⠼⠔⠾</nemeth> is <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠶⠠⠀⠼⠦⠨⠾</nemeth>. The element 2 is a generator for <nemeth class="inline">⠠⠥⠷⠼⠔⠾</nemeth> since</p>
              <div class="displaymath">
                <nemeth>⠼⠆⠘⠂⠀⠀⠨⠅⠀⠼⠆⠆⠘⠆⠐⠀⠨⠅⠀⠼⠲⠀⠆⠘⠒⠀⠀⠨⠅⠀⠼⠦⠆⠘⠲⠐⠀⠨⠅⠀⠼⠶⠀⠆⠘⠢⠀⠀⠨⠅⠀⠼⠢⠆⠘⠖⠐⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="eRQ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="iwD">Not every group is a cyclic group. Consider the symmetry group of an equilateral triangle <nemeth class="inline">⠠⠎⠒</nemeth>. The multiplication table for this group is Figure 3.1.7. The subgroups of <nemeth class="inline">⠠⠎⠒</nemeth> are shown in Figure 4.1.8. Notice that every subgroup is cyclic; however, no single element generates the entire group.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="ODM">
                <div data-braille="image">
                  <p>Image: The lattice of subgroups for S-3: the top is S-3, the second line is the identity, rho-1, rho-2; the identity, mu-1; the identity, mu-2; the identity, mu-3, and the bottom is the identity subgroup.</p>
                  <p>ID: cyclic-s3-subgroups</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">4.1.8<span class="period">.</span></span><span class="space"> </span>Subgroups of <nemeth class="inline">⠠⠎⠒</nemeth></figcaption>
              </figure>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="NTF">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="AAh">Every cyclic group is abelian.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="AzU">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="XnE">Let <i class="one-letter">G</i> be a cyclic group and <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> be a generator for <i class="one-letter">G</i>. If <i class="one-letter">g</i> and <i class="one-letter">h</i> are in <i class="one-letter">G</i>, then they can be written as powers of <i class="one-letter">a</i>, say <nemeth class="inline">⠛⠀⠨⠅⠀⠁⠘⠗</nemeth> and <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠘⠎</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠛⠓⠀⠨⠅⠀⠁⠘⠗⠐⠁⠘⠎⠐⠀⠨⠅⠀⠁⠘⠗⠬⠎⠐⠀⠨⠅⠀⠁⠘⠎⠬⠗⠐⠀⠨⠅⠀⠁⠘⠎⠐⠁⠘⠗⠐⠀⠨⠅⠀⠓⠛</nemeth>
              </div>
              <p data-braille="continuation">, <i class="one-letter">G</i> is abelian.</p>
            </article>
          </section>
          <section class="subsection" id="qRN">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.1.1</span> <span class="title">Subgroups of Cyclic Groups</span></div>
            <p id="lFE">We can ask some interesting questions about cyclic subgroups of a group and subgroups of a cyclic group. If <i class="one-letter">G</i> is a group, which subgroups of <i class="one-letter">G</i> are cyclic? If <i class="one-letter">G</i> is a cyclic group, what type of subgroups does <i class="one-letter">G</i> possess?</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="lcB">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="gHq">Every subgroup of a cyclic group is cyclic.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="gHd">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="DuN">The main tools used in this proof are the division algorithm and the Principle of Well-Ordering. Let <i class="one-letter">G</i> be a cyclic group generated by <i class="one-letter">a</i> and suppose that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>. If <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>, then trivially <i class="one-letter">H</i> is cyclic. Suppose that <i class="one-letter">H</i> contains some other element <i class="one-letter">g</i> distinct from the identity. Then <i class="one-letter">g</i> can be written as <nemeth class="inline">⠁⠘⠝</nemeth> for some integer <i class="one-letter">n</i>. Since <i class="one-letter">H</i> is a subgroup, <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠘⠤⠝</nemeth> must also be in <i class="one-letter">H</i>. Since either <i class="one-letter">n</i> or <nemeth class="inline">⠤⠝</nemeth> is positive, we can assume that <i class="one-letter">H</i> contains positive powers of <i class="one-letter">a</i> and <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠴</nemeth>. Let <i class="one-letter">m</i> be the smallest natural number such that <nemeth class="inline">⠁⠘⠍⠐⠀⠈⠑⠀⠠⠓</nemeth>. Such an <i class="one-letter">m</i> exists by the Principle of Well-Ordering.</p>
              <p id="jBW">We claim that <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠘⠍</nemeth> is a generator for <i class="one-letter">H</i>. We must show that every <nemeth class="inline">⠓⠘⠄⠐⠀⠈⠑⠀⠠⠓</nemeth> can be written as a power of <i class="one-letter">h</i>. Since <nemeth class="inline">⠓⠘⠄⠐⠀⠈⠑⠀⠠⠓</nemeth> and <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>, <nemeth class="inline">⠓⠘⠄⠐⠀⠨⠅⠀⠁⠘⠅</nemeth> for some integer <i class="one-letter">k</i>. Using the division algorithm, we can find numbers <i class="one-letter">q</i> and <i class="one-letter">r</i> such that <nemeth class="inline">⠅⠀⠨⠅⠀⠍⠟⠬⠗</nemeth> where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠍</nemeth>; hence,</p>
              <div class="displaymath">
                <nemeth>⠁⠘⠅⠐⠀⠨⠅⠀⠁⠘⠍⠟⠬⠗⠐⠀⠨⠅⠀⠷⠁⠘⠍⠐⠾⠘⠟⠐⠁⠘⠗⠐⠀⠨⠅⠀⠓⠘⠟⠐⠁⠘⠗</nemeth>
              </div>
              <p data-braille="continuation">. So <nemeth class="inline">⠁⠘⠗⠐⠀⠨⠅⠀⠁⠘⠅⠐⠓⠘⠤⠟</nemeth>. Since <nemeth class="inline">⠁⠘⠅</nemeth> and <nemeth class="inline">⠓⠘⠤⠟</nemeth> are in <i class="one-letter">H</i>, <nemeth class="inline">⠁⠘⠗</nemeth> must also be in <i class="one-letter">H</i>. However, <i class="one-letter">m</i> was the smallest positive number such that <nemeth class="inline">⠁⠘⠍</nemeth> was in <i class="one-letter">H</i>; consequently, <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth> and so <nemeth class="inline">⠅⠀⠨⠅⠀⠍⠟</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠓⠘⠄⠐⠀⠨⠅⠀⠁⠘⠅⠐⠀⠨⠅⠀⠁⠘⠍⠟⠐⠀⠨⠅⠀⠓⠘⠟</nemeth>
              </div>
              <p data-braille="continuation">and <i class="one-letter">H</i> is generated by <i class="one-letter">h</i>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="dyc">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="xFB">The subgroups of <nemeth class="inline">⠸⠠⠵</nemeth> are exactly <nemeth class="inline">⠝⠸⠠⠵</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="xqT">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.12</span>
                <span class="period">.</span>
              </h6>
              <p id="Fka">Let <i class="one-letter">G</i> be a cyclic group of order <i class="one-letter">n</i> and suppose that <i class="one-letter">a</i> is a generator for <i class="one-letter">G</i>. Then <nemeth class="inline">⠁⠘⠅⠐⠀⠨⠅⠀⠑</nemeth> if and only if <i class="one-letter">n</i> divides <i class="one-letter">k</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="FjN">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="PJf">First suppose that <nemeth class="inline">⠁⠘⠅⠐⠀⠨⠅⠀⠑</nemeth>. By the division algorithm, <nemeth class="inline">⠅⠀⠨⠅⠀⠝⠟⠬⠗</nemeth> where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠝</nemeth>; hence,</p>
              <div class="displaymath">
                <nemeth>⠑⠀⠨⠅⠀⠁⠘⠅⠐⠀⠨⠅⠀⠁⠘⠝⠟⠬⠗⠐⠀⠨⠅⠀⠁⠘⠝⠟⠐⠁⠘⠗⠐⠀⠨⠅⠀⠑⠁⠘⠗⠐⠀⠨⠅⠀⠁⠘⠗</nemeth>
              </div>
              <p data-braille="continuation">. Since the smallest positive integer <i class="one-letter">m</i> such that <nemeth class="inline">⠁⠘⠍⠐⠀⠨⠅⠀⠑</nemeth> is <i class="one-letter">n</i>, <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth>.</p>
              <p id="vQo">Conversely, if <i class="one-letter">n</i> divides <i class="one-letter">k</i>, then <nemeth class="inline">⠅⠀⠨⠅⠀⠝⠎</nemeth> for some integer <i class="one-letter">s</i>. Consequently,</p>
              <div class="displaymath">
                <nemeth>⠁⠘⠅⠐⠀⠨⠅⠀⠁⠘⠝⠎⠐⠀⠨⠅⠀⠷⠁⠘⠝⠐⠾⠘⠎⠐⠀⠨⠅⠀⠑⠘⠎⠐⠀⠨⠅⠀⠑</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="RjK">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.13</span>
                <span class="period">.</span>
              </h6>
              <p id="MOz">Let <i class="one-letter">G</i> be a cyclic group of order <i class="one-letter">n</i> and suppose that <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> is a generator of the group. If <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠘⠅</nemeth>, then the order of <i class="one-letter">b</i> is <nemeth class="inline">⠝⠸⠌⠙</nemeth>, where <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠅⠠⠀⠝⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="MOm">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="bXx">We wish to find the smallest integer <i class="one-letter">m</i> such that <nemeth class="inline">⠑⠀⠨⠅⠀⠃⠘⠍⠐⠀⠨⠅⠀⠁⠘⠅⠍</nemeth>. By Proposition 4.1.12, this is the smallest integer <i class="one-letter">m</i> such that <i class="one-letter">n</i> divides <nemeth class="inline">⠅⠍</nemeth> or, equivalently, <nemeth class="inline">⠝⠸⠌⠙</nemeth> divides <nemeth class="inline">⠍⠷⠅⠸⠌⠙⠾</nemeth>. Since <i class="one-letter">d</i> is the greatest common divisor of <i class="one-letter">n</i> and <i class="one-letter">k</i>, <nemeth class="inline">⠝⠸⠌⠙</nemeth> and <nemeth class="inline">⠅⠸⠌⠙</nemeth> are relatively prime. Hence, for <nemeth class="inline">⠝⠸⠌⠙</nemeth> to divide <nemeth class="inline">⠍⠷⠅⠸⠌⠙⠾</nemeth> it must divide <i class="one-letter">m</i>. The smallest such <i class="one-letter">m</i> is <nemeth class="inline">⠝⠸⠌⠙</nemeth>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="JFl">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.14</span>
                <span class="period">.</span>
              </h6>
              <p id="dMK">The generators of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> are the integers <i class="one-letter">r</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠝</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠗⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="pMu">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.15</span>
                <span class="period">.</span>
              </h6>
              <p id="uKV">Let us examine the group <nemeth class="inline">⠸⠠⠵⠂⠖</nemeth>. The numbers <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠢</nemeth>, <nemeth class="inline">⠼⠶</nemeth>, <nemeth class="inline">⠼⠔</nemeth>, <nemeth class="inline">⠼⠂⠂</nemeth>, <nemeth class="inline">⠼⠂⠒</nemeth>, and <nemeth class="inline">⠼⠂⠢</nemeth> are the elements of <nemeth class="inline">⠸⠠⠵⠂⠖</nemeth> that are relatively prime to <nemeth class="inline">⠼⠂⠖</nemeth>. Each of these elements generates <nemeth class="inline">⠸⠠⠵⠂⠖</nemeth>. For example,</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠡⠔⠀⠀⠨⠅⠀⠼⠔⠀⠆⠡⠔⠀⠀⠨⠅⠀⠼⠆⠀⠒⠡⠔⠀⠀⠨⠅⠀⠼⠂⠂⠀⠲⠡⠔⠀⠀⠨⠅⠀⠼⠲⠀⠢⠡⠔⠀⠀⠨⠅⠀⠼⠂⠒⠀⠖⠡⠔⠀⠀⠨⠅⠀⠼⠖⠀⠶⠡⠔⠀⠀⠨⠅⠀⠼⠂⠢⠀⠦⠡⠔⠀⠀⠨⠅⠀⠼⠦⠀⠔⠡⠔⠀⠀⠨⠅⠀⠼⠂⠀⠂⠴⠡⠔⠀⠀⠨⠅⠀⠼⠂⠴⠀⠂⠂⠡⠔⠀⠀⠨⠅⠀⠼⠒⠀⠂⠆⠡⠔⠀⠀⠨⠅⠀⠼⠂⠆⠀⠂⠒⠡⠔⠀⠀⠨⠅⠀⠼⠢⠀⠂⠲⠡⠔⠀⠀⠨⠅⠀⠼⠂⠲⠀⠂⠢⠡⠔⠀⠀⠨⠅⠀⠼⠶</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
        </section>
        <section class="section" id="sHa">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">4.2</span> <span class="title">Multiplicative Group of Complex Numbers</span></div>
          <section class="introduction" id="Iet">
            <p id="cHr">The <dfn class="terminology">complex numbers</dfn> are defined as</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠉⠀⠨⠅⠀⠨⠷⠁⠬⠃⠊⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠗⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>. If <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth>, then <i class="one-letter">a</i> is the <dfn class="terminology">real part</dfn> of <i class="one-letter">z</i> and <i class="one-letter">b</i> is the <dfn class="terminology">imaginary part</dfn> of <i class="one-letter">z</i>.</p>
            <p id="IOA">To add two complex numbers <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠉⠬⠙⠊</nemeth>, we just add the corresponding real and imaginary parts:</p>
            <div class="displaymath">
              <nemeth>⠵⠬⠺⠀⠨⠅⠀⠷⠁⠬⠃⠊⠾⠬⠷⠉⠬⠙⠊⠾⠀⠨⠅⠀⠷⠁⠬⠉⠾⠬⠷⠃⠬⠙⠾⠊</nemeth>
            </div>
            <p data-braille="continuation">. Remembering that <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>, we multiply complex numbers just like polynomials. The product of <i class="one-letter">z</i> and <i class="one-letter">w</i> is</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠊⠾⠷⠉⠬⠙⠊⠾⠀⠨⠅⠀⠁⠉⠬⠃⠙⠊⠘⠆⠐⠬⠁⠙⠊⠬⠃⠉⠊⠀⠨⠅⠀⠷⠁⠉⠤⠃⠙⠾⠬⠷⠁⠙⠬⠃⠉⠾⠊</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="oVJ">Every nonzero complex number <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> has a multiplicative inverse; that is, there exists a <nemeth class="inline">⠵⠘⠤⠼⠂⠐⠀⠈⠑⠀⠸⠠⠉⠘⠈⠼</nemeth> such that <nemeth class="inline">⠵⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠵⠘⠤⠼⠂⠐⠵⠀⠨⠅⠀⠼⠂</nemeth>. If <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠹⠁⠤⠃⠊⠌⠁⠘⠆⠐⠬⠃⠘⠆⠐⠼</nemeth>
            </div>
            <p data-braille="continuation">. The <dfn class="terminology">complex conjugate</dfn>  of a complex number <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> is defined to be <nemeth class="inline">⠐⠵⠣⠱⠻⠀⠨⠅⠀⠁⠤⠃⠊</nemeth>. The <dfn class="terminology">absolute value</dfn> or <dfn class="terminology">modulus</dfn> of  <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth>  is <nemeth class="inline">⠳⠵⠳⠀⠨⠅⠀⠜⠁⠘⠆⠐⠬⠃⠘⠆⠐⠻</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="KYZ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="aSe">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠆⠬⠒⠊</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠼⠂⠤⠆⠊</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠵⠬⠺⠀⠨⠅⠀⠷⠼⠆⠬⠒⠊⠾⠬⠷⠂⠤⠆⠊⠾⠀⠨⠅⠀⠼⠒⠬⠊</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠵⠺⠀⠨⠅⠀⠷⠼⠆⠬⠒⠊⠾⠷⠂⠤⠆⠊⠾⠀⠨⠅⠀⠼⠦⠤⠊</nemeth>
              </div>
              <p data-braille="continuation">. Also,</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠤⠼⠂⠀⠀⠨⠅⠀⠹⠆⠌⠂⠒⠼⠤⠹⠒⠌⠂⠒⠼⠊⠀⠳⠵⠳⠀⠀⠨⠅⠀⠜⠂⠒⠻⠀⠐⠵⠣⠱⠻⠀⠀⠨⠅⠀⠼⠆⠤⠒⠊</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="Nyt">
              <div data-braille="image">
                <p>Image: The complex plane where the horizontal axis is the x-axis or real axis and the verticle axis is the y-axis or imaginary axis. The point z1 = 2 + 3i is in the upper right quadrant, the point z2 = 1- 2i in the lower right quadrant, and z3 = -3 + 2i in the upper right quadrant.</p>
                <p>ID: cyclic-complex-rectangular</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">4.2.2<span class="period">.</span></span><span class="space"> </span>Rectangular coordinates of a complex number</figcaption>
            </figure>
            <p id="VcS">There are several ways of graphically representing complex numbers. We can represent a complex number <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> as an ordered pair on the <nemeth class="inline">⠭⠽</nemeth> plane where <i class="one-letter">a</i> is the <i class="one-letter">x</i> (or real) coordinate and <i class="one-letter">b</i> is the <i class="one-letter">y</i> (or imaginary) coordinate. This is called the <dfn class="terminology">rectangular</dfn> or <dfn class="terminology">Cartesian</dfn> representation. The rectangular representations of <nemeth class="inline">⠵⠂⠀⠨⠅⠀⠼⠆⠬⠒⠊</nemeth>, <nemeth class="inline">⠵⠆⠀⠨⠅⠀⠼⠂⠤⠆⠊</nemeth>, and <nemeth class="inline">⠵⠒⠀⠨⠅⠀⠤⠼⠒⠬⠆⠊</nemeth> are depicted in Figure 4.2.2.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="tFC">
              <div data-braille="image">
                <p>Image: The complex plane where the horizontal axis is the x-axis or real axis and the verticle axis is the y-axis or imaginary axis.  The point a + bi is in the upper right quadrant.  The point is also determined by a ray that at an angle of theta counterclockwise from the horizontal axis having a length of r.</p>
                <p>ID: cyclic-complex-polar</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">4.2.3<span class="period">.</span></span><span class="space"> </span>Polar coordinates of a complex number</figcaption>
            </figure>
            <p id="Bkb">Nonzero complex numbers can also be represented using <dfn class="terminology">polar coordinates</dfn>. To specify any nonzero point on the plane, it suffices to give an angle <nemeth class="inline">⠨⠹</nemeth> from the positive <i class="one-letter">x</i> axis in the counterclockwise direction and a distance <i class="one-letter">r</i> from the origin, as in  Figure 4.2.3. We can see that</p>
            <div class="displaymath">
              <nemeth>⠵⠀⠨⠅⠀⠁⠬⠃⠊⠀⠨⠅⠀⠗⠷⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹⠾</nemeth>
            </div>
            <p data-braille="continuation">. Hence,</p>
            <div class="displaymath">
              <nemeth>⠗⠀⠨⠅⠀⠳⠵⠳⠀⠨⠅⠀⠜⠁⠘⠆⠐⠬⠃⠘⠆⠐⠻</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠁⠀⠀⠨⠅⠀⠗⠉⠕⠎⠀⠨⠹⠀⠃⠀⠀⠨⠅⠀⠗⠎⠊⠝⠀⠨⠹</nemeth>
            </div>
            <p data-braille="continuation">. We sometimes abbreviate <nemeth class="inline">⠗⠷⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹⠾</nemeth> as <nemeth class="inline">⠗⠉⠊⠎⠨⠹</nemeth>.  To assure that the representation of <i class="one-letter">z</i> is  well-defined, we also require that <nemeth class="inline">⠼⠴⠘⠘⠨⠡⠐⠀⠐⠅⠱⠀⠨⠹⠀⠐⠅⠀⠼⠒⠖⠴⠘⠘⠨⠡</nemeth>. If the measurement is in radians, then <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠨⠹⠀⠐⠅⠀⠼⠆⠨⠏</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="rgi">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="GZn">Suppose that <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠆⠉⠊⠎⠼⠖⠴⠘⠘⠨⠡</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠼⠆⠉⠕⠎⠀⠼⠖⠴⠘⠘⠨⠡⠐⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠃⠀⠨⠅⠀⠼⠆⠎⠊⠝⠀⠼⠖⠴⠘⠘⠨⠡⠐⠀⠨⠅⠀⠜⠒⠻</nemeth>
              </div>
              <p data-braille="continuation">. Hence, the rectangular representation is <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠂⠬⠜⠒⠻⠊</nemeth>.</p>
              <p id="ngw">Conversely, if we are given a rectangular representation of a complex number, it is often useful to know the number's polar representation. If <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠒⠜⠆⠻⠤⠒⠜⠆⠻⠊</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠗⠀⠨⠅⠀⠜⠁⠘⠆⠐⠬⠃⠘⠆⠐⠻⠀⠨⠅⠀⠜⠒⠖⠻⠀⠨⠅⠀⠼⠖</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠨⠹⠀⠨⠅⠀⠁⠗⠉⠞⠁⠝⠀⠷⠹⠃⠌⠁⠼⠾⠀⠨⠅⠀⠁⠗⠉⠞⠁⠝⠀⠷⠤⠼⠂⠾⠀⠨⠅⠀⠼⠒⠂⠢⠘⠘⠨⠡</nemeth>
              </div>
              <p data-braille="continuation">, so <nemeth class="inline">⠼⠒⠜⠆⠻⠤⠒⠜⠆⠻⠊⠀⠨⠅⠀⠼⠖⠉⠊⠎⠼⠒⠂⠢⠘⠘⠨⠡</nemeth>.</p>
            </article>
            <p id="hrk">The polar representation of a complex number makes it easy to find products and powers of complex numbers. The proof of the following proposition is straightforward and is left as an exercise.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="ahX">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="lrj">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠗⠉⠊⠎⠨⠹</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠎⠉⠊⠎⠨⠋</nemeth> be two nonzero complex numbers. Then</p>
              <div class="displaymath">
                <nemeth>⠵⠺⠀⠨⠅⠀⠗⠎⠉⠊⠎⠷⠨⠹⠬⠨⠋⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Xnr">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="TnF">If <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠒⠉⠊⠎⠷⠨⠏⠸⠌⠒⠾</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠼⠆⠉⠊⠎⠷⠨⠏⠸⠌⠖⠾</nemeth>, then <nemeth class="inline">⠵⠺⠀⠨⠅⠀⠼⠖⠉⠊⠎⠷⠨⠏⠸⠌⠆⠾⠀⠨⠅⠀⠼⠖⠊</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="uaO">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.7</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">DeMoivre.</span>
              </h6>
              <p id="sVI">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠗⠉⠊⠎⠨⠹</nemeth> be a nonzero complex number. Then</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠗⠉⠊⠎⠨⠹⠈⠾⠘⠝⠐⠀⠨⠅⠀⠗⠘⠝⠐⠉⠊⠎⠷⠝⠨⠹⠾</nemeth>
              </div>
              <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="sVv">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="IeG">We will use induction on <i class="one-letter">n</i>. For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth> the theorem is trivial. Assume that the theorem is true for all <i class="one-letter">k</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠱⠀⠝</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠝⠬⠂⠀⠀⠨⠅⠀⠵⠘⠝⠐⠵⠀⠀⠀⠀⠨⠅⠀⠗⠘⠝⠐⠷⠉⠕⠎⠀⠝⠨⠹⠬⠊⠎⠊⠝⠀⠝⠨⠹⠾⠗⠷⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹⠾⠀⠀⠀⠀⠨⠅⠀⠗⠘⠝⠬⠂⠐⠈⠷⠷⠉⠕⠎⠀⠝⠨⠹⠉⠕⠎⠀⠨⠹⠤⠎⠊⠝⠀⠝⠨⠹⠎⠊⠝⠀⠨⠹⠾⠬⠊⠷⠎⠊⠝⠀⠝⠨⠹⠉⠕⠎⠀⠨⠹⠬⠉⠕⠎⠀⠝⠨⠹⠎⠊⠝⠀⠨⠹⠾⠈⠾⠀⠀⠀⠀⠨⠅⠀⠗⠘⠝⠬⠂⠐⠈⠷⠉⠕⠎⠀⠷⠝⠨⠹⠬⠨⠹⠾⠬⠊⠎⠊⠝⠀⠷⠝⠨⠹⠬⠨⠹⠾⠈⠾⠀⠀⠀⠀⠨⠅⠀⠗⠘⠝⠬⠂⠐⠈⠷⠉⠕⠎⠀⠷⠝⠬⠂⠾⠨⠹⠬⠊⠎⠊⠝⠀⠷⠝⠬⠂⠾⠨⠹⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="DuA">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="zuO">Suppose that <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠂⠬⠊</nemeth> and we wish to compute <nemeth class="inline">⠵⠘⠂⠴</nemeth>. Rather than computing <nemeth class="inline">⠷⠼⠂⠬⠊⠾⠘⠂⠴</nemeth> directly, it is much easier to switch to polar coordinates and calculate <nemeth class="inline">⠵⠘⠂⠴</nemeth> using DeMoivre's Theorem:</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠂⠴⠀⠀⠨⠅⠀⠷⠼⠂⠬⠊⠾⠘⠂⠴⠐⠀⠀⠀⠀⠨⠅⠀⠷⠜⠆⠻⠉⠊⠎⠷⠹⠨⠏⠌⠲⠼⠾⠾⠘⠂⠴⠐⠀⠀⠀⠀⠨⠅⠀⠷⠜⠆⠻⠾⠘⠂⠴⠐⠉⠊⠎⠷⠹⠢⠨⠏⠌⠆⠼⠾⠀⠀⠀⠀⠨⠅⠀⠼⠒⠆⠉⠊⠎⠷⠹⠨⠏⠌⠆⠼⠾⠀⠀⠀⠀⠨⠅⠀⠼⠒⠆⠊</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="WYW">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.2.1</span> <span class="title">The Circle Group and the Roots of Unity</span></div>
            <p id="RMN">The multiplicative group of the complex numbers, <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>, possesses some interesting subgroups. Whereas <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> and <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> have no interesting subgroups of finite order, <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> has many. We first consider the <dfn class="terminology">circle group</dfn>, </p>
            <div class="displaymath">
              <nemeth>⠸⠠⠞⠀⠨⠅⠀⠨⠷⠵⠀⠈⠑⠀⠸⠠⠉⠒⠀⠳⠵⠳⠀⠨⠅⠀⠼⠂⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. The following proposition is a direct result of Proposition 4.2.5.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="CaM">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="Rys">The circle group is a subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>.</p>
            </article>
            <p id="xTW">Although the circle group has infinite order, it has many interesting finite subgroups. Suppose that <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠤⠼⠂⠠⠀⠊⠠⠀⠤⠊⠨⠾</nemeth>. Then <i class="one-letter">H</i> is a subgroup of the circle group. Also, <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠤⠼⠂</nemeth>, <i class="one-letter">i</i>, and <nemeth class="inline">⠤⠊</nemeth> are exactly those complex numbers that satisfy the equation <nemeth class="inline">⠵⠘⠲⠐⠀⠨⠅⠀⠼⠂</nemeth>. The complex numbers satisfying the equation <nemeth class="inline">⠵⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth> are called the <dfn class="terminology"><i class="one-letter">n</i>th roots of unity</dfn>. </p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="VTD">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="ZcR">If <nemeth class="inline">⠵⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>, then the <i class="one-letter">n</i>th roots of unity are</p>
              <div class="displaymath">
                <nemeth>⠵⠀⠨⠅⠀⠉⠊⠎⠷⠹⠆⠅⠨⠏⠌⠝⠼⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠅⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠂</nemeth>. Furthermore, the <i class="one-letter">n</i>th roots of unity form a cyclic subgroup of <nemeth class="inline">⠸⠠⠞</nemeth> of order <i class="one-letter">n</i></p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZcE">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="olP">By DeMoivre's Theorem,</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠝⠐⠀⠨⠅⠀⠉⠊⠎⠷⠝⠹⠆⠅⠨⠏⠌⠝⠼⠾⠀⠨⠅⠀⠉⠊⠎⠷⠼⠆⠅⠨⠏⠾⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. The <i class="one-letter">z</i>'s are distinct since the numbers <nemeth class="inline">⠼⠆⠅⠨⠏⠸⠌⠝</nemeth> are all distinct and are greater than or equal to 0 but less than <nemeth class="inline">⠼⠆⠨⠏</nemeth>. The fact that these are all of the roots of the equation <nemeth class="inline">⠵⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth> follows from from Corollary 17.2.4, which states that a polynomial of degree <i class="one-letter">n</i> can have at most <i class="one-letter">n</i> roots. We will leave the proof that the <i class="one-letter">n</i>th roots of unity form a cyclic subgroup of <nemeth class="inline">⠸⠠⠞</nemeth> as an exercise.</p>
            </article>
            <p id="ebf">A generator for the group of the <i class="one-letter">n</i>th roots of unity is called a <dfn class="terminology">primitive <i class="one-letter">n</i>th root of unity</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="ihV">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="fBX">The 8th roots of unity can be represented as eight equally spaced points on the unit circle (Figure 4.2.12). The primitive 8th roots of unity are</p>
              <div class="displaymath">
                <nemeth>⠨⠕⠀⠀⠨⠅⠀⠹⠜⠆⠻⠌⠆⠼⠬⠹⠜⠆⠻⠌⠆⠼⠊⠀⠨⠕⠘⠒⠀⠀⠨⠅⠀⠤⠹⠜⠆⠻⠌⠆⠼⠬⠹⠜⠆⠻⠌⠆⠼⠊⠀⠨⠕⠘⠢⠀⠀⠨⠅⠀⠤⠹⠜⠆⠻⠌⠆⠼⠤⠹⠜⠆⠻⠌⠆⠼⠊⠀⠨⠕⠘⠶⠀⠀⠨⠅⠀⠹⠜⠆⠻⠌⠆⠼⠤⠹⠜⠆⠻⠌⠆⠼⠊</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="LJg">
                <div data-braille="image">
                  <p>Image: The 8 roots of unity are spaced evenly around the unit circle beginning with 1 on the positive horizontal axis and followed by omega, i, the cube of omega, -1, omega to the fifth power, -i, and omega to the seventh power.</p>
                  <p>ID: cyclic-roots-unity</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">4.2.12<span class="period">.</span></span><span class="space"> </span>8th roots of unity</figcaption>
              </figure>
            </article>
          </section>
        </section>
        <section class="section" id="YOj">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">4.3</span> <span class="title">The Method of Repeated Squares</span></div>
          <p id="cVM">Computing large powers can be very time-consuming. Just as anyone can compute <nemeth class="inline">⠼⠆⠘⠆</nemeth> or <nemeth class="inline">⠼⠆⠘⠦</nemeth>, everyone knows how to compute</p>
          <div class="displaymath">
            <nemeth>⠼⠆⠘⠆⠘⠘⠂⠠⠴⠴⠴⠠⠴⠴⠴</nemeth>
          </div>
          <p data-braille="continuation">. However, such numbers are so large that we do not want to attempt the calculations; moreover, past a certain point the computations would not be feasible even if we had every computer in the world at our disposal. Even writing down the decimal representation of a very large number may not be reasonable. It could be thousands or even millions of digits long. However, if we could compute something like</p>
          <div class="displaymath">
            <nemeth>⠼⠆⠘⠒⠶⠠⠒⠔⠦⠠⠒⠒⠆⠐⠷⠍⠕⠙⠀⠲⠖⠠⠒⠦⠔⠾</nemeth>
          </div>
          <p data-braille="continuation">, we could very easily write the result down since it would be a number between <nemeth class="inline">⠼⠴</nemeth> and <nemeth class="inline">⠼⠲⠖⠠⠒⠦⠦</nemeth>. If we want to compute powers modulo <i class="one-letter">n</i> quickly and efficiently, we will have to be clever.<a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-1" id="fn-1"><sup> 1 </sup></a></p>
          <div class="hidden-content tex2jax_ignore" id="hk-fn-1">
            <div class="fn">The results in this section are needed only in Chapter 7</div>
          </div>
          <p id="JcV">The first thing to notice is that any number <i class="one-letter">a</i> can be written as the sum of distinct powers of <nemeth class="inline">⠼⠆</nemeth>; that is, we can write</p>
          <div class="displaymath">
            <nemeth>⠁⠀⠨⠅⠀⠼⠆⠘⠅⠂⠐⠬⠆⠘⠅⠆⠐⠬⠄⠄⠄⠬⠆⠘⠅⠘⠰⠝</nemeth>
          </div>
          <p data-braille="continuation">, where <nemeth class="inline">⠅⠂⠀⠐⠅⠀⠅⠆⠀⠐⠅⠀⠄⠄⠄⠀⠐⠅⠀⠅⠰⠝</nemeth>. This is just the binary representation of <i class="one-letter">a</i>. For example, the binary representation of 57 is 111001, since we can write <nemeth class="inline">⠼⠢⠶⠀⠨⠅⠀⠼⠆⠘⠴⠐⠬⠆⠘⠒⠐⠬⠆⠘⠲⠐⠬⠆⠘⠢</nemeth>.</p>
          <p id="pke">The laws of exponents still work in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>; that is, if <nemeth class="inline">⠃⠀⠸⠇⠀⠁⠘⠭⠐⠷⠍⠕⠙⠀⠝⠾</nemeth> and <nemeth class="inline">⠉⠀⠸⠇⠀⠁⠘⠽⠐⠷⠍⠕⠙⠀⠝⠾</nemeth>, then <nemeth class="inline">⠃⠉⠀⠸⠇⠀⠁⠘⠭⠬⠽⠐⠷⠍⠕⠙⠀⠝⠾</nemeth>. We can compute <nemeth class="inline">⠁⠘⠆⠘⠘⠅⠐⠷⠍⠕⠙⠀⠝⠾</nemeth> in <i class="one-letter">k</i> multiplications by computing</p>
          <div class="displaymath">
            <nemeth>⠁⠘⠆⠘⠘⠴⠐⠷⠍⠕⠙⠀⠝⠾⠀⠁⠘⠆⠘⠘⠂⠐⠷⠍⠕⠙⠀⠝⠾⠀⠣⠄⠄⠄⠀⠁⠘⠆⠘⠘⠅⠐⠷⠍⠕⠙⠀⠝⠾</nemeth>
          </div>
          <p data-braille="continuation">. Each step involves squaring the answer obtained in the previous step, dividing by <i class="one-letter">n</i>, and taking the remainder.</p>
          <article class="example example-like" data-braille="example-like" id="jBJ">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">4.3.1</span>
              <span class="period">.</span>
            </h6>
            <p id="rQp">We will compute <nemeth class="inline">⠼⠆⠶⠂⠘⠒⠆⠂⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>. Notice that</p>
            <div class="displaymath">
              <nemeth>⠼⠒⠆⠂⠀⠨⠅⠀⠼⠆⠘⠴⠐⠬⠆⠘⠖⠐⠬⠆⠘⠦⠐⠆</nemeth>
            </div>
            <p data-braille="continuation">hence, computing <nemeth class="inline">⠼⠆⠶⠂⠘⠒⠆⠂⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth> is the same as computing</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠴⠘⠬⠆⠘⠘⠖⠘⠬⠆⠘⠘⠦⠐⠀⠸⠇⠀⠼⠆⠶⠂⠘⠆⠘⠘⠴⠐⠡⠆⠶⠂⠘⠆⠘⠘⠖⠐⠡⠆⠶⠂⠘⠆⠘⠘⠦⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. So it will suffice to compute <nemeth class="inline">⠼⠆⠶⠂⠘⠆⠘⠘⠊⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth> where <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠴⠠⠀⠼⠖⠠⠀⠼⠦</nemeth>. It is very easy to see that</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠂⠐⠀⠨⠅⠀⠼⠶⠒⠠⠲⠲⠂⠀⠸⠇⠀⠼⠒⠆⠔⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. We can square this result to obtain a value for <nemeth class="inline">⠼⠆⠶⠂⠘⠆⠘⠘⠆⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>:</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠆⠀⠀⠸⠇⠀⠷⠼⠆⠶⠂⠘⠆⠘⠘⠂⠘⠐⠾⠘⠆⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠷⠼⠒⠆⠔⠾⠘⠆⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠂⠴⠦⠠⠆⠲⠂⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠂⠖⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. We are using the fact that <nemeth class="inline">⠷⠁⠘⠆⠘⠘⠝⠘⠐⠾⠘⠆⠐⠀⠸⠇⠀⠁⠘⠆⠡⠆⠘⠘⠝⠐⠀⠸⠇⠀⠁⠘⠆⠘⠘⠝⠬⠂⠐⠷⠍⠕⠙⠀⠝⠾</nemeth>. Continuing, we can calculate</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠖⠐⠀⠸⠇⠀⠼⠲⠂⠔⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠦⠐⠀⠸⠇⠀⠼⠂⠖⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. Therefore,</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠒⠆⠂⠀⠀⠸⠇⠀⠼⠆⠶⠂⠘⠆⠘⠘⠴⠘⠬⠆⠘⠘⠖⠘⠬⠆⠘⠘⠦⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠆⠶⠂⠘⠆⠘⠘⠴⠐⠡⠆⠶⠂⠘⠆⠘⠘⠖⠐⠡⠆⠶⠂⠘⠆⠘⠘⠦⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠆⠶⠂⠡⠲⠂⠔⠡⠂⠖⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠂⠠⠦⠂⠖⠠⠶⠦⠲⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠲⠶⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="Vrn">The method of repeated squares will prove to be a very useful tool when we explore <abbr class="acronym">RSA</abbr> cryptography in Chapter 7. To encode and decode messages in a reasonable manner under this scheme, it is necessary to be able to quickly compute large powers of integers mod <i class="one-letter">n</i>.</p>
          <article class="paragraphs" id="gsI">
            <h5 class="heading">
              <span class="title">Sage.</span>
            </h5>
            <p id="wOD">Sage support for cyclic groups is a little spotty — but we can still make effective use of Sage and perhaps this situation could change soon.</p>
          </article>
        </section>
        <section class="reading-questions" id="CZX">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">4.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="HgA">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="LQt">What is the order of the element <nemeth class="inline">⠼⠒</nemeth> in <nemeth class="inline">⠠⠥⠷⠼⠆⠴⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="nnJ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="rXC">What is the order of the element <nemeth class="inline">⠼⠢</nemeth> in <nemeth class="inline">⠠⠥⠷⠼⠆⠒⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="TuS">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="YeL">Find three generators of <nemeth class="inline">⠸⠠⠵⠦</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="zCb">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="ElU">Find three generators of the <nemeth class="inline">⠼⠢⠘⠞⠓</nemeth> roots of unity.</p>
          </article>
          <article class="exercise exercise-like" id="fJk">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ktd">Show how to compute <nemeth class="inline">⠼⠂⠢⠘⠲⠴⠐⠷⠍⠕⠙⠀⠆⠒⠾</nemeth> efficiently by hand. Check your answer with Sage.</p>
          </article>
        </section>
        <section class="exercises" id="nXh">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">4.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="Ope">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Sim">Prove or disprove each of the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="iZg">All of the generators of <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth> are prime.</p></li>
              <li>b. <p id="Pgp"><nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth> is cyclic.</p></li>
              <li>c. <p id="vny"><nemeth class="inline">⠸⠠⠟</nemeth> is cyclic.</p></li>
              <li>d. <p id="buH">If every proper subgroup of a group <i class="one-letter">G</i> is cyclic, then <i class="one-letter">G</i> is a cyclic group.</p></li>
              <li>e. <p id="HBQ">A group with a finite number of subgroups is finite.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Ryf"><span class="type">Hint</span>:<p id="dcQ">(a) False; (c) false; (e) true.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uwn">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="ypv">Find the order of each of the following elements.</p>
            <ol class="outerlist">
              <li>a. <p id="nIZ"><nemeth class="inline">⠼⠢⠀⠈⠑⠀⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>b. <p id="TQi"><nemeth class="inline">⠜⠒⠻⠀⠈⠑⠀⠸⠠⠗</nemeth></p></li>
              <li>c. <p id="zXr"><nemeth class="inline">⠜⠒⠻⠀⠈⠑⠀⠸⠠⠗⠘⠈⠼</nemeth></p></li>
              <li>d. <p id="geA"><nemeth class="inline">⠤⠊⠀⠈⠑⠀⠸⠠⠉⠘⠈⠼</nemeth></p></li>
              <li>e. <p id="MlJ"><nemeth class="inline">⠼⠶⠆⠀⠈⠑⠀⠸⠠⠵⠆⠲⠴</nemeth></p></li>
              <li>f. <p id="ssS"><nemeth class="inline">⠼⠒⠂⠆⠀⠈⠑⠀⠸⠠⠵⠲⠶⠂</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="dMx"><span class="type">Hint</span>:<p id="JjZ">(a) <nemeth class="inline">⠼⠂⠆</nemeth>; (c) infinite; (e) <nemeth class="inline">⠼⠂⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="aDw">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="ewE">List all of the elements in each of the following subgroups.</p>
            <ol class="outerlist">
              <li>a. <p id="YAb">The subgroup of <nemeth class="inline">⠸⠠⠵</nemeth> generated by <nemeth class="inline">⠼⠶</nemeth></p></li>
              <li>b. <p id="EHk">The subgroup of <nemeth class="inline">⠸⠠⠵⠆⠲</nemeth> generated by <nemeth class="inline">⠼⠂⠢</nemeth></p></li>
              <li>c. <p id="kOt">All subgroups of <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>d. <p id="QVC">All subgroups of <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth></p></li>
              <li>e. <p id="xcL">All subgroups of <nemeth class="inline">⠸⠠⠵⠂⠒</nemeth></p></li>
              <li>f. <p id="djU">All subgroups of <nemeth class="inline">⠸⠠⠵⠲⠦</nemeth></p></li>
              <li>g. <p id="Jrd">The subgroup generated by 3 in <nemeth class="inline">⠠⠥⠷⠼⠆⠴⠾</nemeth></p></li>
              <li>h. <p id="pym">The subgroup generated by 5 in <nemeth class="inline">⠠⠥⠷⠼⠂⠦⠾</nemeth></p></li>
              <li>i. <p id="VFv">The subgroup of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> generated by <nemeth class="inline">⠼⠶</nemeth></p></li>
              <li>j. <p id="BME">The subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> generated by <i class="one-letter">i</i> where <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth></p></li>
              <li>k. <p id="hTN">The subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> generated by <nemeth class="inline">⠼⠆⠊</nemeth></p></li>
              <li>l. <p id="OaW">The subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> generated by <nemeth class="inline">⠷⠼⠂⠬⠊⠾⠸⠌⠜⠆⠻</nemeth></p></li>
              <li>m. <p id="uif">The subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> generated by <nemeth class="inline">⠷⠼⠂⠬⠜⠒⠻⠊⠾⠸⠌⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="qaP"><span class="type">Hint</span>:<p id="pri">(a) <nemeth class="inline">⠼⠶⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠶⠠⠀⠼⠴⠠⠀⠼⠶⠠⠀⠼⠂⠲⠠⠀⠄⠄⠄⠨⠾</nemeth>; (b) <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠠⠀⠼⠂⠆⠠⠀⠼⠂⠢⠠⠀⠼⠂⠦⠠⠀⠼⠆⠂⠨⠾</nemeth>; (c) <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠖⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠲⠠⠀⠼⠦⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠴⠨⠾</nemeth>; (g) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠶⠠⠀⠼⠔⠨⠾</nemeth>; (j) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠤⠼⠂⠠⠀⠊⠠⠀⠤⠊⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GKF">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="KDN">Find the subgroups of <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> generated by each of the following matrices.</p>
            <ol class="outerlist">
              <li>a. <p id="ceB"><nemeth class="inline">⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾</nemeth></p></li>
              <li>b. <p id="IlK"><nemeth class="inline">⠠⠷⠼⠴⠀⠂⠸⠌⠒⠠⠾⠀⠠⠷⠒⠀⠴⠠⠾</nemeth></p></li>
              <li>c. <p id="osT"><nemeth class="inline">⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾</nemeth></p></li>
              <li>d. <p id="UAc"><nemeth class="inline">⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth></p></li>
              <li>e. <p id="AHl"><nemeth class="inline">⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾</nemeth></p></li>
              <li>f. <p id="gOu"><nemeth class="inline">⠠⠷⠜⠒⠻⠸⠌⠆⠀⠂⠸⠌⠆⠠⠾⠀⠠⠷⠤⠼⠂⠸⠌⠆⠀⠜⠒⠻⠸⠌⠆⠠⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Cph"><span class="type">Hint</span>:<p id="Vyr">(a)</p><div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾</nemeth></div><p data-braille="continuation">.</p><p id="BFA">(c)</p><div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠤⠼⠂⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="mRO">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="qKW">Find the order of every element in <nemeth class="inline">⠸⠠⠵⠂⠦</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="SYX">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="WSf">Find the order of every element in the symmetry group of the square, <nemeth class="inline">⠠⠙⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="zgg">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="CZo">What are all of the cyclic subgroups of the quaternion group, <nemeth class="inline">⠠⠟⠦</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="fnp">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="jgx">List all of the cyclic subgroups of <nemeth class="inline">⠠⠥⠷⠼⠒⠴⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Luy">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="PnG">List every generator of each subgroup of order 8 in <nemeth class="inline">⠸⠠⠵⠒⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="rBH">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="vuP">Find all elements of finite order in each of the following groups. Here the “<nemeth class="inline">⠈⠼</nemeth>” indicates the set with zero removed.</p>
            <ol class="outerlist">
              <li>a. <p id="xMF"><nemeth class="inline">⠸⠠⠵</nemeth></p></li>
              <li>b. <p id="dTO"><nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth></p></li>
              <li>c. <p id="KaX"><nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Tns"><span class="type">Hint</span>:<p id="hMJ">(a) <nemeth class="inline">⠼⠴</nemeth>; (b) <nemeth class="inline">⠼⠂⠠⠀⠤⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="XIQ">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="bBY">If <nemeth class="inline">⠁⠘⠆⠲⠐⠀⠨⠅⠀⠑</nemeth> in a group <i class="one-letter">G</i>, what are the possible orders of <i class="one-letter">a</i>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="fBK"><span class="type">Hint</span>:<p id="NTS"><nemeth class="inline">⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠆⠠⠀⠼⠆⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="DPZ">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="HJh">Find a cyclic group with exactly one generator. Can you find cyclic groups with exactly two generators? Four generators? How about <i class="one-letter">n</i> generators?</p>
          </article>
          <article class="exercise exercise-like" id="jXi">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="nQq">For <nemeth class="inline">⠝⠀⠐⠅⠱⠀⠼⠆⠴</nemeth>, which groups <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> are cyclic? Make a conjecture as to what is true in general. Can you prove your conjecture?</p>
          </article>
          <article class="exercise exercise-like" id="Qer">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="TXz">Let</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠁⠝⠙⠠⠃⠀⠨⠅⠀⠠⠷⠼⠴⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠤⠼⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">be elements in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>. Show that <i class="one-letter">A</i> and <i class="one-letter">B</i> have finite orders but <nemeth class="inline">⠠⠁⠠⠃</nemeth> does not.</p>
          </article>
          <article class="exercise exercise-like" id="wlA">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="AeI">Evaluate each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="qig"><nemeth class="inline">⠷⠼⠒⠤⠆⠊⠾⠬⠷⠢⠊⠤⠖⠾</nemeth></p></li>
              <li>b. <p id="Wpp"><nemeth class="inline">⠷⠼⠲⠤⠢⠊⠾⠤⠐⠷⠲⠊⠤⠲⠾⠣⠱⠻</nemeth></p></li>
              <li>c. <p id="Cwy"><nemeth class="inline">⠷⠼⠢⠤⠲⠊⠾⠷⠶⠬⠆⠊⠾</nemeth></p></li>
              <li>d. <p id="iDH"><nemeth class="inline">⠷⠼⠔⠤⠊⠾⠐⠷⠔⠤⠊⠾⠣⠱⠻</nemeth></p></li>
              <li>e. <p id="OKQ"><nemeth class="inline">⠊⠘⠲⠢</nemeth></p></li>
              <li>f. <p id="uRZ"><nemeth class="inline">⠷⠼⠂⠬⠊⠾⠬⠐⠷⠂⠬⠊⠾⠣⠱⠻</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="klD"><span class="type">Hint</span>:<p id="ubb">(a) <nemeth class="inline">⠤⠼⠒⠬⠒⠊</nemeth>; (c) <nemeth class="inline">⠼⠲⠒⠤⠂⠦⠊</nemeth>; (e) <i class="one-letter">i</i></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="csJ">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="glR">Convert the following complex numbers to the form <nemeth class="inline">⠁⠬⠃⠊</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="aZi"><nemeth class="inline">⠼⠆⠉⠊⠎⠷⠨⠏⠸⠌⠖⠾</nemeth></p></li>
              <li>b. <p id="Hgr"><nemeth class="inline">⠼⠢⠉⠊⠎⠷⠼⠔⠨⠏⠸⠌⠲⠾</nemeth></p></li>
              <li>c. <p id="nnA"><nemeth class="inline">⠼⠒⠉⠊⠎⠷⠨⠏⠾</nemeth></p></li>
              <li>d. <p id="TuJ"><nemeth class="inline">⠉⠊⠎⠷⠼⠶⠨⠏⠸⠌⠲⠾⠸⠌⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="wzV"><span class="type">Hint</span>:<p id="aik">(a) <nemeth class="inline">⠜⠒⠻⠬⠊</nemeth>; (c) <nemeth class="inline">⠤⠼⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="IzS">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="Mta">Change the following complex numbers to polar representation.</p>
            <ol class="outerlist">
              <li>a. <p id="zBS"><nemeth class="inline">⠼⠂⠤⠊</nemeth></p></li>
              <li>b. <p id="fJb"><nemeth class="inline">⠤⠼⠢</nemeth></p></li>
              <li>c. <p id="LQk"><nemeth class="inline">⠼⠆⠬⠆⠊</nemeth></p></li>
              <li>d. <p id="rXt"><nemeth class="inline">⠜⠒⠻⠬⠊</nemeth></p></li>
              <li>e. <p id="YeC"><nemeth class="inline">⠤⠼⠒⠊</nemeth></p></li>
              <li>f. <p id="ElL"><nemeth class="inline">⠼⠆⠊⠬⠆⠜⠒⠻</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="IOn"><span class="type">Hint</span>:<p id="Gpt">(a) <nemeth class="inline">⠜⠆⠻⠉⠊⠎⠷⠼⠶⠨⠏⠸⠌⠲⠾</nemeth>; (c) <nemeth class="inline">⠼⠆⠜⠆⠻⠉⠊⠎⠷⠨⠏⠸⠌⠲⠾</nemeth>; (e) <nemeth class="inline">⠼⠒⠉⠊⠎⠷⠼⠒⠨⠏⠸⠌⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="oHb">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="sAj">Calculate each of the following expressions.</p>
            <ol class="outerlist">
              <li>a. <p id="ksU"><nemeth class="inline">⠷⠼⠂⠬⠊⠾⠘⠤⠼⠂</nemeth></p></li>
              <li>b. <p id="QAd"><nemeth class="inline">⠷⠼⠂⠤⠊⠾⠘⠖</nemeth></p></li>
              <li>c. <p id="wHm"><nemeth class="inline">⠷⠜⠒⠻⠬⠊⠾⠘⠢</nemeth></p></li>
              <li>d. <p id="cOv"><nemeth class="inline">⠷⠤⠊⠾⠘⠂⠴</nemeth></p></li>
              <li>e. <p id="IVE"><nemeth class="inline">⠷⠷⠼⠂⠤⠊⠾⠸⠌⠆⠾⠘⠲</nemeth></p></li>
              <li>f. <p id="pcN"><nemeth class="inline">⠷⠤⠜⠆⠻⠤⠜⠆⠻⠊⠾⠘⠂⠆</nemeth></p></li>
              <li>g. <p id="VjW"><nemeth class="inline">⠷⠤⠼⠆⠬⠆⠊⠾⠘⠤⠼⠢</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="VcF"><span class="type">Hint</span>:<p id="mwC">(a) <nemeth class="inline">⠷⠼⠂⠤⠊⠾⠸⠌⠆</nemeth>; (c) <nemeth class="inline">⠼⠂⠖⠷⠊⠤⠜⠒⠻⠾</nemeth>; (e) <nemeth class="inline">⠤⠼⠂⠸⠌⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="UOk">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="YHs">Prove each of the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="Brf"><nemeth class="inline">⠳⠵⠳⠀⠨⠅⠀⠳⠐⠵⠣⠱⠻⠳</nemeth></p></li>
              <li>b. <p id="hyo"><nemeth class="inline">⠵⠐⠵⠣⠱⠻⠀⠨⠅⠀⠳⠵⠳⠘⠆</nemeth></p></li>
              <li>c. <p id="NFx"><nemeth class="inline">⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠐⠵⠣⠱⠻⠸⠌⠳⠵⠳⠘⠆</nemeth></p></li>
              <li>d. <p id="tMG"><nemeth class="inline">⠳⠵⠬⠺⠳⠀⠐⠅⠱⠀⠳⠵⠳⠬⠳⠺⠳</nemeth></p></li>
              <li>e. <p id="ZTP"><nemeth class="inline">⠳⠵⠤⠺⠳⠀⠨⠂⠱⠀⠳⠳⠵⠳⠤⠳⠺⠳⠳</nemeth></p></li>
              <li>f. <p id="mih"><nemeth class="inline">⠳⠵⠺⠳⠀⠨⠅⠀⠳⠵⠳⠳⠺⠳</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="AVt">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="EOB">List and graph the 6th roots of unity. What are the generators of this group? What are the primitive 6th roots of unity?</p>
          </article>
          <article class="exercise exercise-like" id="hcC">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="kVK">List and graph the 5th roots of unity. What are the generators of this group? What are the primitive 5th roots of unity?</p>
          </article>
          <article class="exercise exercise-like" id="NjL">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="RcT">Calculate each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="Dgs"><nemeth class="inline">⠼⠆⠔⠆⠘⠒⠂⠶⠂⠐⠷⠍⠕⠙⠀⠢⠦⠆⠾</nemeth></p></li>
              <li>b. <p id="jnB"><nemeth class="inline">⠼⠆⠢⠢⠶⠘⠒⠲⠂⠐⠷⠍⠕⠙⠀⠢⠖⠦⠂⠾</nemeth></p></li>
              <li>c. <p id="PuK"><nemeth class="inline">⠼⠆⠴⠶⠂⠘⠔⠢⠆⠂⠐⠷⠍⠕⠙⠀⠲⠶⠆⠲⠾</nemeth></p></li>
              <li>d. <p id="vBT"><nemeth class="inline">⠼⠔⠶⠂⠘⠒⠆⠂⠐⠷⠍⠕⠙⠀⠶⠖⠢⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ZMy"><span class="type">Hint</span>:<p id="SDL">(a) <nemeth class="inline">⠼⠆⠔⠆</nemeth>; (c) <nemeth class="inline">⠼⠂⠢⠆⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="tqU">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="xkc">Let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>. Prove the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="bJc">The order of <i class="one-letter">a</i> is the same as the order of <nemeth class="inline">⠁⠘⠤⠼⠂</nemeth>.</p></li>
              <li>b. <p id="HQl">For all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, <nemeth class="inline">⠳⠁⠳⠀⠨⠅⠀⠳⠛⠘⠤⠼⠂⠐⠁⠛⠳</nemeth>.</p></li>
              <li>c. <p id="nXu">The order of <nemeth class="inline">⠁⠃</nemeth> is the same as the order of <nemeth class="inline">⠃⠁</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Zyd">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="drl">Let <i class="one-letter">p</i> and <i class="one-letter">q</i> be distinct primes. How many generators does <nemeth class="inline">⠸⠠⠵⠰⠏⠟</nemeth> have?</p>
          </article>
          <article class="exercise exercise-like" id="FFm">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="Jyu">Let <i class="one-letter">p</i> be prime and <i class="one-letter">r</i> be a positive integer. How many generators does <nemeth class="inline">⠸⠠⠵⠰⠏⠰⠘⠗</nemeth> have?</p>
          </article>
          <article class="exercise exercise-like" id="lMv">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="pFD">Prove that <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth> has no nontrivial subgroups if <i class="one-letter">p</i> is prime.</p>
          </article>
          <article class="exercise exercise-like" id="RTE">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="VMM">If <i class="one-letter">g</i> and <i class="one-letter">h</i> have orders <nemeth class="inline">⠼⠂⠢</nemeth> and <nemeth class="inline">⠼⠂⠖</nemeth> respectively in a group <i class="one-letter">G</i>, what is the order of <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾⠨⠩⠨⠨⠷⠓⠨⠨⠾</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="KDA"><span class="type">Hint</span>:<p id="yKU"><nemeth class="inline">⠳⠨⠨⠷⠛⠨⠨⠾⠨⠩⠨⠨⠷⠓⠨⠨⠾⠳⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="yaN">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="BTV">Let <i class="one-letter">a</i> be an element in a group <i class="one-letter">G</i>. What is a generator for the subgroup <nemeth class="inline">⠨⠨⠷⠁⠘⠍⠐⠨⠨⠾⠨⠩⠨⠨⠷⠁⠘⠝⠐⠨⠨⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="ehW">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="ibe">Prove that <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> has an even number of generators for <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Kpf">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="Oin">Suppose that <i class="one-letter">G</i> is a group and let <i class="one-letter">a</i>, <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠛</nemeth>. Prove that if <nemeth class="inline">⠳⠁⠳⠀⠨⠅⠀⠍</nemeth> and <nemeth class="inline">⠳⠃⠳⠀⠨⠅⠀⠝</nemeth> with <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠨⠩⠨⠨⠷⠃⠨⠨⠾⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="qwo">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="upw">Let <i class="one-letter">G</i> be an abelian group. Show that the elements of finite order in <i class="one-letter">G</i> form a subgroup. This subgroup is called the <dfn class="terminology">torsion subgroup</dfn> of <i class="one-letter">G</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Pnt"><span class="type">Hint</span>:<p id="eSd">The identity element in any group has finite order. Let <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠛</nemeth> have orders <i class="one-letter">m</i> and <i class="one-letter">n</i>, respectively. Since <nemeth class="inline">⠷⠛⠘⠤⠼⠂⠐⠾⠘⠍⠐⠀⠨⠅⠀⠑</nemeth> and <nemeth class="inline">⠷⠛⠓⠾⠘⠍⠝⠐⠀⠨⠅⠀⠑</nemeth>, the elements of finite order in <i class="one-letter">G</i> form a subgroup of <i class="one-letter">G</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="WDx">
            <h6 class="heading">
              <span class="codenumber">32<span class="period">.</span></span>
            </h6>
            <p id="awF">Let <i class="one-letter">G</i> be a finite cyclic group of order <i class="one-letter">n</i> generated by <i class="one-letter">x</i>. Show that if <nemeth class="inline">⠽⠀⠨⠅⠀⠭⠘⠅</nemeth> where <nemeth class="inline">⠛⠉⠙⠀⠷⠅⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <i class="one-letter">y</i> must be a generator of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="CKG">
            <h6 class="heading">
              <span class="codenumber">33<span class="period">.</span></span>
            </h6>
            <p id="GDO">If <i class="one-letter">G</i> is an abelian group that contains a pair of cyclic subgroups of order <nemeth class="inline">⠼⠆</nemeth>, show that <i class="one-letter">G</i> must contain a subgroup of order <nemeth class="inline">⠼⠲</nemeth>. Does this subgroup have to be cyclic?</p>
          </article>
          <article class="exercise exercise-like" id="iRP">
            <h6 class="heading">
              <span class="codenumber">34<span class="period">.</span></span>
            </h6>
            <p id="mKX">Let <i class="one-letter">G</i> be an abelian group of order <nemeth class="inline">⠏⠟</nemeth> where <nemeth class="inline">⠛⠉⠙⠀⠷⠏⠠⠀⠟⠾⠀⠨⠅⠀⠼⠂</nemeth>. If <i class="one-letter">G</i> contains elements <i class="one-letter">a</i> and <i class="one-letter">b</i> of order <i class="one-letter">p</i> and <i class="one-letter">q</i> respectively, then show that <i class="one-letter">G</i> is cyclic.</p>
          </article>
          <article class="exercise exercise-like" id="OYY">
            <h6 class="heading">
              <span class="codenumber">35<span class="period">.</span></span>
            </h6>
            <p id="SSg">Prove that the subgroups of <nemeth class="inline">⠸⠠⠵</nemeth> are exactly <nemeth class="inline">⠝⠸⠠⠵</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="vgh">
            <h6 class="heading">
              <span class="codenumber">36<span class="period">.</span></span>
            </h6>
            <p id="yZp">Prove that the generators of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> are the integers <i class="one-letter">r</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠝</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠗⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="bnq">
            <h6 class="heading">
              <span class="codenumber">37<span class="period">.</span></span>
            </h6>
            <p id="fgy">Prove that if <i class="one-letter">G</i> has no proper nontrivial subgroups, then <i class="one-letter">G</i> is a cyclic group.</p>
            <div class="solutions">
              <div class="hint solution-like" id="glE"><span class="type">Hint</span>:<p id="KZm">If <i class="one-letter">g</i> is an element distinct from the identity in <i class="one-letter">G</i>, <i class="one-letter">g</i> must generate <i class="one-letter">G</i>; otherwise, <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth> is a nontrivial proper subgroup of <i class="one-letter">G</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Huz">
            <h6 class="heading">
              <span class="codenumber">38<span class="period">.</span></span>
            </h6>
            <p id="LnH">Prove that the order of an element in a cyclic group <i class="one-letter">G</i> must divide the order of the group.</p>
          </article>
          <article class="exercise exercise-like" id="nBI">
            <h6 class="heading">
              <span class="codenumber">39<span class="period">.</span></span>
            </h6>
            <p id="ruQ">Prove that if <i class="one-letter">G</i> is a cyclic group of order <i class="one-letter">m</i> and <nemeth class="inline">⠙⠳⠍</nemeth>, then <i class="one-letter">G</i> must have a subgroup of order <i class="one-letter">d</i>.</p>
          </article>
          <article class="exercise exercise-like" id="TIR">
            <h6 class="heading">
              <span class="codenumber">40<span class="period">.</span></span>
            </h6>
            <p id="XBZ">For what integers <i class="one-letter">n</i> is <nemeth class="inline">⠤⠼⠂</nemeth> an <i class="one-letter">n</i>th root of unity?</p>
          </article>
          <article class="exercise exercise-like" id="zQa">
            <h6 class="heading">
              <span class="codenumber">41<span class="period">.</span></span>
            </h6>
            <p id="DJi">If <nemeth class="inline">⠵⠀⠨⠅⠀⠗⠷⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹⠾</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠎⠷⠉⠕⠎⠀⠨⠋⠬⠊⠎⠊⠝⠀⠨⠋⠾</nemeth> are two nonzero complex numbers, show that</p>
            <div class="displaymath">
              <nemeth>⠵⠺⠀⠨⠅⠀⠗⠎⠈⠷⠉⠕⠎⠀⠷⠨⠹⠬⠨⠋⠾⠬⠊⠎⠊⠝⠀⠷⠨⠹⠬⠨⠋⠾⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="fXj">
            <h6 class="heading">
              <span class="codenumber">42<span class="period">.</span></span>
            </h6>
            <p id="jQr">Prove that the circle group is a subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Mes">
            <h6 class="heading">
              <span class="codenumber">43<span class="period">.</span></span>
            </h6>
            <p id="PXA">Prove that the <i class="one-letter">n</i>th roots of unity form a cyclic subgroup of <nemeth class="inline">⠸⠠⠞</nemeth> of order <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="slB">
            <h6 class="heading">
              <span class="codenumber">44<span class="period">.</span></span>
            </h6>
            <p id="weJ">Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠸⠠⠞</nemeth>. Prove that <nemeth class="inline">⠨⠁⠘⠍⠐⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠨⠁⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth> if and only if <nemeth class="inline">⠨⠁⠘⠙⠐⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="YsK">
            <h6 class="heading">
              <span class="codenumber">45<span class="period">.</span></span>
            </h6>
            <p id="clS">Let <nemeth class="inline">⠵⠀⠈⠑⠀⠸⠠⠉⠘⠈⠼</nemeth>. If <nemeth class="inline">⠳⠵⠳⠀⠌⠨⠅⠀⠼⠂</nemeth>, prove that the order of <i class="one-letter">z</i> is infinite.</p>
          </article>
          <article class="exercise exercise-like" id="EzT">
            <h6 class="heading">
              <span class="codenumber">46<span class="period">.</span></span>
            </h6>
            <p id="Itb">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹</nemeth> be in <nemeth class="inline">⠸⠠⠞</nemeth> where <nemeth class="inline">⠨⠹⠀⠈⠑⠀⠸⠠⠟</nemeth>. Prove that the order of <i class="one-letter">z</i> is infinite.</p>
          </article>
        </section>
        <section class="exercises" id="Ueq">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">4.6</span> <span class="title">Programming Exercises</span></div>
          <article class="exercise exercise-like" id="kHc">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="oAk">Write a computer program that will write any decimal number as the sum of distinct powers of <nemeth class="inline">⠼⠆</nemeth>. What is the largest integer that your program will handle?</p>
          </article>
          <article class="exercise exercise-like" id="QOl">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="UHt">Write a computer program to calculate <nemeth class="inline">⠁⠘⠭⠐⠷⠍⠕⠙⠀⠝⠾</nemeth> by the method of repeated squares. What are the largest values of <i class="one-letter">n</i> and <i class="one-letter">x</i> that your program will accept?</p>
          </article>
        </section>
        <section class="references" id="KnF">
          <div class="none"><span class="type">References</span> <span class="codenumber">4.7</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="quO"><div class="bibitem">[1]</div>  <div class="bibentry">Koblitz, N. <i>A Course in Number Theory and Cryptography</i>. 2nd ed. Springer, New York, 1994.</div></article>
          <article class="bib" id="WBX"><div class="bibitem">[2]</div>  <div class="bibentry">Pomerance, C. “Cryptology and Computational Number Theory—An Introduction,” in <i>Cryptology and Computational Number Theory</i>, Pomerance, C., ed. Proceedings of Symposia in Applied Mathematics, vol. 42, American Mathematical Society, Providence, RI, 1990. This book gives an excellent account of how the method of repeated squares is used in cryptography.</div></article>
        </section>
        <section class="section" id="EVs">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">4.8</span> <span class="title">Sage</span></div>
          <section class="introduction" id="olC">
            <p id="ZML">Cyclic groups are very important, so it is no surprise that they appear in many different forms in Sage. Each is slightly different, and no one implementation is ideal for an introduction, but together they can illustrate most of the important ideas. Here is a guide to the various ways to construct, and study, a cyclic group in Sage.</p>
          </section>
          <section class="subsection" id="Dgf">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.1</span> <span class="title">Infinite Cyclic Groups</span></div>
            <p id="Kio">In Sage, the integers <nemeth class="inline">⠸⠠⠵</nemeth> are constructed with <code class="code-inline tex2jax_ignore">ZZ</code>. To build the infinite cyclic group such as <nemeth class="inline">⠼⠒⠸⠠⠵</nemeth> from Example 4.1.1, simply use <code class="code-inline tex2jax_ignore">3*ZZ</code>. As an infinite set, there is not a whole lot you can do with this. You can test if integers are in this set, or not. You can also recall the generator with the <code class="code-inline tex2jax_ignore">.gen()</code> command.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = 3*ZZ
-12 in G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">37 in G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.gen()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
          </section>
          <section class="subsection" id="jno">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.2</span> <span class="title">Additive Cyclic Groups</span></div>
            <p id="qpx">The additive cyclic group <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> can be built as a special case of a more general Sage construction. First we build <nemeth class="inline">⠸⠠⠵⠂⠲</nemeth> and capture its generator. Throughout, pay close attention to the use of parentheses and square brackets for when you experiment on your own.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = AdditiveAbelianGroup([14])
G.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(0), (1), (2), (3), (4), (5), (6), (7),
 (8), (9), (10), (11), (12), (13)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = G.gen(0)
a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1)
</div>
            </article>
            <p id="WwG">You can compute in this group, by using the generator, or by using new elements formed by coercing integers into the group, or by taking the result of operations on other elements. And we can compute the order of elements in this group. Notice that we can perform repeated additions with the shortcut of taking integer multiples of an element.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a + a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a + a + a + a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">4*a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">37*a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(9)
</div>
            </article>
            <p id="CDP">We can create, and then compute with, new elements of the group by coercing an integer (in a list of length <nemeth class="inline">⠼⠂</nemeth>) into the group. You may get a <code class="code-inline tex2jax_ignore">DeprecationWarning</code> the first time you use this syntax if you are using an old version of Sage. The mysterious warning can be safely ignored.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G([2])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = G([2]); b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b + b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">2*b == 4*a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">7*b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(0)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = a - 6*b; c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(3)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c + c + c + c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(12)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <p id="iKY">It is possible to create cyclic subgroups, from an element designated to be the new generator. Unfortunately, to do this requires the <code class="code-inline tex2jax_ignore">.submodule()</code> method (which should be renamed in Sage).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = G.submodule([b]); H
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Additive abelian group isomorphic to Z/7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(0), (2), (4), (6), (8), (10), (12)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">e = H.gen(0); e
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">3*e
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(6)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">e.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <p id="OSh">The cyclic subgroup <code class="code-inline tex2jax_ignore">H</code> just created has more than one generator. We can test this by building a new subgroup and comparing the two subgroups.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">f = 12*a; f
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(12)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">f.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K = G.submodule([f]); K
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Additive abelian group isomorphic to Z/7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(0), (2), (4), (6), (8), (10), (12)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.gen(0)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H == K
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="uZq">Certainly the list of elements, and the common generator of <code class="code-inline tex2jax_ignore">(2)</code> lead us to belive that <code class="code-inline tex2jax_ignore">H</code> and <code class="code-inline tex2jax_ignore">K</code> are the same, but the comparison in the last line leaves no doubt.</p>
            <p id="bgz">Results in this section, especially Theorem 4.1.13 and Corollary 4.1.14, can be investigated by creating generators of subgroups from a generator of one additive cyclic group, creating the subgroups, and computing the orders of both elements and orders of groups.</p>
          </section>
          <section class="subsection" id="Pux">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.3</span> <span class="title">Abstract Multiplicative Cyclic Groups</span></div>
            <p id="HnI">We can create an abstract cyclic group in the style of Theorem 4.1.3, Theorem 4.1.9, and Theorem 4.1.10. In the syntax below <code class="code-inline tex2jax_ignore">a</code> is a name for the generator, and <code class="code-inline tex2jax_ignore">14</code> is the order of the element. Notice that the notation is now multiplicative, so we multiply elements, and repeated products can be written as powers.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.&lt;a&gt; = AbelianGroup([14])
G.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, a, a^2, a^3, a^4, a^5, a^6, a^7, a^8, a^9, a^10, a^11, a^12, a^13)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <p id="nuR">Computations in the group are similar to before, only with different notation. Now products, with repeated products written as exponentiation.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = a^2
b.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b*b*b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a^6
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = a^7
c.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c^2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b*c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a^9
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b^37*c^42
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a^4
</div>
            </article>
            <p id="TCa">Subgroups can be formed with a <code class="code-inline tex2jax_ignore">.subgroup()</code> command. But do not try to list the contents of a subgroup, it'll look strangely unfamiliar. Also, comparison of subgroups is not implemented.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = G.subgroup([a^2])
H.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K = G.subgroup([a^12])
K.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">L = G.subgroup([a^4])
H == L
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="zJj">One advantage of this implementation is the possibility to create all possible subgroups. Here we create the list of subgroups, extract one in particular (the third), and check its order.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">allsg = G.subgroups(); allsg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[Multiplicative Abelian subgroup isomorphic to C2 x C7 generated by {a},
 Multiplicative Abelian subgroup isomorphic to C7 generated by {a^2},
 Multiplicative Abelian subgroup isomorphic to C2 generated by {a^7},
 Trivial Abelian subgroup]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sub = allsg[2]
sub.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
          </section>
          <section class="subsection" id="vBG">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.4</span> <span class="title">Cyclic Permutation Groups</span></div>
            <p id="fQs">We will learn more about permutation groups in the next chapter. But we will mention here that it is easy to create cyclic groups as permutation groups, and a variety of methods are available for working with them, even if the actual elements get a bit cumbersome to work with. As before, notice that the notation and syntax is multiplicative.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G=CyclicPermutationGroup(14)
a = G.gen(0); a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,2,3,4,5,6,7,8,9,10,11,12,13,14)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = a^2
b = a^2; b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3,5,7,9,11,13)(2,4,6,8,10,12,14)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a*a*b*b*b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,9,3,11,5,13,7)(2,10,4,12,6,14,8)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = a^37*b^26; c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,6,11,2,7,12,3,8,13,4,9,14,5,10)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <p id="LXB">We can create subgroups, check their orders, and list their elements.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = G.subgroup([a^2])
H.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.gen(0)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3,5,7,9,11,13)(2,4,6,8,10,12,14)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(),
 (1,3,5,7,9,11,13)(2,4,6,8,10,12,14),
 (1,5,9,13,3,7,11)(2,6,10,14,4,8,12),
 (1,7,13,5,11,3,9)(2,8,14,6,12,4,10),
 (1,9,3,11,5,13,7)(2,10,4,12,6,14,8),
 (1,11,7,3,13,9,5)(2,12,8,4,14,10,6),
 (1,13,11,9,7,5,3)(2,14,12,10,8,6,4)]
</div>
            </article>
            <p id="seK">It could help to visualize this group, and the subgroup, as rotations of a regular <nemeth class="inline">⠼⠂⠆</nemeth>-gon with the vertices labeled with the integers <nemeth class="inline">⠼⠂</nemeth> through <nemeth class="inline">⠼⠂⠆</nemeth>. This is not the full group of symmetries, since it does not include reflections, just the <nemeth class="inline">⠼⠂⠆</nemeth> rotations.</p>
          </section>
          <section class="subsection" id="bIP">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.5</span> <span class="title">Cayley Tables</span></div>
            <p id="YlT">As groups, each of the examples above (groups and subgroups) have Cayley tables implemented. Since the groups are cyclic, and their subgroups are therefore cyclic, the Cayley tables should have a similar “cyclic” pattern. Note that the letters used in the default table are generic, and are not related to the letters used above for specific elements — they just match up with the group elements in the order given by <code class="code-inline tex2jax_ignore">.list()</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.&lt;a&gt; = AbelianGroup([14])
G.cayley_table()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*  a b c d e f g h i j k l m n
 +----------------------------
a| a b c d e f g h i j k l m n
b| b c d e f g h i j k l m n a
c| c d e f g h i j k l m n a b
d| d e f g h i j k l m n a b c
e| e f g h i j k l m n a b c d
f| f g h i j k l m n a b c d e
g| g h i j k l m n a b c d e f
h| h i j k l m n a b c d e f g
i| i j k l m n a b c d e f g h
j| j k l m n a b c d e f g h i
k| k l m n a b c d e f g h i j
l| l m n a b c d e f g h i j k
m| m n a b c d e f g h i j k l
n| n a b c d e f g h i j k l m
</div>
            </article>
            <p id="Etc">If the real names of the elements are not too complicated, the table could be more informative using these names.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.&lt;b&gt; = AbelianGroup([10])
K.cayley_table(names='elements')
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">  *    1   b b^2 b^3 b^4 b^5 b^6 b^7 b^8 b^9
   +----------------------------------------
  1|   1   b b^2 b^3 b^4 b^5 b^6 b^7 b^8 b^9
  b|   b b^2 b^3 b^4 b^5 b^6 b^7 b^8 b^9   1
b^2| b^2 b^3 b^4 b^5 b^6 b^7 b^8 b^9   1   b
b^3| b^3 b^4 b^5 b^6 b^7 b^8 b^9   1   b b^2
b^4| b^4 b^5 b^6 b^7 b^8 b^9   1   b b^2 b^3
b^5| b^5 b^6 b^7 b^8 b^9   1   b b^2 b^3 b^4
b^6| b^6 b^7 b^8 b^9   1   b b^2 b^3 b^4 b^5
b^7| b^7 b^8 b^9   1   b b^2 b^3 b^4 b^5 b^6
b^8| b^8 b^9   1   b b^2 b^3 b^4 b^5 b^6 b^7
b^9| b^9   1   b b^2 b^3 b^4 b^5 b^6 b^7 b^8
</div>
            </article>
          </section>
          <section class="subsection" id="HPY">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.6</span> <span class="title">Complex Roots of Unity</span></div>
            <p id="kAl">The finite cyclic subgroups of <nemeth class="inline">⠸⠠⠞</nemeth>, generated by a primitive <i class="one-letter">n</i>th root of unity are implemented as a more general construction in Sage, known as a cyclotomic field. If you concentrate on just the multiplication of powers of a generator (and ignore the infinitely many other elements) then this is a finite cyclic group. Since this is not implemented directly in Sage as a group, <i class="foreign">per se</i>, it is a bit harder to construct things like subgroups, but it is an excellent exercise to try. It is a nice example since the complex numbers are a concrete and familiar construction. Here are a few sample calculations to provide you with some exploratory tools. See the notes following the computations.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclotomicField(14)
w = G.gen(0); w
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">zeta14
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">wc = CDF(w)
wc.abs()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1.0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">wc.arg()/N(2*pi/14)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1.0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = w^2
b.multiplicative_order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">bc = CDF(b); bc
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0.62348980185... + 0.781831482468...*I
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">bc.abs()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1.0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">bc.arg()/N(2*pi/14)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2.0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg = [b^i for i in range(7)]; sg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, zeta14^2, zeta14^4,
zeta14^5 - zeta14^4 + zeta14^3 - zeta14^2 + zeta14 - 1,
-zeta14, -zeta14^3, -zeta14^5]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = sg[3]; d = sg[5]
c*d
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">zeta14^2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = sg[3]; d = sg[6]
c*d in sg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c*d == sg[2]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg[5]*sg[6] == sg[4]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.multiplication_table(elements=sg)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*  a b c d e f g
 +--------------
a| a b c d e f g
b| b c d e f g a
c| c d e f g a b
d| d e f g a b c
e| e f g a b c d
f| f g a b c d e
g| g a b c d e f
</div>
            </article>
            <p id="QHu">Notes:</p>
            <ol class="outerlist">
              <li>1. <p id="MAe"><code class="code-inline tex2jax_ignore">zeta14</code> is the name of the generator used for the cyclotomic field, it is a primitive root of unity (a <nemeth class="inline">⠼⠂⠲</nemeth>th root of unity in this case). We have captured it as <code class="code-inline tex2jax_ignore">w</code>.</p></li>
              <li>2. <p id="sHn">The syntax <code class="code-inline tex2jax_ignore">CDF(w)</code> will convert the complex number <code class="code-inline tex2jax_ignore">w</code> into the more familiar form with real and imaginary parts.</p></li>
              <li>3. <p id="YOw">The method <code class="code-inline tex2jax_ignore">.abs()</code> will return the modulus of a complex number, <i class="one-letter">r</i> as described in the text. For elements of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> this should always equal <nemeth class="inline">⠼⠂</nemeth>.</p></li>
              <li>4. <p id="EVF">The method <code class="code-inline tex2jax_ignore">.arg()</code> will return the argument of a complex number, <nemeth class="inline">⠨⠹</nemeth> as described in the text. Every element of the cyclic group in this example should have an argument that is an integer multiple of <nemeth class="inline">⠹⠆⠨⠏⠌⠂⠲⠼</nemeth>. The <code class="code-inline tex2jax_ignore">N()</code> syntax converts the symbolic value of <code class="code-inline tex2jax_ignore">pi</code> to a numerical approximation.</p></li>
              <li>5. <p id="lcO"><code class="code-inline tex2jax_ignore">sg</code> is a list of elements that form a cyclic subgroup of order 7, composed of the first 7 powers of <code class="code-inline tex2jax_ignore">b = w^2</code>. So, for example, the last comparison multiplies the fifth power of <code class="code-inline tex2jax_ignore">b</code> with the sixth power of <code class="code-inline tex2jax_ignore">b</code>, which would be the eleventh power of <code class="code-inline tex2jax_ignore">b</code>. But since <code class="code-inline tex2jax_ignore">b</code> has order 7, this reduces to the fourth power.</p></li>
              <li>6. <p id="RjX">If you know a subset of an infinite group forms a subgroup, then you can produce its Cayley table by specifying the list of elements you want to use. Here we ask for a multiplication table, since that is the relevant operation.</p></li>
            </ol>
          </section>
        </section>
        <section class="exercises" id="Alz">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">4.9</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="wVu">
            <p id="FTU">This group of exercises is about the group of units mod <i class="one-letter">n</i>, <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth>, which is sometimes cyclic, sometimes not. There are some commands in Sage that will answer some of these questions very quickly, but instead of using those now, just use the basic techniques described. The idea here is to just work with elements, and lists of elements, to discern the subgroup structure of these groups.</p>
            <p id="mbd">Sage worksheets have extensive capabilities for making new cells with carefully formatted text, include support for <span class="latex-logo">L<span class="A">a</span>T<span class="E">e</span>X</span> syntax to express mathematics. So when a question asks for explanation or commentary, make a new cell and communicate clearly with your audience. Continue this practice in subsequent exercise sets.</p>
          </section>
          <article class="exercise exercise-like" id="dcD">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="AOC">Execute the statement <code class="code-inline tex2jax_ignore">R = Integers(40)</code> to create the set <code class="code-inline tex2jax_ignore">[0,1,2,...,39]</code>This is a group under addition mod <nemeth class="inline">⠼⠲⠴</nemeth>, which we will ignore. Instead we are interested in the subset of elements which have an inverse under <em class="emphasis">multiplication</em> mod <nemeth class="inline">⠼⠲⠴</nemeth>. Determine how big this subgroup is by executing the command <code class="code-inline tex2jax_ignore">R.unit_group_order()</code>, and then obtain a list of these elements with <code class="code-inline tex2jax_ignore">R.list_of_elements_of_multiplicative_group()</code>.</p>
          </article>
          <article class="exercise exercise-like" id="JjM">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="gVL">You can create elements of this group by coercing regular integers into <code class="code-inline tex2jax_ignore">U</code>, such as with the statement <code class="code-inline tex2jax_ignore">a = U(7)</code>. (Don't confuse this with our mathematical notation <nemeth class="inline">⠠⠥⠷⠼⠲⠴⠾</nemeth>.) This will tell Sage that you want to view <nemeth class="inline">⠼⠶</nemeth> as an element of <i class="one-letter">U</i>, subject to the corresponding operations. Determine the elements of the cyclic subgroup of <i class="one-letter">U</i> generated by <nemeth class="inline">⠼⠶</nemeth> with a list comprehension as follows:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R = Integers(40)
a = R(7)
[a^i for i in srange(16)]
</div>
            </article>
            <p id="NcU">What is the order of <nemeth class="inline">⠼⠶</nemeth> in <nemeth class="inline">⠠⠥⠷⠼⠲⠴⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="pqV">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="tkd">The group <nemeth class="inline">⠠⠥⠷⠼⠲⠔⠾</nemeth> is cyclic. Using only the Sage commands described previously, use Sage to find a generator for this group. Now using <em class="emphasis">only</em> theorems about the structure of cyclic groups, describe each of the subgroups of <nemeth class="inline">⠠⠥⠷⠼⠲⠔⠾</nemeth> by specifying its order and by giving an explicit generator. Do not repeat any of the subgroups — in other words, present each subgroup <em class="emphasis">exactly</em> once. You can use Sage to check your work on the subgroups, but your answer about the subgroups should rely only on theorems and be a nicely written paragraph with a table, etc.</p>
          </article>
          <article class="exercise exercise-like" id="Vye">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="Zrm">The group <nemeth class="inline">⠠⠥⠷⠼⠒⠢⠾</nemeth> is not cyclic. Again, using only the Sage commands described previously, use computations to provide irrefutable evidence of this. How many of the <nemeth class="inline">⠼⠂⠖</nemeth> different subgroups of <nemeth class="inline">⠠⠥⠷⠼⠒⠢⠾</nemeth> can you list?</p>
          </article>
          <article class="exercise exercise-like" id="BFn">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Fyv">Again, using only the Sage commands described previously, explore the structure of <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> for various values of <i class="one-letter">n</i> and see if you can formulate an interesting conjecture about some basic property of this group. (Yes, this is a <em class="emphasis">very</em> open-ended question, but this is ultimately the real power of exploring mathematics with Sage.)</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="AQc">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">5</span> <span class="title">Permutation Groups</span></div>
        <section class="introduction" id="DZd">
          <p id="ogy">Permutation groups are central to the study of geometric symmetries and to Galois theory, the study of finding solutions of polynomial equations. They also provide abundant examples of nonabelian groups.</p>
          <p id="UnH">Let us recall for a moment the symmetries of the equilateral triangle <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth> from Chapter 3. The symmetries actually consist of permutations of the three vertices, where a <dfn class="terminology">permutation</dfn> of the set <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠠⠁⠠⠀⠠⠃⠠⠀⠠⠉⠨⠾</nemeth> is a one-to-one and onto map <nemeth class="inline">⠨⠏⠒⠀⠠⠎⠀⠫⠕⠀⠠⠎</nemeth>. The three vertices have the following six permutations.</p>
          <div class="displaymath">
            <nemeth>⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠉⠀⠠⠁⠀⠠⠃⠠⠾⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠃⠀⠠⠉⠀⠠⠁⠠⠾⠀⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠁⠀⠠⠉⠀⠠⠃⠠⠾⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠉⠀⠠⠃⠀⠠⠁⠠⠾⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠃⠀⠠⠁⠀⠠⠉⠠⠾</nemeth>
          </div>
          <p id="AuQ">We have used the array</p>
          <div class="displaymath">
            <nemeth>⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠃⠀⠠⠉⠀⠠⠁⠠⠾</nemeth>
          </div>
          <p data-braille="continuation">to denote the permutation that sends <i class="one-letter">A</i> to <i class="one-letter">B</i>, <i class="one-letter">B</i> to <i class="one-letter">C</i>, and <i class="one-letter">C</i> to <i class="one-letter">A</i>. That is,</p>
          <div class="displaymath">
            <nemeth>⠠⠁⠀⠀⠫⠳⠒⠒⠕⠀⠠⠃⠀⠠⠃⠀⠀⠫⠳⠒⠒⠕⠀⠠⠉⠀⠠⠉⠀⠀⠫⠳⠒⠒⠕⠀⠠⠁</nemeth>
          </div>
          <p data-braille="continuation">. The symmetries of a triangle form a group. In this chapter we will study groups of this type.</p>
        </section>
        <section class="section" id="Wyg">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">5.1</span> <span class="title">Definitions and Notation</span></div>
          <section class="introduction" id="kgm">
            <p id="gBZ">In general, the permutations of a set <i class="one-letter">X</i> form a group <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>. If <i class="one-letter">X</i> is a finite set, we can assume <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝⠨⠾</nemeth>. In this case we write <nemeth class="inline">⠠⠎⠰⠝</nemeth> instead of <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>.  The following theorem says that <nemeth class="inline">⠠⠎⠰⠝</nemeth> is a group. We call this group the <dfn class="terminology">symmetric group</dfn>  on <i class="one-letter">n</i> letters.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="GTJ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="kBY">The symmetric group on <i class="one-letter">n</i> letters, <nemeth class="inline">⠠⠎⠰⠝</nemeth>, is a group with <nemeth class="inline">⠝⠯</nemeth> elements, where the binary operation is the composition of maps.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="cBN">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Kkb">The identity of <nemeth class="inline">⠠⠎⠰⠝</nemeth> is just the identity map that sends <nemeth class="inline">⠼⠂</nemeth> to <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth> to <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠄⠄⠄</nemeth>, <i class="one-letter">n</i> to <i class="one-letter">n</i>. If <nemeth class="inline">⠋⠒⠀⠠⠎⠰⠝⠐⠀⠫⠕⠀⠠⠎⠰⠝⠐</nemeth> is a permutation, then <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth> exists, since <i class="one-letter">f</i> is one-to-one and onto; hence, every permutation has an inverse. Composition of maps is associative, which makes the group operation associative. We leave the proof that <nemeth class="inline">⠳⠠⠎⠰⠝⠐⠳⠀⠨⠅⠀⠝⠯</nemeth> as an exercise.</p>
            </article>
            <p id="MJi">A subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth> is called a <dfn class="terminology">permutation group</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="zpk">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="Gkc">Consider the subgroup <i class="one-letter">G</i> of <nemeth class="inline">⠠⠎⠢</nemeth> consisting of the identity permutation <nemeth class="inline">⠊⠙</nemeth> and the permutations</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠂⠀⠆⠀⠒⠀⠢⠀⠲⠠⠾⠀⠨⠞⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠒⠀⠆⠀⠂⠀⠲⠀⠢⠠⠾⠀⠨⠍⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠒⠀⠆⠀⠂⠀⠢⠀⠲⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. The following table tells us how to multiply elements in the permutation group <i class="one-letter">G</i>.</p>
              <div class="sidebyside">
                <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
                  <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                    <div class="displaymath">
                      <nemeth>⠘⠨⠡⠀⠊⠙⠀⠨⠎⠀⠨⠞⠀⠨⠍⠀⠊⠙⠀⠊⠙⠀⠨⠎⠀⠨⠞⠀⠨⠍⠀⠨⠎⠀⠨⠎⠀⠊⠙⠀⠨⠍⠀⠨⠞⠀⠨⠞⠀⠨⠞⠀⠨⠍⠀⠊⠙⠀⠨⠎⠀⠨⠍⠀⠨⠍⠀⠨⠞⠀⠨⠎⠀⠊⠙</nemeth>
                    </div>
                  </div>
                </div>
              </div>
            </article>
            <article class="remark remark-like" data-braille="remark-like" id="rKL">
              <h6 class="heading">
                <span class="type">Remark</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="bSg">Though it is natural to multiply elements in a group from left to right, functions are composed from right to left. Let <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> be permutations on a set <i class="one-letter">X</i>. To compose <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> as functions, we calculate <nemeth class="inline">⠷⠎⠘⠨⠡⠞⠾⠷⠭⠾⠀⠨⠅⠀⠎⠷⠞⠷⠭⠾⠾</nemeth>. That is, we do <nemeth class="inline">⠨⠞</nemeth> first, then <nemeth class="inline">⠨⠎</nemeth>. There are several ways to approach this inconsistency. <em class="emphasis">We will adopt the convention of multiplying permutations right to left. To compute <nemeth class="inline">⠨⠎⠨⠞</nemeth>, do <nemeth class="inline">⠨⠞</nemeth> first and then <nemeth class="inline">⠨⠎</nemeth>.</em> That is, by <nemeth class="inline">⠨⠎⠞⠷⠭⠾</nemeth> we mean <nemeth class="inline">⠎⠷⠞⠷⠭⠾⠾</nemeth>. (Another way of solving this problem would be to write functions on the right; that is, instead of writing <nemeth class="inline">⠎⠷⠭⠾</nemeth>, we could write <nemeth class="inline">⠷⠭⠾⠨⠎</nemeth>. We could also multiply permutations left to right to agree with the usual way of multiplying elements in a group. Certainly all of these methods have been used.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="fwt">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="Syu">Permutation multiplication is not usually commutative. Let</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠠⠾⠀⠠⠷⠲⠀⠂⠀⠆⠀⠒⠠⠾⠀⠨⠞⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠠⠾⠀⠠⠷⠆⠀⠂⠀⠲⠀⠒⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠨⠞⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠠⠾⠀⠠⠷⠂⠀⠲⠀⠒⠀⠆⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, but</p>
              <div class="displaymath">
                <nemeth>⠨⠞⠨⠎⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠠⠾⠀⠠⠷⠒⠀⠆⠀⠂⠀⠲⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="gXl">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.1.1</span> <span class="title">Cycle Notation</span></div>
            <p id="bwH">The notation that we have used to represent permutations up to this point is cumbersome, to say the least. To work effectively with permutation groups, we need a more streamlined method of writing down and manipulating permutations.</p>
            <p id="HDQ">A permutation <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠠⠭</nemeth> is a <dfn class="terminology">cycle of length</dfn> <i class="one-letter">k</i> if there exist elements <nemeth class="inline">⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠀⠈⠑⠀⠠⠭</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠎⠷⠁⠂⠾⠀⠀⠨⠅⠀⠁⠆⠀⠎⠷⠁⠆⠾⠀⠀⠨⠅⠀⠁⠒⠀⠀⠀⠣⠄⠄⠄⠀⠎⠷⠁⠰⠅⠐⠾⠀⠀⠨⠅⠀⠁⠂</nemeth>
            </div>
            <p data-braille="continuation">and <nemeth class="inline">⠎⠷⠭⠾⠀⠨⠅⠀⠭</nemeth> for all other elements <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>. We will write <nemeth class="inline">⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> to denote the cycle <nemeth class="inline">⠨⠎</nemeth>.  Cycles are the building blocks of all permutations.</p>
            <article class="example example-like" data-braille="example-like" id="bhZ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="yFD">The permutation</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠀⠶⠠⠾⠀⠠⠷⠖⠀⠒⠀⠢⠀⠂⠀⠲⠀⠆⠀⠶⠠⠾⠀⠨⠅⠀⠷⠼⠂⠖⠆⠒⠢⠲⠾</nemeth>
              </div>
              <p data-braille="continuation">is a cycle of length <nemeth class="inline">⠼⠖</nemeth>, whereas</p>
              <div class="displaymath">
                <nemeth>⠨⠞⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠠⠾⠀⠠⠷⠂⠀⠲⠀⠆⠀⠒⠀⠢⠀⠖⠠⠾⠀⠨⠅⠀⠷⠼⠆⠲⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">is a cycle of length <nemeth class="inline">⠼⠒</nemeth>.</p>
              <p id="eMM">Not every permutation is a cycle. Consider the permutation</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠠⠾⠀⠠⠷⠆⠀⠲⠀⠂⠀⠒⠀⠖⠀⠢⠠⠾⠀⠨⠅⠀⠷⠼⠂⠆⠲⠒⠾⠷⠢⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">. This permutation actually contains a cycle of length 2 and a cycle of length <nemeth class="inline">⠼⠲</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Hpi">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="KTV">It is very easy to compute products of cycles. Suppose that</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠷⠼⠂⠒⠢⠆⠾⠁⠝⠙⠨⠞⠀⠨⠅⠀⠷⠼⠆⠢⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">. If we think of <nemeth class="inline">⠨⠎</nemeth> as</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠀⠫⠳⠒⠒⠕⠀⠼⠒⠠⠀⠼⠒⠀⠫⠳⠒⠒⠕⠀⠼⠢⠠⠀⠼⠢⠀⠫⠳⠒⠒⠕⠀⠼⠆⠠⠀⠼⠆⠀⠫⠳⠒⠒⠕⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">, and <nemeth class="inline">⠨⠞</nemeth> as</p>
              <div class="displaymath">
                <nemeth>⠼⠆⠀⠫⠳⠒⠒⠕⠀⠼⠢⠠⠀⠼⠢⠀⠫⠳⠒⠒⠕⠀⠼⠖⠠⠀⠼⠖⠀⠫⠳⠒⠒⠕⠀⠼⠆</nemeth>
              </div>
              <p data-braille="continuation">, then for <nemeth class="inline">⠨⠎⠨⠞</nemeth> remembering that we apply <nemeth class="inline">⠨⠞</nemeth> first and then <nemeth class="inline">⠨⠎</nemeth>, it must be the case that</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠀⠫⠳⠒⠒⠕⠀⠼⠒⠠⠀⠼⠒⠀⠫⠳⠒⠒⠕⠀⠼⠢⠠⠀⠼⠢⠀⠫⠳⠒⠒⠕⠀⠼⠖⠠⠀⠼⠖⠀⠫⠳⠒⠒⠕⠀⠼⠆⠀⠫⠳⠒⠒⠕⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">, or <nemeth class="inline">⠨⠎⠨⠞⠀⠨⠅⠀⠷⠼⠂⠒⠢⠖⠾</nemeth>. If <nemeth class="inline">⠨⠍⠀⠨⠅⠀⠷⠼⠂⠖⠒⠲⠾</nemeth>, then <nemeth class="inline">⠨⠎⠨⠍⠀⠨⠅⠀⠷⠼⠂⠖⠢⠆⠾⠷⠒⠲⠾</nemeth>.</p>
            </article>
            <p id="nKZ">Two cycles in <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>, <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> and <nemeth class="inline">⠨⠞⠀⠨⠅⠀⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠇⠐⠾</nemeth>, are <dfn class="terminology">disjoint</dfn>  if <nemeth class="inline">⠁⠰⠊⠐⠀⠌⠨⠅⠀⠃⠰⠚</nemeth> for all <i class="one-letter">i</i> and <i class="one-letter">j</i>.</p>
            <article class="example example-like" data-braille="example-like" id="nwr">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="rbe">The cycles <nemeth class="inline">⠷⠼⠂⠒⠢⠾</nemeth> and <nemeth class="inline">⠷⠼⠆⠶⠾</nemeth> are disjoint; however, the cycles <nemeth class="inline">⠷⠼⠂⠒⠢⠾</nemeth> and <nemeth class="inline">⠷⠼⠒⠲⠶⠾</nemeth> are not. Calculating their products, we find that</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠂⠒⠢⠾⠷⠆⠶⠾⠀⠀⠨⠅⠀⠷⠼⠂⠒⠢⠾⠷⠆⠶⠾⠀⠷⠂⠒⠢⠾⠷⠒⠲⠶⠾⠀⠀⠨⠅⠀⠷⠼⠂⠒⠲⠶⠢⠾</nemeth>
              </div>
              <p data-braille="continuation">. The product of two cycles that are not disjoint may reduce to something less complicated; the product of disjoint cycles cannot be simplified.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="vaQ">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.8</span>
                <span class="period">.</span>
              </h6>
              <p id="BAj">Let <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> be two disjoint cycles in <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>. Then <nemeth class="inline">⠨⠎⠨⠞⠀⠨⠅⠀⠨⠞⠨⠎</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="NsP">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="qrk">Let <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> and <nemeth class="inline">⠨⠞⠀⠨⠅⠀⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠇⠐⠾</nemeth>. We must show that <nemeth class="inline">⠎⠞⠷⠭⠾⠀⠨⠅⠀⠞⠎⠷⠭⠾</nemeth> for all <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>. If <i class="one-letter">x</i> is neither in <nemeth class="inline">⠨⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠨⠾</nemeth> nor <nemeth class="inline">⠨⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠇⠐⠨⠾</nemeth>, then both <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> fix <i class="one-letter">x</i>. That is, <nemeth class="inline">⠎⠷⠭⠾⠀⠨⠅⠀⠭</nemeth> and <nemeth class="inline">⠞⠷⠭⠾⠀⠨⠅⠀⠭</nemeth>. Hence,</p>
              <div class="displaymath">
                <nemeth>⠎⠞⠷⠭⠾⠀⠨⠅⠀⠎⠷⠞⠷⠭⠾⠾⠀⠨⠅⠀⠎⠷⠭⠾⠀⠨⠅⠀⠭⠀⠨⠅⠀⠞⠷⠭⠾⠀⠨⠅⠀⠞⠷⠎⠷⠭⠾⠾⠀⠨⠅⠀⠞⠎⠷⠭⠾</nemeth>
              </div>
              <p data-braille="continuation">. <em class="emphasis">Do not forget that we are multiplying permutations right to left, which is the opposite of the order in which we usually multiply group elements.</em> Now suppose that <nemeth class="inline">⠭⠀⠈⠑⠀⠨⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠨⠾</nemeth>. Then <nemeth class="inline">⠎⠷⠁⠰⠊⠐⠾⠀⠨⠅⠀⠁⠰⠷⠊⠍⠕⠙⠀⠅⠾⠬⠂</nemeth>; that is,</p>
              <div class="displaymath">
                <nemeth>⠁⠂⠀⠀⠫⠳⠒⠒⠕⠀⠁⠆⠀⠁⠆⠀⠀⠫⠳⠒⠒⠕⠀⠁⠒⠀⠀⠀⠣⠄⠄⠄⠀⠁⠰⠅⠤⠂⠀⠀⠫⠳⠒⠒⠕⠀⠁⠰⠅⠐⠀⠁⠰⠅⠀⠀⠫⠳⠒⠒⠕⠀⠁⠂</nemeth>
              </div>
              <p data-braille="continuation">. However, <nemeth class="inline">⠞⠷⠁⠰⠊⠐⠾⠀⠨⠅⠀⠁⠰⠊</nemeth> since <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> are disjoint. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠎⠞⠷⠁⠰⠊⠐⠾⠀⠀⠨⠅⠀⠎⠷⠞⠷⠁⠰⠊⠐⠾⠾⠀⠀⠀⠀⠨⠅⠀⠎⠷⠁⠰⠊⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠰⠷⠊⠍⠕⠙⠀⠅⠾⠬⠂⠐⠀⠀⠀⠀⠨⠅⠀⠞⠷⠁⠰⠷⠊⠍⠕⠙⠀⠅⠾⠬⠂⠐⠾⠀⠀⠀⠀⠨⠅⠀⠞⠷⠎⠷⠁⠰⠊⠐⠾⠾⠀⠀⠀⠀⠨⠅⠀⠞⠎⠷⠁⠰⠊⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. Similarly, if <nemeth class="inline">⠭⠀⠈⠑⠀⠨⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠇⠐⠨⠾</nemeth>, then <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> also commute.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="OTH">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="QJh">Every permutation in <nemeth class="inline">⠠⠎⠰⠝</nemeth> can be written as the product of disjoint cycles.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="IIW">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Wyt">We can assume that <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝⠨⠾</nemeth>. If <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> and we define <nemeth class="inline">⠠⠭⠂</nemeth> to be <nemeth class="inline">⠨⠷⠎⠷⠼⠂⠾⠠⠀⠎⠘⠆⠐⠷⠼⠂⠾⠠⠀⠄⠄⠄⠨⠾</nemeth>, then the set <nemeth class="inline">⠠⠭⠂</nemeth> is finite since <i class="one-letter">X</i> is finite. Now let <i class="one-letter">i</i> be the first integer in <i class="one-letter">X</i> that is not in <nemeth class="inline">⠠⠭⠂</nemeth> and define <nemeth class="inline">⠠⠭⠆</nemeth> by <nemeth class="inline">⠨⠷⠎⠷⠊⠾⠠⠀⠎⠘⠆⠐⠷⠊⠾⠠⠀⠄⠄⠄⠨⠾</nemeth>. Again, <nemeth class="inline">⠠⠭⠆</nemeth> is a finite set. Continuing in this manner, we can define finite disjoint sets <nemeth class="inline">⠠⠭⠒⠠⠀⠠⠭⠲⠠⠀⠄⠄⠄</nemeth>. Since <i class="one-letter">X</i> is a finite set, we are guaranteed that this process will end and there will be only a finite number of these sets, say <i class="one-letter">r</i>. If <nemeth class="inline">⠨⠎⠰⠊</nemeth> is the cycle defined by</p>
              <div class="displaymath">
                <nemeth>⠎⠰⠊⠐⠷⠭⠾⠀⠨⠅⠀⠀⠨⠅⠀⠨⠠⠷⠎⠷⠭⠾⠀⠭⠀⠈⠑⠀⠠⠭⠰⠊⠐⠀⠨⠠⠷⠭⠀⠭⠀⠌⠈⠑⠀⠠⠭⠰⠊⠐</nemeth>
              </div>
              <p data-braille="continuation">, then <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠨⠎⠂⠨⠎⠆⠀⠄⠄⠄⠀⠨⠎⠰⠗⠐</nemeth>. Since the sets <nemeth class="inline">⠠⠭⠂⠠⠀⠠⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠭⠰⠗⠐</nemeth> are disjoint, the cycles <nemeth class="inline">⠨⠎⠂⠠⠀⠨⠎⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠎⠰⠗⠐</nemeth> must also be disjoint.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="TDA">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="Xin">Let</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠠⠾⠀⠠⠷⠖⠀⠲⠀⠒⠀⠂⠀⠢⠀⠆⠠⠾⠀⠨⠞⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠠⠾⠀⠠⠷⠒⠀⠆⠀⠂⠀⠢⠀⠖⠀⠲⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Using cycle notation, we can write</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠀⠨⠅⠀⠷⠼⠂⠖⠆⠲⠾⠀⠨⠞⠀⠀⠨⠅⠀⠷⠼⠂⠒⠾⠷⠲⠢⠖⠾⠀⠨⠎⠨⠞⠀⠀⠨⠅⠀⠷⠼⠂⠒⠖⠾⠷⠆⠲⠢⠾⠀⠨⠞⠨⠎⠀⠀⠨⠅⠀⠷⠼⠂⠲⠒⠾⠷⠆⠢⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="remark remark-like" data-braille="remark-like" id="zKJ">
              <h6 class="heading">
                <span class="type">Remark</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="HZp">From this point forward we will find it convenient to use cycle notation to represent permutations. When using cycle notation, we often denote the identity permutation by <nemeth class="inline">⠷⠼⠂⠾</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="Neu">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.1.2</span> <span class="title">Transpositions</span></div>
            <p id="TSi">The simplest permutation is a cycle of length <nemeth class="inline">⠼⠆</nemeth>. Such cycles are called <dfn class="terminology">transpositions</dfn>.  Since</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠀⠨⠅⠀⠷⠁⠂⠁⠰⠝⠐⠾⠷⠁⠂⠁⠰⠝⠤⠂⠐⠾⠀⠄⠄⠄⠀⠷⠁⠂⠁⠒⠾⠷⠁⠂⠁⠆⠾</nemeth>
            </div>
            <p data-braille="continuation">, any cycle can be written as the product of transpositions, leading to the following proposition.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="LZb">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.12</span>
                <span class="period">.</span>
              </h6>
              <p id="hHs">Any permutation of a finite set containing at least two elements can be written as the product of transpositions.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Ynt">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.13</span>
                <span class="period">.</span>
              </h6>
              <p id="Dpw">Consider the permutation</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠂⠖⠾⠷⠆⠢⠒⠾⠀⠨⠅⠀⠷⠼⠂⠖⠾⠷⠆⠒⠾⠷⠆⠢⠾⠀⠨⠅⠀⠷⠼⠂⠖⠾⠷⠲⠢⠾⠷⠆⠒⠾⠷⠲⠢⠾⠷⠆⠢⠾</nemeth>
              </div>
              <p data-braille="continuation">. As we can see, there is no unique way to represent permutation as the product of transpositions. For instance, we can write the identity permutation as <nemeth class="inline">⠷⠼⠂⠆⠾⠷⠂⠆⠾</nemeth>, as <nemeth class="inline">⠷⠼⠂⠒⠾⠷⠆⠲⠾⠷⠂⠒⠾⠷⠆⠲⠾</nemeth>, and in many other ways. However, as it turns out, no permutation can be written as the product of both an even number of transpositions and an odd number of transpositions. For instance, we could represent the permutation <nemeth class="inline">⠷⠼⠂⠖⠾</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠆⠒⠾⠷⠂⠖⠾⠷⠆⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">or by</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠒⠢⠾⠷⠂⠖⠾⠷⠂⠒⠾⠷⠂⠖⠾⠷⠂⠒⠾⠷⠒⠢⠾⠷⠢⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">, but <nemeth class="inline">⠷⠼⠂⠖⠾</nemeth> will always be the product of an odd number of transpositions.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="sgk">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.14</span>
                <span class="period">.</span>
              </h6>
              <p id="acT">If the identity is written as the product of <i class="one-letter">r</i> transpositions,</p>
              <div class="displaymath">
                <nemeth>⠊⠙⠀⠨⠅⠀⠨⠞⠂⠨⠞⠆⠀⠄⠄⠄⠀⠨⠞⠰⠗⠐</nemeth>
              </div>
              <p data-braille="continuation">, then <i class="one-letter">r</i> is an even number.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZHh">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="CFC">We will employ induction  on <i class="one-letter">r</i>. A transposition cannot be the identity; hence, <nemeth class="inline">⠗⠀⠨⠂⠀⠼⠂</nemeth>. If <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠆</nemeth>, then we are done. Suppose that <nemeth class="inline">⠗⠀⠨⠂⠀⠼⠆</nemeth>. In this case the product of the last two transpositions, <nemeth class="inline">⠨⠞⠰⠗⠤⠂⠐⠨⠞⠰⠗</nemeth>, must be one of the following cases:</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠃⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠊⠙⠀⠷⠃⠉⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠷⠁⠉⠾⠷⠃⠉⠾⠀⠷⠉⠙⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠷⠁⠃⠾⠷⠉⠙⠾⠀⠷⠁⠉⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠷⠁⠃⠾⠷⠃⠉⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <i class="one-letter">a</i>, <i class="one-letter">b</i>, <i class="one-letter">c</i>, and <i class="one-letter">d</i> are distinct.</p>
              <p id="iML">The first equation simply says that a transposition is its own inverse. If this case occurs, delete <nemeth class="inline">⠨⠞⠰⠗⠤⠂⠐⠨⠞⠰⠗</nemeth> from the product to obtain</p>
              <div class="displaymath">
                <nemeth>⠊⠙⠀⠨⠅⠀⠨⠞⠂⠨⠞⠆⠀⠄⠄⠄⠀⠨⠞⠰⠗⠤⠒⠐⠨⠞⠰⠗⠤⠆⠐</nemeth>
              </div>
              <p data-braille="continuation">. By induction <nemeth class="inline">⠗⠤⠆</nemeth> is even; hence, <i class="one-letter">r</i> must be even.</p>
              <p id="OTU">In each of the other three cases, we can replace <nemeth class="inline">⠨⠞⠰⠗⠤⠂⠐⠨⠞⠰⠗</nemeth> with the right-hand side of the corresponding equation to obtain a new product of <i class="one-letter">r</i> transpositions for the identity. In this new product the last occurrence of <i class="one-letter">a</i> will be in the next-to-the-last transposition. We can continue this process with <nemeth class="inline">⠨⠞⠰⠗⠤⠆⠐⠨⠞⠰⠗⠤⠂</nemeth> to obtain either a product of <nemeth class="inline">⠗⠤⠆</nemeth> transpositions or a new product of <i class="one-letter">r</i> transpositions where the last occurrence of <i class="one-letter">a</i> is in <nemeth class="inline">⠨⠞⠰⠗⠤⠆</nemeth>. If the identity is the product of <nemeth class="inline">⠗⠤⠆</nemeth> transpositions, then again we are done, by our induction hypothesis; otherwise, we will repeat the procedure with <nemeth class="inline">⠨⠞⠰⠗⠤⠒⠐⠨⠞⠰⠗⠤⠆</nemeth>.</p>
              <p id="vbd">At some point either we will have two adjacent, identical transpositions canceling each other out or <i class="one-letter">a</i> will be shuffled so that it will appear only in the first transposition. However, the latter case cannot occur, because the identity would not fix <i class="one-letter">a</i> in this instance. Therefore, the identity permutation must be the product of <nemeth class="inline">⠗⠤⠆</nemeth> transpositions and, again by our induction hypothesis, we are done.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="fRS">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.15</span>
                <span class="period">.</span>
              </h6>
              <p id="wQq">If a permutation <nemeth class="inline">⠨⠎</nemeth> can be expressed as the product of an even number of transpositions, then any other product of transpositions equaling <nemeth class="inline">⠨⠎</nemeth> must also contain an even number of transpositions. Similarly, if <nemeth class="inline">⠨⠎</nemeth> can be expressed as the product of an odd number of transpositions, then any other product of transpositions equaling <nemeth class="inline">⠨⠎</nemeth> must also contain an odd number of transpositions.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="oQf">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="bim">Suppose that</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠨⠎⠂⠨⠎⠆⠀⠄⠄⠄⠀⠨⠎⠰⠍⠐⠀⠨⠅⠀⠨⠞⠂⠨⠞⠆⠀⠄⠄⠄⠀⠨⠞⠰⠝⠐</nemeth>
              </div>
              <p data-braille="continuation">, where <i class="one-letter">m</i> is even. We must show that <i class="one-letter">n</i> is also an even number. The inverse of <nemeth class="inline">⠨⠎</nemeth> is <nemeth class="inline">⠨⠎⠰⠍⠐⠀⠄⠄⠄⠀⠨⠎⠂</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠊⠙⠀⠨⠅⠀⠨⠎⠨⠎⠰⠍⠐⠀⠄⠄⠄⠀⠨⠎⠂⠀⠨⠅⠀⠨⠞⠂⠀⠄⠄⠄⠀⠨⠞⠰⠝⠐⠨⠎⠰⠍⠐⠀⠄⠄⠄⠀⠨⠎⠂</nemeth>
              </div>
              <p data-braille="continuation">, <i class="one-letter">n</i> must be even by Lemma 5.1.14. The proof for the case in which <nemeth class="inline">⠨⠎</nemeth> can be expressed as an odd number of transpositions is left as an exercise.</p>
            </article>
            <p id="zZr">In light of Theorem 5.1.15, we define a permutation to be <dfn class="terminology">even</dfn>  if it can be expressed as an even number of transpositions and <dfn class="terminology">odd</dfn>  if it can be expressed as an odd number of transpositions.</p>
          </section>
          <section class="subsection" id="tlD">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.1.3</span> <span class="title">The Alternating Groups</span></div>
            <p id="ggA">One of the most important subgroups of <nemeth class="inline">⠠⠎⠰⠝</nemeth> is the set of all even permutations, <nemeth class="inline">⠠⠁⠰⠝</nemeth>.  The group <nemeth class="inline">⠠⠁⠰⠝</nemeth> is called the <dfn class="terminology">alternating group on <i class="one-letter">n</i> letters</dfn>. </p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="EuC">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.16</span>
                <span class="period">.</span>
              </h6>
              <p id="cXz">The set <nemeth class="inline">⠠⠁⠰⠝</nemeth> is a subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="UXo">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Hpv">Since the product of two even permutations must also be an even permutation, <nemeth class="inline">⠠⠁⠰⠝</nemeth> is closed. The identity is an even permutation and therefore is in <nemeth class="inline">⠠⠁⠰⠝</nemeth>. If <nemeth class="inline">⠨⠎</nemeth> is an even permutation, then</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠨⠎⠂⠨⠎⠆⠀⠄⠄⠄⠀⠨⠎⠰⠗⠐</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠨⠎⠰⠊</nemeth> is a transposition and <i class="one-letter">r</i> is even. Since the inverse of any transposition is itself,</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠎⠰⠗⠐⠨⠎⠰⠗⠤⠂⠐⠀⠄⠄⠄⠀⠨⠎⠂</nemeth>
              </div>
              <p data-braille="continuation">is also in <nemeth class="inline">⠠⠁⠰⠝</nemeth>.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="kBL">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.17</span>
                <span class="period">.</span>
              </h6>
              <p id="NOB">The number of even permutations in <nemeth class="inline">⠠⠎⠰⠝</nemeth>, <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>, is equal to the number of odd permutations; hence, the order of <nemeth class="inline">⠠⠁⠰⠝</nemeth> is <nemeth class="inline">⠝⠖⠀⠸⠌⠼⠆</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="tzY">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="nwE">Let <nemeth class="inline">⠠⠁⠰⠝</nemeth> be the set of even permutations in <nemeth class="inline">⠠⠎⠰⠝</nemeth> and <nemeth class="inline">⠠⠃⠰⠝</nemeth> be the set of odd permutations. If we can show that there is a bijection between these sets, they must contain the same number of elements. Fix a transposition <nemeth class="inline">⠨⠎</nemeth> in <nemeth class="inline">⠠⠎⠰⠝</nemeth>. Since <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>, such a <nemeth class="inline">⠨⠎</nemeth> exists. Define</p>
              <div class="displaymath">
                <nemeth>⠨⠇⠰⠨⠎⠐⠒⠀⠠⠁⠰⠝⠐⠀⠫⠕⠀⠠⠃⠰⠝⠐</nemeth>
              </div>
              <p data-braille="continuation">by</p>
              <div class="displaymath">
                <nemeth>⠇⠰⠨⠎⠐⠷⠨⠞⠾⠀⠨⠅⠀⠨⠎⠨⠞</nemeth>
              </div>
              <p data-braille="continuation">. Suppose that <nemeth class="inline">⠇⠰⠨⠎⠐⠷⠨⠞⠾⠀⠨⠅⠀⠇⠰⠨⠎⠐⠷⠨⠍⠾</nemeth>. Then <nemeth class="inline">⠨⠎⠨⠞⠀⠨⠅⠀⠨⠎⠨⠍</nemeth> and so</p>
              <div class="displaymath">
                <nemeth>⠨⠞⠀⠨⠅⠀⠨⠎⠘⠤⠼⠂⠐⠨⠎⠨⠞⠀⠨⠅⠀⠨⠎⠘⠤⠼⠂⠐⠨⠎⠨⠍⠀⠨⠅⠀⠨⠍</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <nemeth class="inline">⠨⠇⠰⠨⠎</nemeth> is one-to-one. We will leave the proof that <nemeth class="inline">⠨⠇⠰⠨⠎</nemeth> is surjective to the reader.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="QIU">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.18</span>
                <span class="period">.</span>
              </h6>
              <p id="jwF">The group <nemeth class="inline">⠠⠁⠲</nemeth> is the subgroup of <nemeth class="inline">⠠⠎⠲</nemeth> consisting of even permutations. There are twelve elements in  <nemeth class="inline">⠠⠁⠲</nemeth>:</p>
              <div class="displaymath">
                <nemeth>⠀⠀⠷⠂⠾⠀⠀⠀⠷⠂⠆⠾⠷⠒⠲⠾⠀⠀⠀⠷⠂⠒⠾⠷⠆⠲⠾⠀⠀⠀⠷⠂⠲⠾⠷⠆⠒⠾⠀⠀⠀⠷⠂⠆⠒⠾⠀⠀⠀⠷⠂⠒⠆⠾⠀⠀⠀⠷⠂⠆⠲⠾⠀⠀⠀⠷⠂⠲⠆⠾⠀⠀⠀⠷⠂⠒⠲⠾⠀⠀⠀⠷⠂⠲⠒⠾⠀⠀⠀⠷⠆⠒⠲⠾⠀⠀⠀⠷⠆⠲⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">. One of the end-of-chapter exercises will be to write down all the subgroups of <nemeth class="inline">⠠⠁⠲</nemeth>. You will find that there is no subgroup of order 6. Does this surprise you?</p>
            </article>
          </section>
          <section class="subsection" id="ZsM">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.1.4</span> <span class="title">Historical Note</span></div>
            <p id="MnJ">Lagrange  first thought of permutations as functions from a set to itself, but it was Cauchy who developed the basic theorems and notation for permutations. He was the first to use cycle notation. Augustin-Louis Cauchy  (1789–1857) was born in Paris at the height of the French Revolution. His family soon left Paris for the village of Arcueil to escape the Reign of Terror. One of the family's neighbors there was Pierre-Simon Laplace  (1749–1827), who encouraged him to seek a career in mathematics. Cauchy began his career as a mathematician by solving a problem in geometry given to him by Lagrange. Cauchy wrote over 800 papers on such diverse topics as differential equations, finite groups, applied mathematics, and complex analysis. He was one of the mathematicians responsible for making calculus rigorous. Perhaps more theorems and concepts in mathematics have the name Cauchy attached to them than that of any other mathematician.</p>
          </section>
        </section>
        <section class="section" id="CFp">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">5.2</span> <span class="title">Dihedral Groups</span></div>
          <section class="introduction" id="Qnv">
            <p id="sQr">Another special type of permutation group is the dihedral group. Recall the symmetry group of an equilateral triangle in Chapter 3. Such groups consist of the rigid motions of a regular <i class="one-letter">n</i>-sided polygon or <i class="one-letter">n</i>-gon. For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠒⠠⠀⠼⠲⠠⠀⠄⠄⠄</nemeth>, we define the <dfn class="terminology">nth dihedral group</dfn>  to be the group of rigid motions of a regular <i class="one-letter">n</i>-gon. We will denote this group by <nemeth class="inline">⠠⠙⠰⠝</nemeth>.  We can number the vertices of a regular <i class="one-letter">n</i>-gon by <nemeth class="inline">⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝</nemeth> (Figure 5.2.1). Notice that there are exactly <i class="one-letter">n</i> choices to replace the first vertex. If we replace the first vertex by <i class="one-letter">k</i>, then the second vertex must be replaced either by vertex <nemeth class="inline">⠅⠬⠂</nemeth> or by vertex <nemeth class="inline">⠅⠤⠂</nemeth>; hence, there are <nemeth class="inline">⠼⠆⠝</nemeth> possible rigid motions of the <i class="one-letter">n</i>-gon. We summarize these results in the following theorem.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="YXA">
              <div data-braille="image">
                <p>Image: An n-gon with vertex 1 at the top, followed by 2, 3, 4, ..., n - 1, n.</p>
                <p>ID: permute-ngon</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.1<span class="period">.</span></span><span class="space"> </span>A regular <i class="one-letter">n</i>-gon</figcaption>
            </figure>
            <article class="theorem theorem-like" data-braille="theorem-like" id="naS">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="JeI">The dihedral group, <nemeth class="inline">⠠⠙⠰⠝</nemeth>, is a subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth> of order <nemeth class="inline">⠼⠆⠝</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="Tib">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="plR">The group <nemeth class="inline">⠠⠙⠰⠝</nemeth>, <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>, consists of all products of the two elements <i class="one-letter">r</i> and <i class="one-letter">s</i>, satisfying the relations</p>
              <div class="displaymath">
                <nemeth>⠗⠘⠝⠀⠀⠨⠅⠀⠼⠂⠀⠎⠘⠆⠀⠀⠨⠅⠀⠼⠂⠀⠎⠗⠎⠀⠀⠨⠅⠀⠗⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Bex">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="TDN">The possible motions of a regular <i class="one-letter">n</i>-gon are either reflections or rotations (Figure 5.2.4). There are exactly <i class="one-letter">n</i> possible rotations:</p>
              <div class="displaymath">
                <nemeth>⠊⠙⠠⠀⠹⠒⠖⠴⠘⠘⠨⠡⠐⠌⠝⠼⠠⠀⠼⠆⠡⠹⠒⠖⠴⠘⠘⠨⠡⠐⠌⠝⠼⠠⠀⠄⠄⠄⠀⠠⠀⠷⠝⠤⠂⠾⠡⠹⠒⠖⠴⠘⠘⠨⠡⠐⠌⠝⠼</nemeth>
              </div>
              <p data-braille="continuation">. We will denote the rotation <nemeth class="inline">⠼⠒⠖⠴⠘⠘⠨⠡⠐⠸⠌⠝</nemeth> by <i class="one-letter">r</i>. The rotation <i class="one-letter">r</i> generates all  of the other rotations. That is,</p>
              <div class="displaymath">
                <nemeth>⠗⠘⠅⠐⠀⠨⠅⠀⠅⠡⠹⠒⠖⠴⠘⠘⠨⠡⠐⠌⠝⠼</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="fSf">
                <div data-braille="image">
                  <p>Image: Rotations and reflections of an octagon.  Where the top octagon (1 (top), 2, 3, 4, 5, 6, 7, 8) is rotated to an octagon (2 (top), 3, 4, 5, 6, 7, 8, 1), and the octagon below (1 (top), 2, 3, 4, 5, 6, 7, 8) is reflected about a vertical axis to (1 (top), 8, 7, 6, 5, 4, 3, 2).</p>
                  <p>ID: permute-motions-ngon</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.4<span class="period">.</span></span><span class="space"> </span>Rotations and reflections of a regular <i class="one-letter">n</i>-gon</figcaption>
              </figure>
              <p id="zKW">Label the <i class="one-letter">n</i> reflections <nemeth class="inline">⠎⠂⠠⠀⠎⠆⠠⠀⠄⠄⠄⠀⠠⠀⠎⠰⠝⠐</nemeth>, where <nemeth class="inline">⠎⠰⠅</nemeth> is the reflection that leaves vertex <i class="one-letter">k</i> fixed. There are two cases of reflections, depending on whether <i class="one-letter">n</i> is even or odd. If there are an even number of vertices, then two vertices are left fixed by a reflection, and <nemeth class="inline">⠎⠂⠀⠨⠅⠀⠎⠰⠝⠸⠌⠆⠬⠂⠐⠠⠀⠎⠆⠀⠨⠅⠀⠎⠰⠝⠸⠌⠆⠬⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠎⠰⠝⠸⠌⠆⠐⠀⠨⠅⠀⠎⠰⠝⠐</nemeth>. If there are an odd number of vertices, then only a single vertex is left fixed by a reflection and <nemeth class="inline">⠎⠂⠠⠀⠎⠆⠠⠀⠄⠄⠄⠀⠠⠀⠎⠰⠝⠐</nemeth> are distinct (Figure 5.2.5). In either case, the order of each <nemeth class="inline">⠎⠰⠅</nemeth> is two. Let <nemeth class="inline">⠎⠀⠨⠅⠀⠎⠂</nemeth>. Then <nemeth class="inline">⠎⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠗⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>. Since any rigid motion <i class="one-letter">t</i> of the <i class="one-letter">n</i>-gon replaces the first vertex by the vertex <i class="one-letter">k</i>, the second vertex must be replaced by either <nemeth class="inline">⠅⠬⠂</nemeth> or by <nemeth class="inline">⠅⠤⠂</nemeth>. If the second vertex is replaced by <nemeth class="inline">⠅⠬⠂</nemeth>, then <nemeth class="inline">⠞⠀⠨⠅⠀⠗⠘⠅</nemeth>. If the second vertex is replaced by <nemeth class="inline">⠅⠤⠂</nemeth>, then <nemeth class="inline">⠞⠀⠨⠅⠀⠗⠘⠅⠐⠎</nemeth>.<a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-2" id="fn-2"><sup> 1 </sup></a> Hence, <i class="one-letter">r</i> and <i class="one-letter">s</i> generate <nemeth class="inline">⠠⠙⠰⠝</nemeth>. That is, <nemeth class="inline">⠠⠙⠰⠝</nemeth> consists of all finite products of <i class="one-letter">r</i> and <i class="one-letter">s</i>,</p>
              <div class="displaymath">
                <nemeth>⠠⠙⠰⠝⠐⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠗⠠⠀⠗⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠗⠘⠝⠤⠂⠐⠠⠀⠎⠠⠀⠗⠎⠠⠀⠗⠘⠆⠐⠎⠠⠀⠄⠄⠄⠀⠠⠀⠗⠘⠝⠤⠂⠐⠎⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. We will leave the proof that <nemeth class="inline">⠎⠗⠎⠀⠨⠅⠀⠗⠘⠤⠼⠂</nemeth> as an exercise.</p>
              <div class="hidden-content tex2jax_ignore" id="hk-fn-2">
                <div class="fn">Since we are in an abstract group, we will adopt the convention that group elements are multiplied left to right.</div>
              </div>
              <figure class="figure figure-like" data-braille="figure-like" id="LZo">
                <div data-braille="image">
                  <p>Image: The top hexagon (1 (top), 2, 3, 4, 5, 6) is relected to (1 (top), 6, 5, 4, 3,. 2).  The bottom pentqgon (1 (top), 2, 3, 4, 5) is relected to become (1 (top), 5, 4, 3, 2).</p>
                  <p>ID: permute-reflections-ngon</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.5<span class="period">.</span></span><span class="space"> </span>Types of  reflections of a regular <i class="one-letter">n</i>-gon</figcaption>
              </figure>
            </article>
            <article class="example example-like" data-braille="example-like" id="LDC">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="PDO">The group of rigid motions of a square, <nemeth class="inline">⠠⠙⠲</nemeth>, consists of eight elements. With the vertices numbered <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠲</nemeth> (Figure 5.2.7), the rotations are</p>
              <div class="displaymath">
                <nemeth>⠗⠀⠀⠨⠅⠀⠷⠼⠂⠆⠒⠲⠾⠀⠗⠘⠆⠀⠀⠨⠅⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠀⠗⠘⠒⠀⠀⠨⠅⠀⠷⠼⠂⠲⠒⠆⠾⠀⠗⠘⠲⠀⠀⠨⠅⠀⠷⠼⠂⠾</nemeth>
              </div>
              <p data-braille="continuation">and the reflections are</p>
              <div class="displaymath">
                <nemeth>⠎⠂⠀⠀⠨⠅⠀⠷⠼⠆⠲⠾⠀⠎⠆⠀⠀⠨⠅⠀⠷⠼⠂⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">. The order of <nemeth class="inline">⠠⠙⠲</nemeth> is <nemeth class="inline">⠼⠦</nemeth>. The remaining two elements are</p>
              <div class="displaymath">
                <nemeth>⠗⠎⠂⠀⠀⠨⠅⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾⠀⠗⠘⠒⠐⠎⠂⠀⠀⠨⠅⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="vKX">
                <div data-braille="image">
                  <p>Image: A square with diagonal lines of symmetries connecting opposite vertices, a horzontal line of symmetry that bisects the two vertical sides of the square and a vertical line of symmetry that bisects the two horizaontal sides of the square.</p>
                  <p>ID: permute-dihedral-four</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.7<span class="period">.</span></span><span class="space"> </span>The group <nemeth class="inline">⠠⠙⠲</nemeth></figcaption>
              </figure>
            </article>
          </section>
          <section class="subsection" id="FzV">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.2.1</span> <span class="title">The Motion Group of a Cube</span></div>
            <p id="suS">We can investigate the groups of rigid motions of geometric objects other than a regular <i class="one-letter">n</i>-sided polygon to obtain interesting examples of permutation groups. Let us consider the group of rigid motions of a cube.  By rigid motion, we mean a rotation with the axis of rotation about opposing faces, edges, or vertices. One of the first questions that we can ask about this group is “what is its order?” A cube has <nemeth class="inline">⠼⠖</nemeth> sides. If a particular side is facing upward, then there are four possible rotations of the cube that will preserve the upward-facing side. Hence, the order of the group is <nemeth class="inline">⠼⠖⠡⠲⠀⠨⠅⠀⠼⠆⠲</nemeth>. We have just proved the following proposition.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="cXm">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="tVK">The group of rigid motions of a cube contains <nemeth class="inline">⠼⠆⠲</nemeth> elements.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="wQd">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="Vta">The group of rigid motions of a cube is <nemeth class="inline">⠠⠎⠲</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="hlG">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="sgx">From Proposition 5.2.8, we already know that the motion group of the cube has <nemeth class="inline">⠼⠆⠲</nemeth> elements, the same number of elements as there are in <nemeth class="inline">⠠⠎⠲</nemeth>. There are exactly four diagonals in the cube. If we label these diagonals <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, and <nemeth class="inline">⠼⠲</nemeth>, we must show that the motion group of the cube will give us any permutation of the diagonals (Figure 5.2.10). If we can obtain all of these permutations, then <nemeth class="inline">⠠⠎⠲</nemeth> and the group of rigid motions of the cube must be the same. To obtain a transposition we can rotate the cube <nemeth class="inline">⠼⠂⠦⠴⠘⠘⠨⠡</nemeth> about the axis joining the midpoints of opposite edges (Figure 5.2.11). There are six such axes, giving all transpositions in <nemeth class="inline">⠠⠎⠲</nemeth>. Since every element in <nemeth class="inline">⠠⠎⠲</nemeth> is the product of a finite number of transpositions, the motion group of a cube must be <nemeth class="inline">⠠⠎⠲</nemeth>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="YnG">
                <div data-braille="image">
                  <p>Image: A cube where the top vetices are labled 1, 2, 3, 4 and the bottom vertices are labled 3, 4, 1, 2.  Diagonals connect vertex 1 on the top with vertex 1 on the bottom, vertex 2 on the top with vertex 2 on the bottom, vertex 3 on the top with vertex 3 on the bottom, and vertex 4 on the top with vertex 4 on the bottom,</p>
                  <p>ID: permute-motions-cube</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.10<span class="period">.</span></span><span class="space"> </span>The motion group of a cube</figcaption>
              </figure>
              <figure class="figure figure-like" data-braille="figure-like" id="EuP">
                <div data-braille="image">
                  <p>Image: Two cubes where the top vetices of the first cube are labled 1, 2, 3, 4 and the bottom vertices are labled 3, 4, 1, 2 and the top vertices of the second cube are labled 2, 1, 3, 4 and the bottom vertices are labled 3, 4, 2, 1.  Lines of symmetry connect the 12 edge on top with the 12 edge on the bottom in both cubes.</p>
                  <p>ID: permute-transpositions-cube</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.11<span class="period">.</span></span><span class="space"> </span>Transpositions in the motion group of a cube</figcaption>
              </figure>
            </article>
            <article class="paragraphs" id="qqX">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="YCb">A permutation group is a very concrete representation of a group, and Sage support for permutations groups is very good — making Sage a natural place for beginners to learn about group theory.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="HJQ">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">5.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="Cbi">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="GLb">Express <nemeth class="inline">⠷⠼⠂⠒⠲⠾⠷⠒⠢⠲⠾</nemeth> as a cycle, or a product of disjoint cycles. (Interpret the composition of functions in the order used by Sage, which is the reverse of the order used in the book.)</p>
          </article>
          <article class="exercise exercise-like" id="iir">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="mSk">What is a transposition?</p>
          </article>
          <article class="exercise exercise-like" id="OpA">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="SZt">What does it mean for a permutation to be even or odd?</p>
          </article>
          <article class="exercise exercise-like" id="uwJ">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="zgC">Describe another group that is fundamentally the same as <nemeth class="inline">⠠⠁⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="aDS">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="fnL">Write the elements of the symmetry group of a pentagon using permutations in cycle notation. Do this exercise by hand, and without the assistance of Sage.</p>
          </article>
        </section>
        <section class="exercises" id="ecF">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">5.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="Jev">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="xAk">Write the following permutations in cycle notation.</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠆⠀⠲⠀⠂⠀⠢⠀⠒⠠⠾</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠲⠀⠆⠀⠢⠀⠂⠀⠒⠠⠾</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠒⠀⠢⠀⠂⠀⠲⠀⠆⠠⠾</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠂⠀⠲⠀⠒⠀⠆⠀⠢⠠⠾</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="lVz"><span class="type">Hint</span>:<p id="AQp">(a) <nemeth class="inline">⠷⠼⠂⠆⠲⠢⠒⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠒⠾⠷⠆⠢⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="plE">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="dHt">Compute each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="TKR"><nemeth class="inline">⠷⠼⠂⠒⠲⠢⠾⠷⠆⠒⠲⠾</nemeth></p></li>
              <li>b. <p id="zSa"><nemeth class="inline">⠷⠼⠂⠆⠾⠷⠂⠆⠢⠒⠾</nemeth></p></li>
              <li>c. <p id="fZj"><nemeth class="inline">⠷⠼⠂⠲⠒⠾⠷⠆⠒⠾⠷⠆⠲⠾</nemeth></p></li>
              <li>d. <p id="Mgs"><nemeth class="inline">⠷⠼⠂⠲⠆⠒⠾⠷⠒⠲⠾⠷⠢⠖⠾⠷⠂⠒⠆⠲⠾</nemeth></p></li>
              <li>e. <p id="snB"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠷⠂⠒⠾⠷⠆⠢⠾</nemeth></p></li>
              <li>f. <p id="YuK"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠷⠂⠒⠾⠷⠆⠢⠾⠘⠆</nemeth></p></li>
              <li>g. <p id="EBT"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠘⠤⠼⠂⠐⠷⠂⠆⠒⠾⠷⠲⠢⠾⠷⠂⠆⠢⠲⠾</nemeth></p></li>
              <li>h. <p id="kJc"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠘⠆⠐⠷⠂⠆⠒⠾⠷⠲⠢⠾</nemeth></p></li>
              <li>i. <p id="QQl"><nemeth class="inline">⠷⠼⠂⠆⠒⠾⠷⠲⠢⠾⠷⠂⠆⠢⠲⠾⠘⠤⠼⠆</nemeth></p></li>
              <li>j. <p id="wXu"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠘⠂⠴⠴</nemeth></p></li>
              <li>k. <p id="deD"><nemeth class="inline">⠳⠷⠼⠂⠆⠢⠲⠾⠳</nemeth></p></li>
              <li>l. <p id="JlM"><nemeth class="inline">⠳⠷⠼⠂⠆⠢⠲⠾⠘⠆⠐⠳</nemeth></p></li>
              <li>m. <p id="psV"><nemeth class="inline">⠷⠼⠂⠆⠾⠘⠤⠼⠂</nemeth></p></li>
              <li>n. <p id="VAe"><nemeth class="inline">⠷⠼⠂⠆⠢⠒⠶⠾⠘⠤⠼⠂</nemeth></p></li>
              <li>o. <p id="BHn"><nemeth class="inline">⠈⠷⠷⠼⠂⠆⠾⠷⠒⠲⠾⠷⠂⠆⠾⠷⠲⠶⠾⠈⠾⠘⠤⠼⠂</nemeth></p></li>
              <li>p. <p id="hOw"><nemeth class="inline">⠈⠷⠷⠼⠂⠆⠒⠢⠾⠷⠲⠖⠶⠾⠈⠾⠘⠤⠼⠂</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="yjR"><span class="type">Hint</span>:<p id="gXy">(a) <nemeth class="inline">⠷⠼⠂⠒⠢⠾⠷⠆⠲⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠲⠾⠷⠆⠒⠾</nemeth>; (e) <nemeth class="inline">⠷⠼⠂⠒⠆⠲⠾</nemeth>; (g) <nemeth class="inline">⠷⠼⠂⠒⠲⠾⠷⠆⠢⠾</nemeth>; (n) <nemeth class="inline">⠷⠼⠂⠶⠒⠢⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="VsN">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="JOC">Express the following permutations as products of transpositions and identify them as even or odd.</p>
            <ol class="outerlist">
              <li>a. <p id="NVF"><nemeth class="inline">⠷⠼⠂⠲⠒⠢⠖⠾</nemeth></p></li>
              <li>b. <p id="ucO"><nemeth class="inline">⠷⠼⠂⠢⠖⠾⠷⠆⠒⠲⠾</nemeth></p></li>
              <li>c. <p id="ajX"><nemeth class="inline">⠷⠼⠂⠲⠆⠖⠾⠷⠂⠲⠆⠾</nemeth></p></li>
              <li>d. <p id="Grg"><nemeth class="inline">⠷⠼⠂⠶⠆⠢⠲⠾⠷⠂⠲⠆⠒⠾⠷⠂⠢⠲⠖⠒⠆⠾</nemeth></p></li>
              <li>e. <p id="myp"><nemeth class="inline">⠷⠼⠂⠲⠆⠖⠒⠶⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Kyj"><span class="type">Hint</span>:<p id="NeH">(a) <nemeth class="inline">⠷⠼⠂⠖⠾⠷⠂⠢⠾⠷⠂⠒⠾⠷⠂⠲⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠖⠾⠷⠂⠲⠾⠷⠂⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="BzW">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="pVL">Find <nemeth class="inline">⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠘⠤⠼⠂</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="WMB"><span class="type">Hint</span>:<p id="tlQ"><nemeth class="inline">⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠰⠝⠐⠠⠀⠁⠰⠝⠤⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠁⠆⠾</nemeth></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="hHf">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="WcU">List all of the subgroups of <nemeth class="inline">⠠⠎⠲</nemeth>. Find each of the following sets:</p>
            <ol class="outerlist">
              <li>a. <p id="SFy"><nemeth class="inline">⠨⠷⠎⠀⠈⠑⠀⠠⠎⠲⠒⠀⠎⠷⠼⠂⠾⠀⠨⠅⠀⠼⠒⠨⠾</nemeth></p></li>
              <li>b. <p id="yMH"><nemeth class="inline">⠨⠷⠎⠀⠈⠑⠀⠠⠎⠲⠒⠀⠎⠷⠼⠆⠾⠀⠨⠅⠀⠼⠆⠨⠾</nemeth></p></li>
              <li>c. <p id="eTQ"><nemeth class="inline">⠨⠷⠀⠎⠀⠈⠑⠀⠠⠎⠲⠒⠀⠎⠷⠼⠂⠾⠀⠨⠅⠀⠼⠒</nemeth> and <nemeth class="inline">⠎⠷⠼⠆⠾⠀⠨⠅⠀⠼⠆⠨⠾</nemeth>.</p></li>
            </ol>
            <p data-braille="continuation">Are any of these sets subgroups of <nemeth class="inline">⠠⠎⠲</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="jaT"><span class="type">Hint</span>:<p id="ZsZ">(a) <nemeth class="inline">⠨⠷⠷⠼⠂⠒⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠠⠀⠷⠼⠂⠒⠆⠾⠠⠀⠷⠼⠂⠒⠲⠾⠠⠀⠷⠼⠂⠒⠆⠲⠾⠠⠀⠷⠼⠂⠒⠲⠆⠾⠨⠾</nemeth> is not a subgroup.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NOo">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="Ckd">Find all of the subgroups in <nemeth class="inline">⠠⠁⠲</nemeth>. What is the order of each subgroup?</p>
          </article>
          <article class="exercise exercise-like" id="tVx">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="irm">Find all possible orders of elements in <nemeth class="inline">⠠⠎⠶</nemeth> and <nemeth class="inline">⠠⠁⠶</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="acG">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="Oyv">Show that <nemeth class="inline">⠠⠁⠂⠴</nemeth> contains an element of order <nemeth class="inline">⠼⠂⠢</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="HDD"><span class="type">Hint</span>:<p id="FAi"><nemeth class="inline">⠷⠼⠂⠆⠒⠲⠢⠾⠷⠖⠶⠦⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GjP">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="uFE">Does <nemeth class="inline">⠠⠁⠦</nemeth> contain an element of order <nemeth class="inline">⠼⠆⠖</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="mqY">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="aMN">Find an element of largest order in <nemeth class="inline">⠠⠎⠰⠝</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠒⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Syh">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="GTW">What are the possible cycle structures of elements of <nemeth class="inline">⠠⠁⠢</nemeth>? What about <nemeth class="inline">⠠⠁⠖</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="ggn"><span class="type">Hint</span>:<p id="lHr">Permutations of the form</p><div class="displaymath"><nemeth>⠷⠼⠂⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠾⠷⠁⠒⠠⠀⠁⠲⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠁⠒⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠁⠒⠠⠀⠁⠲⠠⠀⠁⠢⠾</nemeth></div><p data-braille="continuation">are possible for <nemeth class="inline">⠠⠁⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="yFq">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="nbf">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> have order <i class="one-letter">n</i>. Show that for all integers <i class="one-letter">i</i> and <i class="one-letter">j</i>, <nemeth class="inline">⠨⠎⠘⠊⠐⠀⠨⠅⠀⠨⠎⠘⠚</nemeth> if and only if <nemeth class="inline">⠊⠀⠸⠇⠀⠚⠷⠍⠕⠙⠀⠝⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="eMz">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="Tio">Let <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠨⠎⠂⠀⠄⠄⠄⠀⠨⠎⠰⠍⠐⠀⠈⠑⠀⠠⠎⠰⠝⠐</nemeth> be the product of disjoint cycles. Prove that the order of <nemeth class="inline">⠨⠎</nemeth> is the least common multiple of the lengths of the cycles <nemeth class="inline">⠨⠎⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠎⠰⠍⠐</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="KTI">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="zpx">Using cycle notation, list the elements in <nemeth class="inline">⠠⠙⠢</nemeth>. What are <i class="one-letter">r</i> and <i class="one-letter">s</i>? Write every element as a product of <i class="one-letter">r</i> and <i class="one-letter">s</i>.</p>
          </article>
          <article class="exercise exercise-like" id="raR">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="fwG">If the diagonals of a cube are labeled as Figure 5.2.10, to which motion of the cube does the permutation <nemeth class="inline">⠷⠼⠂⠆⠾⠷⠒⠲⠾</nemeth> correspond? What about the other permutations of the diagonals?</p>
          </article>
          <article class="exercise exercise-like" id="Xia">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="LDP">Find the group of rigid motions of a tetrahedron. Show that this is the same group as <nemeth class="inline">⠠⠁⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Dpj">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="rKY">Prove that <nemeth class="inline">⠠⠎⠰⠝</nemeth> is nonabelian for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="xey"><span class="type">Hint</span>:<p id="ROA">Calculate <nemeth class="inline">⠷⠼⠂⠆⠒⠾⠷⠂⠆⠾</nemeth> and <nemeth class="inline">⠷⠼⠂⠆⠾⠷⠂⠆⠒⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="jws">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="XSh">Show that <nemeth class="inline">⠠⠁⠰⠝</nemeth> is nonabelian for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="PDB">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="DZq">Prove that <nemeth class="inline">⠠⠙⠰⠝</nemeth> is nonabelian for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="vKK">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="kgz">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> be a cycle. Prove that <nemeth class="inline">⠨⠎</nemeth> can be written as the product of at most <nemeth class="inline">⠝⠤⠂</nemeth> transpositions.</p>
          </article>
          <article class="exercise exercise-like" id="bRT">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="QnI">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>. If <nemeth class="inline">⠨⠎</nemeth> is not a cycle, prove that <nemeth class="inline">⠨⠎</nemeth> can be written as the product of at most <nemeth class="inline">⠝⠤⠆</nemeth> transpositions.</p>
          </article>
          <article class="exercise exercise-like" id="HZc">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="wuR">If <nemeth class="inline">⠨⠎</nemeth> can be expressed as an odd number of transpositions, show that any other product of transpositions equaling <nemeth class="inline">⠨⠎</nemeth> must also be odd.</p>
          </article>
          <article class="exercise exercise-like" id="ogl">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="cCa">If <nemeth class="inline">⠨⠎</nemeth> is a cycle of odd length, prove that <nemeth class="inline">⠨⠎⠘⠆</nemeth> is also a cycle.</p>
          </article>
          <article class="exercise exercise-like" id="Unu">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="IJj">Show that a <nemeth class="inline">⠼⠒</nemeth>-cycle is an even permutation.</p>
          </article>
          <article class="exercise exercise-like" id="AuD">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="oQs">Prove that in <nemeth class="inline">⠠⠁⠰⠝</nemeth> with <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>, any permutation is a product of cycles of length <nemeth class="inline">⠼⠒</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="arb"><span class="type">Hint</span>:<p id="xVJ">Consider the cases <nemeth class="inline">⠷⠁⠃⠾⠷⠃⠉⠾</nemeth> and <nemeth class="inline">⠷⠁⠃⠾⠷⠉⠙⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="gBM">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="UXB">Prove that any element in <nemeth class="inline">⠠⠎⠰⠝</nemeth> can be written as a finite product of the following permutations.</p>
            <ol class="outerlist">
              <li>a. <p id="ZeE"><nemeth class="inline">⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠄⠄⠄⠀⠠⠀⠷⠼⠂⠝⠾</nemeth></p></li>
              <li>b. <p id="FlN"><nemeth class="inline">⠷⠼⠂⠆⠾⠠⠀⠷⠼⠆⠒⠾⠠⠀⠄⠄⠄⠀⠠⠀⠷⠝⠤⠂⠠⠀⠝⠾</nemeth></p></li>
              <li>c. <p id="lsW"><nemeth class="inline">⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠆⠀⠄⠄⠄⠀⠝⠾</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="MIV">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="BeK">Let <i class="one-letter">G</i> be a group and define a map <nemeth class="inline">⠨⠇⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠇⠰⠛⠐⠷⠁⠾⠀⠨⠅⠀⠛⠁</nemeth>. Prove that <nemeth class="inline">⠨⠇⠰⠛</nemeth> is a permutation of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="sQe">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="hlT">Prove that there exist <nemeth class="inline">⠝⠯</nemeth> permutations of a set containing <i class="one-letter">n</i> elements.</p>
          </article>
          <article class="exercise exercise-like" id="YXn">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="Ntc">Recall that the <dfn class="terminology">center</dfn> of a group <i class="one-letter">G</i> is</p>
            <div class="displaymath">
              <nemeth>⠠⠵⠷⠠⠛⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠭⠀⠨⠅⠀⠭⠛⠋⠕⠗⠀⠁⠇⠇⠭⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Find the center of <nemeth class="inline">⠠⠙⠦</nemeth>. What about the center of <nemeth class="inline">⠠⠙⠂⠴</nemeth>? What is the center of <nemeth class="inline">⠠⠙⠰⠝</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="Few">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="tAl">Let <nemeth class="inline">⠨⠞⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> be a cycle of length <i class="one-letter">k</i>.</p>
            <ol class="outerlist">
              <li>a. <p id="JVG">Prove that if <nemeth class="inline">⠨⠎</nemeth> is any permutation, then</p><div class="displaymath"><nemeth>⠎⠨⠞⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠎⠷⠁⠂⠾⠠⠀⠎⠷⠁⠆⠾⠠⠀⠄⠄⠄⠀⠠⠀⠎⠷⠁⠰⠅⠐⠾⠾</nemeth></div><p data-braille="continuation">is a cycle of length <i class="one-letter">k</i>.</p></li>
              <li>b. <p id="qcP">Let <nemeth class="inline">⠨⠍</nemeth> be a cycle of length <i class="one-letter">k</i>. Prove that there is a permutation <nemeth class="inline">⠨⠎</nemeth> such that <nemeth class="inline">⠨⠎⠨⠞⠨⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠍</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Lid"><span class="type">Hint</span>:<p id="ecS">For (a), show that <nemeth class="inline">⠎⠨⠞⠎⠘⠤⠼⠂⠐⠷⠎⠷⠁⠰⠊⠐⠾⠾⠀⠨⠅⠀⠎⠷⠁⠰⠊⠬⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="llF">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="ZHu">For <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> in <nemeth class="inline">⠠⠎⠰⠝</nemeth>, define <nemeth class="inline">⠨⠁⠈⠱⠨⠃</nemeth> if there exists an <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> such that <nemeth class="inline">⠨⠎⠨⠁⠨⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠃</nemeth>. Show that <nemeth class="inline">⠈⠱</nemeth> is an equivalence relation on <nemeth class="inline">⠠⠎⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="RsO">
            <h6 class="heading">
              <span class="codenumber">32<span class="period">.</span></span>
            </h6>
            <p id="FOD">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠠⠭</nemeth>. If <nemeth class="inline">⠎⠘⠝⠐⠷⠭⠾⠀⠨⠅⠀⠽</nemeth> for some <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>, we will say that <nemeth class="inline">⠭⠈⠱⠽</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="iyq">Show that <nemeth class="inline">⠈⠱</nemeth> is an equivalence relation on <i class="one-letter">X</i>.</p></li>
              <li>b. <p id="uMI">Define the <dfn class="terminology">orbit</dfn> of <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> under <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠠⠭</nemeth> to be the set</p><div class="displaymath"><nemeth>⠈⠠⠕⠰⠭⠠⠀⠨⠎⠐⠀⠨⠅⠀⠨⠷⠽⠒⠀⠭⠈⠱⠽⠨⠾</nemeth></div><p data-braille="continuation">. Compute the orbits of each element in <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠨⠾</nemeth> under each of the following elements in <nemeth class="inline">⠠⠎⠢</nemeth>:</p><div class="displaymath"><nemeth>⠨⠁⠀⠀⠨⠅⠀⠷⠼⠂⠆⠢⠲⠾⠀⠨⠃⠀⠀⠨⠅⠀⠷⠼⠂⠆⠒⠾⠷⠲⠢⠾⠀⠨⠛⠀⠀⠨⠅⠀⠷⠼⠂⠒⠾⠷⠆⠢⠾</nemeth></div><p data-braille="continuation">.</p></li>
              <li>c. <p id="aTR">If <nemeth class="inline">⠈⠠⠕⠰⠭⠠⠀⠨⠎⠐⠨⠩⠈⠠⠕⠰⠽⠠⠀⠨⠎⠐⠀⠌⠨⠅⠀⠸⠴</nemeth>, prove that <nemeth class="inline">⠈⠠⠕⠰⠭⠠⠀⠨⠎⠐⠀⠨⠅⠀⠈⠠⠕⠰⠽⠠⠀⠨⠎</nemeth>. The orbits under a permutation <nemeth class="inline">⠨⠎</nemeth> are the equivalence classes corresponding to the equivalence relation <nemeth class="inline">⠈⠱</nemeth>.</p></li>
              <li>d. <p id="Hba">A subgroup <i class="one-letter">H</i> of <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth> is <dfn class="terminology">transitive</dfn> if for every <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠭</nemeth>, there exists a <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠓</nemeth> such that <nemeth class="inline">⠎⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Prove that <nemeth class="inline">⠨⠨⠷⠨⠎⠨⠨⠾</nemeth> is transitive if and only if <nemeth class="inline">⠈⠠⠕⠰⠭⠠⠀⠨⠎⠐⠀⠨⠅⠀⠠⠭</nemeth> for some <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="xzX">
            <h6 class="heading">
              <span class="codenumber">33<span class="period">.</span></span>
            </h6>
            <p id="lVM">Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>. If <nemeth class="inline">⠨⠁⠨⠃⠀⠨⠅⠀⠨⠃⠨⠁</nemeth> for all <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>, prove that <nemeth class="inline">⠨⠁</nemeth> must be the identity permutation; hence, the center of <nemeth class="inline">⠠⠎⠰⠝</nemeth> is the trivial subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="dHg">
            <h6 class="heading">
              <span class="codenumber">34<span class="period">.</span></span>
            </h6>
            <p id="ScV">If <nemeth class="inline">⠨⠁</nemeth> is even, prove that <nemeth class="inline">⠨⠁⠘⠤⠼⠂</nemeth> is also even. Does a corresponding result hold if <nemeth class="inline">⠨⠁</nemeth> is odd?</p>
          </article>
          <article class="exercise exercise-like" id="permute-exercise-conjugate-An">
            <h6 class="heading">
              <span class="codenumber">35<span class="period">.</span></span>
            </h6>
            <p id="p-941">If <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠁⠰⠝</nemeth> and <nemeth class="inline">⠨⠞⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>, show that <nemeth class="inline">⠨⠞⠘⠤⠼⠂⠐⠨⠎⠨⠞⠀⠈⠑⠀⠠⠁⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="JOp">
            <h6 class="heading">
              <span class="codenumber">36<span class="period">.</span></span>
            </h6>
            <p id="yke">Show that <nemeth class="inline">⠨⠁⠘⠤⠼⠂⠐⠨⠃⠘⠤⠼⠂⠐⠨⠁⠨⠃</nemeth> is even for <nemeth class="inline">⠨⠁⠠⠀⠨⠃⠀⠈⠑⠀⠠⠎⠰⠝⠐</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="pVy">
            <h6 class="heading">
              <span class="codenumber">37<span class="period">.</span></span>
            </h6>
            <p id="ern">Let <i class="one-letter">r</i> and <i class="one-letter">s</i> be the elements in <nemeth class="inline">⠠⠙⠰⠝</nemeth> described in Theorem 5.2.3</p>
            <ol class="outerlist">
              <li>a. <p id="rSc">Show that <nemeth class="inline">⠎⠗⠎⠀⠨⠅⠀⠗⠘⠤⠼⠂</nemeth>.</p></li>
              <li>b. <p id="XZl">Show that <nemeth class="inline">⠗⠘⠅⠐⠎⠀⠨⠅⠀⠎⠗⠘⠤⠅</nemeth> in <nemeth class="inline">⠠⠙⠰⠝</nemeth>.</p></li>
              <li>c. <p id="Egu">Prove that the order of <nemeth class="inline">⠗⠘⠅⠐⠀⠈⠑⠀⠠⠙⠰⠝</nemeth> is <nemeth class="inline">⠝⠸⠌⠛⠉⠙⠀⠷⠅⠠⠀⠝⠾</nemeth>.</p></li>
            </ol>
          </article>
        </section>
        <section class="section" id="iMy">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">5.5</span> <span class="title">Sage</span></div>
          <section class="introduction" id="wuE">
            <p id="FeJ">A good portion of Sage's support for group theory is based on routines from <abbr class="acronym">GAP</abbr> (Groups, Algorithms, and Programming) at <a class="external" href="http://www.gap-system.org/" target="_blank">www.gap-system.org</a>, which is included in every copy of Sage. This is a mature open source package, dating back to 1986. (Forward reference here to <abbr class="acronym">GAP</abbr> console, etc.)</p>
            <p id="llS">As we have seen, groups can be described in many different ways, such as sets of matrices, sets of complex numbers, or sets of symbols subject to defining relations. A very concrete way to represent groups is via permutations (one-to-one and onto functions of the integers <nemeth class="inline">⠼⠂</nemeth> through <i class="one-letter">n</i>), using function composition as the operation in the group, as described in this chapter. Sage has many routines designed to work with groups of this type and they are also a good way for those learning group theory to gain experience with the basic ideas of group theory. For both these reasons, we will concentrate on these types of groups.</p>
          </section>
          <section class="subsection" id="lHe">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.5.1</span> <span class="title">Permutation Groups and Elements</span></div>
            <p id="EJk">The easiest way to work with permutation group elements in Sage is to write them in cycle notation. Since these are products of disjoint cycles (which commute), we do not need to concern ourselves with the actual order of the cycles. If we write <code class="code-inline tex2jax_ignore">(1,3)(2,4)</code> we probably understand it to be a permutation (the topic of this chapter!) and we know that it could be an element of <nemeth class="inline">⠠⠎⠲</nemeth>, or perhaps a symmetric group on more symbols than just 4. Sage cannot get started that easily and needs a bit of context, so we coerce a string of characters written with cycle notation into a symmetric group to make group elements. Here are some examples and some sample computations. Remember that Sage and your text differ on how to interpret the order of composing two permutations in a product.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(5)
sigma = G("(1,3)(2,5,4)")
sigma*sigma
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2,4,5)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho = G("(2,4)(1,5)")
rho^3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,5)(2,4)
</div>
            </article>
            <p id="kQt">If the next three examples seem confusing, or “backwards”, then now would be an excellent time to review the Sage discussion about the order of permutation composition in the subsection Groups of symmetries.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma*rho
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3,5,2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho*sigma
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,4,5,3)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho^-1*sigma*rho
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,2,4)(3,5)
</div>
            </article>
            <p id="QXC">There are alternate ways to create permutation group elements, which can be useful in some situations, but they are not quite as useful in everday use.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma1 = G("(1,3)(2,5,4)")
sigma1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3)(2,5,4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma2 = G([(1,3),(2,5,4)])
sigma2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3)(2,5,4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma3 = G([3,5,1,2,4])
sigma3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3)(2,5,4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma1 == sigma2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma2 == sigma3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma2.cycle_tuples()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(1, 3), (2, 5, 4)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[sigma3(x) for x in G.domain()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3, 5, 1, 2, 4]
</div>
            </article>
            <p id="xeL">The second version of <nemeth class="inline">⠨⠎</nemeth> is a list of “tuples”, which requires a lot of commas and these must be enclosed in a list.  (A tuple of length one must be written like <code class="code-inline tex2jax_ignore">(4,)</code> to distinguish it from using parentheses for grouping, as in <code class="code-inline tex2jax_ignore">5*(4)</code>.)  The third version uses the “bottom-row” of the more cumbersome two-row notation introduced at the beginning of the chapter — it is an ordered list of the <em class="emphasis">output values</em> of the permutation when considered as a function.</p>
            <p id="dlU">So we then see that despite three different input procedures, all the versions of <nemeth class="inline">⠨⠎</nemeth> print the same way, and moreso they are actually equal to each other. (This is a subtle difference — what an object <em class="emphasis">is</em> in Sage versus how an object <em class="emphasis">displays</em> itself.)</p>
            <p id="Jtd">We can be even more careful about the nature of our elements. Notice that once we get Sage started, it can promote the product <nemeth class="inline">⠨⠞⠨⠎</nemeth> into the larger permutation group. We can “promote” elements into larger permutation groups, but it is an error to try to shoe-horn an element into a too-small symmetric group.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = SymmetricGroup(4)
sigma = H("(1,2,3,4)")
G = SymmetricGroup(6)
tau = G("(1,2,3,4,5,6)")
rho = tau * sigma
rho
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3)(2,4,5,6)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Symmetric group of order 4! as a permutation group
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Symmetric group of order 6! as a permutation group
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Symmetric group of order 6! as a permutation group
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau.parent() == rho.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigmaG = G(sigma)
sigmaG.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Symmetric group of order 6! as a permutation group
</div>
            </article>
            <p id="pAm">It is an error to try to coerce a permutation with too many symbols into a permutation group employing too few symbols.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tauH = H(tau)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
ValueError: invalid data to initialize a permutation
</div>
            </article>
            <p id="VHv">Better than working with just elements of the symmetric group, we can create a variety of permutation groups in Sage. Here is a sampling for starters:</p>
            <figure class="table table-like" data-braille="figure-like" id="RlX">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">5.5.1<span class="period">.</span></span><span class="space"> </span>Some Sage permutation groups</figcaption>
              <table>
                <tr>
                  <td class="l m b2 r0 l0 t2 lines">Sage Command</td>
                  <td class="l m b2 r0 l0 t2 lines" data-braille="last-cell">Description</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">SymmetricGroup(n)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Permutations on <i class="one-letter">n</i> symbols, <nemeth class="inline">⠝⠯</nemeth> elements</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">DihedralGroup(n)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Symmetries of an <i class="one-letter">n</i>-gon, <nemeth class="inline">⠼⠆⠝</nemeth> elements.</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(n)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Rotations of an <i class="one-letter">n</i>-gon (no flips), <i class="one-letter">n</i> elements</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">AlternatingGroup(n)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Alternating group on <i class="one-letter">n</i> symbols, <nemeth class="inline">⠝⠖⠀⠸⠌⠼⠆</nemeth> elements</td>
                </tr>
                <tr>
                  <td class="l m b2 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">KleinFourGroup()</code>
                  </td>
                  <td class="l m b2 r0 l0 t0 lines" data-braille="last-cell">A non-cyclic group of order 4</td>
                </tr>
              </table>
            </figure>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
            <p id="BOE">You can also locate Sage permutation groups with the <code class="code-inline tex2jax_ignore">groups</code> catalog. In the next cell place your cursor right after the final dot and hit the tab-key. You will get a list of methods you can use to create permutation groups. As always, place a question-mark after a method and hit the tab-key to get online documentation of a method.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">groups.permutation.
</div>
            </article>
          </section>
          <section class="subsection" id="ROn">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.5.2</span> <span class="title">Properties of Permutation Elements</span></div>
            <p id="hVN">Sometimes it is easier to grab an element out of a list of elements of a permutation group, and then it is already attached to a parent and there is no need for any coercion. In the following, <code class="code-inline tex2jax_ignore">rotate</code> and <code class="code-inline tex2jax_ignore">flip</code> are automatically elements of <code class="code-inline tex2jax_ignore">G</code> because of the way we procured them.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D = DihedralGroup(5)
elements = D.list(); elements
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,5,4,3,2), (1,4,2,5,3), (1,3,5,2,4), (1,2,3,4,5), (2,5)(3,4),
 (1,5)(2,4), (1,4)(2,3), (1,3)(4,5), (1,2)(3,5)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rotate = elements[4]
flip = elements[7]
flip*rotate == rotate* flip
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="OcW">So we see from this final statement that the group of symmetries of a pentagon is not abelian. But there is an easier way.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D = DihedralGroup(5)
D.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="ukf">There are many more methods you can use for both permutation groups and their individual elements. Use the blank compute cell below to create a permutation group (any one you like) and an element of a permutation group (any one you like). Then use tab-completion to see all the methods available for an element, or for a group (name, period, tab-key). Some names you may recognize, some we will learn about in the coming chapters, some are highly-specialized research tools you can use when you write your Ph.D. thesis in group theory. For any of these methods, remember that you can type the name, followed by a question mark, to see documentation and examples. <em class="emphasis">Experiment and explore</em> — it is really hard to break anything.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
            <p id="aro">Here are some selected examples of various methods available.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4 = AlternatingGroup(4)
A4.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">12
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4.is_finite()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4.is_cyclic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma = A4("(1,2,4)")
sigma^-1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,4,2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <p id="Gyx">A very useful method when studying the alternating group is the permutation group element method <code class="code-inline tex2jax_ignore">.sign()</code>. It will return <code class="code-inline tex2jax_ignore">1</code> if a permutation is even and <code class="code-inline tex2jax_ignore">-1</code> if a permutation is odd.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(3)
sigma = G("(1,2)")
tau = G("(1,3)")
rho = sigma*tau
sigma.sign()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho.sign()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <p id="mFG">We can create subgroups by giving the main group a list of “generators.” These elements serve to “generate” a subgroup — imagine multiplying these elements (and their inverses) together over and over, creating new elements that must also be in the subgroup and also become involved in new products, until you see no new elements. Now that definition ends with a horribly imprecise statement, but it should suffice for now. A better definition is that the subgroup generated by the elements is the smallest subgroup of the main group that contains all the generators — which is fine if you know what all the subgroups might be.</p>
            <p id="SMP">With a single generator, the repeated products just become powers of the lone generator. The subgroup generated then is cyclic. With two (or more) generators, especially in a non-abelian group, the situation can be much, much more complicated. So let us begin with just a single generator. But do not forget to put it in a list anyway.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4 = AlternatingGroup(4)
sigma = A4("(1,2,4)")
sg = A4.subgroup([sigma])
sg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by [(1,2,4)]
of (Alternating group of order 4!/2 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,2,4), (1,4,2)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.is_cyclic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.is_subgroup(A4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="yTY">We can now redo the example from the very beginning of this chapter. We translate to elements to cycle notation, construct the subgroup from two generators (the subgroup is not cyclic), and since the subgroup is abelian, we do not have to view Sage's Cayley table as a diagonal reflection of the table in the example.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(5)
sigma = G("(4,5)")
tau = G("(1,3)")
H = G.subgroup([sigma, tau])
H.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (4,5), (1,3), (1,3)(4,5)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">text_names = ['id', 'sigma', 'tau', 'mu']
H.cayley_table(names=text_names)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">    *     id sigma   tau    mu
     +------------------------
   id|    id sigma   tau    mu
sigma| sigma    id    mu   tau
  tau|   tau    mu    id sigma
   mu|    mu   tau sigma    id
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="xVw">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.5.3</span> <span class="title">Motion Group of a Cube</span></div>
            <p id="fbh">We could mimic the example in the text and create elements of <nemeth class="inline">⠠⠎⠲</nemeth> as permutations of the diagonals. A more obvious, but less insightful, construction is to view the 8 corners of the cube as the items being permuted. Then some obvious symmetries of the cube come from running an axis through the center of a side, through to the center of the opposite side, with quarter-turns or half-turns about these axes forming symmetries. With three such axes and four rotations per axis, we get 12 symmetries, except we have counted the identity permutation two extra times.</p>
            <p id="Liq">Label the four corners of the square top with <nemeth class="inline">⠼⠂</nemeth> through <nemeth class="inline">⠼⠲</nemeth>, placing <nemeth class="inline">⠼⠂</nemeth> in the left-front corner, and following around clockwise when viewed from above. Use <nemeth class="inline">⠼⠢</nemeth> through <nemeth class="inline">⠼⠦</nemeth> for the bottom square's corner, so that <nemeth class="inline">⠼⠢</nemeth> is directly below <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠖</nemeth> below <nemeth class="inline">⠼⠆</nemeth>, etc. We will use quarter-turns, clockwise, around each axis, when viewed from above, the front, and the right.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(8)
above = G("(1,2,3,4)(5,6,7,8)")
front = G("(1,4,8,5)(2,3,7,6)")
right = G("(1,2,6,5)(3,7,8,4)")
cube = G.subgroup([above, front, right])
cube.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">24
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">cube.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,3)(2,4)(5,7)(6,8), (1,6)(2,5)(3,8)(4,7), (1,8)(2,7)(3,6)(4,5),
 (1,4,3,2)(5,8,7,6), (1,2,3,4)(5,6,7,8), (1,5)(2,8)(3,7)(4,6),
 (1,7)(2,6)(3,5)(4,8), (2,5,4)(3,6,8), (1,3,8)(2,7,5), (1,6,3)(4,5,7),
 (1,8,6)(2,4,7), (1,4)(2,8)(3,5)(6,7), (1,2,6,5)(3,7,8,4), (1,5,6,2)(3,4,8,7),
 (1,7)(2,3)(4,6)(5,8), (2,4,5)(3,8,6), (1,3,6)(4,7,5), (1,6,8)(2,7,4),
 (1,8,3)(2,5,7), (1,4,8,5)(2,3,7,6), (1,2)(3,5)(4,6)(7,8), (1,5,8,4)(2,6,7,3),
 (1,7)(2,8)(3,4)(5,6)]
</div>
            </article>
            <p id="rpz">Since we know from the discussion in the text that the symmetry group has <nemeth class="inline">⠼⠆⠲</nemeth> elements, we see that our three quarter-turns are sufficient to create every symmetry. This prompts several questions which you can find in Exercise 5.6.4.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="KjO">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">5.6</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="WcH">
            <p id="Rtb">These exercises are designed to help you become familiar with permutation groups in Sage.</p>
          </section>
          <article class="exercise exercise-like" id="CjQ">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Kyw">Create the full symmetric group <nemeth class="inline">⠠⠎⠂⠴</nemeth> with the command <code class="code-inline tex2jax_ignore">G = SymmetricGroup(10)</code>.</p>
          </article>
          <article class="exercise exercise-like" id="iqZ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="qFF">Create elements of <code class="code-inline tex2jax_ignore">G</code> with the following (varying) syntax. Pay attention to commas, quotes, brackets, parentheses. The first two use a string (characters) as input, mimicking the way we write permuations (but with commas). The second two use a list of tuples.</p>
            <ul class="outerlist">
              <li>• <p id="cJe"><code class="code-inline tex2jax_ignore">a = G("(5,7,2,9,3,1,8)")</code></p></li>
              <li>• <p id="IQn"><code class="code-inline tex2jax_ignore">b = G("(1,3)(4,5)")</code></p></li>
              <li>• <p id="oXw"><code class="code-inline tex2jax_ignore">c = G([(1,2),(3,4)])</code></p></li>
              <li>• <p id="VeF"><code class="code-inline tex2jax_ignore">d = G([(1,3),(2,5,8),(4,6,7,9,10)])</code></p></li>
            </ul>
            <ol class="outerlist">
              <li>a. <p id="BlO">Compute <nemeth class="inline">⠁⠘⠒</nemeth>, <nemeth class="inline">⠃⠉</nemeth>, <nemeth class="inline">⠁⠙⠘⠤⠼⠂⠐⠃</nemeth>.</p></li>
              <li>b. <p id="hsX">Compute the orders of each of these four individual elements (<code class="code-inline tex2jax_ignore">a</code> through <code class="code-inline tex2jax_ignore">d</code>) using a single permutation group element method.</p></li>
              <li>c. <p id="NAg">Use the permutation group element method <code class="code-inline tex2jax_ignore">.sign()</code> to determine if <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠠⠀⠙</nemeth> are even or odd permutations.</p></li>
              <li>d. <p id="tHp">Create two cyclic subgroups of <i class="one-letter">G</i> with the commands:</p><ul class="outerlist"><li>• <p id="qMJ"><code class="code-inline tex2jax_ignore">H = G.subgroup([a])</code></p></li><li>• <p id="ZOy"><code class="code-inline tex2jax_ignore">K = G.subgroup([d])</code></p></li></ul><p data-braille="continuation">List, and study, the elements of each subgroup. Without using Sage, list the order of each subgroup of <i class="one-letter">K</i>. Then use Sage to construct a subgroup of <i class="one-letter">K</i> with order 10.</p></li>
              <li>e. <p id="FVH">More complicated subgroups can be formed by using two or more generators. Construct a subgroup <i class="one-letter">L</i> of <i class="one-letter">G</i> with the command <code class="code-inline tex2jax_ignore">L = G.subgroup([b,c])</code>. Compute the order of <i class="one-letter">L</i> and list all of the elements of <i class="one-letter">L</i>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Oyi">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="WMO">Construct the group of symmetries of the tetrahedron (also the alternating group on 4 symbols, <nemeth class="inline">⠠⠁⠲</nemeth>) with the command <code class="code-inline tex2jax_ignore">A=AlternatingGroup(4)</code>. Using tools such as orders of elements, and generators of subgroups, see if you can find <em class="emphasis">all of</em> the subgroups of <nemeth class="inline">⠠⠁⠲</nemeth> (each one exactly once). Do this without using the <code class="code-inline tex2jax_ignore">.subgroups()</code> method to justify the correctness of your answer (though it might be a convenient way to check your work).</p>
            <p id="CTX">Provide a nice summary as your answer—not just piles of output. So use Sage as a tool, as needed, but basically your answer will be a concise paragraph and/or table. This is the one part of this assignment without clear, precise directions, so spend some time on this portion to get it right. Hint: no subgroup of <nemeth class="inline">⠠⠁⠲</nemeth> requires more than two generators.</p>
          </article>
          <article class="exercise exercise-like" id="uFr">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="jbg">The subsection Motion Group of a Cube describes the <nemeth class="inline">⠼⠆⠲</nemeth> symmetries of a cube as a subgroup of the symmetric group <nemeth class="inline">⠠⠎⠦</nemeth> generated by three quarter-turns. Answer the following questions about this symmetry group.</p>
            <ol class="outerlist">
              <li>a. <p id="mcQ">From the list of elements of the group, can you locate the ten rotations about axes? (Hint: the identity is easy, the other nine never send any symbol to itself.)</p></li>
              <li>b. <p id="SjZ">Can you identify the six symmetries that are a transposition of diagonals? (Hint: <code class="code-inline tex2jax_ignore">[g for g in cube if g.order() == 2]</code> is a good preliminary filter.)</p></li>
              <li>c. <p id="yri">Verify that any two of the quarter-turns (<code class="code-inline tex2jax_ignore">above</code>, <code class="code-inline tex2jax_ignore">front</code>, <code class="code-inline tex2jax_ignore">right</code>) are sufficient to generate the whole group. How do you know each pair generates the entire group?</p></li>
              <li>d. <p id="eyr">Can you express one of the diagonal transpositions as a product of quarter-turns? This can be a notoriously difficult problem, especially for software. It is known as the “word problem.”</p></li>
              <li>e. <p id="KFA">Number the six faces of the cube with the numbers <nemeth class="inline">⠼⠂</nemeth> through <nemeth class="inline">⠼⠖</nemeth> (any way you like). Now consider the same three symmetries we used before (quarter-turns about face-to-face axes), but now view them as permutations of the six faces. In this way, we construct each symmetry as an element of <nemeth class="inline">⠠⠎⠖</nemeth>. Verify that the subgroup generated by these symmetries is the whole symmetry group of the cube. Again, rather than using three generators, try using just two.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="aMA">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Pip">Save your work, and then see if you can crash your Sage session by building the subgroup of <nemeth class="inline">⠠⠎⠂⠴</nemeth> generated by the elements <code class="code-inline tex2jax_ignore">b</code> and <code class="code-inline tex2jax_ignore">d</code> of orders <nemeth class="inline">⠼⠆</nemeth> and <nemeth class="inline">⠼⠒⠴</nemeth> from above. <em class="emphasis">Do not submit</em> the list of elements of <code class="code-inline tex2jax_ignore">N</code> as part of your submitted worksheet.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N = G.subgroup([b,d])
N.list()
</div>
            </article>
            <p id="vpy">What is the order of <i class="one-letter">N</i>?</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="Uzy">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">6</span> <span class="title">Cosets and Lagrange's Theorem</span></div>
        <section class="introduction" id="EVb">
          <p id="QGQ">Lagrange's Theorem, one of the most important results in finite group theory, states that the order of a subgroup must divide the order of the group. This theorem provides a powerful tool for analyzing finite groups; it gives us an idea of exactly what type of subgroups we might expect a finite group to possess. Central to understanding Lagranges's Theorem is the notion of a coset.</p>
        </section>
        <section class="section" id="xMb">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">6.1</span> <span class="title">Cosets</span></div>
          <p id="oOb">Let <i class="one-letter">G</i> be a group and <i class="one-letter">H</i> a subgroup of <i class="one-letter">G</i>. Define a <dfn class="terminology">left coset</dfn>  of <i class="one-letter">H</i> with <dfn class="terminology">representative</dfn> <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> to be the set</p>
          <div class="displaymath">
            <nemeth>⠛⠠⠓⠀⠨⠅⠀⠨⠷⠛⠓⠒⠀⠓⠀⠈⠑⠀⠠⠓⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">. <dfn class="terminology">Right cosets</dfn>  can be defined similarly by</p>
          <div class="displaymath">
            <nemeth>⠠⠓⠛⠀⠨⠅⠀⠨⠷⠓⠛⠒⠀⠓⠀⠈⠑⠀⠠⠓⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">. If left and right cosets coincide or if it is clear from the context to which type of coset that we are referring, we will use the word <em class="emphasis">coset</em> without specifying left or right.</p>
          <article class="example example-like" data-braille="example-like" id="UdZ">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">6.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="zIF">Let <i class="one-letter">H</i> be the subgroup of <nemeth class="inline">⠸⠠⠵⠖</nemeth> consisting of the elements <nemeth class="inline">⠼⠴</nemeth> and <nemeth class="inline">⠼⠒</nemeth>. The cosets are</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠬⠠⠓⠀⠨⠅⠀⠼⠒⠬⠠⠓⠀⠨⠅⠀⠨⠷⠼⠴⠠⠀⠼⠒⠨⠾⠀⠼⠂⠬⠠⠓⠀⠨⠅⠀⠼⠲⠬⠠⠓⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠲⠨⠾⠀⠼⠆⠬⠠⠓⠀⠨⠅⠀⠼⠢⠬⠠⠓⠀⠨⠅⠀⠨⠷⠼⠆⠠⠀⠼⠢⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. We will always write the cosets of subgroups of <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> with the additive notation we have used for cosets here. In a commutative group, left and right cosets are always identical.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="Ali">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">6.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="fPO">Let <i class="one-letter">H</i> be the subgroup of <nemeth class="inline">⠠⠎⠒</nemeth> defined by the permutations <nemeth class="inline">⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth>. The left cosets of <i class="one-letter">H</i> are</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠂⠾⠠⠓⠀⠨⠅⠀⠷⠼⠂⠆⠒⠾⠠⠓⠀⠨⠅⠀⠷⠼⠂⠒⠆⠾⠠⠓⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾⠀⠷⠼⠂⠆⠾⠠⠓⠀⠨⠅⠀⠷⠼⠂⠒⠾⠠⠓⠀⠨⠅⠀⠷⠼⠆⠒⠾⠠⠓⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠆⠒⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. The right cosets of <i class="one-letter">H</i> are exactly the same as the left cosets:</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠷⠼⠂⠾⠀⠨⠅⠀⠠⠓⠷⠼⠂⠆⠒⠾⠀⠨⠅⠀⠠⠓⠷⠼⠂⠒⠆⠾⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾⠀⠠⠓⠷⠼⠂⠆⠾⠀⠨⠅⠀⠠⠓⠷⠼⠂⠒⠾⠀⠨⠅⠀⠠⠓⠷⠼⠆⠒⠾⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠆⠒⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="LWX">It is not always the case that a left coset is the same as a right coset. Let <i class="one-letter">K</i> be the subgroup of <nemeth class="inline">⠠⠎⠒</nemeth> defined by the permutations <nemeth class="inline">⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠨⠾</nemeth>. Then the left cosets of <i class="one-letter">K</i> are</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠂⠾⠠⠅⠀⠨⠅⠀⠷⠼⠂⠆⠾⠠⠅⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠨⠾⠀⠷⠼⠂⠒⠾⠠⠅⠀⠨⠅⠀⠷⠼⠂⠆⠒⠾⠠⠅⠀⠨⠅⠀⠨⠷⠷⠼⠂⠒⠾⠠⠀⠷⠼⠂⠆⠒⠾⠨⠾⠀⠷⠼⠆⠒⠾⠠⠅⠀⠨⠅⠀⠷⠼⠂⠒⠆⠾⠠⠅⠀⠨⠅⠀⠨⠷⠷⠼⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾⠆</nemeth>
            </div>
            <p data-braille="continuation">however, the right cosets of <i class="one-letter">K</i> are</p>
            <div class="displaymath">
              <nemeth>⠠⠅⠷⠼⠂⠾⠀⠨⠅⠀⠠⠅⠷⠼⠂⠆⠾⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠨⠾⠀⠠⠅⠷⠼⠂⠒⠾⠀⠨⠅⠀⠠⠅⠷⠼⠂⠒⠆⠾⠀⠨⠅⠀⠨⠷⠷⠼⠂⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾⠀⠠⠅⠷⠼⠆⠒⠾⠀⠨⠅⠀⠠⠅⠷⠼⠂⠆⠒⠾⠀⠨⠅⠀⠨⠷⠷⠼⠆⠒⠾⠠⠀⠷⠼⠂⠆⠒⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="UVk">The following lemma is quite useful when dealing with cosets. (We leave its proof as an exercise.)</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="vBp">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">6.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="bfV">Let <i class="one-letter">H</i> be a subgroup of a group <i class="one-letter">G</i> and suppose that <nemeth class="inline">⠛⠂⠠⠀⠛⠆⠀⠈⠑⠀⠠⠛</nemeth>. The following conditions are equivalent.</p>
            <ol class="outerlist">
              <li>1. <p id="dMg"><nemeth class="inline">⠛⠂⠠⠓⠀⠨⠅⠀⠛⠆⠠⠓</nemeth>;</p></li>
              <li>2. <p id="JTp"><nemeth class="inline">⠠⠓⠛⠂⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠓⠛⠆⠘⠤⠼⠂</nemeth>;</p></li>
              <li>3. <p id="qay"><nemeth class="inline">⠛⠂⠠⠓⠀⠸⠐⠅⠀⠛⠆⠠⠓</nemeth>;</p></li>
              <li>4. <p id="WhH"><nemeth class="inline">⠛⠆⠀⠈⠑⠀⠛⠂⠠⠓</nemeth>;</p></li>
              <li>5. <p id="CoQ"><nemeth class="inline">⠛⠂⠘⠤⠼⠂⠐⠛⠆⠀⠈⠑⠀⠠⠓</nemeth>.</p></li>
            </ol>
          </article>
          <p id="Bct">In all of our examples the cosets of a subgroup <i class="one-letter">H</i> partition the larger group <i class="one-letter">G</i>. The following theorem proclaims that this will always be the case.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="SoM">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">6.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="xTs">Let <i class="one-letter">H</i> be a subgroup of a group <i class="one-letter">G</i>. Then the left cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i> partition <i class="one-letter">G</i>. That is, the group <i class="one-letter">G</i> is the disjoint union of the left cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="xqC">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="ozG">Let <nemeth class="inline">⠛⠂⠠⠓</nemeth> and <nemeth class="inline">⠛⠆⠠⠓</nemeth> be two cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i>. We must show that either <nemeth class="inline">⠛⠂⠠⠓⠨⠩⠛⠆⠠⠓⠀⠨⠅⠀⠸⠴</nemeth> or <nemeth class="inline">⠛⠂⠠⠓⠀⠨⠅⠀⠛⠆⠠⠓</nemeth>. Suppose that <nemeth class="inline">⠛⠂⠠⠓⠨⠩⠛⠆⠠⠓⠀⠌⠨⠅⠀⠸⠴</nemeth> and <nemeth class="inline">⠁⠀⠈⠑⠀⠛⠂⠠⠓⠨⠩⠛⠆⠠⠓</nemeth>. Then by the definition of a left coset, <nemeth class="inline">⠁⠀⠨⠅⠀⠛⠂⠓⠂⠀⠨⠅⠀⠛⠆⠓⠆</nemeth> for some elements <nemeth class="inline">⠓⠂</nemeth> and <nemeth class="inline">⠓⠆</nemeth> in <i class="one-letter">H</i>. Hence, <nemeth class="inline">⠛⠂⠀⠨⠅⠀⠛⠆⠓⠆⠓⠂⠘⠤⠼⠂</nemeth> or <nemeth class="inline">⠛⠂⠀⠈⠑⠀⠛⠆⠠⠓</nemeth>. By Lemma 6.1.3, <nemeth class="inline">⠛⠂⠠⠓⠀⠨⠅⠀⠛⠆⠠⠓</nemeth>.</p>
          </article>
          <article class="remark remark-like" data-braille="remark-like" id="sGJ">
            <h6 class="heading">
              <span class="type">Remark</span>
              <span class="space"> </span>
              <span class="codenumber">6.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="Esy">There is nothing special in this theorem about left cosets. Right cosets also partition <i class="one-letter">G</i>; the proof of this fact is exactly the same as the proof for left cosets except that all group multiplications are done on the opposite side of <i class="one-letter">H</i>.</p>
          </article>
          <p id="hjC">Let <i class="one-letter">G</i> be a group and <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i>. Define the <dfn class="terminology">index</dfn>  of <i class="one-letter">H</i> in <i class="one-letter">G</i> to be the number of left cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i>. We will denote the index by <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾</nemeth>. </p>
          <article class="example example-like" data-braille="example-like" id="gsr">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">6.1.6</span>
              <span class="period">.</span>
            </h6>
            <p id="seg">Let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠸⠠⠵⠖</nemeth> and <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠴⠠⠀⠼⠒⠨⠾</nemeth>. Then <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾⠀⠨⠅⠀⠼⠒</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="MzA">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">6.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="Ylp">Suppose that <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠎⠒</nemeth>, <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth>, and <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠨⠾</nemeth>. Then <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾⠀⠨⠅⠀⠼⠆</nemeth> and <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠅⠈⠾⠀⠨⠅⠀⠼⠒</nemeth>.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="yvV">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">6.1.8</span>
              <span class="period">.</span>
            </h6>
            <p id="eaB">Let <i class="one-letter">H</i> be a subgroup of a group <i class="one-letter">G</i>. The number of left cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i> is the same as the number of right cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="dxL">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="UGP">Let <nemeth class="inline">⠈⠠⠇⠰⠠⠓</nemeth> and <nemeth class="inline">⠈⠠⠗⠰⠠⠓</nemeth> denote the set of left and right cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i>, respectively.  If we can define a bijective map <nemeth class="inline">⠨⠋⠒⠀⠈⠠⠇⠰⠠⠓⠐⠀⠫⠕⠀⠈⠠⠗⠰⠠⠓⠐</nemeth>, then the theorem will be proved. If <nemeth class="inline">⠛⠠⠓⠀⠈⠑⠀⠈⠠⠇⠰⠠⠓</nemeth>, let <nemeth class="inline">⠋⠷⠛⠠⠓⠾⠀⠨⠅⠀⠠⠓⠛⠘⠤⠼⠂</nemeth>. By Lemma 6.1.3, the map <nemeth class="inline">⠨⠋</nemeth> is well-defined; that is, if <nemeth class="inline">⠛⠂⠠⠓⠀⠨⠅⠀⠛⠆⠠⠓</nemeth>, then <nemeth class="inline">⠠⠓⠛⠂⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠓⠛⠆⠘⠤⠼⠂</nemeth>. To show that <nemeth class="inline">⠨⠋</nemeth> is one-to-one, suppose that</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠛⠂⠘⠤⠼⠂⠐⠀⠨⠅⠀⠋⠷⠛⠂⠠⠓⠾⠀⠨⠅⠀⠋⠷⠛⠆⠠⠓⠾⠀⠨⠅⠀⠠⠓⠛⠆⠘⠤⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">. Again by Lemma 6.1.3, <nemeth class="inline">⠛⠂⠠⠓⠀⠨⠅⠀⠛⠆⠠⠓</nemeth>. The map <nemeth class="inline">⠨⠋</nemeth> is onto since <nemeth class="inline">⠋⠷⠛⠘⠤⠼⠂⠐⠠⠓⠾⠀⠨⠅⠀⠠⠓⠛</nemeth>.</p>
          </article>
        </section>
        <section class="section" id="dTk">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">6.2</span> <span class="title">Lagrange's Theorem</span></div>
          <article class="proposition theorem-like" data-braille="theorem-like" id="jmX">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">6.2.1</span>
              <span class="period">.</span>
            </h6>
            <p id="ORD">Let <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i> with <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and define a map <nemeth class="inline">⠨⠋⠒⠀⠠⠓⠀⠫⠕⠀⠛⠠⠓</nemeth> by <nemeth class="inline">⠋⠷⠓⠾⠀⠨⠅⠀⠛⠓</nemeth>. The map <nemeth class="inline">⠨⠋</nemeth> is bijective; hence, the number of elements in <i class="one-letter">H</i> is the same as the number of elements in <nemeth class="inline">⠛⠠⠓</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="Cav">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="ANY">We first show that the map <nemeth class="inline">⠨⠋</nemeth> is one-to-one. Suppose that <nemeth class="inline">⠋⠷⠓⠂⠾⠀⠨⠅⠀⠋⠷⠓⠆⠾</nemeth> for elements <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>. We must show that <nemeth class="inline">⠓⠂⠀⠨⠅⠀⠓⠆</nemeth>, but <nemeth class="inline">⠋⠷⠓⠂⠾⠀⠨⠅⠀⠛⠓⠂</nemeth> and <nemeth class="inline">⠋⠷⠓⠆⠾⠀⠨⠅⠀⠛⠓⠆</nemeth>. So <nemeth class="inline">⠛⠓⠂⠀⠨⠅⠀⠛⠓⠆</nemeth>, and by left cancellation <nemeth class="inline">⠓⠂⠀⠨⠅⠀⠓⠆</nemeth>. To show that <nemeth class="inline">⠨⠋</nemeth> is onto is easy. By definition every element of <nemeth class="inline">⠛⠠⠓</nemeth> is of the form <nemeth class="inline">⠛⠓</nemeth> for some <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠋⠷⠓⠾⠀⠨⠅⠀⠛⠓</nemeth>.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="eDe">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">6.2.2</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Lagrange.</span>
            </h6>
            <p id="KhK">Let <i class="one-letter">G</i> be a finite group and let <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i>. Then <nemeth class="inline">⠳⠠⠛⠳⠸⠌⠳⠠⠓⠳⠀⠨⠅⠀⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾</nemeth> is the number of distinct left cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i>. In particular, the number of elements in <i class="one-letter">H</i> must divide the number of elements in <i class="one-letter">G</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="JEU">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="gVh">The group <i class="one-letter">G</i> is partitioned into <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾</nemeth> distinct left cosets. Each left coset has <nemeth class="inline">⠳⠠⠓⠳</nemeth> elements; therefore, <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾⠳⠠⠓⠳</nemeth>.</p>
          </article>
          <article class="corollary theorem-like" data-braille="theorem-like" id="bIy">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">6.2.3</span>
              <span class="period">.</span>
            </h6>
            <p id="Hne">Suppose that <i class="one-letter">G</i> is a finite group and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Then the order of <i class="one-letter">g</i> must divide the number of elements in <i class="one-letter">G</i>.</p>
          </article>
          <article class="corollary theorem-like" data-braille="theorem-like" id="HPH">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">6.2.4</span>
              <span class="period">.</span>
            </h6>
            <p id="nun">Let <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠏</nemeth> with <i class="one-letter">p</i> a prime number. Then <i class="one-letter">G</i> is cyclic and any <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠛⠀⠌⠨⠅⠀⠑</nemeth> is a generator.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="OoN">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="Ncq">Let <i class="one-letter">g</i> be in <i class="one-letter">G</i> such that <nemeth class="inline">⠛⠀⠌⠨⠅⠀⠑</nemeth>. Then by Corollary 6.2.3, the order of <i class="one-letter">g</i> must divide the order of the group. Since <nemeth class="inline">⠳⠨⠨⠷⠛⠨⠨⠾⠳⠀⠨⠂⠀⠼⠂</nemeth>, it must be <i class="one-letter">p</i>. Hence, <i class="one-letter">g</i> generates <i class="one-letter">G</i>.</p>
          </article>
          <p id="NqL">Corollary 6.2.4 suggests that groups of prime order <i class="one-letter">p</i> must somehow look like <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p>
          <article class="corollary theorem-like" data-braille="theorem-like" id="nWQ">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">6.2.5</span>
              <span class="period">.</span>
            </h6>
            <p id="TBw">Let <i class="one-letter">H</i> and <i class="one-letter">K</i> be subgroups of a finite group <i class="one-letter">G</i> such that <nemeth class="inline">⠠⠛⠀⠸⠨⠂⠀⠠⠓⠀⠸⠨⠂⠀⠠⠅</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠠⠛⠒⠀⠠⠅⠈⠾⠀⠨⠅⠀⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾⠈⠷⠠⠓⠒⠀⠠⠅⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="uvW">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="tjz">Observe that</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠠⠛⠒⠀⠠⠅⠈⠾⠀⠨⠅⠀⠹⠳⠠⠛⠳⠌⠳⠠⠅⠳⠼⠀⠨⠅⠀⠹⠳⠠⠛⠳⠌⠳⠠⠓⠳⠼⠡⠹⠳⠠⠓⠳⠌⠳⠠⠅⠳⠼⠀⠨⠅⠀⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾⠈⠷⠠⠓⠒⠀⠠⠅⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="remark remark-like" data-braille="remark-like" id="YNS">
            <h6 class="heading">
              <span class="type">Remark</span>
              <span class="space"> </span>
              <span class="codenumber">6.2.6</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">The converse of Lagrange's Theorem is false.</span>
            </h6>
            <p id="kzH">The group <nemeth class="inline">⠠⠁⠲</nemeth> has order <nemeth class="inline">⠼⠂⠆</nemeth>; however, it can be shown that it does not possess a subgroup of order <nemeth class="inline">⠼⠖</nemeth>. According to Lagrange's Theorem, subgroups of a group of order <nemeth class="inline">⠼⠂⠆</nemeth> can have orders of either <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠲</nemeth>, or <nemeth class="inline">⠼⠖</nemeth>. However, we are not guaranteed that subgroups of every possible order exist. To prove that <nemeth class="inline">⠠⠁⠲</nemeth> has no subgroup of order <nemeth class="inline">⠼⠖</nemeth>, we will assume that it does have such a subgroup <i class="one-letter">H</i> and show that a contradiction must occur. Since <nemeth class="inline">⠠⠁⠲</nemeth> contains eight <nemeth class="inline">⠼⠒</nemeth>-cycles, we know that <i class="one-letter">H</i> must contain a <nemeth class="inline">⠼⠒</nemeth>-cycle. We will show that if <i class="one-letter">H</i> contains one <nemeth class="inline">⠼⠒</nemeth>-cycle, then it must contain more than <nemeth class="inline">⠼⠖</nemeth> elements.</p>
          </article>
          <article class="proposition theorem-like" data-braille="theorem-like" id="Pug">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">6.2.7</span>
              <span class="period">.</span>
            </h6>
            <p id="uYM">The group <nemeth class="inline">⠠⠁⠲</nemeth> has no subgroup of order <nemeth class="inline">⠼⠖</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="ihE">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="ZqI">Since <nemeth class="inline">⠈⠷⠠⠁⠲⠒⠀⠠⠓⠈⠾⠀⠨⠅⠀⠼⠆</nemeth>, there are only two cosets of <i class="one-letter">H</i> in <nemeth class="inline">⠠⠁⠲</nemeth>. Inasmuch as one of the cosets is <i class="one-letter">H</i> itself, right and left cosets must coincide; therefore, <nemeth class="inline">⠛⠠⠓⠀⠨⠅⠀⠠⠓⠛</nemeth> or <nemeth class="inline">⠛⠠⠓⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠓</nemeth> for every <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠁⠲</nemeth>. Since there are eight <nemeth class="inline">⠼⠒</nemeth>-cycles in <nemeth class="inline">⠠⠁⠲</nemeth>, at least one <nemeth class="inline">⠼⠒</nemeth>-cycle must be in <i class="one-letter">H</i>. Without loss of generality, assume that <nemeth class="inline">⠷⠼⠂⠆⠒⠾</nemeth> is in <i class="one-letter">H</i>. Then <nemeth class="inline">⠷⠼⠂⠆⠒⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠼⠂⠒⠆⠾</nemeth> must also be in <i class="one-letter">H</i>. Since <nemeth class="inline">⠛⠓⠛⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠁⠲</nemeth> and all <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠂⠆⠲⠾⠷⠂⠆⠒⠾⠷⠂⠆⠲⠾⠘⠤⠼⠂⠀⠀⠨⠅⠀⠷⠼⠂⠆⠲⠾⠷⠂⠆⠒⠾⠷⠂⠲⠆⠾⠀⠨⠅⠀⠷⠼⠆⠲⠒⠾⠀⠷⠆⠲⠒⠾⠷⠂⠆⠒⠾⠷⠆⠲⠒⠾⠘⠤⠼⠂⠀⠀⠨⠅⠀⠷⠼⠆⠲⠒⠾⠷⠂⠆⠒⠾⠷⠆⠒⠲⠾⠀⠨⠅⠀⠷⠼⠂⠲⠆⠾</nemeth>
            </div>
            <p data-braille="continuation">we can conclude that <i class="one-letter">H</i> must have at least seven elements</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠠⠀⠷⠼⠆⠲⠒⠾⠠⠀⠷⠼⠆⠲⠒⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠼⠆⠒⠲⠾⠠⠀⠷⠼⠂⠲⠆⠾⠠⠀⠷⠼⠂⠲⠆⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠼⠂⠆⠲⠾</nemeth>
            </div>
            <p data-braille="continuation">. Therefore, <nemeth class="inline">⠠⠁⠲</nemeth> has no subgroup of order <nemeth class="inline">⠼⠖</nemeth>.</p>
          </article>
          <p id="txU">In fact, we can say more about when two cycles have the same length.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="KKn">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">6.2.8</span>
              <span class="period">.</span>
            </h6>
            <p id="qoT">Two cycles <nemeth class="inline">⠨⠞</nemeth> and <nemeth class="inline">⠨⠍</nemeth> in <nemeth class="inline">⠠⠎⠰⠝</nemeth> have the same length if and only if there exists a <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> such that <nemeth class="inline">⠨⠍⠀⠨⠅⠀⠨⠎⠨⠞⠨⠎⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="pMd">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="FxR">Suppose that</p>
            <div class="displaymath">
              <nemeth>⠨⠞⠀⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾⠀⠨⠍⠀⠀⠨⠅⠀⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠅⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">. Define <nemeth class="inline">⠨⠎</nemeth> to be the permutation</p>
            <div class="displaymath">
              <nemeth>⠎⠷⠁⠂⠾⠀⠀⠨⠅⠀⠃⠂⠀⠎⠷⠁⠆⠾⠀⠀⠨⠅⠀⠃⠆⠀⠀⠀⠣⠄⠄⠄⠀⠎⠷⠁⠰⠅⠐⠾⠀⠀⠨⠅⠀⠃⠰⠅</nemeth>
            </div>
            <p data-braille="continuation">. Then <nemeth class="inline">⠨⠍⠀⠨⠅⠀⠨⠎⠨⠞⠨⠎⠘⠤⠼⠂</nemeth>.</p>
            <p id="lFa">Conversely, suppose that <nemeth class="inline">⠨⠞⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> is a <i class="one-letter">k</i>-cycle and <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>. If <nemeth class="inline">⠎⠷⠁⠰⠊⠐⠾⠀⠨⠅⠀⠃</nemeth> and <nemeth class="inline">⠎⠷⠁⠰⠷⠊⠍⠕⠙⠀⠅⠾⠬⠂⠐⠾⠀⠨⠅⠀⠃⠄</nemeth>, then <nemeth class="inline">⠍⠷⠃⠾⠀⠨⠅⠀⠃⠄</nemeth>. Hence,</p>
            <div class="displaymath">
              <nemeth>⠨⠍⠀⠨⠅⠀⠷⠎⠷⠁⠂⠾⠠⠀⠎⠷⠁⠆⠾⠠⠀⠄⠄⠄⠀⠠⠀⠎⠷⠁⠰⠅⠐⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">. Since <nemeth class="inline">⠨⠎</nemeth> is one-to-one and onto, <nemeth class="inline">⠨⠍</nemeth> is a cycle of the same length as <nemeth class="inline">⠨⠞</nemeth>.</p>
          </article>
        </section>
        <section class="section" id="Kat">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">6.3</span> <span class="title">Fermat's and Euler's Theorems</span></div>
          <section class="introduction" id="lck">
            <p id="wNZ">The <dfn class="terminology">Euler</dfn> <nemeth class="inline">⠨⠋</nemeth>-<dfn class="terminology">function</dfn> is the map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠝⠀⠫⠕⠀⠸⠠⠝</nemeth> defined by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>, and, for <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth>, <nemeth class="inline">⠋⠷⠝⠾</nemeth> is the number of positive integers <i class="one-letter">m</i> with <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠍⠀⠐⠅⠀⠝</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            <p id="cVi">From Proposition 3.1.4, we know that the order of <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth>, the group of units in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, is <nemeth class="inline">⠋⠷⠝⠾</nemeth>. For example, <nemeth class="inline">⠳⠠⠥⠷⠼⠂⠆⠾⠳⠀⠨⠅⠀⠋⠷⠼⠂⠆⠾⠀⠨⠅⠀⠼⠲</nemeth> since the numbers that are relatively prime to 12 are 1, 5, 7, and 11. For any prime <i class="one-letter">p</i>, <nemeth class="inline">⠋⠷⠏⠾⠀⠨⠅⠀⠏⠤⠂</nemeth>. We state these results in the following theorem.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="qRw">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">6.3.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Wwc">Let <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> be the group of units in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. Then <nemeth class="inline">⠳⠠⠥⠷⠝⠾⠳⠀⠨⠅⠀⠋⠷⠝⠾</nemeth>.</p>
            </article>
            <p id="Jcr">The following theorem is an important result in number theory, due to Leonhard Euler.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="WYF">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">6.3.2</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Euler's Theorem.</span>
              </h6>
              <p id="CDl">Let <i class="one-letter">a</i> and <i class="one-letter">n</i> be integers such that <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠴</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>. Then <nemeth class="inline">⠁⠘⠋⠷⠝⠾⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="VTm">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="RMj">By Theorem 6.3.1 the order of <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> is <nemeth class="inline">⠋⠷⠝⠾</nemeth>. Consequently, <nemeth class="inline">⠁⠘⠋⠷⠝⠾⠐⠀⠨⠅⠀⠼⠂</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠥⠷⠝⠾</nemeth>; or <nemeth class="inline">⠁⠘⠋⠷⠝⠾⠐⠤⠂</nemeth> is divisible by <i class="one-letter">n</i>. Therefore, <nemeth class="inline">⠁⠘⠋⠷⠝⠾⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>.</p>
            </article>
            <p id="pjA">If we consider the special case of Euler's Theorem in which <nemeth class="inline">⠝⠀⠨⠅⠀⠏</nemeth> is prime and recall that <nemeth class="inline">⠋⠷⠏⠾⠀⠨⠅⠀⠏⠤⠂</nemeth>, we obtain the following result, due to Pierre de Fermat. </p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="DfO">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">6.3.3</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Fermat's Little Theorem.</span>
              </h6>
              <p id="iKu">Let <i class="one-letter">p</i> be any prime number and suppose that <nemeth class="inline">⠏⠌⠳⠁</nemeth> (<i class="one-letter">p</i> does not divide <i class="one-letter">a</i>).  Then</p>
              <div class="displaymath">
                <nemeth>⠁⠘⠏⠤⠂⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠏⠾</nemeth>
              </div>
              <p data-braille="continuation">. Furthermore, for any integer <i class="one-letter">b</i>, <nemeth class="inline">⠃⠘⠏⠐⠀⠸⠇⠀⠃⠷⠍⠕⠙⠀⠏⠾</nemeth>.</p>
            </article>
            <article class="paragraphs" id="RES">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="VqJ">Sage can create all the subgroups of a group, so long as the group is not too large. It can also create the cosets of a subgroup.</p>
            </article>
          </section>
          <section class="subsection" id="AGH">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">6.3.1</span> <span class="title">Historical Note</span></div>
            <p id="Owe">Joseph-Louis Lagrange  (1736–1813), born in Turin, Italy, was of French and Italian descent. His talent for mathematics became apparent at an early age. Leonhard Euler  recognized Lagrange's abilities when Lagrange, who was only 19, communicated to Euler some work that he had done in the calculus of variations. That year he was also named a professor at the Royal Artillery School in Turin. At the age of 23 he joined the Berlin Academy. Frederick the Great had written to Lagrange proclaiming that the “greatest king in Europe” should have the “greatest mathematician in Europe” at his court. For 20 years Lagrange held the position vacated by his mentor, Euler. His works include contributions to number theory, group theory, physics and mechanics, the calculus of variations, the theory of equations, and differential equations. Along with Laplace and Lavoisier, Lagrange was one of the people responsible for designing the metric system. During his life Lagrange profoundly influenced the development of mathematics, leaving much to the next generation of mathematicians in the form of examples and new problems to be solved.</p>
          </section>
        </section>
        <section class="reading-questions" id="BUE">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">6.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="AOL">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="FyE">State Lagrange's Theorem in your own words.</p>
          </article>
          <article class="exercise exercise-like" id="gVU">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="lFN">Determine the left cosets of <nemeth class="inline">⠨⠨⠷⠼⠒⠨⠨⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠔</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Ndd">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="RMW">The set <nemeth class="inline">⠨⠷⠷⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠠⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾⠨⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠎⠲</nemeth>. What is its index in <nemeth class="inline">⠠⠎⠲</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="tkm">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="xUf">Suppose <i class="one-letter">G</i> is a group of order 29. Describe <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="Zrv">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ebo">The number <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠂⠒⠶⠔⠴⠔</nemeth> is prime. Explain how to compute <nemeth class="inline">⠼⠢⠶⠘⠂⠒⠶⠔⠴⠔⠐⠷⠍⠕⠙⠀⠂⠒⠶⠔⠴⠔⠾</nemeth> without a calculator.</p>
          </article>
        </section>
        <section class="exercises" id="FqA">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">6.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="WoL">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="aaC">Suppose that <i class="one-letter">G</i> is a finite group with an element <i class="one-letter">g</i> of order <nemeth class="inline">⠼⠢</nemeth> and an element <i class="one-letter">h</i> of order <nemeth class="inline">⠼⠶</nemeth>. Why must <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠂⠱⠀⠼⠒⠢</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="GKo"><span class="type">Hint</span>:<p id="ffU">The order of <i class="one-letter">g</i> and the order <i class="one-letter">h</i> must both divide the order of <i class="one-letter">G</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="CvU">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="GhL">Suppose that <i class="one-letter">G</i> is a finite group with <nemeth class="inline">⠼⠖⠴</nemeth> elements. What are the orders of possible subgroups of <i class="one-letter">G</i>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="SYG"><span class="type">Hint</span>:<p id="Lnd">The possible orders must divide <nemeth class="inline">⠼⠖⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="iDd">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="moU">Prove or disprove: Every subgroup of the integers has finite index.</p>
            <div class="solutions">
              <div class="hint solution-like" id="fmY"><span class="type">Hint</span>:<p id="rum">This is true for every proper nontrivial subgroup.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="OKm">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="Swd">Prove or disprove: Every subgroup of the integers has finite order.</p>
            <div class="solutions">
              <div class="hint solution-like" id="rBq"><span class="type">Hint</span>:<p id="XBv">False.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uRv">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="yDm">List the left and right cosets of the subgroups in each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="ivZ"><nemeth class="inline">⠨⠨⠷⠼⠦⠨⠨⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠲</nemeth></p></li>
              <li>b. <p id="ODi"><nemeth class="inline">⠨⠨⠷⠼⠒⠨⠨⠾</nemeth> in <nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth></p></li>
              <li>c. <p id="uKr"><nemeth class="inline">⠼⠒⠸⠠⠵</nemeth> in <nemeth class="inline">⠸⠠⠵</nemeth></p></li>
              <li>d. <p id="aRA"><nemeth class="inline">⠠⠁⠲</nemeth> in <nemeth class="inline">⠠⠎⠲</nemeth></p></li>
              <li>e. <p id="GYJ"><nemeth class="inline">⠠⠁⠰⠝</nemeth> in <nemeth class="inline">⠠⠎⠰⠝</nemeth></p></li>
              <li>f. <p id="nfS"><nemeth class="inline">⠠⠙⠲</nemeth> in <nemeth class="inline">⠠⠎⠲</nemeth></p></li>
              <li>g. <p id="Tnb"><nemeth class="inline">⠸⠠⠞</nemeth> in <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth></p></li>
              <li>h. <p id="zuk"><nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth> in <nemeth class="inline">⠠⠎⠲</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="DPI"><span class="type">Hint</span>:<p id="jPN">(a) <nemeth class="inline">⠨⠨⠷⠼⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠂⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠆⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠒⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠲⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠢⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠖⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, and <nemeth class="inline">⠼⠶⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>; (c) <nemeth class="inline">⠼⠒⠸⠠⠵</nemeth>, <nemeth class="inline">⠼⠂⠬⠒⠸⠠⠵</nemeth>, and <nemeth class="inline">⠼⠆⠬⠒⠸⠠⠵</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="aYE">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="eKv">Describe the left cosets of <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>. What is the index of <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="HfN">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="KRE">Verify Euler's Theorem for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠢</nemeth> and <nemeth class="inline">⠁⠀⠨⠅⠀⠼⠲</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="wlj"><span class="type">Hint</span>:<p id="PWW"><nemeth class="inline">⠼⠲⠘⠋⠷⠼⠂⠢⠾⠐⠀⠸⠇⠀⠼⠲⠘⠦⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠂⠢⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="nmW">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="qYN">Use Fermat's Little Theorem to show that if <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠲⠝⠬⠒</nemeth> is prime, there is no solution to the equation <nemeth class="inline">⠭⠘⠆⠐⠀⠸⠇⠀⠤⠼⠂⠷⠍⠕⠙⠀⠏⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Tuf">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="XfW">Show that the integers have infinite index in the additive group of rational numbers.</p>
          </article>
          <article class="exercise exercise-like" id="zBo">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="Dnf">Show that the additive group of real numbers has infinite index in the additive group of the complex numbers.</p>
          </article>
          <article class="exercise exercise-like" id="fIx">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="juo">Let <i class="one-letter">H</i> be a subgroup of a group <i class="one-letter">G</i> and suppose that <nemeth class="inline">⠛⠂⠠⠀⠛⠆⠀⠈⠑⠀⠠⠛</nemeth>. Prove that the following conditions are equivalent.</p>
            <ol class="outerlist">
              <li>a. <p id="cGN"><nemeth class="inline">⠛⠂⠠⠓⠀⠨⠅⠀⠛⠆⠠⠓</nemeth></p></li>
              <li>b. <p id="INW"><nemeth class="inline">⠠⠓⠛⠂⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠓⠛⠆⠘⠤⠼⠂</nemeth></p></li>
              <li>c. <p id="oVf"><nemeth class="inline">⠛⠂⠠⠓⠀⠸⠐⠅⠀⠛⠆⠠⠓</nemeth></p></li>
              <li>d. <p id="Vco"><nemeth class="inline">⠛⠆⠀⠈⠑⠀⠛⠂⠠⠓</nemeth></p></li>
              <li>e. <p id="Bjx"><nemeth class="inline">⠛⠂⠘⠤⠼⠂⠐⠛⠆⠀⠈⠑⠀⠠⠓</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="LPG">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="PBx">If <nemeth class="inline">⠛⠓⠛⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth>, show that right cosets are identical to left cosets. That is, show that <nemeth class="inline">⠛⠠⠓⠀⠨⠅⠀⠠⠓⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="hcl"><span class="type">Hint</span>:<p id="wef">Let <nemeth class="inline">⠛⠂⠀⠈⠑⠀⠛⠠⠓</nemeth>. Show that <nemeth class="inline">⠛⠂⠀⠈⠑⠀⠠⠓⠛</nemeth> and thus <nemeth class="inline">⠛⠠⠓⠀⠸⠐⠅⠀⠠⠓⠛</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="rWP">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="vIG">What fails in the proof of Theorem 6.1.8 if <nemeth class="inline">⠨⠋⠒⠀⠈⠠⠇⠰⠠⠓⠐⠀⠫⠕⠀⠈⠠⠗⠰⠠⠓⠐</nemeth> is defined by <nemeth class="inline">⠋⠷⠛⠠⠓⠾⠀⠨⠅⠀⠠⠓⠛</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="YdY">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="bPP">Suppose that <nemeth class="inline">⠛⠘⠝⠐⠀⠨⠅⠀⠑</nemeth>. Show that the order of <i class="one-letter">g</i> divides <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="Elh">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="HWY">The <dfn class="terminology">cycle structure</dfn> of a permutation <nemeth class="inline">⠨⠎</nemeth> is defined as the unordered list of the sizes of the cycles in the cycle decomposition <nemeth class="inline">⠨⠎</nemeth>. For example, the permutation <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠷⠼⠂⠆⠾⠷⠒⠲⠢⠾⠷⠶⠦⠾⠷⠔⠾</nemeth> has cycle structure <nemeth class="inline">⠷⠼⠆⠠⠀⠼⠒⠠⠀⠼⠆⠠⠀⠼⠂⠾</nemeth> which can also be written as <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠆⠠⠀⠼⠒⠾</nemeth>.</p>
            <p id="p-1081">Show that any two permutations <nemeth class="inline">⠨⠁⠠⠀⠨⠃⠀⠈⠑⠀⠠⠎⠰⠝⠐</nemeth> have the same cycle structure if and only if there exists a permutation <nemeth class="inline">⠨⠛</nemeth> such that <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠨⠛⠨⠁⠨⠛⠘⠤⠼⠂</nemeth>. If <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠨⠛⠨⠁⠨⠛⠘⠤⠼⠂</nemeth> for some <nemeth class="inline">⠨⠛⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>, then <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> are <dfn class="terminology">conjugate</dfn>.</p>
          </article>
          <article class="exercise exercise-like" id="ksq">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="oeh">If <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠼⠆⠝</nemeth>, prove that the number of elements of order <nemeth class="inline">⠼⠆</nemeth> is odd. Use this result to show that <i class="one-letter">G</i> must contain a subgroup of order 2.</p>
          </article>
          <article class="exercise exercise-like" id="Qzz">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="Ulq">Suppose that <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾⠀⠨⠅⠀⠼⠆</nemeth>. If <i class="one-letter">a</i> and <i class="one-letter">b</i> are not in <i class="one-letter">H</i>, show that <nemeth class="inline">⠁⠃⠀⠈⠑⠀⠠⠓</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="wGI">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="Asz">If <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠓⠈⠾⠀⠨⠅⠀⠼⠆</nemeth>, prove that <nemeth class="inline">⠛⠠⠓⠀⠨⠅⠀⠠⠓⠛</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="cNR">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="gzI">Let <i class="one-letter">H</i> and <i class="one-letter">K</i> be subgroups of a group <i class="one-letter">G</i>. Prove that <nemeth class="inline">⠛⠠⠓⠨⠩⠛⠠⠅</nemeth> is a coset of <nemeth class="inline">⠠⠓⠨⠩⠠⠅</nemeth> in <i class="one-letter">G</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ehF"><span class="type">Hint</span>:<p id="clo">Show that <nemeth class="inline">⠛⠷⠠⠓⠨⠩⠠⠅⠾⠀⠨⠅⠀⠛⠠⠓⠨⠩⠛⠠⠅</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="IVa">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="MGR">Let <i class="one-letter">H</i> and <i class="one-letter">K</i> be subgroups of a group <i class="one-letter">G</i>. Define a relation <nemeth class="inline">⠈⠱</nemeth> on <i class="one-letter">G</i> by <nemeth class="inline">⠁⠈⠱⠃</nemeth> if there exists an <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and a <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠅</nemeth> such that <nemeth class="inline">⠓⠁⠅⠀⠨⠅⠀⠃</nemeth>. Show that this relation is an equivalence relation. The corresponding equivalence classes are called <dfn class="terminology">double cosets</dfn>. Compute the double cosets of <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth> in <nemeth class="inline">⠠⠁⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="pcj">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="sOa">Let <i class="one-letter">G</i> be a cyclic group of order <i class="one-letter">n</i>. Show that there are exactly <nemeth class="inline">⠋⠷⠝⠾</nemeth> generators for <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="Vjs">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="YVj">Let <nemeth class="inline">⠝⠀⠨⠅⠀⠏⠂⠘⠑⠂⠐⠏⠆⠘⠑⠆⠐⠀⠄⠄⠄⠀⠏⠰⠅⠘⠑⠘⠰⠅⠘</nemeth>, where <nemeth class="inline">⠏⠂⠠⠀⠏⠆⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠅⠐</nemeth> are distinct primes. Prove that</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠝⠾⠀⠨⠅⠀⠝⠷⠂⠤⠹⠂⠌⠏⠂⠼⠾⠷⠂⠤⠹⠂⠌⠏⠆⠼⠾⠀⠄⠄⠄⠀⠷⠼⠂⠤⠹⠂⠌⠏⠰⠅⠐⠼⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <div class="solutions">
              <div class="hint solution-like" id="CKp"><span class="type">Hint</span>:<p id="Isx">If <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠋⠷⠍⠝⠾⠀⠨⠅⠀⠋⠷⠍⠾⠋⠷⠝⠾</nemeth> (Exercise 2.4.26 in Chapter 2).</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="BqB">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="Fcs">Show that</p>
            <div class="displaymath">
              <nemeth>⠝⠀⠨⠅⠀⠐⠨⠠⠎⠩⠙⠳⠝⠻⠋⠷⠙⠾</nemeth>
            </div>
            <p data-braille="continuation">for all positive integers <i class="one-letter">n</i>.</p>
          </article>
        </section>
        <section class="section" id="qhC">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">6.6</span> <span class="title">Sage</span></div>
          <section class="introduction" id="Rjt">
            <p id="BxS">Sage can create all of the cosets of a subgroup, and all of the subgroups of a group. While these methods can be somewhat slow, they are in many, many ways much better than experimenting with pencil and paper, and can greatly assist us in understanding the structure of finite groups.</p>
          </section>
          <section class="subsection" id="gNQ">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">6.6.1</span> <span class="title">Cosets</span></div>
            <p id="uDn">Sage will create all the right (or left) cosets of a subgroup. Written mathematically, cosets are sets, and the order of the elements within the set is irrelevant. With Sage, lists are more natural, and here it is to our advantage.</p>
            <p id="aKw">Sage creates the cosets of a subgroup as a list of lists. Each inner list is a single coset. The first coset is always the coset that is the subgroup itself, and the first element of this coset is the identity. Each of the other cosets can be construed to have their first element as their representative, and if you use this element as the representative, the elements of the coset are in the same order they would be created by multiplying this representative by the elements of the first coset (the subgroup).</p>
            <p id="GRF">The keyword <code class="code-inline tex2jax_ignore">side</code> can be <code class="code-inline tex2jax_ignore">'right'</code> or <code class="code-inline tex2jax_ignore">'left'</code>, and if not given, then the default is right cosets. The options refer to which side of the product has the representative. Notice that now Sage's results will be “backwards” compared with the text. Here is Example 6.1.2 reprised, but in a slightly different order.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(3)
a = G("(1,2)")
H = G.subgroup([a])
rc = G.cosets(H, side='right'); rc
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[(), (1,2)], [(2,3), (1,3,2)], [(1,2,3), (1,3)]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">lc = G.cosets(H, side='left'); lc
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[(), (1,2)], [(2,3), (1,2,3)], [(1,3,2), (1,3)]]
</div>
            </article>
            <p id="mYO">So if we work our way through the brackets carefully we can see the difference between the right cosets and the left cosets. Compare these cosets with the ones in the text and see that left and right are reversed. Shouldn't be a problem — just keep it in mind.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(3)
b = G("(1,2,3)")
H = G.subgroup([b])
rc = G.cosets(H, side='right'); rc
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[(), (1,2,3), (1,3,2)], [(2,3), (1,3), (1,2)]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">lc = G.cosets(H, side='left'); lc
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[(), (1,2,3), (1,3,2)], [(2,3), (1,2), (1,3)]]
</div>
            </article>
            <p id="TfX">If we study the bracketing, we can see that the left and right cosets are equal. Let's see what Sage thinks:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rc == lc
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="zng">Mathematically, we need sets, but Sage is working with ordered lists, and the order matters. However, if we know our lists do not have duplicates (the <code class="code-inline tex2jax_ignore">.cosets()</code> method will never produce duplicates) then we can sort the lists and a test for equality will perform as expected. The elements of a permutation group have an ordering defined for them — it is not so important <em class="emphasis">what</em> this is, just that <em class="emphasis">some</em> ordering is defined. The <code class="code-inline tex2jax_ignore">sorted()</code> function will take any list and return a sorted version. So for each list of cosets, we will sort the individual cosets and then sort the list of sorted cosets. This is a typical maneuver, though a bit complicated with the nested lists.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rc_sorted = sorted([sorted(coset) for coset in rc])
rc_sorted
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[(), (1,2,3), (1,3,2)], [(2,3), (1,2), (1,3)]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">lc_sorted = sorted([sorted(coset) for coset in lc])
lc_sorted
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[(), (1,2,3), (1,3,2)], [(2,3), (1,2), (1,3)]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rc_sorted == lc_sorted
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="fup">The list of all cosets can be quite long (it will include every element of the group) and can take a few seconds to complete, even for small groups. There are more sophisticated, and faster, ways to study cosets (such as just using their representatives), but to understand these techniques you also need to understand more theory.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="MUZ">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">6.6.2</span> <span class="title">Subgroups</span></div>
            <p id="LBy">Sage can compute all of the subgroups of a group. This can produce even more output than the coset method and can sometimes take much longer, depending on the structure of the group. The list is in order of the size of the subgroups, with smallest first. As a demonstration we will first compute and list all of the subgroups of a small group, and then extract just one of these subgroups from the list for some futher study.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(3)
sg = G.subgroups(); sg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[Subgroup generated by [()] of (Symmetric group of order 3! as a permutation group),
 Subgroup generated by [(2,3)] of (Symmetric group of order 3! as a permutation group),
 Subgroup generated by [(1,2)] of (Symmetric group of order 3! as a permutation group),
 Subgroup generated by [(1,3)] of (Symmetric group of order 3! as a permutation group),
 Subgroup generated by [(1,2,3)] of (Symmetric group of order 3! as a permutation group),
 Subgroup generated by [(2,3), (1,2,3)] of (Symmetric group of order 3! as a permutation group)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = sg[4]; H
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by [(1,2,3)] of (Symmetric group of order 3! as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,2,3), (1,3,2)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.is_cyclic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="rIH">The output of the <code class="code-inline tex2jax_ignore">.subgroups()</code> method can be voluminous, so sometimes we are interested in properties of specific subgroups (as in the previous example) or broader questions of the group's “subgroup structure.” Here we expand on Proposition 6.2.7. Notice that just because Sage does not <em class="emphasis">compute</em> a subgroup of order 6 in <nemeth class="inline">⠠⠁⠲</nemeth>, this is no substitute whatsoever for a <em class="emphasis">proof</em> such as given for the corollary. But the computational result emboldens us to search for the theoretical result with confidence.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = AlternatingGroup(4)
sg = G.subgroups()
[H.order() for H in sg]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 2, 2, 2, 3, 3, 3, 3, 4, 12]
</div>
            </article>
            <p id="XPQ">So we see no subgroup of order 6 in the list of subgroups of <nemeth class="inline">⠠⠁⠲</nemeth>. Notice how Lagrange's Theorem (Theorem 6.2.2) is in evidence — all the subgroup orders divide <nemeth class="inline">⠼⠂⠆</nemeth>, the order of <nemeth class="inline">⠠⠁⠲</nemeth>. Be patient, the next subgroup computation may take a while.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(4)
sg = G.subgroups()
[H.order() for H in sg]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
 6, 6, 6, 6, 8, 8, 8, 12, 24]
</div>
            </article>
            <p id="DWZ">Again, note Lagrange's Theorem in action. But more interestingly, <nemeth class="inline">⠠⠎⠲</nemeth> has a subgroup of order 6. Four of them, to be precise. These four subgroups of order 6 are similar to each other, can you describe them simply (<em class="emphasis">before</em> digging into the <code class="code-inline tex2jax_ignore">sg</code> list for more information)? If you were curious how many subgroups <nemeth class="inline">⠠⠎⠲</nemeth> has, you could simply count the number of subgroups in the <code class="code-inline tex2jax_ignore">sg</code> list. The <code class="code-inline tex2jax_ignore">len()</code> function does this for <em class="emphasis">any</em> list and is often an easy way to count things.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">len(sg)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">30
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="tci">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">6.6.3</span> <span class="title">Subgroups of Cyclic Groups</span></div>
            <p id="kei">Now that we are more familiar with permutation groups, and know about the <code class="code-inline tex2jax_ignore">.subgroups()</code> method, we can revisit an idea from Chapter 4. The subgroups of a cyclic group are always cyclic, but how many are there and what are their orders?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(20)
[H.order() for H in G.subgroups()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 2, 4, 5, 10, 20]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(19)
[H.order() for H in G.subgroups()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 19]
</div>
            </article>
            <p id="Qlr">We could do this all day, but you have Sage at your disposal, so vary the order of <code class="code-inline tex2jax_ignore">G</code> by changing <code class="code-inline tex2jax_ignore">n</code> and study the output across many runs. Maybe try a cyclic group of order 24 and compare with the symmetric group <nemeth class="inline">⠠⠎⠲</nemeth> (above) which also has order 24. Do you feel a conjecture coming on?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">n = 8
G = CyclicPermutationGroup(n)
[H.order() for H in G.subgroups()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 2, 4, 8]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="Zjr">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">6.6.4</span> <span class="title">Euler Phi Function</span></div>
            <p id="wsA">To add to our number-theoretic functions from Chapter 2, we note that Sage makes the Euler <nemeth class="inline">⠨⠋</nemeth>-function available as the function <code class="code-inline tex2jax_ignore">euler_phi()</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">euler_phi(345)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">176
</div>
            </article>
            <p id="czJ">Here's an interesting experiment that you can try running several times.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">m = random_prime(10000)
n = random_prime(10000)
m, n, euler_phi(m*n) == euler_phi(m)*euler_phi(n)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(5881, 1277, True)
</div>
            </article>
            <p id="IGS">Feel another conjecture coming on? Can you generalize this result?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="lxJ">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">6.7</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="hxK">
            <p id="hFb">The following exercises are less about cosets and subgroups, and more about using Sage as an experimental tool. They are designed to help you become both more efficient, and more expressive, as you write commands in Sage. We will have many opportunities to work with cosets and subgroups in the coming chapters. These exercises do not contain much guidance, and get more challenging as they go. They are designed to explore, or confirm, results presented in this chapter or earlier chapters.</p>
            <p id="NMk"><em class="alert">Important</em>: You should answer each of the last three problems with a single (complicated) line of Sage that concludes by outputting <code class="code-inline tex2jax_ignore">True</code>. A “single line” means you will have several Sage commands packaged up together in complicated ways. It does not mean several Sage commands seperated by semi-colons and typed in on a single line. Be sure include some intermediate steps used in building up your solution, but using smaller ranges of values so as to not overwhelm the reader with lots of output. This will help you, and the grader of your work, have some confidence that the final version is correct.</p>
            <p id="tTt">When you check integers below for divisibility, remember that <code class="code-inline tex2jax_ignore">range()</code> produces plain integers, which are quite simple in their functionality. The <code class="code-inline tex2jax_ignore">srange()</code> command produces Sage integers, which have many more capabilities. (See the last exercise for an example.) And remember that a list comprehension is a very compact way to examine many possibilities at once.</p>
          </section>
          <article class="exercise exercise-like" id="NET">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ljB">Use <code class="code-inline tex2jax_ignore">.subgroups()</code> to find an example of a group <i class="one-letter">G</i> and an integer <i class="one-letter">m</i>, so that (a) <i class="one-letter">m</i> divides the order of <i class="one-letter">G</i>, and (b) <i class="one-letter">G</i> has no subgroup of order <i class="one-letter">m</i>. (Do not use the group <nemeth class="inline">⠠⠁⠲</nemeth> for <i class="one-letter">G</i>, since this is in the text.) Provide a single line of Sage code that has all the logic to produce the desired <i class="one-letter">m</i> as its output. (You can give your group a simple name on a prior line and then just reference the group by name.) Here is a very simple example that might help you structure your answer.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 5
b = 10
c = 6
d = 13
a.divides(b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">not (b in [c,d])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.divides(b) and not (b in [c,d])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
          </article>
          <article class="exercise exercise-like" id="tMc">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="RqK">Verify the truth of Fermat's Little Theorem (either variant) using the composite number <nemeth class="inline">⠼⠒⠔⠂⠀⠨⠅⠀⠼⠂⠶⠡⠆⠒</nemeth> as the choice of the base (either <i class="one-letter">a</i> or <i class="one-letter">b</i>), and for <i class="one-letter">p</i> assuming the value of every prime number between <nemeth class="inline">⠼⠂⠴⠴</nemeth> and <nemeth class="inline">⠼⠂⠴⠴⠴</nemeth>.</p>
            <p id="xxT">Build up a solution slowly — make a list of powers (start with just a few primes), then make a list of powers reduced by modular arithmetic, then a list of comparisons with the predicted value, then a check on all these logical values resulting from the comparisons. This is a useful strategy for many similar problems. Eventually you will write a single line that performs the verification by eventually printing out <code class="code-inline tex2jax_ignore">True</code>. Here are some more hints about useful functions.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 20
b = 6
a.mod(b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">prime_range(50, 100)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[53, 59, 61, 67, 71, 73, 79, 83, 89, 97]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">all([True, True, True, True])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">all([True, True, False, True])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
          </article>
          <article class="exercise exercise-like" id="ZTl">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="dFc">Verify that the group of units mod <i class="one-letter">n</i> has order <nemeth class="inline">⠝⠤⠂</nemeth> when <i class="one-letter">n</i> is prime, again for all primes between <nemeth class="inline">⠼⠂⠴⠴</nemeth> and <nemeth class="inline">⠼⠂⠴⠴⠴</nemeth>. As before, your output should be simply <code class="code-inline tex2jax_ignore">True</code>, just once, indicating that the statement about the order is true for all the primes examined. As before, build up your solution slowly, and with a smaller range of primes in the beginning. Express your answer as a single line of Sage code.</p>
          </article>
          <article class="exercise exercise-like" id="Gau">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="JMl">Verify Euler's Theorem for all values of <nemeth class="inline">⠼⠴⠀⠐⠅⠀⠝⠀⠐⠅⠀⠼⠂⠴⠴</nemeth> and for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠁⠀⠐⠅⠱⠀⠝</nemeth>. This will require nested <code class="code-inline tex2jax_ignore">for</code> statements with a conditional. Again, here is a small example that might be helpful for constructing your one line of Sage code. Note the use of <code class="code-inline tex2jax_ignore">srange()</code> in this example.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[a/b for a in srange(9) for b in srange(1,a) if gcd(a,b)==1]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[2, 3, 3/2, 4, 4/3, 5, 5/2, 5/3, 5/4, 6, 6/5,
 7, 7/2, 7/3, 7/4, 7/5, 7/6, 8, 8/3, 8/5, 8/7]
</div>
            </article>
          </article>
          <article class="exercise exercise-like" id="mhD">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="pTu">The symmetric group on <nemeth class="inline">⠼⠶</nemeth> symbols, <nemeth class="inline">⠠⠎⠶</nemeth>, has <nemeth class="inline">⠼⠶⠖⠀⠀⠨⠅⠀⠼⠢⠴⠲⠴</nemeth> elements. Consider the following questions without employing Sage, based on what we know about orders of elements of permutation groups (Exercise 5.4.13).</p>
            <ul class="outerlist">
              <li>• <p id="yoR">What is the maximum possible order?</p></li>
              <li>• <p id="ewa">How many elements are there of order <nemeth class="inline">⠼⠂⠴</nemeth>?</p></li>
              <li>• <p id="KDj">How many elements are there of order <nemeth class="inline">⠼⠂</nemeth>?</p></li>
              <li>• <p id="qKs">How many elements are there of order <nemeth class="inline">⠼⠆</nemeth>?</p></li>
              <li>• <p id="WRB">What is the smallest positive integer for which there is no element with that order?</p></li>
            </ul>
            <p id="WaD">These questions will be easier if you are familiar with using binomial coefficients for counting in similarly complex situations. But either way, give some serious thought to each question (and maybe a few of your own) before firing up Sage.</p>
            <p id="ChM">Now, compute how many elements there are of each order using the <code class="code-inline tex2jax_ignore">.order()</code> method, and then embed this into a list comprehension which creates a single list of these counts. You can check your work (or check Sage) by wrapping this list in <code class="code-inline tex2jax_ignore">sum()</code> and hopefully getting <nemeth class="inline">⠼⠢⠴⠲⠴</nemeth>.</p>
            <p id="ioV">Comment on the process of studying these questions first without any computational aid, and then again with Sage. For which values of <i class="one-letter">n</i> do you think Sage would be too slow and your mind quicker?</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="uCn">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">7</span> <span class="title">Introduction to Cryptography</span></div>
        <section class="introduction" id="YyK">
          <p id="WCt">Cryptography is the study of sending and receiving secret messages. The aim of cryptography is to send messages across a channel so that only the intended recipient of the message can read it. In addition, when a message is received, the recipient usually requires some assurance that the message is authentic; that is, that it has not been sent by someone who is trying to deceive the recipient. Modern cryptography is heavily dependent on abstract algebra and number theory.</p>
          <p id="CJC">The message to be sent is called the <dfn class="terminology">plaintext</dfn>  message. The disguised message is called the <dfn class="terminology">ciphertext</dfn>.  The plaintext and the ciphertext are both written in an <dfn class="terminology">alphabet</dfn>, consisting of <dfn class="terminology">letters</dfn> or <dfn class="terminology">characters</dfn>. Characters can include not only the familiar alphabetic characters A, <nemeth class="inline">⠄⠄⠄</nemeth>, Z and a, <nemeth class="inline">⠄⠄⠄</nemeth>, z but also digits, punctuation marks, and blanks. A <dfn class="terminology">cryptosystem</dfn>, or <dfn class="terminology">cipher</dfn>,  has two parts: <dfn class="terminology">encryption</dfn>, the process of transforming a plaintext message to a ciphertext message, and <dfn class="terminology">decryption</dfn>, the reverse transformation of changing a ciphertext message into a plaintext message.</p>
          <p id="iQL">There are many different families of cryptosystems, each distinguished by a particular encryption algorithm. Cryptosystems in a specified cryptographic family are distinguished from one another by a parameter to the encryption function called a <dfn class="terminology">key</dfn>.  A classical cryptosystem has a single key, which must be kept secret, known only to the sender and the receiver of the message. If person <i class="one-letter">A</i> wishes to send secret messages to two different people <i class="one-letter">B</i> and <i class="one-letter">C</i>, and does not wish to have <i class="one-letter">B</i> understand <i class="one-letter">C</i>'s messages or vice versa, <i class="one-letter">A</i> must use two separate keys, so one cryptosystem is used for exchanging messages with <i class="one-letter">B</i>, and another is used for exchanging messages with <i class="one-letter">C</i>.</p>
          <p id="OXU">Systems that use two separate keys, one for encoding and another for decoding, are called <dfn class="terminology">public key cryptosystems</dfn>.  Since knowledge of the encoding key does not allow anyone to guess at the decoding key, the encoding key can be made public. A public key cryptosystem allows <i class="one-letter">A</i> and <i class="one-letter">B</i> to send messages to <i class="one-letter">C</i> using the same encoding key. Anyone is capable of encoding a message to be sent to <i class="one-letter">C</i>, but only <i class="one-letter">C</i> knows how to decode such a message.</p>
        </section>
        <section class="section" id="Qkr">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">7.1</span> <span class="title">Private Key Cryptography</span></div>
          <p id="ztx">In <dfn class="terminology">single</dfn>  or <dfn class="terminology">private key cryptosystems</dfn>  the same key is used for both encrypting and decrypting messages. To encrypt a plaintext message, we apply to the message some function which is kept secret, say <i class="one-letter">f</i>. This function will yield an encrypted message. Given the encrypted form of the message, we can recover the original message by applying the inverse transformation <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth>. The transformation <i class="one-letter">f</i> must be relatively easy to compute, as must <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth>; however, <i class="one-letter">f</i> must be extremely difficult to guess from available examples of coded messages.</p>
          <article class="example example-like" data-braille="example-like" id="zWa">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">7.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="RSA">One of the first and most famous private key cryptosystems was the shift code used by Julius Caesar. We first digitize the alphabet by letting <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠼⠴⠴⠠⠀⠠⠃⠀⠨⠅⠀⠼⠴⠂⠠⠀⠄⠄⠄⠀⠠⠀⠠⠵⠀⠨⠅⠀⠼⠆⠢</nemeth>. The encoding function will be</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠏⠾⠀⠨⠅⠀⠏⠬⠒⠍⠕⠙⠀⠆⠖⠆</nemeth>
            </div>
            <p data-braille="continuation">that is, <nemeth class="inline">⠠⠁⠀⠫⠳⠒⠒⠕⠀⠠⠙⠠⠀⠠⠃⠀⠫⠳⠒⠒⠕⠀⠠⠑⠠⠀⠄⠄⠄⠀⠠⠀⠠⠵⠀⠫⠳⠒⠒⠕⠀⠠⠉</nemeth>. The decoding function is then</p>
            <div class="displaymath">
              <nemeth>⠋⠘⠤⠼⠂⠐⠷⠏⠾⠀⠨⠅⠀⠏⠤⠒⠍⠕⠙⠀⠆⠖⠀⠨⠅⠀⠏⠬⠆⠒⠍⠕⠙⠀⠆⠖</nemeth>
            </div>
            <p data-braille="continuation">. Suppose we receive the encoded message DOJHEUD. To decode this message, we first digitize it:</p>
            <div class="displaymath">
              <nemeth>⠼⠒⠠⠀⠼⠂⠲⠠⠀⠼⠔⠠⠀⠼⠶⠠⠀⠼⠲⠠⠀⠼⠆⠴⠠⠀⠼⠒</nemeth>
            </div>
            <p data-braille="continuation">. Next we apply the inverse transformation to get</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠠⠀⠼⠂⠂⠠⠀⠼⠖⠠⠀⠼⠲⠠⠀⠼⠂⠠⠀⠼⠂⠶⠠⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">, or ALGEBRA. Notice here that there is nothing special about either of the numbers <nemeth class="inline">⠼⠒</nemeth> or <nemeth class="inline">⠼⠆⠖</nemeth>. We could have used a larger alphabet or a different shift.</p>
          </article>
          <p id="LHP"><dfn class="terminology">Cryptanalysis</dfn>  is concerned with deciphering a received or intercepted message. Methods from probability and statistics are great aids in deciphering an intercepted message; for example, the frequency analysis of the characters appearing in the intercepted message often makes its decryption possible.</p>
          <article class="example example-like" data-braille="example-like" id="gdj">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">7.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="xZJ">Suppose we receive a message that we know was encrypted by using a shift transformation on single letters of the <nemeth class="inline">⠼⠆⠖</nemeth>-letter alphabet. To find out exactly what the shift transformation was, we must compute <i class="one-letter">b</i> in the equation <nemeth class="inline">⠋⠷⠏⠾⠀⠨⠅⠀⠏⠬⠃⠍⠕⠙⠀⠆⠖</nemeth>. We can do this using frequency analysis. The letter <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠼⠴⠲</nemeth> is the most commonly occurring letter in the English language. Suppose that <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠼⠂⠦</nemeth> is the most commonly occurring letter in the ciphertext. Then we have good reason to suspect that  <nemeth class="inline">⠼⠂⠦⠀⠨⠅⠀⠼⠲⠬⠃⠍⠕⠙⠀⠆⠖</nemeth>, or <nemeth class="inline">⠃⠀⠨⠅⠀⠼⠂⠲</nemeth>. Therefore, the most likely encrypting function is</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠏⠾⠀⠨⠅⠀⠏⠬⠂⠲⠍⠕⠙⠀⠆⠖</nemeth>
            </div>
            <p data-braille="continuation">. The corresponding decrypting function is</p>
            <div class="displaymath">
              <nemeth>⠋⠘⠤⠼⠂⠐⠷⠏⠾⠀⠨⠅⠀⠏⠬⠂⠆⠍⠕⠙⠀⠆⠖</nemeth>
            </div>
            <p data-braille="continuation">. It is now easy to determine whether or not our guess is correct.</p>
          </article>
          <p id="rOY">Simple shift codes are examples of <dfn class="terminology">monoalphabetic cryptosystems</dfn>.  In these ciphers a character in the enciphered message represents exactly one character in the original message. Such cryptosystems are not very sophisticated and are quite easy to break. In fact, in a simple shift as described in Example 7.1.1, there are only <nemeth class="inline">⠼⠆⠖</nemeth> possible keys. It would be quite easy to try them all rather than to use frequency analysis.</p>
          <p id="XWh">Let us investigate a slightly more sophisticated cryptosystem. Suppose that the encoding function is given by</p>
          <div class="displaymath">
            <nemeth>⠋⠷⠏⠾⠀⠨⠅⠀⠁⠏⠬⠃⠍⠕⠙⠀⠆⠖</nemeth>
          </div>
          <p data-braille="continuation">. We first need to find out when a decoding function <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth> exists. Such a decoding function exists when we can solve the equation</p>
          <div class="displaymath">
            <nemeth>⠉⠀⠨⠅⠀⠁⠏⠬⠃⠍⠕⠙⠀⠆⠖</nemeth>
          </div>
          <p data-braille="continuation">for <i class="one-letter">p</i>. By Proposition 3.1.4, this is possible exactly when <i class="one-letter">a</i> has an inverse or, equivalently, when <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠼⠆⠖⠾⠀⠨⠅⠀⠼⠂</nemeth>. In this case</p>
          <div class="displaymath">
            <nemeth>⠋⠘⠤⠼⠂⠐⠷⠏⠾⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠏⠤⠁⠘⠤⠼⠂⠐⠃⠍⠕⠙⠀⠆⠖</nemeth>
          </div>
          <p data-braille="continuation">. Such a cryptosystem is called an <dfn class="terminology">affine cryptosystem</dfn>. </p>
          <article class="example example-like" data-braille="example-like" id="Mks">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">7.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="egS">Let us consider the affine cryptosystem <nemeth class="inline">⠋⠷⠏⠾⠀⠨⠅⠀⠁⠏⠬⠃⠍⠕⠙⠀⠆⠖</nemeth>. For this cryptosystem to work we must choose an <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠵⠆⠖</nemeth> that is invertible. This is only possible if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠼⠆⠖⠾⠀⠨⠅⠀⠼⠂</nemeth>. Recognizing this fact, we will let <nemeth class="inline">⠁⠀⠨⠅⠀⠼⠢</nemeth> since <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠢⠠⠀⠼⠆⠖⠾⠀⠨⠅⠀⠼⠂</nemeth>. It is easy to see that <nemeth class="inline">⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠼⠆⠂</nemeth>. Therefore, we can take our encryption function to be <nemeth class="inline">⠋⠷⠏⠾⠀⠨⠅⠀⠼⠢⠏⠬⠒⠍⠕⠙⠀⠆⠖</nemeth>. Thus, ALGEBRA is encoded as <nemeth class="inline">⠼⠒⠠⠀⠼⠖⠠⠀⠼⠶⠠⠀⠼⠆⠒⠠⠀⠼⠦⠠⠀⠼⠂⠴⠠⠀⠼⠒</nemeth>, or DGHXIKD. The decryption function will be</p>
            <div class="displaymath">
              <nemeth>⠋⠘⠤⠼⠂⠐⠷⠏⠾⠀⠨⠅⠀⠼⠆⠂⠏⠤⠆⠂⠡⠒⠍⠕⠙⠀⠆⠖⠀⠨⠅⠀⠼⠆⠂⠏⠬⠂⠢⠍⠕⠙⠀⠆⠖</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="Edq">A cryptosystem would be more secure if a ciphertext letter could represent more than one plaintext letter. To give an example of this type of cryptosystem, called a <dfn class="terminology">polyalphabetic cryptosystem</dfn>, we will generalize affine codes by using matrices. The idea works roughly the same as before; however, instead of encrypting one letter at a time we will encrypt pairs of letters. We can store a pair of letters <nemeth class="inline">⠏⠂</nemeth> and <nemeth class="inline">⠏⠆</nemeth> in a vector</p>
          <div class="displaymath">
            <nemeth>⠸⠏⠀⠨⠅⠀⠏⠂⠀⠏⠆</nemeth>
          </div>
          <p data-braille="continuation">. Let <i class="one-letter">A</i> be a <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> invertible matrix with entries in <nemeth class="inline">⠸⠠⠵⠆⠖</nemeth>. We can define an encoding function by</p>
          <div class="displaymath">
            <nemeth>⠋⠷⠸⠏⠾⠀⠨⠅⠀⠠⠁⠸⠏⠬⠸⠃</nemeth>
          </div>
          <p data-braille="continuation">, where <nemeth class="inline">⠸⠃</nemeth> is a fixed column vector and matrix operations are performed in <nemeth class="inline">⠸⠠⠵⠆⠖</nemeth>. The decoding function must be</p>
          <div class="displaymath">
            <nemeth>⠋⠘⠤⠼⠂⠐⠷⠸⠏⠾⠀⠨⠅⠀⠠⠁⠘⠤⠼⠂⠐⠸⠏⠤⠠⠁⠘⠤⠼⠂⠐⠸⠃</nemeth>
          </div>
          <p data-braille="continuation">.</p>
          <article class="example example-like" data-braille="example-like" id="srB">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">7.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="Kob">Suppose that we wish to encode the word HELP. The corresponding digit string is <nemeth class="inline">⠼⠶⠠⠀⠼⠲⠠⠀⠼⠂⠂⠠⠀⠼⠂⠢</nemeth>. If</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠒⠀⠢⠠⠾⠀⠠⠷⠂⠀⠆⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, then</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠼⠆⠀⠆⠂⠠⠾⠀⠠⠷⠆⠢⠀⠒⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠸⠃⠀⠨⠅⠀⠷⠼⠆⠠⠀⠼⠆⠾⠘⠞</nemeth>, then our message is encrypted as RRGR. The encrypted letter R represents more than one plaintext letter.</p>
          </article>
          <p id="kkz">Frequency analysis can still be performed on a polyalphabetic cryptosystem, because we have a good understanding of how pairs of letters appear in the English language. The pair <em class="emphasis">th</em> appears quite often; the pair <em class="emphasis">qz</em> never appears. To avoid decryption by a third party, we must use a larger matrix than the one we used in Example 7.1.4.</p>
        </section>
        <section class="section" id="wrA">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">7.2</span> <span class="title">Public Key Cryptography</span></div>
          <section class="introduction" id="EFT">
            <p id="vfd">If traditional cryptosystems are used, anyone who knows enough to encode a message will also know enough to decode an intercepted message. In 1976, W. Diffie  and M. Hellman  proposed public key cryptography, which is based on the observation that the encryption and decryption procedures need not have the same key. This removes the requirement that the encoding key be kept secret. The encoding function <i class="one-letter">f</i> must be relatively easy to compute, but <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth> must be extremely difficult to compute without some additional information, so that someone who knows only the encrypting key cannot find the decrypting key without prohibitive computation. It is interesting to note that to date, no system has been proposed that has been proven to be “one-way;” that is, for any existing public key cryptosystem, it has never been shown to be computationally prohibitive to decode messages with only knowledge of the encoding key.</p>
          </section>
          <section class="subsection" id="aJw">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">7.2.1</span> <span class="title">The <abbr class="acronym">RSA</abbr> Cryptosystem</span></div>
            <p id="rfe">The <abbr class="acronym">RSA</abbr> cryptosystem introduced by R. Rivest,  A. Shamir,  and L. Adleman  in 1978, is based on the difficulty of factoring large numbers. Though it is not a difficult task to find two large random primes and multiply them together, factoring a 150-digit number that is the product of two large primes would take 100 million computers operating at 10 million instructions per second about 50 million years under the fastest algorithms available in the early 1990s. Although the algorithms have improved, factoring a number that is a product of two large primes is still computationally prohibitive.</p>
            <p id="Xmn">The <abbr class="acronym">RSA</abbr> cryptosystem works as follows. Suppose that we choose two random 150-digit prime numbers <i class="one-letter">p</i> and <i class="one-letter">q</i>. Next, we compute the product <nemeth class="inline">⠝⠀⠨⠅⠀⠏⠟</nemeth> and also compute <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠍⠀⠨⠅⠀⠷⠏⠤⠂⠾⠷⠟⠤⠂⠾</nemeth>, where <nemeth class="inline">⠨⠋</nemeth> is the Euler <nemeth class="inline">⠨⠋</nemeth>-function. Now we start choosing random integers <i class="one-letter">E</i> until we find one that is relatively prime to <i class="one-letter">m</i>; that is, we choose <i class="one-letter">E</i> such that <nemeth class="inline">⠛⠉⠙⠀⠷⠠⠑⠠⠀⠍⠾⠀⠨⠅⠀⠼⠂</nemeth>. Using the Euclidean algorithm, we can find a number <i class="one-letter">D</i> such that <nemeth class="inline">⠠⠙⠠⠑⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠍⠾</nemeth>. The numbers <i class="one-letter">n</i> and <i class="one-letter">E</i> are now made public.</p>
            <p id="Dtw">Suppose now that person B (Bob) wishes to send person A (Alice) a message over a public line. Since <i class="one-letter">E</i> and <i class="one-letter">n</i> are known to everyone, anyone can encode messages. Bob first digitizes the message according to some scheme, say <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠼⠴⠴⠠⠀⠠⠃⠀⠨⠅⠀⠼⠴⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠵⠀⠨⠅⠀⠼⠆⠢</nemeth>. If necessary, he will break the message into pieces such that each piece is a positive integer less than <i class="one-letter">n</i>. Suppose <i class="one-letter">x</i> is one of the pieces. Bob forms the number <nemeth class="inline">⠽⠀⠨⠅⠀⠭⠘⠠⠑⠐⠍⠕⠙⠀⠝</nemeth> and sends <i class="one-letter">y</i> to Alice. For Alice to recover <i class="one-letter">x</i>, she need only compute <nemeth class="inline">⠭⠀⠨⠅⠀⠽⠘⠠⠙⠐⠍⠕⠙⠀⠝</nemeth>. Only Alice knows <i class="one-letter">D</i>.</p>
            <article class="example example-like" data-braille="example-like" id="IFS">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">7.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="qvk">Before exploring the theory behind the <abbr class="acronym">RSA</abbr> cryptosystem or attempting to use large integers, we will use some small integers just to see that the system does indeed work. Suppose that we wish to send some message, which when digitized is <nemeth class="inline">⠼⠆⠢</nemeth>. Let <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠆⠒</nemeth> and <nemeth class="inline">⠟⠀⠨⠅⠀⠼⠆⠔</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠨⠅⠀⠏⠟⠀⠨⠅⠀⠼⠖⠖⠶</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠝⠾⠀⠨⠅⠀⠍⠀⠨⠅⠀⠷⠏⠤⠂⠾⠷⠟⠤⠂⠾⠀⠨⠅⠀⠼⠖⠂⠖</nemeth>
              </div>
              <p data-braille="continuation">. We can let <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠼⠲⠦⠶</nemeth>, since <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠖⠂⠖⠠⠀⠼⠲⠦⠶⠾⠀⠨⠅⠀⠼⠂</nemeth>. The encoded message is computed to be</p>
              <div class="displaymath">
                <nemeth>⠼⠆⠢⠘⠲⠦⠶⠐⠍⠕⠙⠀⠖⠖⠶⠀⠨⠅⠀⠼⠂⠖⠔</nemeth>
              </div>
              <p data-braille="continuation">. This computation can be reasonably done by using the method of repeated squares as described in Chapter 4. Using the Euclidean algorithm, we determine that <nemeth class="inline">⠼⠂⠔⠂⠠⠑⠀⠨⠅⠀⠼⠂⠬⠂⠢⠂⠍</nemeth>; therefore, the decrypting key is <nemeth class="inline">⠷⠝⠠⠀⠠⠙⠾⠀⠨⠅⠀⠷⠼⠖⠖⠶⠠⠀⠼⠂⠔⠂⠾</nemeth>. We can recover the original message by calculating</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠖⠔⠘⠂⠔⠂⠐⠍⠕⠙⠀⠖⠖⠶⠀⠨⠅⠀⠼⠆⠢</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="jAF">Now let us examine why the <abbr class="acronym">RSA</abbr> cryptosystem works. We know that <nemeth class="inline">⠠⠙⠠⠑⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠍⠾</nemeth>; hence, there exists a <i class="one-letter">k</i> such that</p>
            <div class="displaymath">
              <nemeth>⠠⠙⠠⠑⠀⠨⠅⠀⠅⠍⠬⠂⠀⠨⠅⠀⠅⠋⠷⠝⠾⠬⠂</nemeth>
            </div>
            <p data-braille="continuation">. There are two cases to consider. In the first case assume that <nemeth class="inline">⠛⠉⠙⠀⠷⠭⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>. Then by Theorem 6.3.2,</p>
            <div class="displaymath">
              <nemeth>⠽⠘⠠⠙⠐⠀⠨⠅⠀⠷⠭⠘⠠⠑⠐⠾⠘⠠⠙⠐⠀⠨⠅⠀⠭⠘⠠⠙⠠⠑⠐⠀⠨⠅⠀⠭⠘⠅⠍⠬⠂⠐⠀⠨⠅⠀⠷⠭⠘⠋⠷⠝⠾⠐⠾⠘⠅⠐⠭⠀⠨⠅⠀⠷⠼⠂⠾⠘⠅⠐⠭⠀⠨⠅⠀⠭⠍⠕⠙⠀⠝</nemeth>
            </div>
            <p data-braille="continuation">. So we see that Alice recovers the original message <i class="one-letter">x</i> when she computes <nemeth class="inline">⠽⠘⠠⠙⠐⠍⠕⠙⠀⠝</nemeth>.</p>
            <p id="PHO">For the other case, assume that <nemeth class="inline">⠛⠉⠙⠀⠷⠭⠠⠀⠝⠾⠀⠌⠨⠅⠀⠼⠂</nemeth>. Since <nemeth class="inline">⠝⠀⠨⠅⠀⠏⠟</nemeth> and <nemeth class="inline">⠭⠀⠐⠅⠀⠝</nemeth>, we know <i class="one-letter">x</i> is a multiple of <i class="one-letter">p</i> or a multiple of <i class="one-letter">q</i>, but not both. We will describe the first possibility only, since the second is entirely similar. There is then an integer <i class="one-letter">r</i>, with <nemeth class="inline">⠗⠀⠐⠅⠀⠟</nemeth> and <nemeth class="inline">⠭⠀⠨⠅⠀⠗⠏</nemeth>. Note that we have <nemeth class="inline">⠛⠉⠙⠀⠷⠭⠠⠀⠟⠾⠀⠨⠅⠀⠼⠂</nemeth> and that <nemeth class="inline">⠍⠀⠨⠅⠀⠋⠷⠝⠾⠀⠨⠅⠀⠷⠏⠤⠂⠾⠷⠟⠤⠂⠾⠀⠨⠅⠀⠋⠷⠏⠾⠋⠷⠟⠾</nemeth>. Then, using Theorem 6.3.2, but now mod <i class="one-letter">q</i>,</p>
            <div class="displaymath">
              <nemeth>⠭⠘⠅⠍⠐⠀⠨⠅⠀⠭⠘⠅⠋⠷⠏⠾⠋⠷⠟⠾⠐⠀⠨⠅⠀⠷⠭⠘⠋⠷⠟⠾⠐⠾⠘⠅⠋⠷⠏⠾⠐⠀⠨⠅⠀⠷⠼⠂⠾⠘⠅⠋⠷⠏⠾⠐⠀⠨⠅⠀⠼⠂⠍⠕⠙⠀⠟</nemeth>
            </div>
            <p data-braille="continuation">. So there is an integer <i class="one-letter">t</i> such that <nemeth class="inline">⠭⠘⠅⠍⠐⠀⠨⠅⠀⠼⠂⠬⠞⠟</nemeth>. Thus, Alice also recovers the message in this case,</p>
            <div class="displaymath">
              <nemeth>⠽⠘⠠⠙⠐⠀⠨⠅⠀⠭⠘⠅⠍⠬⠂⠐⠀⠨⠅⠀⠭⠘⠅⠍⠐⠭⠀⠨⠅⠀⠷⠼⠂⠬⠞⠟⠾⠭⠀⠨⠅⠀⠭⠬⠞⠟⠷⠗⠏⠾⠀⠨⠅⠀⠭⠬⠞⠗⠝⠀⠨⠅⠀⠭⠍⠕⠙⠀⠝</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="vOX">We can now ask how one would go about breaking the <abbr class="acronym">RSA</abbr> cryptosystem. To find <i class="one-letter">D</i> given <i class="one-letter">n</i> and <i class="one-letter">E</i>, we simply need to factor <i class="one-letter">n</i> and solve for <i class="one-letter">D</i> by using the Euclidean algorithm. If we had known that <nemeth class="inline">⠼⠖⠖⠶⠀⠨⠅⠀⠼⠆⠒⠡⠆⠔</nemeth> in Example 7.2.1, we could have recovered <i class="one-letter">D</i>.</p>
          </section>
          <section class="subsection" id="GQF">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">7.2.2</span> <span class="title">Message Verification</span></div>
            <p id="bWg">There is a problem of message verification in public key cryptosystems. Since the encoding key is public knowledge, anyone has the ability to send an encoded message. If Alice receives a message from Bob, she would like to be able to verify that it was Bob who actually sent the message. Suppose that Bob's encrypting key is <nemeth class="inline">⠷⠝⠘⠄⠐⠠⠀⠠⠑⠘⠄⠐⠾</nemeth> and his decrypting key is <nemeth class="inline">⠷⠝⠘⠄⠐⠠⠀⠠⠙⠘⠄⠐⠾</nemeth>. Also, suppose that Alice's encrypting key is <nemeth class="inline">⠷⠝⠠⠀⠠⠑⠾</nemeth> and her decrypting key is <nemeth class="inline">⠷⠝⠠⠀⠠⠙⠾</nemeth>. Since encryption keys are public information, they can exchange coded messages at their convenience. Bob wishes to assure Alice that the message he is sending is authentic. Before Bob sends the message <i class="one-letter">x</i> to Alice, he decrypts  <i class="one-letter">x</i> with his own key:</p>
            <div class="displaymath">
              <nemeth>⠭⠘⠄⠐⠀⠨⠅⠀⠭⠘⠠⠙⠄⠐⠍⠕⠙⠀⠝⠄</nemeth>
            </div>
            <p data-braille="continuation">. Anyone can change <nemeth class="inline">⠭⠄</nemeth> back to <i class="one-letter">x</i> just by encryption, but only Bob has the ability to form <nemeth class="inline">⠭⠄</nemeth>. Now Bob encrypts <nemeth class="inline">⠭⠄</nemeth> with Alice's encryption key to form</p>
            <div class="displaymath">
              <nemeth>⠽⠘⠄⠐⠀⠨⠅⠀⠭⠘⠄⠐⠘⠠⠑⠐⠍⠕⠙⠀⠝</nemeth>
            </div>
            <p data-braille="continuation">, a message that only Alice can decode. Alice decodes the message and then encodes the result with Bob's key to read the original message, a message that could have only been sent by Bob.</p>
          </section>
          <section class="subsection" id="mXO">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">7.2.3</span> <span class="title">Historical Note</span></div>
            <p id="Idp">Encrypting secret messages goes as far back as ancient Greece and Rome. As we know, Julius Caesar used a simple shift code to send and receive messages. However, the formal study of encoding and decoding messages probably began with the Arabs in the 1400s. In the fifteenth and sixteenth centuries mathematicians such as Alberti and Viete discovered that monoalphabetic cryptosystems offered no real security. In the 1800s, F. W. Kasiski established methods for breaking ciphers in which a ciphertext letter can represent more than one plaintext letter, if the same key was used several times. This discovery led to the use of cryptosystems with keys that were used only a single time. Cryptography was placed on firm mathematical foundations by such people as W. Friedman and L. Hill in the early part of the twentieth century.</p>
            <p id="oky">The period after World War I saw the development of special-purpose machines for encrypting and decrypting messages, and mathematicians were very active in cryptography during World War II. Efforts to penetrate the cryptosystems of the Axis nations were organized in England and in the United States by such notable mathematicians as Alan Turing and A. A. Albert. The Allies gained a tremendous advantage in World War II by breaking the ciphers produced by the German Enigma machine and the Japanese Purple ciphers.</p>
            <p id="UrH">By the 1970s, interest in commercial cryptography had begun to take hold. There was a growing need to protect banking transactions, computer data, and electronic mail. In the early 1970s, <abbr class="acronym">IBM</abbr> developed and implemented <abbr class="acronym">LUZIFER</abbr>, the forerunner of the National Bureau of Standards' Data Encryption Standard (DES).</p>
            <p id="AyQ">The concept of a public key cryptosystem, due to Diffie and Hellman, is very recent (1976). It was further developed by Rivest, Shamir, and Adleman with the <abbr class="acronym">RSA</abbr> cryptosystem (1978). It is not known how secure any of these systems are. The trapdoor knapsack cryptosystem, developed by Merkle and Hellman, has been broken. It is still an open question whether or not the <abbr class="acronym">RSA</abbr> system can be broken. In 1991, <abbr class="acronym">RSA</abbr> Laboratories published a list of semiprimes (numbers with exactly two prime factors) with a cash prize for whoever was able to provide a factorization (<a class="external" href="http://www.emc.com/emc-plus/rsa-labs/historical/the-rsa-challenge-numbers.htm" target="_blank">http://www.emc.com/emc-plus/rsa-labs/historical/the-rsa-challenge-numbers.htm</a>). Although the challenge ended in 2007, many of these numbers have not yet been factored.</p>
            <p id="gFZ">There been a great deal of controversy about research in cryptography and cryptography itself. In 1929, when Henry Stimson, Secretary of State under Herbert Hoover, dismissed the Black Chamber (the State Department's cryptography division) on the ethical grounds that “gentlemen do not read each other's mail.” During the last two decades of the twentieth century, the National Security Agency wanted to keep information about cryptography secret, whereas the academic community fought for the right to publish basic research. Currently, research in mathematical cryptography and computational number theory is very active, and mathematicians are free to publish their results in these areas.</p>
          </section>
          <article class="paragraphs" id="kdi">
            <h5 class="heading">
              <span class="title">Sage.</span>
            </h5>
            <p id="Tmo">Sage's early development featured powerful routines for number theory, and later included significant support for algebraic structures and other areas of discrete mathematics. So it is a natural tool for the study of cryptology, including topics like RSA, elliptic curve cryptography, and AES (Advanced Encryption Standard).</p>
          </article>
        </section>
        <section class="reading-questions" id="Jzd">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">7.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="Mtj">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Rdc">Use the <code class="code-inline tex2jax_ignore">euler_phi()</code>function in Sage to compute <nemeth class="inline">⠋⠷⠼⠦⠔⠒⠲⠢⠖⠂⠆⠒⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="sAs">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="xkl">Use the <code class="code-inline tex2jax_ignore">power_mod()</code>function in Sage to compute <nemeth class="inline">⠼⠶⠘⠒⠆⠲⠐⠷⠍⠕⠙⠀⠦⠔⠢⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="YHB">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="dru">Explain the mathematical basis for saying: encrypting a message using an <abbr class="initialism">RSA</abbr> public key is very simple computationally, while decrypting a communication without the private key is very hard computationally.</p>
          </article>
          <article class="exercise exercise-like" id="EOK">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="JyD">Explain how in <abbr class="initialism">RSA</abbr> message encoding differs from message verification.</p>
          </article>
          <article class="exercise exercise-like" id="kVT">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="pFM">Explain how one could be justified in saying that Diffie and Hellman's proposal in 1976 was “revolutionary.”</p>
          </article>
        </section>
        <section class="exercises" id="rHH">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">7.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="oNb">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Htv">Encode <code class="code-inline tex2jax_ignore">IXLOVEXMATH</code> using the cryptosystem in Example 7.1.1.</p>
            <div class="solutions">
              <div class="hint solution-like" id="xbu"><span class="type">Hint</span>:<p id="hby"><code class="code-inline tex2jax_ignore">LAORYHAPDWK</code></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="UUk">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="nAE">Decode <code class="code-inline tex2jax_ignore">ZLOOA WKLVA EHARQ WKHA ILQDO</code>, which was encoded using the cryptosystem in Example 7.1.1.</p>
          </article>
          <article class="exercise exercise-like" id="Bbt">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="THN">Assuming that monoalphabetic code was used to encode the following secret message, what was the original message?</p>
            <pre class="code-block tex2jax_ignore">APHUO EGEHP PEXOV FKEUH CKVUE CHKVE APHUO
EGEHU EXOVL EXDKT VGEFT EHFKE UHCKF TZEXO
VEZDT TVKUE XOVKV ENOHK ZFTEH TEHKQ LEROF
PVEHP PEXOV ERYKP GERYT GVKEG XDRTE RGAGA
</pre>
            <p id="zOW">What is the significance of this message in the history of cryptography?</p>
            <div class="solutions">
              <div class="hint solution-like" id="pwV"><span class="type">Hint</span>:<p id="NiH">Hint: <code class="code-inline tex2jax_ignore">V = E</code>, <code class="code-inline tex2jax_ignore">E = X</code> (also used for spaces and punctuation), <code class="code-inline tex2jax_ignore">K = R</code>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="hiC">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="fWf">What is the total number of possible monoalphabetic cryptosystems? How secure are such cryptosystems?</p>
            <div class="solutions">
              <div class="hint solution-like" id="BLn"><span class="type">Hint</span>:<p id="tpQ"><nemeth class="inline">⠼⠆⠖⠖⠀⠤⠼⠂</nemeth></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NpL">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Mdo">Prove that a <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrix <i class="one-letter">A</i> with entries in <nemeth class="inline">⠸⠠⠵⠆⠖</nemeth> is invertible if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠙⠑⠞⠀⠷⠠⠁⠾⠠⠀⠼⠆⠖⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="twU">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="skx">Given the matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠒⠀⠲⠠⠾⠀⠠⠷⠆⠀⠒⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, use the encryption function <nemeth class="inline">⠋⠷⠸⠏⠾⠀⠨⠅⠀⠠⠁⠸⠏⠬⠸⠃</nemeth> to encode the message <code class="code-inline tex2jax_ignore">CRYPTOLOGY</code>, where <nemeth class="inline">⠸⠃⠀⠨⠅⠀⠷⠼⠆⠠⠀⠼⠢⠾⠘⠞</nemeth>. What is the decoding function?</p>
          </article>
          <article class="exercise exercise-like" id="ZEd">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="YrG">Encrypt each of the following <abbr class="acronym">RSA</abbr> messages <i class="one-letter">x</i> so that <i class="one-letter">x</i> is divided into blocks of integers of length <nemeth class="inline">⠼⠆</nemeth>; that is, if <nemeth class="inline">⠭⠀⠨⠅⠀⠼⠂⠲⠆⠢⠆⠦</nemeth>, encode <nemeth class="inline">⠼⠂⠲</nemeth>, <nemeth class="inline">⠼⠆⠢</nemeth>, and <nemeth class="inline">⠼⠆⠦</nemeth> separately.</p>
            <ol class="outerlist">
              <li>a. <p id="mgQ"><nemeth class="inline">⠝⠀⠨⠅⠀⠼⠒⠢⠢⠂⠠⠀⠠⠑⠀⠨⠅⠀⠼⠖⠆⠔⠠⠀⠭⠀⠨⠅⠀⠼⠒⠂</nemeth></p></li>
              <li>b. <p id="SnZ"><nemeth class="inline">⠝⠀⠨⠅⠀⠼⠆⠆⠢⠶⠠⠀⠠⠑⠀⠨⠅⠀⠼⠲⠶⠠⠀⠭⠀⠨⠅⠀⠼⠆⠒</nemeth></p></li>
              <li>c. <p id="yvi"><nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠆⠴⠔⠶⠔⠠⠀⠠⠑⠀⠨⠅⠀⠼⠂⠒⠆⠢⠂⠠⠀⠭⠀⠨⠅⠀⠼⠂⠲⠆⠒⠶⠂</nemeth></p></li>
              <li>d. <p id="eCr"><nemeth class="inline">⠝⠀⠨⠅⠀⠼⠲⠢⠖⠆⠔⠠⠀⠠⠑⠀⠨⠅⠀⠼⠶⠦⠂⠠⠀⠭⠀⠨⠅⠀⠼⠆⠒⠂⠢⠖⠂</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="anX"><span class="type">Hint</span>:<p id="ZwZ">(a) <nemeth class="inline">⠼⠆⠶⠔⠂</nemeth>; (c) <nemeth class="inline">⠼⠂⠂⠆⠂⠒⠢⠆⠢⠴⠒⠆⠲⠲⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="FLm">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="EyP">Compute the decoding key <i class="one-letter">D</i> for each of the encoding keys in Exercise 7.4.7.</p>
          </article>
          <article class="exercise exercise-like" id="lSv">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="kFY">Decrypt each of the following <abbr class="acronym">RSA</abbr> messages <i class="one-letter">y</i>.</p>
            <ol class="outerlist">
              <li>a. <p id="jmk"><nemeth class="inline">⠝⠀⠨⠅⠀⠼⠒⠢⠢⠂⠠⠀⠠⠙⠀⠨⠅⠀⠼⠂⠔⠔⠶⠠⠀⠽⠀⠨⠅⠀⠼⠆⠶⠔⠂</nemeth></p></li>
              <li>b. <p id="Ptt"><nemeth class="inline">⠝⠀⠨⠅⠀⠼⠢⠦⠔⠒⠠⠀⠠⠙⠀⠨⠅⠀⠼⠦⠂⠠⠀⠽⠀⠨⠅⠀⠼⠒⠲</nemeth></p></li>
              <li>c. <p id="vAC"><nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠆⠴⠔⠶⠔⠠⠀⠠⠙⠀⠨⠅⠀⠼⠆⠶⠒⠒⠂⠠⠀⠽⠀⠨⠅⠀⠼⠂⠂⠆⠂⠒⠢</nemeth></p></li>
              <li>d. <p id="bHL"><nemeth class="inline">⠝⠀⠨⠅⠀⠼⠶⠔⠲⠴⠒⠠⠀⠠⠙⠀⠨⠅⠀⠼⠖⠶⠂⠠⠀⠽⠀⠨⠅⠀⠼⠂⠆⠔⠒⠦⠂</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="SJy"><span class="type">Hint</span>:<p id="FEi">(a) <nemeth class="inline">⠼⠒⠂</nemeth> (c) <nemeth class="inline">⠼⠂⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="RZE">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="QNh">For each of the following encryption keys <nemeth class="inline">⠷⠝⠠⠀⠠⠑⠾</nemeth> in the <abbr class="acronym">RSA</abbr> cryptosystem, compute <i class="one-letter">D</i>.</p>
            <ol class="outerlist">
              <li>a. <p id="grE"><nemeth class="inline">⠷⠝⠠⠀⠠⠑⠾⠀⠨⠅⠀⠷⠼⠲⠢⠂⠠⠀⠼⠆⠒⠂⠾</nemeth></p></li>
              <li>b. <p id="MyN"><nemeth class="inline">⠷⠝⠠⠀⠠⠑⠾⠀⠨⠅⠀⠷⠼⠒⠴⠢⠒⠠⠀⠼⠂⠔⠆⠂⠾</nemeth></p></li>
              <li>c. <p id="sFW"><nemeth class="inline">⠷⠝⠠⠀⠠⠑⠾⠀⠨⠅⠀⠷⠼⠒⠶⠔⠦⠖⠶⠒⠒⠠⠀⠼⠂⠆⠒⠶⠂⠾</nemeth></p></li>
              <li>d. <p id="YNf"><nemeth class="inline">⠷⠝⠠⠀⠠⠑⠾⠀⠨⠅⠀⠷⠼⠂⠖⠒⠔⠲⠦⠢⠲⠒⠂⠒⠠⠀⠼⠒⠲⠢⠶⠦⠲⠢⠂⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="eXQ"><span class="type">Hint</span>:<p id="lLr">(a) <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠂⠡⠲⠂</nemeth>; (c) <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠦⠶⠶⠔⠡⠲⠒⠆⠶</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ygN">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="wUq">Encrypted messages are often divided into blocks of <i class="one-letter">n</i> letters. A message such as <code class="code-inline tex2jax_ignore">THE WORLD WONDERS WHY</code> might be encrypted as <code class="code-inline tex2jax_ignore">JIW OCFRJ LPOEVYQ IOC</code> but sent as <code class="code-inline tex2jax_ignore">JIW OCF RJL POE VYQ IOC</code>. What are the advantages of using blocks of <i class="one-letter">n</i> letters?</p>
          </article>
          <article class="exercise exercise-like" id="enW">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="dbz">Find integers <i class="one-letter">n</i>, <i class="one-letter">E</i>, and <i class="one-letter">X</i> such that</p>
            <div class="displaymath">
              <nemeth>⠠⠭⠘⠠⠑⠐⠀⠸⠇⠀⠠⠭⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">. Is this a potential problem in the <abbr class="acronym">RSA</abbr> cryptosystem?</p>
          </article>
          <article class="exercise exercise-like" id="Kvf">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="JiI">Every person in the class should construct an <abbr class="acronym">RSA</abbr> cryptosystem using primes that are <nemeth class="inline">⠼⠂⠴</nemeth> to <nemeth class="inline">⠼⠂⠢</nemeth> digits long. Hand in <nemeth class="inline">⠷⠝⠠⠀⠠⠑⠾</nemeth> and an encoded message. Keep <i class="one-letter">D</i> secret. See if you can break one another's codes.</p>
          </article>
        </section>
        <section class="exercises" id="XOQ">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">7.5</span> <span class="title">Additional Exercises: Primality and Factoring</span></div>
          <p id="nff">In the <abbr class="acronym">RSA</abbr> cryptosystem it is important to be able to find large prime numbers easily. Also, this cryptosystem is not secure if we can factor a composite number that is the product of two large primes. The solutions to both of these problems are quite easy. To find out if a number <i class="one-letter">n</i> is prime or to factor <i class="one-letter">n</i>, we can use trial division. We simply divide <i class="one-letter">n</i> by <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠆⠠⠀⠼⠒⠠⠀⠄⠄⠄⠀⠠⠀⠜⠝⠻</nemeth>. Either a factorization will be obtained, or <i class="one-letter">n</i> is prime if no <i class="one-letter">d</i> divides <i class="one-letter">n</i>. The problem is that such a computation is prohibitively time-consuming if <i class="one-letter">n</i> is very large.</p>
          <article class="exercise exercise-like" id="WJx">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ppR">A better algorithm for factoring odd positive integers is <dfn class="terminology">Fermat's factorization algorithm</dfn>. </p>
            <ol class="outerlist">
              <li>a. <p id="dwY">Let <nemeth class="inline">⠝⠀⠨⠅⠀⠁⠃</nemeth> be an odd composite number. Prove that <i class="one-letter">n</i> can be written as the difference of two perfect squares:</p><div class="displaymath"><nemeth>⠝⠀⠨⠅⠀⠭⠘⠆⠐⠤⠽⠘⠆⠐⠀⠨⠅⠀⠷⠭⠤⠽⠾⠷⠭⠬⠽⠾</nemeth></div><p data-braille="continuation">. Consequently, a positive odd integer can be factored exactly when we can find integers <i class="one-letter">x</i> and <i class="one-letter">y</i> such that <nemeth class="inline">⠝⠀⠨⠅⠀⠭⠘⠆⠐⠤⠽⠘⠆</nemeth>.</p></li>
              <li>b. <p id="JEh">Write a program to implement the following factorization algorithm based on the observation in part (a). The expression <code class="code-inline tex2jax_ignore">ceiling(sqrt(n))</code> means the smallest integer greater than or equal to the square root of <i class="one-letter">n</i>. Write another program to do factorization using trial division and compare the speed of the two algorithms. Which algorithm is faster and why?</p></li>
            </ol>
            <div class="sidebyside">
              <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
                <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                  <pre class="plainprint">x := ceiling(sqrt(n))
y := 1

1 : while x^2 - y^2 &gt; n do
    y := y + 1

if x^2 - y^2 &lt; n then
    x := x + 1
    y := 1
    goto 1
else if x^2 - y^2 = 0 then
    a := x - y
    b := x + y
    write n = a * b
</pre>
                </div>
              </div>
            </div>
          </article>
          <article class="exercise exercise-like" id="CQG">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Primality Testing.</span>
            </h6>
            <p id="Vxa">Recall Fermat's Little Theorem from Chapter 6. Let <i class="one-letter">p</i> be prime with <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠏⠾⠀⠨⠅⠀⠼⠂</nemeth>. Then <nemeth class="inline">⠁⠘⠏⠤⠂⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠏⠾</nemeth>. We can use Fermat's Little Theorem as a screening test for primes. For example, <nemeth class="inline">⠼⠂⠢</nemeth> cannot be prime since</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠘⠂⠢⠤⠂⠐⠀⠸⠇⠀⠼⠆⠘⠂⠲⠐⠀⠸⠇⠀⠼⠲⠷⠍⠕⠙⠀⠂⠢⠾</nemeth>
            </div>
            <p data-braille="continuation">. However, <nemeth class="inline">⠼⠂⠶</nemeth> is a potential prime since</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠘⠂⠶⠤⠂⠐⠀⠸⠇⠀⠼⠆⠘⠂⠖⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠂⠶⠾</nemeth>
            </div>
            <p data-braille="continuation">. We say that an odd composite number <i class="one-letter">n</i> is a <dfn class="terminology">pseudoprime</dfn>  if</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠘⠝⠤⠂⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">. Which of the following numbers are primes and which are pseudoprimes?</p>
            <ol class="outerlist">
              <li>a. <p id="pLq"><nemeth class="inline">⠼⠒⠲⠆</nemeth></p></li>
              <li>b. <p id="VSz"><nemeth class="inline">⠼⠦⠂⠂</nemeth></p></li>
              <li>c. <p id="BZI">601</p></li>
              <li>d. <p id="igR"><nemeth class="inline">⠼⠢⠖⠂</nemeth></p></li>
              <li>e. <p id="Ooa"><nemeth class="inline">⠼⠶⠶⠂</nemeth></p></li>
              <li>f. <p id="uvj"><nemeth class="inline">⠼⠖⠒⠂</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="iXP">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="BEj">Let <i class="one-letter">n</i> be an odd composite number and <i class="one-letter">b</i> be a positive integer such that <nemeth class="inline">⠛⠉⠙⠀⠷⠃⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>. If <nemeth class="inline">⠃⠘⠝⠤⠂⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>, then <i class="one-letter">n</i> is a <dfn class="terminology">pseudoprime base</dfn> <i class="one-letter">b</i>. Show that <nemeth class="inline">⠼⠒⠲⠂</nemeth> is a pseudoprime base <nemeth class="inline">⠼⠆</nemeth> but not a pseudoprime base <nemeth class="inline">⠼⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="PeY">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="hLs">Write a program to determine all primes less than <nemeth class="inline">⠼⠆⠴⠴⠴</nemeth> using trial division. Write a second program that will determine all numbers less than <nemeth class="inline">⠼⠆⠴⠴⠴</nemeth> that are either primes or pseudoprimes. Compare the speed of the two programs. How many pseudoprimes are there below <nemeth class="inline">⠼⠆⠴⠴⠴</nemeth>?</p>
            <p id="NSB">There exist composite numbers that are pseudoprimes for all bases to which they are relatively prime. These numbers are called <dfn class="terminology">Carmichael numbers</dfn>.  The first Carmichael number is <nemeth class="inline">⠼⠢⠖⠂⠀⠨⠅⠀⠼⠒⠡⠂⠂⠡⠂⠶</nemeth>. In 1992, Alford, Granville, and Pomerance proved that there are an infinite number of Carmichael numbers [4]. However, Carmichael numbers are very rare. There are only 2163 Carmichael numbers less than <nemeth class="inline">⠼⠆⠢⠈⠡⠂⠴⠘⠔</nemeth>. For more sophisticated primality tests, see [1], [6], or [7].</p>
          </article>
        </section>
        <section class="references" id="hbc">
          <div class="none"><span class="type">References</span> <span class="codenumber">7.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="Nil"><div class="bibitem">[1]</div>  <div class="bibentry"> Bressoud, D. M. <i>Factorization and Primality Testing</i>. Springer-Verlag, New York, 1989.</div></article>
          <article class="bib" id="tpu"><div class="bibitem">[2]</div>  <div class="bibentry"> Diffie, W. and Hellman, M. E. “New Directions in Cryptography,” <i>IEEE Trans. Inform. Theory</i> <b>22</b> (1976), 644–54.</div></article>
          <article class="bib" id="ZwD"><div class="bibitem">[3]</div>  <div class="bibentry"> Gardner, M. “Mathematical games: A new kind of cipher that would take millions of years to break,” <i>Scientific American</i> <b>237</b> (1977), 120–24.</div></article>
          <article class="bib" id="FDM"><div class="bibitem">[4]</div>  <div class="bibentry"> Granville, A. “Primality Testing and Carmichael Numbers,” <i>Notices of the American Mathematical Society</i> <b>39</b> (1992), 696–700.</div></article>
          <article class="bib" id="lKV"><div class="bibitem">[5]</div>  <div class="bibentry"> Hellman, M. E. “The Mathematics of Public Key Cryptography,” <i>Scientific American</i> <b>241</b> (1979), 130–39.</div></article>
          <article class="bib" id="RSe"><div class="bibitem">[6]</div>  <div class="bibentry"> Koblitz, N. <i>A Course in Number Theory and Cryptography</i>. 2nd ed. Springer, New York, 1994.</div></article>
          <article class="bib" id="xZn"><div class="bibitem">[7]</div>  <div class="bibentry"> Pomerance, C., ed. “Cryptology and Computational Number Theory”, <i>Proceedings of Symposia in Applied Mathematics</i> <b>42</b> (1990) American Mathematical Society, Providence, RI.</div></article>
          <article class="bib" id="egw"><div class="bibitem">[8]</div>  <div class="bibentry"> Rivest, R. L., Shamir, A., and Adleman, L., “A Method for Obtaining Signatures and Public-key Cryptosystems,” <i>Comm. ACM</i> <b>21</b> (1978), 120–26.</div></article>
        </section>
        <section class="section" id="cyJ">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">7.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="kNc">
            <p id="bmm">Since Sage began as software to support research in number theory, we can quickly and easily demonstrate the internal workings of the <abbr class="acronym">RSA</abbr> algorithm. Recognize that, in practice, many other details such as encoding between letters and integers, or protecting one's private key, are equally important for the security of communications. So <abbr class="acronym">RSA</abbr> itself is just the theoretical foundation.</p>
          </section>
          <section class="subsection" id="TeX">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">7.7.1</span> <span class="title">Constructing Keys</span></div>
            <p id="MNi">We will suppose that Alice wants to send a secret message to Bob, along with message verification (also known as a message with a digital signature). So we begin with the construction of key pairs (private and public) for both Alice and Bob. We first need two large primes for both individuals, and their product. In practice, values of <i class="one-letter">n</i> would have hundreds of digits, rather than just <nemeth class="inline">⠼⠆⠂</nemeth> as we have done here.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p_a = next_prime(10^10)
q_a = next_prime(p_a)
p_b = next_prime((3/2)*10^10)
q_b = next_prime(p_b)
n_a = p_a * q_a
n_b = p_b * q_b
n_a, n_b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(100000000520000000627, 225000000300000000091)
</div>
            </article>
            <p id="sUr">Computationally, the value of the Euler <nemeth class="inline">⠨⠋</nemeth>-function for a product of primes <nemeth class="inline">⠏⠟</nemeth> can be obtained from <nemeth class="inline">⠷⠏⠤⠂⠾⠷⠟⠤⠂⠾</nemeth>, but we could use Sage's built-in function just as well.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">m_a = euler_phi(n_a)
m_b = euler_phi(n_b)
m_a, m_b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(100000000500000000576, 225000000270000000072)
</div>
            </article>
            <p id="ZbA">Now we can create the encryption and decryption exponents. We choose the encryption exponent as a (small) number relatively prime to the value of <i class="one-letter">m</i>. With Sage we can factor <i class="one-letter">m</i> quickly to help us choose this value. In practice we would not want to do this computation for large values of <i class="one-letter">m</i>, so we might more easily choose “random” values and check for the first value which is relatively prime to <i class="one-letter">m</i>. The decryption exponent is the multiplicative inverse, mod <i class="one-letter">m</i>, of the encryption exponent. If you construct an improper encryption exponent (not relatively prime to <i class="one-letter">m</i>), the computation of the multiplicative inverse will fail (and Sage will tell you so). We do this twice —- for both Alice and Bob.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">factor(m_a)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2^6 * 3 * 11 * 17 * 131 * 521 * 73259 * 557041
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">E_a = 5*23
D_a = inverse_mod(E_a, m_a)
D_a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">20869565321739130555
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">factor(m_b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2^3 * 3^4 * 107 * 1298027 * 2500000001
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">E_b = 7*29
D_b = inverse_mod(E_b, m_b)
D_b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">24384236482463054195
</div>
            </article>
            <p id="FiJ">At this stage, each individual would publish their values of <i class="one-letter">n</i> and <i class="one-letter">E</i>, while keeping <i class="one-letter">D</i> very private and secure. In practice <i class="one-letter">D</i> should be protected on the user's hard disk by a password only the owner knows. For even greater security a person might only have two copies of their private key, one on a <abbr class="acronym">USB</abbr> memory stick they always carry with them, and a backup in their sage deposit box. Every time the person uses <i class="one-letter">D</i> they would need to provide the password. The value of <i class="one-letter">m</i> can be discarded. For the record, here are all the keys:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">print("Alice's public key, n:", n_a, "E:", E_a)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Alice's public key, n: 100000000520000000627 E: 115
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">print("Alice's private key, D:", D_a)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Alice's private key, D: 20869565321739130555
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">print("Bob's public key, n:", n_b, "E:", E_b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Bob's public key, n: 225000000300000000091 E: 203
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">print("Bob's private key, D:", D_b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Bob's private key, D: 24384236482463054195
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="zmg">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">7.7.2</span> <span class="title">Signing and Encoding a Message</span></div>
            <p id="lpS">Alice is going to construct a message as an English word with four letters. From these four letters we will construct a single number to represent the message in a form we can use in the <abbr class="acronym">RSA</abbr> algorithm. The function <code class="code-inline tex2jax_ignore">ord()</code> will convert a single letter to its <abbr class="acronym">ASCII</abbr> code value, a number between 0 and 127. If we use these numbers as “digits” mod 128, we can be sure that Alice's four-letter word will encode to an integer less than <nemeth class="inline">⠼⠂⠆⠦⠘⠲⠐⠀⠨⠅⠀⠼⠆⠖⠦⠠⠀⠼⠲⠒⠢⠠⠀⠼⠲⠢⠖</nemeth>. The particular maximum value is not important, so long as it is smaller than our value of <i class="one-letter">n</i> since all of our subsequent arithmetic is mod <i class="one-letter">n</i>. We choose a popular four-letter word, convert to <abbr class="acronym">ASCII</abbr> “digits” with a list comprehension, and then construct the integer from the digits with the right base. Notice how we can treat the word as a list and that the first digit in the list is in the “ones” place (we say the list is in “little-endian” order).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">word = 'Sage'
digits = [ord(letter) for letter in word]
digits
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[83, 97, 103, 101]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">message = ZZ(digits, 128)
message
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">213512403
</div>
            </article>
            <p id="Rxb">First, Alice will sign her message to provide message verification. She uses her private key for this, since this is an act that only she should be able to perform.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">signed = power_mod(message, D_a, n_a)
signed
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">47838774644892618423
</div>
            </article>
            <p id="xEk">Then Alice encrypts her message so that only Bob can read it. To do this, she uses Bob's public key. Notice how she does not have to even know Bob — for example, she could have obtained Bob's public key off his web site or maybe Bob announced his public key in an advertisement in the <span class="booktitle">New York Times</span>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">encrypted = power_mod(signed, E_b, n_b)
encrypted
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">111866209291209840488
</div>
            </article>
            <p id="dLt">Alice's communication is now ready to travel on any communications network, no matter how insecure the network may be, and no matter how many snoops may be monitoring the network.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="ftp">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">7.7.3</span> <span class="title">Decoding and Verifying a Message</span></div>
            <p id="JSC">Now assume that the value of <code class="code-inline tex2jax_ignore">encrypted</code> has reached Bob. Realize that Bob may not know Alice, and realize that Bob does not even necessarily believe what he has received has genuinely originated from Alice. An adversary could be trying to confuse Bob by sending messages that claim to be from Alice. First, Bob must unwrap the encyption Alice has provided. This is an act only Bob, as the intended recipient, should be able to do. And he does it by using his private key, which only he knows, and which he has kept secure.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">decrypted = power_mod(encrypted, D_b, n_b)
decrypted
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">47838774644892618423
</div>
            </article>
            <p id="pZL">Right now, this means very little to Bob. Anybody could have sent him an encoded message. However, this was a message Alice signed. Lets unwrap the message signing. Notice that this uses Alice's public key. Bob does not need to know Alice — for example, he could obtain Alice's key off her web site or maybe Alice announced her public key in an advertisement in the <span class="booktitle">New York Times</span>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">received = power_mod(decrypted, E_a, n_a)
received
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">213512403
</div>
            </article>
            <p id="WgU">Bob needs to transform this integer representation back to a word with letters. The <code class="code-inline tex2jax_ignore">chr()</code> function converts <abbr class="acronym">ASCII</abbr> code values to letters, and we use a list comprehension to do this repeatedly.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">digits = received.digits(base=128)
letters = [chr(ascii) for ascii in digits]
letters
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['S', 'a', 'g', 'e']
</div>
            </article>
            <p id="Cod">If we would like a slightly more recognizable result, we can combine the letters into a string.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">''.join(letters)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">'Sage'
</div>
            </article>
            <p id="ivm">Bob is pleased to obtain such an informative message from Alice. What would have happened if an imposter had sent a message ostensibly from Alice, or what if an adversary had intercepted Alice's original message and replaced it with a tampered message? (The latter is known as a “man in the middle” attack.)</p>
            <p id="OCv">In either case, the rogue party would not be able to duplicate Alice's first action — signing her message. If an adversary somehow signs the message, or tampers with it, the step where Bob unwraps the signing will lead to total garbage.  (Try it!)  Because Bob received a legitimate word, properly capitalized, he has confidence that the message he unsigned is the same as the message Alice signed. In practice, if Alice sent several hundred words as her message, the odds that it will unsign as cohrent text are astronomically small.</p>
            <p id="uJE">What have we demonstrated?</p>
            <ol class="outerlist">
              <li>1. <p id="aCs">Alice can send messages that only Bob can read.</p></li>
              <li>2. <p id="GJB">Bob can receive secret messages from anybody.</p></li>
              <li>3. <p id="mQK">Alice can sign messages, so that then Bob (or anybody else)knows they are genuinely from Alice.</p></li>
            </ol>
            <p id="aQN">Of course, without making new keys, you can reverse the roles of Alice and Bob. And if Carol makes a key pair, she can communicate with both Alice and Bob in the same fashion.</p>
            <p id="GXW">If you want to use <abbr class="acronym">RSA</abbr> public-key encryption seriously, investigate the open source software GNU Privacy Guard, aka <code class="code-inline tex2jax_ignore">GPG</code>, which is freely available at <a class="external" href="https://www.gnupg.org/" target="_blank">www.gnupg.org/</a>. Notice that it only makes sense to use encryption programs that allow you to look at the source code.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="DVZ">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">7.8</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="vmh">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="tZK">Construct a keypair for Alice using the first two primes greater than <nemeth class="inline">⠼⠂⠴⠘⠂⠆</nemeth>. For your choice of <i class="one-letter">E</i>, use a single prime number and use the smallest possible choice.</p>
            <p id="agT">Output the values of <i class="one-letter">n</i>, <i class="one-letter">E</i>, and <i class="one-letter">D</i> for Alice. Then use Sage commands to verify that Alice's encryption and decryption keys are multiplicative inverses.</p>
          </article>
          <article class="exercise exercise-like" id="btq">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="Goc">Construct a keypair for Bob using the first two primes greater than <nemeth class="inline">⠼⠆⠡⠂⠴⠘⠂⠆</nemeth>. For your choice of <i class="one-letter">E</i>, use a single prime number and use the smallest possible choice. Output the values of <i class="one-letter">n</i>, <i class="one-letter">E</i>, and <i class="one-letter">D</i> for Alice.</p>
            <p id="mvl">Encode the word <code class="code-inline tex2jax_ignore">Math</code> using <abbr class="acronym">ASCII</abbr> values in the same manner as described in this section (keep the capitalization as shown). Create a signed message of this word for communication from Alice to Bob. Output the three integers: the message, the signed message and the signed, encrypted message.</p>
          </article>
          <article class="exercise exercise-like" id="HAz">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="SCu">Demonstrate how Bob converts the message received from Alice back into the word <code class="code-inline tex2jax_ignore">Math</code>. Output the value of the intermediate computations and the final human-readable message.</p>
          </article>
          <article class="exercise exercise-like" id="nHI">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="yJD">Create a new signed message from Alice to Bob. Simulate the message being tampered with by adding <nemeth class="inline">⠼⠂</nemeth> to the integer Bob receives, before he decrypts it. What result does Bob get for the letters of the message when he decrypts and unsigns the tampered message?</p>
          </article>
          <article class="exercise exercise-like" id="TOR">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Classroom Exercise.</span>
            </h6>
            <p id="eQM">Organize a class into several small groups. Have each group construct key pairs with some minimum size (digits in <i class="one-letter">n</i>). Each group should keep their private key to themselves, but make their public key available to everybody in the room. It could be written on the board (error-prone) or maybe pasted in a public site like <a class="external" href="http://pastebin.com/" target="_blank"><code class="code-inline tex2jax_ignore">pastebin.com</code></a>. Then each group can send a signed message to another group, where the groups could be arranged logically in a circular fashion for this purpose. Of course, messages should be posted publicly as well. Expect a success rate somewhere between 50% and 100%.</p>
            <p id="KXV">If you do not do this in class, grab a study buddy and send each other messages in the same manner. Expect a success rate of 0%, 50% or 100%.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="jTr">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">8</span> <span class="title">Algebraic Coding Theory</span></div>
        <section class="introduction" id="rMl">
          <p id="cYZ">Coding theory is an application of algebra that has become increasingly important over the last several decades. When we transmit data, we are concerned about sending a message over a channel that could be affected by “noise.” We wish to be able to encode and decode the information in a manner that will allow the detection, and possibly the correction, of errors caused by noise. This situation arises in many areas of communications, including radio, telephone, television, computer communications, and digital media technology. Probability, combinatorics, group theory, linear algebra, and polynomial rings over finite fields all play important roles in coding theory.</p>
        </section>
        <section class="section" id="lIE">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">8.1</span> <span class="title">Error-Detecting and Correcting Codes</span></div>
          <section class="introduction" id="XTu">
            <p id="Jgi">Let us examine a simple model of a communications system for transmitting and receiving coded messages (Figure 8.1.1).</p>
            <figure class="figure figure-like" data-braille="figure-like" id="BBJ">
              <div data-braille="image">
                <p>Image: A vertical flow chart where an m-digit message is passed to an encoder which is represented by a rectangle to become an n-digit codeword which is passed to a transmitter that is also represented by a rectangle.  The outcome of the transmitter may have noise and is passed to the receiver which is prepresented by a rectangle.  The receiver passes an n-digit received word to a decoder that is represented by a rectangle.  The decoder produces an m-digit received word or an error.</p>
                <p>ID: algcodes-encode-decode</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">8.1.1<span class="period">.</span></span><span class="space"> </span>Encoding and decoding messages</figcaption>
            </figure>
            <p id="pnr">Uncoded messages may be composed of letters or characters, but typically they consist of binary <i class="one-letter">m</i>-tuples. These messages are encoded into codewords, consisting of binary <i class="one-letter">n</i>-tuples, by a device called an <dfn class="terminology">encoder</dfn>. The message is transmitted and then decoded. We will consider the occurrence of errors during transmission. An <dfn class="terminology">error</dfn> occurs if there is a change in one or more bits in the codeword. A <dfn class="terminology">decoding scheme</dfn> is a method that either converts an arbitrarily received <i class="one-letter">n</i>-tuple into a meaningful decoded message or gives an error message for that <i class="one-letter">n</i>-tuple. If the received message is a codeword (one of the special <i class="one-letter">n</i>-tuples allowed to be transmitted), then the decoded message must be the unique message that was encoded into the codeword. For received non-codewords, the decoding scheme will give an error indication, or, if we are more clever, will actually try to correct the error and reconstruct the original message. Our goal is to transmit error-free messages as cheaply and quickly as possible.</p>
            <article class="example example-like" data-braille="example-like" id="isz">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="lIR">One possible coding scheme would be to send a message several times and to compare the received copies with one another. Suppose that the message to be encoded is a binary <i class="one-letter">n</i>-tuple <nemeth class="inline">⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾</nemeth>. The message is encoded into a binary <nemeth class="inline">⠼⠒⠝</nemeth>-tuple by simply repeating the message three times:</p>
              <div class="displaymath">
                <nemeth>⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠀⠫⠳⠒⠒⠕⠀⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠠⠀⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠠⠀⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. To decode the message, we choose as the <i class="one-letter">i</i>th digit the one that appears in the <i class="one-letter">i</i>th place in at least two of the three transmissions. For example, if the original message is <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠾</nemeth>, then the transmitted message will be <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠴⠂⠂⠴⠴⠂⠂⠴⠾</nemeth>. If there is a transmission error in the fifth digit, then the received codeword will be <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠂⠂⠂⠴⠴⠂⠂⠴⠾</nemeth>, which will be correctly decoded as <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠾</nemeth>.<a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-3" id="fn-3"><sup> 1 </sup></a> This triple-repetition method will automatically detect and correct all single errors, but it is slow and inefficient: to send a message consisting of <i class="one-letter">n</i> bits, <nemeth class="inline">⠼⠆⠝</nemeth> extra bits are required, and we can only detect and correct single errors. We will see that it is possible to find an encoding scheme that will encode a message of <i class="one-letter">n</i> bits into <i class="one-letter">m</i> bits with <i class="one-letter">m</i> much smaller than <nemeth class="inline">⠼⠒⠝</nemeth>.</p>
              <div class="hidden-content tex2jax_ignore" id="hk-fn-3">
                <div class="fn">We will adopt the convention that bits are numbered left to right in binary <i class="one-letter">n</i>-tuples.</div>
              </div>
            </article>
            <article class="example example-like" data-braille="example-like" id="OzI">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="RQa"><dfn class="terminology">Even parity</dfn>, a commonly used coding scheme, is much more efficient than the simple repetition scheme. The <abbr class="acronym">ASCII</abbr> (American Standard Code for Information Interchange) coding system uses binary <nemeth class="inline">⠼⠦</nemeth>-tuples, yielding <nemeth class="inline">⠼⠆⠘⠦⠐⠀⠨⠅⠀⠼⠆⠢⠖</nemeth> possible <nemeth class="inline">⠼⠦</nemeth>-tuples. However, only seven bits are needed since there are only <nemeth class="inline">⠼⠆⠘⠶⠐⠀⠨⠅⠀⠼⠂⠆⠦</nemeth> <abbr class="acronym">ASCII</abbr> characters. What can or should be done with the extra bit? Using the full eight bits, we can detect single transmission errors. For example, the <abbr class="acronym">ASCII</abbr> codes for A, B, and C are</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠀⠨⠅⠀⠼⠖⠢⠰⠂⠴⠐⠀⠨⠅⠀⠼⠴⠂⠴⠴⠴⠴⠴⠂⠰⠆⠐⠠⠀⠠⠃⠀⠀⠨⠅⠀⠼⠖⠖⠰⠂⠴⠐⠀⠨⠅⠀⠼⠴⠂⠴⠴⠴⠴⠂⠴⠰⠆⠐⠠⠀⠠⠉⠀⠀⠨⠅⠀⠼⠖⠶⠰⠂⠴⠐⠀⠨⠅⠀⠼⠴⠂⠴⠴⠴⠴⠂⠂⠰⠆</nemeth>
              </div>
              <p data-braille="continuation">. Notice that the leftmost bit is always set to 0; that is, the <nemeth class="inline">⠼⠂⠆⠦</nemeth> <abbr class="acronym">ASCII</abbr> characters have codes</p>
              <div class="displaymath">
                <nemeth>⠼⠴⠴⠴⠴⠴⠴⠴⠴⠰⠆⠀⠀⠨⠅⠀⠼⠴⠰⠂⠴⠐⠠⠀⠀⠀⠣⠄⠄⠄⠀⠴⠂⠂⠂⠂⠂⠂⠂⠰⠆⠀⠀⠨⠅⠀⠼⠂⠆⠶⠰⠂⠴</nemeth>
              </div>
              <p data-braille="continuation">. The bit can be used for error checking on the other seven bits. It is set to either <nemeth class="inline">⠼⠴</nemeth> or <nemeth class="inline">⠼⠂</nemeth> so that the total number of <nemeth class="inline">⠼⠂</nemeth> bits in the representation of a character is even. Using even parity, the codes for A, B, and C now become</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠀⠨⠅⠀⠼⠴⠂⠴⠴⠴⠴⠴⠂⠰⠆⠐⠠⠀⠠⠃⠀⠀⠨⠅⠀⠼⠴⠂⠴⠴⠴⠴⠂⠴⠰⠆⠐⠠⠀⠠⠉⠀⠀⠨⠅⠀⠼⠂⠂⠴⠴⠴⠴⠂⠂⠰⠆</nemeth>
              </div>
              <p data-braille="continuation">. Suppose an A is sent and a transmission error in the sixth bit is caused by noise over the communication channel so that  <nemeth class="inline">⠷⠼⠴⠂⠴⠴⠴⠂⠴⠂⠾</nemeth> is received. We know an error has occurred since the received word has an odd number of <nemeth class="inline">⠼⠂</nemeth>s, and we can now request that the codeword be transmitted again. When used for error checking, the leftmost bit is called a <dfn class="terminology">parity check bit</dfn>.</p>
              <p id="xXj">By far the most common error-detecting codes used in computers are based on the addition of a parity bit. Typically, a computer stores information in <i class="one-letter">m</i>-tuples called <dfn class="terminology">words</dfn>. Common word lengths are <nemeth class="inline">⠼⠦</nemeth>, <nemeth class="inline">⠼⠂⠖</nemeth>, and <nemeth class="inline">⠼⠒⠆</nemeth> bits. One bit in the word is set aside as the parity check bit, and is not used to store information. This bit is set to either <nemeth class="inline">⠼⠴</nemeth> or <nemeth class="inline">⠼⠂</nemeth>, depending on the number of <nemeth class="inline">⠼⠂</nemeth>s in the word.</p>
              <p id="ees">Adding a parity check bit allows the detection of all single errors because changing a single bit either increases or decreases the number of <nemeth class="inline">⠼⠂</nemeth>s by one, and in either case the parity has been changed from even to odd, so the new word is not a codeword. (We could also construct an error detection scheme based on <dfn class="terminology">odd parity</dfn>; that is, we could set the parity check bit so that a codeword always has an odd number of <nemeth class="inline">⠼⠂</nemeth>s.)</p>
            </article>
            <p id="VuA">The even parity system is easy to implement, but has two drawbacks. First, multiple errors are not detectable. Suppose an A is sent and the first and seventh bits are changed from <nemeth class="inline">⠼⠴</nemeth> to <nemeth class="inline">⠼⠂</nemeth>. The received word is a codeword, but will be decoded into a C instead of an A. Second, we do not have the ability to correct errors. If the 8-tuple <nemeth class="inline">⠷⠼⠂⠴⠴⠂⠂⠴⠴⠴⠾</nemeth> is received, we know that an error has occurred, but we have no idea which bit has been changed. We will now investigate a coding scheme that will not only allow us to detect transmission errors but will actually correct the errors.</p>
            <article class="example example-like" data-braille="example-like" id="uGR">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="KlB">Suppose that our original message is either a <nemeth class="inline">⠼⠴</nemeth> or a <nemeth class="inline">⠼⠂</nemeth>, and that <nemeth class="inline">⠼⠴</nemeth> encodes to <nemeth class="inline">⠷⠼⠴⠴⠴⠾</nemeth> and <nemeth class="inline">⠼⠂</nemeth> encodes to <nemeth class="inline">⠷⠼⠂⠂⠂⠾</nemeth>. If only a single error occurs during transmission, we can detect and correct the error. For example, if a <nemeth class="inline">⠷⠼⠂⠴⠂⠾</nemeth> is received, then the second bit must have been changed from a <nemeth class="inline">⠼⠂</nemeth> to a <nemeth class="inline">⠼⠴</nemeth>. The originally transmitted codeword must have been <nemeth class="inline">⠷⠼⠂⠂⠂⠾</nemeth>. This method will detect and correct all single errors.</p>
              <figure class="table table-like" data-braille="figure-like" id="cww">
                <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">8.1.5<span class="period">.</span></span><span class="space"> </span>A repetition code</figcaption>
                <table>
                  <tr>
                    <td class="c m b0 r0 l0 t2 lines">Transmitted</td>
                    <td class="c m b0 r0 l0 t2 lines" data-braille="last-cell" colspan="8">Received Word</td>
                  </tr>
                  <tr>
                    <td class="c m b2 r0 l0 t0 lines">Codeword</td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠴⠴⠴</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠴⠴⠂</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠴⠂⠴</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠴⠂⠂</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂⠴⠴</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂⠴⠂</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂⠂⠴</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell">
                      <nemeth class="inline">⠼⠂⠂⠂</nemeth>
                    </td>
                  </tr>
                  <tr>
                    <td class="c m b0 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠴⠴⠴</nemeth>
                    </td>
                    <td class="c m b0 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠴</nemeth>
                    </td>
                    <td class="c m b0 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂</nemeth>
                    </td>
                    <td class="c m b0 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂</nemeth>
                    </td>
                    <td class="c m b0 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠆</nemeth>
                    </td>
                    <td class="c m b0 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂</nemeth>
                    </td>
                    <td class="c m b0 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠆</nemeth>
                    </td>
                    <td class="c m b0 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠆</nemeth>
                    </td>
                    <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                  </tr>
                  <tr>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂⠂⠂</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠆</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠆</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠆</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines">
                      <nemeth class="inline">⠼⠂</nemeth>
                    </td>
                    <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell">
                      <nemeth class="inline">⠼⠴</nemeth>
                    </td>
                  </tr>
                </table>
              </figure>
              <p id="qsK">In Table 8.1.5, we present all possible words that might be received for the transmitted codewords <nemeth class="inline">⠷⠼⠴⠴⠴⠾</nemeth> and <nemeth class="inline">⠷⠼⠂⠂⠂⠾</nemeth>. Table 8.1.5 also shows the number of bits by which each received <nemeth class="inline">⠼⠒</nemeth>-tuple differs from each original codeword.</p>
            </article>
          </section>
          <section class="subsection" id="QaA">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">8.1.1</span> <span class="title">Maximum-Likelihood Decoding</span></div>
            <p id="fyg">The coding scheme presented in Example 8.1.4 is not a complete solution to the problem because it does not account for the possibility of multiple errors. For example, either a (000) or a (111) could be sent and a (001) received. We have no means of deciding from the received word whether there was a single error in the third bit or two errors, one in the first bit and one in the second. No matter what coding scheme is used, an incorrect message could be received. We could transmit a (000), have errors in all three bits, and receive the codeword (111). It is important to make explicit assumptions about the likelihood and distribution of transmission errors so that, in a particular application, it will be known whether a given error detection scheme is appropriate. We will assume that transmission errors are rare, and, that when they do occur, they occur independently in each bit; that is, if <i class="one-letter">p</i> is the probability of an error in one bit and <i class="one-letter">q</i> is the probability of an error in a different bit, then the probability of errors occurring in both of these bits at the same time is <nemeth class="inline">⠏⠟</nemeth>. We will also assume that a received <i class="one-letter">n</i>-tuple is decoded into a codeword that is closest to it; that is, we assume that the receiver uses <dfn class="terminology">maximum-likelihood decoding</dfn>.  <a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-4" id="fn-4"><sup> 2 </sup></a></p>
            <div class="hidden-content tex2jax_ignore" id="hk-fn-4">
              <div class="fn">This section requires a knowledge of probability, but can be skipped without loss of continuity.</div>
            </div>
            <figure class="figure figure-like" data-braille="figure-like" id="rMy">
              <div data-braille="image">
                <p>Image: A schematic diagram where a zero has probabilty p that it will be decoded as a zero and probability q that it will be decoded as a one, which are represented by arrows from 0 to 0 and 1 to 1, respectively.  A one has probabilty p that it will be decoded as a one and probability q that it will be decoded as a zero, which are represented by arrows from 1 to 1 and 0 to 1, respectively.</p>
                <p>ID: algcodes-binary-channel</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">8.1.6<span class="period">.</span></span><span class="space"> </span>Binary symmetric channel</figcaption>
            </figure>
            <p id="LFp">A <dfn class="terminology">binary symmetric channel</dfn> is a model that consists of a transmitter capable of sending a binary signal, either a <nemeth class="inline">⠼⠴</nemeth> or a <nemeth class="inline">⠼⠂</nemeth>, together with a receiver. Let <i class="one-letter">p</i> be the probability that the signal is correctly received. Then <nemeth class="inline">⠟⠀⠨⠅⠀⠼⠂⠤⠏</nemeth> is the probability of an incorrect reception. If a <nemeth class="inline">⠼⠂</nemeth> is sent, then the probability that a <nemeth class="inline">⠼⠂</nemeth> is received is <i class="one-letter">p</i> and the probability that a <nemeth class="inline">⠼⠴</nemeth> is received is <i class="one-letter">q</i> (Figure 8.1.6). The probability that no errors occur during the transmission of a binary codeword of length <i class="one-letter">n</i> is <nemeth class="inline">⠏⠘⠝</nemeth>. For example, if <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠴⠨⠔⠔⠔</nemeth> and a message consisting of 10,000 bits is sent, then the probability of a perfect transmission is</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠴⠨⠔⠔⠔⠾⠘⠼⠂⠴⠠⠀⠼⠴⠴⠴⠐⠄⡳⠭⠆⠆⠲⠦⠄⠼⠴⠨⠴⠴⠴⠴⠢</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="qsx">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="LqU">If a binary <i class="one-letter">n</i>-tuple <nemeth class="inline">⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾</nemeth> is transmitted across a binary symmetric channel with probability <i class="one-letter">p</i> that no error will occur in each coordinate, then the probability that there are errors in exactly <i class="one-letter">k</i> coordinates is</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠅⠟⠘⠅⠐⠏⠘⠝⠤⠅</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="wwe">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="duy">Fix <i class="one-letter">k</i> different coordinates. We first compute the probability that an error has occurred in this fixed set of coordinates. The probability of an error occurring in a particular one of these <i class="one-letter">k</i> coordinates is <i class="one-letter">q</i>; the probability that an error will not occur in any of the remaining <nemeth class="inline">⠝⠤⠅</nemeth> coordinates is <i class="one-letter">p</i>. The probability of each of these <i class="one-letter">n</i> independent events is <nemeth class="inline">⠟⠘⠅⠐⠏⠘⠝⠤⠅</nemeth>. The number of possible error patterns with exactly <i class="one-letter">k</i> errors occurring is equal to</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠅⠀⠨⠅⠀⠹⠝⠯⠌⠅⠖⠀⠷⠝⠤⠅⠾⠯⠼</nemeth>
              </div>
              <p data-braille="continuation">, the number of combinations of <i class="one-letter">n</i> things taken <i class="one-letter">k</i> at a time. Each of these error patterns has probability <nemeth class="inline">⠟⠘⠅⠐⠏⠘⠝⠤⠅</nemeth> of occurring; hence, the probability of all of these error patterns is</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠅⠟⠘⠅⠐⠏⠘⠝⠤⠅</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="WzG">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.8</span>
                <span class="period">.</span>
              </h6>
              <p id="WzT">Suppose that <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠴⠨⠔⠔⠢</nemeth> and a <nemeth class="inline">⠼⠢⠴⠴</nemeth>-bit message is sent. The probability that the message was sent error-free is</p>
              <div class="displaymath">
                <nemeth>⠏⠘⠝⠐⠀⠨⠅⠀⠷⠼⠴⠨⠔⠔⠢⠾⠘⠢⠴⠴⠐⠄⡳⠭⠆⠆⠲⠦⠄⠼⠴⠨⠴⠦⠆</nemeth>
              </div>
              <p data-braille="continuation">. The probability of exactly one error occurring is</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠂⠟⠏⠘⠝⠤⠂⠐⠀⠨⠅⠀⠼⠢⠴⠴⠷⠴⠨⠴⠴⠢⠾⠷⠴⠨⠔⠔⠢⠾⠘⠲⠔⠔⠐⠄⡳⠭⠆⠆⠲⠦⠄⠼⠴⠨⠆⠴⠲</nemeth>
              </div>
              <p data-braille="continuation">. The probability of exactly two errors is</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠆⠟⠘⠆⠐⠏⠘⠝⠤⠆⠐⠀⠨⠅⠀⠹⠢⠴⠴⠡⠲⠔⠔⠌⠆⠼⠷⠴⠨⠴⠴⠢⠾⠘⠆⠐⠷⠴⠨⠔⠔⠢⠾⠘⠲⠔⠦⠐⠄⡳⠭⠆⠆⠲⠦⠄⠼⠴⠨⠆⠢⠶</nemeth>
              </div>
              <p data-braille="continuation">. The probability of more than two errors is approximately</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠤⠴⠨⠴⠦⠆⠤⠴⠨⠆⠴⠲⠤⠴⠨⠆⠢⠶⠀⠨⠅⠀⠼⠴⠨⠲⠢⠶</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="whJ">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">8.1.2</span> <span class="title">Block Codes</span></div>
            <p id="XTH">If we are to develop efficient error-detecting and error-correcting codes, we will need more sophisticated mathematical tools. Group theory  will allow faster methods of encoding and decoding messages. A code is an <nemeth class="inline">⠷⠝⠠⠀⠍⠾</nemeth>-<dfn class="terminology">block code</dfn> if the information that is to be coded can be divided into blocks of <i class="one-letter">m</i> binary digits, each of which can be encoded into <i class="one-letter">n</i> binary digits. More specifically, an <nemeth class="inline">⠷⠝⠠⠀⠍⠾</nemeth>-block code consists of an <dfn class="terminology">encoding function</dfn></p>
            <div class="displaymath">
              <nemeth>⠠⠑⠒⠀⠸⠠⠵⠆⠘⠍⠐⠀⠫⠕⠀⠸⠠⠵⠆⠘⠝</nemeth>
            </div>
            <p data-braille="continuation">and a <dfn class="terminology">decoding function</dfn></p>
            <div class="displaymath">
              <nemeth>⠠⠙⠒⠀⠸⠠⠵⠆⠘⠝⠐⠀⠫⠕⠀⠸⠠⠵⠆⠘⠍</nemeth>
            </div>
            <p data-braille="continuation">. A <dfn class="terminology">codeword</dfn> is any element in the image of <i class="one-letter">E</i>. We also require that <i class="one-letter">E</i> be one-to-one so that two information blocks will not be encoded into the same codeword. If our code is to be error-correcting, then <i class="one-letter">D</i> must be onto.</p>
            <article class="example example-like" data-braille="example-like" id="OVh">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="CHc">The even-parity coding system developed to detect single errors in <abbr class="acronym">ASCII</abbr> characters is an <nemeth class="inline">⠷⠼⠦⠠⠀⠼⠶⠾</nemeth>-block code. The encoding function is</p>
              <div class="displaymath">
                <nemeth>⠠⠑⠷⠭⠶⠠⠀⠭⠖⠠⠀⠄⠄⠄⠀⠠⠀⠭⠂⠾⠀⠨⠅⠀⠷⠭⠦⠠⠀⠭⠶⠠⠀⠄⠄⠄⠀⠠⠀⠭⠂⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠭⠦⠀⠨⠅⠀⠭⠶⠬⠭⠖⠬⠄⠄⠄⠬⠭⠂</nemeth> with addition in <nemeth class="inline">⠸⠠⠵⠆</nemeth>.</p>
            </article>
            <p id="EaQ">Let <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠽⠂⠠⠀⠄⠄⠄⠀⠠⠀⠽⠰⠝⠐⠾</nemeth> be binary <i class="one-letter">n</i>-tuples. The <dfn class="terminology">Hamming distance</dfn>  or <dfn class="terminology">distance</dfn>, <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾</nemeth>, between <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> is the number of bits in which <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> differ. The distance between two codewords is the minimum number of transmission errors required to change one codeword into the other. The <dfn class="terminology">minimum distance</dfn> for a code, <nemeth class="inline">⠙⠰⠍⠊⠝</nemeth>, is the minimum of all distances <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾</nemeth>, where <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> are distinct codewords. The <dfn class="terminology">weight</dfn>,  <nemeth class="inline">⠺⠷⠸⠭⠾</nemeth>, of a binary codeword <nemeth class="inline">⠸⠭</nemeth> is the number of <nemeth class="inline">⠼⠂</nemeth>s in <nemeth class="inline">⠸⠭</nemeth>. Clearly, <nemeth class="inline">⠺⠷⠸⠭⠾⠀⠨⠅⠀⠙⠷⠸⠭⠠⠀⠼⠴⠾</nemeth>, where <nemeth class="inline">⠼⠴⠀⠨⠅⠀⠷⠼⠴⠴⠀⠄⠄⠄⠀⠼⠴⠾</nemeth>. </p>
            <article class="example example-like" data-braille="example-like" id="vcq">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="iOl">Let <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠂⠴⠂⠴⠂⠾</nemeth>, <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠼⠂⠂⠴⠂⠴⠾</nemeth>, and <nemeth class="inline">⠸⠵⠀⠨⠅⠀⠷⠼⠴⠴⠴⠂⠂⠾</nemeth> be all of the codewords in some code <i class="one-letter">C</i>. Then we have the following Hamming distances:</p>
              <div class="displaymath">
                <nemeth>⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠲⠠⠀⠙⠷⠸⠭⠠⠀⠸⠵⠾⠀⠨⠅⠀⠼⠒⠠⠀⠙⠷⠸⠽⠠⠀⠸⠵⠾⠀⠨⠅⠀⠼⠒</nemeth>
              </div>
              <p data-braille="continuation">. The minimum distance  for this code is 3. We also have the following weights:</p>
              <div class="displaymath">
                <nemeth>⠺⠷⠸⠭⠾⠀⠨⠅⠀⠼⠒⠠⠀⠺⠷⠸⠽⠾⠀⠨⠅⠀⠼⠒⠠⠀⠺⠷⠸⠵⠾⠀⠨⠅⠀⠼⠆</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="khZ">The following proposition lists some basic properties about the weight of a codeword and the distance between two codewords. The proof is left as an exercise.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="iNY">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="UKG">Let <nemeth class="inline">⠸⠭</nemeth>, <nemeth class="inline">⠸⠽</nemeth>, and <nemeth class="inline">⠸⠵</nemeth> be binary <i class="one-letter">n</i>-tuples. Then</p>
              <ol class="outerlist">
                <li>1. <p id="URK"><nemeth class="inline">⠺⠷⠸⠭⠾⠀⠨⠅⠀⠙⠷⠸⠭⠠⠀⠼⠴⠾</nemeth>;</p></li>
                <li>2. <p id="AYT"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠂⠱⠀⠼⠴</nemeth>;</p></li>
                <li>3. <p id="hgc"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠴</nemeth> exactly when <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠸⠽</nemeth>;</p></li>
                <li>4. <p id="Nnl"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠙⠷⠸⠽⠠⠀⠸⠭⠾</nemeth>;</p></li>
                <li>5. <p id="tuu"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠐⠅⠱⠀⠙⠷⠸⠭⠠⠀⠸⠵⠾⠬⠙⠷⠸⠵⠠⠀⠸⠽⠾</nemeth>.</p></li>
              </ol>
            </article>
            <p id="Qpi">The weights in a particular code are usually much easier to compute than the Hamming distances between all codewords in the code. If a code is set up carefully, we can use this fact to our advantage.</p>
            <p id="wwr">Suppose that <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠂⠂⠴⠂⠾</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠼⠂⠂⠴⠴⠾</nemeth> are codewords in some code. If we transmit <nemeth class="inline">⠷⠼⠂⠂⠴⠂⠾</nemeth> and an error occurs in the rightmost bit, then (1100) will be received. Since <nemeth class="inline">⠷⠼⠂⠂⠴⠴⠾</nemeth> is a codeword, the decoder will decode <nemeth class="inline">⠷⠼⠂⠂⠴⠴⠾</nemeth> as the transmitted message. This code is clearly not very appropriate for error detection. The problem is that <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠂</nemeth>. If <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠂⠂⠴⠴⠾</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠼⠂⠴⠂⠴⠾</nemeth> are codewords, then <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠆</nemeth>. If <nemeth class="inline">⠸⠭</nemeth> is transmitted and a single error occurs, then <nemeth class="inline">⠸⠽</nemeth> can never be received. Table 8.1.12 gives the distances between all 4-bit codewords in which the first three bits carry information and the fourth is an even parity check bit. We can see that the minimum distance here is <nemeth class="inline">⠼⠆</nemeth>; hence, the code is suitable as a single error-detecting code.</p>
            <figure class="table table-like" data-braille="figure-like" id="hgp">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">8.1.12<span class="period">.</span></span><span class="space"> </span>Distances between 4-bit codewords</figcaption>
              <table>
                <tr>
                  <td class="c m b2 r2 l2 t2 lines"/>
                  <td class="c m b2 r2 l0 t2 lines">
                    <nemeth class="inline">⠼⠴⠴⠴⠴</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines">
                    <nemeth class="inline">⠼⠴⠴⠂⠂</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines">
                    <nemeth class="inline">⠼⠴⠂⠴⠂</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines">
                    <nemeth class="inline">⠼⠴⠂⠂⠴</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines">
                    <nemeth class="inline">⠼⠂⠴⠴⠂</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines">
                    <nemeth class="inline">⠼⠂⠴⠂⠴</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines">
                    <nemeth class="inline">⠼⠂⠂⠴⠴</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂⠂⠂⠂</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r2 l2 t0 lines">
                    <nemeth class="inline">⠼⠴⠴⠴⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠲</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r2 l2 t0 lines">
                    <nemeth class="inline">⠼⠴⠴⠂⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠲</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r2 l2 t0 lines">
                    <nemeth class="inline">⠼⠴⠂⠴⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠲</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r2 l2 t0 lines">
                    <nemeth class="inline">⠼⠴⠂⠂⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠲</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r2 l2 t0 lines">
                    <nemeth class="inline">⠼⠂⠴⠴⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠲</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r2 l2 t0 lines">
                    <nemeth class="inline">⠼⠂⠴⠂⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠲</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r2 l2 t0 lines">
                    <nemeth class="inline">⠼⠂⠂⠴⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠲</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b2 r2 l2 t0 lines">
                    <nemeth class="inline">⠼⠂⠂⠂⠂</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠲</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠆</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                </tr>
              </table>
            </figure>
            <p id="cDA">To determine exactly what the error-detecting and error-correcting capabilities for a code are, we need to analyze the minimum distance for the code. Let <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> be codewords. If <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠂</nemeth> and an error occurs where <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> differ, then <nemeth class="inline">⠸⠭</nemeth> is changed to <nemeth class="inline">⠸⠽</nemeth>. The received codeword is <nemeth class="inline">⠸⠽</nemeth> and no error message is given. Now suppose <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠆</nemeth>. Then a single error cannot change <nemeth class="inline">⠸⠭</nemeth> to <nemeth class="inline">⠸⠽</nemeth>. Therefore, if <nemeth class="inline">⠙⠰⠍⠊⠝⠐⠀⠨⠅⠀⠼⠆</nemeth>, we have the ability to detect single errors. However, suppose that <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠆</nemeth>, <nemeth class="inline">⠸⠽</nemeth> is sent, and a noncodeword <nemeth class="inline">⠸⠵</nemeth> is received such that</p>
            <div class="displaymath">
              <nemeth>⠙⠷⠸⠭⠠⠀⠸⠵⠾⠀⠨⠅⠀⠙⠷⠸⠽⠠⠀⠸⠵⠾⠀⠨⠅⠀⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">. Then the decoder cannot decide between <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth>. Even though we are aware that an error has occurred, we do not know what the error is.</p>
            <p id="IKJ">Suppose <nemeth class="inline">⠙⠰⠍⠊⠝⠐⠀⠨⠂⠱⠀⠼⠒</nemeth>. Then the maximum-likelihood decoding scheme corrects all single errors. Starting with a codeword <nemeth class="inline">⠸⠭</nemeth>, an error in the transmission of a single bit gives <nemeth class="inline">⠸⠽</nemeth> with <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠂</nemeth>, but <nemeth class="inline">⠙⠷⠸⠵⠠⠀⠸⠽⠾⠀⠨⠂⠱⠀⠼⠆</nemeth> for any other codeword <nemeth class="inline">⠸⠵⠀⠌⠨⠅⠀⠸⠭</nemeth>. If we do not require the correction of errors, then we can detect multiple errors when a code has a minimum distance that is greater than or equal to <nemeth class="inline">⠼⠒</nemeth>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="CGP">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.13</span>
                <span class="period">.</span>
              </h6>
              <p id="ryd">Let <i class="one-letter">C</i> be a code with <nemeth class="inline">⠙⠰⠍⠊⠝⠐⠀⠨⠅⠀⠼⠆⠝⠬⠂</nemeth>. Then <i class="one-letter">C</i> can correct any <i class="one-letter">n</i> or fewer errors. Furthermore, any <nemeth class="inline">⠼⠆⠝</nemeth> or fewer errors can be detected in <i class="one-letter">C</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="cDn">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="JBH">Suppose that a codeword <nemeth class="inline">⠸⠭</nemeth> is sent and the word <nemeth class="inline">⠸⠽</nemeth> is received with at most <i class="one-letter">n</i> errors. Then <nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠐⠅⠱⠀⠝</nemeth>. If <nemeth class="inline">⠸⠵</nemeth> is any codeword other than <nemeth class="inline">⠸⠭</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠼⠆⠝⠬⠂⠀⠐⠅⠱⠀⠙⠷⠸⠭⠠⠀⠸⠵⠾⠀⠐⠅⠱⠀⠙⠷⠸⠭⠠⠀⠸⠽⠾⠬⠙⠷⠸⠽⠠⠀⠸⠵⠾⠀⠐⠅⠱⠀⠝⠬⠙⠷⠸⠽⠠⠀⠸⠵⠾</nemeth>
              </div>
              <p data-braille="continuation">. Hence, <nemeth class="inline">⠙⠷⠸⠽⠠⠀⠸⠵⠾⠀⠨⠂⠱⠀⠝⠬⠂</nemeth> and <nemeth class="inline">⠸⠽</nemeth> will be correctly decoded as <nemeth class="inline">⠸⠭</nemeth>. Now suppose that <nemeth class="inline">⠸⠭</nemeth> is transmitted and <nemeth class="inline">⠸⠽</nemeth> is received and that at least one error  has occurred, but not more than <nemeth class="inline">⠼⠆⠝</nemeth> errors. Then <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠐⠅⠱⠀⠼⠆⠝</nemeth>. Since the minimum distance between codewords is <nemeth class="inline">⠼⠆⠝⠬⠂</nemeth>, <nemeth class="inline">⠸⠽</nemeth> cannot be a codeword. Consequently, the code can detect between <nemeth class="inline">⠼⠂</nemeth> and <nemeth class="inline">⠼⠆⠝</nemeth> errors.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="bjz">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.1.14</span>
                <span class="period">.</span>
              </h6>
              <p id="OVu">In Table 8.1.15, the codewords <nemeth class="inline">⠸⠉⠂⠀⠨⠅⠀⠷⠼⠴⠴⠴⠴⠴⠾</nemeth>, <nemeth class="inline">⠸⠉⠆⠀⠨⠅⠀⠷⠼⠴⠴⠂⠂⠂⠾</nemeth>, <nemeth class="inline">⠸⠉⠒⠀⠨⠅⠀⠷⠼⠂⠂⠂⠴⠴⠾</nemeth>, and <nemeth class="inline">⠸⠉⠲⠀⠨⠅⠀⠷⠼⠂⠂⠴⠂⠂⠾</nemeth> determine a single error-correcting code.</p>
              <figure class="table table-like" data-braille="figure-like" id="oKO">
                <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">8.1.15<span class="period">.</span></span><span class="space"> </span>Hamming distances for an error-correcting code</figcaption>
                <table>
                  <tr>
                    <td class="c m b2 r2 l2 t2 lines"/>
                    <td class="c m b2 r2 l0 t2 lines">
                      <nemeth class="inline">⠼⠴⠴⠴⠴⠴</nemeth>
                    </td>
                    <td class="c m b2 r2 l0 t2 lines">
                      <nemeth class="inline">⠼⠴⠴⠂⠂⠂</nemeth>
                    </td>
                    <td class="c m b2 r2 l0 t2 lines">
                      <nemeth class="inline">⠼⠂⠂⠂⠴⠴</nemeth>
                    </td>
                    <td class="c m b2 r2 l0 t2 lines" data-braille="last-cell">
                      <nemeth class="inline">⠼⠂⠂⠴⠂⠂</nemeth>
                    </td>
                  </tr>
                  <tr>
                    <td class="c m b0 r2 l2 t0 lines">
                      <nemeth class="inline">⠼⠴⠴⠴⠴⠴</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠴</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                      <nemeth class="inline">⠼⠲</nemeth>
                    </td>
                  </tr>
                  <tr>
                    <td class="c m b0 r2 l2 t0 lines">
                      <nemeth class="inline">⠼⠴⠴⠂⠂⠂</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠴</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠲</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                  </tr>
                  <tr>
                    <td class="c m b0 r2 l2 t0 lines">
                      <nemeth class="inline">⠼⠂⠂⠂⠴⠴</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠲</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠴</nemeth>
                    </td>
                    <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                  </tr>
                  <tr>
                    <td class="c m b2 r2 l2 t0 lines">
                      <nemeth class="inline">⠼⠂⠂⠴⠂⠂</nemeth>
                    </td>
                    <td class="c m b2 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠲</nemeth>
                    </td>
                    <td class="c m b2 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                    <td class="c m b2 r2 l0 t0 lines">
                      <nemeth class="inline">⠼⠒</nemeth>
                    </td>
                    <td class="c m b2 r2 l0 t0 lines" data-braille="last-cell">
                      <nemeth class="inline">⠼⠴</nemeth>
                    </td>
                  </tr>
                </table>
              </figure>
            </article>
          </section>
          <section class="subsection" id="coS">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">8.1.3</span> <span class="title">Historical Note</span></div>
            <p id="oRS">Modern coding theory began in 1948 with C. Shannon's  paper, “A Mathematical Theory of Information” [7]. This paper offered an example of an algebraic code, and Shannon's Theorem proclaimed exactly how good codes could be expected to be. Richard Hamming  began working with linear codes at Bell Labs in the late 1940s and early 1950s after becoming frustrated because the programs that he was running could not recover from simple errors generated by noise. Coding theory has grown tremendously in the past several decades. <em class="emphasis">The Theory of Error-Correcting Codes</em>, by MacWilliams and Sloane [5], published in 1977, already contained over 1500 references. Linear codes (Reed-Muller <nemeth class="inline">⠷⠼⠒⠆⠠⠀⠼⠖⠾</nemeth>-block codes) were used on NASA's Mariner space probes. More recent space probes such as Voyager have used what are called convolution codes. Currently, very active research is being done with Goppa codes, which are heavily dependent on algebraic geometry.</p>
          </section>
        </section>
        <section class="section" id="RPN">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">8.2</span> <span class="title">Linear Codes</span></div>
          <section class="introduction" id="EaD">
            <p id="hIS">To gain more knowledge of a particular code and develop more efficient techniques of encoding, decoding, and error detection, we need to add additional structure to our codes. One way to accomplish this is to require that the code also be a group. A <dfn class="terminology">group code</dfn>  is a code that is also a subgroup of <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth>.</p>
            <p id="NQb">To check that a code is a group code, we need only verify one thing. If we add any two elements in the code, the result must be an <i class="one-letter">n</i>-tuple that is again in the code. It is not necessary to check that the inverse of the <i class="one-letter">n</i>-tuple is in the code, since every codeword is its own inverse, nor is it necessary to check that <nemeth class="inline">⠼⠴</nemeth> is a codeword. For instance,</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠂⠂⠴⠴⠴⠂⠴⠂⠾⠬⠷⠂⠂⠴⠴⠴⠂⠴⠂⠾⠀⠨⠅⠀⠷⠼⠴⠴⠴⠴⠴⠴⠴⠴⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="example example-like" data-braille="example-like" id="aOa">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="vcD">Suppose that we have a code that consists of the following 7-tuples:</p>
              <div class="displaymath">
                <nemeth>⠀⠀⠷⠴⠴⠴⠴⠴⠴⠴⠾⠀⠀⠀⠷⠴⠴⠴⠂⠂⠂⠂⠾⠀⠀⠀⠷⠴⠴⠂⠴⠂⠴⠂⠾⠀⠀⠀⠷⠴⠴⠂⠂⠴⠂⠴⠾⠀⠀⠀⠷⠴⠂⠴⠴⠂⠂⠴⠾⠀⠀⠀⠷⠴⠂⠴⠂⠴⠴⠂⠾⠀⠀⠀⠷⠴⠂⠂⠴⠴⠂⠂⠾⠀⠀⠀⠷⠴⠂⠂⠂⠂⠴⠴⠾⠀⠀⠀⠷⠂⠴⠴⠴⠴⠂⠂⠾⠀⠀⠀⠷⠂⠴⠴⠂⠂⠴⠴⠾⠀⠀⠀⠷⠂⠴⠂⠴⠂⠂⠴⠾⠀⠀⠀⠷⠂⠴⠂⠂⠴⠴⠂⠾⠀⠀⠀⠷⠂⠂⠴⠴⠂⠴⠂⠾⠀⠀⠀⠷⠂⠂⠴⠂⠴⠂⠴⠾⠀⠀⠀⠷⠂⠂⠂⠴⠴⠴⠴⠾⠀⠀⠀⠷⠂⠂⠂⠂⠂⠂⠂⠾</nemeth>
              </div>
              <p data-braille="continuation">. It is a straightforward though tedious task to verify that this code is also a subgroup of <nemeth class="inline">⠸⠠⠵⠆⠘⠶</nemeth> and, therefore, a group code. This code is a single error-detecting and single error-correcting  code, but it is a long and tedious process to compute all of the distances between  pairs of codewords to determine that <nemeth class="inline">⠙⠰⠍⠊⠝⠐⠀⠨⠅⠀⠼⠒</nemeth>. It is much easier to see that the minimum weight of all the nonzero codewords is <nemeth class="inline">⠼⠒</nemeth>. As we will soon see, this is no coincidence. However, the relationship between weights and distances in a particular code is heavily dependent on the fact that the code is a group.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="Weh">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">8.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="tnq">Let <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> be binary <i class="one-letter">n</i>-tuples. Then <nemeth class="inline">⠺⠷⠸⠭⠬⠸⠽⠾⠀⠨⠅⠀⠙⠷⠸⠭⠠⠀⠸⠽⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="FPQ">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="pIQ">Suppose that <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> are binary <i class="one-letter">n</i>-tuples. Then the distance between <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> is exactly the number of places in which <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> differ. But <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> differ in a particular coordinate exactly when the sum in the coordinate is <nemeth class="inline">⠼⠂</nemeth>, since</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠬⠂⠀⠀⠨⠅⠀⠼⠴⠀⠴⠬⠴⠀⠀⠨⠅⠀⠼⠴⠀⠂⠬⠴⠀⠀⠨⠅⠀⠼⠂⠀⠴⠬⠂⠀⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. Consequently, the weight of the sum must be the distance between the two codewords.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="sRE">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">8.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="XFm">Let <nemeth class="inline">⠙⠰⠍⠊⠝</nemeth> be the minimum distance for a group code <i class="one-letter">C</i>. Then <nemeth class="inline">⠙⠰⠍⠊⠝</nemeth> is the minimum weight of all the nonzero codewords in <i class="one-letter">C</i>. That is,</p>
              <div class="displaymath">
                <nemeth>⠙⠰⠍⠊⠝⠐⠀⠨⠅⠀⠍⠊⠝⠀⠨⠷⠺⠷⠸⠭⠾⠒⠀⠸⠭⠀⠌⠨⠅⠀⠼⠴⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="IKw">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="VPZ">Observe that</p>
              <div class="displaymath">
                <nemeth>⠙⠰⠍⠊⠝⠀⠀⠨⠅⠀⠍⠊⠝⠀⠨⠷⠙⠷⠸⠭⠠⠀⠸⠽⠾⠒⠀⠸⠭⠀⠌⠨⠅⠀⠸⠽⠨⠾⠀⠀⠀⠀⠨⠅⠀⠍⠊⠝⠀⠨⠷⠙⠷⠸⠭⠠⠀⠸⠽⠾⠒⠀⠸⠭⠬⠸⠽⠀⠌⠨⠅⠀⠼⠴⠨⠾⠀⠀⠀⠀⠨⠅⠀⠍⠊⠝⠀⠨⠷⠺⠷⠸⠭⠬⠸⠽⠾⠒⠀⠸⠭⠬⠸⠽⠀⠌⠨⠅⠀⠼⠴⠨⠾⠀⠀⠀⠀⠨⠅⠀⠍⠊⠝⠀⠨⠷⠺⠷⠸⠵⠾⠒⠀⠸⠵⠀⠌⠨⠅⠀⠼⠴⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="Iwb">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">8.2.1</span> <span class="title">Linear Codes</span></div>
            <p id="UZb">From Example 8.2.1, it is now easy to check that the minimum nonzero weight is <nemeth class="inline">⠼⠒</nemeth>; hence, the code does indeed detect and correct all single errors. We have now reduced the problem of finding “good” codes to that of generating group codes. One easy way to generate group codes is to employ a bit of matrix theory.</p>
            <p id="Bgk">Define the <dfn class="terminology">inner product</dfn>  of two binary <i class="one-letter">n</i>-tuples to be</p>
            <div class="displaymath">
              <nemeth>⠸⠭⠡⠸⠽⠀⠨⠅⠀⠭⠂⠽⠂⠬⠄⠄⠄⠬⠭⠰⠝⠐⠽⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠘⠞</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠽⠂⠠⠀⠽⠆⠠⠀⠄⠄⠄⠀⠠⠀⠽⠰⠝⠐⠾⠘⠞</nemeth> are column vectors.<a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-5" id="fn-5"><sup> 1 </sup></a> For example, if <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠴⠂⠂⠴⠴⠂⠾⠘⠞</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠼⠂⠂⠴⠂⠴⠂⠾⠘⠞</nemeth>, then <nemeth class="inline">⠸⠭⠡⠸⠽⠀⠨⠅⠀⠼⠴</nemeth>. We can also look at an inner product as the product of a row matrix with a column matrix; that is,</p>
            <div class="displaymath">
              <nemeth>⠸⠭⠡⠸⠽⠀⠀⠨⠅⠀⠸⠭⠘⠞⠐⠸⠽⠀⠀⠀⠀⠨⠅⠀⠠⠷⠭⠂⠀⠭⠆⠀⠄⠄⠄⠀⠭⠰⠝⠐⠠⠾⠽⠂⠀⠽⠆⠀⠣⠄⠄⠄⠀⠽⠰⠝⠐⠀⠀⠀⠀⠨⠅⠀⠭⠂⠽⠂⠬⠭⠆⠽⠆⠬⠄⠄⠄⠬⠭⠰⠝⠐⠽⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <div class="hidden-content tex2jax_ignore" id="hk-fn-5">
              <div class="fn">Since we will be working with matrices, we will write binary <i class="one-letter">n</i>-tuples as column vectors for the remainder of this chapter.</div>
            </div>
            <article class="example example-like" data-braille="example-like" id="nxR">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="bjM">Suppose that the words to be encoded consist of all binary <nemeth class="inline">⠼⠒</nemeth>-tuples and that our encoding scheme is even-parity. To encode an arbitrary <nemeth class="inline">⠼⠒</nemeth>-tuple, we add a fourth bit to obtain an even number of <nemeth class="inline">⠼⠂</nemeth>s. Notice that an arbitrary <i class="one-letter">n</i>-tuple <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠘⠞</nemeth> has an even number of <nemeth class="inline">⠼⠂</nemeth>s exactly when <nemeth class="inline">⠭⠂⠬⠭⠆⠬⠄⠄⠄⠬⠭⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>; hence, a <nemeth class="inline">⠼⠲</nemeth>-tuple <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠭⠆⠠⠀⠭⠒⠠⠀⠭⠲⠾⠘⠞</nemeth> has an even number of <nemeth class="inline">⠼⠂</nemeth>s if <nemeth class="inline">⠭⠂⠬⠭⠆⠬⠭⠒⠬⠭⠲⠀⠨⠅⠀⠼⠴</nemeth>, or</p>
              <div class="displaymath">
                <nemeth>⠸⠭⠡⠸⠂⠀⠨⠅⠀⠸⠭⠘⠞⠐⠸⠂⠀⠨⠅⠀⠠⠷⠭⠂⠀⠭⠆⠀⠭⠒⠀⠭⠲⠠⠾⠂⠀⠂⠀⠂⠀⠂⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. This example leads us to hope that there is a connection between matrices and coding theory.</p>
            </article>
            <p id="hnt">Let <nemeth class="inline">⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth> denote the set of all <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠵⠆</nemeth>. We do matrix operations as usual except that all our addition and multiplication operations occur in <nemeth class="inline">⠸⠠⠵⠆</nemeth>. Define the <dfn class="terminology">null space</dfn> of a matrix <nemeth class="inline">⠠⠓⠀⠈⠑⠀⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth> to be the set of all binary <i class="one-letter">n</i>-tuples <nemeth class="inline">⠸⠭</nemeth> such that <nemeth class="inline">⠠⠓⠸⠭⠀⠨⠅⠀⠼⠴</nemeth>. We denote the null space of a matrix <i class="one-letter">H</i> by <nemeth class="inline">⠠⠝⠥⠇⠇⠷⠠⠓⠾</nemeth>. </p>
            <article class="example example-like" data-braille="example-like" id="TFa">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="HqV">Suppose that</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠂⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠀⠂⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. For a <nemeth class="inline">⠼⠢</nemeth>-tuple <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠭⠆⠠⠀⠭⠒⠠⠀⠭⠲⠠⠀⠭⠢⠾⠘⠞</nemeth> to be in the null space of <i class="one-letter">H</i>, <nemeth class="inline">⠠⠓⠸⠭⠀⠨⠅⠀⠼⠴</nemeth>. Equivalently, the following system of equations must be satisfied:</p>
              <div class="displaymath">
                <nemeth>⠭⠆⠬⠭⠲⠀⠀⠨⠅⠀⠼⠴⠀⠭⠂⠬⠭⠆⠬⠭⠒⠬⠭⠲⠀⠀⠨⠅⠀⠼⠴⠀⠭⠒⠬⠭⠲⠬⠭⠢⠀⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. The set of binary <nemeth class="inline">⠼⠢</nemeth>-tuples satisfying these equations is</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠴⠴⠴⠴⠴⠾⠷⠂⠂⠂⠂⠴⠾⠷⠂⠴⠂⠴⠂⠾⠷⠴⠂⠴⠂⠂⠾</nemeth>
              </div>
              <p data-braille="continuation">. This code is easily determined to be a group code.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="HqI">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">8.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="DMv">Let <i class="one-letter">H</i> be in <nemeth class="inline">⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth>. Then the null space of <i class="one-letter">H</i> is a group code.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="oRF">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="BXi">Since each element of <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> is its own inverse, the only thing that really needs to be checked here is closure. Let <nemeth class="inline">⠸⠭⠠⠀⠸⠽⠀⠈⠑⠀⠠⠝⠥⠇⠇⠷⠠⠓⠾</nemeth> for some matrix <i class="one-letter">H</i> in <nemeth class="inline">⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth>. Then <nemeth class="inline">⠠⠓⠸⠭⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠠⠓⠸⠽⠀⠨⠅⠀⠼⠴</nemeth>. So</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠷⠸⠭⠬⠸⠽⠾⠀⠨⠅⠀⠠⠓⠸⠭⠬⠠⠓⠸⠽⠀⠨⠅⠀⠼⠴⠬⠸⠴⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. Hence, <nemeth class="inline">⠸⠭⠬⠸⠽</nemeth> is in the null space of <i class="one-letter">H</i> and therefore must be a codeword.</p>
            </article>
            <p id="NuC">A code is a <dfn class="terminology">linear code</dfn>  if it is determined by the null space of some matrix <nemeth class="inline">⠠⠓⠀⠈⠑⠀⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="zMj">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="nye">Let <i class="one-letter">C</i> be the code given by the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠴⠀⠴⠀⠂⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Suppose that the <nemeth class="inline">⠼⠖</nemeth>-tuple <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠴⠂⠴⠴⠂⠂⠾⠘⠞</nemeth> is received. It is a simple matter of matrix multiplication to determine whether or not <nemeth class="inline">⠸⠭</nemeth> is a codeword. Since</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠸⠭⠀⠨⠅⠀⠼⠴⠀⠂⠀⠂</nemeth>
              </div>
              <p data-braille="continuation">, the received word is not a codeword. We must either attempt to correct the word or request that it be transmitted again.</p>
            </article>
          </section>
        </section>
        <section class="section" id="xWW">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">8.3</span> <span class="title">Parity-Check and Generator Matrices</span></div>
          <p id="Mpj">We need to find a systematic way of generating linear codes as well as fast methods of decoding. By examining the properties of a matrix <i class="one-letter">H</i> and by carefully choosing <i class="one-letter">H</i>, it is possible to develop very efficient methods of encoding and decoding messages. To this end, we will introduce standard generator and canonical parity-check matrices.</p>
          <p id="sws">Suppose that <i class="one-letter">H</i> is an <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrix with entries in <nemeth class="inline">⠸⠠⠵⠆</nemeth> and <nemeth class="inline">⠝⠀⠨⠂⠀⠍</nemeth>. If the last <i class="one-letter">m</i> columns of the matrix form the <nemeth class="inline">⠍⠈⠡⠍</nemeth> identity matrix, <nemeth class="inline">⠠⠊⠰⠍</nemeth>, then the matrix is a <dfn class="terminology">canonical parity-check matrix</dfn>.  More specifically, <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠷⠠⠁⠳⠠⠊⠰⠍⠐⠾</nemeth>, where <i class="one-letter">A</i> is the <nemeth class="inline">⠍⠈⠡⠷⠝⠤⠍⠾</nemeth> matrix</p>
          <div class="displaymath">
            <nemeth>⠠⠷⠁⠂⠂⠀⠁⠂⠆⠀⠄⠄⠄⠀⠁⠰⠼⠂⠠⠀⠝⠤⠍⠠⠾⠀⠠⠷⠁⠆⠂⠀⠁⠆⠆⠀⠄⠄⠄⠀⠁⠰⠼⠆⠠⠀⠝⠤⠍⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠁⠰⠍⠐⠂⠀⠁⠰⠍⠐⠆⠀⠄⠄⠄⠀⠁⠰⠍⠠⠀⠝⠤⠍⠠⠾</nemeth>
          </div>
          <p data-braille="continuation">and <nemeth class="inline">⠠⠊⠰⠍</nemeth> is the <nemeth class="inline">⠍⠈⠡⠍</nemeth> identity matrix</p>
          <div class="displaymath">
            <nemeth>⠠⠷⠼⠂⠀⠴⠀⠄⠄⠄⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠄⠄⠄⠀⠴⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠴⠀⠴⠀⠄⠄⠄⠀⠂⠠⠾</nemeth>
          </div>
          <p data-braille="continuation">. With each canonical parity-check matrix we can associate an <nemeth class="inline">⠝⠈⠡⠷⠝⠤⠍⠾</nemeth> <dfn class="terminology">standard generator matrix</dfn> </p>
          <div class="displaymath">
            <nemeth>⠠⠛⠀⠨⠅⠀⠷⠹⠠⠊⠰⠝⠤⠍⠐⠌⠠⠁⠼⠾</nemeth>
          </div>
          <p data-braille="continuation">. Our goal will be to show that an <nemeth class="inline">⠸⠭</nemeth> satisfying <nemeth class="inline">⠠⠛⠸⠭⠀⠨⠅⠀⠸⠽</nemeth> exists if and only if <nemeth class="inline">⠠⠓⠸⠽⠀⠨⠅⠀⠼⠴</nemeth>. Given a message block <nemeth class="inline">⠸⠭</nemeth> to be encoded, the matrix <i class="one-letter">G</i> will allow us to quickly encode it into a linear codeword <nemeth class="inline">⠸⠽</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="GVj">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.1</span>
              <span class="period">.</span>
            </h6>
            <p id="TFn">Suppose that we have the following eight words to be encoded:</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠴⠴⠴⠾⠠⠀⠷⠼⠴⠴⠂⠾⠠⠀⠷⠼⠴⠂⠴⠾⠠⠀⠄⠄⠄⠀⠠⠀⠷⠼⠂⠂⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. For</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, the associated standard generator and canonical parity-check matrices are</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, respectively.</p>
            <p id="zMw">Observe that the rows in <i class="one-letter">H</i>  represent the parity checks on certain bit positions in a <nemeth class="inline">⠼⠖</nemeth>-tuple. The <nemeth class="inline">⠼⠂</nemeth>s in the identity matrix serve as parity checks for the <nemeth class="inline">⠼⠂</nemeth>s in the same row. If <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠭⠆⠠⠀⠭⠒⠠⠀⠭⠲⠠⠀⠭⠢⠠⠀⠭⠖⠾</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠀⠨⠅⠀⠠⠓⠸⠭⠀⠨⠅⠀⠭⠆⠬⠭⠒⠬⠭⠲⠀⠭⠂⠬⠭⠆⠬⠭⠢⠀⠭⠂⠬⠭⠒⠬⠭⠖</nemeth>
            </div>
            <p data-braille="continuation">, which yields a system of equations:</p>
            <div class="displaymath">
              <nemeth>⠭⠆⠬⠭⠒⠬⠭⠲⠀⠀⠨⠅⠀⠼⠴⠀⠭⠂⠬⠭⠆⠬⠭⠢⠀⠀⠨⠅⠀⠼⠴⠀⠭⠂⠬⠭⠒⠬⠭⠖⠀⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. Here <nemeth class="inline">⠭⠲</nemeth> serves as a check bit for <nemeth class="inline">⠭⠆</nemeth> and <nemeth class="inline">⠭⠒</nemeth>; <nemeth class="inline">⠭⠢</nemeth> is a check bit for <nemeth class="inline">⠭⠂</nemeth> and <nemeth class="inline">⠭⠆</nemeth>; and <nemeth class="inline">⠭⠖</nemeth> is a check bit for <nemeth class="inline">⠭⠂</nemeth> and <nemeth class="inline">⠭⠒</nemeth>. The identity matrix keeps <nemeth class="inline">⠭⠲</nemeth>, <nemeth class="inline">⠭⠢</nemeth>, and <nemeth class="inline">⠭⠖</nemeth> from having to check on each other. Hence, <nemeth class="inline">⠭⠂</nemeth>, <nemeth class="inline">⠭⠆</nemeth>, and <nemeth class="inline">⠭⠒</nemeth> can be arbitrary but <nemeth class="inline">⠭⠲</nemeth>, <nemeth class="inline">⠭⠢</nemeth>, and <nemeth class="inline">⠭⠖</nemeth> must be chosen to ensure parity. The null space of <i class="one-letter">H</i> is easily computed to be</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠴⠴⠴⠴⠴⠴⠾⠀⠷⠴⠴⠂⠂⠴⠂⠾⠀⠷⠴⠂⠴⠂⠂⠴⠾⠀⠷⠴⠂⠂⠴⠂⠂⠾⠀⠷⠂⠴⠴⠴⠂⠂⠾⠀⠷⠂⠴⠂⠂⠂⠴⠾⠀⠷⠂⠂⠴⠂⠴⠂⠾⠀⠷⠼⠂⠂⠂⠴⠴⠴⠾⠨⠐</nemeth>
            </div>
            <p data-braille="continuation">An even easier way to compute the null space is with the generator matrix <i class="one-letter">G</i> (Table 8.3.2).</p>
          </article>
          <figure class="table table-like" data-braille="figure-like" id="RXr">
            <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">8.3.2<span class="period">.</span></span><span class="space"> </span>A matrix-generated code</figcaption>
            <table>
              <tr>
                <td class="c m b2 r0 l0 t2 lines">Message Word <nemeth class="inline">⠸⠭</nemeth></td>
                <td class="c m b2 r0 l0 t2 lines" data-braille="last-cell">Codeword <nemeth class="inline">⠠⠛⠸⠭</nemeth></td>
              </tr>
              <tr>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠴⠴⠴</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠴⠴⠴⠴⠴⠴</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠴⠴⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠴⠴⠂⠂⠴⠂</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠴⠂⠴</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠴⠂⠴⠂⠂⠴</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠴⠂⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠴⠂⠂⠴⠂⠂</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠴⠴</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠂⠴⠴⠴⠂⠂</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠴⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠂⠴⠂⠂⠂⠴</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠂⠴</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠂⠂⠴⠂⠴⠂</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b2 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠂⠂</nemeth>
                </td>
                <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠂⠂⠂⠴⠴⠴</nemeth>
                </td>
              </tr>
            </table>
          </figure>
          <article class="theorem theorem-like" data-braille="theorem-like" id="YYN">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.3</span>
              <span class="period">.</span>
            </h6>
            <p id="jTE">If <nemeth class="inline">⠠⠓⠀⠈⠑⠀⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth> is a canonical parity-check matrix, then <nemeth class="inline">⠠⠝⠥⠇⠇⠷⠠⠓⠾</nemeth> consists of all <nemeth class="inline">⠸⠭⠀⠈⠑⠀⠸⠠⠵⠆⠘⠝</nemeth> whose first <nemeth class="inline">⠝⠤⠍</nemeth> bits are arbitrary but whose last <i class="one-letter">m</i> bits are determined by <nemeth class="inline">⠠⠓⠸⠭⠀⠨⠅⠀⠼⠴</nemeth>. Each of the last <i class="one-letter">m</i> bits serves as an even parity check bit for some of the first <nemeth class="inline">⠝⠤⠍</nemeth> bits. Hence, <i class="one-letter">H</i> gives rise to an <nemeth class="inline">⠷⠝⠠⠀⠝⠤⠍⠾</nemeth>-block code.</p>
          </article>
          <p id="YDB">We leave the proof of this theorem as an exercise. In light of the theorem, the first <nemeth class="inline">⠝⠤⠍</nemeth> bits in <nemeth class="inline">⠸⠭</nemeth> are called <dfn class="terminology">information bits</dfn> and the last <i class="one-letter">m</i> bits are called <dfn class="terminology">check bits</dfn>. In Example 8.3.1, the first three bits are the information bits and the last three are the check bits.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="FfW">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.4</span>
              <span class="period">.</span>
            </h6>
            <p id="QaN">Suppose that <i class="one-letter">G</i> is an <nemeth class="inline">⠝⠈⠡⠅</nemeth> standard generator matrix. Then <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠨⠷⠸⠽⠒⠀⠠⠛⠸⠭⠀⠨⠅⠀⠸⠽⠋⠕⠗⠸⠭⠀⠈⠑⠀⠸⠠⠵⠆⠘⠅⠐⠨⠾</nemeth> is an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-block code. More specifically, <i class="one-letter">C</i> is a group code.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="UYO">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="ier">Let <nemeth class="inline">⠠⠛⠸⠭⠂⠀⠨⠅⠀⠸⠽⠂</nemeth> and <nemeth class="inline">⠠⠛⠸⠭⠆⠀⠨⠅⠀⠸⠽⠆</nemeth> be two codewords. Then <nemeth class="inline">⠸⠽⠂⠬⠸⠽⠆</nemeth> is in <i class="one-letter">C</i> since</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠷⠸⠭⠂⠬⠸⠭⠆⠾⠀⠨⠅⠀⠠⠛⠸⠭⠂⠬⠠⠛⠸⠭⠆⠀⠨⠅⠀⠸⠽⠂⠬⠸⠽⠆</nemeth>
            </div>
            <p data-braille="continuation">. We must also show that two message blocks cannot be encoded into the same codeword. That is, we must show that if <nemeth class="inline">⠠⠛⠸⠭⠀⠨⠅⠀⠠⠛⠸⠽</nemeth>, then <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠸⠽</nemeth>. Suppose that <nemeth class="inline">⠠⠛⠸⠭⠀⠨⠅⠀⠠⠛⠸⠽</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠸⠭⠤⠠⠛⠸⠽⠀⠨⠅⠀⠠⠛⠷⠸⠭⠤⠸⠽⠾⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. However, the first <i class="one-letter">k</i> coordinates in <nemeth class="inline">⠠⠛⠷⠸⠭⠤⠸⠽⠾</nemeth> are exactly <nemeth class="inline">⠭⠂⠤⠽⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠅⠐⠤⠽⠰⠅⠐</nemeth>, since they are determined by the identity matrix, <nemeth class="inline">⠠⠊⠰⠅</nemeth>, part of <i class="one-letter">G</i>. Hence, <nemeth class="inline">⠠⠛⠷⠸⠭⠤⠸⠽⠾⠀⠨⠅⠀⠼⠴</nemeth> exactly when <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠸⠽</nemeth>.</p>
          </article>
          <p id="EKK">Before we can prove the relationship between canonical parity-check matrices and standard generating matrices, we need to prove a lemma.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="Clq">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.5</span>
              <span class="period">.</span>
            </h6>
            <p id="Zuz">Let <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠷⠠⠁⠳⠠⠊⠰⠍⠐⠾</nemeth> be an <nemeth class="inline">⠍⠈⠡⠝</nemeth> canonical parity-check matrix and <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠷⠹⠠⠊⠰⠝⠤⠍⠐⠌⠠⠁⠼⠾</nemeth> be the corresponding <nemeth class="inline">⠝⠈⠡⠷⠝⠤⠍⠾</nemeth> standard generator matrix. Then <nemeth class="inline">⠠⠓⠠⠛⠀⠨⠅⠀⠼⠴</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="lWZ">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="OlA">Let <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠠⠓⠠⠛</nemeth>. The <nemeth class="inline">⠊⠚</nemeth>th entry in <i class="one-letter">C</i> is</p>
            <div class="displaymath">
              <nemeth>⠉⠰⠊⠚⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠓⠰⠊⠅⠐⠛⠰⠅⠚⠐⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠤⠍⠻⠓⠰⠊⠅⠐⠛⠰⠅⠚⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠝⠤⠍⠬⠂⠣⠝⠻⠓⠰⠊⠅⠐⠛⠰⠅⠚⠐⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠤⠍⠻⠁⠰⠊⠅⠐⠨⠙⠰⠅⠚⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠝⠤⠍⠬⠂⠣⠝⠻⠨⠙⠰⠊⠤⠷⠍⠤⠝⠾⠠⠀⠅⠐⠁⠰⠅⠚⠐⠀⠀⠀⠀⠨⠅⠀⠁⠰⠊⠚⠐⠬⠁⠰⠊⠚⠐⠀⠀⠀⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">, where</p>
            <div class="displaymath">
              <nemeth>⠨⠙⠰⠊⠚⠐⠀⠨⠅⠀⠀⠨⠅⠀⠨⠠⠷⠼⠂⠀⠊⠀⠨⠅⠀⠚⠀⠨⠠⠷⠴⠀⠊⠀⠌⠨⠅⠀⠚⠐</nemeth>
            </div>
            <p data-braille="continuation">is the Kronecker delta. </p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="lnf">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.6</span>
              <span class="period">.</span>
            </h6>
            <p id="whW">Let <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠷⠠⠁⠳⠠⠊⠰⠍⠐⠾</nemeth> be an <nemeth class="inline">⠍⠈⠡⠝</nemeth> canonical parity-check matrix and let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠷⠹⠠⠊⠰⠝⠤⠍⠐⠌⠠⠁⠼⠾</nemeth> be the <nemeth class="inline">⠝⠈⠡⠷⠝⠤⠍⠾</nemeth> standard generator matrix associated with <i class="one-letter">H</i>. Let <i class="one-letter">C</i> be the code generated by <i class="one-letter">G</i>. Then <nemeth class="inline">⠸⠽</nemeth> is in <i class="one-letter">C</i> if and only if <nemeth class="inline">⠠⠓⠸⠽⠀⠨⠅⠀⠼⠴</nemeth>. In particular, <i class="one-letter">C</i> is a linear code with canonical parity-check matrix <i class="one-letter">H</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="BfX">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="usJ">First suppose that <nemeth class="inline">⠸⠽⠀⠈⠑⠀⠠⠉</nemeth>. Then <nemeth class="inline">⠠⠛⠸⠭⠀⠨⠅⠀⠸⠽</nemeth> for some <nemeth class="inline">⠸⠭⠀⠈⠑⠀⠸⠠⠵⠆⠘⠍</nemeth>. By Lemma 8.3.5, <nemeth class="inline">⠠⠓⠸⠽⠀⠨⠅⠀⠠⠓⠠⠛⠸⠭⠀⠨⠅⠀⠼⠴</nemeth>.</p>
            <p id="azS">Conversely, suppose that <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠽⠂⠠⠀⠄⠄⠄⠀⠠⠀⠽⠰⠝⠐⠾⠘⠞</nemeth> is in the null space of <i class="one-letter">H</i>. We need to find an <nemeth class="inline">⠸⠭</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠘⠝⠤⠍</nemeth> such that <nemeth class="inline">⠠⠛⠸⠭⠘⠞⠐⠀⠨⠅⠀⠸⠽</nemeth>. Since <nemeth class="inline">⠠⠓⠸⠽⠀⠨⠅⠀⠼⠴</nemeth>, the following set of equations must be satisfied:</p>
            <div class="displaymath">
              <nemeth>⠁⠂⠂⠽⠂⠬⠁⠂⠆⠽⠆⠬⠄⠄⠄⠬⠁⠰⠼⠂⠠⠀⠝⠤⠍⠐⠽⠰⠝⠤⠍⠬⠽⠰⠝⠤⠍⠬⠂⠀⠀⠨⠅⠀⠼⠴⠀⠁⠆⠂⠽⠂⠬⠁⠆⠆⠽⠆⠬⠄⠄⠄⠬⠁⠰⠼⠆⠠⠀⠝⠤⠍⠐⠽⠰⠝⠤⠍⠬⠽⠰⠝⠤⠍⠬⠂⠀⠀⠨⠅⠀⠼⠴⠀⠀⠀⠣⠄⠄⠄⠀⠁⠰⠍⠐⠂⠐⠽⠂⠬⠁⠰⠍⠐⠆⠐⠽⠆⠬⠄⠄⠄⠬⠁⠰⠍⠠⠀⠝⠤⠍⠐⠽⠰⠝⠤⠍⠬⠽⠰⠝⠤⠍⠬⠂⠀⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. Equivalently, <nemeth class="inline">⠽⠰⠝⠤⠍⠬⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠽⠰⠝⠐</nemeth> are determined by <nemeth class="inline">⠽⠂⠠⠀⠄⠄⠄⠀⠠⠀⠽⠰⠝⠤⠍⠐</nemeth>:</p>
            <div class="displaymath">
              <nemeth>⠽⠰⠝⠤⠍⠬⠂⠀⠀⠨⠅⠀⠁⠂⠂⠽⠂⠬⠁⠂⠆⠽⠆⠬⠄⠄⠄⠬⠁⠰⠼⠂⠠⠀⠝⠤⠍⠐⠽⠰⠝⠤⠍⠐⠀⠽⠰⠝⠤⠍⠬⠂⠀⠀⠨⠅⠀⠁⠆⠂⠽⠂⠬⠁⠆⠆⠽⠆⠬⠄⠄⠄⠬⠁⠰⠼⠆⠠⠀⠝⠤⠍⠐⠽⠰⠝⠤⠍⠐⠀⠀⠀⠣⠄⠄⠄⠀⠽⠰⠝⠤⠍⠬⠂⠀⠀⠨⠅⠀⠁⠰⠍⠐⠂⠐⠽⠂⠬⠁⠰⠍⠐⠆⠐⠽⠆⠬⠄⠄⠄⠬⠁⠰⠍⠠⠀⠝⠤⠍⠐⠽⠰⠝⠤⠍</nemeth>
            </div>
            <p data-braille="continuation">. Consequently, we can let <nemeth class="inline">⠭⠰⠊⠐⠀⠨⠅⠀⠽⠰⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠍</nemeth>.</p>
          </article>
          <p id="kRT">It would be helpful if we could compute the minimum distance of a linear code directly from its matrix <i class="one-letter">H</i> in order to determine the error-detecting and error-correcting capabilities of the code. Suppose that</p>
          <div class="displaymath">
            <nemeth>⠸⠑⠂⠀⠀⠨⠅⠀⠷⠼⠂⠴⠴⠀⠄⠄⠄⠀⠼⠴⠴⠾⠘⠞⠐⠀⠸⠑⠆⠀⠀⠨⠅⠀⠷⠼⠴⠂⠴⠀⠄⠄⠄⠀⠼⠴⠴⠾⠘⠞⠐⠀⠀⠀⠣⠄⠄⠄⠀⠸⠑⠰⠝⠀⠀⠨⠅⠀⠷⠼⠴⠴⠴⠀⠄⠄⠄⠀⠼⠴⠂⠾⠘⠞</nemeth>
          </div>
          <p data-braille="continuation">are the <i class="one-letter">n</i>-tuples in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> of weight <nemeth class="inline">⠼⠂</nemeth>. For an <nemeth class="inline">⠍⠈⠡⠝</nemeth> binary matrix <i class="one-letter">H</i>, <nemeth class="inline">⠠⠓⠸⠑⠰⠊</nemeth> is exactly the <i class="one-letter">i</i>th column of the matrix <i class="one-letter">H</i>.</p>
          <article class="example example-like" data-braille="example-like" id="ncs">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.7</span>
              <span class="period">.</span>
            </h6>
            <p id="fTF">Observe that</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠨⠅⠀⠼⠂⠀⠴⠀⠂</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="QZc">We state this result in the following proposition and leave the proof as an exercise.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="JPP">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.8</span>
              <span class="period">.</span>
            </h6>
            <p id="ARP">Let <nemeth class="inline">⠸⠑⠰⠊</nemeth> be the binary <i class="one-letter">n</i>-tuple with a <nemeth class="inline">⠼⠂</nemeth> in the <i class="one-letter">i</i>th coordinate and <nemeth class="inline">⠼⠴</nemeth>'s elsewhere and suppose that <nemeth class="inline">⠠⠓⠀⠈⠑⠀⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth>. Then <nemeth class="inline">⠠⠓⠸⠑⠰⠊</nemeth> is the <i class="one-letter">i</i>th column of the matrix <i class="one-letter">H</i>.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="Ruo">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.9</span>
              <span class="period">.</span>
            </h6>
            <p id="cpf">Let <i class="one-letter">H</i> be an <nemeth class="inline">⠍⠈⠡⠝</nemeth> binary matrix. Then the null space of <i class="one-letter">H</i> is a single error-detecting code if and only if no column of <i class="one-letter">H</i> consists entirely of zeros.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="hng">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="GHb">Suppose that <nemeth class="inline">⠠⠝⠥⠇⠇⠷⠠⠓⠾</nemeth> is a single error-detecting code. Then the minimum distance of the code must be at least <nemeth class="inline">⠼⠆</nemeth>. Since the null space is a group code, it is sufficient to require that the code contain no codewords of less than weight <nemeth class="inline">⠼⠆</nemeth> other than the zero codeword. That is, <nemeth class="inline">⠸⠑⠰⠊</nemeth> must not be a codeword for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝</nemeth>. Since <nemeth class="inline">⠠⠓⠸⠑⠰⠊</nemeth> is the <i class="one-letter">i</i>th column of <i class="one-letter">H</i>, the only way in which <nemeth class="inline">⠸⠑⠰⠊</nemeth> could be in the null space of <i class="one-letter">H</i> would be if the <i class="one-letter">i</i>th column were all zeros, which is impossible; hence, the code must have the capability to detect at least single errors.</p>
            <p id="mOk">Conversely, suppose that no column of <i class="one-letter">H</i> is the zero column. By Proposition 8.3.8, <nemeth class="inline">⠠⠓⠸⠑⠰⠊⠐⠀⠌⠨⠅⠀⠼⠴</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="TjB">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.10</span>
              <span class="period">.</span>
            </h6>
            <p id="MaO">If we consider the matrices</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠂⠀⠨⠅⠀⠠⠷⠼⠂⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠆⠀⠨⠅⠀⠠⠷⠼⠂⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, then the null space of <nemeth class="inline">⠠⠓⠂</nemeth> is a single error-detecting code and the null space of <nemeth class="inline">⠠⠓⠆</nemeth> is not.</p>
          </article>
          <p id="xgl">We can even do better than Theorem 8.3.9. This theorem gives us conditions on a matrix <i class="one-letter">H</i> that tell us when the minimum weight of the code formed by the null space of <i class="one-letter">H</i> is <nemeth class="inline">⠼⠆</nemeth>. We can also determine when the minimum distance of a linear code is <nemeth class="inline">⠼⠒</nemeth> by examining the corresponding matrix.</p>
          <article class="example example-like" data-braille="example-like" id="zqK">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.11</span>
              <span class="period">.</span>
            </h6>
            <p id="shX">If we let</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠂⠀⠂⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">and want to determine whether or not <i class="one-letter">H</i> is the canonical parity-check matrix for an error-correcting code, it is necessary to make certain that <nemeth class="inline">⠠⠝⠥⠇⠇⠷⠠⠓⠾</nemeth> does not contain any <nemeth class="inline">⠼⠲</nemeth>-tuples of weight <nemeth class="inline">⠼⠆</nemeth>. That is, <nemeth class="inline">⠷⠼⠂⠂⠴⠴⠾</nemeth>, <nemeth class="inline">⠷⠼⠂⠴⠂⠴⠾</nemeth>, <nemeth class="inline">⠷⠼⠂⠴⠴⠂⠾</nemeth>, <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠾</nemeth>, <nemeth class="inline">⠷⠼⠴⠂⠴⠂⠾</nemeth>, and <nemeth class="inline">⠷⠼⠴⠴⠂⠂⠾</nemeth> must not be in <nemeth class="inline">⠠⠝⠥⠇⠇⠷⠠⠓⠾</nemeth>. The next theorem states that we can indeed determine that the code generated by <i class="one-letter">H</i> is error-correcting by examining the columns of <i class="one-letter">H</i>. Notice in this example that not only does <i class="one-letter">H</i> have no zero columns, but also that no two columns are the same.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="xBx">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">8.3.12</span>
              <span class="period">.</span>
            </h6>
            <p id="Iwo">Let <i class="one-letter">H</i> be a binary matrix. The null space of <i class="one-letter">H</i> is a single error-correcting code if and only if <i class="one-letter">H</i> does not contain any zero columns and no two columns of <i class="one-letter">H</i> are identical.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="Nup">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="SVt">The <i class="one-letter">n</i>-tuple <nemeth class="inline">⠸⠑⠰⠊⠐⠬⠸⠑⠰⠚</nemeth> has <nemeth class="inline">⠼⠂</nemeth>s in the <i class="one-letter">i</i>th and <i class="one-letter">j</i>th entries and 0s elsewhere, and <nemeth class="inline">⠺⠷⠸⠑⠰⠊⠐⠬⠸⠑⠰⠚⠐⠾⠀⠨⠅⠀⠼⠆</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth>. Since</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠀⠨⠅⠀⠠⠓⠷⠸⠑⠰⠊⠐⠬⠸⠑⠰⠚⠐⠾⠀⠨⠅⠀⠠⠓⠸⠑⠰⠊⠐⠬⠠⠓⠸⠑⠰⠚</nemeth>
            </div>
            <p data-braille="continuation">can only occur if the <i class="one-letter">i</i>th and <i class="one-letter">j</i>th columns are identical, the null space of <i class="one-letter">H</i> is a single error-correcting code.</p>
          </article>
          <p id="dnu">Suppose now that we have a canonical parity-check matrix <i class="one-letter">H</i> with three rows. Then we might ask how many more columns we can add to the matrix and still have a null space that is a single error-detecting and single error-correcting code. Since each column has three entries, there are <nemeth class="inline">⠼⠆⠘⠒⠐⠀⠨⠅⠀⠼⠦</nemeth> possible distinct columns. We cannot add the columns</p>
          <div class="displaymath">
            <nemeth>⠼⠴⠀⠴⠀⠴⠠⠀⠼⠂⠀⠴⠀⠴⠠⠀⠼⠴⠀⠂⠀⠴⠠⠀⠼⠴⠀⠴⠀⠂</nemeth>
          </div>
          <p data-braille="continuation">. So we can add as many as four columns and still maintain a minimum distance of <nemeth class="inline">⠼⠒</nemeth>.</p>
          <p id="JuD">In general, if <i class="one-letter">H</i> is an <nemeth class="inline">⠍⠈⠡⠝</nemeth> canonical parity-check matrix, then there are <nemeth class="inline">⠝⠤⠍</nemeth> information positions in each codeword. Each column has <i class="one-letter">m</i> bits, so there are <nemeth class="inline">⠼⠆⠘⠍</nemeth> possible distinct columns. It is necessary that the columns <nemeth class="inline">⠼⠴⠠⠀⠸⠑⠂⠠⠀⠄⠄⠄⠀⠠⠀⠸⠑⠰⠍⠐</nemeth> be excluded, leaving <nemeth class="inline">⠼⠆⠘⠍⠐⠤⠷⠂⠬⠍⠾</nemeth> remaining columns for information if we are still to maintain the ability not only to detect but also to correct single errors.</p>
        </section>
        <section class="section" id="eef">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">8.4</span> <span class="title">Efficient Decoding</span></div>
          <section class="introduction" id="khM">
            <p id="tXk">We are now at the stage where we are able to generate linear codes that detect and correct errors fairly easily, but it is still a time-consuming process to decode a received <i class="one-letter">n</i>-tuple and determine which is the closest codeword, because the received <i class="one-letter">n</i>-tuple must be compared to each possible codeword to determine the proper decoding. This can be a serious impediment if the code is very large.</p>
            <article class="example example-like" data-braille="example-like" id="fxT">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.4.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Ypg">Given the binary matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠂⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">and the <nemeth class="inline">⠼⠢</nemeth>-tuples <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠂⠂⠴⠂⠂⠾⠘⠞</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠼⠴⠂⠴⠂⠂⠾⠘⠞</nemeth>, we can compute</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠸⠭⠀⠨⠅⠀⠼⠴⠀⠴⠀⠴⠁⠝⠙⠠⠓⠸⠽⠀⠨⠅⠀⠼⠂⠀⠴⠀⠂</nemeth>
              </div>
              <p data-braille="continuation">. Hence, <nemeth class="inline">⠸⠭</nemeth> is a codeword and <nemeth class="inline">⠸⠽</nemeth> is not, since <nemeth class="inline">⠸⠭</nemeth> is in the null space and <nemeth class="inline">⠸⠽</nemeth> is not. Notice that <nemeth class="inline">⠠⠓⠸⠽</nemeth> is identical to the first column of <i class="one-letter">H</i>. In fact, this is where the error occurred. If we flip the first bit in <nemeth class="inline">⠸⠽</nemeth> from <nemeth class="inline">⠼⠴</nemeth> to <nemeth class="inline">⠼⠂</nemeth>, then we obtain <nemeth class="inline">⠸⠭</nemeth>.</p>
            </article>
            <p id="aet">If <i class="one-letter">H</i> is an <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrix and <nemeth class="inline">⠸⠭⠀⠈⠑⠀⠸⠠⠵⠆⠘⠝</nemeth>, then we say that the <dfn class="terminology">syndrome</dfn>  of <nemeth class="inline">⠸⠭</nemeth> is <nemeth class="inline">⠠⠓⠸⠭</nemeth>. The following proposition allows the quick detection and correction of errors.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="pWY">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">8.4.2</span>
                <span class="period">.</span>
              </h6>
              <p id="gYY">Let the <nemeth class="inline">⠍⠈⠡⠝</nemeth> binary matrix <i class="one-letter">H</i> determine a linear code and let <nemeth class="inline">⠸⠭</nemeth> be the received <i class="one-letter">n</i>-tuple. Write <nemeth class="inline">⠸⠭</nemeth> as <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠸⠉⠬⠸⠑</nemeth>, where <nemeth class="inline">⠸⠉</nemeth> is the transmitted codeword and <nemeth class="inline">⠸⠑</nemeth> is the transmission error. Then the syndrome <nemeth class="inline">⠠⠓⠸⠭</nemeth> of the received codeword <nemeth class="inline">⠸⠭</nemeth> is also the syndrome of the error <nemeth class="inline">⠸⠑</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="tBy">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="zcC">The proof follows from the fact that</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠸⠭⠀⠨⠅⠀⠠⠓⠷⠸⠉⠬⠸⠑⠾⠀⠨⠅⠀⠠⠓⠸⠉⠬⠠⠓⠸⠑⠀⠨⠅⠀⠼⠴⠬⠠⠓⠸⠑⠀⠨⠅⠀⠠⠓⠸⠑</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="GlC">This proposition tells us that the syndrome of a received word depends solely on the error and not on the transmitted codeword. The proof of the following theorem follows immediately from Proposition 8.4.2 and from the fact that <nemeth class="inline">⠠⠓⠸⠑</nemeth> is the <i class="one-letter">i</i>th column of the matrix <i class="one-letter">H</i>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="dIG">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">8.4.3</span>
                <span class="period">.</span>
              </h6>
              <p id="oDx">Let <nemeth class="inline">⠠⠓⠀⠈⠑⠀⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth> and suppose that the linear code corresponding to <i class="one-letter">H</i> is single error-correcting. Let <nemeth class="inline">⠸⠗</nemeth> be a received <i class="one-letter">n</i>-tuple that was transmitted with at most one error. If the syndrome of <nemeth class="inline">⠸⠗</nemeth> is <nemeth class="inline">⠼⠴</nemeth>, then no error has occurred; otherwise, if the syndrome of <nemeth class="inline">⠸⠗</nemeth> is equal to some column of <i class="one-letter">H</i>, say the <i class="one-letter">i</i>th column, then the error has occurred in the <i class="one-letter">i</i>th bit.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="LFc">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.4.4</span>
                <span class="period">.</span>
              </h6>
              <p id="Ewp">Consider the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">and suppose that the  <nemeth class="inline">⠼⠖</nemeth>-tuples <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠂⠂⠂⠂⠂⠴⠾⠘⠞</nemeth>, <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠼⠂⠂⠂⠂⠂⠂⠾⠘⠞</nemeth>, and <nemeth class="inline">⠸⠵⠀⠨⠅⠀⠷⠼⠴⠂⠴⠂⠂⠂⠾⠘⠞</nemeth> have been received. Then</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠸⠭⠀⠨⠅⠀⠼⠂⠀⠂⠀⠂⠠⠀⠠⠓⠸⠽⠀⠨⠅⠀⠼⠂⠀⠂⠀⠴⠠⠀⠠⠓⠸⠵⠀⠨⠅⠀⠼⠂⠀⠴⠀⠴</nemeth>
              </div>
              <p data-braille="continuation">. Hence, <nemeth class="inline">⠸⠭</nemeth> has an error in the third bit and <nemeth class="inline">⠸⠵</nemeth> has an error in the fourth bit. The transmitted codewords for <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠵</nemeth> must have been <nemeth class="inline">⠷⠼⠂⠂⠴⠂⠂⠴⠾</nemeth> and <nemeth class="inline">⠷⠼⠴⠂⠴⠴⠂⠂⠾</nemeth>, respectively. The syndrome of <nemeth class="inline">⠸⠽</nemeth> does not occur in any of the columns of the matrix <i class="one-letter">H</i>, so multiple errors must have occurred to produce <nemeth class="inline">⠸⠽</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="oDk">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">8.4.1</span> <span class="title">Coset Decoding</span></div>
            <p id="tBL">We can use group theory to obtain another way of decoding messages. A linear code <i class="one-letter">C</i> is a subgroup of <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth>. <dfn class="terminology">Coset</dfn>  or <dfn class="terminology">standard decoding</dfn>  uses the cosets of <i class="one-letter">C</i> in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> to implement maximum-likelihood decoding. Suppose that <i class="one-letter">C</i> is an <nemeth class="inline">⠷⠝⠠⠀⠍⠾</nemeth>-linear code. A coset of <i class="one-letter">C</i> in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> is written in the form <nemeth class="inline">⠸⠭⠬⠠⠉</nemeth>, where <nemeth class="inline">⠸⠭⠀⠈⠑⠀⠸⠠⠵⠆⠘⠝</nemeth>. By Lagrange's Theorem (Theorem 6.2.2), there are <nemeth class="inline">⠼⠆⠘⠝⠤⠍</nemeth> distinct cosets of <i class="one-letter">C</i> in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="MaB">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.4.5</span>
                <span class="period">.</span>
              </h6>
              <p id="kDy">Let <i class="one-letter">C</i> be the <nemeth class="inline">⠷⠼⠢⠠⠀⠼⠒⠾</nemeth>-linear code given by the parity-check matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. The code consists of the codewords</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠴⠴⠴⠴⠴⠾⠷⠴⠂⠂⠴⠂⠾⠷⠂⠴⠴⠂⠂⠾⠷⠂⠂⠂⠂⠴⠾</nemeth>
              </div>
              <p data-braille="continuation">. There are <nemeth class="inline">⠼⠆⠘⠢⠤⠆⠐⠀⠨⠅⠀⠼⠆⠘⠒</nemeth> cosets of <i class="one-letter">C</i> in <nemeth class="inline">⠸⠠⠵⠆⠘⠢</nemeth>, each with order <nemeth class="inline">⠼⠆⠘⠆⠐⠀⠨⠅⠀⠼⠲</nemeth>. These cosets are listed in Table 8.4.6.</p>
            </article>
            <figure class="table table-like" data-braille="figure-like" id="tuH">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">8.4.6<span class="period">.</span></span><span class="space"> </span>Cosets of <i class="one-letter">C</i></figcaption>
              <table>
                <tr>
                  <td class="c m b0 r0 l0 t2 lines">Coset</td>
                  <td class="c m b0 r0 l0 t2 lines" data-braille="last-cell">Coset</td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l0 t0 lines">Representative</td>
                  <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell"/>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <i class="one-letter">C</i>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠴⠴⠾⠷⠴⠂⠂⠴⠂⠾⠷⠂⠴⠴⠂⠂⠾⠷⠂⠂⠂⠂⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠴⠴⠴⠴⠾⠬⠠⠉</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠂⠴⠴⠴⠴⠾⠷⠂⠂⠂⠴⠂⠾⠷⠴⠴⠴⠂⠂⠾⠷⠴⠂⠂⠂⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠂⠴⠴⠴⠾⠬⠠⠉</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠂⠴⠴⠴⠾⠷⠴⠴⠂⠴⠂⠾⠷⠂⠂⠴⠂⠂⠾⠷⠂⠴⠂⠂⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠴⠂⠴⠴⠾⠬⠠⠉</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠂⠴⠴⠾⠷⠴⠂⠴⠴⠂⠾⠷⠂⠴⠂⠂⠂⠾⠷⠂⠂⠴⠂⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠂⠴⠾⠬⠠⠉</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠂⠴⠾⠷⠴⠂⠂⠂⠂⠾⠷⠂⠴⠴⠴⠂⠾⠷⠂⠂⠂⠴⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠴⠂⠾⠬⠠⠉</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠴⠂⠾⠷⠴⠂⠂⠴⠴⠾⠷⠂⠴⠴⠂⠴⠾⠷⠂⠂⠂⠂⠂⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠴⠂⠴⠴⠾⠬⠠⠉</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠂⠂⠂⠾⠷⠴⠂⠴⠂⠴⠾⠷⠂⠴⠂⠴⠴⠾⠷⠂⠂⠴⠴⠂⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠴⠂⠂⠴⠾⠬⠠⠉</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠂⠂⠴⠾⠷⠴⠂⠴⠂⠂⠾⠷⠂⠴⠂⠴⠂⠾⠷⠂⠂⠴⠴⠴⠾</nemeth>
                  </td>
                </tr>
              </table>
            </figure>
            <p id="ZIU">Our task is to find out how knowing the cosets might help us to decode a message. Suppose that <nemeth class="inline">⠸⠭</nemeth> was the original codeword sent and that <nemeth class="inline">⠸⠗</nemeth> is the <i class="one-letter">n</i>-tuple received. If <nemeth class="inline">⠸⠑</nemeth> is the transmission error, then <nemeth class="inline">⠸⠗⠀⠨⠅⠀⠸⠑⠬⠸⠭</nemeth> or, equivalently, <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠸⠑⠬⠸⠗</nemeth>. However, this is exactly the statement that <nemeth class="inline">⠸⠗</nemeth> is an element in the coset <nemeth class="inline">⠸⠑⠬⠠⠉</nemeth>. In maximum-likelihood decoding we expect the error <nemeth class="inline">⠸⠑</nemeth> to be as small as possible; that is, <nemeth class="inline">⠸⠑</nemeth> will have the least weight. An <i class="one-letter">n</i>-tuple of least weight in a coset is called a <dfn class="terminology">coset leader</dfn>.  Once we have determined a coset leader for each coset, the decoding process becomes a task of calculating <nemeth class="inline">⠸⠗⠬⠸⠑</nemeth> to obtain <nemeth class="inline">⠸⠭</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="shK">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.4.7</span>
                <span class="period">.</span>
              </h6>
              <p id="QKH">In Table 8.4.6, notice that we have chosen a representative of the least possible weight for each coset. These representatives are coset leaders. Now suppose that <nemeth class="inline">⠸⠗⠀⠨⠅⠀⠷⠼⠴⠂⠂⠂⠂⠾</nemeth> is the received word. To decode <nemeth class="inline">⠸⠗</nemeth>, we find that it is in the coset <nemeth class="inline">⠷⠼⠴⠴⠴⠂⠴⠾⠬⠠⠉</nemeth>; hence, the originally transmitted codeword must have been <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠂⠾⠀⠨⠅⠀⠷⠼⠴⠂⠂⠂⠂⠾⠬⠷⠴⠴⠴⠂⠴⠾</nemeth>.</p>
            </article>
            <p id="FQd">A potential problem with this method of decoding is that we might have to examine every coset for the received codeword. The following proposition gives a method of implementing coset decoding. It states that we can associate a syndrome with each coset; hence, we can make a table that designates a coset leader corresponding to each syndrome. Such a list is called a <dfn class="terminology">decoding table</dfn>. </p>
            <figure class="table table-like" data-braille="figure-like" id="ZBQ">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">8.4.8<span class="period">.</span></span><span class="space"> </span>Syndromes for each coset</figcaption>
              <table>
                <tr>
                  <td class="c m b2 r0 l0 t2 lines">Syndrome</td>
                  <td class="c m b2 r0 l0 t2 lines" data-braille="last-cell">Coset Leader</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠾</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠴⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠴⠂⠾</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠴⠂⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠂⠴⠾</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠴⠂⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠂⠂⠾</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠂⠴⠴⠴⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠴⠴⠾</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠂⠴⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠴⠂⠾</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠂⠴⠴⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠂⠴⠾</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠴⠴⠂⠂⠴⠾</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠂⠂⠾</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠷⠼⠂⠴⠂⠴⠴⠾</nemeth>
                  </td>
                </tr>
              </table>
            </figure>
            <article class="proposition theorem-like" data-braille="theorem-like" id="fTs">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">8.4.9</span>
                <span class="period">.</span>
              </h6>
              <p id="Ngh">Let <i class="one-letter">C</i> be an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-linear code given by the matrix <i class="one-letter">H</i> and suppose that <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> are in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth>. Then <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> are in the same coset of <i class="one-letter">C</i> if and only if <nemeth class="inline">⠠⠓⠸⠭⠀⠨⠅⠀⠠⠓⠸⠽</nemeth>. That is, two <i class="one-letter">n</i>-tuples are in the same coset if and only if their syndromes are the same.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZIH">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="fjL">Two <i class="one-letter">n</i>-tuples <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> are in the same coset of <i class="one-letter">C</i> exactly when <nemeth class="inline">⠸⠭⠤⠸⠽⠀⠈⠑⠀⠠⠉</nemeth>; however, this is equivalent to <nemeth class="inline">⠠⠓⠷⠸⠭⠤⠸⠽⠾⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠠⠓⠸⠭⠀⠨⠅⠀⠠⠓⠸⠽</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="YoT">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">8.4.10</span>
                <span class="period">.</span>
              </h6>
              <p id="wRQ">Table 8.4.8 is a decoding table for the code <i class="one-letter">C</i> given in Example 8.4.5. If <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠴⠂⠂⠂⠂⠾</nemeth> is received, then its syndrome can be computed to be</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠸⠭⠀⠨⠅⠀⠼⠴⠀⠂⠀⠴</nemeth>
              </div>
              <p data-braille="continuation">. Examining the decoding table, we determine that the coset leader is <nemeth class="inline">⠷⠼⠴⠴⠴⠂⠴⠾</nemeth>. It is now easy to decode the received codeword.</p>
            </article>
            <p id="lXm">Given an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-block code, the question arises of whether or not coset decoding is a manageable scheme. A decoding table requires a list of cosets and syndromes, one for each of the <nemeth class="inline">⠼⠆⠘⠝⠤⠅</nemeth> cosets of <i class="one-letter">C</i>. Suppose that we have a <nemeth class="inline">⠷⠼⠒⠆⠠⠀⠼⠆⠲⠾</nemeth>-block code. We have a huge number of codewords, <nemeth class="inline">⠼⠆⠘⠆⠲</nemeth>, yet there are only <nemeth class="inline">⠼⠆⠘⠒⠆⠤⠆⠲⠐⠀⠨⠅⠀⠼⠆⠘⠦⠐⠀⠨⠅⠀⠼⠆⠢⠖</nemeth> cosets.</p>
            <article class="paragraphs" id="FBv">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="Sev">Sage has a substantial repertoire of commands for coding theory, including the ability to build many different families of codes.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="gmA">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">8.5</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="nCe">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="slX">Suppose a binary code has minimum distance <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠖</nemeth>. How many errors can be detected? How many errors can be corrected?</p>
          </article>
          <article class="exercise exercise-like" id="TJn">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="Ytg">Explain why it is impossible for the 8-bit string with decimal value <nemeth class="inline">⠼⠢⠖⠰⠂⠴</nemeth> to be an <abbr class="acronym">ASCII</abbr> code for a character. Assume the leftmost bit of the string is being used as a parity-check bit.</p>
          </article>
          <article class="exercise exercise-like" id="zQw">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="EAp">Suppose we receive the 8-bit string with decimal value <nemeth class="inline">⠼⠢⠖⠰⠂⠴</nemeth> when we are expecting <abbr class="acronym">ASCII</abbr> characters with a parity-check bit in the first bit (leftmost). We know an error has occurred in transmission. Give one of the probable guesses for the character which was actually sent (other than ‘8’), under the assumption that any individual bit is rarely sent in error. Explain the logic of your answer. (You may need to consult a table of <abbr class="acronym">ASCII</abbr> values online.)</p>
          </article>
          <article class="exercise exercise-like" id="fXF">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="kHy">Suppose a linear code <i class="one-letter">C</i> is created as the null space of the parity-check matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠈⠠⠷⠼⠴⠀⠂⠀⠴⠀⠂⠀⠴⠈⠠⠾⠀⠈⠠⠷⠂⠀⠂⠀⠂⠀⠂⠀⠴⠈⠠⠾⠀⠈⠠⠷⠴⠀⠴⠀⠂⠀⠂⠀⠂⠈⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">Then <nemeth class="inline">⠭⠀⠨⠅⠀⠼⠂⠂⠂⠴⠴</nemeth> is not a codeword. Describe a computation, and give the result of that computation, which verifies that <i class="one-letter">x</i> is not a codeword of the code <i class="one-letter">C</i>.</p>
          </article>
          <article class="exercise exercise-like" id="MeO">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="QOH">For <i class="one-letter">H</i> and <i class="one-letter">x</i> as in the previous question, suppose that <i class="one-letter">x</i> is received as a message. Give a maximum likelihood decoding of the received message.</p>
          </article>
        </section>
        <section class="exercises" id="NfU">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">8.6</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="kDl">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="SzU">Why is the following encoding scheme not acceptable?</p>
            <div class="sidebyside">
              <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
                <div class="sbspanel fixed-width" style="width:100%;justify-content:flex-start;">
                  <table>
                    <tr>
                      <td class="c m b2 r0 l0 t2 lines">Information</td>
                      <td class="c m b2 r0 l0 t2 lines">
                        <nemeth class="inline">⠼⠴</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t2 lines">
                        <nemeth class="inline">⠼⠂</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t2 lines">
                        <nemeth class="inline">⠼⠆</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t2 lines">
                        <nemeth class="inline">⠼⠒</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t2 lines">
                        <nemeth class="inline">⠼⠲</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t2 lines">
                        <nemeth class="inline">⠼⠢</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t2 lines">
                        <nemeth class="inline">⠼⠖</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t2 lines">
                        <nemeth class="inline">⠼⠶</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t2 lines" data-braille="last-cell">
                        <nemeth class="inline">⠼⠦</nemeth>
                      </td>
                    </tr>
                    <tr>
                      <td class="c m b2 r0 l0 t0 lines">Codeword</td>
                      <td class="c m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠴⠴⠴</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠴⠴⠂</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠴⠂⠴</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠴⠂⠂</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠂⠴⠂</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠂⠂⠴</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠂⠂⠂</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠴⠴⠴</nemeth>
                      </td>
                      <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell">
                        <nemeth class="inline">⠼⠴⠴⠂</nemeth>
                      </td>
                    </tr>
                  </table>
                </div>
              </div>
            </div>
          </article>
          <article class="exercise exercise-like" id="QKu">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="yHd">Without doing any addition, explain why the following set of <nemeth class="inline">⠼⠲</nemeth>-tuples in <nemeth class="inline">⠸⠠⠵⠆⠘⠲</nemeth> cannot be a group code.</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠴⠂⠂⠴⠾⠷⠂⠴⠴⠂⠾⠷⠂⠴⠂⠴⠾⠷⠂⠂⠴⠴⠾</nemeth>
            </div>
            <div class="solutions">
              <div class="hint solution-like" id="esA"><span class="type">Hint</span>:<p id="HMu">This cannot be a group code since <nemeth class="inline">⠷⠼⠴⠴⠴⠴⠾⠀⠌⠈⠑⠀⠠⠉</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="wRD">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="eOm">Compute the Hamming distances between the following pairs of <i class="one-letter">n</i>-tuples.</p>
            <ol class="outerlist">
              <li>a. <p id="ZBD"><nemeth class="inline">⠷⠼⠴⠂⠂⠴⠂⠴⠾⠠⠀⠷⠼⠴⠂⠂⠂⠴⠴⠾</nemeth></p></li>
              <li>b. <p id="FIM"><nemeth class="inline">⠷⠼⠂⠂⠂⠂⠴⠂⠴⠂⠾⠠⠀⠷⠼⠴⠂⠴⠂⠴⠂⠴⠴⠾</nemeth></p></li>
              <li>c. <p id="lPV"><nemeth class="inline">⠷⠼⠴⠴⠂⠂⠴⠾⠠⠀⠷⠼⠴⠂⠂⠂⠂⠾</nemeth></p></li>
              <li>d. <p id="RXe"><nemeth class="inline">⠷⠼⠂⠴⠴⠂⠾⠠⠀⠷⠼⠴⠂⠂⠂⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="qGS"><span class="type">Hint</span>:<p id="nTD">(a) <nemeth class="inline">⠼⠆</nemeth>; (c) <nemeth class="inline">⠼⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="cYM">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="KVv">Compute the weights of the following <i class="one-letter">n</i>-tuples.</p>
            <ol class="outerlist">
              <li>a. <p id="yen"><nemeth class="inline">⠷⠼⠴⠂⠂⠴⠂⠴⠾</nemeth></p></li>
              <li>b. <p id="elw"><nemeth class="inline">⠷⠼⠂⠂⠂⠂⠴⠂⠴⠂⠾</nemeth></p></li>
              <li>c. <p id="KsF"><nemeth class="inline">⠷⠼⠴⠂⠂⠂⠂⠾</nemeth></p></li>
              <li>d. <p id="qzO"><nemeth class="inline">⠷⠼⠂⠴⠂⠂⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="CVk"><span class="type">Hint</span>:<p id="UaM">(a) <nemeth class="inline">⠼⠒</nemeth>; (c) <nemeth class="inline">⠼⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="JfV">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="rcE">Suppose that a linear code <i class="one-letter">C</i> has a minimum weight of <nemeth class="inline">⠼⠶</nemeth>. What are the error-detection and error-correction capabilities of <i class="one-letter">C</i>?</p>
          </article>
          <article class="exercise exercise-like" id="pne">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="XjN">In each of the following codes, what is the minimum distance for the code? What is the best situation we might hope for in connection with error detection and error correction?</p>
            <ol class="outerlist">
              <li>a. <p id="WGX"><nemeth class="inline">⠷⠼⠴⠂⠂⠴⠂⠴⠾⠷⠴⠂⠂⠂⠴⠴⠾⠷⠂⠂⠴⠂⠂⠂⠾⠷⠂⠂⠴⠴⠴⠴⠾</nemeth></p></li>
              <li>b. <p id="COg"><nemeth class="inline">⠷⠼⠴⠂⠂⠂⠴⠴⠾⠷⠴⠂⠂⠴⠂⠂⠾⠷⠂⠂⠂⠴⠂⠂⠾⠷⠂⠴⠴⠴⠂⠂⠾⠷⠴⠴⠴⠴⠴⠴⠾⠷⠴⠂⠴⠂⠴⠂⠾⠷⠂⠂⠴⠂⠴⠴⠾⠷⠂⠂⠴⠴⠂⠂⠾</nemeth></p></li>
              <li>c. <p id="iVp"><nemeth class="inline">⠷⠼⠴⠴⠴⠴⠴⠴⠾⠷⠴⠂⠂⠂⠴⠴⠾⠷⠂⠂⠴⠂⠴⠂⠾⠷⠂⠂⠴⠴⠴⠂⠾</nemeth></p></li>
              <li>d. <p id="Pcy"><nemeth class="inline">⠷⠼⠴⠂⠂⠴⠂⠂⠴⠾⠷⠴⠂⠂⠂⠂⠴⠴⠾⠷⠂⠂⠂⠴⠴⠴⠴⠾⠷⠂⠂⠂⠂⠂⠂⠂⠾⠷⠂⠴⠴⠂⠴⠴⠂⠾⠷⠂⠴⠴⠴⠴⠂⠂⠾⠷⠴⠴⠴⠂⠂⠂⠂⠾⠷⠴⠴⠴⠴⠴⠴⠴⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="vqL"><span class="type">Hint</span>:<p id="AhV">(a) <nemeth class="inline">⠙⠰⠍⠊⠝⠐⠀⠨⠅⠀⠼⠆</nemeth>; (c) <nemeth class="inline">⠙⠰⠍⠊⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Vun">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="DqW">Compute the null space of each of the following matrices. What type of <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-block codes are the null spaces? Can you find a matrix (not necessarily a standard generator matrix) that generates each code? Are your generator matrices unique?</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠠⠷⠼⠴⠀⠂⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠠⠾</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠀⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠂⠀⠂⠠⠾</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠠⠷⠼⠴⠀⠴⠀⠴⠀⠂⠀⠂⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠀⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠂⠀⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠀⠴⠀⠂⠀⠂⠠⠾</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="HFd"><span class="type">Hint</span>:<ol class="outerlist"><li>a. <p id="TMr"><nemeth class="inline">⠷⠼⠴⠴⠴⠴⠴⠾⠠⠀⠷⠼⠴⠴⠂⠴⠂⠾⠠⠀⠷⠼⠂⠴⠴⠂⠂⠾⠠⠀⠷⠼⠂⠴⠂⠂⠴⠾</nemeth></p><div class="displaymath"><nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾</nemeth></div></li><li>b. <p id="zTA"><nemeth class="inline">⠷⠼⠴⠴⠴⠴⠴⠴⠾⠠⠀⠷⠼⠴⠂⠴⠂⠂⠂⠾⠠⠀⠷⠼⠂⠴⠂⠂⠴⠂⠾⠠⠀⠷⠼⠂⠂⠂⠴⠂⠴⠾</nemeth></p><div class="displaymath"><nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾</nemeth></div></li></ol></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="BBw">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="jyf">Construct a <nemeth class="inline">⠷⠼⠢⠠⠀⠼⠆⠾</nemeth>-block code. Discuss both the error-detection and error-correction capabilities of your code.</p>
          </article>
          <article class="exercise exercise-like" id="hIF">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="PFo">Let <i class="one-letter">C</i> be the code obtained from the null space of the matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠀⠂⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">. Decode the message</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠂⠂⠂⠂⠂⠴⠂⠴⠂⠴⠂⠂⠂⠴⠴⠴⠴⠂⠂</nemeth>
            </div>
            <p data-braille="continuation">if possible.</p>
            <div class="solutions">
              <div class="hint solution-like" id="AaE"><span class="type">Hint</span>:<p id="Mwn">Multiple errors occur in one of the received words.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NPO">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="vMx">Suppose that a <nemeth class="inline">⠼⠂⠴⠴⠴</nemeth>-bit binary message is transmitted. Assume that the probability of a single error is <i class="one-letter">p</i> and that the errors occurring in different bits are independent of one another. If <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠴⠨⠴⠂</nemeth>, what is the probability of more than one error occurring? What is the probability of exactly two errors occurring? Repeat this problem for <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠴⠨⠴⠴⠴⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="tWX">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="bTG">Which matrices are canonical parity-check matrices? For those matrices that are canonical parity-check matrices, what are the corresponding standard generator matrices? What are the error-detection and error-correction capabilities of the code generated by each of these matrices?</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠂⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠴⠀⠂⠠⠾</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠠⠷⠼⠴⠀⠂⠀⠂⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠠⠾</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠂⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠠⠷⠼⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠠⠾</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="swf"><span class="type">Hint</span>:<p id="sDw">(a) A canonical parity-check matrix with standard generator matrix</p><div class="displaymath"><nemeth>⠠⠛⠀⠨⠅⠀⠼⠂⠀⠂⠀⠴⠀⠴⠀⠂</nemeth></div><p data-braille="continuation">.</p><p id="YKF">(c) A canonical parity-check matrix with standard generator matrix</p><div class="displaymath"><nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="aeg">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="IaP">List all possible syndromes for the codes generated by each of the matrices in Exercise 8.6.11.</p>
            <div class="solutions">
              <div class="hint solution-like" id="EKx"><span class="type">Hint</span>:<p id="ERO">(a) All possible syndromes occur.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Glp">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="ohY">Let</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠀⠂⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠴⠀⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">. Compute the syndrome caused by each of the following transmission errors.</p>
            <ol class="outerlist">
              <li>a. <p id="BIN">An error in the first bit.</p></li>
              <li>b. <p id="hPW">An error in the third bit.</p></li>
              <li>c. <p id="NXf">An error in the last bit.</p></li>
              <li>d. <p id="ueo">Errors in the third and fourth bits.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="msy">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="Uph">Let <i class="one-letter">C</i> be the group code in <nemeth class="inline">⠸⠠⠵⠆⠘⠒</nemeth> defined by the codewords <nemeth class="inline">⠷⠼⠴⠴⠴⠾</nemeth> and <nemeth class="inline">⠷⠼⠂⠂⠂⠾</nemeth>. Compute the cosets of <i class="one-letter">C</i> in <nemeth class="inline">⠸⠠⠵⠆⠘⠒</nemeth>. Why was there no need to specify right or left cosets? Give the single transmission error, if any, to which each coset corresponds.</p>
          </article>
          <article class="exercise exercise-like" id="SzH">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="Awq">For each of the following matrices, find the cosets of the corresponding code <i class="one-letter">C</i>. Give a decoding table for each code if possible.</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠠⠷⠼⠴⠀⠂⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠠⠷⠼⠴⠀⠴⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠀⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠂⠀⠂⠠⠾</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠀⠴⠀⠂⠀⠂⠀⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠀⠂⠀⠴⠀⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠂⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠀⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="dnh"><span class="type">Hint</span>:<p id="kYX">(a) <i class="one-letter">C</i>, <nemeth class="inline">⠷⠼⠂⠴⠴⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠂⠴⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠴⠂⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠴⠴⠂⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠂⠂⠴⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠂⠴⠂⠴⠾⠬⠠⠉</nemeth>. A decoding table does not exist for <i class="one-letter">C</i> since this is only a single error-detecting code.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="yGQ">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="gDz">Let <nemeth class="inline">⠸⠭</nemeth>, <nemeth class="inline">⠸⠽</nemeth>, and <nemeth class="inline">⠸⠵</nemeth> be binary <i class="one-letter">n</i>-tuples. Prove each of the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="XqR"><nemeth class="inline">⠺⠷⠸⠭⠾⠀⠨⠅⠀⠙⠷⠸⠭⠠⠀⠼⠴⠾</nemeth></p></li>
              <li>b. <p id="Dya"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠙⠷⠸⠭⠬⠸⠵⠠⠀⠸⠽⠬⠸⠵⠾</nemeth></p></li>
              <li>c. <p id="jFj"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠺⠷⠸⠭⠤⠸⠽⠾</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="eNZ">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="MKI">A <dfn class="terminology">metric</dfn> on a set <i class="one-letter">X</i> is a map <nemeth class="inline">⠙⠒⠀⠠⠭⠈⠡⠠⠭⠀⠫⠕⠀⠸⠠⠗</nemeth> satisfying the following conditions.</p>
            <ol class="outerlist">
              <li>a. <p id="vTB"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠂⠱⠀⠼⠴</nemeth> for all <nemeth class="inline">⠸⠭⠠⠀⠸⠽⠀⠈⠑⠀⠠⠭</nemeth>;</p></li>
              <li>b. <p id="caK"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠼⠴</nemeth> exactly when <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠸⠽</nemeth>;</p></li>
              <li>c. <p id="IhT"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠨⠅⠀⠙⠷⠸⠽⠠⠀⠸⠭⠾</nemeth>;</p></li>
              <li>d. <p id="opc"><nemeth class="inline">⠙⠷⠸⠭⠠⠀⠸⠽⠾⠀⠐⠅⠱⠀⠙⠷⠸⠭⠠⠀⠸⠵⠾⠬⠙⠷⠸⠵⠠⠀⠸⠽⠾</nemeth>.</p></li>
            </ol>
            <p data-braille="continuation">In other words, a metric is simply a generalization of the notion of distance. Prove that Hamming distance is a metric on <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth>. Decoding a message actually reduces to deciding which is the closest codeword in terms of distance.</p>
          </article>
          <article class="exercise exercise-like" id="KVi">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="sRR">Let <i class="one-letter">C</i> be a linear code. Show that either the <i class="one-letter">i</i>th coordinates in the codewords of <i class="one-letter">C</i> are all zeros or exactly half of them are zeros.</p>
          </article>
          <article class="exercise exercise-like" id="rcr">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="YZa">Let <i class="one-letter">C</i> be a linear code. Show that either every codeword has even weight or exactly half of the codewords have even weight.</p>
            <div class="solutions">
              <div class="hint solution-like" id="hXa"><span class="type">Hint</span>:<p id="Rgg">Let <nemeth class="inline">⠸⠭⠀⠈⠑⠀⠠⠉</nemeth> have odd weight and define a map from the set of odd codewords to the set of even codewords by <nemeth class="inline">⠸⠽⠀⠫⠳⠒⠒⠕⠀⠸⠭⠬⠸⠽</nemeth>. Show that this map is a bijection.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="XjA">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="Fgj">Show that the codewords of even weight in a linear code <i class="one-letter">C</i> are also a linear code.</p>
          </article>
          <article class="exercise exercise-like" id="DqJ">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="lns">If we are to use an error-correcting linear code to transmit the 128 <abbr class="acronym">ASCII</abbr> characters, what size matrix must be used? What size matrix must be used to transmit the extended <abbr class="acronym">ASCII</abbr> character set of 256 characters? What if we require only error detection in both cases?</p>
          </article>
          <article class="exercise exercise-like" id="jxS">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="RuB">Find the canonical parity-check matrix that gives the even parity check bit code with three information positions. What is the matrix for seven information positions? What are the corresponding standard generator matrices?</p>
          </article>
          <article class="exercise exercise-like" id="PFb">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="xBK">How many check positions are needed for a single error-correcting code with 20 information positions? With 32 information positions?</p>
            <div class="solutions">
              <div class="hint solution-like" id="mGT"><span class="type">Hint</span>:<p id="xnp">For <nemeth class="inline">⠼⠆⠴</nemeth> information positions, at least 6 check bits are needed to ensure an error-correcting code.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="vMk">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="dIT">Let <nemeth class="inline">⠸⠑⠰⠊</nemeth> be the binary <i class="one-letter">n</i>-tuple with a <nemeth class="inline">⠼⠂</nemeth> in the <i class="one-letter">i</i>th coordinate and <nemeth class="inline">⠼⠴</nemeth>'s elsewhere and suppose that <nemeth class="inline">⠠⠓⠀⠈⠑⠀⠸⠠⠍⠰⠍⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth>. Show that <nemeth class="inline">⠠⠓⠸⠑⠰⠊</nemeth> is the <i class="one-letter">i</i>th column of the matrix <i class="one-letter">H</i>.</p>
          </article>
          <article class="exercise exercise-like" id="bTt">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="JQc">Let <i class="one-letter">C</i> be an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-linear code. Define the <dfn class="terminology">dual</dfn> or <dfn class="terminology">orthogonal code</dfn> of <i class="one-letter">C</i>  to be</p>
            <div class="displaymath">
              <nemeth>⠠⠉⠘⠀⠫⠏⠀⠐⠀⠨⠅⠀⠨⠷⠸⠭⠀⠈⠑⠀⠸⠠⠵⠆⠘⠝⠐⠒⠀⠸⠭⠡⠸⠽⠀⠨⠅⠀⠼⠴⠋⠕⠗⠀⠁⠇⠇⠸⠽⠀⠈⠑⠀⠠⠉⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <ol class="outerlist">
              <li>a. <p id="Uwl">Find the dual code of the linear code <i class="one-letter">C</i> where <i class="one-letter">C</i> is given by the matrix</p><div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾</nemeth></div><p data-braille="continuation">.</p></li>
              <li>b. <p id="ADu">Show that <nemeth class="inline">⠠⠉⠘⠀⠫⠏⠀</nemeth> is an <nemeth class="inline">⠷⠝⠠⠀⠝⠤⠅⠾</nemeth>-linear code.</p></li>
              <li>c. <p id="gKD">Find the standard generator and parity-check matrices of <i class="one-letter">C</i> and <nemeth class="inline">⠠⠉⠘⠀⠫⠏⠀</nemeth>. What happens in general? Prove your conjecture.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="IaC">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="pXl">Let <i class="one-letter">H</i> be an <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrix over <nemeth class="inline">⠸⠠⠵⠆</nemeth>, where the <i class="one-letter">i</i>th column is the number <i class="one-letter">i</i> written in binary with <i class="one-letter">m</i> bits. The null space of such a matrix is called a <dfn class="terminology">Hamming code</dfn>.</p>
            <ol class="outerlist">
              <li>a. <p id="Fnn">Show  that the matrix</p><div class="displaymath"><nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠴⠀⠴⠀⠂⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠴⠀⠂⠀⠴⠠⠾</nemeth></div><p data-braille="continuation">generates a Hamming code. What are the error-correcting properties of a Hamming code?</p></li>
              <li>b. <p id="luw">The column corresponding to the syndrome also marks the bit that was in error; that is, the <i class="one-letter">i</i>th column of the matrix is <i class="one-letter">i</i> written as a binary number, and the syndrome immediately tells us which bit is in error. If the received word is <nemeth class="inline">⠷⠼⠂⠴⠂⠴⠂⠂⠾</nemeth>, compute the syndrome. In which bit did the error occur in this case, and what codeword was originally transmitted?</p></li>
              <li>c. <p id="RBF">Give a binary matrix <i class="one-letter">H</i> for the Hamming code with six information positions and four check positions. What are the check positions and what are the information positions? Encode the messages <nemeth class="inline">⠷⠼⠂⠴⠂⠂⠴⠂⠾</nemeth> and <nemeth class="inline">⠷⠼⠴⠴⠂⠴⠴⠂⠾</nemeth>. Decode the received words <nemeth class="inline">⠷⠼⠴⠴⠂⠴⠴⠴⠴⠂⠴⠂⠾</nemeth> and <nemeth class="inline">⠷⠼⠴⠴⠴⠴⠂⠴⠂⠂⠴⠴⠾</nemeth>. What are the possible syndromes for this code?</p></li>
              <li>d. <p id="xIO">What is the number of check bits and the number of information bits in an <nemeth class="inline">⠷⠍⠠⠀⠝⠾</nemeth>-block Hamming code? Give both an upper and a lower bound on the number of information bits in terms of the number of check bits. Hamming codes having the maximum possible number of information bits with <i class="one-letter">k</i> check bits are called <dfn class="terminology">perfect</dfn>. Every possible syndrome except <nemeth class="inline">⠼⠴</nemeth> occurs as a column. If the number of information bits is less than the maximum, then the code is called <dfn class="terminology">shortened</dfn>. In this case, give an example showing that some syndromes can represent multiple errors.</p></li>
            </ol>
          </article>
        </section>
        <section class="exercises" id="tnd">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">8.7</span> <span class="title">Programming Exercises</span></div>
          <article class="exercise exercise-like" id="ohL">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Weu">Write a program to implement a <nemeth class="inline">⠷⠼⠂⠖⠠⠀⠼⠂⠆⠾</nemeth>-linear code. Your program should be able to encode and decode messages using coset decoding. Once your program is written, write a program to simulate a binary symmetric channel with transmission noise. Compare the results of your simulation with the theoretically predicted error probability.</p>
          </article>
        </section>
        <section class="references" id="GJf">
          <div class="none"><span class="type">References</span> <span class="codenumber">8.8</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="mQo"><div class="bibitem">[1]</div>  <div class="bibentry"> Blake, I. F. “Codes and Designs,” <i>Mathematics Magazine</i> <b>52</b> (1979), 81–95.</div></article>
          <article class="bib" id="SXx"><div class="bibitem">[2]</div>  <div class="bibentry"> Hill, R. <i>A First Course in Coding Theory</i>. Oxford University Press, Oxford, 1990.</div></article>
          <article class="bib" id="zeG"><div class="bibitem">[3]</div>  <div class="bibentry"> Levinson, N. “Coding Theory: A Counterexample to G. H. Hardy's Conception of Applied Mathematics,” <i>American Mathematical Monthly</i> <b>77</b> (1970), 249–58.</div></article>
          <article class="bib" id="flP"><div class="bibitem">[4]</div>  <div class="bibentry"> Lidl, R. and Pilz, G. <i>Applied Abstract Algebra</i>. 2nd ed. Springer, New York, 1998.</div></article>
          <article class="bib" id="LsY"><div class="bibitem">[5]</div>  <div class="bibentry"> MacWilliams, F. J. and Sloane, N. J. A. <i>The Theory of Error-Correcting Codes</i>. North-Holland Mathematical Library, 16, Elsevier, Amsterdam, 1983.</div></article>
          <article class="bib" id="rAh"><div class="bibitem">[6]</div>  <div class="bibentry"> Roman, S. <i>Coding and Information Theory</i>. Springer-Verlag, New York, 1992.</div></article>
          <article class="bib" id="XHq"><div class="bibitem">[7]</div>  <div class="bibentry"> Shannon, C. E. “A Mathematical Theory of Communication,” <i>Bell System Technical Journal</i> <b>27</b> (1948), 379–423, 623–56.</div></article>
          <article class="bib" id="DOz"><div class="bibitem">[8]</div>  <div class="bibentry"> Thompson, T. M. <i>From Error-Correcting Codes through Sphere Packing to Simple Groups</i>. Carus Monograph Series, No. 21. Mathematical Association of America, Washington, DC, 1983.</div></article>
          <article class="bib" id="jVI"><div class="bibitem">[9]</div>  <div class="bibentry"> van Lint, J. H. <i>Introduction to Coding Theory</i>. Springer, New York, 1999.</div></article>
        </section>
        <section class="section" id="Klo">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">8.9</span> <span class="title">Sage</span></div>
          <section class="introduction" id="QoV">
            <p id="msL">Sage has a full suite of linear codes and a variety of methods that may be used to investigate them.</p>
          </section>
          <section class="subsection" id="UKt">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">8.9.1</span> <span class="title">Constructing Linear Codes</span></div>
            <p id="ylE">The <code class="code-inline tex2jax_ignore">codes</code> object can be used to get a concise listing of the available implemented codes. Type <code class="code-inline tex2jax_ignore">codes.</code> and press the <code class="code-inline tex2jax_ignore">Tab</code> key and most interfaces to Sage will give you a list. You can then use a question mark at the end of a method name to learn about the various parameters.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">codes.
</div>
            </article>
            <p id="esN">We will use the classic binary Hamming <nemeth class="inline">⠷⠼⠶⠠⠀⠼⠲⠾</nemeth> code as an illustration.  “Binary” means we have vectors with just 0's and 1's, the <nemeth class="inline">⠼⠶</nemeth> is the length and means the vectors have <nemeth class="inline">⠼⠶</nemeth> coordinates, and the <nemeth class="inline">⠼⠲</nemeth> is the dimension, meaning this code has <nemeth class="inline">⠼⠆⠘⠲⠐⠀⠨⠅⠀⠼⠂⠖</nemeth> vectors comprising the code. The documentation assumes we know a few things from later in the course. We use <code class="code-inline tex2jax_ignore">GF(2)</code> to specify that our code is binary — this will make more sense at the end of the course. A second parameter is <code class="code-inline tex2jax_ignore">r</code> and we can see from the formulas in the documenation that setting <code class="code-inline tex2jax_ignore">r=3</code> will give length <nemeth class="inline">⠼⠶</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = codes.HammingCode(GF(2), 3); H
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[7, 4] Hamming Code over GF(2)
</div>
            </article>
          </section>
          <section class="subsection" id="ARC">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">8.9.2</span> <span class="title">Properties of Linear Codes</span></div>
            <p id="KzW">We can examine the Hamming code we just built. First the dimension.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.dimension()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4
</div>
            </article>
            <p id="qHf">The code is small enough that we can list all the codewords.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(0, 0, 0, 0, 0, 0, 0), (1, 0, 0, 0, 0, 1, 1), (0, 1, 0, 0, 1, 0, 1),
 (1, 1, 0, 0, 1, 1, 0), (0, 0, 1, 0, 1, 1, 0), (1, 0, 1, 0, 1, 0, 1),
 (0, 1, 1, 0, 0, 1, 1), (1, 1, 1, 0, 0, 0, 0), (0, 0, 0, 1, 1, 1, 1),
 (1, 0, 0, 1, 1, 0, 0), (0, 1, 0, 1, 0, 1, 0), (1, 1, 0, 1, 0, 0, 1),
 (0, 0, 1, 1, 0, 0, 1), (1, 0, 1, 1, 0, 1, 0), (0, 1, 1, 1, 1, 0, 0),
 (1, 1, 1, 1, 1, 1, 1)]
</div>
            </article>
            <p id="WOo">The minimum distance is perhaps one of the most important properties. Hamming codes always have minimum distance <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠒</nemeth>, so they are always single error-correcting.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.minimum_distance()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <p id="CVx">We know that the parity-check matrix and the generator matrix are useful for the construction, description and analysis of linear codes. The Sage method names are just a bit cryptic. Sage has extensive routines for analyzing matrices with elements from different fields, so we perform much of the subsequent analysis of these matrices within Sage.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C = H.parity_check_matrix(); C
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1 0 1 0 1 0 1]
[0 1 1 0 0 1 1]
[0 0 0 1 1 1 1]
</div>
            </article>
            <p id="jcG">The generator matrix here in the text has <em class="emphasis">columns</em> that are codewords, and linear combinations of the columns (the column space of the matrix) are codewords. In Sage the generator matrix has <em class="emphasis">rows</em> that are codewords and the row space of the matrix is the code. So here is another place where we need to mentally translate between a choice made in the text and a choice made by the Sage developers.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = H.generator_matrix(); G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1 0 0 0 0 1 1]
[0 1 0 0 1 0 1]
[0 0 1 0 1 1 0]
[0 0 0 1 1 1 1]
</div>
            </article>
            <p id="PjP">Here is a partial test that these two matrices are correct, exercising Lemma 8.3.5. Notice that we need to use the transpose of the generator matrix, for reasons described above.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C*G.transpose() == zero_matrix(3, 4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="vqY">Note that the parity-check may not be canonical and the generator matrix may not be standard. Sage can produce a generator matrix that has a set of columns that forms an identity matrix, though no guarantee is made that these columns are the first columns. (Columns, not rows.) Such a matrix is said to be <dfn class="terminology">systematic</dfn>, and the Sage method is <code class="code-inline tex2jax_ignore">.systematic_generator_matrix()</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.systematic_generator_matrix()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1 0 0 0 0 1 1]
[0 1 0 0 1 0 1]
[0 0 1 0 1 1 0]
[0 0 0 1 1 1 1]
</div>
            </article>
          </section>
          <section class="subsection" id="gYL">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">8.9.3</span> <span class="title">Decoding with a Linear Code</span></div>
            <p id="byh">We can decode received messages originating from a linear code. Suppose we receive the length <nemeth class="inline">⠼⠶</nemeth> binary vector <code class="code-inline tex2jax_ignore">r</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r = vector(GF(2), [1, 1, 1, 1, 0, 0, 1]); r
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, 1, 1, 1, 0, 0, 1)
</div>
            </article>
            <p id="HFq">We can recognize that one or more errors has occured, since <code class="code-inline tex2jax_ignore">r</code> is not in the code, as the next computation does not yield the zero vector.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C*r
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, 1, 0)
</div>
            </article>
            <p id="nMz">A linear code has a <code class="code-inline tex2jax_ignore">.decode</code> method. You may choose from several different algorithms, while the Hamming codes have their own custom algorithm. The default algorithm is syndrome decoding.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.decode_to_code(r)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, 1, 0, 1, 0, 0, 1)
</div>
            </article>
            <p id="TTI">So if we are willing to assume that only one error occured (which we might, if the probability of an indivual entry of the vector being in error is very low), then we see that an error occured in the third position.</p>
            <p id="AaR">Remember that it could happen that there was more than just one error. For example, suppose the message was the same as before and errors occurred in the third, fifth and sixth locations.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">message = vector(GF(2), [1, 1, 0, 1, 0, 0, 1])
errors = vector(GF(2), [0, 0, 1, 0, 1, 1, 0])
received = message + errors
received
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, 1, 1, 1, 1, 1, 1)
</div>
            </article>
            <p id="gia">It then appears that we have received a codeword, so we assume no errors at all, and decode incorrectly.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.decode_to_code(received) == message
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.decode_to_code(received) == received
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="Zum">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">8.10</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="UoU">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ClD">Create the (binary) Golay code with the <code class="code-inline tex2jax_ignore">codes.GolayCode()</code> constructor. Read the documentation to be sure you build the binary version (not ternary), and do not build the extended version (which is the default).</p>
            <ol class="outerlist">
              <li>a. <p id="CsH">Use Sage methods to compute the length, dimension and minimum distance of the code.</p></li>
              <li>b. <p id="izQ">How many errors can this code detect? How many can it correct?</p></li>
              <li>c. <p id="OGZ">Find a nonzero codeword and introduce three errors by adding a vector with three 1's (your choice) to create a received message. Show that the message is decoded properly.</p></li>
              <li>d. <p id="uOi">Recycle your choices from the previous part, but now add one more error. Does the new received message get decoded properly?</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Awd">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="isM">One technique for improving the characteristics of a code is to add an overall parity-check bit, much like the lone parity-check bit of the <abbr class="acronym">ASCII</abbr> code described in Example 8.1.3. Such codes are referred to as the <dfn class="terminology">extended</dfn> version of the original.</p>
            <ol class="outerlist">
              <li>a. <p id="aVr">Construct the (binary) Golay code and obtain the parity-check matrix. Use Sage commands to enlarge this matrix to create a new parity check matrix that has an additional overall parity-check bit. You may find the matrix methods <code class="code-inline tex2jax_ignore">.augment()</code> and <code class="code-inline tex2jax_ignore">.stack()</code> useful, as well as the constructors <code class="code-inline tex2jax_ignore">zero_vector()</code> and <code class="code-inline tex2jax_ignore">ones_matrix()</code>(remembering that we specify the binary entries as being from the field <code class="code-inline tex2jax_ignore">GF(2)</code>.)</p><p id="HcA">Create the extended code by supplying your enlarged parity-check matrix to the <code class="code-inline tex2jax_ignore">codes.from_parity_check_matrix()</code> constructor and compute the length, dimension and minimum distance of the extended code.</p></li>
              <li>b. <p id="njJ">How are the properties of this new code better? At what cost?</p></li>
              <li>c. <p id="TqS">Now create the extended (binary) Golay code with the Sage constructor <code class="code-inline tex2jax_ignore">codes.GolayCode()</code> and the correct keyword to obtain the extended version. With luck, the sorted lists of your codewords and Sage's codewords will be equal. If not, the linear code method <code class="code-inline tex2jax_ignore">.is_permutation_equivalent()</code> should return <code class="code-inline tex2jax_ignore">True</code> to indicate that your code and Sage's are just rearrangements of each other.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="gDm">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="OzV"><em class="emphasis">Note:</em> This problem is on holiday (as of Sage 6.7), while some buggy Sage code for the minimum distance of a Hamming code gets sorted out. The <code class="code-inline tex2jax_ignore">r = 2</code> case produces an error message and for <code class="code-inline tex2jax_ignore">r &gt; 5</code> the computation of the minimum distance has become intolerably slow. So it is a bit harder to make a reasonable conjecture from just <nemeth class="inline">⠼⠒</nemeth> cases.</p>
            <p id="uHe">The dual of an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth> block code is formed as all the set of all binary vectors which are orthogonal to every vector of the original code. Exercise 8.6.25 describes this construction and asks about some of its properties.</p>
            <p id="aOn">You can construct the dual of a code in Sage with the <code class="code-inline tex2jax_ignore">.dual_code()</code> method. Construct the binary Hamming codes, and their duals, with the parameter <code class="code-inline tex2jax_ignore">r</code> ranging from <code class="code-inline tex2jax_ignore">2</code> to <code class="code-inline tex2jax_ignore">5</code>, inclusive. Build a table with six columns (perhaps employing the <code class="code-inline tex2jax_ignore">html.table()</code> function) that lists <i class="one-letter">r</i>, the length of the codes, the dimensions of the original and the dual, and the minimum distances of the orginal and the dual.</p>
            <p id="GVw">Conjecture formulas for the dimension and minimum distance of the dual of the Hamming code as expressions in the parameter <i class="one-letter">r</i>.</p>
          </article>
          <article class="exercise exercise-like" id="MKv">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="ncF">A code with minimum distance <i class="one-letter">d</i> is called <dfn class="terminology">perfect</dfn> if every possible vector is within Hamming distance <nemeth class="inline">⠷⠙⠤⠂⠾⠸⠌⠆</nemeth> of some codeword. If we expand our notion of geometry to account for the Hamming distance as the metric, then we can speak of a sphere of radius <i class="one-letter">r</i> around a vector (or codeword. For a code of length <i class="one-letter">n</i>, such a sphere will contain</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠬⠝⠀⠂⠬⠝⠀⠆⠬⠄⠄⠄⠬⠝⠀⠗</nemeth>
            </div>
            <p data-braille="continuation">vectors within in it. For a perfect code, the spheres of radius <i class="one-letter">d</i> centered at the codewords of the code will exactly partition the entire set of all possible vectors. (This is the connection that means that coding theory meshes with sphere packing problems.)</p>
            <p id="TjO">A consequence of a code of dimension <i class="one-letter">k</i> being perfect is that</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠘⠅⠐⠷⠝⠀⠴⠬⠝⠀⠂⠬⠝⠀⠆⠬⠄⠄⠄⠬⠝⠀⠹⠙⠤⠂⠌⠆⠼⠾⠀⠨⠅⠀⠼⠆⠘⠝</nemeth>
            </div>
            <p data-braille="continuation">Conversely, if a code has minimum distance <i class="one-letter">d</i> and the condition above is true, then the code is perfect.</p>
            <p id="zqX">Write a Python function, named <code class="code-inline tex2jax_ignore">is_perfect()</code> which accepts a linear code as input and returns <code class="code-inline tex2jax_ignore">True</code> or <code class="code-inline tex2jax_ignore">False</code>. Demonstrate your function by checking that the (binary) Golay code is perfect, and then use a loop to verify that the (binary) Hamming codes are perfect for all lengths below <nemeth class="inline">⠼⠒⠆</nemeth>.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="OUu">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">9</span> <span class="title">Isomorphisms</span></div>
        <section class="introduction" id="kQT">
          <p id="qrX">Many groups may appear to be different at first glance, but can be shown to be the same by a simple renaming of the group elements. For example, <nemeth class="inline">⠸⠠⠵⠲</nemeth> and the subgroup of the circle group <nemeth class="inline">⠸⠠⠞</nemeth> generated by <i class="one-letter">i</i> can be shown to be the same by demonstrating a one-to-one correspondence between the elements of the two groups and between the group operations. In such a case we say that the groups are isomorphic.</p>
        </section>
        <section class="section" id="Evp">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">9.1</span> <span class="title">Definition and Examples</span></div>
          <section class="introduction" id="QYc">
            <p id="Wzg">Two groups <nemeth class="inline">⠷⠠⠛⠠⠀⠡⠾</nemeth> and <nemeth class="inline">⠷⠠⠓⠠⠀⠘⠨⠡⠾</nemeth> are <dfn class="terminology">isomorphic</dfn>  if there exists a one-to-one and onto map <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> such that the group operation is preserved;  that is,</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠡⠃⠾⠀⠨⠅⠀⠋⠷⠁⠾⠘⠨⠡⠋⠷⠃⠾</nemeth>
            </div>
            <p data-braille="continuation">for all <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">G</i>. If <i class="one-letter">G</i> is isomorphic to <i class="one-letter">H</i>, we write <nemeth class="inline">⠠⠛⠀⠈⠱⠈⠱⠀⠠⠓</nemeth>.  The map <nemeth class="inline">⠨⠋</nemeth> is called an <dfn class="terminology">isomorphism</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="gha">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Qaa">To show that <nemeth class="inline">⠸⠠⠵⠲⠀⠈⠱⠈⠱⠀⠨⠨⠷⠊⠨⠨⠾</nemeth>, define a map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠲⠀⠫⠕⠀⠨⠨⠷⠊⠨⠨⠾</nemeth> by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠊⠘⠝</nemeth>. We must show that <nemeth class="inline">⠨⠋</nemeth> is bijective and preserves the group operation. The map <nemeth class="inline">⠨⠋</nemeth> is one-to-one and onto because</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠼⠴⠾⠀⠀⠨⠅⠀⠼⠂⠀⠋⠷⠼⠂⠾⠀⠀⠨⠅⠀⠊⠀⠋⠷⠼⠆⠾⠀⠀⠨⠅⠀⠤⠼⠂⠀⠋⠷⠼⠒⠾⠀⠀⠨⠅⠀⠤⠊</nemeth>
              </div>
              <p data-braille="continuation">. Since</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠍⠬⠝⠾⠀⠨⠅⠀⠊⠘⠍⠬⠝⠐⠀⠨⠅⠀⠊⠘⠍⠐⠊⠘⠝⠐⠀⠨⠅⠀⠋⠷⠍⠾⠋⠷⠝⠾</nemeth>
              </div>
              <p data-braille="continuation">, the group operation is preserved.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Moj">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="whj">We can define an isomorphism <nemeth class="inline">⠨⠋</nemeth> from the additive group of real numbers <nemeth class="inline">⠷⠸⠠⠗⠠⠀⠬⠾</nemeth> to the multiplicative group of positive real numbers <nemeth class="inline">⠷⠸⠠⠗⠘⠬⠐⠠⠀⠡⠾</nemeth> with the exponential map; that is,</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠬⠽⠾⠀⠨⠅⠀⠑⠘⠭⠬⠽⠐⠀⠨⠅⠀⠑⠘⠭⠐⠑⠘⠽⠐⠀⠨⠅⠀⠋⠷⠭⠾⠋⠷⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">. Of course, we must still show that <nemeth class="inline">⠨⠋</nemeth> is one-to-one and onto, but this can be determined using calculus.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="svs">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="cos">The integers are isomorphic to the subgroup of <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> consisting of elements of the form <nemeth class="inline">⠼⠆⠘⠝</nemeth>. Define a map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠟⠘⠈⠼</nemeth> by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠼⠆⠘⠝</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠍⠬⠝⠾⠀⠨⠅⠀⠼⠆⠘⠍⠬⠝⠐⠀⠨⠅⠀⠼⠆⠘⠍⠐⠆⠘⠝⠐⠀⠨⠅⠀⠋⠷⠍⠾⠋⠷⠝⠾</nemeth>
              </div>
              <p data-braille="continuation">. By definition the map <nemeth class="inline">⠨⠋</nemeth> is onto the subset <nemeth class="inline">⠨⠷⠼⠆⠘⠝⠐⠒⠀⠝⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth> of  <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>. To show that the map is injective, assume that <nemeth class="inline">⠍⠀⠌⠨⠅⠀⠝</nemeth>. If we can show that <nemeth class="inline">⠋⠷⠍⠾⠀⠌⠨⠅⠀⠋⠷⠝⠾</nemeth>, then we are done. Suppose that <nemeth class="inline">⠍⠀⠨⠂⠀⠝</nemeth> and assume that <nemeth class="inline">⠋⠷⠍⠾⠀⠨⠅⠀⠋⠷⠝⠾</nemeth>. Then <nemeth class="inline">⠼⠆⠘⠍⠐⠀⠨⠅⠀⠼⠆⠘⠝</nemeth> or <nemeth class="inline">⠼⠆⠘⠍⠤⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>, which is impossible since <nemeth class="inline">⠍⠤⠝⠀⠨⠂⠀⠼⠴</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="YCB">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="IvB">The groups <nemeth class="inline">⠸⠠⠵⠦</nemeth> and <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth> cannot be isomorphic since they have different orders; however, it is true that <nemeth class="inline">⠠⠥⠷⠼⠦⠾⠀⠈⠱⠈⠱⠀⠠⠥⠷⠼⠂⠆⠾</nemeth>. We know that</p>
              <div class="displaymath">
                <nemeth>⠠⠥⠷⠼⠦⠾⠀⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠢⠠⠀⠼⠶⠨⠾⠀⠠⠥⠷⠼⠂⠆⠾⠀⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠢⠠⠀⠼⠶⠠⠀⠼⠂⠂⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. An isomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠥⠷⠼⠦⠾⠀⠫⠕⠀⠠⠥⠷⠼⠂⠆⠾</nemeth> is then given by</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠀⠀⠫⠳⠒⠒⠕⠀⠼⠂⠀⠒⠀⠀⠫⠳⠒⠒⠕⠀⠼⠢⠀⠢⠀⠀⠫⠳⠒⠒⠕⠀⠼⠶⠀⠶⠀⠀⠫⠳⠒⠒⠕⠀⠼⠂⠂</nemeth>
              </div>
              <p data-braille="continuation">. The map <nemeth class="inline">⠨⠋</nemeth> is not the only possible isomorphism between these two groups. We could define another isomorphism <nemeth class="inline">⠨⠓</nemeth> by <nemeth class="inline">⠓⠷⠼⠂⠾⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠓⠷⠼⠒⠾⠀⠨⠅⠀⠼⠂⠂</nemeth>, <nemeth class="inline">⠓⠷⠼⠢⠾⠀⠨⠅⠀⠼⠢</nemeth>, <nemeth class="inline">⠓⠷⠼⠶⠾⠀⠨⠅⠀⠼⠶</nemeth>. In fact, both of these groups are isomorphic to <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth> (see Example 3.3.5 in Chapter 3).</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="EJK">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="oCK">Even though <nemeth class="inline">⠠⠎⠒</nemeth> and <nemeth class="inline">⠸⠠⠵⠖</nemeth> possess the same number of elements, we would suspect that they are not isomorphic, because <nemeth class="inline">⠸⠠⠵⠖</nemeth> is abelian and <nemeth class="inline">⠠⠎⠒</nemeth> is nonabelian. To demonstrate that this is indeed the case, suppose that <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠖⠀⠫⠕⠀⠠⠎⠒</nemeth> is an isomorphism. Let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠎⠒</nemeth> be two elements such that <nemeth class="inline">⠁⠃⠀⠌⠨⠅⠀⠃⠁</nemeth>. Since <nemeth class="inline">⠨⠋</nemeth> is an isomorphism, there exist elements <i class="one-letter">m</i> and <i class="one-letter">n</i> in <nemeth class="inline">⠸⠠⠵⠖</nemeth> such that</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠍⠾⠀⠨⠅⠀⠁⠁⠝⠙⠋⠷⠝⠾⠀⠨⠅⠀⠃</nemeth>
              </div>
              <p data-braille="continuation">. However,</p>
              <div class="displaymath">
                <nemeth>⠁⠃⠀⠨⠅⠀⠋⠷⠍⠾⠋⠷⠝⠾⠀⠨⠅⠀⠋⠷⠍⠬⠝⠾⠀⠨⠅⠀⠋⠷⠝⠬⠍⠾⠀⠨⠅⠀⠋⠷⠝⠾⠋⠷⠍⠾⠀⠨⠅⠀⠃⠁</nemeth>
              </div>
              <p data-braille="continuation">, which contradicts the fact that <i class="one-letter">a</i> and <i class="one-letter">b</i> do not commute.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="bxh">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="idE">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> be an isomorphism of two groups. Then the following statements are true.</p>
              <ol class="outerlist">
                <li>1. <p id="UQX"><nemeth class="inline">⠨⠋⠘⠤⠼⠂⠐⠒⠀⠠⠓⠀⠫⠕⠀⠠⠛</nemeth> is an isomorphism.</p></li>
                <li>2. <p id="AYg"><nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠓⠳</nemeth>.</p></li>
                <li>3. <p id="hfp">If <i class="one-letter">G</i> is abelian, then <i class="one-letter">H</i> is abelian.</p></li>
                <li>4. <p id="Nmy">If <i class="one-letter">G</i> is cyclic, then <i class="one-letter">H</i> is cyclic.</p></li>
                <li>5. <p id="ttH">If <i class="one-letter">G</i> has a subgroup of order <i class="one-letter">n</i>, then <i class="one-letter">H</i> has a subgroup of order <i class="one-letter">n</i>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="JtD">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="nSQ">Assertions (1) and (2) follow from the fact that <nemeth class="inline">⠨⠋</nemeth> is a bijection. We will prove (3) here and leave the remainder of the theorem to be proved in the exercises.</p>
              <p id="TZZ">(3) Suppose that <nemeth class="inline">⠓⠂</nemeth> and <nemeth class="inline">⠓⠆</nemeth> are elements of <i class="one-letter">H</i>. Since <nemeth class="inline">⠨⠋</nemeth> is onto, there exist elements <nemeth class="inline">⠛⠂⠠⠀⠛⠆⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠋⠷⠛⠂⠾⠀⠨⠅⠀⠓⠂</nemeth> and <nemeth class="inline">⠋⠷⠛⠆⠾⠀⠨⠅⠀⠓⠆</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠓⠂⠓⠆⠀⠨⠅⠀⠋⠷⠛⠂⠾⠋⠷⠛⠆⠾⠀⠨⠅⠀⠋⠷⠛⠂⠛⠆⠾⠀⠨⠅⠀⠋⠷⠛⠆⠛⠂⠾⠀⠨⠅⠀⠋⠷⠛⠆⠾⠋⠷⠛⠂⠾⠀⠨⠅⠀⠓⠆⠓⠂</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="CGp">We are now in a position to characterize all cyclic groups.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="HEq">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="OkN">All cyclic groups of infinite order are isomorphic to <nemeth class="inline">⠸⠠⠵</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="pAM">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Ahi">Let <i class="one-letter">G</i> be a cyclic group with infinite order and suppose that <i class="one-letter">a</i> is a generator of <i class="one-letter">G</i>. Define a map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠨⠋⠒⠀⠝⠀⠫⠳⠒⠒⠕⠀⠁⠘⠝</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠍⠬⠝⠾⠀⠨⠅⠀⠁⠘⠍⠬⠝⠐⠀⠨⠅⠀⠁⠘⠍⠐⠁⠘⠝⠐⠀⠨⠅⠀⠋⠷⠍⠾⠋⠷⠝⠾</nemeth>
              </div>
              <p data-braille="continuation">. To show that <nemeth class="inline">⠨⠋</nemeth> is injective, suppose that <i class="one-letter">m</i> and <i class="one-letter">n</i> are two elements in <nemeth class="inline">⠸⠠⠵</nemeth>, where <nemeth class="inline">⠍⠀⠌⠨⠅⠀⠝</nemeth>. We can assume that <nemeth class="inline">⠍⠀⠨⠂⠀⠝</nemeth>. We must show that <nemeth class="inline">⠁⠘⠍⠐⠀⠌⠨⠅⠀⠁⠘⠝</nemeth>. Let us suppose the contrary; that is, <nemeth class="inline">⠁⠘⠍⠐⠀⠨⠅⠀⠁⠘⠝</nemeth>. In this case <nemeth class="inline">⠁⠘⠍⠤⠝⠐⠀⠨⠅⠀⠑</nemeth>, where <nemeth class="inline">⠍⠤⠝⠀⠨⠂⠀⠼⠴</nemeth>, which contradicts the fact that <i class="one-letter">a</i> has infinite order. Our map is onto since any element in <i class="one-letter">G</i> can be written as <nemeth class="inline">⠁⠘⠝</nemeth> for some integer <i class="one-letter">n</i> and <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠁⠘⠝</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="nLz">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.8</span>
                <span class="period">.</span>
              </h6>
              <p id="urW">If <i class="one-letter">G</i> is a cyclic group of order <i class="one-letter">n</i>, then <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="VHV">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="gor">Let <i class="one-letter">G</i> be a cyclic group of order <i class="one-letter">n</i> generated by <i class="one-letter">a</i> and define a map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠰⠝⠐⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠨⠋⠒⠀⠅⠀⠫⠳⠒⠒⠕⠀⠁⠘⠅</nemeth>, where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠅⠀⠐⠅⠀⠝</nemeth>. The proof that <nemeth class="inline">⠨⠋</nemeth> is an isomorphism is one of the end-of-chapter exercises.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="zZR">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="rxq">If <i class="one-letter">G</i> is a group of order <i class="one-letter">p</i>, where <i class="one-letter">p</i> is a prime number, then <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="GyX">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="MvA">The proof is a direct result of Corollary 6.2.4.</p>
            </article>
            <p id="iNy">The main goal in group theory is to classify all groups; however, it makes sense to consider two groups to be the same if they are isomorphic. We state this result in the following theorem, whose proof is left as an exercise.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="TSI">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="azf">The isomorphism of groups determines an equivalence relation on the class of all groups.</p>
            </article>
            <p id="OUH">Hence, we can modify our goal of classifying all groups to classifying all groups <dfn class="terminology">up to isomorphism</dfn>; that is, we will consider two groups to be the same if they are isomorphic.</p>
          </section>
          <section class="subsection" id="vbD">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">9.1.1</span> <span class="title">Cayley's Theorem</span></div>
            <p id="rLL">Cayley proved that if <i class="one-letter">G</i> is a group, it is isomorphic to a group of permutations on some set; hence, every group is a permutation group. Cayley's Theorem is what we call a representation theorem. The aim of representation theory is to find an isomorphism of some group <i class="one-letter">G</i> that we wish to study into a group that we know a great deal about, such as a group of permutations or matrices.</p>
            <article class="example example-like" data-braille="example-like" id="cXZ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="UJT">Consider the group <nemeth class="inline">⠸⠠⠵⠒</nemeth>. The Cayley table for <nemeth class="inline">⠸⠠⠵⠒</nemeth> is as follows.</p>
              <div class="sidebyside">
                <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
                  <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                    <div class="displaymath">
                      <nemeth>⠬⠀⠴⠀⠂⠀⠆⠀⠴⠀⠴⠀⠂⠀⠆⠀⠂⠀⠂⠀⠆⠀⠴⠀⠆⠀⠆⠀⠴⠀⠂</nemeth>
                    </div>
                  </div>
                </div>
              </div>
              <p id="gYl">The addition table of <nemeth class="inline">⠸⠠⠵⠒</nemeth> suggests that it is the same as the permutation group <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠷⠷⠼⠴⠾⠠⠀⠷⠼⠴⠂⠆⠾⠠⠀⠷⠼⠴⠆⠂⠾⠨⠾</nemeth>. The isomorphism here is</p>
              <div class="displaymath">
                <nemeth>⠼⠴⠀⠀⠫⠳⠒⠒⠕⠀⠠⠷⠼⠴⠀⠂⠀⠆⠠⠾⠀⠠⠷⠴⠀⠂⠀⠆⠠⠾⠀⠨⠅⠀⠷⠼⠴⠾⠀⠂⠀⠀⠫⠳⠒⠒⠕⠀⠠⠷⠼⠴⠀⠂⠀⠆⠠⠾⠀⠠⠷⠂⠀⠆⠀⠴⠠⠾⠀⠨⠅⠀⠷⠼⠴⠂⠆⠾⠀⠆⠀⠀⠫⠳⠒⠒⠕⠀⠠⠷⠼⠴⠀⠂⠀⠆⠠⠾⠀⠠⠷⠆⠀⠴⠀⠂⠠⠾⠀⠨⠅⠀⠷⠼⠴⠆⠂⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="wQQ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.1.12</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Cayley.</span>
              </h6>
              <p id="GGo">Every group is isomorphic to a group of permutations.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="BPe">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="sCJ">Let <i class="one-letter">G</i> be a group. We must find a group of permutations <nemeth class="inline">⠐⠠⠛⠣⠱⠻</nemeth> that is isomorphic to <i class="one-letter">G</i>. For any <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, define a  function <nemeth class="inline">⠨⠇⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠇⠰⠛⠐⠷⠁⠾⠀⠨⠅⠀⠛⠁</nemeth>. We claim that <nemeth class="inline">⠨⠇⠰⠛</nemeth> is a permutation of <i class="one-letter">G</i>. To show that <nemeth class="inline">⠨⠇⠰⠛</nemeth> is one-to-one, suppose that <nemeth class="inline">⠇⠰⠛⠐⠷⠁⠾⠀⠨⠅⠀⠇⠰⠛⠐⠷⠃⠾</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠛⠁⠀⠨⠅⠀⠇⠰⠛⠐⠷⠁⠾⠀⠨⠅⠀⠇⠰⠛⠐⠷⠃⠾⠀⠨⠅⠀⠛⠃</nemeth>
              </div>
              <p data-braille="continuation">. Hence, <nemeth class="inline">⠁⠀⠨⠅⠀⠃</nemeth>. To show that <nemeth class="inline">⠨⠇⠰⠛</nemeth> is onto, we must prove that for each <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>, there is a <i class="one-letter">b</i> such that <nemeth class="inline">⠇⠰⠛⠐⠷⠃⠾⠀⠨⠅⠀⠁</nemeth>. Let <nemeth class="inline">⠃⠀⠨⠅⠀⠛⠘⠤⠼⠂⠐⠁</nemeth>.</p>
              <p id="YJS">Now we are ready to define our group <nemeth class="inline">⠐⠠⠛⠣⠱⠻</nemeth>. Let</p>
              <div class="displaymath">
                <nemeth>⠐⠠⠛⠣⠱⠻⠀⠨⠅⠀⠨⠷⠨⠇⠰⠛⠐⠒⠀⠛⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. We must show that <nemeth class="inline">⠐⠠⠛⠣⠱⠻</nemeth> is a group under composition of functions and find an isomorphism between <i class="one-letter">G</i> and <nemeth class="inline">⠐⠠⠛⠣⠱⠻</nemeth>. We have closure under composition of functions since</p>
              <div class="displaymath">
                <nemeth>⠷⠇⠰⠛⠐⠘⠨⠡⠇⠰⠓⠐⠾⠷⠁⠾⠀⠨⠅⠀⠇⠰⠛⠐⠷⠓⠁⠾⠀⠨⠅⠀⠛⠓⠁⠀⠨⠅⠀⠇⠰⠛⠓⠐⠷⠁⠾</nemeth>
              </div>
              <p data-braille="continuation">. Also,</p>
              <div class="displaymath">
                <nemeth>⠇⠰⠑⠐⠷⠁⠾⠀⠨⠅⠀⠑⠁⠀⠨⠅⠀⠁</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠷⠇⠰⠛⠰⠘⠤⠼⠂⠰⠐⠘⠨⠡⠇⠰⠛⠐⠾⠷⠁⠾⠀⠨⠅⠀⠇⠰⠛⠰⠘⠤⠼⠂⠐⠷⠛⠁⠾⠀⠨⠅⠀⠛⠘⠤⠼⠂⠐⠛⠁⠀⠨⠅⠀⠁⠀⠨⠅⠀⠇⠰⠑⠐⠷⠁⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="ERb">We can define an isomorphism from <i class="one-letter">G</i> to <nemeth class="inline">⠐⠠⠛⠣⠱⠻</nemeth> by <nemeth class="inline">⠨⠋⠒⠀⠛⠀⠫⠳⠒⠒⠕⠀⠨⠇⠰⠛⠐</nemeth>. The group operation is preserved since</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠛⠓⠾⠀⠨⠅⠀⠨⠇⠰⠛⠓⠐⠀⠨⠅⠀⠨⠇⠰⠛⠐⠨⠇⠰⠓⠐⠀⠨⠅⠀⠋⠷⠛⠾⠋⠷⠓⠾</nemeth>
              </div>
              <p data-braille="continuation">. It is also one-to-one, because if <nemeth class="inline">⠋⠷⠛⠾⠷⠁⠾⠀⠨⠅⠀⠋⠷⠓⠾⠷⠁⠾</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠛⠁⠀⠨⠅⠀⠨⠇⠰⠛⠐⠁⠀⠨⠅⠀⠨⠇⠰⠓⠐⠁⠀⠨⠅⠀⠓⠁</nemeth>
              </div>
              <p data-braille="continuation">. Hence, <nemeth class="inline">⠛⠀⠨⠅⠀⠓</nemeth>. That <nemeth class="inline">⠨⠋</nemeth> is onto follows from the fact that <nemeth class="inline">⠋⠷⠛⠾⠀⠨⠅⠀⠨⠇⠰⠛</nemeth> for any <nemeth class="inline">⠨⠇⠰⠛⠐⠀⠈⠑⠀⠐⠠⠛⠣⠱⠻</nemeth>.</p>
            </article>
            <p id="XSU">The isomorphism <nemeth class="inline">⠛⠀⠫⠳⠒⠒⠕⠀⠨⠇⠰⠛</nemeth> is known as the <dfn class="terminology">left regular representation</dfn> of <i class="one-letter">G</i>.</p>
          </section>
          <section class="subsection" id="biM">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">9.1.2</span> <span class="title">Historical Note</span></div>
            <p id="Ead">Arthur Cayley  was born in England in 1821, though he spent much of the first part of his life in Russia, where his father was a merchant. Cayley was educated at Cambridge, where he took the first Smith's Prize in mathematics. A lawyer for much of his adult life, he wrote several papers in his early twenties before entering the legal profession at the age of 25. While practicing law he continued his mathematical research, writing more than 300 papers during this period of his life. These included some of his best work. In 1863 he left law to become a professor at Cambridge. Cayley wrote more than 900 papers in fields such as group theory, geometry, and linear algebra. His legal knowledge was very valuable to Cambridge; he participated in the writing of many of the university's statutes. Cayley was also one of the people responsible for the admission of women to Cambridge.</p>
          </section>
        </section>
        <section class="section" id="kCy">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">9.2</span> <span class="title">Direct Products</span></div>
          <section class="introduction" id="xfl">
            <p id="vbQ">Given two groups <i class="one-letter">G</i> and <i class="one-letter">H</i>, it is possible to construct a new group from the Cartesian product of <i class="one-letter">G</i> and <i class="one-letter">H</i>, <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth>. Conversely, given a large group, it is sometimes possible to decompose the group; that is, a group is sometimes isomorphic to the direct product of two smaller groups. Rather than studying a large group <i class="one-letter">G</i>, it is often easier to study the component groups of <i class="one-letter">G</i>.</p>
          </section>
          <section class="subsection" id="HpV">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">9.2.1</span> <span class="title">External Direct Products</span></div>
            <p id="khm">If <nemeth class="inline">⠷⠠⠛⠠⠀⠡⠾</nemeth> and <nemeth class="inline">⠷⠠⠓⠠⠀⠘⠨⠡⠾</nemeth> are groups, then we can make the Cartesian product of <i class="one-letter">G</i> and <i class="one-letter">H</i> into a new group. As a set, our group is just the ordered pairs <nemeth class="inline">⠷⠛⠠⠀⠓⠾⠀⠈⠑⠀⠠⠛⠈⠡⠠⠓</nemeth> where <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth>. We can define a binary operation on <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth> by</p>
            <div class="displaymath">
              <nemeth>⠷⠛⠂⠠⠀⠓⠂⠾⠷⠛⠆⠠⠀⠓⠆⠾⠀⠨⠅⠀⠷⠛⠂⠡⠛⠆⠠⠀⠓⠂⠘⠨⠡⠓⠆⠾⠆</nemeth>
            </div>
            <p data-braille="continuation">that is, we just multiply elements in the first coordinate as we do in <i class="one-letter">G</i> and elements in the second coordinate as we do in <i class="one-letter">H</i>. We have specified the particular operations <nemeth class="inline">⠡</nemeth> and <nemeth class="inline">⠘⠨⠡</nemeth> in each group here for the sake of clarity; we usually just write <nemeth class="inline">⠷⠛⠂⠠⠀⠓⠂⠾⠷⠛⠆⠠⠀⠓⠆⠾⠀⠨⠅⠀⠷⠛⠂⠛⠆⠠⠀⠓⠂⠓⠆⠾</nemeth>.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="BAJ">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Lqh">Let <i class="one-letter">G</i> and <i class="one-letter">H</i> be groups. The set <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth> is a group under the operation <nemeth class="inline">⠷⠛⠂⠠⠀⠓⠂⠾⠷⠛⠆⠠⠀⠓⠆⠾⠀⠨⠅⠀⠷⠛⠂⠛⠆⠠⠀⠓⠂⠓⠆⠾</nemeth> where <nemeth class="inline">⠛⠂⠠⠀⠛⠆⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="arO">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="kYk">Clearly the binary operation defined above is closed. If <nemeth class="inline">⠑⠰⠠⠛</nemeth> and <nemeth class="inline">⠑⠰⠠⠓</nemeth> are the identities of the groups <i class="one-letter">G</i> and <i class="one-letter">H</i> respectively, then <nemeth class="inline">⠷⠑⠰⠠⠛⠐⠠⠀⠑⠰⠠⠓⠐⠾</nemeth> is the identity of <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth>. The inverse of <nemeth class="inline">⠷⠛⠠⠀⠓⠾⠀⠈⠑⠀⠠⠛⠈⠡⠠⠓</nemeth> is <nemeth class="inline">⠷⠛⠘⠤⠼⠂⠐⠠⠀⠓⠘⠤⠼⠂⠐⠾</nemeth>. The fact that the operation is associative follows directly from the associativity of <i class="one-letter">G</i> and <i class="one-letter">H</i>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="adt">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="Nfu">Let <nemeth class="inline">⠸⠠⠗</nemeth> be the group of real numbers under addition. The Cartesian product of <nemeth class="inline">⠸⠠⠗</nemeth> with itself, <nemeth class="inline">⠸⠠⠗⠈⠡⠸⠠⠗⠀⠨⠅⠀⠸⠠⠗⠘⠆</nemeth>, is also a group, in which the group operation is just addition in each coordinate; that is, <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠬⠷⠉⠠⠀⠙⠾⠀⠨⠅⠀⠷⠁⠬⠉⠠⠀⠃⠬⠙⠾</nemeth>. The identity is <nemeth class="inline">⠷⠼⠴⠠⠀⠼⠴⠾</nemeth> and the inverse of <nemeth class="inline">⠷⠁⠠⠀⠃⠾</nemeth> is <nemeth class="inline">⠷⠤⠁⠠⠀⠤⠃⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="GkC">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="tmD">Consider</p>
              <div class="displaymath">
                <nemeth>⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆⠀⠨⠅⠀⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠠⠀⠷⠼⠴⠠⠀⠼⠂⠾⠠⠀⠷⠼⠂⠠⠀⠼⠴⠾⠠⠀⠷⠼⠂⠠⠀⠼⠂⠾⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Although <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth> and <nemeth class="inline">⠸⠠⠵⠲</nemeth> both contain four elements, they are not isomorphic. Every element <nemeth class="inline">⠷⠁⠠⠀⠃⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth> has order <nemeth class="inline">⠼⠆</nemeth>, since <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠬⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠷⠼⠴⠠⠀⠼⠴⠾</nemeth>; however, <nemeth class="inline">⠸⠠⠵⠲</nemeth> is cyclic.</p>
            </article>
            <p id="Qov">The group <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth> is called the <dfn class="terminology">external direct product</dfn> of  <i class="one-letter">G</i> and <i class="one-letter">H</i>. Notice that there is nothing special about the fact that we have used only two groups to build a new group. The direct product</p>
            <div class="displaymath">
              <nemeth>⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠠⠛⠰⠊⠐⠀⠨⠅⠀⠠⠛⠂⠈⠡⠠⠛⠆⠈⠡⠄⠄⠄⠈⠡⠠⠛⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">of the groups <nemeth class="inline">⠠⠛⠂⠠⠀⠠⠛⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠛⠰⠝⠐</nemeth> is defined in exactly the same manner. If <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠛⠂⠀⠨⠅⠀⠠⠛⠆⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠠⠛⠰⠝</nemeth>, we often write <nemeth class="inline">⠠⠛⠘⠝</nemeth> instead of <nemeth class="inline">⠠⠛⠂⠈⠡⠠⠛⠆⠈⠡⠄⠄⠄⠈⠡⠠⠛⠰⠝</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="mrL">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="ZtM">The group <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth>, considered as a set, is just the set of all binary <i class="one-letter">n</i>-tuples. The group operation is the “exclusive or” of two binary <i class="one-letter">n</i>-tuples. For example,</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠴⠂⠴⠂⠂⠂⠴⠂⠾⠬⠷⠴⠂⠴⠴⠂⠴⠂⠂⠾⠀⠨⠅⠀⠷⠼⠴⠴⠴⠂⠴⠂⠂⠴⠾</nemeth>
              </div>
              <p data-braille="continuation">. This group is important in coding theory, in cryptography, and in many areas of computer science.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="pmr">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="mNx">Let <nemeth class="inline">⠷⠛⠠⠀⠓⠾⠀⠈⠑⠀⠠⠛⠈⠡⠠⠓</nemeth>. If <i class="one-letter">g</i> and <i class="one-letter">h</i> have finite orders <i class="one-letter">r</i> and <i class="one-letter">s</i> respectively, then the order of <nemeth class="inline">⠷⠛⠠⠀⠓⠾</nemeth> in <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth> is the least common multiple of <i class="one-letter">r</i> and <i class="one-letter">s</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="hWn">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Rft">Suppose that <i class="one-letter">m</i> is the least common multiple of <i class="one-letter">r</i> and <i class="one-letter">s</i> and let <nemeth class="inline">⠝⠀⠨⠅⠀⠳⠷⠛⠠⠀⠓⠾⠳</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠷⠛⠠⠀⠓⠾⠘⠍⠐⠀⠨⠅⠀⠷⠛⠘⠍⠐⠠⠀⠓⠘⠍⠐⠾⠀⠨⠅⠀⠷⠑⠰⠠⠛⠐⠠⠀⠑⠰⠠⠓⠐⠾⠀⠷⠛⠘⠝⠐⠠⠀⠓⠘⠝⠐⠾⠀⠨⠅⠀⠷⠛⠠⠀⠓⠾⠘⠝⠐⠀⠨⠅⠀⠷⠑⠰⠠⠛⠐⠠⠀⠑⠰⠠⠓⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. Hence, <i class="one-letter">n</i> must divide <i class="one-letter">m</i>, and <nemeth class="inline">⠝⠀⠐⠅⠱⠀⠍</nemeth>. However, by the second equation, both <i class="one-letter">r</i> and <i class="one-letter">s</i> must divide <i class="one-letter">n</i>; therefore, <i class="one-letter">n</i> is a common multiple of <i class="one-letter">r</i> and <i class="one-letter">s</i>. Since <i class="one-letter">m</i> is the <em class="emphasis">least common multiple</em> of <i class="one-letter">r</i> and <i class="one-letter">s</i>, <nemeth class="inline">⠍⠀⠐⠅⠱⠀⠝</nemeth>. Consequently, <i class="one-letter">m</i> must be equal to <i class="one-letter">n</i>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="hHS">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="XEz">Let <nemeth class="inline">⠷⠛⠂⠠⠀⠄⠄⠄⠀⠠⠀⠛⠰⠝⠐⠾⠀⠈⠑⠀⠄⡳⠭⠆⠆⠴⠋⠄⠠⠛⠰⠊</nemeth>. If <nemeth class="inline">⠛⠰⠊</nemeth> has finite order <nemeth class="inline">⠗⠰⠊</nemeth> in <nemeth class="inline">⠠⠛⠰⠊</nemeth>, then the order of <nemeth class="inline">⠷⠛⠂⠠⠀⠄⠄⠄⠀⠠⠀⠛⠰⠝⠐⠾</nemeth> in <nemeth class="inline">⠄⡳⠭⠆⠆⠴⠋⠄⠠⠛⠰⠊</nemeth> is the least common multiple of <nemeth class="inline">⠗⠂⠠⠀⠄⠄⠄⠀⠠⠀⠗⠰⠝⠐</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="SyU">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="FAV">Let <nemeth class="inline">⠷⠼⠦⠠⠀⠼⠢⠖⠾⠀⠈⠑⠀⠸⠠⠵⠂⠆⠈⠡⠸⠠⠵⠖⠴</nemeth>. Since <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠦⠠⠀⠼⠂⠆⠾⠀⠨⠅⠀⠼⠲</nemeth>, the order of <nemeth class="inline">⠼⠦</nemeth> is <nemeth class="inline">⠼⠂⠆⠸⠌⠲⠀⠨⠅⠀⠼⠒</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>. Similarly, the order of <nemeth class="inline">⠼⠢⠖</nemeth> in <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth> is <nemeth class="inline">⠼⠂⠢</nemeth>. The least common multiple of <nemeth class="inline">⠼⠒</nemeth> and <nemeth class="inline">⠼⠂⠢</nemeth> is <nemeth class="inline">⠼⠂⠢</nemeth>; hence, <nemeth class="inline">⠷⠼⠦⠠⠀⠼⠢⠖⠾</nemeth> has order <nemeth class="inline">⠼⠂⠢</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠆⠈⠡⠸⠠⠵⠖⠴</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="yGd">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="lIe">The group <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠒</nemeth> consists of the pairs</p>
              <div class="displaymath">
                <nemeth>⠀⠀⠷⠼⠴⠠⠀⠼⠴⠾⠠⠀⠀⠀⠷⠼⠴⠠⠀⠼⠂⠾⠠⠀⠀⠀⠷⠼⠴⠠⠀⠼⠆⠾⠠⠀⠀⠀⠷⠼⠂⠠⠀⠼⠴⠾⠠⠀⠀⠀⠷⠼⠂⠠⠀⠼⠂⠾⠠⠀⠀⠀⠷⠼⠂⠠⠀⠼⠆⠾</nemeth>
              </div>
              <p data-braille="continuation">. In this case, unlike that of <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth> and <nemeth class="inline">⠸⠠⠵⠲</nemeth>, it is true that <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠒⠀⠈⠱⠈⠱⠀⠸⠠⠵⠖</nemeth>. We need only show that <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠒</nemeth> is cyclic. It is easy to see that <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠂⠾</nemeth> is a generator for <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠒</nemeth>.</p>
            </article>
            <p id="wvE">The next theorem tells us exactly when the direct product of two cyclic groups is cyclic.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="VtA">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="SUG">The group <nemeth class="inline">⠸⠠⠵⠰⠍⠐⠈⠡⠸⠠⠵⠰⠝</nemeth> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠍⠝</nemeth> if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Odw">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="xmC">We will first show that if <nemeth class="inline">⠸⠠⠵⠰⠍⠐⠈⠡⠸⠠⠵⠰⠝⠐⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠍⠝</nemeth>, then <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>. We will prove the contrapositive; that is, we will show that if <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠙⠀⠨⠂⠀⠼⠂</nemeth>, then <nemeth class="inline">⠸⠠⠵⠰⠍⠐⠈⠡⠸⠠⠵⠰⠝</nemeth> cannot be cyclic. Notice that <nemeth class="inline">⠍⠝⠸⠌⠙</nemeth> is divisible by both <i class="one-letter">m</i> and <i class="one-letter">n</i>; hence, for any element <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠸⠠⠵⠰⠍⠈⠡⠸⠠⠵⠰⠝</nemeth>,</p>
              <div class="displaymath">
                <nemeth>⠐⠐⠷⠁⠠⠀⠃⠾⠬⠷⠁⠠⠀⠃⠾⠬⠄⠄⠄⠬⠷⠁⠠⠀⠃⠾⠩⠄⡳⠭⠆⠒⠙⠋⠄⠻⠩⠍⠝⠸⠌⠙⠞⠊⠍⠑⠎⠻⠀⠨⠅⠀⠷⠼⠴⠠⠀⠼⠴⠾</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, no <nemeth class="inline">⠷⠁⠠⠀⠃⠾</nemeth> can generate all of <nemeth class="inline">⠸⠠⠵⠰⠍⠐⠈⠡⠸⠠⠵⠰⠝</nemeth>.</p>
              <p id="dtL">The converse follows directly from Theorem 9.2.5 since <nemeth class="inline">⠇⠉⠍⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠍⠝</nemeth> if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="NPb">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="DLI">Let <nemeth class="inline">⠝⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠰⠅⠐</nemeth> be positive integers. Then</p>
              <div class="displaymath">
                <nemeth>⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠊⠀⠨⠅⠀⠼⠂⠣⠅⠻⠸⠠⠵⠰⠝⠰⠰⠊⠐⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠝⠂⠀⠄⠄⠄⠀⠝⠰⠰⠅⠰</nemeth>
              </div>
              <p data-braille="continuation">if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠝⠰⠊⠐⠠⠀⠝⠰⠚⠐⠾⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="tWk">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="jSR">If</p>
              <div class="displaymath">
                <nemeth>⠍⠀⠨⠅⠀⠏⠂⠘⠑⠂⠐⠀⠄⠄⠄⠀⠏⠰⠅⠘⠑⠘⠰⠅⠘</nemeth>
              </div>
              <p data-braille="continuation">, where the <nemeth class="inline">⠏⠰⠊</nemeth>s are distinct primes, then</p>
              <div class="displaymath">
                <nemeth>⠸⠠⠵⠰⠍⠐⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠏⠂⠰⠘⠑⠂⠐⠈⠡⠄⠄⠄⠈⠡⠸⠠⠵⠰⠏⠰⠰⠅⠰⠘⠑⠰⠘⠰⠅</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="mGg">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="JAU">Since the greatest common divisor of <nemeth class="inline">⠏⠰⠊⠘⠑⠘⠰⠊</nemeth> and <nemeth class="inline">⠏⠰⠚⠘⠑⠘⠰⠚</nemeth> is 1 for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth>, the proof follows from Corollary 9.2.10.</p>
            </article>
            <p id="cCN">In Chapter 13, we will prove that all finite abelian groups are isomorphic to direct products of the form</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠰⠏⠂⠰⠘⠑⠂⠐⠈⠡⠄⠄⠄⠈⠡⠸⠠⠵⠰⠏⠰⠰⠅⠰⠘⠑⠰⠘⠰⠅</nemeth>
            </div>
            <p data-braille="continuation">where <nemeth class="inline">⠏⠂⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠅⠐</nemeth> are (not necessarily distinct) primes.</p>
          </section>
          <section class="subsection" id="nxe">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">9.2.2</span> <span class="title">Internal Direct Products</span></div>
            <p id="IJW">The external direct product of two groups builds a large group out of two smaller groups. We would like to be able to reverse this process and conveniently break down a group into its direct product components; that is, we would like to be able to say when a group is isomorphic to the direct product of two of its subgroups.</p>
            <p id="oRf">Let <i class="one-letter">G</i> be a group with subgroups <i class="one-letter">H</i> and <i class="one-letter">K</i> satisfying the following conditions.</p>
            <ul class="outerlist">
              <li>• <p id="ZAQ"><nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠓⠠⠅⠀⠨⠅⠀⠨⠷⠓⠅⠒⠀⠓⠀⠈⠑⠀⠠⠓⠠⠀⠅⠀⠈⠑⠀⠠⠅⠨⠾</nemeth>;</p></li>
              <li>• <p id="FHZ"><nemeth class="inline">⠠⠓⠨⠩⠠⠅⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>;</p></li>
              <li>• <p id="lPi"><nemeth class="inline">⠓⠅⠀⠨⠅⠀⠅⠓</nemeth> for all <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠅</nemeth> and <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth>.</p></li>
            </ul>
            <p data-braille="continuation">Then <i class="one-letter">G</i> is the <dfn class="terminology">internal direct product</dfn> of <i class="one-letter">H</i> and <i class="one-letter">K</i>.</p>
            <article class="example example-like" data-braille="example-like" id="rbE">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.12</span>
                <span class="period">.</span>
              </h6>
              <p id="RPn">The group <nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth> is the internal direct product of</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠒⠨⠾⠁⠝⠙⠠⠅⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠢⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="XiN">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.13</span>
                <span class="period">.</span>
              </h6>
              <p id="xWw">The dihedral group <nemeth class="inline">⠠⠙⠖</nemeth> is an internal direct product of its two subgroups</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠗⠘⠒⠐⠨⠾⠁⠝⠙⠠⠅⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠗⠘⠆⠐⠠⠀⠗⠘⠲⠐⠠⠀⠎⠠⠀⠗⠘⠆⠐⠎⠠⠀⠗⠘⠲⠐⠎⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. It can easily be shown that <nemeth class="inline">⠠⠅⠀⠈⠱⠈⠱⠀⠠⠎⠒</nemeth>; consequently, <nemeth class="inline">⠠⠙⠖⠀⠈⠱⠈⠱⠀⠸⠠⠵⠆⠈⠡⠠⠎⠒</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="DpW">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.14</span>
                <span class="period">.</span>
              </h6>
              <p id="edF">Not every group can be written as the internal direct product of two of its proper subgroups. If the group <nemeth class="inline">⠠⠎⠒</nemeth> were an internal direct product of its proper subgroups <i class="one-letter">H</i> and <i class="one-letter">K</i>, then one of the subgroups, say <i class="one-letter">H</i>, would have to have order <nemeth class="inline">⠼⠒</nemeth>. In this case <i class="one-letter">H</i> is the subgroup <nemeth class="inline">⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth>. The subgroup <i class="one-letter">K</i> must have order <nemeth class="inline">⠼⠆</nemeth>, but no matter which subgroup we choose for <i class="one-letter">K</i>, the condition that <nemeth class="inline">⠓⠅⠀⠨⠅⠀⠅⠓</nemeth> will never be satisfied for <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠅</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="eNm">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.15</span>
                <span class="period">.</span>
              </h6>
              <p id="zbP">Let <i class="one-letter">G</i> be the internal direct product of subgroups <i class="one-letter">H</i> and <i class="one-letter">K</i>. Then <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠠⠓⠈⠡⠠⠅</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ukF">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="pId">Since <i class="one-letter">G</i> is an internal direct product, we can write any element <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> as <nemeth class="inline">⠛⠀⠨⠅⠀⠓⠅</nemeth> for some <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and some <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠅</nemeth>. Define a map <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓⠈⠡⠠⠅</nemeth> by <nemeth class="inline">⠋⠷⠛⠾⠀⠨⠅⠀⠷⠓⠠⠀⠅⠾</nemeth>.</p>
              <p id="VPm">The first problem that we must face is to show that <nemeth class="inline">⠨⠋</nemeth> is a well-defined map; that is, we must show that <i class="one-letter">h</i> and <i class="one-letter">k</i> are uniquely determined by <i class="one-letter">g</i>. Suppose that <nemeth class="inline">⠛⠀⠨⠅⠀⠓⠅⠀⠨⠅⠀⠓⠘⠄⠐⠅⠄</nemeth>. Then <nemeth class="inline">⠓⠘⠤⠼⠂⠐⠓⠘⠄⠐⠀⠨⠅⠀⠅⠷⠅⠘⠄⠐⠾⠘⠤⠼⠂</nemeth> is in both <i class="one-letter">H</i> and <i class="one-letter">K</i>, so it must be the identity. Therefore, <nemeth class="inline">⠓⠀⠨⠅⠀⠓⠄</nemeth> and <nemeth class="inline">⠅⠀⠨⠅⠀⠅⠄</nemeth>, which proves that <nemeth class="inline">⠨⠋</nemeth> is, indeed, well-defined.</p>
              <p id="BWv">To show that <nemeth class="inline">⠨⠋</nemeth> preserves the group operation, let <nemeth class="inline">⠛⠂⠀⠨⠅⠀⠓⠂⠅⠂</nemeth> and <nemeth class="inline">⠛⠆⠀⠨⠅⠀⠓⠆⠅⠆</nemeth> and observe that</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠛⠂⠛⠆⠾⠀⠀⠨⠅⠀⠋⠷⠓⠂⠅⠂⠓⠆⠅⠆⠾⠀⠀⠀⠀⠨⠅⠀⠋⠷⠓⠂⠓⠆⠅⠂⠅⠆⠾⠀⠀⠀⠀⠨⠅⠀⠷⠓⠂⠓⠆⠠⠀⠅⠂⠅⠆⠾⠀⠀⠀⠀⠨⠅⠀⠷⠓⠂⠠⠀⠅⠂⠾⠷⠓⠆⠠⠀⠅⠆⠾⠀⠀⠀⠀⠨⠅⠀⠋⠷⠛⠂⠾⠋⠷⠛⠆⠾</nemeth>
              </div>
              <p data-braille="continuation">. We will leave the proof that <nemeth class="inline">⠨⠋</nemeth> is one-to-one and onto as an exercise.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="jxf">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.16</span>
                <span class="period">.</span>
              </h6>
              <p id="KkO">The group <nemeth class="inline">⠸⠠⠵⠖</nemeth> is an internal direct product isomorphic to <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠨⠾⠈⠡⠨⠷⠼⠴⠠⠀⠼⠒⠨⠾</nemeth>.</p>
            </article>
            <p id="UYo">We can extend the definition of an internal direct product of <i class="one-letter">G</i> to a collection of subgroups <nemeth class="inline">⠠⠓⠂⠠⠀⠠⠓⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠓⠰⠝⠐</nemeth> of <i class="one-letter">G</i>, by requiring that</p>
            <ul class="outerlist">
              <li>• <p id="RWr"><nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠓⠂⠠⠓⠆⠀⠄⠄⠄⠀⠠⠓⠰⠝⠐⠀⠨⠅⠀⠨⠷⠓⠂⠓⠆⠀⠄⠄⠄⠀⠓⠰⠝⠐⠒⠀⠓⠰⠊⠐⠀⠈⠑⠀⠠⠓⠰⠊⠐⠨⠾</nemeth>;</p></li>
              <li>• <p id="ydA"><nemeth class="inline">⠠⠓⠰⠊⠐⠨⠩⠨⠨⠷⠨⠬⠠⠓⠰⠚⠐⠨⠨⠾⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>;</p></li>
              <li>• <p id="ekJ"><nemeth class="inline">⠓⠰⠊⠐⠓⠰⠚⠐⠀⠨⠅⠀⠓⠰⠚⠐⠓⠰⠊</nemeth> for all <nemeth class="inline">⠓⠰⠊⠐⠀⠈⠑⠀⠠⠓⠰⠊</nemeth> and <nemeth class="inline">⠓⠰⠚⠐⠀⠈⠑⠀⠠⠓⠰⠚</nemeth>.</p></li>
            </ul>
            <p data-braille="continuation">We will leave the proof of the following theorem as an exercise.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="KUv">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">9.2.17</span>
                <span class="period">.</span>
              </h6>
              <p id="fiY">Let <i class="one-letter">G</i> be the internal direct product of subgroups <nemeth class="inline">⠠⠓⠰⠊</nemeth>, where <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝</nemeth>. Then <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠊⠻⠠⠓⠰⠊</nemeth>.</p>
            </article>
            <article class="paragraphs" id="Yog">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="Bfx">Sage can quickly determine if two permutation groups are isomorphic, even though this should, in theory, be a very difficult computation.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="TYi">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">9.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="UOG">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Zyz">Determine the order of <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠆⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠲⠈⠡⠸⠠⠵⠦</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="AVP">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="FFI">List three properties of a group that are preserved by an isomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="hcY">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="lMR">Find a group isomorphic to <nemeth class="inline">⠸⠠⠵⠂⠢</nemeth> that is an external direct product of two non-trivial groups.</p>
          </article>
          <article class="exercise exercise-like" id="Nkh">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="RUa">Explain why we can now say “<em class="emphasis">the</em> infinite cyclic group”?</p>
          </article>
          <article class="exercise exercise-like" id="trq">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ybj">Compare and contrast external direct products and internal direct products.</p>
          </article>
        </section>
        <section class="exercises" id="LZO">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">9.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="PEo">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Hqi">Prove that <nemeth class="inline">⠸⠠⠵⠀⠈⠱⠈⠱⠀⠝⠸⠠⠵</nemeth> for <nemeth class="inline">⠝⠀⠌⠨⠅⠀⠼⠴</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="yUy"><span class="type">Hint</span>:<p id="mdD">Every infinite cyclic group is isomorphic to <nemeth class="inline">⠸⠠⠵</nemeth> by Theorem 9.1.7.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="vLx">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="nxr">Prove that <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> is isomorphic to the subgroup of <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> consisting of matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠤⠃⠀⠁⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <div class="solutions">
              <div class="hint solution-like" id="LiQ"><span class="type">Hint</span>:<p id="SkM">Define <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠉⠘⠈⠼⠐⠀⠫⠕⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> by</p><div class="displaymath"><nemeth>⠨⠋⠷⠁⠬⠃⠊⠾⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠤⠃⠀⠁⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="bSG">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="TEA">Prove or disprove: <nemeth class="inline">⠠⠥⠷⠼⠦⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠲</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Xxi"><span class="type">Hint</span>:<p id="yrV">False.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="HZP">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="zLJ">Prove that <nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth> is isomorphic to the group of matrices</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="ogY">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="fSS">Show that <nemeth class="inline">⠠⠥⠷⠼⠢⠾</nemeth> is isomorphic to <nemeth class="inline">⠠⠥⠷⠼⠂⠴⠾</nemeth>, but <nemeth class="inline">⠠⠥⠷⠼⠂⠆⠾</nemeth> is not.</p>
          </article>
          <article class="exercise exercise-like" id="Uoh">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="Mab">Show that the <i class="one-letter">n</i>th roots of unity are isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="vZS"><span class="type">Hint</span>:<p id="eze">Define a map from <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> into the <i class="one-letter">n</i>th roots of unity by <nemeth class="inline">⠅⠀⠫⠳⠒⠒⠕⠀⠉⠊⠎⠷⠼⠆⠅⠨⠏⠸⠌⠝⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Avq">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="shk">Show that any cyclic group of order <i class="one-letter">n</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="gCz">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="Yot">Prove that <nemeth class="inline">⠸⠠⠟</nemeth> is not isomorphic to <nemeth class="inline">⠸⠠⠵</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ovt"><span class="type">Hint</span>:<p id="KGn">Assume that <nemeth class="inline">⠸⠠⠟</nemeth> is cyclic and try to find a generator.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="MJI">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="EvC">Let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠸⠠⠗⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠤⠼⠂⠨⠾</nemeth> and define a binary operation on <i class="one-letter">G</i> by</p>
            <div class="displaymath">
              <nemeth>⠁⠈⠼⠃⠀⠨⠅⠀⠁⠬⠃⠬⠁⠃</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <i class="one-letter">G</i> is a group under this operation. Show that <nemeth class="inline">⠷⠠⠛⠠⠀⠈⠼⠾</nemeth> is isomorphic to the multiplicative group of nonzero real numbers.</p>
          </article>
          <article class="exercise exercise-like" id="sQR">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="kCL">Show that the matrices</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠠⠷⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠠⠾⠠⠷⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠠⠾⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠠⠾⠠⠷⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">form a group. Find an isomorphism of <i class="one-letter">G</i> with a more familiar group of order <nemeth class="inline">⠼⠖</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="YYa">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="QJU">Find five non-isomorphic groups of order <nemeth class="inline">⠼⠦</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="MYd"><span class="type">Hint</span>:<p id="qNw">There are two nonabelian and three abelian groups that are not isomorphic.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Ffj">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="wRd">Prove <nemeth class="inline">⠠⠎⠲</nemeth> is not isomorphic to <nemeth class="inline">⠠⠙⠂⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="lms">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="cYm">Let <nemeth class="inline">⠨⠕⠀⠨⠅⠀⠉⠊⠎⠷⠼⠆⠨⠏⠸⠌⠝⠾</nemeth> be a primitive <i class="one-letter">n</i>th root of unity. Prove that the matrices</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠨⠕⠀⠴⠠⠾⠀⠠⠷⠴⠀⠨⠕⠘⠤⠼⠂⠐⠠⠾⠁⠝⠙⠠⠃⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">generate a multiplicative group isomorphic to <nemeth class="inline">⠠⠙⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="RtB">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="Jfv">Show that the set of all matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠬⠤⠼⠂⠀⠅⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, is a group isomorphic to <nemeth class="inline">⠠⠙⠰⠝</nemeth>, where all entries in the matrix are in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="xAK">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="pmE">List all of the elements of <nemeth class="inline">⠸⠠⠵⠲⠈⠡⠸⠠⠵⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="dHT">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="VtN">Find the order of each of the following elements.</p>
            <ol class="outerlist">
              <li>a. <p id="KrS"><nemeth class="inline">⠷⠼⠒⠠⠀⠼⠲⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠲⠈⠡⠸⠠⠵⠖</nemeth></p></li>
              <li>b. <p id="qzb"><nemeth class="inline">⠷⠼⠖⠠⠀⠼⠂⠢⠠⠀⠼⠲⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠒⠴⠈⠡⠸⠠⠵⠲⠢⠈⠡⠸⠠⠵⠆⠲</nemeth></p></li>
              <li>c. <p id="WGk"><nemeth class="inline">⠷⠼⠢⠠⠀⠼⠂⠴⠠⠀⠼⠂⠢⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠢⠈⠡⠸⠠⠵⠆⠢⠈⠡⠸⠠⠵⠆⠢</nemeth></p></li>
              <li>d. <p id="iUC"><nemeth class="inline">⠷⠼⠦⠠⠀⠼⠦⠠⠀⠼⠦⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠴⠈⠡⠸⠠⠵⠆⠲⠈⠡⠸⠠⠵⠦⠴</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="xPf"><span class="type">Hint</span>:<p id="WUF">(a) <nemeth class="inline">⠼⠂⠆</nemeth>; (c) <nemeth class="inline">⠼⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="JPc">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="BAW">Prove that <nemeth class="inline">⠠⠙⠲</nemeth> cannot be the internal direct product of two of its proper subgroups.</p>
          </article>
          <article class="exercise exercise-like" id="pWl">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="hIf">Prove that the subgroup of <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> consisting of elements of the form <nemeth class="inline">⠼⠆⠘⠍⠐⠒⠘⠝</nemeth> for <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth> is an internal direct product isomorphic to <nemeth class="inline">⠸⠠⠵⠈⠡⠸⠠⠵</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Wdu">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="NPo">Prove that <nemeth class="inline">⠠⠎⠒⠈⠡⠸⠠⠵⠆</nemeth> is isomorphic to <nemeth class="inline">⠠⠙⠖</nemeth>. Can you make a conjecture about <nemeth class="inline">⠠⠙⠰⠆⠝</nemeth>? Prove your conjecture.</p>
            <div class="solutions">
              <div class="hint solution-like" id="WrP"><span class="type">Hint</span>:<p id="DbO">Draw the picture.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="CkD">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="tWx">Prove or disprove: Every abelian group of order divisible by <nemeth class="inline">⠼⠒</nemeth> contains a subgroup of order <nemeth class="inline">⠼⠒</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="iGh"><span class="type">Hint</span>:<p id="jiX">True.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="irM">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="adG">Prove or disprove: Every nonabelian group of order divisible by 6 contains a subgroup of order <nemeth class="inline">⠼⠖</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="OyV">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="GkP">Let <i class="one-letter">G</i> be a group of order <nemeth class="inline">⠼⠆⠴</nemeth>. If <i class="one-letter">G</i> has subgroups <i class="one-letter">H</i> and <i class="one-letter">K</i> of orders <nemeth class="inline">⠼⠲</nemeth> and <nemeth class="inline">⠼⠢</nemeth> respectively such that <nemeth class="inline">⠓⠅⠀⠨⠅⠀⠅⠓</nemeth> for all <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠅</nemeth>, prove that <i class="one-letter">G</i> is the internal direct product of <i class="one-letter">H</i> and <i class="one-letter">K</i>.</p>
          </article>
          <article class="exercise exercise-like" id="uGe">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="mrY">Prove or disprove the following assertion. Let <i class="one-letter">G</i>, <i class="one-letter">H</i>, and <i class="one-letter">K</i> be groups. If <nemeth class="inline">⠠⠛⠈⠡⠠⠅⠀⠈⠱⠈⠱⠀⠠⠓⠈⠡⠠⠅</nemeth>, then <nemeth class="inline">⠠⠛⠀⠈⠱⠈⠱⠀⠠⠓</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="aNn">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="Szh">Prove or disprove: There is a noncyclic abelian group of order <nemeth class="inline">⠼⠢⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="GUw">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="yGq">Prove or disprove: There is a noncyclic abelian group of order <nemeth class="inline">⠼⠢⠆</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Txj"><span class="type">Hint</span>:<p id="Pqg">True.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="nbF">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="eNz">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> be a group isomorphism. Show that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠑⠰⠠⠓</nemeth> if and only if <nemeth class="inline">⠭⠀⠨⠅⠀⠑⠰⠠⠛</nemeth>, where <nemeth class="inline">⠑⠰⠠⠛</nemeth> and <nemeth class="inline">⠑⠰⠠⠓</nemeth> are the identities of <i class="one-letter">G</i> and <i class="one-letter">H</i>, respectively.</p>
          </article>
          <article class="exercise exercise-like" id="TiO">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="KUI">Let <nemeth class="inline">⠠⠛⠀⠈⠱⠈⠱⠀⠠⠓</nemeth>. Show that if <i class="one-letter">G</i> is cyclic, then so is <i class="one-letter">H</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="LSK"><span class="type">Hint</span>:<p id="vxp">Let <i class="one-letter">a</i> be a generator for <i class="one-letter">G</i>. If <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> is an isomorphism, show that <nemeth class="inline">⠋⠷⠁⠾</nemeth> is a generator for <i class="one-letter">H</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="zpX">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="rbR">Prove that any group <i class="one-letter">G</i> of order <i class="one-letter">p</i>, <i class="one-letter">p</i> prime, must be isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="fxg">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="Xja">Show that <nemeth class="inline">⠠⠎⠰⠝</nemeth> is isomorphic to a subgroup of <nemeth class="inline">⠠⠁⠰⠝⠬⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LEp">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="Dqj">Prove that <nemeth class="inline">⠠⠙⠰⠝</nemeth> is isomorphic to a subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="rLy">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="jxs">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠂⠀⠫⠕⠀⠠⠛⠆</nemeth> and <nemeth class="inline">⠨⠓⠒⠀⠠⠛⠆⠀⠫⠕⠀⠠⠛⠒</nemeth> be isomorphisms. Show that <nemeth class="inline">⠨⠋⠘⠤⠼⠂</nemeth> and <nemeth class="inline">⠨⠓⠘⠨⠡⠨⠋</nemeth> are both isomorphisms. Using these results, show that the isomorphism of groups determines an equivalence relation on the class of all groups.</p>
          </article>
          <article class="exercise exercise-like" id="XSH">
            <h6 class="heading">
              <span class="codenumber">32<span class="period">.</span></span>
            </h6>
            <p id="PEB">Prove <nemeth class="inline">⠠⠥⠷⠼⠢⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠲</nemeth>. Can you generalize this result for <nemeth class="inline">⠠⠥⠷⠏⠾</nemeth>, where <i class="one-letter">p</i> is prime?</p>
          </article>
          <article class="exercise exercise-like" id="DZQ">
            <h6 class="heading">
              <span class="codenumber">33<span class="period">.</span></span>
            </h6>
            <p id="vLK">Write out the permutations associated with each element of <nemeth class="inline">⠠⠎⠒</nemeth> in the proof of Cayley's Theorem.</p>
          </article>
          <article class="exercise exercise-like" id="kgZ">
            <h6 class="heading">
              <span class="codenumber">34<span class="period">.</span></span>
            </h6>
            <p id="bST">An <dfn class="terminology">automorphism</dfn> of a group <i class="one-letter">G</i> is an isomorphism with itself. Prove that complex conjugation is an automorphism of the additive group of complex numbers; that is, show that the map <nemeth class="inline">⠨⠋⠷⠁⠬⠃⠊⠾⠀⠨⠅⠀⠁⠤⠃⠊</nemeth> is an isomorphism from <nemeth class="inline">⠸⠠⠉</nemeth> to <nemeth class="inline">⠸⠠⠉</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Qoi">
            <h6 class="heading">
              <span class="codenumber">35<span class="period">.</span></span>
            </h6>
            <p id="Iac">Prove that <nemeth class="inline">⠁⠬⠊⠃⠀⠫⠳⠒⠒⠕⠀⠁⠤⠊⠃</nemeth> is an automorphism of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="wvr">
            <h6 class="heading">
              <span class="codenumber">36<span class="period">.</span></span>
            </h6>
            <p id="ohl">Prove that <nemeth class="inline">⠠⠁⠀⠫⠳⠒⠒⠕⠀⠠⠃⠘⠤⠼⠂⠐⠠⠁⠠⠃</nemeth> is an automorphism of <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> for all <i class="one-letter">B</i> in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="cCA">
            <h6 class="heading">
              <span class="codenumber">37<span class="period">.</span></span>
            </h6>
            <p id="Uou">We will denote the set of all automorphisms of <i class="one-letter">G</i> by <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠛⠾</nemeth>.  Prove that <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠛⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠎⠰⠠⠛</nemeth>, the group of permutations of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="IJJ">
            <h6 class="heading">
              <span class="codenumber">38<span class="period">.</span></span>
            </h6>
            <p id="AvD">Find <nemeth class="inline">⠠⠁⠥⠞⠷⠸⠠⠵⠖⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="hAO"><span class="type">Hint</span>:<p id="bEy">Any automorphism of <nemeth class="inline">⠸⠠⠵⠖</nemeth> must send 1 to another generator of <nemeth class="inline">⠸⠠⠵⠖</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="oQS">
            <h6 class="heading">
              <span class="codenumber">39<span class="period">.</span></span>
            </h6>
            <p id="gCM">Find <nemeth class="inline">⠠⠁⠥⠞⠷⠸⠠⠵⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="UYb">
            <h6 class="heading">
              <span class="codenumber">40<span class="period">.</span></span>
            </h6>
            <p id="MJV">Find two nonisomorphic groups <i class="one-letter">G</i> and <i class="one-letter">H</i> such that <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠛⠾⠀⠈⠱⠈⠱⠀⠠⠁⠥⠞⠷⠠⠓⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Bfk">
            <h6 class="heading">
              <span class="codenumber">41<span class="period">.</span></span>
            </h6>
            <p id="sRe">Let <i class="one-letter">G</i> be a group and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Define a map <nemeth class="inline">⠊⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠊⠰⠛⠐⠷⠭⠾⠀⠨⠅⠀⠛⠭⠛⠘⠤⠼⠂</nemeth>. Prove that <nemeth class="inline">⠊⠰⠛</nemeth> defines an automorphism of <i class="one-letter">G</i>. Such an automorphism is called an <dfn class="terminology">inner automorphism</dfn>. The set of all inner automorphisms is denoted by <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠛⠾</nemeth>. </p>
          </article>
          <article class="exercise exercise-like" id="hmt">
            <h6 class="heading">
              <span class="codenumber">42<span class="period">.</span></span>
            </h6>
            <p id="YYn">Prove that <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠛⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠛⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="NtC">
            <h6 class="heading">
              <span class="codenumber">43<span class="period">.</span></span>
            </h6>
            <p id="Ffw">What are the inner automorphisms of the quaternion group <nemeth class="inline">⠠⠟⠦</nemeth>? Is <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠛⠾⠀⠨⠅⠀⠠⠁⠥⠞⠷⠠⠛⠾</nemeth> in this case?</p>
          </article>
          <article class="exercise exercise-like" id="tAL">
            <h6 class="heading">
              <span class="codenumber">44<span class="period">.</span></span>
            </h6>
            <p id="lmF">Let <i class="one-letter">G</i> be a group and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Define maps <nemeth class="inline">⠨⠇⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> and <nemeth class="inline">⠨⠗⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠇⠰⠛⠐⠷⠭⠾⠀⠨⠅⠀⠛⠭</nemeth> and <nemeth class="inline">⠗⠰⠛⠐⠷⠭⠾⠀⠨⠅⠀⠭⠛⠘⠤⠼⠂</nemeth>. Show that <nemeth class="inline">⠊⠰⠛⠐⠀⠨⠅⠀⠨⠗⠰⠛⠐⠘⠨⠡⠨⠇⠰⠛</nemeth> is an automorphism of <i class="one-letter">G</i>. The isomorphism <nemeth class="inline">⠛⠀⠫⠳⠒⠒⠕⠀⠨⠗⠰⠛</nemeth> is called the <dfn class="terminology">right regular representation</dfn> of <i class="one-letter">G</i>. </p>
          </article>
          <article class="exercise exercise-like" id="ZHU">
            <h6 class="heading">
              <span class="codenumber">45<span class="period">.</span></span>
            </h6>
            <p id="RtO">Let <i class="one-letter">G</i> be the internal direct product of subgroups <i class="one-letter">H</i> and <i class="one-letter">K</i>. Show that the map <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓⠈⠡⠠⠅</nemeth> defined by <nemeth class="inline">⠋⠷⠛⠾⠀⠨⠅⠀⠷⠓⠠⠀⠅⠾</nemeth> for <nemeth class="inline">⠛⠀⠨⠅⠀⠓⠅</nemeth>, where <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠅</nemeth>, is one-to-one and onto.</p>
            <div class="solutions">
              <div class="hint solution-like" id="eGi"><span class="type">Hint</span>:<p id="HLH">To show that <nemeth class="inline">⠨⠋</nemeth> is one-to-one, let <nemeth class="inline">⠛⠂⠀⠨⠅⠀⠓⠂⠅⠂</nemeth> and <nemeth class="inline">⠛⠆⠀⠨⠅⠀⠓⠆⠅⠆</nemeth> and consider <nemeth class="inline">⠋⠷⠛⠂⠾⠀⠨⠅⠀⠋⠷⠛⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="FPd">
            <h6 class="heading">
              <span class="codenumber">46<span class="period">.</span></span>
            </h6>
            <p id="xAX">Let <i class="one-letter">G</i> and <i class="one-letter">H</i> be isomorphic groups. If <i class="one-letter">G</i> has a subgroup of order <i class="one-letter">n</i>, prove that <i class="one-letter">H</i> must also have a subgroup of order <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="lWm">
            <h6 class="heading">
              <span class="codenumber">47<span class="period">.</span></span>
            </h6>
            <p id="dIg">If <nemeth class="inline">⠠⠛⠀⠈⠱⠈⠱⠀⠐⠠⠛⠣⠱⠻</nemeth> and <nemeth class="inline">⠠⠓⠀⠈⠱⠈⠱⠀⠐⠠⠓⠣⠱⠻</nemeth>, show that <nemeth class="inline">⠠⠛⠈⠡⠠⠓⠀⠈⠱⠈⠱⠀⠐⠠⠛⠣⠱⠻⠈⠡⠐⠠⠓⠣⠱⠻</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Sdv">
            <h6 class="heading">
              <span class="codenumber">48<span class="period">.</span></span>
            </h6>
            <p id="JPp">Prove that <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth> is isomorphic to <nemeth class="inline">⠠⠓⠈⠡⠠⠛</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ykE">
            <h6 class="heading">
              <span class="codenumber">49<span class="period">.</span></span>
            </h6>
            <p id="pWy">Let <nemeth class="inline">⠝⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠰⠅⠐</nemeth> be positive integers. Show that</p>
            <div class="displaymath">
              <nemeth>⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠊⠀⠨⠅⠀⠼⠂⠣⠅⠻⠸⠠⠵⠰⠝⠰⠰⠊⠐⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠝⠂⠀⠄⠄⠄⠀⠝⠰⠰⠅⠰</nemeth>
            </div>
            <p data-braille="continuation">if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠝⠰⠊⠐⠠⠀⠝⠰⠚⠐⠾⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="erN">
            <h6 class="heading">
              <span class="codenumber">50<span class="period">.</span></span>
            </h6>
            <p id="WdH">Prove that <nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth> is abelian if and only if <i class="one-letter">A</i> and <i class="one-letter">B</i> are abelian.</p>
          </article>
          <article class="exercise exercise-like" id="KyW">
            <h6 class="heading">
              <span class="codenumber">51<span class="period">.</span></span>
            </h6>
            <p id="CkQ">If <i class="one-letter">G</i> is the internal direct product of <nemeth class="inline">⠠⠓⠂⠠⠀⠠⠓⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠓⠰⠝⠐</nemeth>, prove that <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠊⠻⠠⠓⠰⠊</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="qGf">
            <h6 class="heading">
              <span class="codenumber">52<span class="period">.</span></span>
            </h6>
            <p id="irZ">Let <nemeth class="inline">⠠⠓⠂</nemeth> and <nemeth class="inline">⠠⠓⠆</nemeth> be subgroups of <nemeth class="inline">⠠⠛⠂</nemeth> and <nemeth class="inline">⠠⠛⠆</nemeth>, respectively. Prove that <nemeth class="inline">⠠⠓⠂⠈⠡⠠⠓⠆</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠂⠈⠡⠠⠛⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="WNo">
            <h6 class="heading">
              <span class="codenumber">53<span class="period">.</span></span>
            </h6>
            <p id="Ozi">Let <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>. Prove that <nemeth class="inline">⠨⠨⠷⠍⠠⠀⠝⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠙⠨⠨⠾</nemeth> if and only if <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="CUx">
            <h6 class="heading">
              <span class="codenumber">54<span class="period">.</span></span>
            </h6>
            <p id="uGr">Let <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>. Prove that <nemeth class="inline">⠨⠨⠷⠍⠨⠨⠾⠨⠩⠨⠨⠷⠝⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠇⠨⠨⠾</nemeth> if and only if <nemeth class="inline">⠇⠀⠨⠅⠀⠇⠉⠍⠷⠍⠠⠀⠝⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="jbG">
            <h6 class="heading">
              <span class="codenumber">55<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Groups of order <nemeth class="inline">⠼⠆⠏</nemeth>.</span>
            </h6>
            <p id="aNA">In this series of exercises we will classify all groups of order <nemeth class="inline">⠼⠆⠏</nemeth>, where <i class="one-letter">p</i> is an odd prime.</p>
            <ol class="outerlist">
              <li>a. <p id="PbL">Assume <i class="one-letter">G</i> is a group of order <nemeth class="inline">⠼⠆⠏</nemeth>, where <i class="one-letter">p</i> is an odd prime. If <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>, show that <i class="one-letter">a</i> must have order <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <i class="one-letter">p</i>, or <nemeth class="inline">⠼⠆⠏</nemeth>.</p></li>
              <li>b. <p id="viU">Suppose that <i class="one-letter">G</i> has an element of order <nemeth class="inline">⠼⠆⠏</nemeth>. Prove that <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠆⠏</nemeth>. Hence, <i class="one-letter">G</i> is cyclic.</p></li>
              <li>c. <p id="bqd">Suppose that <i class="one-letter">G</i> does not contain an element of order <nemeth class="inline">⠼⠆⠏</nemeth>. Show that <i class="one-letter">G</i> must contain an element of order <i class="one-letter">p</i>. <em class="emphasis">Hint</em>: Assume that <i class="one-letter">G</i> does not contain an element of order <i class="one-letter">p</i>.</p></li>
              <li>d. <p id="Hxm">Suppose that <i class="one-letter">G</i> does not contain an element of order <nemeth class="inline">⠼⠆⠏</nemeth>. Show that <i class="one-letter">G</i> must contain an element of order <nemeth class="inline">⠼⠆</nemeth>.</p></li>
              <li>e. <p id="nEv">Let <i class="one-letter">P</i> be a subgroup of <i class="one-letter">G</i> with order <i class="one-letter">p</i> and <nemeth class="inline">⠽⠀⠈⠑⠀⠠⠛</nemeth> have order <nemeth class="inline">⠼⠆</nemeth>. Show that <nemeth class="inline">⠽⠠⠏⠀⠨⠅⠀⠠⠏⠽</nemeth>.</p></li>
              <li>f. <p id="TLE">Suppose that <i class="one-letter">G</i> does not contain an element of order <nemeth class="inline">⠼⠆⠏</nemeth> and <nemeth class="inline">⠠⠏⠀⠨⠅⠀⠨⠨⠷⠵⠨⠨⠾</nemeth> is a subgroup of order <i class="one-letter">p</i> generated by <i class="one-letter">z</i>. If <i class="one-letter">y</i> is an element of order <nemeth class="inline">⠼⠆</nemeth>, then <nemeth class="inline">⠽⠵⠀⠨⠅⠀⠵⠘⠅⠐⠽</nemeth> for some <nemeth class="inline">⠼⠆⠀⠐⠅⠱⠀⠅⠀⠐⠅⠀⠏</nemeth>.</p></li>
              <li>g. <p id="zSN">Suppose that <i class="one-letter">G</i> does not contain an element of order <nemeth class="inline">⠼⠆⠏</nemeth>. Prove that <i class="one-letter">G</i> is not abelian.</p></li>
              <li>h. <p id="fZW">Suppose that <i class="one-letter">G</i> does not contain an element of order <nemeth class="inline">⠼⠆⠏</nemeth> and <nemeth class="inline">⠠⠏⠀⠨⠅⠀⠨⠨⠷⠵⠨⠨⠾</nemeth> is a subgroup of order <i class="one-letter">p</i> generated by <i class="one-letter">z</i> and <i class="one-letter">y</i> is an element of order <nemeth class="inline">⠼⠆</nemeth>. Show that we can list the elements of <i class="one-letter">G</i> as <nemeth class="inline">⠨⠷⠵⠘⠊⠐⠽⠘⠚⠐⠳⠴⠀⠐⠅⠱⠀⠊⠀⠐⠅⠀⠏⠠⠀⠼⠴⠀⠐⠅⠱⠀⠚⠀⠐⠅⠀⠼⠆⠨⠾</nemeth>.</p></li>
              <li>i. <p id="Mhf">Suppose that <i class="one-letter">G</i> does not contain an element of order <nemeth class="inline">⠼⠆⠏</nemeth> and <nemeth class="inline">⠠⠏⠀⠨⠅⠀⠨⠨⠷⠵⠨⠨⠾</nemeth> is a subgroup of order <i class="one-letter">p</i> generated by <i class="one-letter">z</i> and <i class="one-letter">y</i> is an element of order <nemeth class="inline">⠼⠆</nemeth>. Prove that the product <nemeth class="inline">⠷⠵⠘⠊⠐⠽⠘⠚⠐⠾⠷⠵⠘⠗⠐⠽⠘⠎⠐⠾</nemeth> can be expressed as a uniquely as <nemeth class="inline">⠵⠘⠍⠐⠽⠘⠝</nemeth> for some non negative integers <nemeth class="inline">⠍⠠⠀⠝</nemeth>. Thus, conclude that there is only one possibility for a non-abelian group of order <nemeth class="inline">⠼⠆⠏</nemeth>, it must therefore be the one we have seen already, the dihedral group.</p></li>
            </ol>
          </article>
        </section>
        <section class="section" id="QJH">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">9.5</span> <span class="title">Sage</span></div>
          <section class="introduction" id="dmu">
            <p id="biZ">Sage has limited support for actually creating isomorphisms, though it is possible. However, there is excellent support for determining if two permutation groups are isomorphic. This will allow us to begin a little project to locate <em class="emphasis">all</em> of the groups of order less than <nemeth class="inline">⠼⠂⠖</nemeth> in Sage's permutation groups.</p>
          </section>
          <section class="subsection" id="TEn">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">9.5.1</span> <span class="title">Isomorphism Testing</span></div>
            <p id="hmG">If <code class="code-inline tex2jax_ignore">G</code> and <code class="code-inline tex2jax_ignore">H</code> are two permutation groups, then the command <code class="code-inline tex2jax_ignore">G.is_isomorphic(H)</code> will return <code class="code-inline tex2jax_ignore">True</code> or <code class="code-inline tex2jax_ignore">False</code> as the two groups are, or are not, isomorphic. Since “isomorpic to” is an equivalence relation by Theorem 9.1.10, it does not matter which group plays the role of <code class="code-inline tex2jax_ignore">G</code> and which plays the role of <code class="code-inline tex2jax_ignore">H</code>.</p>
            <p id="NtP">So we have a few more examples to work with, let us introduce the Sage command that creates an external direct product. If <code class="code-inline tex2jax_ignore">G</code> and <code class="code-inline tex2jax_ignore">H</code> are two permutation groups, then the command <code class="code-inline tex2jax_ignore">direct_product_permgroups([G,H])</code> will return the external direct product as a new permutation group. Notice that this is a function (not a method) and the input is a list. Rather than just combining two groups in the list, any number of groups can be supplied. We illustrate isomorphism testing and direct products in the context of Theorem 9.2.9, which is an equivalence, so tells us <em class="emphasis">exactly</em> when we have isomorphic groups. We use cyclic permutation groups as stand-ins for <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> by Theorem 9.1.8.</p>
            <p id="tAY">First, two isomorphic groups.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">m = 12
n = 7
gcd(m, n)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(m)
H = CyclicPermutationGroup(n)
dp = direct_product_permgroups([G, H])
K = CyclicPermutationGroup(m*n)
K.is_isomorphic(dp)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="ZIh">Now, two non-isomorphic groups.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">m = 15
n = 21
gcd(m, n)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(m)
H = CyclicPermutationGroup(n)
dp = direct_product_permgroups([G, H])
K = CyclicPermutationGroup(m*n)
K.is_isomorphic(dp)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="FPq">Notice how the simple computation of a greatest common divisor predicts the incredibly complicated computation of determining if two groups are isomorphic. This is a nice illustration of the power of mathematics, replacing a difficult problem (group isomorphism) by a simple one (factoring and divisibility of integers). Let us build one more direct product of cyclic groups, but with three groups, each with orders that are pairwise relatively prime.</p>
            <p id="lWz">If you try the following with larger parameters you may get an error (<code class="code-inline tex2jax_ignore">database_gap</code>).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">m = 6
n = 5
r = 7
G = CyclicPermutationGroup(m)
H = CyclicPermutationGroup(n)
L = CyclicPermutationGroup(r)
dp = direct_product_permgroups([G, H, L])
K = CyclicPermutationGroup(m*n*r)
K.is_isomorphic(dp)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
          </section>
          <section class="subsection" id="zLw">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">9.5.2</span> <span class="title">Classifying Finite Groups</span></div>
            <p id="SdI">Once we understand isomorphic groups as being the “same”, or “fundamentally no different,” or “structurally identical,” then it is natural to ask how many “really different” finite groups there are. Corollary 9.1.9 gives a partial answer: for each prime there is just one finite group, with <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth> as a concrete manifestation.</p>
            <p id="ykR">Let us embark on a quest to find all the groups of order less than <nemeth class="inline">⠼⠂⠖</nemeth> in Sage as permutation groups. For prime orders <nemeth class="inline">⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠢⠠⠀⠼⠶⠠⠀⠼⠂⠂</nemeth> and <nemeth class="inline">⠼⠂⠒</nemeth> we know there is really just one group each, and we can realize them all:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[CyclicPermutationGroup(p) for p in [1, 2, 3, 5, 7, 11, 13]]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[Cyclic group of order 1 as a permutation group,
 Cyclic group of order 2 as a permutation group,
 Cyclic group of order 3 as a permutation group,
 Cyclic group of order 5 as a permutation group,
 Cyclic group of order 7 as a permutation group,
 Cyclic group of order 11 as a permutation group,
 Cyclic group of order 13 as a permutation group]
</div>
            </article>
            <p id="esa">So now our smallest unknown case is order <nemeth class="inline">⠼⠲</nemeth>. Sage knows at least three such groups, and we can use Sage to check if any pair is isomorphic. Notice that since “isomorphic to” is an equivalence relation, and hence a transitive relation, the two tests below are sufficient.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(4)
H = KleinFourGroup()
T1 = CyclicPermutationGroup(2)
T2 = CyclicPermutationGroup(2)
K = direct_product_permgroups([T1, T2])
G.is_isomorphic(H)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.is_isomorphic(K)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="Kzj">So we have at least two different groups: <nemeth class="inline">⠸⠠⠵⠲</nemeth> and <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>, with the latter also known as the Klein 4-group. Sage will not be able to tell us if we have a <em class="emphasis">complete</em> list — this will always require theoretical results like Theorem 9.1.10. We will shortly have a more general result that handles the case of order <nemeth class="inline">⠼⠲</nemeth>, but right now, a careful analysis (by hand) of the possibilities for the Cayley table of a group of order <nemeth class="inline">⠼⠲</nemeth> should lead you to the two possibilities above as the only possibilities. Try to deduce what the Cayley table of an order <nemeth class="inline">⠼⠲</nemeth> group should look like, since you know about identity elements, inverses and cancellation.</p>
            <p id="qGs">We have seen at least two groups of order <nemeth class="inline">⠼⠖</nemeth> (next on our list of non-prime orders). One is abelian and one is not, so we do not need Sage to tell us they are structurally different. But let us do it anyway.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(6)
H = SymmetricGroup(3)
G.is_isomorphic(H)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="WNB">Is that all? There is <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠆</nemeth>, but that is just <nemeth class="inline">⠸⠠⠵⠖</nemeth> since <nemeth class="inline">⠼⠆</nemeth> and <nemeth class="inline">⠼⠒</nemeth> are relatively prime. The dihedral group, <nemeth class="inline">⠠⠙⠒</nemeth>, all symmetries of a triangle, is just <nemeth class="inline">⠠⠎⠒</nemeth>, the symmetric group on <nemeth class="inline">⠼⠒</nemeth> symbols.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(3)
H = SymmetricGroup(3)
G.is_isomorphic(H)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="CUK">Exercise 9.4.55 from this section classifies all groups of order <nemeth class="inline">⠼⠆⠏</nemeth>, where <i class="one-letter">p</i> is a prime. Such a group is either cyclic or a dihedral group. So the two groups above, <nemeth class="inline">⠸⠠⠵⠖</nemeth> and <nemeth class="inline">⠠⠙⠒</nemeth>, are the complete list of groups of order <nemeth class="inline">⠼⠖</nemeth>.</p>
            <p id="jbT">By this general result, in addition to order <nemeth class="inline">⠼⠖</nemeth>, we also know the complete lists of groups of orders <nemeth class="inline">⠼⠂⠴</nemeth> and <nemeth class="inline">⠼⠂⠲</nemeth>. To Be Continued.</p>
          </section>
          <section class="subsection" id="fSF">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">9.5.3</span> <span class="title">Internal Direct Products</span></div>
            <p id="Pjc">An internal direct product is a statement about subgroups of a single group, together with a theorem that links them to an external direct product. We will work an example here that will illustrate the nature of an internal direct product.</p>
            <p id="vql">Given an integer <i class="one-letter">n</i>, the set of positive integers less than <i class="one-letter">n</i>, and relatively prime to <i class="one-letter">n</i> forms a group under multiplication mod <i class="one-letter">n</i>. We will work in the set <code class="code-inline tex2jax_ignore">Integers(n)</code> where we can add <em class="emphasis">and</em> multiply, but we want to stay strictly with multiplication only.</p>
            <p id="bxu">First we build the subgroup itself. Notice how we must convert <code class="code-inline tex2jax_ignore">x</code> into an integer (an element of <code class="code-inline tex2jax_ignore">ZZ</code>) so that the greatest common divisor computation performs correctly.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z36 = Integers(36)
U = [x for x in Z36 if gcd(ZZ(x), 36) == 1]
U
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 5, 7, 11, 13, 17, 19, 23, 25, 29, 31, 35]
</div>
            </article>
            <p id="HED">So we have a group of order <nemeth class="inline">⠼⠂⠆</nemeth>. We are going to try to find a subgroup of order <nemeth class="inline">⠼⠖</nemeth> and a subgroup of order <nemeth class="inline">⠼⠆</nemeth> to form the internal direct product, and we will restrict our search initially to cyclic subgroups of order <nemeth class="inline">⠼⠖</nemeth>. Sage has a method that will give the order of each of these elements, relative to multiplication, so let us examine those next.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[x.multiplicative_order() for x in U]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 6, 6, 6, 3, 2, 2, 6, 3, 6, 6, 2]
</div>
            </article>
            <p id="nLM">We have many choices for generators of a cyclic subgroup of order <nemeth class="inline">⠼⠖</nemeth> and for a cyclic subgroup of order <nemeth class="inline">⠼⠆</nemeth>. Of course, some of the choices for a generator of the subgroup of order <nemeth class="inline">⠼⠖</nemeth> will generate the same subgroup. Can you tell, just by counting, how many subgroups of order <nemeth class="inline">⠼⠖</nemeth> there are? We are going to pick the first element of order <nemeth class="inline">⠼⠖</nemeth>, and the last element of order <nemeth class="inline">⠼⠆</nemeth>, for no particular reason. After your work through this once, we encourage you to try other choices to understand why some choices lead to an internal direct product and some do not. Notice that we choose the elements from the list <code class="code-inline tex2jax_ignore">U</code> so that they are sure to be elements of <code class="code-inline tex2jax_ignore">Z36</code> and behave properly when multiplied.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = U[1]
A = [a^i for i in srange(6)]
A
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 5, 25, 17, 13, 29]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = U[11]
B = [b^i for i in srange(2)]
B
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 35]
</div>
            </article>
            <p id="TSV">So <code class="code-inline tex2jax_ignore">A</code> and <code class="code-inline tex2jax_ignore">B</code> are two cyclic subgroups. Notice that their intersection is the identity element, one of our requirements for an internal direct product. So this is a good start.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[x for x in A if x in B]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1]
</div>
            </article>
            <p id="Aae"><code class="code-inline tex2jax_ignore">Z36</code> is an abelian group, thus the condition on all products commuting will hold, but we illustrate the Sage commands that will check this in a non-abelian situation.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">all([x*y == y*x for x in A for y in B])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="ghn">Finally, we need to check that by forming products with elements from <code class="code-inline tex2jax_ignore">A</code> and <code class="code-inline tex2jax_ignore">B</code> we create the entire group. Sorting the resulting list will make a check easier for us visually, and is required if we want Sage to do the check.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">T = sorted([x*y for x in A for y in B])
T
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 5, 7, 11, 13, 17, 19, 23, 25, 29, 31, 35]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">T == U
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="Mow">That's it. We now condense all this information into the statement that “<code class="code-inline tex2jax_ignore">U</code> is the internal direct product of <code class="code-inline tex2jax_ignore">A</code> and <code class="code-inline tex2jax_ignore">B</code>.” By Theorem 9.2.15, we see that <code class="code-inline tex2jax_ignore">U</code> is isomorphic to a product of a cyclic group of order <nemeth class="inline">⠼⠖</nemeth> and a cyclic group of order <nemeth class="inline">⠼⠆</nemeth>. So in a very real sense, <code class="code-inline tex2jax_ignore">U</code> is no more or less complicated than <nemeth class="inline">⠸⠠⠵⠖⠈⠡⠸⠠⠵⠆</nemeth>, which is in turn isomorphic to <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>. So we totally understand the “structure” of <code class="code-inline tex2jax_ignore">U</code>. For example, we can see that <code class="code-inline tex2jax_ignore">U</code> is not cyclic, since when written as a product of cyclic groups, the two orders are not relatively prime. The final expression of <code class="code-inline tex2jax_ignore">U</code> suggests you could find three cyclic subgroups of <code class="code-inline tex2jax_ignore">U</code>, with orders <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠆</nemeth> and <nemeth class="inline">⠼⠆</nemeth>, so that <code class="code-inline tex2jax_ignore">U</code> is an internal direct product of the three subgroups.</p>
          </section>
        </section>
        <section class="exercises" id="sgX">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">9.6</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="PiP">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="GUJ">This exercise is about putting Cayley's Theorem into practice. First, read and study the theorem. Realize that this result by itself is primarily of theoretical interest, but with some more theory we could get into some subtler aspects of this (a subject known as “representation theory”).</p>
            <p id="nbS">You should create these representations mostly with pencil-and-paper work, using Sage as a fancy calculator and assistant. You do not need to include all these computations in your worksheet. Build the requested group representations and then include enough verifications in Sage to prove that that your representation correctly represents the group.</p>
            <p id="Tjb">Begin by building a permutation representation of the quaternions, <i class="one-letter">Q</i>. There are eight elements in <i class="one-letter">Q</i> (<nemeth class="inline">⠬⠤⠼⠂⠠⠀⠬⠤⠠⠊⠠⠀⠬⠤⠠⠚⠠⠀⠬⠤⠠⠅</nemeth>), so you will be constructing a subgroup of <nemeth class="inline">⠠⠎⠦</nemeth>. For each <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠟</nemeth> form the function <nemeth class="inline">⠠⠞⠰⠛</nemeth>, defined as <nemeth class="inline">⠠⠞⠰⠛⠐⠷⠭⠾⠀⠨⠅⠀⠭⠛</nemeth>. Notice that this definition is the “reverse” of that given in the text. This is because Sage composes permutations left-to-right, while your text composes right-to-left. To create the permutations <nemeth class="inline">⠠⠞⠰⠛</nemeth>, the two-line version of writing permutations could be very useful as an intermediate step. You will probably want to “code” each element of <i class="one-letter">Q</i> with an integer in <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠼⠦⠨⠾</nemeth>.</p>
            <p id="zqk">One such representation is included in Sage as <code class="code-inline tex2jax_ignore">QuaternionGroup()</code> — your answer should look very similar, but perhaps not identical. Do not submit your answer for a representation of the quaternions, but I strongly suggest working this particular group representation until you are sure you have it right — the problems below might be very difficult otherwise. You can use Sage's <code class="code-inline tex2jax_ignore">.is_isomorphic()</code> method to check if your representations are correct. However, do not use this as a substitute for the part of each question that asks you to investigate properties of your representation towards this end.</p>
            <ol class="outerlist">
              <li>a. <p id="soo">Build the permutation representation of <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠲</nemeth> described in Cayley's Theorem. (Remember that this group is additive, while the theorem uses multiplicative notation.) Include the representation of <em class="emphasis">each</em> of the <nemeth class="inline">⠼⠦</nemeth> elements in your submitted work. Then construct the permutation group as a subgroup of a full symmetric group that is generated by exactly two of the eight elements you have already constructed. Hint: which two elements of <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠲</nemeth> might you use to generate all of <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠲</nemeth>? Use commands in Sage to investigate various properties of your permutation group, other than just <code class="code-inline tex2jax_ignore">.list()</code>, to provide evidence that your subgroup is correct — include these in your submitted worksheet.</p></li>
              <li>b. <p id="Yvx">Build a permutation representation of <nemeth class="inline">⠠⠥⠷⠼⠆⠲⠾</nemeth>, the group of units mod 24. Again, list a representation of <em class="emphasis">each</em> element in your submitted work. Then construct the group as a subgroup of a full symmetric group created with three generators. To determine these three generators, you will likely need to understand <nemeth class="inline">⠠⠥⠷⠼⠆⠲⠾</nemeth> as an internal direct product. Use commands in Sage to investigate various properties of your group, other than just <code class="code-inline tex2jax_ignore">.list()</code>, to provide evidence that your subgroup is correct — include these in your submitted worksheet.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="vpY">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="fxt">Consider the symmetries of a 10-gon, <nemeth class="inline">⠠⠙⠂⠴</nemeth> in your text, <code class="code-inline tex2jax_ignore">DihedralGroup(10)</code> in Sage. Presume that the vertices of the 10-gon have been labeled <nemeth class="inline">⠼⠂</nemeth> through <nemeth class="inline">⠼⠂⠴</nemeth> in order. Identify the permutation that is a <nemeth class="inline">⠼⠂⠦⠴</nemeth> degree rotation and use it to generate a subgroup <i class="one-letter">R</i> of order <nemeth class="inline">⠼⠆</nemeth>. Then identify the permutation that is a <nemeth class="inline">⠼⠶⠆</nemeth> degree rotation, and any one of the ten permutations that are a reflection of the <nemeth class="inline">⠼⠂⠴</nemeth>-gon about a line. Use these latter two permutations to generate a subgroup <i class="one-letter">S</i> of order <nemeth class="inline">⠼⠂⠴</nemeth>. Use Sage to verify that the full dihedral group is the internal direct product of the subgroups <i class="one-letter">R</i> and <i class="one-letter">S</i> by checking the conditions in the definition of an internal direct product.</p>
            <p id="LEC">We have a theorem which says that if a group is an internal direct product, then it is isomorphic to some external direct product. Understand that this does not mean that you can use the converse in this problem. In other words, establishing an isomorphism of <i class="one-letter">G</i> with an external direct product <em class="emphasis">does not prove</em> that <i class="one-letter">G</i> is an internal direct product.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="xiL">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">10</span> <span class="title">Normal Subgroups and Factor Groups</span></div>
        <section class="introduction" id="ntA">
          <p id="HPh">If <i class="one-letter">H</i> is a subgroup of a group <i class="one-letter">G</i>, then right cosets are not always the same as left cosets; that is, it is not always the case that <nemeth class="inline">⠛⠠⠓⠀⠨⠅⠀⠠⠓⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. The subgroups for which this property holds play a critical role in group theory—they allow for the construction of a new class of groups, called factor or quotient groups. Factor groups may be studied directly or by using homomorphisms, a generalization of isomorphisms. We will study homomorphisms in Chapter 11.</p>
        </section>
        <section class="section" id="avo">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">10.1</span> <span class="title">Factor Groups and Normal Subgroups</span></div>
          <section class="subsection" id="dpU">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">10.1.1</span> <span class="title">Normal Subgroups</span></div>
            <p id="fmy">A subgroup <i class="one-letter">H</i> of a group <i class="one-letter">G</i> is <dfn class="terminology">normal</dfn>  in G if <nemeth class="inline">⠛⠠⠓⠀⠨⠅⠀⠠⠓⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. That is, a normal subgroup of a group <i class="one-letter">G</i> is one in which the right and left cosets are precisely the same.</p>
            <article class="example example-like" data-braille="example-like" id="yXY">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">10.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="eCE">Let <i class="one-letter">G</i> be an abelian group. Every subgroup <i class="one-letter">H</i> of <i class="one-letter">G</i> is a normal subgroup. Since <nemeth class="inline">⠛⠓⠀⠨⠅⠀⠓⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth>, it will always be the case that <nemeth class="inline">⠛⠠⠓⠀⠨⠅⠀⠠⠓⠛</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="ffh">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">10.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="KJN">Let <i class="one-letter">H</i> be the subgroup of <nemeth class="inline">⠠⠎⠒</nemeth> consisting of elements <nemeth class="inline">⠷⠼⠂⠾</nemeth> and <nemeth class="inline">⠷⠼⠂⠆⠾</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠂⠆⠒⠾⠠⠓⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠾⠨⠾⠁⠝⠙⠠⠓⠷⠼⠂⠆⠒⠾⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠆⠒⠾⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">, <i class="one-letter">H</i> cannot be a normal subgroup of <nemeth class="inline">⠠⠎⠒</nemeth>. However, the subgroup <i class="one-letter">N</i>, consisting of the permutations <nemeth class="inline">⠷⠼⠂⠾</nemeth>, <nemeth class="inline">⠷⠼⠂⠆⠒⠾</nemeth>, and <nemeth class="inline">⠷⠼⠂⠒⠆⠾</nemeth>, is normal since the cosets of <i class="one-letter">N</i> are</p>
              <div class="displaymath">
                <nemeth>⠠⠝⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾⠀⠷⠼⠂⠆⠾⠠⠝⠀⠨⠅⠀⠠⠝⠷⠼⠂⠆⠾⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠆⠒⠾⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="LtH">The following theorem is fundamental to our understanding of normal subgroups.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="SQP">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">10.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="tLC">Let <i class="one-letter">G</i> be a group and <i class="one-letter">N</i> be a subgroup of <i class="one-letter">G</i>. Then the following statements are equivalent.</p>
              <ol class="outerlist">
                <li>1. <p id="iYc">The subgroup <i class="one-letter">N</i> is normal in <i class="one-letter">G</i>.</p></li>
                <li>2. <p id="Pfl">For all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, <nemeth class="inline">⠛⠠⠝⠛⠘⠤⠼⠂⠀⠸⠐⠅⠀⠠⠝</nemeth>.</p></li>
                <li>3. <p id="vmu">For all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, <nemeth class="inline">⠛⠠⠝⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠝</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="fPb">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="EkH">(1) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (2). Since <i class="one-letter">N</i> is normal in <i class="one-letter">G</i>, <nemeth class="inline">⠛⠠⠝⠀⠨⠅⠀⠠⠝⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Hence, for a given <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠝</nemeth>, there exists an <nemeth class="inline">⠝⠄</nemeth> in <i class="one-letter">N</i> such that <nemeth class="inline">⠛⠝⠀⠨⠅⠀⠝⠘⠄⠐⠛</nemeth>. Therefore, <nemeth class="inline">⠛⠝⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠝⠘⠄⠐⠀⠈⠑⠀⠠⠝</nemeth> or <nemeth class="inline">⠛⠠⠝⠛⠘⠤⠼⠂⠀⠸⠐⠅⠀⠠⠝</nemeth>.</p>
              <p id="krQ">(2) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (3). Let <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Since <nemeth class="inline">⠛⠠⠝⠛⠘⠤⠼⠂⠀⠸⠐⠅⠀⠠⠝</nemeth>, we need only show <nemeth class="inline">⠠⠝⠀⠸⠐⠅⠀⠛⠠⠝⠛⠘⠤⠼⠂</nemeth>. For <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠝</nemeth>, <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠝⠛⠀⠨⠅⠀⠛⠘⠤⠼⠂⠐⠝⠷⠛⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠈⠑⠀⠠⠝</nemeth>. Hence, <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠝⠛⠀⠨⠅⠀⠝⠄</nemeth> for some <nemeth class="inline">⠝⠘⠄⠐⠀⠈⠑⠀⠠⠝</nemeth>. Therefore, <nemeth class="inline">⠝⠀⠨⠅⠀⠛⠝⠘⠄⠐⠛⠘⠤⠼⠂</nemeth> is in <nemeth class="inline">⠛⠠⠝⠛⠘⠤⠼⠂</nemeth>.</p>
              <p id="QyZ">(3) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (1). Suppose that <nemeth class="inline">⠛⠠⠝⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠝</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Then for any <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠝</nemeth> there exists an <nemeth class="inline">⠝⠘⠄⠐⠀⠈⠑⠀⠠⠝</nemeth> such that <nemeth class="inline">⠛⠝⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠝⠄</nemeth>. Consequently, <nemeth class="inline">⠛⠝⠀⠨⠅⠀⠝⠘⠄⠐⠛</nemeth> or <nemeth class="inline">⠛⠠⠝⠀⠸⠐⠅⠀⠠⠝⠛</nemeth>. Similarly, <nemeth class="inline">⠠⠝⠛⠀⠸⠐⠅⠀⠛⠠⠝</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="Jxd">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">10.1.2</span> <span class="title">Factor Groups</span></div>
            <p id="rAQ">If <i class="one-letter">N</i> is a normal subgroup of a group <i class="one-letter">G</i>, then the cosets of <i class="one-letter">N</i> in <i class="one-letter">G</i> form a group <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> under the operation <nemeth class="inline">⠷⠁⠠⠝⠾⠷⠃⠠⠝⠾⠀⠨⠅⠀⠁⠃⠠⠝</nemeth>. This group is called the <dfn class="terminology">factor</dfn>  or <dfn class="terminology">quotient group</dfn>  of <i class="one-letter">G</i> and <i class="one-letter">N</i>.  Our first task is to prove that <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> is indeed a group.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="Lmq">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">10.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="ZSL">Let <i class="one-letter">N</i> be a normal subgroup of a group <i class="one-letter">G</i>. The cosets of <i class="one-letter">N</i> in <i class="one-letter">G</i> form a group <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> of order <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠝⠈⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="LWk">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="wGi">The group operation on <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> is <nemeth class="inline">⠷⠁⠠⠝⠾⠷⠃⠠⠝⠾⠀⠨⠅⠀⠁⠃⠠⠝</nemeth>. This operation must be shown to be well-defined; that is, group multiplication must be independent of the choice of  coset representative. Let <nemeth class="inline">⠁⠠⠝⠀⠨⠅⠀⠃⠠⠝</nemeth> and <nemeth class="inline">⠉⠠⠝⠀⠨⠅⠀⠙⠠⠝</nemeth>. We must show that</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠠⠝⠾⠷⠉⠠⠝⠾⠀⠨⠅⠀⠁⠉⠠⠝⠀⠨⠅⠀⠃⠙⠠⠝⠀⠨⠅⠀⠷⠃⠠⠝⠾⠷⠙⠠⠝⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠝⠂</nemeth> and <nemeth class="inline">⠉⠀⠨⠅⠀⠙⠝⠆</nemeth> for some <nemeth class="inline">⠝⠂</nemeth> and <nemeth class="inline">⠝⠆</nemeth> in <i class="one-letter">N</i>. Hence,</p>
              <div class="displaymath">
                <nemeth>⠁⠉⠠⠝⠀⠀⠨⠅⠀⠃⠝⠂⠙⠝⠆⠠⠝⠀⠀⠀⠀⠨⠅⠀⠃⠝⠂⠙⠠⠝⠀⠀⠀⠀⠨⠅⠀⠃⠝⠂⠠⠝⠙⠀⠀⠀⠀⠨⠅⠀⠃⠠⠝⠙⠀⠀⠀⠀⠨⠅⠀⠃⠙⠠⠝</nemeth>
              </div>
              <p data-braille="continuation">. The remainder of the theorem is easy: <nemeth class="inline">⠑⠠⠝⠀⠨⠅⠀⠠⠝</nemeth> is the identity and <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠠⠝</nemeth> is the inverse of <nemeth class="inline">⠛⠠⠝</nemeth>. The order of <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> is, of course, the number of cosets of <i class="one-letter">N</i> in <i class="one-letter">G</i>.</p>
            </article>
            <p id="XHZ">It is very important to remember that the elements in a factor group are <em class="emphasis">sets of elements</em> in the original group.</p>
            <article class="example example-like" data-braille="example-like" id="rtz">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">10.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="qQW">Consider the normal subgroup of <nemeth class="inline">⠠⠎⠒</nemeth>, <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth>. The cosets of <i class="one-letter">N</i> in <nemeth class="inline">⠠⠎⠒</nemeth> are <i class="one-letter">N</i> and <nemeth class="inline">⠷⠼⠂⠆⠾⠠⠝</nemeth>. The factor group <nemeth class="inline">⠠⠎⠒⠸⠌⠠⠝</nemeth> has the following multiplication table.</p>
              <div class="sidebyside">
                <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
                  <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                    <div class="displaymath">
                      <nemeth>⠀⠀⠠⠝⠀⠷⠂⠆⠾⠠⠝⠀⠠⠝⠀⠠⠝⠀⠷⠂⠆⠾⠠⠝⠀⠷⠂⠆⠾⠠⠝⠀⠷⠂⠆⠾⠠⠝⠀⠠⠝</nemeth>
                    </div>
                  </div>
                </div>
              </div>
              <p id="Dfo">This group is isomorphic to <nemeth class="inline">⠸⠠⠵⠆</nemeth>. At first, multiplying cosets seems both complicated and strange; however, notice that <nemeth class="inline">⠠⠎⠒⠸⠌⠠⠝</nemeth> is a smaller group. The factor group displays a certain amount of information about <nemeth class="inline">⠠⠎⠒</nemeth>. Actually, <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠠⠁⠒</nemeth>, the group of even permutations, and <nemeth class="inline">⠷⠼⠂⠆⠾⠠⠝⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠆⠒⠾⠨⠾</nemeth> is the set of odd permutations. The information captured in <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> is parity; that is, multiplying two even or two odd permutations results in an even permutation, whereas multiplying an odd permutation by an even permutation yields an odd permutation.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="XAI">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">10.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="jmx">Consider the normal subgroup <nemeth class="inline">⠼⠒⠸⠠⠵</nemeth> of <nemeth class="inline">⠸⠠⠵</nemeth>. The cosets of <nemeth class="inline">⠼⠒⠸⠠⠵</nemeth> in <nemeth class="inline">⠸⠠⠵</nemeth> are</p>
              <div class="displaymath">
                <nemeth>⠼⠴⠬⠒⠸⠠⠵⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠒⠠⠀⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠄⠄⠄⠨⠾⠀⠂⠬⠒⠸⠠⠵⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠆⠠⠀⠼⠂⠠⠀⠼⠲⠠⠀⠼⠶⠠⠀⠄⠄⠄⠨⠾⠀⠆⠬⠒⠸⠠⠵⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠆⠠⠀⠼⠢⠠⠀⠼⠦⠠⠀⠄⠄⠄⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. The group <nemeth class="inline">⠸⠠⠵⠸⠌⠒⠸⠠⠵</nemeth> is given by the Cayley table below.</p>
              <div class="sidebyside">
                <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
                  <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                    <div class="displaymath">
                      <nemeth>⠬⠀⠴⠬⠒⠸⠠⠵⠀⠂⠬⠒⠸⠠⠵⠀⠆⠬⠒⠸⠠⠵⠀⠴⠬⠒⠸⠠⠵⠀⠴⠬⠒⠸⠠⠵⠀⠂⠬⠒⠸⠠⠵⠀⠆⠬⠒⠸⠠⠵⠀⠂⠬⠒⠸⠠⠵⠀⠂⠬⠒⠸⠠⠵⠀⠆⠬⠒⠸⠠⠵⠀⠴⠬⠒⠸⠠⠵⠀⠆⠬⠒⠸⠠⠵⠀⠆⠬⠒⠸⠠⠵⠀⠴⠬⠒⠸⠠⠵⠀⠂⠬⠒⠸⠠⠵</nemeth>
                    </div>
                  </div>
                </div>
              </div>
              <p id="vAP">In general, the subgroup <nemeth class="inline">⠝⠸⠠⠵</nemeth> of <nemeth class="inline">⠸⠠⠵</nemeth> is normal. The cosets of <nemeth class="inline">⠸⠠⠵⠸⠌⠝⠸⠠⠵</nemeth> are</p>
              <div class="displaymath">
                <nemeth>⠝⠸⠠⠵⠀⠂⠬⠝⠸⠠⠵⠀⠆⠬⠝⠸⠠⠵⠀⠣⠄⠄⠄⠀⠷⠝⠤⠂⠾⠬⠝⠸⠠⠵</nemeth>
              </div>
              <p data-braille="continuation">. The sum of the cosets <nemeth class="inline">⠅⠬⠝⠸⠠⠵</nemeth> and <nemeth class="inline">⠇⠬⠝⠸⠠⠵</nemeth> is <nemeth class="inline">⠅⠬⠇⠬⠝⠸⠠⠵</nemeth>. Notice that we have written our cosets additively, because the group operation is integer addition.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="DHR">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">10.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="bHY">Consider the dihedral group <nemeth class="inline">⠠⠙⠰⠝</nemeth>, generated by the two elements <i class="one-letter">r</i> and <i class="one-letter">s</i>, satisfying the relations</p>
              <div class="displaymath">
                <nemeth>⠗⠘⠝⠀⠀⠨⠅⠀⠊⠙⠀⠎⠘⠆⠀⠀⠨⠅⠀⠊⠙⠀⠎⠗⠎⠀⠀⠨⠅⠀⠗⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. The element <i class="one-letter">r</i> actually generates the cyclic subgroup of rotations, <nemeth class="inline">⠠⠗⠰⠝</nemeth>, of <nemeth class="inline">⠠⠙⠰⠝</nemeth>. Since <nemeth class="inline">⠎⠗⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠎⠗⠎⠀⠨⠅⠀⠗⠘⠤⠼⠂⠐⠀⠈⠑⠀⠠⠗⠰⠝</nemeth>, the group of rotations is a normal subgroup of <nemeth class="inline">⠠⠙⠰⠝</nemeth>; therefore, <nemeth class="inline">⠠⠙⠰⠝⠐⠸⠌⠠⠗⠰⠝</nemeth> is a group. Since there are exactly two elements in this group, it must be isomorphic to <nemeth class="inline">⠸⠠⠵⠆</nemeth>.</p>
            </article>
          </section>
        </section>
        <section class="section" id="GCx">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">10.2</span> <span class="title">The Simplicity of the Alternating Group</span></div>
          <section class="introduction" id="TAJ">
            <p id="nWq">Of special interest are groups with no nontrivial normal subgroups. Such groups are called <dfn class="terminology">simple groups</dfn>.  Of course, we already have a whole class of examples of simple groups, <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>, where <i class="one-letter">p</i> is prime. These groups are trivially simple since they have no proper subgroups other than the subgroup consisting solely of the identity. Other examples of simple groups are not so easily found. We can, however, show that the alternating group, <nemeth class="inline">⠠⠁⠰⠝</nemeth>, is simple for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth>. The proof of this result requires several lemmas.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="uXZ">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">10.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="mhd">The alternating group <nemeth class="inline">⠠⠁⠰⠝</nemeth> is generated by <nemeth class="inline">⠼⠒</nemeth>-cycles for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="YkC">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="cNr">To show that the <nemeth class="inline">⠼⠒</nemeth>-cycles generate <nemeth class="inline">⠠⠁⠰⠝</nemeth>, we need only show that any pair of transpositions can be written as the product of <nemeth class="inline">⠼⠒</nemeth>-cycles. Since <nemeth class="inline">⠷⠁⠃⠾⠀⠨⠅⠀⠷⠃⠁⠾</nemeth>, every pair of transpositions must be one of the following:</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠃⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠊⠙⠀⠷⠁⠃⠾⠷⠉⠙⠾⠀⠀⠨⠅⠀⠷⠁⠉⠃⠾⠷⠁⠉⠙⠾⠀⠷⠁⠃⠾⠷⠁⠉⠾⠀⠀⠨⠅⠀⠷⠁⠉⠃⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="bfi">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">10.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="Som">Let <i class="one-letter">N</i> be a normal subgroup of <nemeth class="inline">⠠⠁⠰⠝</nemeth>, where <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>. If <i class="one-letter">N</i> contains a <nemeth class="inline">⠼⠒</nemeth>-cycle, then <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠠⠁⠰⠝</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ErL">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="IUA">We will first show that <nemeth class="inline">⠠⠁⠰⠝</nemeth> is generated by <nemeth class="inline">⠼⠒</nemeth>-cycles of the specific form <nemeth class="inline">⠷⠊⠚⠅⠾</nemeth>, where <i class="one-letter">i</i> and <i class="one-letter">j</i> are fixed in <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝⠨⠾</nemeth> and we let <i class="one-letter">k</i> vary. Every <nemeth class="inline">⠼⠒</nemeth>-cycle is the product of <nemeth class="inline">⠼⠒</nemeth>-cycles of this form, since</p>
              <div class="displaymath">
                <nemeth>⠷⠊⠁⠚⠾⠀⠀⠨⠅⠀⠷⠊⠚⠁⠾⠘⠆⠐⠀⠷⠊⠁⠃⠾⠀⠀⠨⠅⠀⠷⠊⠚⠃⠾⠷⠊⠚⠁⠾⠘⠆⠐⠀⠷⠚⠁⠃⠾⠀⠀⠨⠅⠀⠷⠊⠚⠃⠾⠘⠆⠐⠷⠊⠚⠁⠾⠀⠷⠁⠃⠉⠾⠀⠀⠨⠅⠀⠷⠊⠚⠁⠾⠘⠆⠐⠷⠊⠚⠉⠾⠷⠊⠚⠃⠾⠘⠆⠐⠷⠊⠚⠁⠾</nemeth>
              </div>
              <p data-braille="continuation">. Now suppose that <i class="one-letter">N</i> is a nontrivial normal subgroup of <nemeth class="inline">⠠⠁⠰⠝</nemeth> for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth> such that <i class="one-letter">N</i> contains a <nemeth class="inline">⠼⠒</nemeth>-cycle of the form <nemeth class="inline">⠷⠊⠚⠁⠾</nemeth>. Using the normality of <i class="one-letter">N</i>, we see that</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠷⠊⠚⠾⠷⠁⠅⠾⠈⠾⠷⠊⠚⠁⠾⠘⠆⠐⠈⠷⠷⠊⠚⠾⠷⠁⠅⠾⠈⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠊⠚⠅⠾</nemeth>
              </div>
              <p data-braille="continuation">is in <i class="one-letter">N</i>. Hence, <i class="one-letter">N</i> must contain all of the <nemeth class="inline">⠼⠒</nemeth>-cycles <nemeth class="inline">⠷⠊⠚⠅⠾</nemeth>  for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠱⠀⠝</nemeth>. By Lemma 10.2.1, these <nemeth class="inline">⠼⠒</nemeth>-cycles generate <nemeth class="inline">⠠⠁⠰⠝</nemeth>; hence, <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠠⠁⠰⠝</nemeth>.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="Hmr">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">10.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="yvv">For <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth>, every nontrivial normal subgroup <i class="one-letter">N</i> of <nemeth class="inline">⠠⠁⠰⠝</nemeth> contains a <nemeth class="inline">⠼⠒</nemeth>-cycle.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="kyU">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="pbJ">Let <nemeth class="inline">⠨⠎</nemeth> be an arbitrary element in a normal subgroup <i class="one-letter">N</i>. There are several possible cycle structures for <nemeth class="inline">⠨⠎</nemeth>.</p>
              <ul class="outerlist">
                <li>• <p id="btD"><nemeth class="inline">⠨⠎</nemeth> is a <nemeth class="inline">⠼⠒</nemeth>-cycle.</p></li>
                <li>• <p id="HAM"><nemeth class="inline">⠨⠎</nemeth> is the product of disjoint cycles, <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠀⠄⠄⠄⠀⠁⠰⠗⠐⠾⠀⠈⠑⠀⠠⠝</nemeth>, where <nemeth class="inline">⠗⠀⠨⠂⠀⠼⠒</nemeth>.</p></li>
                <li>• <p id="nHV"><nemeth class="inline">⠨⠎</nemeth> is the product of disjoint cycles, <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠁⠒⠾⠷⠁⠲⠁⠢⠁⠖⠾</nemeth>.</p></li>
                <li>• <p id="TPe"><nemeth class="inline">⠨⠎⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠁⠒⠾</nemeth>, where <nemeth class="inline">⠨⠞</nemeth> is the product of disjoint 2-cycles.</p></li>
                <li>• <p id="zWn"><nemeth class="inline">⠨⠎⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠾⠷⠁⠒⠁⠲⠾</nemeth>, where <nemeth class="inline">⠨⠞</nemeth> is the product of an even number of disjoint 2-cycles.</p></li>
              </ul>
              <p data-braille="continuation">If <nemeth class="inline">⠨⠎</nemeth> is a <nemeth class="inline">⠼⠒</nemeth>-cycle, then we are done. If <i class="one-letter">N</i> contains a product of disjoint cycles, <nemeth class="inline">⠨⠎</nemeth>, and at least one of these cycles has length greater than 3, say <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠀⠄⠄⠄⠀⠁⠰⠗⠐⠾</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠂⠁⠆⠁⠒⠾⠨⠎⠷⠁⠂⠁⠆⠁⠒⠾⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">is in <i class="one-letter">N</i> since <i class="one-letter">N</i> is normal; hence,</p>
              <div class="displaymath">
                <nemeth>⠎⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠒⠾⠎⠷⠁⠂⠁⠆⠁⠒⠾⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">is also in <i class="one-letter">N</i>. Since</p>
              <div class="displaymath">
                <nemeth>⠎⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠒⠾⠎⠷⠁⠂⠁⠆⠁⠒⠾⠘⠤⠼⠂⠀⠀⠨⠅⠀⠎⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠒⠾⠎⠷⠁⠂⠁⠒⠁⠆⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠂⠁⠆⠀⠄⠄⠄⠀⠁⠰⠗⠐⠾⠘⠤⠼⠂⠐⠞⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠒⠾⠞⠷⠁⠂⠁⠆⠀⠄⠄⠄⠀⠁⠰⠗⠐⠾⠷⠁⠂⠁⠒⠁⠆⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠂⠁⠰⠗⠐⠁⠰⠗⠤⠂⠐⠀⠄⠄⠄⠀⠁⠆⠾⠷⠁⠂⠁⠆⠁⠒⠾⠷⠁⠂⠁⠆⠀⠄⠄⠄⠀⠁⠰⠗⠐⠾⠷⠁⠂⠁⠒⠁⠆⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠂⠁⠒⠁⠰⠗⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">, <i class="one-letter">N</i> must contain a <nemeth class="inline">⠼⠒</nemeth>-cycle; hence, <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠠⠁⠰⠝</nemeth>.</p>
              <p id="ViS">Now suppose that <i class="one-letter">N</i> contains a disjoint product of the form</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠁⠒⠾⠷⠁⠲⠁⠢⠁⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then</p>
              <div class="displaymath">
                <nemeth>⠎⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠲⠾⠎⠷⠁⠂⠁⠆⠁⠲⠾⠘⠤⠼⠂⠀⠈⠑⠀⠠⠝</nemeth>
              </div>
              <p data-braille="continuation">since</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠂⠁⠆⠁⠲⠾⠨⠎⠷⠁⠂⠁⠆⠁⠲⠾⠘⠤⠼⠂⠀⠈⠑⠀⠠⠝</nemeth>
              </div>
              <p data-braille="continuation">. So</p>
              <div class="displaymath">
                <nemeth>⠎⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠲⠾⠎⠷⠁⠂⠁⠆⠁⠲⠾⠘⠤⠼⠂⠀⠀⠨⠅⠀⠈⠷⠞⠷⠁⠂⠁⠆⠁⠒⠾⠷⠁⠲⠁⠢⠁⠖⠾⠈⠾⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠲⠾⠞⠷⠁⠂⠁⠆⠁⠒⠾⠷⠁⠲⠁⠢⠁⠖⠾⠷⠁⠂⠁⠆⠁⠲⠾⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠷⠁⠲⠁⠖⠁⠢⠾⠷⠁⠂⠁⠒⠁⠆⠾⠞⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠲⠾⠞⠷⠁⠂⠁⠆⠁⠒⠾⠷⠁⠲⠁⠢⠁⠖⠾⠷⠁⠂⠁⠲⠁⠆⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠲⠁⠖⠁⠢⠾⠷⠁⠂⠁⠒⠁⠆⠾⠷⠁⠂⠁⠆⠁⠲⠾⠷⠁⠂⠁⠆⠁⠒⠾⠷⠁⠲⠁⠢⠁⠖⠾⠷⠁⠂⠁⠲⠁⠆⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠂⠁⠲⠁⠆⠁⠖⠁⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">. So <i class="one-letter">N</i> contains a disjoint cycle of length greater than 3, and we can apply the previous case.</p>
              <p id="Bqb">Suppose <i class="one-letter">N</i> contains a disjoint product of the form <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠁⠒⠾</nemeth>, where <nemeth class="inline">⠨⠞</nemeth> is the product of disjoint 2-cycles. Since <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠝</nemeth>, <nemeth class="inline">⠨⠎⠘⠆⠐⠀⠈⠑⠀⠠⠝</nemeth>, and</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠘⠆⠀⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠁⠒⠾⠞⠷⠁⠂⠁⠆⠁⠒⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠂⠁⠒⠁⠆⠾</nemeth>
              </div>
              <p data-braille="continuation">. So <i class="one-letter">N</i> contains a <nemeth class="inline">⠼⠒</nemeth>-cycle.</p>
              <p id="hxk">The only remaining possible case is a disjoint product of the form</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠞⠷⠁⠂⠁⠆⠾⠷⠁⠒⠁⠲⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠨⠞</nemeth> is the product of an even number of disjoint <nemeth class="inline">⠼⠆</nemeth>-cycles. But</p>
              <div class="displaymath">
                <nemeth>⠎⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠒⠾⠎⠷⠁⠂⠁⠆⠁⠒⠾⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">is in <i class="one-letter">N</i> since <nemeth class="inline">⠷⠁⠂⠁⠆⠁⠒⠾⠨⠎⠷⠁⠂⠁⠆⠁⠒⠾⠘⠤⠼⠂</nemeth> is in <i class="one-letter">N</i>; and so</p>
              <div class="displaymath">
                <nemeth>⠎⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠁⠒⠾⠎⠷⠁⠂⠁⠆⠁⠒⠾⠘⠤⠼⠂⠀⠀⠨⠅⠀⠞⠘⠤⠼⠂⠐⠷⠁⠂⠁⠆⠾⠷⠁⠒⠁⠲⠾⠷⠁⠂⠁⠆⠁⠒⠾⠞⠷⠁⠂⠁⠆⠾⠷⠁⠒⠁⠲⠾⠷⠁⠂⠁⠆⠁⠒⠾⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠷⠁⠂⠁⠒⠾⠷⠁⠆⠁⠲⠾</nemeth>
              </div>
              <p data-braille="continuation">. Since <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth>, we can find <nemeth class="inline">⠃⠀⠈⠑⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝⠨⠾</nemeth> such that <nemeth class="inline">⠃⠀⠌⠨⠅⠀⠁⠂⠠⠀⠁⠆⠠⠀⠁⠒⠠⠀⠁⠲</nemeth>. Let <nemeth class="inline">⠨⠍⠀⠨⠅⠀⠷⠁⠂⠁⠒⠃⠾</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠍⠘⠤⠼⠂⠐⠷⠁⠂⠁⠒⠾⠷⠁⠆⠁⠲⠾⠍⠷⠁⠂⠁⠒⠾⠷⠁⠆⠁⠲⠾⠀⠈⠑⠀⠠⠝</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠍⠘⠤⠼⠂⠐⠷⠁⠂⠁⠒⠾⠷⠁⠆⠁⠲⠾⠍⠷⠁⠂⠁⠒⠾⠷⠁⠆⠁⠲⠾⠀⠀⠨⠅⠀⠷⠁⠂⠃⠁⠒⠾⠷⠁⠂⠁⠒⠾⠷⠁⠆⠁⠲⠾⠷⠁⠂⠁⠒⠃⠾⠷⠁⠂⠁⠒⠾⠷⠁⠆⠁⠲⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠂⠁⠒⠃⠾</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <i class="one-letter">N</i> contains a <nemeth class="inline">⠼⠒</nemeth>-cycle. This completes the proof of the lemma.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="OQQ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">10.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="FZU">The alternating group, <nemeth class="inline">⠠⠁⠰⠝</nemeth>, is simple for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="sdt">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="NEt">Let <i class="one-letter">N</i> be a normal subgroup of <nemeth class="inline">⠠⠁⠰⠝</nemeth>. By Lemma 10.2.3, <i class="one-letter">N</i> contains a <nemeth class="inline">⠼⠒</nemeth>-cycle. By Lemma 10.2.2, <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠠⠁⠰⠝</nemeth>; therefore, <nemeth class="inline">⠠⠁⠰⠝</nemeth> contains no proper nontrivial normal subgroups for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth>.</p>
            </article>
            <article class="paragraphs" id="uof">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="Udz">Sage can easily determine if a subgroup is normal or not. If so, it can create the quotient group. However, the construction creates a new permuation group, isomorphic to the quotient group, so its utility is limited.</p>
            </article>
          </section>
          <section class="subsection" id="pEm">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">10.2.1</span> <span class="title">Historical Note</span></div>
            <p id="DPi">One of the foremost problems of group theory has been to classify all simple finite groups.  This problem is over a century old and has been solved only in the last few decades of the twentieth century. In a sense, finite simple groups are the building blocks of all finite groups. The first nonabelian simple groups to be discovered were the alternating groups. Galois was the first to prove that <nemeth class="inline">⠠⠁⠢</nemeth> was simple. Later, mathematicians such as C. Jordan  and L. E. Dickson  found several infinite families of matrix groups that were simple. Other families of simple groups were discovered in the 1950s. At the turn of the century, William Burnside  conjectured that all nonabelian simple groups must have even order. In 1963, W. Feit  and J. Thompson  proved Burnside's conjecture and published their results in the paper “Solvability of Groups of Odd Order,” which appeared in the <span class="booktitle">Pacific Journal of Mathematics</span>. Their proof, running over 250 pages, gave impetus to a program in the 1960s and 1970s to classify all finite simple groups. Daniel Gorenstein  was the organizer of this remarkable effort. One of the last simple groups was the “Monster,” discovered by R. Greiss.  The Monster, a <nemeth class="inline">⠼⠂⠔⠖⠠⠦⠒⠒⠈⠡⠂⠔⠖⠠⠦⠒⠒</nemeth> matrix group, is one of the 26 sporadic, or special, simple groups. These sporadic simple groups are groups that fit into no infinite family of simple groups. Some of the sporadic groups play an important role in physics.</p>
          </section>
        </section>
        <section class="reading-questions" id="pGm">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">10.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="VMV">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="awO">Let <i class="one-letter">G</i> be the group of symmetries of an equilateral triangle, expressed as permutations of the vertices numbered <nemeth class="inline">⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒</nemeth>. Let <i class="one-letter">H</i> be the subgroup <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠨⠷⠷⠼⠂⠆⠾⠨⠨⠾</nemeth>. Build the left and right cosets of <i class="one-letter">H</i> in <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="BUe">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="GDX">Based on your answer to the previous question, is <i class="one-letter">H</i> normal in <i class="one-letter">G</i>? Explain why or why not.</p>
          </article>
          <article class="exercise exercise-like" id="ibn">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="mLg">The subgroup <nemeth class="inline">⠼⠦⠸⠠⠵</nemeth> is normal in <nemeth class="inline">⠸⠠⠵</nemeth>. In the factor group <nemeth class="inline">⠸⠠⠵⠸⠌⠦⠸⠠⠵</nemeth> perform the computation <nemeth class="inline">⠷⠼⠒⠬⠦⠸⠠⠵⠾⠬⠷⠶⠬⠦⠸⠠⠵⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Oiw">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="SSp">List two statements about a group <i class="one-letter">G</i> and a subgroup <i class="one-letter">H</i> that are equivalent to “<i class="one-letter">H</i> is normal in <i class="one-letter">G</i>.”</p>
          </article>
          <article class="exercise exercise-like" id="upF">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="yZy">In your own words, what is a factor group?</p>
          </article>
        </section>
        <section class="exercises" id="hZN">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">10.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="wds">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="grR">For each of the following groups <i class="one-letter">G</i>, determine whether <i class="one-letter">H</i> is a normal subgroup of <i class="one-letter">G</i>. If <i class="one-letter">H</i> is a normal subgroup, write out a Cayley table for the factor group <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="gdw"><nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠎⠲</nemeth> and <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠠⠁⠲</nemeth></p></li>
              <li>b. <p id="MkF"><nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠁⠢</nemeth> and <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth></p></li>
              <li>c. <p id="srO"><nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠎⠲</nemeth> and <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠠⠙⠲</nemeth></p></li>
              <li>d. <p id="YyX"><nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠟⠦</nemeth> and <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠤⠼⠂⠠⠀⠠⠊⠠⠀⠤⠠⠊⠨⠾</nemeth></p></li>
              <li>e. <p id="EGg"><nemeth class="inline">⠠⠛⠀⠨⠅⠀⠸⠠⠵</nemeth> and <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠼⠢⠸⠠⠵</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="wNm"><span class="type">Hint</span>:<p id="TtF">(a)</p><div class="displaymath"><nemeth>⠀⠀⠠⠁⠲⠀⠷⠂⠆⠾⠠⠁⠲⠀⠠⠁⠲⠀⠠⠁⠲⠀⠷⠂⠆⠾⠠⠁⠲⠀⠷⠂⠆⠾⠠⠁⠲⠀⠷⠂⠆⠾⠠⠁⠲⠀⠠⠁⠲</nemeth></div><p id="zAO">(c) <nemeth class="inline">⠠⠙⠲</nemeth> is not normal in <nemeth class="inline">⠠⠎⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ckB">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="Mza">Find all the subgroups of <nemeth class="inline">⠠⠙⠲</nemeth>. Which subgroups are normal? What are all the factor groups of <nemeth class="inline">⠠⠙⠲</nemeth> up to isomorphism?</p>
          </article>
          <article class="exercise exercise-like" id="IrK">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="sGj">Find all the subgroups of the quaternion group, <nemeth class="inline">⠠⠟⠦</nemeth>. Which subgroups are normal? What are all the factor groups of <nemeth class="inline">⠠⠟⠦</nemeth> up to isomorphism?</p>
          </article>
          <article class="exercise exercise-like" id="oyT">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="YNs">Let <i class="one-letter">T</i> be the group of nonsingular upper triangular <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠗</nemeth>; that is, matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠴⠀⠉⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <i class="one-letter">a</i>, <i class="one-letter">b</i>, <nemeth class="inline">⠉⠀⠈⠑⠀⠸⠠⠗</nemeth> and <nemeth class="inline">⠁⠉⠀⠌⠨⠅⠀⠼⠴</nemeth>. Let <i class="one-letter">U</i> consist of matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠭⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠭⠀⠈⠑⠀⠸⠠⠗</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="pxi">Show that <i class="one-letter">U</i> is a subgroup of <i class="one-letter">T</i>.</p></li>
              <li>b. <p id="VEr">Prove that <i class="one-letter">U</i> is abelian.</p></li>
              <li>c. <p id="BLA">Prove that <i class="one-letter">U</i> is normal in <i class="one-letter">T</i>.</p></li>
              <li>d. <p id="hSJ">Show that <nemeth class="inline">⠠⠞⠸⠌⠠⠥</nemeth> is abelian.</p></li>
              <li>e. <p id="NZS">Is <i class="one-letter">T</i> normal in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>?</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="UGc">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="EUB">Show that the intersection of two normal subgroups is a normal subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="ANl">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="lbK">If <i class="one-letter">G</i> is abelian, prove that <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth> must also be abelian.</p>
          </article>
          <article class="exercise exercise-like" id="gUu">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="RiT">Prove or disprove: If <i class="one-letter">H</i> is a normal subgroup of <i class="one-letter">G</i> such that <i class="one-letter">H</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth> are abelian, then <i class="one-letter">G</i> is abelian.</p>
          </article>
          <article class="exercise exercise-like" id="NbD">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="xqc">If <i class="one-letter">G</i> is cyclic, prove that <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth> must also be cyclic.</p>
            <div class="solutions">
              <div class="hint solution-like" id="tSG"><span class="type">Hint</span>:<p id="fHX">If <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> is a generator for <i class="one-letter">G</i>, then <nemeth class="inline">⠁⠠⠓</nemeth> is a generator for <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="tiM">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="dxl">Prove or disprove: If <i class="one-letter">H</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth> are cyclic, then <i class="one-letter">G</i> is cyclic.</p>
          </article>
          <article class="exercise exercise-like" id="ZpV">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="JEu">Let <i class="one-letter">H</i> be a subgroup of index <nemeth class="inline">⠼⠆</nemeth> of a group <i class="one-letter">G</i>. Prove that <i class="one-letter">H</i> must be a normal subgroup of <i class="one-letter">G</i>. Conclude that <nemeth class="inline">⠠⠎⠰⠝</nemeth> is not simple for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Fxe">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="pLD">If a group <i class="one-letter">G</i> has exactly one subgroup <i class="one-letter">H</i> of order <i class="one-letter">k</i>, prove that <i class="one-letter">H</i> is normal in <i class="one-letter">G</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Svq"><span class="type">Hint</span>:<p id="LPg">For any <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, show that the map <nemeth class="inline">⠊⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> defined by <nemeth class="inline">⠊⠰⠛⠐⠒⠀⠭⠀⠫⠳⠒⠒⠕⠀⠛⠭⠛⠘⠤⠼⠂</nemeth> is an isomorphism of <i class="one-letter">G</i> with itself. Then consider <nemeth class="inline">⠊⠰⠛⠐⠷⠠⠓⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="lEn">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="VSM">Define the <dfn class="terminology">centralizer</dfn> of an element <i class="one-letter">g</i> in a group <i class="one-letter">G</i> to be the set</p>
            <div class="displaymath">
              <nemeth>⠠⠉⠷⠛⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠠⠛⠒⠀⠭⠛⠀⠨⠅⠀⠛⠭⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Show that <nemeth class="inline">⠠⠉⠷⠛⠾</nemeth> is a subgroup of <i class="one-letter">G</i>. If <i class="one-letter">g</i> generates a normal subgroup of <i class="one-letter">G</i>, prove that <nemeth class="inline">⠠⠉⠷⠛⠾</nemeth> is normal in <i class="one-letter">G</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="eJI"><span class="type">Hint</span>:<p id="rWp">Suppose that <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth> is normal in <i class="one-letter">G</i> and let <i class="one-letter">y</i> be an arbitrary element of <i class="one-letter">G</i>. If <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠉⠷⠛⠾</nemeth>, we must show that <nemeth class="inline">⠽⠭⠽⠘⠤⠼⠂</nemeth> is also in <nemeth class="inline">⠠⠉⠷⠛⠾</nemeth>. Show that <nemeth class="inline">⠷⠽⠭⠽⠘⠤⠼⠂⠐⠾⠛⠀⠨⠅⠀⠛⠷⠽⠭⠽⠘⠤⠼⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="RLw">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="BZV">Recall that the <dfn class="terminology">center</dfn> of a group <i class="one-letter">G</i> is the set</p>
            <div class="displaymath">
              <nemeth>⠠⠵⠷⠠⠛⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠠⠛⠒⠀⠭⠛⠀⠨⠅⠀⠛⠭⠋⠕⠗⠀⠁⠇⠇⠛⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <ol class="outerlist">
              <li>a. <p id="yQU">Calculate the center of <nemeth class="inline">⠠⠎⠒</nemeth>.</p></li>
              <li>b. <p id="eYd">Calculate the center of <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p></li>
              <li>c. <p id="Lfm">Show that the center of any group <i class="one-letter">G</i> is a normal subgroup of <i class="one-letter">G</i>.</p></li>
              <li>d. <p id="rmv">If <nemeth class="inline">⠠⠛⠸⠌⠠⠵⠷⠠⠛⠾</nemeth> is cyclic, show that <i class="one-letter">G</i> is abelian.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="xSF">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="ihe">Let <i class="one-letter">G</i> be a group and let <nemeth class="inline">⠠⠛⠘⠄⠐⠀⠨⠅⠀⠨⠨⠷⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂⠐⠨⠨⠾</nemeth>; that is, <nemeth class="inline">⠠⠛⠄</nemeth> is the subgroup of all finite products of elements in <i class="one-letter">G</i> of the form <nemeth class="inline">⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂</nemeth>. The subgroup <nemeth class="inline">⠠⠛⠄</nemeth> is called the <dfn class="terminology">commutator subgroup</dfn> of <i class="one-letter">G</i>. </p>
            <ol class="outerlist">
              <li>a. <p id="vWo">Show that <nemeth class="inline">⠠⠛⠄</nemeth> is a normal subgroup of <i class="one-letter">G</i>.</p></li>
              <li>b. <p id="cdx">Let <i class="one-letter">N</i> be a normal subgroup of <i class="one-letter">G</i>. Prove that <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> is abelian if and only if <i class="one-letter">N</i> contains the commutator subgroup of <i class="one-letter">G</i>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Xfj"><span class="type">Hint</span>:<p id="Ydy">(a) Let <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠛⠄</nemeth>. If <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂</nemeth>, then</p><div class="displaymath"><nemeth>⠛⠓⠛⠘⠤⠼⠂⠀⠀⠨⠅⠀⠛⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂⠐⠛⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠷⠛⠁⠛⠘⠤⠼⠂⠐⠾⠷⠛⠃⠛⠘⠤⠼⠂⠐⠾⠷⠛⠁⠘⠤⠼⠂⠐⠛⠘⠤⠼⠂⠐⠾⠷⠛⠃⠘⠤⠼⠂⠐⠛⠘⠤⠼⠂⠐⠾⠀⠀⠀⠀⠨⠅⠀⠷⠛⠁⠛⠘⠤⠼⠂⠐⠾⠷⠛⠃⠛⠘⠤⠼⠂⠐⠾⠷⠛⠁⠛⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠷⠛⠃⠛⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂</nemeth></div><p data-braille="continuation">. We also need to show that if <nemeth class="inline">⠓⠀⠨⠅⠀⠓⠂⠀⠄⠄⠄⠀⠓⠰⠝⠐</nemeth> with <nemeth class="inline">⠓⠰⠊⠐⠀⠨⠅⠀⠁⠰⠊⠐⠃⠰⠊⠐⠁⠰⠊⠘⠤⠼⠂⠐⠃⠰⠊⠘⠤⠼⠂</nemeth>, then <nemeth class="inline">⠛⠓⠛⠘⠤⠼⠂</nemeth> is a product of elements of the same type. However, <nemeth class="inline">⠛⠓⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠛⠓⠂⠀⠄⠄⠄⠀⠓⠰⠝⠐⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠛⠓⠂⠛⠘⠤⠼⠂⠐⠾⠷⠛⠓⠆⠛⠘⠤⠼⠂⠐⠾⠀⠄⠄⠄⠀⠷⠛⠓⠰⠝⠐⠛⠘⠤⠼⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="section" id="mJG">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">10.5</span> <span class="title">Sage</span></div>
          <section class="introduction" id="zHS">
            <p id="AkI">Sage has several convenient functions that will allow us to investigate quickly if a subgroup is normal, and if so, the nature of the resulting quotient group. But for an initial understanding, we can also work with the raw cosets. Let us get our hands dirty first, then learn about the easy way.</p>
          </section>
          <section class="subsection" id="VLv">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">10.5.1</span> <span class="title">Multiplying Cosets</span></div>
            <p id="jWr">The definiton of a factor group requires a normal subgroup, and then we <em class="emphasis">define</em> a way to “multiply” two cosets of the subgroup to produce another coset. It is important to realize that we can interpret the definition of a normal subgroup to be <em class="emphasis">exactly</em> the condition we need for our new multiplication to be workable. We will do two examples — first with a normal subgroup, then with a subgroup that is not normal.</p>
            <p id="QdA">Consider the dihedral group <nemeth class="inline">⠠⠙⠦</nemeth> that is the symmetry group of an <nemeth class="inline">⠼⠦</nemeth>-gon. If we take the element that creates a quarter-turn, we can use it generate a cyclic subgroup of order 4. This will be a normal subgroup (trust us for the moment on this). First, build the (right) cosets (notice there is no output):</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(8)
quarter_turn = G('(1,3,5,7)(2,4,6,8)')
S = G.subgroup([quarter_turn])
C = G.cosets(S)
</div>
            </article>
            <p id="wkJ">So <code class="code-inline tex2jax_ignore">C</code> is a list of lists, with every element of the group <code class="code-inline tex2jax_ignore">G</code> occuring exactly once somewhere. You could ask Sage to print out <code class="code-inline tex2jax_ignore">C</code> for you if you like, but we will try to avoid that here. We want to multiply two cosets (lists) together. How do we do this? Take <em class="emphasis">any</em> element out of the first list, and <em class="emphasis">any</em> element out of the second list and multiply them together (which we know how to do since they are elements of <code class="code-inline tex2jax_ignore">G</code>). Now we have an element of <code class="code-inline tex2jax_ignore">G</code>. What do we do with this element, since we really want a coset as the result of the product of two cosets? Simple — we see which coset the product is in. Let us give it a try. We will multiply coset <nemeth class="inline">⠼⠂</nemeth> with coset <nemeth class="inline">⠼⠒</nemeth> (there are <nemeth class="inline">⠼⠲</nemeth> cosets by Lagrange's Theorem). Study the following code carefully to see if you can understand what it is doing, and <em class="emphasis">then</em> read the explanation that follows.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p = C[1][0]*C[3][0]
[i for i in srange(len(C)) if p in C[i]]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[2]
</div>
            </article>
            <p id="crS">What have we accomplished? In the first line we create <code class="code-inline tex2jax_ignore">p</code> as the product of two group elements, one from coset <nemeth class="inline">⠼⠂</nemeth> and one from coset <nemeth class="inline">⠼⠒</nemeth> (<code class="code-inline tex2jax_ignore">C[1]</code>, <code class="code-inline tex2jax_ignore">C[3]</code>). Since we can choose <em class="emphasis">any</em> element from each coset, we choose the first element of each (<code class="code-inline tex2jax_ignore">C[ ][0]</code>). Then we count our way through all the cosets, selecting only cosets that contain <code class="code-inline tex2jax_ignore">p</code>. Since <code class="code-inline tex2jax_ignore">p</code> will only be in one coset, we expect a list with just one element. Here, our one-element list contains only <code class="code-inline tex2jax_ignore">2</code>. So we say the product of coset <nemeth class="inline">⠼⠂</nemeth> and coset <nemeth class="inline">⠼⠒</nemeth> is coset <nemeth class="inline">⠼⠆</nemeth>.</p>
            <p id="Izb">The point here is that this result (coset <nemeth class="inline">⠼⠂</nemeth> times coset <nemeth class="inline">⠼⠒</nemeth> is coset <nemeth class="inline">⠼⠆</nemeth>) should always be the same, <em class="emphasis">no matter which elements we pick from the two cosets to form</em> <code class="code-inline tex2jax_ignore">p</code>. So let us do it again, but this time we will not simply choose the first element from each of coset <nemeth class="inline">⠼⠂</nemeth> and coset <nemeth class="inline">⠼⠒</nemeth>, instead we will choose the third element of coset <nemeth class="inline">⠼⠂</nemeth> and the second element of coset <nemeth class="inline">⠼⠒</nemeth> (remember, we are counting from zero!).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p = C[1][2]*C[3][1]
[i for i in srange(len(C)) if p in C[i]]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[2]
</div>
            </article>
            <p id="oGk">Good. We have the same result. If you are still trusting us on <code class="code-inline tex2jax_ignore">S</code> being a normal subgroup of <code class="code-inline tex2jax_ignore">G</code>, then this is the result that the theory predicts. Make a copy of the above compute cell and try other choices for the representatives of each coset. Then try the product of other cosets, with varying representatives.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
            <p id="UNt">Now is a good time to introduce a way to extend Sage and add new functions. We will design a coset-multiplication function. Read the following carefully and then see the subsequent explanation.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">def coset_product(i, j, C):
   p = C[i][0]*C[j][0]
   c = [k for k in srange(len(C)) if p in C[k]]
   return c[0]
</div>
            </article>
            <p id="AUC">The first line creates a new Sage function named <code class="code-inline tex2jax_ignore">coset_product</code>. This is accomplished with the word <code class="code-inline tex2jax_ignore">def</code>, and note the colon ending the line. The inputs to the function are the numbers of the cosets we want to multiply and the complete list of the cosets. The middle two lines should look familiar from above. We know <code class="code-inline tex2jax_ignore">c</code> is a one-element list, so <code class="code-inline tex2jax_ignore">c[0]</code> will extract this one coset number, and <code class="code-inline tex2jax_ignore">return</code> is what determines that this is the output of the function. Notice that the indentation above must be exactly as shown. We could have written all this computation on a single line without making a new function, but that begins to get unwieldly. You need to execute the code block above to actually <em class="emphasis">define</em> the function, and there will be no output if successful. Now we can use our new function to repeat our work above:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">coset_product(1, 3, C)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <p id="hbL">Now you know the basics of how to add onto Sage and do much more than it was designed for. And with some practice, you could suggest and contribute new functions to Sage, since it is an open source project. Nice.</p>
            <p id="NiU">Now let us examine a situation where the subgroup is not normal. So we will see that our definition of coset multiplication is insufficient in this case. And realize that our new <code class="code-inline tex2jax_ignore">coset_product</code> function is also useless since it assumes the cosets come from a normal subgroup.</p>
            <p id="tqd">Consider the alternating group <nemeth class="inline">⠠⠁⠲</nemeth> which we can interpet as the symmetry group of a tetrahedron. For a subgroup, take an element that fixes one vertex and rotates the opposite face — this will generate a cyclic subgroup of order 3, and by Lagrange's Theorem we will get four cosets. We compute them here. (Again, no output is requested.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = AlternatingGroup(4)
face_turn = G("(1,2,3)")
S = G.subgroup([face_turn])
C = G.cosets(S)
</div>
            </article>
            <p id="Zxm">Again, let's consider the product of coset <nemeth class="inline">⠼⠂</nemeth> and coset <nemeth class="inline">⠼⠒</nemeth>:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p = C[1][0]*C[3][0]
[i for i in srange(len(C)) if p in C[i]]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[0]
</div>
            </article>
            <p id="FEv">Again, but now for coset <nemeth class="inline">⠼⠒</nemeth>, choose the second element of the coset to produce the product <code class="code-inline tex2jax_ignore">p</code>:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p = C[1][0]*C[3][1]
[i for i in srange(len(C)) if p in C[i]]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[2]
</div>
            </article>
            <p id="lLE">So, is the product of coset <nemeth class="inline">⠼⠂</nemeth> and coset <nemeth class="inline">⠼⠒</nemeth> equal to coset <nemeth class="inline">⠼⠴</nemeth> or coset <nemeth class="inline">⠼⠆</nemeth>? We cannot say! So there is <em class="emphasis">no way</em> to construct a quotient group for this subgroup. You can experiment some more with this subgroup, but in some sense, we are done with this example — there is nothing left to say.</p>
          </section>
          <section class="subsection" id="BSE">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">10.5.2</span> <span class="title">Sage Methods for Normal Subgroups</span></div>
            <p id="RSN">You can easily ask Sage if a subgroup is normal or not. This is viewed as a property of the subgroup, but you must tell Sage what the “supergroup” is, since the answer can change depending on this value. (For example <code class="code-inline tex2jax_ignore">H.is_normal(H)</code> will always be <code class="code-inline tex2jax_ignore">True</code>.) Here are our two examples from above.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(8)
quarter_turn = G('(1,3,5,7)(2,4,6,8)')
S = G.subgroup([quarter_turn])
S.is_normal(G)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = AlternatingGroup(4)
face_turn = G("(1,2,3)")
S = G.subgroup([face_turn])
S.is_normal(G)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="xZW">The text proves in Section 10.2 that <nemeth class="inline">⠠⠁⠢</nemeth> is simple, i.e. <nemeth class="inline">⠠⠁⠢</nemeth> has no normal subgroups. We could build every subgroup of <nemeth class="inline">⠠⠁⠢</nemeth> and ask if it is normal in <nemeth class="inline">⠠⠁⠢</nemeth> using the <code class="code-inline tex2jax_ignore">.is_normal()</code> method. But Sage has this covered for us already.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = AlternatingGroup(5)
G.is_simple()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="ehf">We can also build a quotient group when we have a normal subgroup.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(8)
quarter_turn = G('(1,3,5,7)(2,4,6,8)')
S = G.subgroup([quarter_turn])
Q = G.quotient(S)
Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Permutation Group with generators [(1,2)(3,4), (1,3)(2,4)]
</div>
            </article>
            <p id="Koo">This is useful, but also a bit unsettling. We have the quotient group, but any notion of cosets has been lost, since <code class="code-inline tex2jax_ignore">Q</code> is returned as a new permutation group on a different set of symbols. We cannot presume that the numbers used for the new permutation group <code class="code-inline tex2jax_ignore">Q</code> bear any resemblance to the cosets we get from the <code class="code-inline tex2jax_ignore">.cosets()</code> method. But we can see that the quotient group is described as a group generated by two elements of order two. We could ask for the order of the group, or by Lagrange's Theorem we know the quotient has order <nemeth class="inline">⠼⠲</nemeth>. We can say now that there are only two groups of order four, the cyclic group of order <nemeth class="inline">⠼⠲</nemeth> and a non-cyclic group of order <nemeth class="inline">⠼⠲</nemeth>, known to us as the Klein <nemeth class="inline">⠼⠲</nemeth>-group or <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>. This quotient group looks like the non-cyclic one since the cyclic group of order 4 has just one element of order 2. Let us see what Sage says.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_isomorphic(KleinFourGroup())
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="qvx">Yes, that's it.</p>
            <p id="WCG">Finally, Sage can build us a list of all of the normal subgroups of a group. The list of groups themselves, as we have seen before, is sometimes an overwhelming amount of information. We will demonstrate by just listing the orders of the normal subgroups produced.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(8)
N = G.normal_subgroups()
[H.order() for H in N]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[16, 8, 8, 8, 4, 2, 1]
</div>
            </article>
            <p id="CJP">So, in particular, we see that our “quarter-turn” subgroup is the <em class="emphasis">only</em> normal subgroup of order <nemeth class="inline">⠼⠲</nemeth> in this group.</p>
          </section>
        </section>
        <section class="exercises" id="OgW">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">10.6</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="dZO">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Oon">Build every subgroup of the alternating group on 5 symbols, <nemeth class="inline">⠠⠁⠢</nemeth>, and check that each is not a normal subgroup (except for the two trivial cases). This command might take a couple seconds to run. Compare this with the time needed to run the <code class="code-inline tex2jax_ignore">.is_simple()</code> method and realize that there is a significant amount of theory and cleverness brought to bear in speeding up commands like this. (It is possible that your Sage installation lacks <abbr class="acronym">GAP</abbr>'s “Table of Marks” library and you will be unable to compute the list of subgroups.)</p>
          </article>
          <article class="exercise exercise-like" id="KgX">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="uvw">Consider the quotient group of the group of symmetries of an <nemeth class="inline">⠼⠦</nemeth>-gon, formed with the cyclic subgroup of order <nemeth class="inline">⠼⠲</nemeth> generated by a quarter-turn. Use the <code class="code-inline tex2jax_ignore">coset_product</code> function to determine the Cayley table for this quotient group. Use the number of each coset, as produced by the <code class="code-inline tex2jax_ignore">.cosets()</code> method as names for the elements of the quotient group. You will need to build the table “by hand” as there is no easy way to have Sage's Cayley table command do this one for you. You can build a table in the Sage Notebook pop-up editor (shift-click on a blue line) or you might read the documentation of the <code class="code-inline tex2jax_ignore">html.table()</code> method.</p>
          </article>
          <article class="exercise exercise-like" id="qog">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="aCF">Consider the cyclic subgroup of order <nemeth class="inline">⠼⠲</nemeth> in the symmetries of an <nemeth class="inline">⠼⠦</nemeth>-gon. Verify that the subgroup is normal by first building the raw left and right cosets (without using the <code class="code-inline tex2jax_ignore">.cosets()</code> method) and then checking their equality in Sage, all with a single command that employs sorting with the <code class="code-inline tex2jax_ignore">sorted()</code> command.</p>
          </article>
          <article class="exercise exercise-like" id="Wvp">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="GJO">Again, use the same cyclic subgroup of order <nemeth class="inline">⠼⠲</nemeth> in the group of symmetries of an <nemeth class="inline">⠼⠦</nemeth>-gon. Check that the subgroup is normal by using part (2) of Theorem 10.1.3. Construct a one-line command that does the complete check and returns <code class="code-inline tex2jax_ignore">True</code>. Maybe sort the elements of the subgroup <code class="code-inline tex2jax_ignore">S</code> first, then slowly build up the necessary lists, commands, and conditions in steps. Notice that this check does not require ever building the cosets.</p>
          </article>
          <article class="exercise exercise-like" id="CCy">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="mQX">Repeat the demonstration from the previous subsection that for the symmetries of a tetrahedron, a cyclic subgroup of order <nemeth class="inline">⠼⠒</nemeth> results in an undefined coset multiplication. Above, the default setting for the <code class="code-inline tex2jax_ignore">.cosets()</code> method builds right cosets — but in this problem, work instead with left cosets. You need to choose two cosets to multiply, and then demonstrate two choices for representatives that lead to different results for the product of the cosets.</p>
          </article>
          <article class="exercise exercise-like" id="iJH">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="SYg">Construct some dihedral groups of order <nemeth class="inline">⠼⠆⠝</nemeth> (i.e. symmetries of an <i class="one-letter">n</i>-gon, <nemeth class="inline">⠠⠙⠰⠝</nemeth> in the text, <code class="code-inline tex2jax_ignore">DihedralGroup(n)</code> in Sage). Maybe all of them for <nemeth class="inline">⠼⠒⠀⠐⠅⠱⠀⠝⠀⠐⠅⠱⠀⠼⠂⠴⠴</nemeth>. For each dihedral group, construct a list of the orders of each of the normal subgroups (so use <code class="code-inline tex2jax_ignore">.normal_subgroups()</code>). You may need to wait ten or twenty seconds for this to finish - be patient. Observe enough examples to hypothesize a pattern to your observations, check your hypothesis against each of your examples and then state your hypothesis clearly.</p>
            <p id="zfp">Can you predict how many normal subgroups there are in the dihedral group <nemeth class="inline">⠠⠙⠲⠶⠴⠲⠲⠦</nemeth> without using Sage to build all the normal subgroups? Can you <em class="emphasis">describe</em> all of the normal subgroups of a dihedral group in a way that would let us predict all of the normal subgroups of <nemeth class="inline">⠠⠙⠲⠶⠴⠲⠲⠦</nemeth> without using Sage?</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="JXG">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">11</span> <span class="title">Homomorphisms</span></div>
        <section class="introduction" id="aAs">
          <p id="ato">One of the basic ideas of algebra is the concept of a homomorphism, a natural generalization of an isomorphism. If we relax the requirement that an isomorphism of groups be bijective, we have a homomorphism.</p>
        </section>
        <section class="section" id="uOI">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">11.1</span> <span class="title">Group Homomorphisms</span></div>
          <p id="pgN">A <dfn class="terminology">homomorphism</dfn> between groups <nemeth class="inline">⠷⠠⠛⠠⠀⠡⠾</nemeth> and <nemeth class="inline">⠷⠠⠓⠠⠀⠘⠨⠡⠾</nemeth> is a map <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> such that</p>
          <div class="displaymath">
            <nemeth>⠋⠷⠛⠂⠡⠛⠆⠾⠀⠨⠅⠀⠋⠷⠛⠂⠾⠘⠨⠡⠋⠷⠛⠆⠾</nemeth>
          </div>
          <p data-braille="continuation">for <nemeth class="inline">⠛⠂⠠⠀⠛⠆⠀⠈⠑⠀⠠⠛</nemeth>. The range of <nemeth class="inline">⠨⠋</nemeth> in <i class="one-letter">H</i> is called the <dfn class="terminology">homomorphic image</dfn>  of <nemeth class="inline">⠨⠋</nemeth>.</p>
          <p id="VnW">Two groups are related in the strongest possible way if they are isomorphic; however, a weaker relationship may exist between two groups. For example, the symmetric group <nemeth class="inline">⠠⠎⠰⠝</nemeth> and the group <nemeth class="inline">⠸⠠⠵⠆</nemeth> are related by the fact that <nemeth class="inline">⠠⠎⠰⠝</nemeth> can be divided into even and odd permutations that exhibit a group structure like that <nemeth class="inline">⠸⠠⠵⠆</nemeth>, as shown in the following multiplication table.</p>
          <div class="sidebyside">
            <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
              <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                <div class="displaymath">
                  <nemeth>⠀⠀⠑⠧⠑⠝⠀⠕⠙⠙⠀⠑⠧⠑⠝⠀⠑⠧⠑⠝⠀⠕⠙⠙⠀⠕⠙⠙⠀⠕⠙⠙⠀⠑⠧⠑⠝</nemeth>
                </div>
              </div>
            </div>
          </div>
          <p id="Bvf">We use homomorphisms to study relationships such as the one we have just described.</p>
          <article class="example example-like" data-braille="example-like" id="kZx">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="QZC">Let <i class="one-letter">G</i> be a group and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Define a map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠛⠘⠝</nemeth>. Then <nemeth class="inline">⠨⠋</nemeth> is a group homomorphism, since</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠍⠬⠝⠾⠀⠨⠅⠀⠛⠘⠍⠬⠝⠐⠀⠨⠅⠀⠛⠘⠍⠐⠛⠘⠝⠐⠀⠨⠅⠀⠋⠷⠍⠾⠋⠷⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">. This homomorphism maps <nemeth class="inline">⠸⠠⠵</nemeth> onto the cyclic subgroup of <i class="one-letter">G</i> generated by <i class="one-letter">g</i>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="RgG">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="xgL">Let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>. If</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">is in <i class="one-letter">G</i>, then the determinant is  nonzero; that is, <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠾⠀⠨⠅⠀⠁⠙⠤⠃⠉⠀⠌⠨⠅⠀⠼⠴</nemeth>. Also, for any two elements <i class="one-letter">A</i> and <i class="one-letter">B</i> in <i class="one-letter">G</i>, <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠠⠃⠾⠀⠨⠅⠀⠙⠑⠞⠀⠷⠠⠁⠾⠙⠑⠞⠀⠷⠠⠃⠾</nemeth>. Using the determinant, we can define a homomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾⠀⠫⠕⠀⠸⠠⠗⠘⠈⠼</nemeth> by <nemeth class="inline">⠠⠁⠀⠫⠳⠒⠒⠕⠀⠙⠑⠞⠀⠷⠠⠁⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="xnP">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="dnU">Recall that the circle group <nemeth class="inline">⠸⠠⠞</nemeth> consists of all complex numbers <i class="one-letter">z</i> such that <nemeth class="inline">⠳⠵⠳⠀⠨⠅⠀⠼⠂</nemeth>. We can define a homomorphism <nemeth class="inline">⠨⠋</nemeth> from the additive group of real numbers <nemeth class="inline">⠸⠠⠗</nemeth> to <nemeth class="inline">⠸⠠⠞</nemeth> by <nemeth class="inline">⠨⠋⠒⠀⠨⠹⠀⠫⠳⠒⠒⠕⠀⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹</nemeth>. Indeed,</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠨⠁⠬⠨⠃⠾⠀⠀⠨⠅⠀⠉⠕⠎⠀⠷⠨⠁⠬⠨⠃⠾⠬⠊⠎⠊⠝⠀⠷⠨⠁⠬⠨⠃⠾⠀⠀⠀⠀⠨⠅⠀⠷⠉⠕⠎⠀⠨⠁⠉⠕⠎⠀⠨⠃⠤⠎⠊⠝⠀⠨⠁⠎⠊⠝⠀⠨⠃⠾⠬⠊⠷⠎⠊⠝⠀⠨⠁⠉⠕⠎⠀⠨⠃⠬⠉⠕⠎⠀⠨⠁⠎⠊⠝⠀⠨⠃⠾⠀⠀⠀⠀⠨⠅⠀⠷⠉⠕⠎⠀⠨⠁⠬⠊⠎⠊⠝⠀⠨⠁⠾⠷⠉⠕⠎⠀⠨⠃⠬⠊⠎⠊⠝⠀⠨⠃⠾⠀⠀⠀⠀⠨⠅⠀⠋⠷⠨⠁⠾⠋⠷⠨⠃⠾</nemeth>
            </div>
            <p data-braille="continuation">. Geometrically, we are simply wrapping the real line around the circle in a group-theoretic fashion.</p>
          </article>
          <p id="hCo">The following proposition lists some basic properties of group homomorphisms.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="ESo">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="kSt">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠂⠀⠫⠕⠀⠠⠛⠆</nemeth> be a homomorphism of groups. Then</p>
            <ol class="outerlist">
              <li>1. <p id="rde">If <i class="one-letter">e</i> is the identity of <nemeth class="inline">⠠⠛⠂</nemeth>, then <nemeth class="inline">⠋⠷⠑⠾</nemeth> is the identity of <nemeth class="inline">⠠⠛⠆</nemeth>;</p></li>
              <li>2. <p id="Xkn">For any element <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛⠂</nemeth>, <nemeth class="inline">⠋⠷⠛⠘⠤⠼⠂⠐⠾⠀⠨⠅⠀⠈⠷⠋⠷⠛⠾⠈⠾⠘⠤⠼⠂</nemeth>;</p></li>
              <li>3. <p id="Drw">If <nemeth class="inline">⠠⠓⠂</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠂</nemeth>, then <nemeth class="inline">⠋⠷⠠⠓⠂⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠆</nemeth>;</p></li>
              <li>4. <p id="jyF">If <nemeth class="inline">⠠⠓⠆</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠆</nemeth>, then <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠓⠆⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠂⠒⠀⠋⠷⠛⠾⠀⠈⠑⠀⠠⠓⠆⠨⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠂</nemeth>. Furthermore, if <nemeth class="inline">⠠⠓⠆</nemeth> is normal in <nemeth class="inline">⠠⠛⠆</nemeth>, then <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠓⠆⠾</nemeth> is normal in <nemeth class="inline">⠠⠛⠂</nemeth>.</p></li>
            </ol>
          </article>
          <article class="hiddenproof" data-braille="proof" id="fkl">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="etn">(1) Suppose that <i class="one-letter">e</i> and <nemeth class="inline">⠑⠄</nemeth> are the identities of <nemeth class="inline">⠠⠛⠂</nemeth> and <nemeth class="inline">⠠⠛⠆</nemeth>, respectively; then</p>
            <div class="displaymath">
              <nemeth>⠑⠘⠄⠐⠋⠷⠑⠾⠀⠨⠅⠀⠋⠷⠑⠾⠀⠨⠅⠀⠋⠷⠑⠑⠾⠀⠨⠅⠀⠋⠷⠑⠾⠋⠷⠑⠾</nemeth>
            </div>
            <p data-braille="continuation">. By cancellation, <nemeth class="inline">⠋⠷⠑⠾⠀⠨⠅⠀⠑⠄</nemeth>.</p>
            <p id="KAw">(2) This statement follows from the fact that</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠛⠘⠤⠼⠂⠐⠾⠋⠷⠛⠾⠀⠨⠅⠀⠋⠷⠛⠘⠤⠼⠂⠐⠛⠾⠀⠨⠅⠀⠋⠷⠑⠾⠀⠨⠅⠀⠑⠄</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="qHF">(3) The set <nemeth class="inline">⠋⠷⠠⠓⠂⠾</nemeth> is nonempty since the identity of <nemeth class="inline">⠠⠛⠆</nemeth> is in <nemeth class="inline">⠋⠷⠠⠓⠂⠾</nemeth>. Suppose that <nemeth class="inline">⠠⠓⠂</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠂</nemeth> and let <i class="one-letter">x</i> and <i class="one-letter">y</i> be in <nemeth class="inline">⠋⠷⠠⠓⠂⠾</nemeth>. There exist elements <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠓⠂</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠭</nemeth> and <nemeth class="inline">⠋⠷⠃⠾⠀⠨⠅⠀⠽</nemeth>. Since</p>
            <div class="displaymath">
              <nemeth>⠭⠽⠘⠤⠼⠂⠐⠀⠨⠅⠀⠋⠷⠁⠾⠈⠷⠋⠷⠃⠾⠈⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠋⠷⠁⠃⠘⠤⠼⠂⠐⠾⠀⠈⠑⠀⠋⠷⠠⠓⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">, <nemeth class="inline">⠋⠷⠠⠓⠂⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠆</nemeth> by Proposition 3.3.8.</p>
            <p id="WOO">(4) Let <nemeth class="inline">⠠⠓⠆</nemeth> be a subgroup of <nemeth class="inline">⠠⠛⠆</nemeth> and define <nemeth class="inline">⠠⠓⠂</nemeth> to be <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠓⠆⠾</nemeth>; that is, <nemeth class="inline">⠠⠓⠂</nemeth> is the set of all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛⠂</nemeth> such that <nemeth class="inline">⠋⠷⠛⠾⠀⠈⠑⠀⠠⠓⠆</nemeth>. The identity is in <nemeth class="inline">⠠⠓⠂</nemeth> since <nemeth class="inline">⠋⠷⠑⠾⠀⠨⠅⠀⠑⠄</nemeth>. If <i class="one-letter">a</i> and <i class="one-letter">b</i> are in <nemeth class="inline">⠠⠓⠂</nemeth>, then <nemeth class="inline">⠋⠷⠁⠃⠘⠤⠼⠂⠐⠾⠀⠨⠅⠀⠋⠷⠁⠾⠈⠷⠋⠷⠃⠾⠈⠾⠘⠤⠼⠂</nemeth> is in <nemeth class="inline">⠠⠓⠆</nemeth> since <nemeth class="inline">⠠⠓⠆</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠆</nemeth>. Therefore, <nemeth class="inline">⠁⠃⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓⠂</nemeth> and <nemeth class="inline">⠠⠓⠂</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠂</nemeth>. If <nemeth class="inline">⠠⠓⠆</nemeth> is normal in <nemeth class="inline">⠠⠛⠆</nemeth>, we must show that <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠓⠛⠀⠈⠑⠀⠠⠓⠂</nemeth> for <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓⠂</nemeth> and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛⠂</nemeth>. But</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠛⠘⠤⠼⠂⠐⠓⠛⠾⠀⠨⠅⠀⠈⠷⠋⠷⠛⠾⠈⠾⠘⠤⠼⠂⠐⠋⠷⠓⠾⠋⠷⠛⠾⠀⠈⠑⠀⠠⠓⠆</nemeth>
            </div>
            <p data-braille="continuation">, since <nemeth class="inline">⠠⠓⠆</nemeth> is a normal subgroup of <nemeth class="inline">⠠⠛⠆</nemeth>. Therefore, <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠓⠛⠀⠈⠑⠀⠠⠓⠂</nemeth>.</p>
          </article>
          <p id="NJx">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> be a group homomorphism and suppose that <i class="one-letter">e</i> is the identity of <i class="one-letter">H</i>. By Proposition 11.1.4, <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠨⠷⠑⠨⠾⠾</nemeth> is a subgroup of <i class="one-letter">G</i>. This subgroup is called the <dfn class="terminology">kernel</dfn> of <nemeth class="inline">⠨⠋</nemeth> and will be denoted by <nemeth class="inline">⠅⠑⠗⠀⠨⠋</nemeth>.  In fact, this subgroup is a normal subgroup of <i class="one-letter">G</i> since the trivial subgroup is normal in <i class="one-letter">H</i>. We state this result in the following theorem, which says that with every homomorphism of groups we can naturally associate a normal subgroup.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="Aiv">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="giA">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> be a group homomorphism. Then the kernel of <nemeth class="inline">⠨⠋</nemeth> is a normal subgroup of <i class="one-letter">G</i>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="duY">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.6</span>
              <span class="period">.</span>
            </h6>
            <p id="Jvd">Let us examine the homomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾⠀⠫⠕⠀⠸⠠⠗⠘⠈⠼</nemeth> defined by <nemeth class="inline">⠠⠁⠀⠫⠳⠒⠒⠕⠀⠙⠑⠞⠀⠷⠠⠁⠾</nemeth>. Since <nemeth class="inline">⠼⠂</nemeth> is the identity of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth>, the kernel of this homomorphism is all <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices having determinant one. That is, <nemeth class="inline">⠅⠑⠗⠀⠨⠋⠀⠨⠅⠀⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="JCh">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="pCm">The kernel of the group homomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠗⠀⠫⠕⠀⠸⠠⠉⠘⠈⠼</nemeth> defined by <nemeth class="inline">⠋⠷⠨⠹⠾⠀⠨⠅⠀⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹</nemeth> is <nemeth class="inline">⠨⠷⠼⠆⠨⠏⠝⠒⠀⠝⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>. Notice that <nemeth class="inline">⠅⠑⠗⠀⠨⠋⠀⠈⠱⠈⠱⠀⠸⠠⠵</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="pJq">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.8</span>
              <span class="period">.</span>
            </h6>
            <p id="VJv">Suppose that we wish to determine all possible homomorphisms <nemeth class="inline">⠨⠋</nemeth> from <nemeth class="inline">⠸⠠⠵⠶</nemeth> to <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>. Since the kernel of <nemeth class="inline">⠨⠋</nemeth> must be a subgroup of <nemeth class="inline">⠸⠠⠵⠶</nemeth>, there are only two possible kernels, <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth> and all of <nemeth class="inline">⠸⠠⠵⠶</nemeth>. The image of a subgroup of <nemeth class="inline">⠸⠠⠵⠶</nemeth> must be a subgroup of <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>. Hence, there is no injective homomorphism; otherwise, <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth> would have a subgroup of order <nemeth class="inline">⠼⠶</nemeth>, which is impossible. Consequently, the only possible homomorphism from <nemeth class="inline">⠸⠠⠵⠶</nemeth> to <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth> is the one mapping all elements to zero.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="VQz">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.1.9</span>
              <span class="period">.</span>
            </h6>
            <p id="BQE">Let <i class="one-letter">G</i> be a group. Suppose that <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠨⠋</nemeth> is the homomorphism from <nemeth class="inline">⠸⠠⠵</nemeth> to <i class="one-letter">G</i> given by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠛⠘⠝</nemeth>. If the order of <i class="one-letter">g</i> is infinite, then the kernel of this homomorphism is <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth> since <nemeth class="inline">⠨⠋</nemeth> maps <nemeth class="inline">⠸⠠⠵</nemeth> onto the cyclic subgroup of <i class="one-letter">G</i> generated by <i class="one-letter">g</i>. However, if the order of <i class="one-letter">g</i> is finite, say <i class="one-letter">n</i>, then the kernel of <nemeth class="inline">⠨⠋</nemeth> is <nemeth class="inline">⠝⠸⠠⠵</nemeth>.</p>
          </article>
        </section>
        <section class="section" id="aVR">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">11.2</span> <span class="title">The Isomorphism Theorems</span></div>
          <p id="tQG">Although it is not evident at first, factor groups correspond exactly to homomorphic images, and we can use factor groups to study homomorphisms. We already know that with every group homomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> we can associate a normal subgroup of <i class="one-letter">G</i>, <nemeth class="inline">⠅⠑⠗⠀⠨⠋</nemeth>. The converse is also true; that is, every normal subgroup of a group <i class="one-letter">G</i> gives rise to homomorphism of groups.</p>
          <p id="ZXP">Let <i class="one-letter">H</i> be a normal subgroup of <i class="one-letter">G</i>. Define the <dfn class="terminology">natural</dfn> or <dfn class="terminology">canonical homomorphism</dfn></p>
          <div class="displaymath">
            <nemeth>⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛⠸⠌⠠⠓</nemeth>
          </div>
          <p data-braille="continuation">by</p>
          <div class="displaymath">
            <nemeth>⠋⠷⠛⠾⠀⠨⠅⠀⠛⠠⠓</nemeth>
          </div>
          <p data-braille="continuation">. This is indeed a homomorphism, since</p>
          <div class="displaymath">
            <nemeth>⠋⠷⠛⠂⠛⠆⠾⠀⠨⠅⠀⠛⠂⠛⠆⠠⠓⠀⠨⠅⠀⠛⠂⠠⠓⠛⠆⠠⠓⠀⠨⠅⠀⠋⠷⠛⠂⠾⠋⠷⠛⠆⠾</nemeth>
          </div>
          <p data-braille="continuation">. The kernel of this homomorphism is <i class="one-letter">H</i>. The following theorems describe the relationships between group homomorphisms, normal subgroups, and factor groups.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="gpE">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">11.2.1</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">First Isomorphism Theorem.</span>
            </h6>
            <p id="MpJ">If <nemeth class="inline">⠨⠓⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> is a group homomorphism with <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠅⠑⠗⠀⠨⠓</nemeth>, then <i class="one-letter">K</i> is normal in <i class="one-letter">G</i>. Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛⠸⠌⠠⠅</nemeth> be the canonical homomorphism. Then there exists a unique isomorphism <nemeth class="inline">⠨⠦⠒⠀⠠⠛⠸⠌⠠⠅⠀⠫⠕⠀⠓⠷⠠⠛⠾</nemeth> such that <nemeth class="inline">⠨⠓⠀⠨⠅⠀⠨⠦⠨⠋</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="mOK">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="CVX">We already know that <i class="one-letter">K</i> is normal in <i class="one-letter">G</i>. Define <nemeth class="inline">⠨⠦⠒⠀⠠⠛⠸⠌⠠⠅⠀⠫⠕⠀⠓⠷⠠⠛⠾</nemeth> by <nemeth class="inline">⠦⠷⠛⠠⠅⠾⠀⠨⠅⠀⠓⠷⠛⠾</nemeth>. We first show that <nemeth class="inline">⠨⠦</nemeth> is a well-defined map. If <nemeth class="inline">⠛⠂⠠⠅⠀⠨⠅⠀⠛⠆⠠⠅</nemeth>, then for some <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠅</nemeth>, <nemeth class="inline">⠛⠂⠅⠀⠨⠅⠀⠛⠆</nemeth>; consequently,</p>
            <div class="displaymath">
              <nemeth>⠦⠷⠛⠂⠠⠅⠾⠀⠨⠅⠀⠓⠷⠛⠂⠾⠀⠨⠅⠀⠓⠷⠛⠂⠾⠓⠷⠅⠾⠀⠨⠅⠀⠓⠷⠛⠂⠅⠾⠀⠨⠅⠀⠓⠷⠛⠆⠾⠀⠨⠅⠀⠦⠷⠛⠆⠠⠅⠾</nemeth>
            </div>
            <p data-braille="continuation">. Thus, <nemeth class="inline">⠨⠦</nemeth> does not depend on the choice of coset representatives and the map <nemeth class="inline">⠨⠦⠒⠀⠠⠛⠸⠌⠠⠅⠀⠫⠕⠀⠓⠷⠠⠛⠾</nemeth> is uniquely defined since <nemeth class="inline">⠨⠓⠀⠨⠅⠀⠨⠦⠨⠋</nemeth>. We must also show that <nemeth class="inline">⠨⠦</nemeth> is a homomorphism. Indeed,</p>
            <div class="displaymath">
              <nemeth>⠦⠷⠛⠂⠠⠅⠛⠆⠠⠅⠾⠀⠀⠨⠅⠀⠦⠷⠛⠂⠛⠆⠠⠅⠾⠀⠀⠀⠀⠨⠅⠀⠓⠷⠛⠂⠛⠆⠾⠀⠀⠀⠀⠨⠅⠀⠓⠷⠛⠂⠾⠓⠷⠛⠆⠾⠀⠀⠀⠀⠨⠅⠀⠦⠷⠛⠂⠠⠅⠾⠦⠷⠛⠆⠠⠅⠾</nemeth>
            </div>
            <p data-braille="continuation">. Clearly, <nemeth class="inline">⠨⠦</nemeth> is onto <nemeth class="inline">⠓⠷⠠⠛⠾</nemeth>. To show that <nemeth class="inline">⠨⠦</nemeth> is one-to-one, suppose that <nemeth class="inline">⠦⠷⠛⠂⠠⠅⠾⠀⠨⠅⠀⠦⠷⠛⠆⠠⠅⠾</nemeth>. Then <nemeth class="inline">⠓⠷⠛⠂⠾⠀⠨⠅⠀⠓⠷⠛⠆⠾</nemeth>. This implies that <nemeth class="inline">⠓⠷⠛⠂⠘⠤⠼⠂⠐⠛⠆⠾⠀⠨⠅⠀⠑</nemeth>, or <nemeth class="inline">⠛⠂⠘⠤⠼⠂⠐⠛⠆</nemeth> is in the kernel of <nemeth class="inline">⠨⠓</nemeth>; hence, <nemeth class="inline">⠛⠂⠘⠤⠼⠂⠐⠛⠆⠠⠅⠀⠨⠅⠀⠠⠅</nemeth>; that is, <nemeth class="inline">⠛⠂⠠⠅⠀⠨⠅⠀⠛⠆⠠⠅</nemeth>.</p>
          </article>
          <p id="GeY">Mathematicians often use diagrams called <dfn class="terminology">commutative diagrams</dfn>  to describe such theorems. The following diagram “commutes” since <nemeth class="inline">⠨⠓⠀⠨⠅⠀⠨⠦⠨⠋</nemeth>.</p>
          <div class="sidebyside">
            <div class="sbsrow" style="margin-left:30%;margin-right:30%;">
              <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                <div data-braille="image">
                  <p>Image: A diagram with G mapped with an arrow to H by psi on the top row.  G gets mapped with an arrow down and right to G/K by phi.  G/K gets mapped with an arrow up and right to H by eta.</p>
                  <p>ID: homomorphs-first-isomorphism</p>
                </div>
              </div>
            </div>
          </div>
          <article class="example example-like" data-braille="example-like" id="BXI">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.2.2</span>
              <span class="period">.</span>
            </h6>
            <p id="hXN">Let <i class="one-letter">G</i> be a cyclic group with generator <i class="one-letter">g</i>. Define a map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠝⠀⠫⠳⠒⠒⠕⠀⠛⠘⠝</nemeth>. This map is a surjective homomorphism since</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠍⠬⠝⠾⠀⠨⠅⠀⠛⠘⠍⠬⠝⠐⠀⠨⠅⠀⠛⠘⠍⠐⠛⠘⠝⠐⠀⠨⠅⠀⠋⠷⠍⠾⠋⠷⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">. Clearly <nemeth class="inline">⠨⠋</nemeth> is onto. If <nemeth class="inline">⠳⠛⠳⠀⠨⠅⠀⠍</nemeth>, then  <nemeth class="inline">⠛⠘⠍⠐⠀⠨⠅⠀⠑</nemeth>. Hence, <nemeth class="inline">⠅⠑⠗⠀⠨⠋⠀⠨⠅⠀⠍⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠸⠌⠅⠑⠗⠀⠨⠋⠀⠨⠅⠀⠸⠠⠵⠸⠌⠍⠸⠠⠵⠀⠈⠱⠈⠱⠀⠠⠛</nemeth>. On the other hand, if the order of <i class="one-letter">g</i> is infinite, then <nemeth class="inline">⠅⠑⠗⠀⠨⠋⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠨⠋</nemeth> is an isomorphism of <i class="one-letter">G</i> and <nemeth class="inline">⠸⠠⠵</nemeth>. Hence, two cyclic groups are isomorphic exactly when they have the same order. Up to isomorphism, the only cyclic groups are <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="MwN">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">11.2.3</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Second Isomorphism Theorem.</span>
            </h6>
            <p id="swS">Let  <i class="one-letter">H</i> be a subgroup of a group <i class="one-letter">G</i> (not necessarily normal in <i class="one-letter">G</i>) and <i class="one-letter">N</i> a normal subgroup of <i class="one-letter">G</i>. Then <nemeth class="inline">⠠⠓⠠⠝</nemeth> is a subgroup of <i class="one-letter">G</i>, <nemeth class="inline">⠠⠓⠨⠩⠠⠝</nemeth> is a normal subgroup of <i class="one-letter">H</i>, and</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠸⠌⠠⠓⠨⠩⠠⠝⠀⠈⠱⠈⠱⠀⠠⠓⠠⠝⠸⠌⠠⠝</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="SVT">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="jdg">We will first show that <nemeth class="inline">⠠⠓⠠⠝⠀⠨⠅⠀⠨⠷⠓⠝⠒⠀⠓⠀⠈⠑⠀⠠⠓⠠⠀⠝⠀⠈⠑⠀⠠⠝⠨⠾</nemeth> is a subgroup of <i class="one-letter">G</i>. Suppose that  <nemeth class="inline">⠓⠂⠝⠂⠠⠀⠓⠆⠝⠆⠀⠈⠑⠀⠠⠓⠠⠝</nemeth>. Since <i class="one-letter">N</i> is normal, <nemeth class="inline">⠷⠓⠆⠾⠘⠤⠼⠂⠐⠝⠂⠓⠆⠀⠈⠑⠀⠠⠝</nemeth>. So</p>
            <div class="displaymath">
              <nemeth>⠷⠓⠂⠝⠂⠾⠷⠓⠆⠝⠆⠾⠀⠨⠅⠀⠓⠂⠓⠆⠷⠷⠓⠆⠾⠘⠤⠼⠂⠐⠝⠂⠓⠆⠾⠝⠆</nemeth>
            </div>
            <p data-braille="continuation">is in <nemeth class="inline">⠠⠓⠠⠝</nemeth>. The inverse of <nemeth class="inline">⠓⠝⠀⠈⠑⠀⠠⠓⠠⠝</nemeth> is in <nemeth class="inline">⠠⠓⠠⠝</nemeth> since</p>
            <div class="displaymath">
              <nemeth>⠷⠓⠝⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠝⠘⠤⠼⠂⠐⠓⠘⠤⠼⠂⠐⠀⠨⠅⠀⠓⠘⠤⠼⠂⠐⠷⠓⠝⠘⠤⠼⠂⠐⠓⠘⠤⠼⠂⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="Pkp">Next, we prove that <nemeth class="inline">⠠⠓⠨⠩⠠⠝</nemeth> is normal in <i class="one-letter">H</i>. Let <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠓⠨⠩⠠⠝</nemeth>. Then <nemeth class="inline">⠓⠘⠤⠼⠂⠐⠝⠓⠀⠈⠑⠀⠠⠓</nemeth> since each element is in <i class="one-letter">H</i>. Also, <nemeth class="inline">⠓⠘⠤⠼⠂⠐⠝⠓⠀⠈⠑⠀⠠⠝</nemeth> since <i class="one-letter">N</i> is normal in <i class="one-letter">G</i>; therefore, <nemeth class="inline">⠓⠘⠤⠼⠂⠐⠝⠓⠀⠈⠑⠀⠠⠓⠨⠩⠠⠝</nemeth>.</p>
            <p id="vry">Now define a map <nemeth class="inline">⠨⠋</nemeth> from <i class="one-letter">H</i> to <nemeth class="inline">⠠⠓⠠⠝⠸⠌⠠⠝</nemeth> by <nemeth class="inline">⠓⠀⠫⠳⠒⠒⠕⠀⠓⠠⠝</nemeth>. The map <nemeth class="inline">⠨⠋</nemeth> is onto, since any coset <nemeth class="inline">⠓⠝⠠⠝⠀⠨⠅⠀⠓⠠⠝</nemeth> is the image of <i class="one-letter">h</i> in <i class="one-letter">H</i>. We also know that <nemeth class="inline">⠨⠋</nemeth> is a homomorphism because</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠓⠓⠘⠄⠐⠾⠀⠨⠅⠀⠓⠓⠘⠄⠐⠠⠝⠀⠨⠅⠀⠓⠠⠝⠓⠘⠄⠐⠠⠝⠀⠨⠅⠀⠋⠷⠓⠾⠋⠷⠓⠘⠄⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">. By the First Isomorphism Theorem, the image of <nemeth class="inline">⠨⠋</nemeth> is isomorphic to <nemeth class="inline">⠠⠓⠸⠌⠅⠑⠗⠀⠨⠋</nemeth>; that is,</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠠⠝⠸⠌⠠⠝⠀⠨⠅⠀⠋⠷⠠⠓⠾⠀⠈⠱⠈⠱⠀⠠⠓⠸⠌⠅⠑⠗⠀⠋</nemeth>
            </div>
            <p data-braille="continuation">. Since</p>
            <div class="displaymath">
              <nemeth>⠅⠑⠗⠀⠨⠋⠀⠨⠅⠀⠨⠷⠓⠀⠈⠑⠀⠠⠓⠒⠀⠓⠀⠈⠑⠀⠠⠝⠨⠾⠀⠨⠅⠀⠠⠓⠨⠩⠠⠝</nemeth>
            </div>
            <p data-braille="continuation">, <nemeth class="inline">⠠⠓⠠⠝⠸⠌⠠⠝⠀⠨⠅⠀⠋⠷⠠⠓⠾⠀⠈⠱⠈⠱⠀⠠⠓⠸⠌⠠⠓⠨⠩⠠⠝</nemeth>.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="sDW">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">11.2.4</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Correspondence Theorem.</span>
            </h6>
            <p id="YEb">Let <i class="one-letter">N</i> be a normal subgroup of a group <i class="one-letter">G</i>. Then <nemeth class="inline">⠠⠓⠀⠫⠳⠒⠒⠕⠀⠠⠓⠸⠌⠠⠝</nemeth> is a one-to-one correspondence between the set of subgroups <i class="one-letter">H</i> containing <i class="one-letter">N</i> and the set of subgroups of <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth>. Furthermore, the normal subgroups of <i class="one-letter">G</i> containing <i class="one-letter">N</i> correspond to normal subgroups of <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="zdc">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="byH">Let <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i> containing <i class="one-letter">N</i>. Since <i class="one-letter">N</i> is normal in <i class="one-letter">H</i>, <nemeth class="inline">⠠⠓⠸⠌⠠⠝</nemeth> makes is a factor group. Let <nemeth class="inline">⠁⠠⠝</nemeth> and <nemeth class="inline">⠃⠠⠝</nemeth> be elements of <nemeth class="inline">⠠⠓⠸⠌⠠⠝</nemeth>. Then <nemeth class="inline">⠷⠁⠠⠝⠾⠷⠃⠘⠤⠼⠂⠐⠠⠝⠾⠀⠨⠅⠀⠁⠃⠘⠤⠼⠂⠐⠠⠝⠀⠈⠑⠀⠠⠓⠸⠌⠠⠝</nemeth>; hence, <nemeth class="inline">⠠⠓⠸⠌⠠⠝</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth>.</p>
            <p id="HFQ">Let <i class="one-letter">S</i> be a subgroup of <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth>. This subgroup is a set of cosets of <i class="one-letter">N</i>. If <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠠⠝⠀⠈⠑⠀⠠⠎⠨⠾</nemeth>, then for <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>, we have that <nemeth class="inline">⠷⠓⠂⠠⠝⠾⠷⠓⠆⠠⠝⠾⠀⠨⠅⠀⠓⠂⠓⠆⠠⠝⠀⠈⠑⠀⠠⠎</nemeth> and <nemeth class="inline">⠓⠂⠘⠤⠼⠂⠐⠠⠝⠀⠈⠑⠀⠠⠎</nemeth>. Therefore, <i class="one-letter">H</i> must be a subgroup of <i class="one-letter">G</i>. Clearly, <i class="one-letter">H</i> contains <i class="one-letter">N</i>. Therefore, <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠠⠓⠸⠌⠠⠝</nemeth>. Consequently, the map <nemeth class="inline">⠠⠓⠀⠫⠳⠒⠒⠕⠀⠠⠓⠸⠌⠠⠝</nemeth> is onto.</p>
            <p id="nMZ">Suppose that <nemeth class="inline">⠠⠓⠂</nemeth> and <nemeth class="inline">⠠⠓⠆</nemeth> are subgroups of <i class="one-letter">G</i> containing <i class="one-letter">N</i> such that <nemeth class="inline">⠠⠓⠂⠸⠌⠠⠝⠀⠨⠅⠀⠠⠓⠆⠸⠌⠠⠝</nemeth>. If <nemeth class="inline">⠓⠂⠀⠈⠑⠀⠠⠓⠂</nemeth>, then <nemeth class="inline">⠓⠂⠠⠝⠀⠈⠑⠀⠠⠓⠂⠸⠌⠠⠝</nemeth>. Hence, <nemeth class="inline">⠓⠂⠠⠝⠀⠨⠅⠀⠓⠆⠠⠝⠀⠸⠐⠅⠀⠠⠓⠆</nemeth> for some <nemeth class="inline">⠓⠆</nemeth> in <nemeth class="inline">⠠⠓⠆</nemeth>. However, since <i class="one-letter">N</i> is contained in <nemeth class="inline">⠠⠓⠆</nemeth>, we know that <nemeth class="inline">⠓⠂⠀⠈⠑⠀⠠⠓⠆</nemeth> or <nemeth class="inline">⠠⠓⠂⠀⠸⠐⠅⠀⠠⠓⠆</nemeth>. Similarly, <nemeth class="inline">⠠⠓⠆⠀⠸⠐⠅⠀⠠⠓⠂</nemeth>. Since <nemeth class="inline">⠠⠓⠂⠀⠨⠅⠀⠠⠓⠆</nemeth>, the map <nemeth class="inline">⠠⠓⠀⠫⠳⠒⠒⠕⠀⠠⠓⠸⠌⠠⠝</nemeth> is one-to-one.</p>
            <p id="TUi">Suppose that <i class="one-letter">H</i> is normal in <i class="one-letter">G</i> and <i class="one-letter">N</i> is a subgroup of <i class="one-letter">H</i>. Then it is easy to verify that the map <nemeth class="inline">⠠⠛⠸⠌⠠⠝⠀⠫⠕⠀⠠⠛⠸⠌⠠⠓</nemeth> defined by <nemeth class="inline">⠛⠠⠝⠀⠫⠳⠒⠒⠕⠀⠛⠠⠓</nemeth> is a homomorphism. The kernel of this homomorphism is <nemeth class="inline">⠠⠓⠸⠌⠠⠝</nemeth>, which proves that <nemeth class="inline">⠠⠓⠸⠌⠠⠝</nemeth> is normal in <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth>.</p>
            <p id="Abr">Conversely, suppose that <nemeth class="inline">⠠⠓⠸⠌⠠⠝</nemeth> is normal in <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth>. The homomorphism given by</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠫⠕⠀⠠⠛⠸⠌⠠⠝⠀⠫⠕⠀⠹⠠⠛⠸⠌⠠⠝⠌⠠⠓⠸⠌⠠⠝⠼</nemeth>
            </div>
            <p data-braille="continuation">has kernel <i class="one-letter">H</i>. Hence, <i class="one-letter">H</i> must be normal in <i class="one-letter">G</i>.</p>
          </article>
          <p id="mmh">Notice that in the course of the proof of Theorem 11.2.4, we have also proved the following theorem.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="YLf">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">11.2.5</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Third Isomorphism Theorem.</span>
            </h6>
            <p id="ELk">Let <i class="one-letter">G</i> be a group and <i class="one-letter">N</i> and <i class="one-letter">H</i> be normal subgroups of <i class="one-letter">G</i> with <nemeth class="inline">⠠⠝⠀⠸⠐⠅⠀⠠⠓</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠸⠌⠠⠓⠀⠈⠱⠈⠱⠀⠹⠠⠛⠸⠌⠠⠝⠌⠠⠓⠸⠌⠠⠝⠼</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="ieR">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">11.2.6</span>
              <span class="period">.</span>
            </h6>
            <p id="OeW">By the Third Isomorphism Theorem,</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠸⠌⠍⠸⠠⠵⠀⠈⠱⠈⠱⠀⠷⠸⠠⠵⠸⠌⠍⠝⠸⠠⠵⠾⠸⠌⠷⠍⠸⠠⠵⠸⠌⠍⠝⠸⠠⠵⠾</nemeth>
            </div>
            <p data-braille="continuation">. Since <nemeth class="inline">⠳⠸⠠⠵⠸⠌⠍⠝⠸⠠⠵⠳⠀⠨⠅⠀⠍⠝</nemeth> and  <nemeth class="inline">⠳⠸⠠⠵⠸⠌⠍⠸⠠⠵⠳⠀⠨⠅⠀⠍</nemeth>, we have <nemeth class="inline">⠳⠍⠸⠠⠵⠸⠌⠍⠝⠸⠠⠵⠳⠀⠨⠅⠀⠝</nemeth>.</p>
          </article>
          <article class="paragraphs" id="OHz">
            <h5 class="heading">
              <span class="title">Sage.</span>
            </h5>
            <p id="IZE">Sage can create homomorphisms between groups, which can be used directly as functions, and then queried for their kernels and images. So there is great potential for exploring the many fundamental relationships between groups, normal subgroups, quotient groups and properties of homomorphisms.</p>
          </article>
        </section>
        <section class="reading-questions" id="sAS">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">11.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="mwL">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="rgE">Consider the function <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠂⠴⠀⠫⠕⠀⠸⠠⠵⠂⠴</nemeth> defined by <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠬⠭</nemeth>. Prove that <nemeth class="inline">⠨⠋</nemeth> is a group homomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="SDU">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="XnN">For <nemeth class="inline">⠨⠋</nemeth> defined in the previous question, explain why <nemeth class="inline">⠨⠋</nemeth> is not a group isomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="yLd">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="DuW">Compare and contrast isomorphisms and homomorphisms.</p>
          </article>
          <article class="exercise exercise-like" id="eSm">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="jCf">Paraphrase the First Isomorphism Theorem using <em class="emphasis">only words</em>. No symbols allowed <em class="emphasis">at all</em>.</p>
          </article>
          <article class="exercise exercise-like" id="KZv">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="PJo">“For every normal subgroup there is a homomorphism, and for every homomorphism there is a normal subgroup.” Explain the (precise) basis for this (vague) statement.</p>
          </article>
        </section>
        <section class="exercises" id="WlY">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">11.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="nkj">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="mHG">Prove that <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠠⠃⠾⠀⠨⠅⠀⠙⠑⠞⠀⠷⠠⠁⠾⠙⠑⠞⠀⠷⠠⠃⠾</nemeth> for <nemeth class="inline">⠠⠁⠠⠀⠠⠃⠀⠈⠑⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>. This shows that the determinant is a homomorphism from <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Trs">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="SOP">Which of the following maps are homomorphisms? If the map is a homomorphism, what is the kernel?</p>
            <ol class="outerlist">
              <li>a. <p id="PFO"><nemeth class="inline">⠨⠋⠒⠀⠸⠠⠗⠘⠈⠼⠐⠀⠫⠕⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> defined by</p><div class="displaymath"><nemeth>⠋⠷⠁⠾⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠁⠠⠾</nemeth></div></li>
              <li>b. <p id="vMX"><nemeth class="inline">⠨⠋⠒⠀⠸⠠⠗⠀⠫⠕⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> defined by</p><div class="displaymath"><nemeth>⠋⠷⠁⠾⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠁⠀⠂⠠⠾</nemeth></div></li>
              <li>c. <p id="bUg"><nemeth class="inline">⠨⠋⠒⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾⠀⠫⠕⠀⠸⠠⠗</nemeth> defined by</p><div class="displaymath"><nemeth>⠋⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾⠀⠨⠅⠀⠁⠬⠙</nemeth></div></li>
              <li>d. <p id="Ibp"><nemeth class="inline">⠨⠋⠒⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾⠀⠫⠕⠀⠸⠠⠗⠘⠈⠼</nemeth> defined by</p><div class="displaymath"><nemeth>⠋⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾⠀⠨⠅⠀⠁⠙⠤⠃⠉</nemeth></div></li>
              <li>e. <p id="oiy"><nemeth class="inline">⠨⠋⠒⠀⠸⠠⠍⠆⠷⠸⠠⠗⠾⠀⠫⠕⠀⠸⠠⠗</nemeth> defined by</p><div class="displaymath"><nemeth>⠋⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾⠀⠨⠅⠀⠃</nemeth></div><p data-braille="continuation">, where <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> is the additive group of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠗</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="XFM"><span class="type">Hint</span>:<p id="ZJu">(a) is a homomorphism with kernel <nemeth class="inline">⠨⠷⠼⠂⠨⠾</nemeth>; (c) is not a homomorphism.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="zyB">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="yVY">Let <i class="one-letter">A</i> be an <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrix. Show that matrix multiplication, <nemeth class="inline">⠭⠀⠫⠳⠒⠒⠕⠀⠠⠁⠭</nemeth>, defines a homomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠗⠘⠝⠐⠀⠫⠕⠀⠸⠠⠗⠘⠍</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="fFK">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="fdh">Let <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠵</nemeth> be given by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠼⠶⠝</nemeth>. Prove that <nemeth class="inline">⠨⠋</nemeth> is a group homomorphism. Find the kernel and the image of <nemeth class="inline">⠨⠋</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Qbn"><span class="type">Hint</span>:<p id="FQD">Since <nemeth class="inline">⠋⠷⠍⠬⠝⠾⠀⠨⠅⠀⠼⠶⠷⠍⠬⠝⠾⠀⠨⠅⠀⠼⠶⠍⠬⠶⠝⠀⠨⠅⠀⠋⠷⠍⠾⠬⠋⠷⠝⠾</nemeth>, <nemeth class="inline">⠨⠋</nemeth> is a homomorphism.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="LMT">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Lkq">Describe all of the homomorphisms from <nemeth class="inline">⠸⠠⠵⠆⠲</nemeth> to <nemeth class="inline">⠸⠠⠵⠂⠦</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="cpF"><span class="type">Hint</span>:<p id="lXM">For any homomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠆⠲⠀⠫⠕⠀⠸⠠⠵⠂⠦</nemeth>, the kernel of <nemeth class="inline">⠨⠋</nemeth> must be a subgroup of <nemeth class="inline">⠸⠠⠵⠆⠲</nemeth> and the image of <nemeth class="inline">⠨⠋</nemeth> must be a subgroup of <nemeth class="inline">⠸⠠⠵⠂⠦</nemeth>. Now use the fact that a generator must map to a generator.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="rUc">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="rrz">Describe all of the homomorphisms from <nemeth class="inline">⠸⠠⠵</nemeth> to <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Ybl">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="XyI">In the group <nemeth class="inline">⠸⠠⠵⠆⠲</nemeth>, let <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠨⠷⠼⠲⠨⠨⠾</nemeth> and <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠨⠨⠷⠼⠖⠨⠨⠾</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="YZA">List the elements in <nemeth class="inline">⠠⠓⠠⠝</nemeth> (we usually write <nemeth class="inline">⠠⠓⠬⠠⠝</nemeth> for these additive groups) and <nemeth class="inline">⠠⠓⠨⠩⠠⠝</nemeth>.</p></li>
              <li>b. <p id="FgJ">List the cosets in <nemeth class="inline">⠠⠓⠠⠝⠸⠌⠠⠝</nemeth>, showing the elements in each coset.</p></li>
              <li>c. <p id="lnS">List the cosets in <nemeth class="inline">⠠⠓⠸⠌⠷⠠⠓⠨⠩⠠⠝⠾</nemeth>, showing the elements in each coset.</p></li>
              <li>d. <p id="Rvb">Give the correspondence between <nemeth class="inline">⠠⠓⠠⠝⠸⠌⠠⠝</nemeth> and <nemeth class="inline">⠠⠓⠸⠌⠷⠠⠓⠨⠩⠠⠝⠾</nemeth> described in the proof of the Second Isomorphism Theorem.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Eiu">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="DFR">If <i class="one-letter">G</i> is an abelian group and <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>, show that <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> defined by <nemeth class="inline">⠛⠀⠫⠳⠒⠒⠕⠀⠛⠘⠝</nemeth> is a group homomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="kpD">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="jNa">If <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> is a group homomorphism and <i class="one-letter">G</i> is abelian, prove that <nemeth class="inline">⠋⠷⠠⠛⠾</nemeth> is also abelian.</p>
            <div class="solutions">
              <div class="hint solution-like" id="gZy"><span class="type">Hint</span>:<p id="SeV">Let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>. Then <nemeth class="inline">⠋⠷⠁⠾⠋⠷⠃⠾⠀⠨⠅⠀⠋⠷⠁⠃⠾⠀⠨⠅⠀⠋⠷⠃⠁⠾⠀⠨⠅⠀⠋⠷⠃⠾⠋⠷⠁⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="QwM">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="PUj">If <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> is a group homomorphism and <i class="one-letter">G</i> is cyclic, prove that <nemeth class="inline">⠋⠷⠠⠛⠾</nemeth> is also cyclic.</p>
          </article>
          <article class="exercise exercise-like" id="wDV">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="wbs">Show that a homomorphism defined on a cyclic group is completely determined by its action on the generator of the group.</p>
          </article>
          <article class="exercise exercise-like" id="cLe">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="ciB">If a group <i class="one-letter">G</i> has exactly one subgroup <i class="one-letter">H</i> of order <i class="one-letter">k</i>, prove that <i class="one-letter">H</i> is normal in <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="ISn">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="IpK">Prove or disprove: <nemeth class="inline">⠸⠠⠟⠸⠌⠸⠠⠵⠀⠈⠱⠈⠱⠀⠸⠠⠟</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="oZw">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="owT">Let <i class="one-letter">G</i> be a finite group and <i class="one-letter">N</i> a normal subgroup of <i class="one-letter">G</i>. If <i class="one-letter">H</i> is a subgroup of <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth>, prove that <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠓⠾</nemeth> is a subgroup in <i class="one-letter">G</i> of order <nemeth class="inline">⠳⠠⠓⠳⠡⠳⠠⠝⠳</nemeth>, where <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛⠸⠌⠠⠝</nemeth> is the canonical homomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="VgF">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="UEc">Let <nemeth class="inline">⠠⠛⠂</nemeth> and <nemeth class="inline">⠠⠛⠆</nemeth> be groups, and let <nemeth class="inline">⠠⠓⠂</nemeth> and <nemeth class="inline">⠠⠓⠆</nemeth> be normal subgroups of <nemeth class="inline">⠠⠛⠂</nemeth> and <nemeth class="inline">⠠⠛⠆</nemeth> respectively. Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠂⠀⠫⠕⠀⠠⠛⠆</nemeth> be a homomorphism. Show that <nemeth class="inline">⠨⠋</nemeth> induces a homomorphism <nemeth class="inline">⠐⠨⠋⠣⠱⠻⠒⠀⠷⠠⠛⠂⠸⠌⠠⠓⠂⠾⠀⠫⠕⠀⠷⠠⠛⠆⠸⠌⠠⠓⠆⠾</nemeth> if <nemeth class="inline">⠋⠷⠠⠓⠂⠾⠀⠸⠐⠅⠀⠠⠓⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="BnO">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="ALl">If <i class="one-letter">H</i> and <i class="one-letter">K</i> are normal subgroups of <i class="one-letter">G</i> and <nemeth class="inline">⠠⠓⠨⠩⠠⠅⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>, prove that <i class="one-letter">G</i> is isomorphic to a subgroup of <nemeth class="inline">⠠⠛⠸⠌⠠⠓⠈⠡⠠⠛⠸⠌⠠⠅</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="huX">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="gSu">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠂⠀⠫⠕⠀⠠⠛⠆</nemeth> be a surjective group homomorphism. Let <nemeth class="inline">⠠⠓⠂</nemeth> be a normal subgroup of <nemeth class="inline">⠠⠛⠂</nemeth> and suppose that <nemeth class="inline">⠋⠷⠠⠓⠂⠾⠀⠨⠅⠀⠠⠓⠆</nemeth>. Prove or disprove that <nemeth class="inline">⠠⠛⠂⠸⠌⠠⠓⠂⠀⠈⠱⠈⠱⠀⠠⠛⠆⠸⠌⠠⠓⠆</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Kmb"><span class="type">Hint</span>:<p id="yme">Find a counterexample.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NCg">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="MZD">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> be a group homomorphism. Show that <nemeth class="inline">⠨⠋</nemeth> is one-to-one if and only if <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠑⠾⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="tJp">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="tgM">Given a homomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> define a relation <nemeth class="inline">⠈⠱</nemeth> on <i class="one-letter">G</i> by <nemeth class="inline">⠁⠈⠱⠃</nemeth> if <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠋⠷⠃⠾</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>. Show this relation is an equivalence relation and describe the equivalence classes.</p>
          </article>
        </section>
        <section class="exercises" id="Cth">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">11.5</span> <span class="title">Additional Exercises: Automorphisms</span></div>
          <article class="exercise exercise-like" id="ZQy">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ZnV">Let <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠛⠾</nemeth> be the set of all automorphisms of <i class="one-letter">G</i>; that is, isomorphisms from <i class="one-letter">G</i> to itself. Prove this set forms a group and is a subgroup of the group of permutations of <i class="one-letter">G</i>; that is, <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠛⠾⠀⠐⠅⠱⠀⠠⠎⠰⠠⠛</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="FXH">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="Fve">An <dfn class="terminology">inner automorphism</dfn> of <i class="one-letter">G</i>,</p>
            <div class="displaymath">
              <nemeth>⠊⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth>
            </div>
            <p data-braille="continuation">, is defined by the map</p>
            <div class="displaymath">
              <nemeth>⠊⠰⠛⠐⠷⠭⠾⠀⠨⠅⠀⠛⠭⠛⠘⠤⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">, for <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Show that <nemeth class="inline">⠊⠰⠛⠐⠀⠈⠑⠀⠠⠁⠥⠞⠷⠠⠛⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="meQ">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="lCn">The set of all inner automorphisms is denoted by <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠛⠾</nemeth>. Show that <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠛⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠛⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="SlZ">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="RJw">Find an automorphism of a group <i class="one-letter">G</i> that is not an inner automorphism.</p>
          </article>
          <article class="exercise exercise-like" id="yti">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="xQF">Let <i class="one-letter">G</i> be a group and <nemeth class="inline">⠊⠰⠛</nemeth> be an inner automorphism of <i class="one-letter">G</i>, and define a map</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠫⠕⠀⠠⠁⠥⠞⠷⠠⠛⠾</nemeth>
            </div>
            <p data-braille="continuation">by</p>
            <div class="displaymath">
              <nemeth>⠛⠀⠫⠳⠒⠒⠕⠀⠊⠰⠛</nemeth>
            </div>
            <p data-braille="continuation">. Prove that this map is a homomorphism with image <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠛⠾</nemeth> and kernel <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth>. Use this result to conclude that</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠸⠌⠠⠵⠷⠠⠛⠾⠀⠈⠱⠈⠱⠀⠠⠊⠝⠝⠷⠠⠛⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="eAr">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="dXO">Compute <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠎⠒⠾</nemeth> and <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠎⠒⠾</nemeth>. Do the same thing for <nemeth class="inline">⠠⠙⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="KHA">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="KeX">Find all of the homomorphisms <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠵</nemeth>. What is <nemeth class="inline">⠠⠁⠥⠞⠷⠸⠠⠵⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="qOJ">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="qmg">Find all of the automorphisms of <nemeth class="inline">⠸⠠⠵⠦</nemeth>. Prove that <nemeth class="inline">⠠⠁⠥⠞⠷⠸⠠⠵⠦⠾⠀⠈⠱⠈⠱⠀⠠⠥⠷⠼⠦⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="WVS">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="Wtp">For <nemeth class="inline">⠅⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth>, define a map <nemeth class="inline">⠨⠋⠰⠅⠐⠒⠀⠸⠠⠵⠰⠝⠐⠀⠫⠕⠀⠸⠠⠵⠰⠝⠐</nemeth> by <nemeth class="inline">⠁⠀⠫⠳⠒⠒⠕⠀⠅⠁</nemeth>. Prove that <nemeth class="inline">⠨⠋⠰⠅</nemeth> is a homomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="Ddb">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="CAy">Prove that <nemeth class="inline">⠨⠋⠰⠅</nemeth> is an isomorphism if and only if <i class="one-letter">k</i> is a generator of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="jkk">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="iHH">Show that every automorphism of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> is of the form <nemeth class="inline">⠨⠋⠰⠅</nemeth>, where <i class="one-letter">k</i> is a generator of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Prt">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="OOQ">Prove that <nemeth class="inline">⠨⠓⠒⠀⠠⠥⠷⠝⠾⠀⠫⠕⠀⠠⠁⠥⠞⠷⠸⠠⠵⠰⠝⠐⠾</nemeth> is an isomorphism, where <nemeth class="inline">⠨⠓⠒⠀⠅⠀⠫⠳⠒⠒⠕⠀⠨⠋⠰⠅⠐</nemeth>.</p>
          </article>
        </section>
        <section class="section" id="Hda">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">11.6</span> <span class="title">Sage</span></div>
          <section class="introduction" id="GHB">
            <p id="GAx">Sage is able to create homomorphisms (and by extension, isomorphisms and automorphisms) between finite permutation groups. There is a limited supply of commands then available to manipulate these functions, but we can still illustrate many of the ideas in this chapter.</p>
          </section>
          <section class="subsection" id="qeP">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">11.6.1</span> <span class="title">Homomorphisms</span></div>
            <p id="LUk">The principal device for creating a homomorphism is to specify the specific images of the set of generators for the domain. Consider cyclic groups of order <nemeth class="inline">⠼⠂⠆</nemeth> and <nemeth class="inline">⠼⠆⠴</nemeth>:</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠀⠨⠅⠀⠨⠷⠁⠘⠊⠐⠳⠀⠁⠘⠂⠆⠐⠀⠨⠅⠀⠑⠨⠾⠀⠠⠓⠀⠀⠨⠅⠀⠨⠷⠭⠘⠊⠐⠳⠀⠭⠘⠆⠴⠐⠀⠨⠅⠀⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">and define a homomorphism by just defining the image of the generator of <i class="one-letter">G</i>, and define the rest of the mapping by extending the mapping via the operation-preserving property of a homomorphism.</p>
            <div class="displaymath">
              <nemeth>⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓⠠⠀⠋⠷⠁⠾⠀⠨⠅⠀⠭⠘⠢⠐⠀⠀⠫⠒⠒⠕⠕⠀⠀⠋⠷⠁⠘⠊⠐⠾⠀⠨⠅⠀⠋⠷⠁⠾⠘⠊⠐⠀⠨⠅⠀⠷⠭⠘⠢⠐⠾⠘⠊⠐⠀⠨⠅⠀⠭⠘⠢⠊</nemeth>
            </div>
            <p data-braille="continuation">The constructor <code class="code-inline tex2jax_ignore">PermutationGroupMorphism</code> requires the two groups, then a list of images for each generator (in order!), and then will create the homomorphism. Note that we can then use the result as a function. In the example below, we first verify that <code class="code-inline tex2jax_ignore">C12</code> has a single generator (no surprise there), which we then send to a particular element of order <nemeth class="inline">⠼⠲</nemeth> in the codomain. Sage then constructs the unique homomorphism that is consistent with this requirement.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C12 = CyclicPermutationGroup(12)
C20 = CyclicPermutationGroup(20)
domain_gens = C12.gens()
[g.order() for g in domain_gens]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[12]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x = C20.gen(0)
y = x^5
y.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">phi = PermutationGroupMorphism(C12, C20, [y])
phi
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Permutation group morphism:
  From: Cyclic group of order 12 as a permutation group
  To:   Cyclic group of order 20 as a permutation group
  Defn: [(1,2,3,4,5,6,7,8,9,10,11,12)] -&gt;
        [(1,6,11,16)(2,7,12,17)(3,8,13,18)(4,9,14,19)(5,10,15,20)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = C12("(1,6,11,4,9,2,7,12,5,10,3,8)")
phi(a)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,6,11,16)(2,7,12,17)(3,8,13,18)(4,9,14,19)(5,10,15,20)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = C12("(1,3,5,7,9,11)(2,4,6,8,10,12)")
phi(b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,11)(2,12)(3,13)(4,14)(5,15)(6,16)(7,17)(8,18)(9,19)(10,20)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = C12("(1,9,5)(2,10,6)(3,11,7)(4,12,8)")
phi(c)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">()
</div>
            </article>
            <p id="sbt">Note that the element <code class="code-inline tex2jax_ignore">c</code> must therefore be in the kernel of <code class="code-inline tex2jax_ignore">phi</code>.</p>
            <p id="YiC">We can then compute the subgroup of the domain that is the kernel, in this case a cyclic group of order <nemeth class="inline">⠼⠒</nemeth> inside the cyclic group of order <nemeth class="inline">⠼⠂⠆</nemeth>. We can compute the image of <em class="emphasis">any</em> subgroup, but here we will build the whole homomorphic image by supplying the whole domain to the <code class="code-inline tex2jax_ignore">.image()</code> method. Here the image is a cyclic subgroup of order <nemeth class="inline">⠼⠲</nemeth> inside the cyclic group of order <nemeth class="inline">⠼⠆⠴</nemeth>. Then we can verify the First Isomorphism Theorem.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K = phi.kernel(); K
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by [(1,5,9)(2,6,10)(3,7,11)(4,8,12)]
of (Cyclic group of order 12 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Im = phi.image(C12); Im
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by [(1,6,11,16)(2,7,12,17)(3,8,13,18)(4,9,14,19)(5,10,15,20)]
of (Cyclic group of order 20 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Im.is_isomorphic(C12.quotient(K))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="EpL">Here is a slightly more complicated example. The dihedral group <nemeth class="inline">⠠⠙⠆⠴</nemeth> is the symmetry group of a <nemeth class="inline">⠼⠆⠴</nemeth>-gon. Inside this group is a subgroup that is isomorphic to the symmetry group of a <nemeth class="inline">⠼⠢</nemeth>-gon (pentagon). Is this a surprise, or is this obvious? Here is a way to make precise the statement “<nemeth class="inline">⠠⠙⠆⠴</nemeth> contains a copy of <nemeth class="inline">⠠⠙⠢</nemeth>.”</p>
            <p id="kwU">We build the domain and find its generators, so we know how many images to supply in the definition of the homomorphism. Then we construct the codomain, from which we will construct images. Our choice here is to send a reflection to a reflection, and a rotation to a rotation. But the rotations will both have order <nemeth class="inline">⠼⠢</nemeth>, and both are a rotation by <nemeth class="inline">⠼⠶⠆</nemeth> degrees.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(5)
H = DihedralGroup(20)
G.gens()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(1,2,3,4,5), (1,5)(2,4)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.gens()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),
 (1,20)(2,19)(3,18)(4,17)(5,16)(6,15)(7,14)(8,13)(9,12)(10,11)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x = H.gen(0)^4
y = H.gen(1)
rho = PermutationGroupMorphism(G, H, [x, y])
rho.kernel()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by [()] of (Dihedral group of order 10 as a permutation group)
</div>
            </article>
            <p id="QEd">Since the kernel is trivial, <code class="code-inline tex2jax_ignore">rho</code> is a one-to-one function (see Exercise 11.4.18). But more importantly, by the First Isomorphishm Theorem, <code class="code-inline tex2jax_ignore">G</code> is isomorphic to the image of the homomorphism. We compute the image and check the claim.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Im = rho.image(G); Im
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by [(1,5,9,13,17)(2,6,10,14,18)(3,7,11,15,19)(4,8,12,16,20), (1,20)(2,19)(3,18)(4,17)(5,16)(6,15)(7,14)(8,13)(9,12)(10,11)] 
of (Dihedral group of order 40 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Im.is_subgroup(H)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Im.is_isomorphic(G)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="wLm">Just providing a list of images for the generators of the domain is no guarantee that the function will extend to a homomorphism. For starters, the order of each image must divide the order of the corresponding preimage. (Can you prove this?) And similarly, if the domain is abelian, then the image must also be abelian, so in this case the list of images should not generate a non-abelian subgroup. Here is an example. There are no homomorphisms from a cyclic group of order <nemeth class="inline">⠼⠶</nemeth> to a cyclic group of order <nemeth class="inline">⠼⠲</nemeth> (other than the trivial function that takes every element to the identity). To see this, consider the possible orders of the kernel, and of the two possibilities, see that one is impossible and the other arises with the trivial homomorphism. Unfortunately, Sage acts as if nothing is wrong in creating a homomorphism between these groups, but what Sage builds is useless and raises errors when you try to use it.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(7)
H = CyclicPermutationGroup(4)
tau = PermutationGroupMorphism_im_gens(G, H, H.gens())
tau
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Permutation group morphism:
  From: Cyclic group of order 7 as a permutation group
  To:   Cyclic group of order 4 as a permutation group
  Defn: [(1,2,3,4,5,6,7)] -&gt; [(1,2,3,4)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau.kernel()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
RuntimeError: Gap produced error output
...
</div>
            </article>
            <p id="cSv">Rather than creating homomorphisms ourselves, in certain situations Sage knows of the existence of natural homomorphisms and will create them for you. One such case is a direct product construction. Given a group <code class="code-inline tex2jax_ignore">G</code>, the method <code class="code-inline tex2jax_ignore">.direct_product(H)</code> will create the direct product <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth>. (This is not the same command as the function <code class="code-inline tex2jax_ignore">direct_product_permgroups()</code> from before.) Not only does this command create the direct product, but it also builds <em class="emphasis">four</em> homomorphisms, one with domain <i class="one-letter">G</i>, one with domain <i class="one-letter">H</i> and two with domain <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth>. So the output consists of five objects, the first being the actual group, and the remainder are homomorphisms. We will demonstrate the call here, and leave a more thorough investigation for the exercises.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(3)
H = DihedralGroup(4)
results = G.direct_product(H)
results[0]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Permutation Group with generators [(4,5,6,7), (4,7)(5,6), (1,2,3)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">results[1]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Permutation group morphism:
  From: Cyclic group of order 3 as a permutation group
  To:   Permutation Group with generators
        [(4,5,6,7), (4,7)(5,6), (1,2,3)]
  Defn: Embedding( Group( [ (1,2,3), (4,5,6,7), (4,7)(5,6) ] ), 1 )
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">results[2]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Permutation group morphism:
  From: Dihedral group of order 8 as a permutation group
  To:   Permutation Group with generators
        [(4,5,6,7), (4,7)(5,6), (1,2,3)]
  Defn: Embedding( Group( [ (1,2,3), (4,5,6,7), (4,7)(5,6) ] ), 2 )
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">results[3]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Permutation group morphism:
  From: Permutation Group with generators
        [(4,5,6,7), (4,7)(5,6), (1,2,3)]
  To:   Cyclic group of order 3 as a permutation group
  Defn: Projection( Group( [ (1,2,3), (4,5,6,7), (4,7)(5,6) ] ), 1 )
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">results[4]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Permutation group morphism:
  From: Permutation Group with generators
        [(4,5,6,7), (4,7)(5,6), (1,2,3)]
  To:   Dihedral group of order 8 as a permutation group
  Defn: Projection( Group( [ (1,2,3), (4,5,6,7), (4,7)(5,6) ] ), 2 )
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="iAq">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">11.7</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="vyC">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="uVZ">An automorphism is an isomorphism between a group and itself. The identity function (<nemeth class="inline">⠭⠀⠫⠳⠒⠒⠕⠀⠭</nemeth>) is always an isomorphism, which we consider trivial. Use Sage to construct a nontrivial automorphism of the cyclic group of order <nemeth class="inline">⠼⠂⠆</nemeth>. Check that the mapping is both onto and one-to-one by computing the image and kernel and performing the proper tests on these subgroups. Now construct all of the possible automorphisms of the cyclic group of order <nemeth class="inline">⠼⠂⠆</nemeth> without any duplicates.</p>
          </article>
          <article class="exercise exercise-like" id="bFL">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="bdi">The four homomorphisms created by the direct product construction are each an example of a more general construction of homomorphisms involving groups <i class="one-letter">G</i>, <i class="one-letter">H</i> and <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth>. By using the same groups as in the example in the previous subsection, see if you can discover and describe these constructions with exact definitions of the four homomorphisms in general.</p>
            <p id="Hkr">Your tools for investigating a Sage group homomorphism are limited, you might take each generator of the domain and see what its image is. Here is an example of the type of computation you might do repeatedly. We'll investigate the second homomorphism. The domain is the dihedral group, and we will compute the image of the first generator.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclicPermutationGroup(3)
H = DihedralGroup(4)
results = G.direct_product(H)
phi = results[2]
H.gens()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(1,2,3,4), (1,4)(2,3)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = H.gen(0); a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,2,3,4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">phi(a)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4,5,6,7)
</div>
            </article>
          </article>
          <article class="exercise exercise-like" id="HMU">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="nrA">Consider two permutation groups. The first is the subgroup of <nemeth class="inline">⠠⠎⠶</nemeth> generated by <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠾</nemeth> and <nemeth class="inline">⠷⠼⠲⠠⠀⠼⠢⠠⠀⠼⠖⠠⠀⠼⠶⠾</nemeth>. The second is a subgroup of <nemeth class="inline">⠠⠎⠂⠆</nemeth> generated by <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠾⠷⠼⠲⠠⠀⠼⠢⠠⠀⠼⠖⠾⠷⠼⠶⠠⠀⠼⠦⠠⠀⠼⠔⠾⠷⠼⠂⠴⠠⠀⠼⠂⠂⠠⠀⠼⠂⠆⠾</nemeth> and <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠂⠴⠠⠀⠼⠶⠠⠀⠼⠲⠾⠷⠼⠆⠠⠀⠼⠂⠂⠠⠀⠼⠦⠠⠀⠼⠢⠾⠷⠼⠒⠠⠀⠼⠂⠆⠠⠀⠼⠔⠠⠀⠼⠖⠾</nemeth>. Build these two groups and use the proper Sage command to see that they are isomorphic. Then construct a homomorphism between these two groups that is an isomorphism and include enough details to verify that the mapping is really an isomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="nUd">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="TyJ">The second paragraph of this chapter informally describes a homomorphism from <nemeth class="inline">⠠⠎⠰⠝</nemeth> to <nemeth class="inline">⠸⠠⠵⠆</nemeth>, where the even permutations all map to one of the elements and the odd permutations all map to the other element. Replace <nemeth class="inline">⠠⠎⠰⠝</nemeth> by <nemeth class="inline">⠠⠎⠖</nemeth> and replace <nemeth class="inline">⠸⠠⠵⠆</nemeth> by the permutation version of the cyclic subgroup of order <nemeth class="inline">⠼⠆</nemeth>, and construct a nontrivial homomorphism between these two groups. Evaluate your homomorphism with enough even and odd permutations to be convinced that it is correct. Then construct the kernel and verify that it is the group you expect.</p>
            <p id="zFS">Hints: First, decide which elements of the group of order <nemeth class="inline">⠼⠆</nemeth> will be associated with even permutations and which will be associated with odd permutations. Then examine the generators of <nemeth class="inline">⠠⠎⠖</nemeth> to help decide just how to build the homomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="Ubm">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="fNb">The dihedral group <nemeth class="inline">⠠⠙⠆⠴</nemeth> has several normal subgroups, as seen below. Each of these is the kernel of a homomorphism with <nemeth class="inline">⠠⠙⠆⠴</nemeth> as the domain. For each normal subgroup of <nemeth class="inline">⠠⠙⠆⠴</nemeth> construct a homomorphism from <nemeth class="inline">⠠⠙⠆⠴</nemeth> to <nemeth class="inline">⠠⠙⠆⠴</nemeth> that has the normal subgroup as the kernel. Include in your work verifications that you are creating the desired kernels. There is a pattern to many of these, but the three of order <nemeth class="inline">⠼⠆⠴</nemeth> will be a challenge.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(20)
[H.order() for H in G.normal_subgroups()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[40, 20, 20, 20, 10, 4, 2, 5, 1]
</div>
            </article>
          </article>
        </section>
      </section>
      <section class="chapter" id="CSk">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">12</span> <span class="title">Matrix Groups and Symmetry</span></div>
        <section class="introduction" id="Zki">
          <p id="cHE">When Felix Klein  (1849–1925) accepted a chair at the University of Erlangen, he outlined in his inaugural address a program to classify different geometries. Central to Klein's program was the theory of groups: he considered geometry to be the study of properties that are left invariant under transformation groups. Groups, especially matrix groups, have now become important in the study of symmetry and have found applications in such disciplines as chemistry and physics. In the first part of this chapter, we will examine some of the classical matrix groups, such as the general linear group, the special linear group, and the orthogonal group. We will then use these matrix groups to investigate some of the ideas behind geometric symmetry.</p>
        </section>
        <section class="section" id="geN">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">12.1</span> <span class="title">Matrix Groups</span></div>
          <section class="subsection" id="iZt">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">12.1.1</span> <span class="title">Some Facts from Linear Algebra</span></div>
            <p id="Mtn">Before we study matrix groups, we must recall some basic facts from linear algebra. One of the most fundamental ideas of linear algebra is that of a linear transformation. A <dfn class="terminology">linear transformation</dfn> or <dfn class="terminology">linear map</dfn>  <nemeth class="inline">⠠⠞⠒⠀⠸⠠⠗⠘⠝⠐⠀⠫⠕⠀⠸⠠⠗⠘⠍</nemeth> is a map that preserves vector addition and scalar multiplication; that is, for vectors <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> and a scalar <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠸⠠⠗</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠠⠞⠷⠸⠭⠬⠸⠽⠾⠀⠀⠨⠅⠀⠠⠞⠷⠸⠭⠾⠬⠠⠞⠷⠸⠽⠾⠀⠠⠞⠷⠨⠁⠸⠽⠾⠀⠀⠨⠅⠀⠨⠁⠠⠞⠷⠸⠽⠾</nemeth>
            </div>
            <p data-braille="continuation">. An <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrix with entries in <nemeth class="inline">⠸⠠⠗</nemeth> represents a linear transformation from <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠍</nemeth>. If we write vectors <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠘⠞</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠽⠂⠠⠀⠄⠄⠄⠀⠠⠀⠽⠰⠝⠐⠾⠘⠞</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> as column matrices, then an <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠂⠂⠀⠁⠂⠆⠀⠄⠄⠄⠀⠁⠰⠂⠝⠐⠠⠾⠀⠠⠷⠁⠆⠂⠀⠁⠆⠆⠀⠄⠄⠄⠀⠁⠰⠆⠝⠐⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠁⠰⠍⠐⠂⠐⠀⠁⠰⠍⠐⠆⠐⠀⠄⠄⠄⠀⠁⠰⠍⠝⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">maps the vectors to <nemeth class="inline">⠸⠠⠗⠘⠍</nemeth> linearly by matrix multiplication. Observe that if <nemeth class="inline">⠨⠁</nemeth> is a real number,</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠷⠸⠭⠬⠸⠽⠾⠀⠨⠅⠀⠠⠁⠸⠭⠬⠠⠁⠸⠽⠁⠝⠙⠨⠁⠠⠁⠸⠭⠀⠨⠅⠀⠠⠁⠷⠨⠁⠸⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">, where</p>
            <div class="displaymath">
              <nemeth>⠸⠭⠀⠨⠅⠀⠭⠂⠀⠭⠆⠀⠣⠄⠄⠄⠀⠭⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">. We will often abbreviate the matrix <i class="one-letter">A</i> by writing <nemeth class="inline">⠷⠁⠰⠊⠚⠐⠾</nemeth>. </p>
            <p id="sAw">Conversely, if <nemeth class="inline">⠠⠞⠒⠀⠸⠠⠗⠘⠝⠐⠀⠫⠕⠀⠸⠠⠗⠘⠍</nemeth> is a linear map, we can associate a matrix <i class="one-letter">A</i> with <i class="one-letter">T</i> by considering what <i class="one-letter">T</i> does to the vectors</p>
            <div class="displaymath">
              <nemeth>⠸⠑⠂⠀⠀⠨⠅⠀⠷⠼⠂⠠⠀⠼⠴⠠⠀⠄⠄⠄⠀⠠⠀⠼⠴⠾⠘⠞⠐⠀⠸⠑⠆⠀⠀⠨⠅⠀⠷⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠴⠾⠘⠞⠐⠀⠀⠀⠣⠄⠄⠄⠀⠀⠀⠸⠑⠰⠝⠀⠀⠨⠅⠀⠷⠼⠴⠠⠀⠼⠴⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠾⠘⠞</nemeth>
            </div>
            <p data-braille="continuation">. We can write any vector <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠘⠞</nemeth> as</p>
            <div class="displaymath">
              <nemeth>⠭⠂⠸⠑⠂⠬⠭⠆⠸⠑⠆⠬⠄⠄⠄⠬⠭⠰⠝⠐⠸⠑⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">. Consequently, if</p>
            <div class="displaymath">
              <nemeth>⠠⠞⠷⠸⠑⠂⠾⠀⠀⠨⠅⠀⠷⠁⠂⠂⠠⠀⠁⠆⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠍⠐⠂⠐⠾⠘⠞⠐⠠⠀⠠⠞⠷⠸⠑⠆⠾⠀⠀⠨⠅⠀⠷⠁⠂⠆⠠⠀⠁⠆⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠍⠐⠆⠐⠾⠘⠞⠐⠠⠀⠀⠀⠣⠄⠄⠄⠀⠀⠀⠠⠞⠷⠸⠑⠰⠝⠐⠾⠀⠀⠨⠅⠀⠷⠁⠰⠂⠝⠐⠠⠀⠁⠰⠆⠝⠐⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠍⠝⠐⠾⠘⠞</nemeth>
            </div>
            <p data-braille="continuation">, then</p>
            <div class="displaymath">
              <nemeth>⠠⠞⠷⠸⠭⠾⠀⠀⠨⠅⠀⠠⠞⠷⠭⠂⠸⠑⠂⠬⠭⠆⠸⠑⠆⠬⠄⠄⠄⠬⠭⠰⠝⠐⠸⠑⠰⠝⠐⠾⠀⠀⠀⠀⠨⠅⠀⠭⠂⠠⠞⠷⠸⠑⠂⠾⠬⠭⠆⠠⠞⠷⠸⠑⠆⠾⠬⠄⠄⠄⠬⠭⠰⠝⠐⠠⠞⠷⠸⠑⠰⠝⠐⠾⠀⠀⠀⠀⠨⠅⠀⠷⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠁⠰⠂⠅⠐⠭⠰⠅⠐⠠⠀⠄⠄⠄⠀⠠⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠁⠰⠍⠅⠐⠭⠰⠅⠐⠾⠘⠞⠐⠀⠀⠀⠀⠨⠅⠀⠠⠁⠸⠭</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="example example-like" data-braille="example-like" id="YAo">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">12.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="rQC">If we let <nemeth class="inline">⠠⠞⠒⠀⠸⠠⠗⠘⠆⠐⠀⠫⠕⠀⠸⠠⠗⠘⠆</nemeth> be the map given by</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠷⠭⠂⠠⠀⠭⠆⠾⠀⠨⠅⠀⠷⠼⠆⠭⠂⠬⠢⠭⠆⠠⠀⠤⠼⠲⠭⠂⠬⠒⠭⠆⠾</nemeth>
              </div>
              <p data-braille="continuation">, the axioms that <i class="one-letter">T</i> must satisfy to be a linear transformation are easily verified. The column vectors <nemeth class="inline">⠠⠞⠸⠑⠂⠀⠨⠅⠀⠷⠼⠆⠠⠀⠤⠼⠲⠾⠘⠞</nemeth> and <nemeth class="inline">⠠⠞⠸⠑⠆⠀⠨⠅⠀⠷⠼⠢⠠⠀⠼⠒⠾⠘⠞</nemeth> tell us that <i class="one-letter">T</i> is given by the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠆⠀⠢⠠⠾⠀⠠⠷⠤⠼⠲⠀⠒⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="YHF">Since we are interested in groups of matrices, we need to know which matrices have multiplicative inverses. Recall that an <nemeth class="inline">⠝⠈⠡⠝</nemeth> matrix <i class="one-letter">A</i> is <dfn class="terminology">invertible</dfn>  exactly when there exists another matrix <nemeth class="inline">⠠⠁⠘⠤⠼⠂</nemeth> such that <nemeth class="inline">⠠⠁⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠁⠘⠤⠼⠂⠐⠠⠁⠀⠨⠅⠀⠠⠊</nemeth>, where</p>
            <div class="displaymath">
              <nemeth>⠠⠊⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠀⠄⠄⠄⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠄⠄⠄⠀⠴⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠴⠀⠴⠀⠄⠄⠄⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">is the <nemeth class="inline">⠝⠈⠡⠝</nemeth> identity matrix. From linear algebra we know that <i class="one-letter">A</i> is invertible if and only if the determinant of <i class="one-letter">A</i> is nonzero. Sometimes an invertible matrix is said to be <dfn class="terminology">nonsingular</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="EHx">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">12.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="XXL">If <i class="one-letter">A</i> is the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠆⠀⠂⠠⠾⠀⠠⠷⠢⠀⠒⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, then the inverse of <i class="one-letter">A</i> is</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠼⠒⠀⠤⠼⠂⠠⠾⠀⠠⠷⠤⠼⠢⠀⠆⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. We are guaranteed  that <nemeth class="inline">⠠⠁⠘⠤⠼⠂</nemeth> exists, since <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠾⠀⠨⠅⠀⠼⠆⠡⠒⠤⠢⠡⠂⠀⠨⠅⠀⠼⠂</nemeth> is nonzero.</p>
            </article>
            <p id="EOO">Some other facts about determinants will also prove useful in the course of this chapter. Let <i class="one-letter">A</i> and <i class="one-letter">B</i> be <nemeth class="inline">⠝⠈⠡⠝</nemeth> matrices. From linear algebra we have the following properties of determinants.</p>
            <ul class="outerlist">
              <li>• <p id="wma">The determinant is a homomorphism into the multiplicative group of real numbers; that is, <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠠⠃⠾⠀⠨⠅⠀⠷⠙⠑⠞⠀⠠⠁⠾⠷⠙⠑⠞⠀⠠⠃⠾</nemeth>.</p></li>
              <li>• <p id="ctj">If <i class="one-letter">A</i> is an invertible matrix, then <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠘⠤⠼⠂⠐⠾⠀⠨⠅⠀⠼⠂⠸⠌⠙⠑⠞⠀⠠⠁</nemeth>.</p></li>
              <li>• <p id="IAs">If we define the transpose of a matrix <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠷⠁⠰⠊⠚⠐⠾</nemeth> to be <nemeth class="inline">⠠⠁⠘⠞⠐⠀⠨⠅⠀⠷⠁⠰⠚⠊⠐⠾</nemeth>, then <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠘⠞⠐⠾⠀⠨⠅⠀⠙⠑⠞⠀⠠⠁</nemeth>.</p></li>
              <li>• <p id="oHB">Let <i class="one-letter">T</i> be the linear transformation associated with an <nemeth class="inline">⠝⠈⠡⠝</nemeth> matrix <i class="one-letter">A</i>. Then <i class="one-letter">T</i> multiplies volumes by a factor of <nemeth class="inline">⠳⠙⠑⠞⠀⠠⠁⠳</nemeth>. In the case of <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>, this means that <i class="one-letter">T</i> multiplies areas by <nemeth class="inline">⠳⠙⠑⠞⠀⠠⠁⠳</nemeth>.</p></li>
            </ul>
            <p id="kVX">Linear maps, matrices, and determinants are covered in any elementary linear algebra text; however, if you have not had a course in linear algebra, it is a straightforward process to verify these properties directly for <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices, the case with which we are most concerned.</p>
          </section>
          <section class="subsection" id="PgC">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">12.1.2</span> <span class="title">The General and Special Linear Groups</span></div>
            <p id="Rdg">The set of all <nemeth class="inline">⠝⠈⠡⠝</nemeth> invertible matrices forms a group called the <dfn class="terminology">general linear group</dfn>.  We will denote this group by <nemeth class="inline">⠠⠛⠠⠇⠰⠝⠐⠷⠸⠠⠗⠾</nemeth>. The general linear group has several important subgroups. The multiplicative properties of the determinant imply that the set of matrices with determinant one is a subgroup of the general linear group. Stated another way, suppose that <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠾⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>. Then <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠠⠃⠾⠀⠨⠅⠀⠙⠑⠞⠀⠷⠠⠁⠾⠙⠑⠞⠀⠷⠠⠃⠾⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠘⠤⠼⠂⠐⠾⠀⠨⠅⠀⠼⠂⠸⠌⠙⠑⠞⠀⠠⠁⠀⠨⠅⠀⠼⠂</nemeth>. This subgroup is called the <dfn class="terminology">special linear group</dfn> and is denoted by <nemeth class="inline">⠠⠎⠠⠇⠰⠝⠐⠷⠸⠠⠗⠾</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="kOG">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">12.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="EeU">Given a <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, the determinant of <i class="one-letter">A</i> is <nemeth class="inline">⠁⠙⠤⠃⠉</nemeth>. The group <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> consists of those matrices in which <nemeth class="inline">⠁⠙⠤⠃⠉⠀⠌⠨⠅⠀⠼⠴</nemeth>. The inverse of <i class="one-letter">A</i> is</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠹⠂⠌⠁⠙⠤⠃⠉⠼⠠⠷⠙⠀⠤⠃⠠⠾⠀⠠⠷⠤⠉⠀⠁⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. If <i class="one-letter">A</i> is in <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠙⠀⠤⠃⠠⠾⠀⠠⠷⠤⠉⠀⠁⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Geometrically, <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is the group that preserves the areas of parallelograms. Let</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">be in <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>. In Figure 12.1.4, the unit square corresponding to the vectors <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠂⠠⠀⠼⠴⠾⠘⠞</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠼⠴⠠⠀⠼⠂⠾⠘⠞</nemeth> is taken  by <i class="one-letter">A</i> to the parallelogram with sides <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠴⠾⠘⠞</nemeth> and <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠂⠾⠘⠞</nemeth>; that is, <nemeth class="inline">⠠⠁⠸⠭⠀⠨⠅⠀⠷⠼⠂⠠⠀⠼⠴⠾⠘⠞</nemeth> and <nemeth class="inline">⠠⠁⠸⠽⠀⠨⠅⠀⠷⠼⠂⠠⠀⠼⠂⠾⠘⠞</nemeth>. Notice that these two parallelograms have the same area.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="xkp">
              <div data-braille="image">
                <p>Image: Two side-by figures. The figure on the left is a square on set of axes with the left edge a vector from the origin to (0,1) and bottom edge a vector from the origin to (1,0). The figure on the right is a parallelogram on set of axes with the left edge a vector from the origin to (1,1) and bottom edge a vector from the origin to (1,0).</p>
                <p>ID: matrix-sl2r</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.1.4<span class="period">.</span></span><span class="space"> </span><nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> acting on the unit square</figcaption>
            </figure>
          </section>
          <section class="subsection" id="vnL">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">12.1.3</span> <span class="title">The Orthogonal Group <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth></span></div>
            <p id="dry">Another subgroup of <nemeth class="inline">⠠⠛⠠⠇⠰⠝⠐⠷⠸⠠⠗⠾</nemeth> is the orthogonal group. A matrix <i class="one-letter">A</i> is <dfn class="terminology">orthogonal</dfn>  if <nemeth class="inline">⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠁⠘⠞</nemeth>. The <dfn class="terminology">orthogonal group</dfn>  consists of the set of all orthogonal matrices. We write <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> for the <nemeth class="inline">⠝⠈⠡⠝</nemeth> orthogonal group.  We leave as an exercise the proof that <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠠⠇⠰⠝⠐⠷⠸⠠⠗⠾</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="dkh">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">12.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="kmd">The following matrices are orthogonal:</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠒⠸⠌⠢⠀⠤⠼⠲⠸⠌⠢⠠⠾⠀⠠⠷⠲⠸⠌⠢⠀⠒⠸⠌⠢⠠⠾⠠⠀⠠⠷⠼⠂⠸⠌⠆⠀⠤⠜⠒⠻⠸⠌⠆⠠⠾⠀⠠⠷⠜⠒⠻⠸⠌⠆⠀⠂⠸⠌⠆⠠⠾⠠⠀⠠⠷⠤⠼⠂⠸⠌⠜⠆⠻⠀⠴⠀⠂⠸⠌⠜⠆⠻⠠⠾⠀⠠⠷⠂⠸⠌⠜⠖⠻⠀⠤⠼⠆⠸⠌⠜⠖⠻⠀⠂⠸⠌⠜⠖⠻⠠⠾⠀⠠⠷⠂⠸⠌⠜⠒⠻⠀⠂⠸⠌⠜⠒⠻⠀⠂⠸⠌⠜⠒⠻⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="JyH">There is a more geometric way of viewing the group <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth>. The orthogonal matrices are exactly those matrices that preserve the length of vectors. We can define the length of a vector using the <dfn class="terminology">Euclidean inner product</dfn>,  or <dfn class="terminology">dot product</dfn>, of two vectors. The Euclidean inner product of two vectors <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠘⠞</nemeth> and <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠷⠽⠂⠠⠀⠄⠄⠄⠀⠠⠀⠽⠰⠝⠐⠾⠘⠞</nemeth> is</p>
            <div class="displaymath">
              <nemeth>⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠸⠭⠘⠞⠐⠸⠽⠀⠨⠅⠀⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠽⠂⠀⠽⠆⠀⠣⠄⠄⠄⠀⠽⠰⠝⠐⠀⠨⠅⠀⠭⠂⠽⠂⠬⠄⠄⠄⠬⠭⠰⠝⠐⠽⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">. We define the length of a vector <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠘⠞</nemeth> to be </p>
            <div class="displaymath">
              <nemeth>⠳⠳⠸⠭⠳⠳⠀⠨⠅⠀⠜⠨⠨⠷⠸⠭⠠⠀⠸⠭⠨⠨⠾⠻⠀⠨⠅⠀⠜⠭⠂⠘⠆⠐⠬⠄⠄⠄⠬⠭⠰⠝⠘⠆⠐⠻</nemeth>
            </div>
            <p data-braille="continuation">. Associated with the notion of the length of a vector is the idea of the distance between two vectors. We define the <dfn class="terminology">distance</dfn> between two vectors <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> to be <nemeth class="inline">⠳⠳⠸⠭⠤⠸⠽⠳⠳</nemeth>. We leave as an exercise the proof of the following proposition about the properties of Euclidean inner products.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="xcY">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">12.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="fCk">Let <nemeth class="inline">⠸⠭</nemeth>, <nemeth class="inline">⠸⠽</nemeth>, and <nemeth class="inline">⠸⠺</nemeth> be vectors in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠸⠠⠗</nemeth>. Then</p>
              <ol class="outerlist">
                <li>1. <p id="UOK"><nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠽⠠⠀⠸⠭⠨⠨⠾</nemeth>.</p></li>
                <li>2. <p id="AVT"><nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠽⠬⠸⠺⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠬⠨⠨⠷⠸⠭⠠⠀⠸⠺⠨⠨⠾</nemeth>.</p></li>
                <li>3. <p id="hdc"><nemeth class="inline">⠨⠨⠷⠁⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠁⠸⠽⠨⠨⠾⠀⠨⠅⠀⠁⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth>.</p></li>
                <li>4. <p id="Nkl"><nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠭⠨⠨⠾⠀⠨⠂⠱⠀⠼⠴</nemeth> with equality exactly when <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
                <li>5. <p id="tru">If <nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠼⠴</nemeth> for all <nemeth class="inline">⠸⠭</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth>, then <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
              </ol>
            </article>
            <article class="example example-like" data-braille="example-like" id="Jrq">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">12.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="Qtm">The vector <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠼⠒⠠⠀⠼⠲⠾⠘⠞</nemeth> has length <nemeth class="inline">⠜⠒⠘⠆⠐⠬⠲⠘⠆⠐⠻⠀⠨⠅⠀⠼⠢</nemeth>. We can also see that the orthogonal matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠒⠸⠌⠢⠀⠤⠼⠲⠸⠌⠢⠠⠾⠀⠠⠷⠲⠸⠌⠢⠀⠒⠸⠌⠢⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">preserves the length of this vector. The vector <nemeth class="inline">⠠⠁⠸⠭⠀⠨⠅⠀⠷⠤⠼⠶⠸⠌⠢⠠⠀⠼⠆⠲⠸⠌⠢⠾⠘⠞</nemeth> also has length 5.</p>
            </article>
            <p id="pFQ">Since <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠠⠁⠘⠞⠐⠾⠀⠨⠅⠀⠙⠑⠞⠀⠷⠠⠊⠾⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠾⠀⠨⠅⠀⠙⠑⠞⠀⠷⠠⠁⠘⠞⠐⠾</nemeth>, the determinant of any orthogonal matrix is either <nemeth class="inline">⠼⠂</nemeth> or <nemeth class="inline">⠤⠼⠂</nemeth>. Consider the column vectors</p>
            <div class="displaymath">
              <nemeth>⠸⠁⠰⠚⠐⠀⠨⠅⠀⠁⠰⠂⠚⠐⠀⠁⠰⠆⠚⠐⠀⠣⠄⠄⠄⠀⠁⠰⠝⠚</nemeth>
            </div>
            <p data-braille="continuation">of the orthogonal matrix <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠷⠁⠰⠊⠚⠐⠾</nemeth>. Since <nemeth class="inline">⠠⠁⠠⠁⠘⠞⠐⠀⠨⠅⠀⠠⠊</nemeth>, <nemeth class="inline">⠨⠨⠷⠸⠁⠰⠗⠐⠠⠀⠸⠁⠰⠎⠐⠨⠨⠾⠀⠨⠅⠀⠨⠙⠰⠗⠎</nemeth>, where</p>
            <div class="displaymath">
              <nemeth>⠨⠙⠰⠗⠎⠐⠀⠨⠅⠀⠀⠨⠅⠀⠨⠠⠷⠼⠂⠀⠗⠀⠨⠅⠀⠎⠀⠨⠠⠷⠴⠀⠗⠀⠌⠨⠅⠀⠎⠐</nemeth>
            </div>
            <p data-braille="continuation">is the Kronecker delta.  Accordingly, column vectors of an orthogonal matrix all have length 1; and the Euclidean inner product of distinct column vectors is zero. Any set of vectors satisfying these properties is called an <dfn class="terminology">orthonormal set</dfn>.  Conversely, given an <nemeth class="inline">⠝⠈⠡⠝</nemeth> matrix <i class="one-letter">A</i> whose columns form an orthonormal set, it follows that <nemeth class="inline">⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠁⠘⠞</nemeth>.</p>
            <p id="VMZ">We say that a matrix <i class="one-letter">A</i> is <dfn class="terminology">distance-preserving</dfn>,  <dfn class="terminology">length-preserving</dfn>,  or <dfn class="terminology">inner product-preserving</dfn> when <nemeth class="inline">⠳⠳⠠⠁⠸⠭⠤⠠⠁⠸⠽⠳⠳⠀⠨⠅⠀⠳⠳⠸⠭⠤⠸⠽⠳⠳</nemeth>, <nemeth class="inline">⠳⠳⠠⠁⠸⠭⠳⠳⠀⠨⠅⠀⠳⠳⠸⠭⠳⠳</nemeth>, or <nemeth class="inline">⠨⠨⠷⠠⠁⠸⠭⠠⠀⠠⠁⠸⠽⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth>, respectively. The following theorem, which characterizes the orthogonal group, says that these notions are the same.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="QVP">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">12.1.8</span>
                <span class="period">.</span>
              </h6>
              <p id="uLi">Let <i class="one-letter">A</i> be an <nemeth class="inline">⠝⠈⠡⠝</nemeth> matrix. The following statements are equivalent.</p>
              <ol class="outerlist">
                <li>1. <p id="ZyD">The columns of the matrix <i class="one-letter">A</i> form an orthonormal set.</p></li>
                <li>2. <p id="FFM"><nemeth class="inline">⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠁⠘⠞</nemeth>.</p></li>
                <li>3. <p id="lMV">For vectors <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth>, <nemeth class="inline">⠨⠨⠷⠠⠁⠸⠭⠠⠀⠠⠁⠸⠽⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth>.</p></li>
                <li>4. <p id="RUe">For vectors <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth>, <nemeth class="inline">⠳⠳⠠⠁⠸⠭⠤⠠⠁⠸⠽⠳⠳⠀⠨⠅⠀⠳⠳⠸⠭⠤⠸⠽⠳⠳</nemeth>.</p></li>
                <li>5. <p id="ybn">For any vector <nemeth class="inline">⠸⠭</nemeth>, <nemeth class="inline">⠳⠳⠠⠁⠸⠭⠳⠳⠀⠨⠅⠀⠳⠳⠸⠭⠳⠳</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="lyA">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Fkn">We have already shown (1) and (2) to be equivalent.</p>
              <p id="lrw"><nemeth class="inline">⠷⠼⠆⠾⠀⠫⠒⠒⠕⠕⠀⠷⠼⠒⠾</nemeth>.</p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠠⠁⠸⠭⠠⠀⠠⠁⠸⠽⠨⠨⠾⠀⠀⠨⠅⠀⠷⠠⠁⠸⠭⠾⠘⠞⠐⠠⠁⠸⠽⠀⠀⠀⠀⠨⠅⠀⠸⠭⠘⠞⠐⠠⠁⠘⠞⠐⠠⠁⠸⠽⠀⠀⠀⠀⠨⠅⠀⠸⠭⠘⠞⠐⠸⠽⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="RyF"><nemeth class="inline">⠷⠼⠒⠾⠀⠫⠒⠒⠕⠕⠀⠷⠼⠆⠾</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠸⠭⠠⠀⠸⠭⠨⠨⠾⠀⠀⠨⠅⠀⠨⠨⠷⠠⠁⠸⠭⠠⠀⠠⠁⠸⠭⠨⠨⠾⠀⠀⠀⠀⠨⠅⠀⠸⠭⠘⠞⠐⠠⠁⠘⠞⠐⠠⠁⠸⠭⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠠⠁⠘⠞⠐⠠⠁⠸⠭⠨⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">, we know that <nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠷⠠⠁⠘⠞⠐⠠⠁⠤⠠⠊⠾⠸⠭⠨⠨⠾⠀⠨⠅⠀⠼⠴</nemeth> for all <nemeth class="inline">⠸⠭</nemeth>. Therefore, <nemeth class="inline">⠠⠁⠘⠞⠐⠠⠁⠤⠠⠊⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠁⠘⠞</nemeth>.</p>
              <p id="xFO"><nemeth class="inline">⠷⠼⠒⠾⠀⠫⠒⠒⠕⠕⠀⠷⠼⠲⠾</nemeth>. If <i class="one-letter">A</i> is inner product-preserving, then <i class="one-letter">A</i> is distance-preserving, since</p>
              <div class="displaymath">
                <nemeth>⠳⠳⠠⠁⠸⠭⠤⠠⠁⠸⠽⠳⠳⠘⠆⠀⠀⠨⠅⠀⠳⠳⠠⠁⠷⠸⠭⠤⠸⠽⠾⠳⠳⠘⠆⠐⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠠⠁⠷⠸⠭⠤⠸⠽⠾⠠⠀⠠⠁⠷⠸⠭⠤⠸⠽⠾⠨⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠸⠭⠤⠸⠽⠠⠀⠸⠭⠤⠸⠽⠨⠨⠾⠀⠀⠀⠀⠨⠅⠀⠳⠳⠸⠭⠤⠸⠽⠳⠳⠘⠆</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="dMX"><nemeth class="inline">⠷⠼⠲⠾⠀⠫⠒⠒⠕⠕⠀⠷⠼⠢⠾</nemeth>. If <i class="one-letter">A</i> is distance-preserving, then <i class="one-letter">A</i> is length-preserving. Letting <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠼⠴</nemeth>, we have</p>
              <div class="displaymath">
                <nemeth>⠳⠳⠠⠁⠸⠭⠳⠳⠀⠨⠅⠀⠳⠳⠠⠁⠸⠭⠤⠠⠁⠸⠽⠳⠳⠀⠨⠅⠀⠳⠳⠸⠭⠤⠸⠽⠳⠳⠀⠨⠅⠀⠳⠳⠸⠭⠳⠳</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="JUg"><nemeth class="inline">⠷⠼⠢⠾⠀⠫⠒⠒⠕⠕⠀⠷⠼⠒⠾</nemeth>. We use the following identity to show that length-preserving implies inner product-preserving:</p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠳⠳⠸⠭⠬⠸⠽⠳⠳⠘⠆⠐⠤⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">. Observe that</p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠠⠁⠸⠭⠠⠀⠠⠁⠸⠽⠨⠨⠾⠀⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠳⠳⠠⠁⠸⠭⠬⠠⠁⠸⠽⠳⠳⠘⠆⠐⠤⠳⠳⠠⠁⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠠⠁⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠳⠳⠠⠁⠷⠸⠭⠬⠸⠽⠾⠳⠳⠘⠆⠐⠤⠳⠳⠠⠁⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠠⠁⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠳⠳⠸⠭⠬⠸⠽⠳⠳⠘⠆⠐⠤⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="ibr">
              <div data-braille="image">
                <p>Image: Two side-by figures. The figure on the left is a set of axes with an arrow pointing up and right from the origin to (a,b) and the second arrow pointing down and right from the origin to a point (a, -b). The figure on the right is a set of axes with an arrow pointed up and right from the origin to (cosine theta, sine theta) and an arrow point up and left at a right angle to the first vector from the origin to (sine theta, minus cosine theta).</p>
                <p>ID: matrix-o2</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.1.9<span class="period">.</span></span><span class="space"> </span><nemeth class="inline">⠠⠕⠷⠼⠆⠾</nemeth> acting on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth></figcaption>
            </figure>
            <article class="example example-like" data-braille="example-like" id="pyz">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">12.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="wAv">Let us examine the orthogonal group on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> a bit more closely. An element <nemeth class="inline">⠠⠁⠀⠈⠑⠀⠠⠕⠷⠼⠆⠾</nemeth> is determined by its action on <nemeth class="inline">⠸⠑⠂⠀⠨⠅⠀⠷⠼⠂⠠⠀⠼⠴⠾⠘⠞</nemeth> and <nemeth class="inline">⠸⠑⠆⠀⠨⠅⠀⠷⠼⠴⠠⠀⠼⠂⠾⠘⠞</nemeth>. If <nemeth class="inline">⠠⠁⠸⠑⠂⠀⠨⠅⠀⠷⠁⠠⠀⠃⠾⠘⠞</nemeth>, then <nemeth class="inline">⠁⠘⠆⠐⠬⠃⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth>, since the length of a vector must be preserved when it is multiplied by <i class="one-letter">A</i>. Since multiplication of an element of <nemeth class="inline">⠠⠕⠷⠼⠆⠾</nemeth> preserves length and orthogonality, <nemeth class="inline">⠠⠁⠸⠑⠆⠀⠨⠅⠀⠬⠤⠷⠤⠃⠠⠀⠁⠾⠘⠞</nemeth>. If we choose <nemeth class="inline">⠠⠁⠸⠑⠆⠀⠨⠅⠀⠷⠤⠃⠠⠀⠁⠾⠘⠞</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠤⠃⠠⠾⠀⠠⠷⠃⠀⠁⠠⠾⠀⠨⠅⠀⠠⠷⠉⠕⠎⠀⠨⠹⠀⠤⠎⠊⠝⠀⠨⠹⠠⠾⠀⠠⠷⠎⠊⠝⠀⠨⠹⠀⠉⠕⠎⠀⠨⠹⠠⠾⠠</nemeth>
              </div>
              <p data-braille="continuation">where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠨⠹⠀⠐⠅⠀⠼⠆⠨⠏</nemeth>. The matrix <i class="one-letter">A</i> rotates a vector in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> counterclockwise about the origin by an angle of <nemeth class="inline">⠨⠹</nemeth> (Figure 12.1.9).</p>
              <p id="p-1906">If we choose <nemeth class="inline">⠠⠁⠸⠑⠆⠀⠨⠅⠀⠷⠃⠠⠀⠤⠁⠾⠘⠞</nemeth>, then we obtain the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠃⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠃⠀⠤⠁⠠⠾⠀⠨⠅⠀⠠⠷⠉⠕⠎⠀⠨⠹⠀⠎⠊⠝⠀⠨⠹⠠⠾⠀⠠⠷⠎⠊⠝⠀⠨⠹⠀⠤⠉⠕⠎⠀⠨⠹⠠⠾⠨⠐</nemeth>
              </div>
              <p data-braille="continuation">Here, <nemeth class="inline">⠙⠑⠞⠀⠠⠃⠀⠨⠅⠀⠤⠼⠂</nemeth> and</p>
              <div class="displaymath">
                <nemeth>⠠⠃⠘⠆⠐⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠨⠐</nemeth>
              </div>
              <p data-braille="continuation">A reflection about the horizontal axis is given by the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠉⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾⠠</nemeth>
              </div>
              <p data-braille="continuation">and <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠠⠁⠠⠉</nemeth> (see Figure 12.1.9). Thus, a reflection about a line <nemeth class="inline">⠈⠇</nemeth> is simply a reflection about the horizontal axis followed by a rotation.</p>
            </article>
            <p id="BUi">Two of the other matrix or matrix-related groups that we will consider are the special orthogonal group  and the group of Euclidean motions. The <dfn class="terminology">special orthogonal group</dfn>,  <nemeth class="inline">⠠⠎⠠⠕⠷⠝⠾</nemeth>, is just the intersection of <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> and <nemeth class="inline">⠠⠎⠠⠇⠰⠝⠐⠷⠸⠠⠗⠾</nemeth>; that is, those elements in <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> with determinant one.  The <dfn class="terminology">Euclidean group</dfn>,  <nemeth class="inline">⠠⠑⠷⠝⠾</nemeth>, can be written as ordered pairs <nemeth class="inline">⠷⠠⠁⠠⠀⠸⠭⠾</nemeth>, where <i class="one-letter">A</i> is in <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> and <nemeth class="inline">⠸⠭</nemeth> is in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth>. We define multiplication by </p>
            <div class="displaymath">
              <nemeth>⠷⠠⠁⠠⠀⠸⠭⠾⠷⠠⠃⠠⠀⠸⠽⠾⠀⠨⠅⠀⠷⠠⠁⠠⠃⠠⠀⠠⠁⠸⠽⠬⠸⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">. The identity of the group is <nemeth class="inline">⠷⠠⠊⠠⠀⠼⠴⠾</nemeth>; the inverse of <nemeth class="inline">⠷⠠⠁⠠⠀⠸⠭⠾</nemeth> is <nemeth class="inline">⠷⠠⠁⠘⠤⠼⠂⠐⠠⠀⠤⠠⠁⠘⠤⠼⠂⠐⠸⠭⠾</nemeth>. In Exercise 12.4.6, you are asked to check that <nemeth class="inline">⠠⠑⠷⠝⠾</nemeth> is indeed a group under this operation.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="OiA">
              <div data-braille="image">
                <p>Image: Two side-by figures. The figure on the left is a set of axes with an arrow pointing up and right from the origin to a point x. The figure on the right is a set of axes with an arrow of the same length and same direction from a point to the right and above the origin to a point x + y.</p>
                <p>ID: matrix-r2-translations</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.1.11<span class="period">.</span></span><span class="space"> </span>Translations in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth></figcaption>
            </figure>
          </section>
        </section>
        <section class="section" id="MlW">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">12.2</span> <span class="title">Symmetry</span></div>
          <section class="introduction" id="Frr">
            <p id="ION">An <dfn class="terminology">isometry</dfn>  or <dfn class="terminology">rigid motion</dfn>  in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> is a distance-preserving function <i class="one-letter">f</i> from <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth>. This means that <i class="one-letter">f</i> must satisfy</p>
            <div class="displaymath">
              <nemeth>⠳⠳⠋⠷⠸⠭⠾⠤⠋⠷⠸⠽⠾⠳⠳⠀⠨⠅⠀⠳⠳⠸⠭⠤⠸⠽⠳⠳</nemeth>
            </div>
            <p data-braille="continuation">for all <nemeth class="inline">⠸⠭⠠⠀⠸⠽⠀⠈⠑⠀⠸⠠⠗⠘⠝</nemeth>. It is not difficult to show that <i class="one-letter">f</i> must be a one-to-one map. By Theorem 12.1.8, any element in <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> is an isometry on <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth>; however, <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> does not include all possible isometries on <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth>. Translation by a vector <nemeth class="inline">⠸⠭</nemeth>, <nemeth class="inline">⠠⠞⠰⠸⠽⠐⠷⠸⠭⠾⠀⠨⠅⠀⠸⠭⠬⠸⠽</nemeth> is also an isometry (Figure 12.1.11); however, <i class="one-letter">T</i> cannot be in <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> since it is not a linear map.</p>
            <p id="oVW">We are mostly interested in isometries in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>. In fact, the only isometries in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> are rotations and reflections about the origin, translations, and combinations of the two. For example, a <dfn class="terminology">glide reflection</dfn>  is a translation followed by a reflection (Figure 12.2.1). In <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> all isometries are given in the same manner. The proof is very easy to generalize.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="hrx">
              <div data-braille="image">
                <p>Image: Two side-by figures. The figure on the left is a set of axes with an arrow pointing up and right from the origin to a point x. The figure on the right is a set of axes with an arrow of the same length but pointing down and right from a point on the horizontal axis to a point T(x).</p>
                <p>ID: matrix-glide-reflections</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.2.1<span class="period">.</span></span><span class="space"> </span>Glide reflections</figcaption>
            </figure>
            <article class="lemma theorem-like" data-braille="theorem-like" id="tcZ">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">12.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="LJt">An isometry <i class="one-letter">f</i> that fixes the origin in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> is a linear transformation. In particular, <i class="one-letter">f</i> is given by an element in <nemeth class="inline">⠠⠕⠷⠼⠆⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="xMS">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="qbp">Let <i class="one-letter">f</i> be an isometry in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> fixing the origin. We will first show that <i class="one-letter">f</i> preserves inner products. Since <nemeth class="inline">⠋⠷⠼⠴⠾⠀⠨⠅⠀⠼⠴</nemeth>, <nemeth class="inline">⠳⠳⠋⠷⠸⠭⠾⠳⠳⠀⠨⠅⠀⠳⠳⠸⠭⠳⠳</nemeth>; therefore,</p>
              <div class="displaymath">
                <nemeth>⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠆⠨⠨⠷⠋⠷⠸⠭⠾⠠⠀⠋⠷⠸⠽⠾⠨⠨⠾⠬⠳⠳⠸⠽⠳⠳⠘⠆⠀⠀⠨⠅⠀⠳⠳⠋⠷⠸⠭⠾⠳⠳⠘⠆⠐⠤⠆⠨⠨⠷⠋⠷⠸⠭⠾⠠⠀⠋⠷⠸⠽⠾⠨⠨⠾⠬⠳⠳⠋⠷⠸⠽⠾⠳⠳⠘⠆⠐⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠋⠷⠸⠭⠾⠤⠋⠷⠸⠽⠾⠠⠀⠋⠷⠸⠭⠾⠤⠋⠷⠸⠽⠾⠨⠨⠾⠀⠀⠀⠀⠨⠅⠀⠳⠳⠋⠷⠸⠭⠾⠤⠋⠷⠸⠽⠾⠳⠳⠘⠆⠐⠀⠀⠀⠀⠨⠅⠀⠳⠳⠸⠭⠤⠸⠽⠳⠳⠘⠆⠐⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠸⠭⠤⠸⠽⠠⠀⠸⠭⠤⠸⠽⠨⠨⠾⠀⠀⠀⠀⠨⠅⠀⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠆⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠬⠳⠳⠸⠽⠳⠳⠘⠆</nemeth>
              </div>
              <p data-braille="continuation">. Consequently,</p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠋⠷⠸⠭⠾⠠⠀⠋⠷⠸⠽⠾⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Now let <nemeth class="inline">⠸⠑⠂</nemeth> and <nemeth class="inline">⠸⠑⠆</nemeth> be <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠴⠾⠘⠞</nemeth> and <nemeth class="inline">⠷⠼⠴⠠⠀⠼⠂⠾⠘⠞</nemeth>, respectively. If</p>
              <div class="displaymath">
                <nemeth>⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠭⠆⠾⠀⠨⠅⠀⠭⠂⠸⠑⠂⠬⠭⠆⠸⠑⠆</nemeth>
              </div>
              <p data-braille="continuation">, then</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠸⠭⠾⠀⠨⠅⠀⠨⠨⠷⠋⠷⠸⠭⠾⠠⠀⠋⠷⠸⠑⠂⠾⠨⠨⠾⠋⠷⠸⠑⠂⠾⠬⠨⠨⠷⠋⠷⠸⠭⠾⠠⠀⠋⠷⠸⠑⠆⠾⠨⠨⠾⠋⠷⠸⠑⠆⠾⠀⠨⠅⠀⠭⠂⠋⠷⠸⠑⠂⠾⠬⠭⠆⠋⠷⠸⠑⠆⠾</nemeth>
              </div>
              <p data-braille="continuation">. The linearity of <i class="one-letter">f</i> easily follows.</p>
            </article>
            <p id="Vdf">For any arbitrary isometry, <i class="one-letter">f</i>, <nemeth class="inline">⠠⠞⠰⠸⠭⠐⠋</nemeth> will fix the origin for some vector <nemeth class="inline">⠸⠭</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>; hence, <nemeth class="inline">⠠⠞⠰⠸⠭⠐⠋⠷⠸⠽⠾⠀⠨⠅⠀⠠⠁⠸⠽</nemeth> for some matrix <nemeth class="inline">⠠⠁⠀⠈⠑⠀⠠⠕⠷⠼⠆⠾</nemeth>. Consequently, <nemeth class="inline">⠋⠷⠸⠽⠾⠀⠨⠅⠀⠠⠁⠸⠽⠬⠸⠭</nemeth>. Given the isometries</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠸⠽⠾⠀⠀⠨⠅⠀⠠⠁⠸⠽⠬⠸⠭⠂⠀⠛⠷⠸⠽⠾⠀⠀⠨⠅⠀⠠⠃⠸⠽⠬⠸⠭⠆</nemeth>
            </div>
            <p data-braille="continuation">, their composition is</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠛⠷⠸⠽⠾⠾⠀⠨⠅⠀⠋⠷⠠⠃⠸⠽⠬⠸⠭⠆⠾⠀⠨⠅⠀⠠⠁⠠⠃⠸⠽⠬⠠⠁⠸⠭⠆⠬⠸⠭⠂</nemeth>
            </div>
            <p data-braille="continuation">. This last computation allows us to identify the group of isometries on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> with <nemeth class="inline">⠠⠑⠷⠼⠆⠾</nemeth>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="gOH">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">12.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="aSr">The group of isometries on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> is the Euclidean group, <nemeth class="inline">⠠⠑⠷⠼⠆⠾</nemeth>.</p>
            </article>
            <p id="Bko">A <dfn class="terminology">symmetry group</dfn>  in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> is a subgroup of the group of isometries on <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> that fixes a set of points <nemeth class="inline">⠠⠭⠀⠸⠐⠅⠀⠸⠠⠗⠘⠝</nemeth>. It is important to realize that the symmetry group of <i class="one-letter">X</i> depends <em class="emphasis">both</em> on <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> and on <i class="one-letter">X</i>. For example, the symmetry group of the origin in <nemeth class="inline">⠸⠠⠗⠘⠂</nemeth> is <nemeth class="inline">⠸⠠⠵⠆</nemeth>, but the symmetry group of the origin in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> is <nemeth class="inline">⠠⠕⠷⠼⠆⠾</nemeth>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="MVQ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">12.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="GZA">The only finite symmetry groups in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> are <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> and <nemeth class="inline">⠠⠙⠰⠝</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="RFJ">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="CpH">We simply need to find all of the finite subgroups <i class="one-letter">G</i> of <nemeth class="inline">⠠⠑⠷⠼⠆⠾</nemeth>. Any finite symmetry group <i class="one-letter">G</i> in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> must fix the origin  and must be a finite subgroup of <nemeth class="inline">⠠⠕⠷⠼⠆⠾</nemeth>, since translations and glide reflections have infinite order. By Example 12.1.10, elements in <nemeth class="inline">⠠⠕⠷⠼⠆⠾</nemeth> are either rotations of the form</p>
              <div class="displaymath">
                <nemeth>⠠⠗⠰⠨⠹⠐⠀⠨⠅⠀⠠⠷⠉⠕⠎⠀⠨⠹⠀⠤⠎⠊⠝⠀⠨⠹⠠⠾⠀⠠⠷⠎⠊⠝⠀⠨⠹⠀⠉⠕⠎⠀⠨⠹⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">or reflections of the form</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠨⠋⠐⠀⠨⠅⠀⠠⠷⠉⠕⠎⠀⠨⠋⠀⠤⠎⠊⠝⠀⠨⠋⠠⠾⠀⠠⠷⠎⠊⠝⠀⠨⠋⠀⠉⠕⠎⠀⠨⠋⠠⠾⠠⠷⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾⠀⠨⠅⠀⠠⠷⠉⠕⠎⠀⠨⠋⠀⠎⠊⠝⠀⠨⠋⠠⠾⠀⠠⠷⠎⠊⠝⠀⠨⠋⠀⠤⠉⠕⠎⠀⠨⠋⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Notice that <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠗⠰⠨⠹⠐⠾⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠞⠰⠨⠋⠐⠾⠀⠨⠅⠀⠤⠼⠂</nemeth>, and <nemeth class="inline">⠠⠞⠰⠨⠋⠘⠆⠐⠀⠨⠅⠀⠠⠊</nemeth>. We can divide the proof up into two cases. In the first case, all of the elements in <i class="one-letter">G</i> have determinant one. In the second case, there exists at least one element in <i class="one-letter">G</i> with determinant <nemeth class="inline">⠤⠼⠂</nemeth>.</p>
              <article class="case" id="case-1">
                <h6 class="heading">Case 1.</h6>
                <p id="iwQ">The determinant of every element in <i class="one-letter">G</i> is one. In this case every element in <i class="one-letter">G</i> must be a rotation. Since <i class="one-letter">G</i> is finite, there is a smallest angle, say <nemeth class="inline">⠨⠹⠴</nemeth>, such that the corresponding element <nemeth class="inline">⠠⠗⠰⠨⠹⠴</nemeth> is the smallest rotation in the positive direction. We claim that <nemeth class="inline">⠠⠗⠰⠨⠹⠴</nemeth> generates <i class="one-letter">G</i>. If not, then for some positive integer <i class="one-letter">n</i> there is an angle <nemeth class="inline">⠨⠹⠂</nemeth> between <nemeth class="inline">⠝⠨⠹⠴</nemeth> and <nemeth class="inline">⠷⠝⠬⠂⠾⠨⠹⠴</nemeth>. If so, then <nemeth class="inline">⠷⠝⠬⠂⠾⠨⠹⠴⠤⠨⠹⠂</nemeth> corresponds to a rotation smaller than <nemeth class="inline">⠨⠹⠴</nemeth>, which contradicts the minimality of <nemeth class="inline">⠨⠹⠴</nemeth>.</p>
              </article>
              <article class="case" id="case-2">
                <h6 class="heading">Case 2.</h6>
                <p id="ODZ">The group <i class="one-letter">G</i> contains a reflection <i class="one-letter">T</i>. The kernel of the homomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠨⠷⠤⠼⠂⠠⠀⠼⠂⠨⠾</nemeth> given by <nemeth class="inline">⠠⠁⠀⠫⠳⠒⠒⠕⠀⠙⠑⠞⠀⠷⠠⠁⠾</nemeth> consists of elements whose determinant is 1. Therefore, <nemeth class="inline">⠳⠠⠛⠸⠌⠅⠑⠗⠀⠨⠋⠳⠀⠨⠅⠀⠼⠆</nemeth>. We know that the kernel is cyclic by the first case and is a subgroup of <i class="one-letter">G</i> of, say, order <i class="one-letter">n</i>. Hence, <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠼⠆⠝</nemeth>. The elements of <i class="one-letter">G</i> are</p>
                <div class="displaymath">
                  <nemeth>⠠⠗⠰⠨⠹⠐⠠⠀⠄⠄⠄⠀⠠⠀⠠⠗⠰⠨⠹⠘⠝⠤⠂⠐⠠⠀⠠⠞⠠⠗⠰⠨⠹⠐⠠⠀⠄⠄⠄⠀⠠⠀⠠⠞⠠⠗⠰⠨⠹⠘⠝⠤⠂</nemeth>
                </div>
                <p data-braille="continuation">. These elements satisfy the relation</p>
                <div class="displaymath">
                  <nemeth>⠠⠞⠠⠗⠰⠨⠹⠐⠠⠞⠀⠨⠅⠀⠠⠗⠰⠨⠹⠘⠤⠼⠂</nemeth>
                </div>
                <p data-braille="continuation">. Consequently, <i class="one-letter">G</i> must be isomorphic to <nemeth class="inline">⠠⠙⠰⠝</nemeth> in this case.</p>
              </article>
            </article>
          </section>
          <section class="subsection" id="buU">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">12.2.1</span> <span class="title">The Wallpaper Groups</span></div>
            <p id="upJ">Suppose that we wish to study wallpaper patterns in the plane or crystals in three dimensions. Wallpaper patterns are simply repeating patterns in the plane (Figure 12.2.5). The analogs of wallpaper patterns in <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> are crystals, which we can think of as repeating patterns of molecules in three dimensions (Figure 12.2.6). The mathematical equivalent of a wallpaper or crystal pattern is called a lattice.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="XCm">
              <div data-braille="image">
                <p>Image: A wallpaper of chevrons with the top row of chevrons pointing downward, the second row of chevrons pointing upwards, and so on.</p>
                <p>ID: matrix-wallpaper-r2</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.2.5<span class="period">.</span></span><span class="space"> </span>A wallpaper pattern in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth></figcaption>
            </figure>
            <figure class="figure figure-like" data-braille="figure-like" id="DJv">
              <div data-braille="image">
                <p>Image: A three-dimensional lattice of cubes that are slanted to the right.  The vertices are highlighted with small filled circles.</p>
                <p>ID: matrix-crystal-r3</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.2.6<span class="period">.</span></span><span class="space"> </span>A crystal structure in <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth></figcaption>
            </figure>
            <p id="awS">Let us examine wallpaper patterns in the plane a little more closely. Suppose that <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> are linearly independent vectors in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>; that is, one vector cannot be a scalar multiple of the other. A <dfn class="terminology">lattice</dfn>  of <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> is the set of all linear combinations <nemeth class="inline">⠍⠸⠭⠬⠝⠸⠽</nemeth>, where <i class="one-letter">m</i> and <i class="one-letter">n</i> are integers. The vectors <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> are said to be a <dfn class="terminology">basis</dfn>  for the lattice.</p>
            <p id="GEb">Notice that a lattice can have several bases. For example, the vectors <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠂⠾⠘⠞</nemeth> and <nemeth class="inline">⠷⠼⠆⠠⠀⠼⠴⠾⠘⠞</nemeth> have the  same lattice as the vectors <nemeth class="inline">⠷⠤⠼⠂⠠⠀⠼⠂⠾⠘⠞</nemeth> and <nemeth class="inline">⠷⠤⠼⠂⠠⠀⠤⠼⠂⠾⠘⠞</nemeth> (Figure 12.2.7). However, any lattice is completely determined by a basis. Given two bases for the same lattice, say <nemeth class="inline">⠨⠷⠸⠭⠂⠠⠀⠸⠭⠆⠨⠾</nemeth> and <nemeth class="inline">⠨⠷⠸⠽⠂⠠⠀⠸⠽⠆⠨⠾</nemeth>, we can write</p>
            <div class="displaymath">
              <nemeth>⠸⠽⠂⠀⠀⠨⠅⠀⠨⠁⠂⠸⠭⠂⠬⠨⠁⠆⠸⠭⠆⠀⠸⠽⠆⠀⠀⠨⠅⠀⠨⠃⠂⠸⠭⠂⠬⠨⠃⠆⠸⠭⠆</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠨⠁⠂</nemeth>, <nemeth class="inline">⠨⠁⠆</nemeth>, <nemeth class="inline">⠨⠃⠂</nemeth>, and <nemeth class="inline">⠨⠃⠆</nemeth> are integers. The matrix corresponding to this transformation is</p>
            <div class="displaymath">
              <nemeth>⠠⠥⠀⠨⠅⠀⠠⠷⠨⠁⠂⠀⠨⠁⠆⠠⠾⠀⠠⠷⠨⠃⠂⠀⠨⠃⠆⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">. If we wish to give <nemeth class="inline">⠸⠭⠂</nemeth> and <nemeth class="inline">⠸⠭⠆</nemeth> in terms of <nemeth class="inline">⠸⠽⠂</nemeth> and <nemeth class="inline">⠸⠽⠆</nemeth>, we need only calculate <nemeth class="inline">⠠⠥⠘⠤⠼⠂</nemeth>; that is,</p>
            <div class="displaymath">
              <nemeth>⠠⠥⠘⠤⠼⠂⠐⠸⠽⠂⠀⠸⠽⠆⠀⠨⠅⠀⠸⠭⠂⠀⠸⠭⠆</nemeth>
            </div>
            <p data-braille="continuation">. Since <i class="one-letter">U</i> has integer entries, <nemeth class="inline">⠠⠥⠘⠤⠼⠂</nemeth> must also have integer entries; hence the determinants of both <i class="one-letter">U</i> and <nemeth class="inline">⠠⠥⠘⠤⠼⠂</nemeth> must be integers. Because <nemeth class="inline">⠠⠥⠠⠥⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠊</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠙⠑⠞⠀⠷⠠⠥⠠⠥⠘⠤⠼⠂⠐⠾⠀⠨⠅⠀⠙⠑⠞⠀⠷⠠⠥⠾⠙⠑⠞⠀⠷⠠⠥⠘⠤⠼⠂⠐⠾⠀⠨⠅⠀⠼⠂⠆</nemeth>
            </div>
            <p data-braille="continuation">consequently, <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠥⠾⠀⠨⠅⠀⠬⠤⠼⠂</nemeth>. A matrix with determinant <nemeth class="inline">⠬⠤⠼⠂</nemeth> and integer entries is called <dfn class="terminology">unimodular</dfn>.  For example, the matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠒⠀⠂⠠⠾⠀⠠⠷⠢⠀⠆⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">is unimodular. It should be clear that there is a minimum length for vectors in a lattice.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="jQE">
              <div data-braille="image">
                <p>Image: A lattice of parallelograms slanted to the right.  There are four arrows, each beginning in the center at the origin and pointing to the right to (2,0), pointing up and right to (1,1), pointing up and left to ( minus one, one), and pointing down and left to (minus one, minus one).</p>
                <p>ID: matrix-lattice-r2</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.2.7<span class="period">.</span></span><span class="space"> </span>A lattice in  <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth></figcaption>
            </figure>
            <p id="mLk">We can classify lattices by studying their symmetry groups. The symmetry group of a lattice is the subgroup of <nemeth class="inline">⠠⠑⠷⠼⠆⠾</nemeth> that maps the lattice to itself. We consider two lattices in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> to be equivalent if they have the same symmetry group. Similarly, classification of crystals in <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> is accomplished by associating a symmetry group, called a <dfn class="terminology">space group</dfn>, with each type of crystal.  Two lattices are considered different if their space groups are not the same. The natural question that now arises is how many space groups exist.</p>
            <p id="SSt">A space group is composed of two parts: a <dfn class="terminology">translation subgroup</dfn> and a <dfn class="terminology">point</dfn>.  The translation subgroup is an infinite abelian subgroup of the space group made up of the translational symmetries of the crystal; the point group is a finite group consisting of rotations and reflections of the crystal about a point. More specifically, a space group is a subgroup of <nemeth class="inline">⠠⠛⠀⠸⠐⠅⠀⠠⠑⠷⠼⠆⠾</nemeth> whose translations are a set of the form <nemeth class="inline">⠨⠷⠷⠠⠊⠠⠀⠞⠾⠒⠀⠞⠀⠈⠑⠀⠠⠇⠨⠾</nemeth>, where <i class="one-letter">L</i> is a lattice. Space groups are, of course, infinite. Using geometric arguments, we can prove the following theorem (see [5] or [6]).</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="VFI">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">12.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="ngJ">Every translation group in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> is isomorphic to <nemeth class="inline">⠸⠠⠵⠈⠡⠸⠠⠵</nemeth>.</p>
            </article>
            <p id="yZC">The point group of <i class="one-letter">G</i> is <nemeth class="inline">⠠⠛⠴⠀⠨⠅⠀⠨⠷⠠⠁⠒⠀⠷⠠⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠛⠋⠕⠗⠀⠎⠕⠍⠑⠃⠨⠾</nemeth>. In particular, <nemeth class="inline">⠠⠛⠴</nemeth> must be a subgroup of <nemeth class="inline">⠠⠕⠷⠼⠆⠾</nemeth>. Suppose that <nemeth class="inline">⠸⠭</nemeth> is a vector in a lattice <i class="one-letter">L</i> with space group <i class="one-letter">G</i>, translation group <i class="one-letter">H</i>, and point group <nemeth class="inline">⠠⠛⠴</nemeth>. For any element <nemeth class="inline">⠷⠠⠁⠠⠀⠸⠽⠾</nemeth> in <i class="one-letter">G</i>,</p>
            <div class="displaymath">
              <nemeth>⠷⠠⠁⠠⠀⠸⠽⠾⠷⠠⠊⠠⠀⠸⠭⠾⠷⠠⠁⠠⠀⠸⠽⠾⠘⠤⠼⠂⠀⠀⠨⠅⠀⠷⠠⠁⠠⠀⠠⠁⠸⠭⠬⠸⠽⠾⠷⠠⠁⠘⠤⠼⠂⠐⠠⠀⠤⠠⠁⠘⠤⠼⠂⠐⠸⠽⠾⠀⠀⠀⠀⠨⠅⠀⠷⠠⠁⠠⠁⠘⠤⠼⠂⠐⠠⠀⠤⠠⠁⠠⠁⠘⠤⠼⠂⠐⠸⠽⠬⠠⠁⠸⠭⠬⠸⠽⠾⠀⠀⠀⠀⠨⠅⠀⠷⠠⠊⠠⠀⠠⠁⠸⠭⠾⠆</nemeth>
            </div>
            <p data-braille="continuation">hence, <nemeth class="inline">⠷⠠⠊⠠⠀⠠⠁⠸⠭⠾</nemeth> is in the translation group of <i class="one-letter">G</i>. More specifically, <nemeth class="inline">⠠⠁⠸⠭</nemeth> must be in the lattice <i class="one-letter">L</i>. It is important to note that <nemeth class="inline">⠠⠛⠴</nemeth> is not usually a subgroup of the space group <i class="one-letter">G</i>; however, if <i class="one-letter">T</i> is the translation subgroup of <i class="one-letter">G</i>, then <nemeth class="inline">⠠⠛⠸⠌⠠⠞⠀⠈⠱⠈⠱⠀⠠⠛⠴</nemeth>. The proof of the following theorem can be found in [2], [5], or [6].</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="BMR">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">12.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="TnS">The point group in the wallpaper groups is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> or <nemeth class="inline">⠠⠙⠰⠝</nemeth>, where <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠖</nemeth>.</p>
            </article>
            <p id="fgL">To answer the question of how the point groups and the translation groups can be combined, we must look at the different types of lattices. Lattices can be classified by the structure of a single lattice cell. The possible cell shapes are parallelogram, rectangular, square, rhombic, and hexagonal (Figure 12.2.10). The wallpaper groups can now be classified according to the types of reflections that occur in each group: these are ordinarily reflections, glide reflections, both, or none.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="PXN">
              <div data-braille="image">
                <p>Image: There are two rows of figures.  The left top figure is a lattice of squares, the middle top figure is a lattice of rectangles that are not squares, the right top figure is  a lattice of rhombuses slanted to the left. The bottom left figure is a lattice of parallelograms that are not rhombuses slanted to the left.  The bottom right figure is a lattice of equilateral triangles, six of which make up a regular hexagon.</p>
                <p>ID: matrix-lattices-r2</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.2.10<span class="period">.</span></span><span class="space"> </span>Types of lattices in  <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth></figcaption>
            </figure>
            <figure class="table table-like" data-braille="figure-like" id="TgO">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">12.2.11<span class="period">.</span></span><span class="space"> </span>The 17 wallpaper groups</figcaption>
              <table>
                <tr>
                  <td class="c m b0 r0 l0 t2 lines">Notation and</td>
                  <td class="c m b0 r0 l0 t2 lines"/>
                  <td class="c m b0 r0 l0 t2 lines"/>
                  <td class="c m b0 r0 l0 t2 lines" data-braille="last-cell">Reflections or</td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l0 t0 lines">Space Groups</td>
                  <td class="c m b2 r0 l0 t0 lines">Point Group</td>
                  <td class="c m b2 r0 l0 t0 lines">Lattice Type</td>
                  <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell">Glide Reflections?</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">p1</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠸⠠⠵⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">parallelogram</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">none</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">p2</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠸⠠⠵⠆</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">parallelogram</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">none</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">p3</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠸⠠⠵⠒</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">hexagonal</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">none</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">p4</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠸⠠⠵⠲</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">square</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">none</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">p6</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠸⠠⠵⠖</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">hexagonal</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">none</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">pm</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">rectangular</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">reflections</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">pg</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">rectangular</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">glide reflections</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">cm</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">rhombic</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">both</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">pmm</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠆</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">rectangular</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">reflections</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">pmg</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠆</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">rectangular</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">glide reflections</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">pgg</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠆</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">rectangular</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">both</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">c2mm</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠆</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">rhombic</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">both</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">p3m1, p31m</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠒</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">hexagonal</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">both</td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l0 t0 lines">p4m, p4g</td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠲</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">square</td>
                  <td class="c m b0 r0 l0 t0 lines" data-braille="last-cell">both</td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l0 t0 lines">p6m</td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠠⠙⠖</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">hexagonal</td>
                  <td class="c m b2 r0 l0 t0 lines" data-braille="last-cell">both</td>
                </tr>
              </table>
            </figure>
            <article class="theorem theorem-like" data-braille="theorem-like" id="hUa">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">12.2.12</span>
                <span class="period">.</span>
              </h6>
              <p id="zvb">There are exactly 17 wallpaper groups.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="weW">
              <div data-braille="image">
                <p>Image: There are two side by side figures.  The figure on the left is a lattice of squares.  The figure on the right is a lattice of squares and in each square there are four rectangular paths form the center of the square that rotate counterclockwise.</p>
                <p>ID: matrix-p4m-p4g</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">12.2.13<span class="period">.</span></span><span class="space"> </span>The wallpaper groups p4m and  p4g</figcaption>
            </figure>
            <p id="LnU">The 17 wallpaper groups are listed in Table 12.2.11. The groups p3m1 and p31m can be distinguished by whether or not all of their threefold centers lie on the reflection axes: those of p3m1 must, whereas those of p31m may not. Similarly, the fourfold centers of p4m must lie on the reflection axes whereas those of p4g need not (Figure 12.2.13). The complete proof of this theorem can be found in several of the references at the end of this chapter, including [5], [6], [10], and [11].</p>
            <article class="paragraphs" id="zXE">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="rvd">We have not yet included any Sage material related to this chapter.</p>
            </article>
          </section>
          <section class="subsection" id="HCd">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">12.2.2</span> <span class="title">Historical Note</span></div>
            <p id="cmf">Symmetry groups have intrigued mathematicians for a long time. Leonardo da Vinci was probably the first person to know all of the point groups. At the International Congress of Mathematicians in 1900, David Hilbert  gave a now-famous address outlining 23 problems to guide mathematics in the twentieth century. Hilbert's eighteenth problem asked whether or not crystallographic groups in <i class="one-letter">n</i> dimensions were always finite. In 1910, L. Bieberbach  proved that crystallographic groups are finite in every dimension. Finding out how many of these groups there are in each dimension is another matter. In <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> there are 230 different space groups; in <nemeth class="inline">⠸⠠⠗⠘⠲</nemeth> there are 4783. No one has been able to compute the number of space groups for <nemeth class="inline">⠸⠠⠗⠘⠢</nemeth> and beyond. It is interesting to note that the crystallographic groups were found mathematically for <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> before the 230 different types of crystals were actually discovered in nature.</p>
          </section>
        </section>
        <section class="reading-questions" id="jhg">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">12.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="QAm">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Vkf">What is a nonsingular matrix? Give an example of a <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> nonsingular matrix. How do you know your example is nonsingular?</p>
          </article>
          <article class="exercise exercise-like" id="wHv">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="Bro">What is an isometry in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth>? Can you give an example of an isometry in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="cOE">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="hyx">What is an orthonormal set of vectors?</p>
          </article>
          <article class="exercise exercise-like" id="IVN">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="NFG">What is the difference between the orthogonal group and the special orthogonal group?</p>
          </article>
          <article class="exercise exercise-like" id="pcW">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="tMP">What is a lattice?</p>
          </article>
        </section>
        <section class="exercises" id="nJm">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">12.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="Obj">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="tFP">Prove the identity</p>
            <div class="displaymath">
              <nemeth>⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠳⠳⠸⠭⠬⠸⠽⠳⠳⠘⠆⠐⠤⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Kbk"><span class="type">Hint</span>:<div class="displaymath"><nemeth>⠹⠂⠌⠆⠼⠈⠷⠳⠳⠸⠭⠬⠸⠽⠳⠳⠘⠆⠐⠬⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠨⠨⠷⠭⠬⠽⠠⠀⠭⠬⠽⠨⠨⠾⠤⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠳⠳⠸⠭⠳⠳⠘⠆⠐⠬⠆⠨⠨⠷⠭⠠⠀⠽⠨⠨⠾⠬⠳⠳⠸⠽⠳⠳⠘⠆⠐⠤⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uis">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="ZMY">Show that <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth> is a group.</p>
          </article>
          <article class="exercise exercise-like" id="apB">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="FUh">Prove that the following matrices are orthogonal. Are any of these matrices in <nemeth class="inline">⠠⠎⠠⠕⠷⠝⠾</nemeth>?</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠸⠌⠜⠆⠻⠀⠤⠼⠂⠸⠌⠜⠆⠻⠠⠾⠀⠠⠷⠂⠸⠌⠜⠆⠻⠀⠂⠸⠌⠜⠆⠻⠠⠾</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠸⠌⠜⠢⠻⠀⠆⠸⠌⠜⠢⠻⠠⠾⠀⠠⠷⠤⠼⠆⠸⠌⠜⠢⠻⠀⠂⠸⠌⠜⠢⠻⠠⠾</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠠⠷⠼⠲⠸⠌⠜⠢⠻⠀⠴⠀⠒⠸⠌⠜⠢⠻⠠⠾⠀⠠⠷⠤⠼⠒⠸⠌⠜⠢⠻⠀⠴⠀⠲⠸⠌⠜⠢⠻⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠀⠴⠠⠾</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠸⠌⠒⠀⠆⠸⠌⠒⠀⠤⠼⠆⠸⠌⠒⠠⠾⠀⠠⠷⠤⠼⠆⠸⠌⠒⠀⠆⠸⠌⠒⠀⠂⠸⠌⠒⠠⠾⠀⠠⠷⠤⠼⠆⠸⠌⠒⠀⠂⠸⠌⠒⠀⠆⠸⠌⠒⠠⠾</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="CwL"><span class="type">Hint</span>:<p id="Utl">(a) is in <nemeth class="inline">⠠⠎⠠⠕⠷⠼⠆⠾</nemeth>; (c) is not in <nemeth class="inline">⠠⠕⠷⠼⠒⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GwK">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="mbq">Determine the symmetry group of each of the figures in Figure 12.4.1.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="Siz">
              <div data-braille="image">
                <p>Image: There are two figures in the top row and one figure on bottom.  The top left figure, a,  is a rectangle.  Inside the rectangle is an oval in the lower left and a solid circle in the upper right.  The top right figure, c, is there intersecting circles of the same radii.  The bottom middle figure, b, is a large square with the two diagonals.  The midpoints of the large square are the vertices of a smaller inscribed square.</p>
                <p>ID: exercise-symmetry-groups</p>
              </div>
              <figcaption>
                <span class="type">Figure</span>
                <span class="space"> </span>
                <span class="codenumber">12.4.1<span class="period">.</span></span>
                <span class="space"> </span>
              </figcaption>
            </figure>
          </article>
          <article class="exercise exercise-like" id="mDT">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ypI">Let <nemeth class="inline">⠸⠭</nemeth>, <nemeth class="inline">⠸⠽</nemeth>, and <nemeth class="inline">⠸⠺</nemeth> be vectors in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠸⠠⠗</nemeth>. Prove each of the following properties of inner products.</p>
            <ol class="outerlist">
              <li>a. <p id="bnQ"><nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠽⠠⠀⠸⠭⠨⠨⠾</nemeth>.</p></li>
              <li>b. <p id="HuZ"><nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠽⠬⠸⠺⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠬⠨⠨⠷⠸⠭⠠⠀⠸⠺⠨⠨⠾</nemeth>.</p></li>
              <li>c. <p id="nCi"><nemeth class="inline">⠨⠨⠷⠁⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠁⠸⠽⠨⠨⠾⠀⠨⠅⠀⠁⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth>.</p></li>
              <li>d. <p id="TJr"><nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠭⠨⠨⠾⠀⠨⠂⠱⠀⠼⠴</nemeth> with equality exactly when <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
              <li>e. <p id="zQA">If <nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠼⠴</nemeth> for all <nemeth class="inline">⠸⠭</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth>, then <nemeth class="inline">⠸⠽⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="uSm"><span class="type">Hint</span>:<p id="AAu">(a) <nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠽⠠⠀⠸⠭⠨⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="SLc">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="ewR">Verify that</p>
            <div class="displaymath">
              <nemeth>⠠⠑⠷⠝⠾⠀⠨⠅⠀⠨⠷⠷⠠⠁⠠⠀⠸⠭⠾⠒⠀⠠⠁⠀⠈⠑⠀⠠⠕⠷⠝⠾⠁⠝⠙⠸⠭⠀⠈⠑⠀⠸⠠⠗⠘⠝⠐⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a group.</p>
          </article>
          <article class="exercise exercise-like" id="ySl">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="KEa">Prove that <nemeth class="inline">⠨⠷⠷⠼⠆⠠⠀⠼⠂⠾⠠⠀⠷⠼⠂⠠⠀⠼⠂⠾⠨⠾</nemeth> and <nemeth class="inline">⠨⠷⠷⠼⠂⠆⠠⠀⠼⠢⠾⠠⠀⠷⠼⠶⠠⠀⠼⠒⠾⠨⠾</nemeth> are bases for the same lattice.</p>
            <div class="solutions">
              <div class="hint solution-like" id="nnN"><span class="type">Hint</span>:<p id="gHD">Use the unimodular matrix</p><div class="displaymath"><nemeth>⠠⠷⠼⠢⠀⠆⠠⠾⠀⠠⠷⠆⠀⠂⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="eZu">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="qLj">Let <i class="one-letter">G</i> be a subgroup of <nemeth class="inline">⠠⠑⠷⠼⠆⠾</nemeth> and suppose that <i class="one-letter">T</i> is the translation subgroup of <i class="one-letter">G</i>. Prove that the point group of <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠠⠛⠸⠌⠠⠞</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LgD">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="WSs">Let <nemeth class="inline">⠠⠁⠀⠈⠑⠀⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> and suppose that the vectors <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth> form two sides of a parallelogram in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>. Prove that the area of this parallelogram is the same as the area of the parallelogram with sides <nemeth class="inline">⠠⠁⠸⠭</nemeth> and <nemeth class="inline">⠠⠁⠸⠽</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="rnM">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="CZB">Prove that <nemeth class="inline">⠠⠎⠠⠕⠷⠝⠾</nemeth> is a normal subgroup of <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="LQx"><span class="type">Hint</span>:<p id="MOM">Show that the kernel of the map <nemeth class="inline">⠙⠑⠞⠒⠀⠠⠕⠷⠝⠾⠀⠫⠕⠀⠸⠠⠗⠘⠈⠼</nemeth> is <nemeth class="inline">⠠⠎⠠⠕⠷⠝⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="XuV">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="jgK">Show that any isometry <i class="one-letter">f</i> in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> is a one-to-one map.</p>
          </article>
          <article class="exercise exercise-like" id="DCe">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="PnT">Prove or disprove: an element in <nemeth class="inline">⠠⠑⠷⠼⠆⠾</nemeth> of the form <nemeth class="inline">⠷⠠⠁⠠⠀⠸⠭⠾</nemeth>, where <nemeth class="inline">⠸⠭⠀⠌⠨⠅⠀⠼⠴</nemeth>, has infinite order.</p>
          </article>
          <article class="exercise exercise-like" id="jJn">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="vvc">Prove or disprove: There exists an infinite abelian subgroup of <nemeth class="inline">⠠⠕⠷⠝⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="kth"><span class="type">Hint</span>:<p id="sVV">True.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="PQw">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="bCl">Let <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠭⠂⠠⠀⠭⠆⠾</nemeth> be a point on the unit circle in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>; that is, <nemeth class="inline">⠭⠂⠘⠆⠐⠬⠭⠆⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth>. If <nemeth class="inline">⠠⠁⠀⠈⠑⠀⠠⠕⠷⠼⠆⠾</nemeth>, show that <nemeth class="inline">⠠⠁⠸⠭</nemeth> is also a point on the unit circle.</p>
          </article>
          <article class="exercise exercise-like" id="vXF">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="HJu">Let <i class="one-letter">G</i> be a group with a subgroup <i class="one-letter">H</i> (not necessarily normal) and a normal subgroup <i class="one-letter">N</i>. Then <i class="one-letter">G</i> is a <dfn class="terminology">semidirect product</dfn> of <i class="one-letter">N</i> by <i class="one-letter">H</i> if</p>
            <ul class="outerlist">
              <li>• <p id="kHC"><nemeth class="inline">⠠⠓⠨⠩⠠⠝⠀⠨⠅⠀⠨⠷⠊⠙⠨⠾</nemeth>;</p></li>
              <li>• <p id="QOL"><nemeth class="inline">⠠⠓⠠⠝⠀⠨⠅⠀⠠⠛</nemeth>.</p></li>
            </ul>
            <p data-braille="continuation">Show that each of the following is true.</p>
            <ol class="outerlist">
              <li>a. <p id="wVU"><nemeth class="inline">⠠⠎⠒</nemeth> is the semidirect product of <nemeth class="inline">⠠⠁⠒</nemeth> by <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠨⠾</nemeth>.</p></li>
              <li>b. <p id="ddd">The quaternion group, <nemeth class="inline">⠠⠟⠦</nemeth>, cannot be written as a semidirect product.</p></li>
              <li>c. <p id="Jkm"><nemeth class="inline">⠠⠑⠷⠼⠆⠾</nemeth> is the semidirect product of <nemeth class="inline">⠠⠕⠷⠼⠆⠾</nemeth> by <i class="one-letter">H</i>, where <i class="one-letter">H</i> consists of all translations in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="ceO">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="nQD">Determine which of the 17 wallpaper groups preserves the symmetry of the pattern in Figure 12.2.5.</p>
          </article>
          <article class="exercise exercise-like" id="IlX">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="TXM">Determine which of the 17 wallpaper groups preserves the symmetry of the pattern in Figure 12.4.2.</p>
            <div class="solutions">
              <div class="hint solution-like" id="pda"><span class="type">Hint</span>:<p id="Zde"><nemeth class="inline">⠏⠐⠖⠍</nemeth></p></div>
            </div>
          </article>
          <figure class="figure figure-like" data-braille="figure-like" id="Ito">
            <div data-braille="image">
              <p>Image: A lattices of hexagons.  Each hexagon is divided into three rhombuses.</p>
              <p>ID: exercise-wallpaper</p>
            </div>
            <figcaption>
              <span class="type">Figure</span>
              <span class="space"> </span>
              <span class="codenumber">12.4.2<span class="period">.</span></span>
              <span class="space"> </span>
            </figcaption>
          </figure>
          <article class="exercise exercise-like" id="otg">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="AeV">Find the rotation group of a dodecahedron.</p>
          </article>
          <article class="exercise exercise-like" id="UAp">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="gme">For each of the 17 wallpaper groups, draw a wallpaper pattern having that group as a symmetry group.</p>
          </article>
        </section>
        <section class="references" id="IcT">
          <div class="none"><span class="type">References</span> <span class="codenumber">12.5</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="okc"><div class="bibitem">[1]</div>  <div class="bibentry"> Coxeter, H. M. and Moser, W. O. J. <i>Generators and Relations for Discrete Groups</i>, 3rd ed. Springer-Verlag, New York, 1972.</div></article>
          <article class="bib" id="Url"><div class="bibitem">[2]</div>  <div class="bibentry"> Grove, L. C. and Benson, C. T. <i>Finite Reflection Groups</i>. 2nd ed. Springer-Verlag, New York, 1985.</div></article>
          <article class="bib" id="Ayu"><div class="bibitem">[3]</div>  <div class="bibentry"> Hiller, H. “Crystallography and Cohomology of Groups,” <i>American Mathematical Monthly</i> <b>93</b> (1986), 765–79.</div></article>
          <article class="bib" id="gFD"><div class="bibitem">[4]</div>  <div class="bibentry"> Lockwood, E. H. and Macmillan, R. H. <i>Geometric Symmetry</i>. Cambridge University Press, Cambridge, 1978.</div></article>
          <article class="bib" id="MMM"><div class="bibitem">[5]</div>  <div class="bibentry"> Mackiw, G. <i>Applications of Abstract Algebra</i>. Wiley, New York, 1985.</div></article>
          <article class="bib" id="sTV"><div class="bibitem">[6]</div>  <div class="bibentry"> Martin,  G. <i>Transformation  Groups:  An Introduction to Symmetry</i>.  Springer-Verlag, New York, 1982.</div></article>
          <article class="bib" id="Zbe"><div class="bibitem">[7]</div>  <div class="bibentry"> Milnor, J. “Hilbert's Problem 18: On Crystallographic Groups, Fundamental Domains, and Sphere Packing,” <i>t Proceedings of Symposia in Pure Mathematics</i> <b>18</b>, American Mathematical Society, 1976.</div></article>
          <article class="bib" id="Fin"><div class="bibitem">[8]</div>  <div class="bibentry"> Phillips, F. C. <i>An Introduction to Crystallography</i>. 4th ed. Wiley, New York, 1971.</div></article>
          <article class="bib" id="lpw"><div class="bibitem">[9]</div>  <div class="bibentry"> Rose, B. I. and Stafford, R. D. “An Elementary Course in Mathematical Symmetry,” <i>American Mathematical Monthly</i> <b>88</b> (1980), 54–64.</div></article>
          <article class="bib" id="RwF"><div class="bibitem">[10]</div>  <div class="bibentry"> Schattschneider, D. “The Plane Symmetry Groups: Their Recognition and Their Notation,” <i>American Mathematical  Monthly</i> <b>85</b> (1978), 439–50.</div></article>
          <article class="bib" id="xDO"><div class="bibitem">[11]</div>  <div class="bibentry"> Schwarzenberger, R. L. “The 17 Plane Symmetry Groups,” <i>Mathematical Gazette</i> <b>58</b> (1974), 123–31.</div></article>
          <article class="bib" id="dKX"><div class="bibitem">[12]</div>  <div class="bibentry"> Weyl, H. <i>Symmetry</i>. Princeton University Press, Princeton, NJ, 1952.</div></article>
        </section>
        <section class="section" id="stf">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">12.6</span> <span class="title">Sage</span></div>
          <p id="oAx">There is no Sage material for this chapter.</p>
        </section>
        <section class="exercises" id="TQv">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">12.7</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="AHy">
            <p id="NyG">There are no Sage exercises for this chapter.</p>
          </section>
        </section>
      </section>
      <section class="chapter" id="YWA">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">13</span> <span class="title">The Structure of  Groups</span></div>
        <section class="introduction" id="YBb">
          <p id="PKf">The ultimate goal of group theory is to classify all groups up to isomorphism; that is, given a particular group, we should be able to match it up with a known group via an isomorphism. For example, we have already proved that any finite cyclic group of order <i class="one-letter">n</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>; hence, we “know” all finite cyclic groups. It is probably not reasonable to expect that we will ever know all groups; however, we can often classify certain types of groups or distinguish between groups in special cases.</p>
          <p id="vRo">In this chapter we will characterize all finite abelian groups. We shall also investigate groups with sequences of subgroups. If a group has a sequence of subgroups, say</p>
          <div class="displaymath">
            <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠂⠀⠸⠨⠂⠀⠠⠓⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">, where each subgroup <nemeth class="inline">⠠⠓⠰⠊</nemeth> is normal in <nemeth class="inline">⠠⠓⠰⠊⠬⠂</nemeth> and each of the factor groups <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠸⠌⠠⠓⠰⠊</nemeth> is abelian, then <i class="one-letter">G</i> is a solvable group. In addition to allowing us to distinguish between certain classes of groups, solvable groups turn out to be central to the study of solutions to polynomial equations.</p>
        </section>
        <section class="section" id="pUL">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">13.1</span> <span class="title">Finite Abelian Groups</span></div>
          <p id="IPA">In our investigation of cyclic groups we found that every group of prime order was isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>, where <i class="one-letter">p</i> was a prime number. We also determined that <nemeth class="inline">⠸⠠⠵⠰⠍⠝⠐⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠍⠐⠈⠡⠸⠠⠵⠰⠝</nemeth> when <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>. In fact, much more is true. Every finite abelian group is isomorphic to a direct product of cyclic groups of prime power order; that is, every finite abelian group is isomorphic to a group of the type</p>
          <div class="displaymath">
            <nemeth>⠸⠠⠵⠰⠏⠂⠰⠘⠨⠁⠂⠐⠈⠡⠄⠄⠄⠈⠡⠸⠠⠵⠰⠏⠰⠰⠝⠰⠘⠨⠁⠰⠘⠰⠝</nemeth>
          </div>
          <p data-braille="continuation">, where each <nemeth class="inline">⠏⠰⠅</nemeth> is prime (not necessarily distinct).</p>
          <p id="oWJ">First, let us examine a slight generalization of finite abelian groups. Suppose that <i class="one-letter">G</i> is a group and let <nemeth class="inline">⠨⠷⠛⠰⠊⠐⠨⠾</nemeth> be a set of elements in <i class="one-letter">G</i>, where <i class="one-letter">i</i> is in some index set <i class="one-letter">I</i> (not necessarily finite). The smallest subgroup of <i class="one-letter">G</i> containing all of the <nemeth class="inline">⠛⠰⠊</nemeth>'s is the subgroup of <i class="one-letter">G</i> <dfn class="terminology">generated</dfn> by the <nemeth class="inline">⠛⠰⠊</nemeth>'s. If this subgroup of <i class="one-letter">G</i> is in fact all of <i class="one-letter">G</i>, then <i class="one-letter">G</i> is generated by the set <nemeth class="inline">⠨⠷⠛⠰⠊⠐⠒⠀⠊⠀⠈⠑⠀⠠⠊⠨⠾</nemeth>. In this case the <nemeth class="inline">⠛⠰⠊</nemeth>'s are said to be the <dfn class="terminology">generators</dfn>  of <i class="one-letter">G</i>. If there is a finite set <nemeth class="inline">⠨⠷⠛⠰⠊⠐⠒⠀⠊⠀⠈⠑⠀⠠⠊⠨⠾</nemeth> that generates <i class="one-letter">G</i>, then <i class="one-letter">G</i> is <dfn class="terminology">finitely generated</dfn>. </p>
          <article class="example example-like" data-braille="example-like" id="jag">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="ajk">Obviously, all finite groups are finitely generated. For example, the group <nemeth class="inline">⠠⠎⠒</nemeth> is generated by the permutations <nemeth class="inline">⠷⠼⠂⠆⠾</nemeth> and <nemeth class="inline">⠷⠼⠂⠆⠒⠾</nemeth>. The group <nemeth class="inline">⠸⠠⠵⠈⠡⠸⠠⠵⠰⠝</nemeth> is an infinite group but is finitely generated by <nemeth class="inline">⠨⠷⠷⠼⠂⠠⠀⠼⠴⠾⠠⠀⠷⠼⠴⠠⠀⠼⠂⠾⠨⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="Php">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="Gqt">Not all groups are finitely generated. Consider the rational numbers <nemeth class="inline">⠸⠠⠟</nemeth> under the operation of addition. Suppose that <nemeth class="inline">⠸⠠⠟</nemeth> is finitely generated with generators <nemeth class="inline">⠏⠂⠸⠌⠟⠂⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠝⠐⠸⠌⠟⠰⠝⠐</nemeth>, where each <nemeth class="inline">⠏⠰⠊⠐⠸⠌⠟⠰⠊</nemeth> is a fraction expressed in its lowest terms. Let <i class="one-letter">p</i> be some prime that does not divide any of the denominators <nemeth class="inline">⠟⠂⠠⠀⠄⠄⠄⠀⠠⠀⠟⠰⠝⠐</nemeth>. We claim that <nemeth class="inline">⠼⠂⠸⠌⠏</nemeth> cannot be in the subgroup of <nemeth class="inline">⠸⠠⠟</nemeth> that is generated by  <nemeth class="inline">⠏⠂⠸⠌⠟⠂⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠝⠐⠸⠌⠟⠰⠝⠐</nemeth>, since <i class="one-letter">p</i> does not divide the denominator of any element in this subgroup. This fact is easy to see since the sum of any two generators is</p>
            <div class="displaymath">
              <nemeth>⠏⠰⠊⠐⠸⠌⠟⠰⠊⠐⠬⠏⠰⠚⠐⠸⠌⠟⠰⠚⠐⠀⠨⠅⠀⠷⠏⠰⠊⠐⠟⠰⠚⠐⠬⠏⠰⠚⠐⠟⠰⠊⠐⠾⠸⠌⠷⠟⠰⠊⠐⠟⠰⠚⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="proposition theorem-like" data-braille="theorem-like" id="eqn">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="Vzr">Let <i class="one-letter">H</i> be the subgroup of a group <i class="one-letter">G</i> that is generated by <nemeth class="inline">⠨⠷⠛⠰⠊⠐⠀⠈⠑⠀⠠⠛⠒⠀⠊⠀⠈⠑⠀⠠⠊⠨⠾</nemeth>. Then <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> exactly when it is a product of the form</p>
            <div class="displaymath">
              <nemeth>⠓⠀⠨⠅⠀⠛⠰⠊⠂⠘⠨⠁⠂⠐⠀⠄⠄⠄⠀⠛⠰⠊⠰⠰⠝⠰⠘⠨⠁⠘⠰⠝⠘</nemeth>
            </div>
            <p data-braille="continuation">, where the <nemeth class="inline">⠛⠰⠊⠰⠰⠅</nemeth>s are not necessarily distinct.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="QWC">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="Pal">Let <i class="one-letter">K</i> be the set of all products of the form <nemeth class="inline">⠛⠰⠊⠂⠘⠨⠁⠂⠐⠀⠄⠄⠄⠀⠛⠰⠊⠰⠰⠝⠰⠘⠨⠁⠘⠰⠝⠘</nemeth>, where the <nemeth class="inline">⠛⠰⠊⠰⠰⠅</nemeth>s are not necessarily distinct. Certainly <i class="one-letter">K</i> is a subset of <i class="one-letter">H</i>. We need only show that <i class="one-letter">K</i> is a subgroup of <i class="one-letter">G</i>. If this is the case, then <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠠⠓</nemeth>, since <i class="one-letter">H</i> is the smallest subgroup containing all the <nemeth class="inline">⠛⠰⠊</nemeth>s.</p>
            <p id="vhu">Clearly, the set <i class="one-letter">K</i> is closed under the group operation. Since <nemeth class="inline">⠛⠰⠊⠘⠴⠐⠀⠨⠅⠀⠼⠂</nemeth>, the identity is in <i class="one-letter">K</i>. It remains to show that the inverse of an element <nemeth class="inline">⠛⠀⠨⠅⠀⠛⠰⠊⠂⠘⠅⠂⠐⠀⠄⠄⠄⠀⠛⠰⠊⠰⠰⠝⠰⠘⠅⠘⠰⠝⠘</nemeth> in <i class="one-letter">K</i> must also be in <i class="one-letter">K</i>. However,</p>
            <div class="displaymath">
              <nemeth>⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠛⠰⠊⠂⠘⠅⠂⠐⠀⠄⠄⠄⠀⠛⠰⠊⠰⠰⠝⠰⠘⠅⠘⠰⠝⠘⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠛⠰⠊⠰⠰⠝⠰⠘⠤⠅⠘⠰⠝⠘⠐⠀⠄⠄⠄⠀⠛⠰⠊⠂⠘⠤⠅⠂⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="VdS">The reason that powers of a fixed <nemeth class="inline">⠛⠰⠊</nemeth> may occur several times in the product is that we may have a nonabelian group. However, if the group is abelian, then the <nemeth class="inline">⠛⠰⠊</nemeth>s need occur only once. For example, a product such as <nemeth class="inline">⠁⠘⠤⠼⠒⠐⠃⠘⠢⠐⠁⠘⠶</nemeth> in an abelian group could always be simplified (in this case, to <nemeth class="inline">⠁⠘⠲⠐⠃⠘⠢</nemeth>).</p>
          <p id="Blb">Now let us restrict our attention to finite abelian groups. We can express any finite abelian group as a finite direct product of cyclic groups. More specifically, letting <i class="one-letter">p</i> be prime, we define a group <i class="one-letter">G</i> to be a <dfn class="terminology"><i class="one-letter">p</i>-group</dfn>  if every element in <i class="one-letter">G</i> has as its order a power of <i class="one-letter">p</i>. For example, both <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth> and <nemeth class="inline">⠸⠠⠵⠲</nemeth> are <nemeth class="inline">⠼⠆</nemeth>-groups, whereas <nemeth class="inline">⠸⠠⠵⠆⠶</nemeth> is a <nemeth class="inline">⠼⠒</nemeth>-group. We shall prove the Fundamental Theorem of Finite Abelian Groups which tells us that every finite abelian group is isomorphic to a direct product of cyclic <i class="one-letter">p</i>-groups.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="lUM">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.4</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Fundamental Theorem of Finite Abelian Groups.</span>
            </h6>
            <p id="ddQ">Every finite abelian group <i class="one-letter">G</i> is isomorphic to a direct product of cyclic groups of the form</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠰⠏⠂⠰⠘⠨⠁⠂⠐⠈⠡⠸⠠⠵⠰⠏⠆⠰⠘⠨⠁⠆⠐⠈⠡⠄⠄⠄⠈⠡⠸⠠⠵⠰⠏⠰⠰⠝⠰⠘⠨⠁⠰⠘⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">here the <nemeth class="inline">⠏⠰⠊</nemeth>'s are primes (not necessarily distinct).</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="voy">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="mxC">Suppose that we wish to classify all abelian groups of order <nemeth class="inline">⠼⠢⠲⠴⠀⠨⠅⠀⠼⠆⠘⠆⠐⠡⠒⠘⠒⠐⠡⠢</nemeth>. The Fundamental Theorem of Finite Abelian Groups tells us that we have the following six possibilities.</p>
            <ul class="outerlist">
              <li>• <p id="eEI"><nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠢</nemeth>;</p></li>
              <li>• <p id="KLR"><nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠔⠈⠡⠸⠠⠵⠢</nemeth>;</p></li>
              <li>• <p id="qTa"><nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆⠶⠈⠡⠸⠠⠵⠢</nemeth>;</p></li>
              <li>• <p id="Xaj"><nemeth class="inline">⠸⠠⠵⠲⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠢</nemeth>;</p></li>
              <li>• <p id="Dhs"><nemeth class="inline">⠸⠠⠵⠲⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠔⠈⠡⠸⠠⠵⠢</nemeth>;</p></li>
              <li>• <p id="joB"><nemeth class="inline">⠸⠠⠵⠲⠈⠡⠸⠠⠵⠆⠶⠈⠡⠸⠠⠵⠢</nemeth>.</p></li>
            </ul>
          </article>
          <p id="hsk">The proof of the Fundamental Theorem of Finite Abelian Groups depends on several lemmas.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="Kxw">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.6</span>
              <span class="period">.</span>
            </h6>
            <p id="BGA">Let <i class="one-letter">G</i> be a finite abelian group of order <i class="one-letter">n</i>. If <i class="one-letter">p</i> is a prime that divides <i class="one-letter">n</i>, then <i class="one-letter">G</i> contains an element of order <i class="one-letter">p</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="xdL">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="boD">We will prove this lemma by induction. If <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>, then there is nothing to show. Now suppose that the lemma is true for all groups of order <i class="one-letter">k</i>, where <nemeth class="inline">⠅⠀⠐⠅⠀⠝</nemeth>. Furthermore, let <i class="one-letter">p</i> be a prime that divides <i class="one-letter">n</i>.</p>
            <p id="HvM">If <i class="one-letter">G</i> has no proper nontrivial subgroups, then <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>, where <i class="one-letter">a</i> is any element other than the identity. By Exercise 4.5.39, the order of <i class="one-letter">G</i> must be prime. Since <i class="one-letter">p</i> divides <i class="one-letter">n</i>, we know that <nemeth class="inline">⠏⠀⠨⠅⠀⠝</nemeth>, and <i class="one-letter">G</i> contains <nemeth class="inline">⠏⠤⠂</nemeth> elements of order <i class="one-letter">p</i>.</p>
            <p id="nCV">Now suppose that <i class="one-letter">G</i> contains a nontrivial proper subgroup <i class="one-letter">H</i>. Then <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠳⠠⠓⠳⠀⠐⠅⠀⠝</nemeth>. If <nemeth class="inline">⠏⠳⠳⠠⠓⠳</nemeth>, then <i class="one-letter">H</i> contains an element of order <i class="one-letter">p</i> by induction and the lemma is true. Suppose that <i class="one-letter">p</i> does not divide the order of <i class="one-letter">H</i>. Since <i class="one-letter">G</i> is abelian, it must be the case that <i class="one-letter">H</i> is a normal subgroup of <i class="one-letter">G</i>, and <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠓⠳⠡⠳⠠⠛⠸⠌⠠⠓⠳</nemeth>. Consequently, <i class="one-letter">p</i> must divide <nemeth class="inline">⠳⠠⠛⠸⠌⠠⠓⠳</nemeth>. Since <nemeth class="inline">⠳⠠⠛⠸⠌⠠⠓⠳⠀⠐⠅⠀⠳⠠⠛⠳⠀⠨⠅⠀⠝</nemeth>, we know that <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth> contains an element <nemeth class="inline">⠁⠠⠓</nemeth> of order <i class="one-letter">p</i> by the induction hypothesis. Thus,</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠷⠁⠠⠓⠾⠘⠏⠐⠀⠨⠅⠀⠁⠘⠏⠐⠠⠓</nemeth>
            </div>
            <p data-braille="continuation">, and <nemeth class="inline">⠁⠘⠏⠐⠀⠈⠑⠀⠠⠓</nemeth> but <nemeth class="inline">⠁⠀⠌⠈⠑⠀⠠⠓</nemeth>. If <nemeth class="inline">⠳⠠⠓⠳⠀⠨⠅⠀⠗</nemeth>, then <i class="one-letter">p</i> and <i class="one-letter">r</i> are relatively prime, and there exist integers <i class="one-letter">s</i> and <i class="one-letter">t</i> such that <nemeth class="inline">⠎⠏⠬⠞⠗⠀⠨⠅⠀⠼⠂</nemeth>. Furthermore, the order of <nemeth class="inline">⠁⠘⠏</nemeth> must divide <i class="one-letter">r</i>, and <nemeth class="inline">⠷⠁⠘⠏⠐⠾⠘⠗⠐⠀⠨⠅⠀⠷⠁⠘⠗⠐⠾⠘⠏⠐⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            <p id="TKe">We claim that <nemeth class="inline">⠁⠘⠗</nemeth> has order <i class="one-letter">p</i>. We must show that <nemeth class="inline">⠁⠘⠗⠐⠀⠌⠨⠅⠀⠼⠂</nemeth>. Suppose <nemeth class="inline">⠁⠘⠗⠐⠀⠨⠅⠀⠼⠂</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠁⠀⠀⠨⠅⠀⠁⠘⠎⠏⠬⠞⠗⠐⠀⠀⠀⠀⠨⠅⠀⠁⠘⠎⠏⠐⠁⠘⠞⠗⠐⠀⠀⠀⠀⠨⠅⠀⠷⠁⠘⠏⠐⠾⠘⠎⠐⠷⠁⠘⠗⠐⠾⠘⠞⠐⠀⠀⠀⠀⠨⠅⠀⠷⠁⠘⠏⠐⠾⠘⠎⠐⠂⠀⠀⠀⠀⠨⠅⠀⠷⠁⠘⠏⠐⠾⠘⠎</nemeth>
            </div>
            <p data-braille="continuation">. Since <nemeth class="inline">⠁⠘⠏⠐⠀⠈⠑⠀⠠⠓</nemeth>, it must be the case that <nemeth class="inline">⠁⠀⠨⠅⠀⠷⠁⠘⠏⠐⠾⠘⠎⠐⠀⠈⠑⠀⠠⠓</nemeth>, which is a contradiction. Therefore, <nemeth class="inline">⠁⠘⠗⠐⠀⠌⠨⠅⠀⠼⠂</nemeth> is an element of order <i class="one-letter">p</i> in <i class="one-letter">G</i>.</p>
          </article>
          <p id="Nzt">Lemma 13.1.6 is a special case of Cauchy's Theorem (Theorem 15.1.1), which states that if <i class="one-letter">G</i> is a finite group and <i class="one-letter">p</i> a prime such that <i class="one-letter">p</i> divides the order of <i class="one-letter">G</i>, then <i class="one-letter">G</i> contains a subgroup of order <i class="one-letter">p</i>. We will prove Cauchy's Theorem in Chapter 15.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="qEF">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="hNJ">A finite abelian group is a <i class="one-letter">p</i>-group if and only if its order is a power of <i class="one-letter">p</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="dkU">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="zRn">If <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠏⠘⠝</nemeth> then by Lagrange’s theorem, then the order of any <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> must divide <nemeth class="inline">⠏⠘⠝</nemeth>, and therefore must be a power of <i class="one-letter">p</i>. Conversely, if <nemeth class="inline">⠳⠠⠛⠳</nemeth> is not a power of <i class="one-letter">p</i>, then it has some other prime divisor <i class="one-letter">q</i>, so by Lemma 13.1.6, <i class="one-letter">G</i> has an element of order <i class="one-letter">q</i> and thus is not a <i class="one-letter">p</i>-group.</p>
          </article>
          <article class="lemma theorem-like" data-braille="theorem-like" id="WLO">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.8</span>
              <span class="period">.</span>
            </h6>
            <p id="NUS">Let <i class="one-letter">G</i> be a finite abelian group of order <nemeth class="inline">⠝⠀⠨⠅⠀⠏⠂⠘⠨⠁⠂⠐⠀⠄⠄⠄⠀⠏⠰⠅⠘⠨⠁⠘⠰⠅⠘</nemeth>, where where <nemeth class="inline">⠏⠂⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠅⠐</nemeth> are distinct primes and <nemeth class="inline">⠨⠁⠂⠠⠀⠨⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠅⠐</nemeth> are positive integers. Then <i class="one-letter">G</i> is the internal direct product of subgroups <nemeth class="inline">⠠⠛⠂⠠⠀⠠⠛⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠛⠰⠅⠐</nemeth>, where <nemeth class="inline">⠠⠛⠰⠊</nemeth> is the subgroup of <i class="one-letter">G</i> consisting of all elements of order <nemeth class="inline">⠏⠰⠊⠘⠗</nemeth> for some integer <i class="one-letter">r</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="Jsd">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="fYw">Since <i class="one-letter">G</i> is an abelian group, we are guaranteed that <nemeth class="inline">⠠⠛⠰⠊</nemeth> is a subgroup of <i class="one-letter">G</i> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠅</nemeth>. Since the identity has order <nemeth class="inline">⠏⠰⠊⠘⠴⠐⠀⠨⠅⠀⠼⠂</nemeth>, we know that <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠛⠰⠊</nemeth>. If <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛⠰⠊</nemeth> has order <nemeth class="inline">⠏⠰⠊⠘⠗</nemeth>, then <nemeth class="inline">⠛⠘⠤⠼⠂</nemeth> must also have order <nemeth class="inline">⠏⠰⠊⠘⠗</nemeth>. Finally, if <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠛⠰⠊</nemeth> has order <nemeth class="inline">⠏⠰⠊⠘⠎</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠷⠛⠓⠾⠘⠏⠘⠰⠊⠘⠘⠞⠐⠀⠨⠅⠀⠛⠘⠏⠘⠰⠊⠘⠘⠞⠐⠓⠘⠏⠘⠰⠊⠘⠘⠞⠐⠀⠨⠅⠀⠼⠂⠡⠂⠀⠨⠅⠀⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">, where <i class="one-letter">t</i> is the maximum of <i class="one-letter">r</i> and <i class="one-letter">s</i>.</p>
            <p id="MfF">We must show that</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠛⠂⠠⠛⠆⠀⠄⠄⠄⠀⠠⠛⠰⠅⠐</nemeth>
            </div>
            <p data-braille="continuation">and <nemeth class="inline">⠠⠛⠰⠊⠐⠨⠩⠠⠛⠰⠚⠐⠀⠨⠅⠀⠨⠷⠼⠂⠨⠾</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth>. Suppose that <nemeth class="inline">⠛⠂⠀⠈⠑⠀⠠⠛⠂</nemeth> is in the subgroup generated by <nemeth class="inline">⠠⠛⠆⠠⠀⠠⠛⠒⠠⠀⠄⠄⠄⠀⠠⠀⠠⠛⠰⠅⠐</nemeth>. Then <nemeth class="inline">⠛⠂⠀⠨⠅⠀⠛⠆⠛⠒⠀⠄⠄⠄⠀⠛⠰⠅⠐</nemeth> for <nemeth class="inline">⠛⠰⠊⠐⠀⠈⠑⠀⠠⠛⠰⠊</nemeth>. Since <nemeth class="inline">⠛⠰⠊</nemeth> has order <nemeth class="inline">⠏⠘⠨⠁⠘⠰⠊</nemeth>, we know that <nemeth class="inline">⠛⠰⠊⠘⠏⠘⠘⠨⠁⠘⠘⠰⠊⠐⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠆⠠⠀⠼⠒⠠⠀⠄⠄⠄⠀⠠⠀⠅</nemeth>, and <nemeth class="inline">⠛⠂⠘⠏⠆⠘⠘⠨⠁⠆⠘⠀⠄⠄⠄⠀⠏⠘⠰⠅⠘⠘⠨⠁⠘⠘⠰⠅⠘⠘⠘⠐⠀⠨⠅⠀⠼⠂</nemeth>. Since the order of <nemeth class="inline">⠛⠂</nemeth> is a power of <nemeth class="inline">⠏⠂</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠏⠂⠠⠀⠏⠆⠘⠨⠁⠆⠐⠀⠄⠄⠄⠀⠏⠰⠅⠘⠨⠁⠘⠰⠅⠘⠐⠾⠀⠨⠅⠀⠼⠂</nemeth>, it must be the case that <nemeth class="inline">⠛⠂⠀⠨⠅⠀⠼⠂</nemeth> and the intersection of <nemeth class="inline">⠠⠛⠂</nemeth> with any of the subgroups <nemeth class="inline">⠠⠛⠆⠠⠀⠠⠛⠒⠠⠀⠄⠄⠄⠀⠠⠀⠠⠛⠰⠅⠐</nemeth> is the identity. A similar argument shows that <nemeth class="inline">⠠⠛⠰⠊⠐⠨⠩⠠⠛⠰⠚⠐⠀⠨⠅⠀⠨⠷⠼⠂⠨⠾</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth>.</p>
            <p id="smO">Next, we must show that it possible to write every <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> as a product <nemeth class="inline">⠛⠂⠀⠄⠄⠄⠀⠛⠰⠅⠐</nemeth>, where <nemeth class="inline">⠛⠰⠊⠐⠀⠈⠑⠀⠠⠛⠰⠊</nemeth>. Since the order of <i class="one-letter">g</i> divides the order of <i class="one-letter">G</i>, we know that</p>
            <div class="displaymath">
              <nemeth>⠳⠛⠳⠀⠨⠅⠀⠏⠂⠘⠨⠃⠂⠐⠏⠆⠘⠨⠃⠆⠐⠀⠄⠄⠄⠀⠏⠰⠅⠘⠨⠃⠘⠰⠅⠘</nemeth>
            </div>
            <p data-braille="continuation">for some integers <nemeth class="inline">⠨⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠃⠰⠅⠐</nemeth>. Letting <nemeth class="inline">⠁⠰⠊⠐⠀⠨⠅⠀⠳⠛⠳⠸⠌⠏⠰⠊⠘⠨⠃⠘⠰⠊</nemeth>, the <nemeth class="inline">⠁⠰⠊</nemeth>'s are relatively prime; hence, there exist integers <nemeth class="inline">⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠅⠐</nemeth> such that <nemeth class="inline">⠁⠂⠃⠂⠬⠄⠄⠄⠬⠁⠰⠅⠐⠃⠰⠅⠐⠀⠨⠅⠀⠼⠂</nemeth>. Consequently,</p>
            <div class="displaymath">
              <nemeth>⠛⠀⠨⠅⠀⠛⠘⠁⠂⠃⠂⠬⠄⠄⠄⠬⠁⠘⠰⠅⠘⠃⠘⠰⠅⠘⠐⠀⠨⠅⠀⠛⠘⠁⠂⠃⠂⠐⠀⠄⠄⠄⠀⠛⠘⠁⠘⠰⠅⠘⠃⠘⠰⠅⠘</nemeth>
            </div>
            <p data-braille="continuation">. Since</p>
            <div class="displaymath">
              <nemeth>⠛⠘⠷⠁⠘⠰⠊⠘⠃⠘⠰⠊⠘⠾⠏⠘⠰⠊⠘⠘⠨⠃⠘⠘⠰⠊⠐⠀⠨⠅⠀⠛⠘⠃⠘⠰⠊⠘⠳⠛⠳⠐⠀⠨⠅⠀⠑</nemeth>
            </div>
            <p data-braille="continuation">, it follows that <nemeth class="inline">⠛⠘⠁⠘⠰⠊⠘⠃⠘⠰⠊</nemeth> must be in <nemeth class="inline">⠠⠛⠰⠊</nemeth>. Let <nemeth class="inline">⠛⠰⠊⠐⠀⠨⠅⠀⠛⠘⠁⠘⠰⠊⠘⠃⠘⠰⠊</nemeth>. Then <nemeth class="inline">⠛⠀⠨⠅⠀⠛⠂⠀⠄⠄⠄⠀⠛⠰⠅⠐⠀⠈⠑⠀⠠⠛⠂⠠⠛⠆⠀⠄⠄⠄⠀⠠⠛⠰⠅⠐</nemeth>. Therefore, <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠛⠂⠠⠛⠆⠀⠄⠄⠄⠀⠠⠛⠰⠅⠐</nemeth> is an internal direct product of subgroups.</p>
          </article>
          <p id="tGC">If remains for us to determine the possible structure of each <nemeth class="inline">⠏⠰⠊</nemeth>-group <nemeth class="inline">⠠⠛⠰⠊</nemeth> in Lemma 13.1.8.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="CSX">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.9</span>
              <span class="period">.</span>
            </h6>
            <p id="ucb">Let <i class="one-letter">G</i> be a finite abelian <i class="one-letter">p</i>-group and suppose that <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> has maximal order. Then <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾⠈⠡⠠⠓</nemeth> for some subgroup <i class="one-letter">H</i> of <i class="one-letter">G</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="pzm">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="YtX">By Lemma 13.1.7, we may assume that the order of <i class="one-letter">G</i> is <nemeth class="inline">⠏⠘⠝</nemeth>. We shall induct on <i class="one-letter">n</i>. If <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>, then <i class="one-letter">G</i> is cyclic of order <i class="one-letter">p</i> and must be generated by <i class="one-letter">g</i>. Suppose now that the statement of the lemma holds for all integers <i class="one-letter">k</i> with <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠀⠝</nemeth> and let <i class="one-letter">g</i> be of maximal order in <i class="one-letter">G</i>, say <nemeth class="inline">⠳⠛⠳⠀⠨⠅⠀⠏⠘⠍</nemeth>. Then <nemeth class="inline">⠁⠘⠏⠘⠘⠍⠐⠀⠨⠅⠀⠑</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>. Now choose <i class="one-letter">h</i> in <i class="one-letter">G</i> such that <nemeth class="inline">⠓⠀⠌⠈⠑⠀⠨⠨⠷⠛⠨⠨⠾</nemeth>, where <i class="one-letter">h</i> has the smallest possible order. Certainly such an <i class="one-letter">h</i> exists; otherwise, <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠨⠷⠛⠨⠨⠾</nemeth> and we are done. Let <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠨⠷⠓⠨⠨⠾</nemeth>.</p>
            <p id="EBg">We claim that <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾⠨⠩⠠⠓⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>. It suffices to show that <nemeth class="inline">⠳⠠⠓⠳⠀⠨⠅⠀⠏</nemeth>. Since <nemeth class="inline">⠳⠓⠘⠏⠐⠳⠀⠨⠅⠀⠳⠓⠳⠸⠌⠏</nemeth>, the order of <nemeth class="inline">⠓⠘⠏</nemeth> is smaller than the order of <i class="one-letter">h</i> and must be in <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth> by the minimality of <i class="one-letter">h</i>; that is, <nemeth class="inline">⠓⠘⠏⠐⠀⠨⠅⠀⠛⠘⠗</nemeth> for some number <i class="one-letter">r</i>. Hence,</p>
            <div class="displaymath">
              <nemeth>⠷⠛⠘⠗⠐⠾⠘⠏⠘⠘⠍⠤⠂⠐⠀⠨⠅⠀⠷⠓⠘⠏⠐⠾⠘⠏⠘⠘⠍⠤⠂⠐⠀⠨⠅⠀⠓⠘⠏⠘⠘⠍⠐⠀⠨⠅⠀⠑</nemeth>
            </div>
            <p data-braille="continuation">, and the order of <nemeth class="inline">⠛⠘⠗</nemeth> must be less than or equal to <nemeth class="inline">⠏⠘⠍⠤⠂</nemeth>. Therefore, <nemeth class="inline">⠛⠘⠗</nemeth> cannot generate <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth>. Notice that <i class="one-letter">p</i> must occur as a factor of <i class="one-letter">r</i>, say <nemeth class="inline">⠗⠀⠨⠅⠀⠏⠎</nemeth>, and <nemeth class="inline">⠓⠘⠏⠐⠀⠨⠅⠀⠛⠘⠗⠐⠀⠨⠅⠀⠛⠘⠏⠎</nemeth>. Define <i class="one-letter">a</i> to be <nemeth class="inline">⠛⠘⠤⠎⠐⠓</nemeth>. Then <i class="one-letter">a</i> cannot be in <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth>; otherwise, <i class="one-letter">h</i> would also have to be in <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth>. Also,</p>
            <div class="displaymath">
              <nemeth>⠁⠘⠏⠐⠀⠨⠅⠀⠛⠘⠤⠎⠏⠐⠓⠘⠏⠐⠀⠨⠅⠀⠛⠘⠤⠗⠐⠓⠘⠏⠐⠀⠨⠅⠀⠓⠘⠤⠏⠐⠓⠘⠏⠐⠀⠨⠅⠀⠑</nemeth>
            </div>
            <p data-braille="continuation">. We have now formed an element <i class="one-letter">a</i> with order <i class="one-letter">p</i> such that <nemeth class="inline">⠁⠀⠌⠈⠑⠀⠨⠨⠷⠛⠨⠨⠾</nemeth>. Since <i class="one-letter">h</i> was chosen to have the smallest order of all of the elements that are not in <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth>, <nemeth class="inline">⠳⠠⠓⠳⠀⠨⠅⠀⠏</nemeth>.</p>
            <p id="kIp">Now we will show that the order of <nemeth class="inline">⠛⠠⠓</nemeth> in the factor group <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth> must be the same as the order of <i class="one-letter">g</i> in <i class="one-letter">G</i>. If <nemeth class="inline">⠳⠛⠠⠓⠳⠀⠐⠅⠀⠳⠛⠳⠀⠨⠅⠀⠏⠘⠍</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠷⠛⠠⠓⠾⠘⠏⠘⠘⠍⠤⠂⠘⠐⠀⠨⠅⠀⠛⠘⠏⠘⠘⠍⠤⠂⠘⠐⠠⠓⠆</nemeth>
            </div>
            <p data-braille="continuation">hence, <nemeth class="inline">⠛⠘⠏⠘⠘⠍⠤⠂</nemeth> must be in <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾⠨⠩⠠⠓⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>, which contradicts the fact that the order of <i class="one-letter">g</i> is <nemeth class="inline">⠏⠘⠍</nemeth>. Therefore, <nemeth class="inline">⠛⠠⠓</nemeth> must have maximal order in <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth>. By the Correspondence Theorem and our induction hypothesis,</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠸⠌⠠⠓⠀⠈⠱⠈⠱⠀⠨⠨⠷⠛⠠⠓⠨⠨⠾⠈⠡⠠⠅⠸⠌⠠⠓</nemeth>
            </div>
            <p data-braille="continuation">for some subgroup <i class="one-letter">K</i> of <i class="one-letter">G</i> containing <i class="one-letter">H</i>. We claim that <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾⠨⠩⠠⠅⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>. If <nemeth class="inline">⠃⠀⠈⠑⠀⠨⠨⠷⠛⠨⠨⠾⠨⠩⠠⠅</nemeth>, then <nemeth class="inline">⠃⠠⠓⠀⠈⠑⠀⠨⠨⠷⠛⠠⠓⠨⠨⠾⠨⠩⠠⠅⠸⠌⠠⠓⠀⠨⠅⠀⠨⠷⠠⠓⠨⠾</nemeth> and <nemeth class="inline">⠃⠀⠈⠑⠀⠨⠨⠷⠛⠨⠨⠾⠨⠩⠠⠓⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>. It follows that <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠨⠷⠛⠨⠨⠾⠠⠅</nemeth> implies that <nemeth class="inline">⠠⠛⠀⠈⠱⠈⠱⠀⠨⠨⠷⠛⠨⠨⠾⠈⠡⠠⠅</nemeth>.</p>
          </article>
          <p id="ZNL">The proof of the Fundamental Theorem of Finite Abelian Groups follows very quickly from Lemma 13.1.9. Suppose that <i class="one-letter">G</i> is a finite abelian group and let <i class="one-letter">g</i> be an element of maximal order in <i class="one-letter">G</i>. If <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾⠀⠨⠅⠀⠠⠛</nemeth>, then we are done; otherwise, <nemeth class="inline">⠠⠛⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠳⠛⠳⠐⠈⠡⠠⠓</nemeth> for some subgroup <i class="one-letter">H</i> contained in <i class="one-letter">G</i> by the lemma. Since <nemeth class="inline">⠳⠠⠓⠳⠀⠐⠅⠀⠳⠠⠛⠳</nemeth>, we can apply mathematical induction.</p>
          <p id="FUU">We now state the more general theorem for all finitely generated abelian groups. The proof of this theorem can be found in any of the references at the end of this chapter.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="SbV">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">13.1.10</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">The Fundamental Theorem of Finitely Generated Abelian Groups.</span>
            </h6>
            <p id="JkZ">Every finitely generated abelian group <i class="one-letter">G</i> is isomorphic to a direct product of cyclic groups of the form</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠰⠏⠂⠰⠘⠨⠁⠂⠐⠈⠡⠸⠠⠵⠰⠏⠆⠰⠘⠨⠁⠆⠐⠈⠡⠄⠄⠄⠈⠡⠸⠠⠵⠰⠏⠰⠰⠝⠰⠘⠨⠁⠰⠘⠰⠝⠐⠈⠡⠸⠠⠵⠈⠡⠄⠄⠄⠈⠡⠸⠠⠵</nemeth>
            </div>
            <p data-braille="continuation">, where the <nemeth class="inline">⠏⠰⠊</nemeth>'s are primes (not necessarily distinct).</p>
          </article>
        </section>
        <section class="section" id="WbU">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">13.2</span> <span class="title">Solvable Groups</span></div>
          <p id="mcd">A <dfn class="terminology">subnormal series</dfn>  of a group <i class="one-letter">G</i> is a finite sequence of subgroups</p>
          <div class="displaymath">
            <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠂⠀⠸⠨⠂⠀⠠⠓⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">, where <nemeth class="inline">⠠⠓⠰⠊</nemeth> is a normal subgroup of <nemeth class="inline">⠠⠓⠰⠊⠬⠂</nemeth>. If each subgroup <nemeth class="inline">⠠⠓⠰⠊</nemeth> is normal in <i class="one-letter">G</i>, then the series is called a <dfn class="terminology">normal series</dfn>.  The <dfn class="terminology">length</dfn> of a  subnormal or normal series is the number of proper inclusions.</p>
          <article class="example example-like" data-braille="example-like" id="bvH">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.1</span>
              <span class="period">.</span>
            </h6>
            <p id="SEL">Any series of subgroups of an abelian group is a normal series. Consider the following  series of groups:</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠀⠸⠨⠂⠀⠔⠸⠠⠵⠀⠸⠨⠂⠀⠲⠢⠸⠠⠵⠀⠸⠨⠂⠀⠂⠦⠴⠸⠠⠵⠀⠸⠨⠂⠀⠨⠷⠴⠨⠾⠠⠀⠸⠠⠵⠆⠲⠀⠸⠨⠂⠀⠨⠨⠷⠆⠨⠨⠾⠀⠸⠨⠂⠀⠨⠨⠷⠖⠨⠨⠾⠀⠸⠨⠂⠀⠨⠨⠷⠂⠆⠨⠨⠾⠀⠸⠨⠂⠀⠨⠷⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="HCQ">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.2</span>
              <span class="period">.</span>
            </h6>
            <p id="yLU">A subnormal series need not be a normal series. Consider the following subnormal series of the group <nemeth class="inline">⠠⠙⠲</nemeth>:</p>
            <div class="displaymath">
              <nemeth>⠠⠙⠲⠀⠸⠨⠂⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠠⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾⠨⠾⠀⠸⠨⠂⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾⠨⠾⠀⠸⠨⠂⠀⠨⠷⠷⠂⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. The subgroup <nemeth class="inline">⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾⠨⠾</nemeth> is not normal in <nemeth class="inline">⠠⠙⠲</nemeth>; consequently, this series is not a normal series.</p>
          </article>
          <p id="Sjm">A subnormal (normal) series <nemeth class="inline">⠨⠷⠠⠅⠰⠚⠐⠨⠾</nemeth> is a <dfn class="terminology">refinement of a subnormal (normal) series</dfn> <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> if <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾⠀⠸⠐⠅⠀⠨⠷⠠⠅⠰⠚⠐⠨⠾</nemeth>. That is, each <nemeth class="inline">⠠⠓⠰⠊</nemeth> is one of the <nemeth class="inline">⠠⠅⠰⠚</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="nJZ">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.3</span>
              <span class="period">.</span>
            </h6>
            <p id="eTd">The series</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠀⠸⠨⠂⠀⠒⠸⠠⠵⠀⠸⠨⠂⠀⠔⠸⠠⠵⠀⠸⠨⠂⠀⠲⠢⠸⠠⠵⠀⠸⠨⠂⠀⠔⠴⠸⠠⠵⠀⠸⠨⠂⠀⠂⠦⠴⠸⠠⠵⠀⠸⠨⠂⠀⠨⠷⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a refinement of the series</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠀⠸⠨⠂⠀⠔⠸⠠⠵⠀⠸⠨⠂⠀⠲⠢⠸⠠⠵⠀⠸⠨⠂⠀⠂⠦⠴⠸⠠⠵⠀⠸⠨⠂⠀⠨⠷⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="yqv">The best way to study a subnormal or normal series of subgroups, <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> of <i class="one-letter">G</i>, is actually to study the factor groups <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠸⠌⠠⠓⠰⠊</nemeth>. We say that two subnormal (normal) series <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> and <nemeth class="inline">⠨⠷⠠⠅⠰⠚⠐⠨⠾</nemeth> of a group <i class="one-letter">G</i> are <dfn class="terminology">isomorphic</dfn> if there is a one-to-one correspondence between the collections of factor groups <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠬⠂⠐⠸⠌⠠⠓⠰⠊⠐⠨⠾</nemeth> and <nemeth class="inline">⠨⠷⠠⠅⠰⠚⠬⠂⠐⠸⠌⠠⠅⠰⠚⠐⠨⠾</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="TRi">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.4</span>
              <span class="period">.</span>
            </h6>
            <p id="Lam">The two normal series</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠖⠴⠀⠸⠨⠂⠀⠨⠨⠷⠒⠨⠨⠾⠀⠸⠨⠂⠀⠨⠨⠷⠂⠢⠨⠨⠾⠀⠸⠨⠂⠀⠨⠷⠴⠨⠾⠀⠸⠠⠵⠖⠴⠀⠸⠨⠂⠀⠨⠨⠷⠲⠨⠨⠾⠀⠸⠨⠂⠀⠨⠨⠷⠆⠴⠨⠨⠾⠀⠸⠨⠂⠀⠨⠷⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">of the group <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth> are isomorphic since</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠖⠴⠸⠌⠨⠨⠷⠒⠨⠨⠾⠀⠈⠱⠈⠱⠀⠨⠨⠷⠼⠆⠴⠨⠨⠾⠸⠌⠨⠷⠴⠨⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠒⠀⠨⠨⠷⠼⠒⠨⠨⠾⠸⠌⠨⠨⠷⠂⠢⠨⠨⠾⠀⠈⠱⠈⠱⠀⠨⠨⠷⠼⠲⠨⠨⠾⠸⠌⠨⠨⠷⠆⠴⠨⠨⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠢⠀⠨⠨⠷⠼⠂⠢⠨⠨⠾⠸⠌⠨⠷⠴⠨⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠖⠴⠸⠌⠨⠨⠷⠲⠨⠨⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠲</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="exE">A subnormal series <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> of a group <i class="one-letter">G</i> is a <dfn class="terminology">composition series</dfn>  if all the factor groups are simple; that is, if none of the factor groups of the series contains a normal subgroup. A normal series <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> of <i class="one-letter">G</i> is a <dfn class="terminology">principal series</dfn>  if all the factor groups are simple.</p>
          <article class="example example-like" data-braille="example-like" id="zYr">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.5</span>
              <span class="period">.</span>
            </h6>
            <p id="rhv">The group <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth> has  a composition series</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠖⠴⠀⠸⠨⠂⠀⠨⠨⠷⠒⠨⠨⠾⠀⠸⠨⠂⠀⠨⠨⠷⠂⠢⠨⠨⠾⠀⠸⠨⠂⠀⠨⠨⠷⠒⠴⠨⠨⠾⠀⠸⠨⠂⠀⠨⠷⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">with factor groups</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠖⠴⠸⠌⠨⠨⠷⠒⠨⠨⠾⠀⠀⠈⠱⠈⠱⠀⠸⠠⠵⠒⠀⠨⠨⠷⠒⠨⠨⠾⠸⠌⠨⠨⠷⠂⠢⠨⠨⠾⠀⠀⠈⠱⠈⠱⠀⠸⠠⠵⠢⠀⠨⠨⠷⠂⠢⠨⠨⠾⠸⠌⠨⠨⠷⠒⠴⠨⠨⠾⠀⠀⠈⠱⠈⠱⠀⠸⠠⠵⠆⠀⠨⠨⠷⠒⠴⠨⠨⠾⠸⠌⠨⠷⠴⠨⠾⠀⠀⠈⠱⠈⠱⠀⠸⠠⠵⠆</nemeth>
            </div>
            <p data-braille="continuation">. Since <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth> is an abelian group, this series is automatically a principal series. Notice that a composition series need not be unique. The series</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠖⠴⠀⠸⠨⠂⠀⠨⠨⠷⠆⠨⠨⠾⠀⠸⠨⠂⠀⠨⠨⠷⠲⠨⠨⠾⠀⠸⠨⠂⠀⠨⠨⠷⠆⠴⠨⠨⠾⠀⠸⠨⠂⠀⠨⠷⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is also a composition series.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="gfA">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.6</span>
              <span class="period">.</span>
            </h6>
            <p id="XoE">For <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth>, the series</p>
            <div class="displaymath">
              <nemeth>⠠⠎⠰⠝⠐⠀⠸⠨⠂⠀⠠⠁⠰⠝⠐⠀⠸⠨⠂⠀⠨⠷⠷⠂⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a composition series for <nemeth class="inline">⠠⠎⠰⠝</nemeth> since <nemeth class="inline">⠠⠎⠰⠝⠐⠸⠌⠠⠁⠰⠝⠐⠀⠈⠱⠈⠱⠀⠸⠠⠵⠆</nemeth> and <nemeth class="inline">⠠⠁⠰⠝</nemeth> is simple.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="MmJ">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.7</span>
              <span class="period">.</span>
            </h6>
            <p id="DvN">Not every group has a composition series or a principal series. Suppose that</p>
            <div class="displaymath">
              <nemeth>⠨⠷⠼⠴⠨⠾⠀⠨⠅⠀⠠⠓⠴⠀⠸⠐⠅⠀⠠⠓⠂⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠐⠅⠀⠠⠓⠰⠝⠐⠀⠨⠅⠀⠸⠠⠵</nemeth>
            </div>
            <p data-braille="continuation">is a subnormal series for the integers under addition. Then <nemeth class="inline">⠠⠓⠂</nemeth> must be of the form <nemeth class="inline">⠅⠸⠠⠵</nemeth> for some <nemeth class="inline">⠅⠀⠈⠑⠀⠸⠠⠝</nemeth>. In this case <nemeth class="inline">⠠⠓⠂⠸⠌⠠⠓⠴⠀⠈⠱⠈⠱⠀⠅⠸⠠⠵</nemeth> is an infinite cyclic group with many nontrivial proper normal subgroups.</p>
          </article>
          <p id="KEN">Although composition series need not be unique as in the case of <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth>, it turns out that any two composition series are related. The factor groups of the two composition series for <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth> are <nemeth class="inline">⠸⠠⠵⠆</nemeth>, <nemeth class="inline">⠸⠠⠵⠆</nemeth>, <nemeth class="inline">⠸⠠⠵⠒</nemeth>, and <nemeth class="inline">⠸⠠⠵⠢</nemeth>; that is, the two composition series are isomorphic. The Jordan-Hölder Theorem says that this is always the case.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="yje">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.8</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Jordan-Hölder.</span>
            </h6>
            <p id="psi">Any two composition series of <i class="one-letter">G</i> are isomorphic.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="kPt">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="QPy">We shall employ mathematical induction on the length of the composition series. If the length of a composition series is 1, then <i class="one-letter">G</i> must be a simple group. In this case any two composition series are isomorphic.</p>
            <p id="wWH">Suppose now that the theorem is true for all groups having a composition series of length <i class="one-letter">k</i>, where <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠀⠝</nemeth>. Let</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠂⠀⠸⠨⠂⠀⠠⠓⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾⠀⠠⠛⠀⠨⠅⠀⠠⠅⠰⠍⠐⠀⠸⠨⠂⠀⠠⠅⠰⠍⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠅⠂⠀⠸⠨⠂⠀⠠⠅⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">be two composition series for <i class="one-letter">G</i>. We can form two new subnormal series for <i class="one-letter">G</i> since <nemeth class="inline">⠠⠓⠰⠊⠐⠨⠩⠠⠅⠰⠍⠤⠂</nemeth> is normal in <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂</nemeth> and <nemeth class="inline">⠠⠅⠰⠚⠐⠨⠩⠠⠓⠰⠝⠤⠂</nemeth> is normal in <nemeth class="inline">⠠⠅⠰⠚⠬⠂⠐⠨⠩⠠⠓⠰⠝⠤⠂</nemeth>:</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠴⠨⠩⠠⠅⠰⠍⠤⠂⠐⠀⠨⠅⠀⠨⠷⠑⠨⠾⠀⠠⠛⠀⠨⠅⠀⠠⠅⠰⠍⠐⠀⠸⠨⠂⠀⠠⠅⠰⠍⠤⠂⠐⠀⠸⠨⠂⠀⠠⠅⠰⠍⠤⠂⠐⠨⠩⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠅⠴⠨⠩⠠⠓⠰⠝⠤⠂⠐⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Since <nemeth class="inline">⠠⠓⠰⠊⠐⠨⠩⠠⠅⠰⠍⠤⠂</nemeth> is normal in <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂</nemeth>, the Second Isomorphism Theorem (Theorem 11.2.3) implies that</p>
            <div class="displaymath">
              <nemeth>⠷⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠾⠸⠌⠷⠠⠓⠰⠊⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠾⠀⠀⠨⠅⠀⠷⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠾⠸⠌⠷⠠⠓⠰⠊⠐⠨⠩⠷⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠾⠾⠀⠀⠀⠀⠈⠱⠈⠱⠀⠠⠓⠰⠊⠐⠷⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠾⠸⠌⠠⠓⠰⠊</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠠⠓⠰⠊</nemeth> is normal in <nemeth class="inline">⠠⠓⠰⠊⠐⠷⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠾</nemeth>. Since <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> is a composition series, <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠸⠌⠠⠓⠰⠊</nemeth> must be simple; consequently, <nemeth class="inline">⠠⠓⠰⠊⠐⠷⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠾⠸⠌⠠⠓⠰⠊</nemeth> is either <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠸⠌⠠⠓⠰⠊</nemeth> or <nemeth class="inline">⠠⠓⠰⠊⠐⠸⠌⠠⠓⠰⠊</nemeth>. That is, <nemeth class="inline">⠠⠓⠰⠊⠐⠷⠠⠓⠰⠊⠬⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠾</nemeth> must be either <nemeth class="inline">⠠⠓⠰⠊</nemeth> or <nemeth class="inline">⠠⠓⠰⠊⠬⠂</nemeth>. Removing any nonproper inclusions from the series</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠴⠨⠩⠠⠅⠰⠍⠤⠂⠐⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">, we have a composition series for <nemeth class="inline">⠠⠓⠰⠝⠤⠂</nemeth>. Our induction hypothesis says that this series must be equivalent to the composition series</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠂⠀⠸⠨⠂⠀⠠⠓⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Hence, the composition series</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠂⠀⠸⠨⠂⠀⠠⠓⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠴⠨⠩⠠⠅⠰⠍⠤⠂⠐⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">are equivalent. If <nemeth class="inline">⠠⠓⠰⠝⠤⠂⠐⠀⠨⠅⠀⠠⠅⠰⠍⠤⠂</nemeth>, then the composition series <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> and <nemeth class="inline">⠨⠷⠠⠅⠰⠚⠐⠨⠾</nemeth> are equivalent and we are done; otherwise, <nemeth class="inline">⠠⠓⠰⠝⠤⠂⠐⠠⠅⠰⠍⠤⠂</nemeth>  is a normal subgroup of <i class="one-letter">G</i> properly containing <nemeth class="inline">⠠⠓⠰⠝⠤⠂</nemeth>. In this case <nemeth class="inline">⠠⠓⠰⠝⠤⠂⠐⠠⠅⠰⠍⠤⠂⠐⠀⠨⠅⠀⠠⠛</nemeth> and we can apply the Second Isomorphism Theorem once again; that is,</p>
            <div class="displaymath">
              <nemeth>⠠⠅⠰⠍⠤⠂⠐⠸⠌⠷⠠⠅⠰⠍⠤⠂⠐⠨⠩⠠⠓⠰⠝⠤⠂⠐⠾⠀⠈⠱⠈⠱⠀⠷⠠⠓⠰⠝⠤⠂⠐⠠⠅⠰⠍⠤⠂⠐⠾⠸⠌⠠⠓⠰⠝⠤⠂⠐⠀⠨⠅⠀⠠⠛⠸⠌⠠⠓⠰⠝⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">. Therefore,</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠨⠩⠠⠅⠰⠍⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠴⠨⠩⠠⠅⠰⠍⠤⠂⠐⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠅⠰⠍⠐⠀⠸⠨⠂⠀⠠⠅⠰⠍⠤⠂⠐⠀⠸⠨⠂⠀⠠⠅⠰⠍⠤⠂⠐⠨⠩⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠅⠴⠨⠩⠠⠓⠰⠝⠤⠂⠐⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">are equivalent and the proof of the theorem is complete.</p>
          </article>
          <p id="qLW">A group <i class="one-letter">G</i> is <dfn class="terminology">solvable</dfn>  if it has a subnormal series <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> such that all of the factor groups <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠸⠌⠠⠓⠰⠊</nemeth> are abelian. Solvable groups will play a fundamental role when we study Galois theory and the solution of polynomial equations.</p>
          <article class="example example-like" data-braille="example-like" id="stS">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">13.2.9</span>
              <span class="period">.</span>
            </h6>
            <p id="jCW">The group <nemeth class="inline">⠠⠎⠲</nemeth> is solvable since</p>
            <div class="displaymath">
              <nemeth>⠠⠎⠲⠀⠸⠨⠂⠀⠠⠁⠲⠀⠸⠨⠂⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠠⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾⠨⠾⠀⠸⠨⠂⠀⠨⠷⠷⠂⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">has abelian factor groups; however, for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth> the series</p>
            <div class="displaymath">
              <nemeth>⠠⠎⠰⠝⠐⠀⠸⠨⠂⠀⠠⠁⠰⠝⠐⠀⠸⠨⠂⠀⠨⠷⠷⠂⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a composition series for <nemeth class="inline">⠠⠎⠰⠝</nemeth> with a nonabelian factor group. Therefore, <nemeth class="inline">⠠⠎⠰⠝</nemeth> is not a solvable group for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth>.</p>
          </article>
          <article class="paragraphs" id="JNC">
            <h5 class="heading">
              <span class="title">Sage.</span>
            </h5>
            <p id="cIr">Sage is able to create direct products of cyclic groups, though they are realized as permutation groups. This is a situation that should improve. However, with a classification of finite abelian groups, we can describe how to construct in Sage every group of order less than <nemeth class="inline">⠼⠂⠖</nemeth>.</p>
          </article>
        </section>
        <section class="reading-questions" id="vvy">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">13.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="jnK">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="nXD">How many abelian groups are there of order <nemeth class="inline">⠼⠆⠴⠴⠀⠨⠅⠀⠼⠆⠘⠒⠐⠢⠘⠆</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="PuT">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="UeM">How many abelian groups are there of order <nemeth class="inline">⠼⠶⠆⠔⠀⠨⠅⠀⠼⠒⠘⠖</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="vCc">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="AlV">Find a subgroup of order 6 in <nemeth class="inline">⠸⠠⠵⠦⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="bJl">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="gte">It can be shown that an abelian group of order <nemeth class="inline">⠼⠶⠆</nemeth> contains a subgroup of order <nemeth class="inline">⠼⠦</nemeth>. What are the possibilities for this subgroup?</p>
          </article>
          <article class="exercise exercise-like" id="HQu">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="MAn">What is a principal series of the group <i class="one-letter">G</i>? Your answer should not use new terms defined in this chapter.</p>
          </article>
        </section>
        <section class="exercises" id="Rsb">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">13.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="iqm">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="omP">Find all of the abelian groups of order less than or equal to <nemeth class="inline">⠼⠲⠴</nemeth> up to isomorphism.</p>
            <div class="solutions">
              <div class="hint solution-like" id="BNE"><span class="type">Hint</span>:<p id="ejj">There are three possible groups.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Oxv">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="UtY">Find all of the abelian groups of order <nemeth class="inline">⠼⠆⠴⠴</nemeth> up to isomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="uEE">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="ABh">Find all of the abelian groups of order <nemeth class="inline">⠼⠶⠆⠴</nemeth> up to isomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="aLN">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="gIq">Find all of the composition series for each of the following groups.</p>
            <ol class="outerlist">
              <li>a. <p id="PvK"><nemeth class="inline">⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>b. <p id="vCT"><nemeth class="inline">⠸⠠⠵⠲⠦</nemeth></p></li>
              <li>c. <p id="bKc">The quaternions, <nemeth class="inline">⠠⠟⠦</nemeth></p></li>
              <li>d. <p id="HRl"><nemeth class="inline">⠠⠙⠲</nemeth></p></li>
              <li>e. <p id="nYu"><nemeth class="inline">⠠⠎⠒⠈⠡⠸⠠⠵⠲</nemeth></p></li>
              <li>f. <p id="UfD"><nemeth class="inline">⠠⠎⠲</nemeth></p></li>
              <li>g. <p id="AmM"><nemeth class="inline">⠠⠎⠰⠝</nemeth>, <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠢</nemeth></p></li>
              <li>h. <p id="gtV"><nemeth class="inline">⠸⠠⠟</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="aqo"><span class="type">Hint</span>:<p id="Kqs">(a) <nemeth class="inline">⠨⠷⠼⠴⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠖⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠒⠨⠨⠾⠀⠸⠐⠅⠀⠸⠠⠵⠂⠆</nemeth>; (e) <nemeth class="inline">⠨⠷⠷⠼⠂⠾⠨⠾⠈⠡⠨⠷⠴⠨⠾⠀⠸⠐⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾⠈⠡⠨⠷⠴⠨⠾⠀⠸⠐⠅⠀⠠⠎⠒⠈⠡⠨⠷⠴⠨⠾⠀⠸⠐⠅⠀⠠⠎⠒⠈⠡⠨⠨⠷⠆⠨⠨⠾⠀⠸⠐⠅⠀⠠⠎⠒⠈⠡⠸⠠⠵⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GSW">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="MPz">Show that the infinite direct product <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆⠈⠡⠄⠄⠄</nemeth> is not finitely generated.</p>
          </article>
          <article class="exercise exercise-like" id="naf">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="sWI">Let <i class="one-letter">G</i> be an abelian group of order <i class="one-letter">m</i>. If <i class="one-letter">n</i> divides <i class="one-letter">m</i>, prove that <i class="one-letter">G</i> has a subgroup of order <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="Tho">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="ZdR">A group <i class="one-letter">G</i> is a <dfn class="terminology">torsion group</dfn> if every element of <i class="one-letter">G</i> has finite order. Prove that a finitely generated abelian torsion group must be finite.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ySY"><span class="type">Hint</span>:<p id="qxB">Use the Fundamental Theorem of Finitely Generated Abelian Groups.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="zox">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="Fla">Let <i class="one-letter">G</i>, <i class="one-letter">H</i>, and <i class="one-letter">K</i> be finitely generated abelian groups. Show that if <nemeth class="inline">⠠⠛⠈⠡⠠⠓⠀⠈⠱⠈⠱⠀⠠⠛⠈⠡⠠⠅</nemeth>, then <nemeth class="inline">⠠⠓⠀⠈⠱⠈⠱⠀⠠⠅</nemeth>. Give a counterexample to show that this cannot be true in general.</p>
          </article>
          <article class="exercise exercise-like" id="fvG">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="lsj">Let <i class="one-letter">G</i> and <i class="one-letter">H</i> be solvable groups. Show that <nemeth class="inline">⠠⠛⠈⠡⠠⠓</nemeth> is also solvable.</p>
          </article>
          <article class="exercise exercise-like" id="LCP">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="Rzs">If <i class="one-letter">G</i> has a composition (principal) series and if <i class="one-letter">N</i> is a proper normal subgroup of <i class="one-letter">G</i>, show there exists a composition (principal) series containing <i class="one-letter">N</i>.</p>
          </article>
          <article class="exercise exercise-like" id="rJY">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="xGB">Prove or disprove: Let <i class="one-letter">N</i> be a normal subgroup of <i class="one-letter">G</i>. If <i class="one-letter">N</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> have composition series, then <i class="one-letter">G</i> must also have a composition series.</p>
          </article>
          <article class="exercise exercise-like" id="XRh">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="dNK">Let <i class="one-letter">N</i> be a normal subgroup of <i class="one-letter">G</i>. If <i class="one-letter">N</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> are solvable groups, show that <i class="one-letter">G</i> is also a solvable group.</p>
            <div class="solutions">
              <div class="hint solution-like" id="jKa"><span class="type">Hint</span>:<p id="WEK">If <i class="one-letter">N</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> are solvable, then they have solvable series</p><div class="displaymath"><nemeth>⠠⠝⠀⠨⠅⠀⠠⠝⠰⠝⠐⠀⠸⠨⠂⠀⠠⠝⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠝⠂⠀⠸⠨⠂⠀⠠⠝⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾⠀⠠⠛⠸⠌⠠⠝⠀⠨⠅⠀⠠⠛⠰⠝⠐⠸⠌⠠⠝⠀⠸⠨⠂⠀⠠⠛⠰⠝⠤⠂⠐⠸⠌⠠⠝⠀⠸⠨⠂⠀⠀⠄⠄⠄⠀⠠⠛⠂⠸⠌⠠⠝⠀⠸⠨⠂⠀⠠⠛⠴⠸⠌⠠⠝⠀⠨⠅⠀⠨⠷⠠⠝⠨⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="DYq">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="JUT">Prove that <i class="one-letter">G</i> is a solvable group if and only if <i class="one-letter">G</i> has a series of subgroups</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠏⠰⠝⠐⠀⠸⠨⠂⠀⠠⠏⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠏⠂⠀⠸⠨⠂⠀⠠⠏⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">where <nemeth class="inline">⠠⠏⠰⠊</nemeth> is normal in <nemeth class="inline">⠠⠏⠰⠊⠬⠂</nemeth> and the order of <nemeth class="inline">⠠⠏⠰⠊⠬⠂⠐⠸⠌⠠⠏⠰⠊</nemeth> is prime.</p>
          </article>
          <article class="exercise exercise-like" id="kfz">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="qcc">Let <i class="one-letter">G</i> be a solvable group. Prove that any subgroup of <i class="one-letter">G</i> is also solvable.</p>
          </article>
          <article class="exercise exercise-like" id="QmI">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="Wjl">Let <i class="one-letter">G</i> be a solvable group and <i class="one-letter">N</i> a normal subgroup of <i class="one-letter">G</i>. Prove that <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> is solvable.</p>
          </article>
          <article class="exercise exercise-like" id="wtR">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="Cqu">Prove that <nemeth class="inline">⠠⠙⠰⠝</nemeth> is solvable for all integers <i class="one-letter">n</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="otT"><span class="type">Hint</span>:<p id="CLT">Use the fact that <nemeth class="inline">⠠⠙⠰⠝</nemeth> has a cyclic subgroup of index <nemeth class="inline">⠼⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="cBa">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="ixD">Suppose that <i class="one-letter">G</i> has a composition series. If <i class="one-letter">N</i> is a normal subgroup of <i class="one-letter">G</i>, show that <i class="one-letter">N</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> also have composition series.</p>
          </article>
          <article class="exercise exercise-like" id="IIj">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="OEM">Let <i class="one-letter">G</i> be a cyclic <i class="one-letter">p</i>-group with subgroups <i class="one-letter">H</i> and <i class="one-letter">K</i>. Prove that either <i class="one-letter">H</i> is contained in <i class="one-letter">K</i> or <i class="one-letter">K</i> is contained in <i class="one-letter">H</i>.</p>
          </article>
          <article class="exercise exercise-like" id="oPs">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="uLV">Suppose that <i class="one-letter">G</i> is a solvable group with order <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>. Show that <i class="one-letter">G</i> contains a normal nontrivial abelian subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="UWB">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="aTe">Recall that the <dfn class="terminology">commutator subgroup</dfn> <nemeth class="inline">⠠⠛⠄</nemeth> of a group <i class="one-letter">G</i> is defined as the subgroup of <i class="one-letter">G</i> generated by elements of the form <nemeth class="inline">⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂⠐⠁⠃</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>. We can define a series of subgroups of <i class="one-letter">G</i> by <nemeth class="inline">⠠⠛⠘⠷⠴⠾⠐⠀⠨⠅⠀⠠⠛</nemeth>, <nemeth class="inline">⠠⠛⠘⠷⠂⠾⠐⠀⠨⠅⠀⠠⠛⠄</nemeth>, and <nemeth class="inline">⠠⠛⠘⠷⠊⠬⠂⠾⠐⠀⠨⠅⠀⠷⠠⠛⠘⠷⠊⠾⠐⠾⠄</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="JGy">Prove that <nemeth class="inline">⠠⠛⠘⠷⠊⠬⠂⠾</nemeth> is normal in <nemeth class="inline">⠷⠠⠛⠘⠷⠊⠾⠐⠾⠄</nemeth>. The series of subgroups</p><div class="displaymath"><nemeth>⠠⠛⠘⠷⠴⠾⠐⠀⠨⠅⠀⠠⠛⠀⠸⠨⠂⠀⠠⠛⠘⠷⠂⠾⠐⠀⠸⠨⠂⠀⠠⠛⠘⠷⠆⠾⠐⠀⠸⠨⠂⠀⠄⠄⠄</nemeth></div><p data-braille="continuation">is called the <dfn class="terminology">derived series</dfn> of <i class="one-letter">G</i>.</p></li>
              <li>b. <p id="pNH">Show that <i class="one-letter">G</i> is solvable if and only if <nemeth class="inline">⠠⠛⠘⠷⠝⠾⠐⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth> for some integer <i class="one-letter">n</i>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="BdK">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="Han">Suppose that <i class="one-letter">G</i> is a solvable group with order <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>. Show that <i class="one-letter">G</i> contains a normal nontrivial abelian factor group.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ZkV"><span class="type">Hint</span>:<p id="iTc"><nemeth class="inline">⠠⠛⠸⠌⠠⠛⠄</nemeth> is abelian.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="hkT">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Zassenhaus Lemma.</span>
            </h6>
            <p id="nhw">Let <i class="one-letter">H</i> and <i class="one-letter">K</i> be subgroups of a group <i class="one-letter">G</i>. Suppose also that <nemeth class="inline">⠠⠓⠘⠈⠼</nemeth> and <nemeth class="inline">⠠⠅⠘⠈⠼</nemeth> are normal subgroups of <i class="one-letter">H</i> and <i class="one-letter">K</i> respectively. Then</p>
            <ol class="outerlist">
              <li>a. <p id="iji"><nemeth class="inline">⠠⠓⠘⠈⠼⠐⠷⠠⠓⠨⠩⠠⠅⠘⠈⠼⠐⠾</nemeth> is a normal subgroup of <nemeth class="inline">⠠⠓⠘⠈⠼⠐⠷⠠⠓⠨⠩⠠⠅⠾</nemeth>.</p></li>
              <li>b. <p id="Oqr"><nemeth class="inline">⠠⠅⠘⠈⠼⠐⠷⠠⠓⠘⠈⠼⠐⠨⠩⠠⠅⠾</nemeth> is a normal subgroup of <nemeth class="inline">⠠⠅⠘⠈⠼⠐⠷⠠⠓⠨⠩⠠⠅⠾</nemeth>.</p></li>
              <li>c. <p id="uxA"><nemeth class="inline">⠠⠓⠘⠈⠼⠐⠷⠠⠓⠨⠩⠠⠅⠾⠸⠌⠠⠓⠘⠈⠼⠐⠷⠠⠓⠨⠩⠠⠅⠘⠈⠼⠐⠾⠀⠈⠱⠈⠱⠀⠠⠅⠘⠈⠼⠐⠷⠠⠓⠨⠩⠠⠅⠾⠸⠌⠠⠅⠘⠈⠼⠐⠷⠠⠓⠘⠈⠼⠐⠨⠩⠠⠅⠾⠀⠈⠱⠈⠱⠀⠷⠠⠓⠨⠩⠠⠅⠾⠸⠌⠷⠠⠓⠘⠈⠼⠐⠨⠩⠠⠅⠾⠷⠠⠓⠨⠩⠠⠅⠘⠈⠼⠐⠾</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Nsc">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Schreier's Theorem.</span>
            </h6>
            <p id="ToF">Use the Zassenhaus Lemma to prove that two subnormal (normal) series of a group <i class="one-letter">G</i> have isomorphic refinements.</p>
          </article>
          <article class="exercise exercise-like" id="tzl">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="zvO">Use Schreier's Theorem to prove the Jordan-Hölder Theorem.</p>
          </article>
        </section>
        <section class="exercises" id="xzk">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">13.5</span> <span class="title">Programming Exercises</span></div>
          <article class="exercise exercise-like" id="ZGu">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="fCX">Write a program that will compute all possible abelian groups of order <i class="one-letter">n</i>. What is the largest <i class="one-letter">n</i> for which your program will work?</p>
          </article>
        </section>
        <section class="references" id="tDP">
          <div class="none"><span class="type">References</span> <span class="codenumber">13.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="ZKY"><div class="bibitem">[1]</div>  <div class="bibentry"> Hungerford, T. W. <i>Algebra</i>. Springer, New York, 1974.</div></article>
          <article class="bib" id="FSh"><div class="bibitem">[2]</div>  <div class="bibentry"> Lang, S. <i>Algebra</i>. 3rd ed. Springer, New York, 2002.</div></article>
          <article class="bib" id="lZq"><div class="bibitem">[3]</div>  <div class="bibentry"> Rotman, J. J. <i>An Introduction to the Theory of Groups</i>. 4th ed. Springer, New York, 1995.</div></article>
        </section>
        <section class="section" id="Cjd">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">13.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="EIk">
            <p id="bYx">Cyclic groups, and direct products of cyclic groups, are implemented in Sage as permutation groups. However, these groups quickly become very unwieldly representations and it should be easier to work with finite abelian groups in Sage. So we will postpone any specifics for this chapter until that happens. However, now that we understand the notion of isomorphic groups and the structure of finite abelian groups, we can return to our quest to classify all of the groups with order less than <nemeth class="inline">⠼⠂⠖</nemeth>.</p>
          </section>
          <section class="subsection" id="FdJ">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">13.7.1</span> <span class="title">Classification of Finite Groups</span></div>
            <p id="LKg">It does not take any sophisticated tools to understand groups of order <nemeth class="inline">⠼⠆⠏</nemeth>, where <i class="one-letter">p</i> is an odd prime. There are two possibilities — a cyclic group of order <nemeth class="inline">⠼⠆⠏</nemeth> and the dihedral group of order <nemeth class="inline">⠼⠆⠏</nemeth> that is the set of symmetries of a regular <i class="one-letter">p</i>-gon. The proof requires some close, tight reasoning, but the required theorems are generally just concern orders of elements, Lagrange's Theorem and cosets. See Exercise 9.4.55. This takes care of orders <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠖⠠⠀⠼⠂⠴⠠⠀⠼⠂⠲</nemeth>.</p>
            <p id="rRp">For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠔</nemeth>, the upcoming Corollary 14.2.5 will tell us that any group of order <nemeth class="inline">⠏⠘⠆</nemeth> (where <i class="one-letter">p</i> is a prime) is abelian. So we know from this section that the only two possibilities are <nemeth class="inline">⠸⠠⠵⠔</nemeth> and <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒</nemeth>. Similarly, the upcoming Theorem 15.2.2 will tell us that every group of order <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠢</nemeth> is abelian. Now this leaves just one possibility for this order: <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠢⠀⠈⠱⠈⠱⠀⠸⠠⠵⠂⠢</nemeth>.</p>
            <p id="XYy">We have just two orders left to analyze: <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠦</nemeth> and <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠆</nemeth>. The possibilities are groups we already know, with one exception. However, the analysis that these are the <em class="emphasis">only</em> possibilities is more complicated, and will not be pursued now, nor in the next few chapters. Notice that <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠖</nemeth> is more complicated still, with <nemeth class="inline">⠼⠂⠲</nemeth> different possibilities (which explains why we stopped here).</p>
            <p id="EfH">For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠦</nemeth> there are <nemeth class="inline">⠼⠒</nemeth> abelian groups, and the two non-abelian groups are the dihedral group (symmetries of a square) and the quaternions.</p>
            <p id="kmQ">For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠆</nemeth> there are <nemeth class="inline">⠼⠆</nemeth> abelian groups, and <nemeth class="inline">⠼⠒</nemeth> non-abelian groups. We know two of the non-abelian groups as a dihedral group, and the alternating group on <nemeth class="inline">⠼⠲</nemeth> symbols (which is also the symmetries of a tetrahedron). The third non-abelian group is an example of a “dicyclic” group, which is an infinite family of groups, each with order divisible by <nemeth class="inline">⠼⠲</nemeth>. The order <nemeth class="inline">⠼⠂⠆</nemeth> dicyclic group can also be constructed as a “semi-direct product” of two cyclic groups — this is a construction worth knowing as you pursue further study of group theory. The order <nemeth class="inline">⠼⠦</nemeth> dicyclic group is also the quaternions and more generally, the dicyclic groups of order <nemeth class="inline">⠼⠆⠘⠅</nemeth>, <nemeth class="inline">⠅⠀⠨⠂⠀⠼⠆</nemeth> are known as “generalized quaternion groups.”</p>
            <p id="QtZ">The following examples will show you how to construct some of these groups, while also exercising a few of the commands and allowing us to be more certain the following table is accurate.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S = SymmetricGroup(3)
D = DihedralGroup(3)
S.is_isomorphic(D)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C3 = CyclicPermutationGroup(3)
C5 = CyclicPermutationGroup(5)
DP = direct_product_permgroups([C3, C5])
C  = CyclicPermutationGroup(15)
DP.is_isomorphic(C)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q  = QuaternionGroup()
DI = DiCyclicGroup(2)
Q.is_isomorphic(DI)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
          </section>
          <section class="subsection" id="lkS">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">13.7.2</span> <span class="title">Groups of Small Order as Permutation Groups</span></div>
            <p id="wBi">We list here constructions, as permutation groups in Sage, for all of the groups of order less than <nemeth class="inline">⠼⠂⠖</nemeth>.</p>
            <figure class="table table-like" data-braille="figure-like" id="OTh">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">13.7.1<span class="period">.</span></span><span class="space"> </span>The Groups of Order <nemeth class="inline">⠼⠂⠖</nemeth> or Less in Sage</figcaption>
              <table>
                <tr>
                  <td class="l m b2 r0 l0 t2 lines">Order</td>
                  <td class="l m b2 r0 l0 t2 lines">Construction</td>
                  <td class="l m b2 r0 l0 t2 lines" data-braille="last-cell">Notes, Alternatives</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">1</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(1)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Trivial</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">2</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(2)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <code class="code-inline tex2jax_ignore">SymmetricGroup(2)</code>
                  </td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">3</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(3)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Prime order</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">4</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(4)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">4</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">KleinFourGroup()</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Abelian, non-cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">5</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(5)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Prime order</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">6</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(6)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">6</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">SymmetricGroup(3)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Non-abelian</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <code class="code-inline tex2jax_ignore">DihedralGroup(3)</code>
                  </td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">7</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(7)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Prime order</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">8</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(8)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">8</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">C2=CyclicPermutationGroup(2)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell"/>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">C4=CyclicPermutationGroup(4)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell"/>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">G=direct_product_permgroups([C2,C4])</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Abelian, non-cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">8</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">C2=CyclicPermutationGroup(2)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell"/>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">G=direct_product_permgroups([C2,C2,C2])</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Abelian, non-cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">8</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">DihedralGroup(4)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Non-abelian</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">8</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">QuaternionGroup()</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Quaternions</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">
                    <code class="code-inline tex2jax_ignore">DiCyclicGroup(2)</code>
                  </td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">9</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(9)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">9</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">C3=CyclicPermutationGroup(3)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell"/>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">G=direct_product_permgroups([C3,C3])</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Abelian, non-cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">10</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(10)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">10</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">DihedralGroup(5)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Non-abelian</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">11</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(11)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Prime order</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">12</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(12)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">12</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">C2=CyclicPermutationGroup(2)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell"/>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">C6=CyclicPermutationGroup(6)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell"/>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">G=direct_product_permgroups([C2,C6])</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Abelian, non-cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">12</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">DihedralGroup(6)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Non-abelian</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">12</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">AlternatingGroup(4)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Non-abelian</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Symmetries of tetrahedron</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">12</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">DiCyclicGroup(3)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Non-abelian</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines"/>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Semi-direct product <nemeth class="inline">⠠⠵⠒⠄⡳⠭⠆⠆⠉⠁⠄⠠⠵⠲</nemeth></td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">13</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(13)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Prime order</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">14</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(14)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Cyclic</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">14</td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">DihedralGroup(7)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Non-abelian</td>
                </tr>
                <tr>
                  <td class="l m b2 r0 l0 t0 lines">15</td>
                  <td class="l m b2 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(15)</code>
                  </td>
                  <td class="l m b2 r0 l0 t0 lines" data-braille="last-cell">Cyclic</td>
                </tr>
              </table>
            </figure>
          </section>
        </section>
        <section class="exercises" id="dGt">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">13.8</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="FND">
            <p id="IfG">There are no Sage exercises for this chapter.</p>
          </section>
        </section>
      </section>
      <section class="chapter" id="elJ">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">14</span> <span class="title">Group Actions</span></div>
        <section class="introduction" id="fFx">
          <p id="FuR">Group actions generalize group multiplication. If <i class="one-letter">G</i> is a group and <i class="one-letter">X</i> is an arbitrary set, a group action of an element <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> is a product, <nemeth class="inline">⠛⠭</nemeth>, living in <i class="one-letter">X</i>. Many problems in algebra are best be attacked via group actions. For example, the proofs of the Sylow theorems and of Burnside's Counting Theorem are most easily understood when they are formulated in terms of group actions.</p>
        </section>
        <section class="section" id="nFv">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">14.1</span> <span class="title">Groups Acting on Sets</span></div>
          <p id="Lyy">Let <i class="one-letter">X</i> be a set and <i class="one-letter">G</i> be a group. A <dfn class="terminology">(left) action</dfn>  of <i class="one-letter">G</i> on <i class="one-letter">X</i> is a map <nemeth class="inline">⠠⠛⠈⠡⠠⠭⠀⠫⠕⠀⠠⠭</nemeth> given by <nemeth class="inline">⠷⠛⠠⠀⠭⠾⠀⠫⠳⠒⠒⠕⠀⠛⠭</nemeth>, where</p>
          <ol class="outerlist">
            <li>1. <p id="tXx"><nemeth class="inline">⠑⠭⠀⠨⠅⠀⠭</nemeth> for all <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>;</p></li>
            <li>2. <p id="aeG"><nemeth class="inline">⠷⠛⠂⠛⠆⠾⠭⠀⠨⠅⠀⠛⠂⠷⠛⠆⠭⠾</nemeth> for all <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> and all <nemeth class="inline">⠛⠂⠠⠀⠛⠆⠀⠈⠑⠀⠠⠛</nemeth>.</p></li>
          </ol>
          <p data-braille="continuation">Under these considerations <i class="one-letter">X</i> is called a <dfn class="terminology"><i class="one-letter">G</i>-set</dfn>.  Notice that we are not requiring <i class="one-letter">X</i> to be related to <i class="one-letter">G</i> in any way. It is true that every group <i class="one-letter">G</i> acts on every set <i class="one-letter">X</i> by the trivial action <nemeth class="inline">⠷⠛⠠⠀⠭⠾⠀⠫⠳⠒⠒⠕⠀⠭</nemeth>; however, group actions are more interesting if the set <i class="one-letter">X</i> is somehow related to the group <i class="one-letter">G</i>.</p>
          <article class="example example-like" data-braille="example-like" id="JXt">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="rrm">Let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> and <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠸⠠⠗⠘⠆</nemeth>. Then <i class="one-letter">G</i> acts on <i class="one-letter">X</i> by left multiplication. If <nemeth class="inline">⠧⠀⠈⠑⠀⠸⠠⠗⠘⠆</nemeth> and <i class="one-letter">I</i> is the identity matrix, then <nemeth class="inline">⠠⠊⠧⠀⠨⠅⠀⠧</nemeth>. If <i class="one-letter">A</i> and <i class="one-letter">B</i> are <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> invertible matrices, then <nemeth class="inline">⠷⠠⠁⠠⠃⠾⠧⠀⠨⠅⠀⠠⠁⠷⠠⠃⠧⠾</nemeth> since matrix multiplication is associative.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="qeC">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="Xyv">Let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠙⠲</nemeth> be the symmetry group of a square. If <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠨⠾</nemeth> is the set of vertices of the square, then we can consider <nemeth class="inline">⠠⠙⠲</nemeth> to consist of the following permutations:</p>
            <div class="displaymath">
              <nemeth>⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠆⠲⠾⠠⠀⠷⠼⠂⠲⠒⠆⠾⠠⠀⠷⠼⠂⠆⠒⠲⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾⠠⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. The elements of <nemeth class="inline">⠠⠙⠲</nemeth> act on <i class="one-letter">X</i> as functions. The permutation <nemeth class="inline">⠷⠼⠂⠒⠾⠷⠆⠲⠾</nemeth> acts on vertex <nemeth class="inline">⠼⠂</nemeth> by sending it to vertex <nemeth class="inline">⠼⠒</nemeth>, on vertex <nemeth class="inline">⠼⠆</nemeth> by sending it to vertex <nemeth class="inline">⠼⠲</nemeth>, and so on. It is easy to see that the  axioms of a group action are satisfied.</p>
          </article>
          <p id="rFH">In general, if <i class="one-letter">X</i> is any set and <i class="one-letter">G</i> is a subgroup of <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>, the group of all permutations acting on <i class="one-letter">X</i>, then <i class="one-letter">X</i> is a <i class="one-letter">G</i>-set under the group action</p>
          <div class="displaymath">
            <nemeth>⠷⠎⠠⠀⠭⠾⠀⠫⠳⠒⠒⠕⠀⠎⠷⠭⠾</nemeth>
          </div>
          <p data-braille="continuation">for <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="WlL">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="DFE">If we let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠠⠛</nemeth>, then every group <i class="one-letter">G</i> acts on itself by the left regular representation; that is, <nemeth class="inline">⠷⠛⠠⠀⠭⠾⠀⠫⠳⠒⠒⠕⠀⠇⠰⠛⠐⠷⠭⠾⠀⠨⠅⠀⠛⠭</nemeth>, where  <nemeth class="inline">⠨⠇⠰⠛</nemeth> is left multiplication:</p>
            <div class="displaymath">
              <nemeth>⠑⠡⠭⠀⠨⠅⠀⠇⠰⠑⠐⠭⠀⠨⠅⠀⠑⠭⠀⠨⠅⠀⠭⠀⠷⠛⠓⠾⠡⠭⠀⠨⠅⠀⠇⠰⠛⠓⠐⠭⠀⠨⠅⠀⠇⠰⠛⠐⠇⠰⠓⠐⠭⠀⠨⠅⠀⠇⠰⠛⠐⠷⠓⠭⠾⠀⠨⠅⠀⠛⠡⠷⠓⠡⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">. If <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>, then <i class="one-letter">G</i> is an <i class="one-letter">H</i>-set under left multiplication by elements of <i class="one-letter">H</i>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="CsU">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="jMN">Let <i class="one-letter">G</i> be a group and suppose that <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠠⠛</nemeth>. If <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>, then <i class="one-letter">G</i> is an <i class="one-letter">H</i>-set under <dfn class="terminology">conjugation</dfn>;  that is, we can define an action of <i class="one-letter">H</i> on <i class="one-letter">G</i>,</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠈⠡⠠⠛⠀⠫⠕⠀⠠⠛</nemeth>
            </div>
            <p data-braille="continuation">, via</p>
            <div class="displaymath">
              <nemeth>⠷⠓⠠⠀⠛⠾⠀⠫⠳⠒⠒⠕⠀⠓⠛⠓⠘⠤⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Clearly, the first axiom for a group action holds. Observing that</p>
            <div class="displaymath">
              <nemeth>⠷⠓⠂⠓⠆⠠⠀⠛⠾⠀⠀⠨⠅⠀⠓⠂⠓⠆⠛⠷⠓⠂⠓⠆⠾⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠓⠂⠷⠓⠆⠛⠓⠆⠘⠤⠼⠂⠐⠾⠓⠂⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠷⠓⠂⠠⠀⠷⠓⠆⠠⠀⠛⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">, we see that the second condition is also satisfied.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="iAd">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="PTW">Let <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i> and <nemeth class="inline">⠈⠠⠇⠰⠠⠓</nemeth> the set of left cosets of <i class="one-letter">H</i>. The set <nemeth class="inline">⠈⠠⠇⠰⠠⠓</nemeth> is a <i class="one-letter">G</i>-set under the action</p>
            <div class="displaymath">
              <nemeth>⠷⠛⠠⠀⠭⠠⠓⠾⠀⠫⠳⠒⠒⠕⠀⠛⠭⠠⠓</nemeth>
            </div>
            <p data-braille="continuation">. Again, it is easy to see that the first axiom is true. Since <nemeth class="inline">⠷⠛⠛⠘⠄⠐⠾⠭⠠⠓⠀⠨⠅⠀⠛⠷⠛⠘⠄⠐⠭⠠⠓⠾</nemeth>, the second axiom is  also true.</p>
          </article>
          <p id="XMQ">If <i class="one-letter">G</i> acts on a set <i class="one-letter">X</i> and <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠭</nemeth>, then <i class="one-letter">x</i> is said to be <dfn class="terminology"><i class="one-letter">G</i>-equivalent</dfn>  to <i class="one-letter">y</i> if there exists a <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠛⠭⠀⠨⠅⠀⠽</nemeth>. We write <nemeth class="inline">⠭⠈⠱⠰⠠⠛⠐⠽</nemeth> or <nemeth class="inline">⠭⠈⠱⠽</nemeth> if two elements are <i class="one-letter">G</i>-equivalent.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="luJ">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.6</span>
              <span class="period">.</span>
            </h6>
            <p id="mHt">Let <i class="one-letter">X</i> be a <i class="one-letter">G</i>-set. Then <i class="one-letter">G</i>-equivalence is an equivalence relation on <i class="one-letter">X</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="Qwz">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="QZp">The relation <nemeth class="inline">⠈⠱</nemeth> is reflexive since <nemeth class="inline">⠑⠭⠀⠨⠅⠀⠭</nemeth>. Suppose that <nemeth class="inline">⠭⠈⠱⠽</nemeth> for <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠭</nemeth>. Then there exists a <i class="one-letter">g</i> such that <nemeth class="inline">⠛⠭⠀⠨⠅⠀⠽</nemeth>. In this case <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠽⠀⠨⠅⠀⠭</nemeth>; hence, <nemeth class="inline">⠽⠈⠱⠭</nemeth>. To show that the relation is transitive, suppose that <nemeth class="inline">⠭⠈⠱⠽</nemeth> and <nemeth class="inline">⠽⠈⠱⠵</nemeth>. Then there must exist group elements <i class="one-letter">g</i> and <i class="one-letter">h</i> such that <nemeth class="inline">⠛⠭⠀⠨⠅⠀⠽</nemeth> and <nemeth class="inline">⠓⠽⠀⠨⠅⠀⠵</nemeth>. So <nemeth class="inline">⠵⠀⠨⠅⠀⠓⠽⠀⠨⠅⠀⠷⠓⠛⠾⠭</nemeth>, and <i class="one-letter">x</i> is equivalent to <i class="one-letter">z</i>.</p>
          </article>
          <p id="DTZ">If <i class="one-letter">X</i> is a <i class="one-letter">G</i>-set, then each partition of <i class="one-letter">X</i> associated with <i class="one-letter">G</i>-equivalence is called an <dfn class="terminology">orbit</dfn>  of <i class="one-letter">X</i> under <i class="one-letter">G</i>. We will denote the orbit that contains an element <i class="one-letter">x</i> of <i class="one-letter">X</i> by <nemeth class="inline">⠈⠠⠕⠰⠭</nemeth>. </p>
          <article class="example example-like" data-braille="example-like" id="OHm">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="wbf">Let <i class="one-letter">G</i> be the permutation group defined by</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠠⠀⠷⠼⠲⠢⠾⠠⠀⠷⠼⠂⠆⠒⠾⠷⠲⠢⠾⠠⠀⠷⠼⠂⠒⠆⠾⠷⠲⠢⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">and <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠨⠾</nemeth>. Then <i class="one-letter">X</i> is a <i class="one-letter">G</i>-set. The orbits are <nemeth class="inline">⠈⠠⠕⠂⠀⠨⠅⠀⠈⠠⠕⠆⠀⠨⠅⠀⠈⠠⠕⠒⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth> and <nemeth class="inline">⠈⠠⠕⠲⠀⠨⠅⠀⠈⠠⠕⠢⠀⠨⠅⠀⠨⠷⠼⠲⠠⠀⠼⠢⠨⠾</nemeth>.</p>
          </article>
          <p id="kbi">Now suppose that <i class="one-letter">G</i> is a group acting on a set <i class="one-letter">X</i> and let <i class="one-letter">g</i> be an element of <i class="one-letter">G</i>. The <dfn class="terminology">fixed point set</dfn>  of <i class="one-letter">g</i> in <i class="one-letter">X</i>, denoted by <nemeth class="inline">⠠⠭⠰⠛</nemeth>, is the set of all <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> such that <nemeth class="inline">⠛⠭⠀⠨⠅⠀⠭</nemeth>.  We can also study the group elements <i class="one-letter">g</i> that fix a given <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>. This set is more than a subset of <i class="one-letter">G</i>, it is a subgroup. This subgroup is called the <dfn class="terminology">stabilizer subgroup</dfn> or <dfn class="terminology">isotropy subgroup</dfn>  of <i class="one-letter">x</i>. We will denote the stabilizer subgroup of <i class="one-letter">x</i> by <nemeth class="inline">⠠⠛⠰⠭</nemeth>. </p>
          <article class="remark remark-like" data-braille="remark-like" id="zyo">
            <h6 class="heading">
              <span class="type">Remark</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.8</span>
              <span class="period">.</span>
            </h6>
            <p id="ZnI">It is important to remember that <nemeth class="inline">⠠⠭⠰⠛⠐⠀⠸⠐⠅⠀⠠⠭</nemeth> and <nemeth class="inline">⠠⠛⠰⠭⠐⠀⠸⠐⠅⠀⠠⠛</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="uOv">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.9</span>
              <span class="period">.</span>
            </h6>
            <p id="cio">Let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠖⠨⠾</nemeth> and suppose that <i class="one-letter">G</i> is the permutation group given by the permutations</p>
            <div class="displaymath">
              <nemeth>⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠲⠢⠖⠾⠠⠀⠷⠼⠒⠢⠾⠷⠲⠖⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠖⠢⠲⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Then the fixed point sets  of <i class="one-letter">X</i> under the action of <i class="one-letter">G</i> are</p>
            <div class="displaymath">
              <nemeth>⠠⠭⠰⠷⠂⠾⠐⠀⠨⠅⠀⠠⠭⠠⠀⠠⠭⠰⠷⠒⠢⠾⠷⠲⠖⠾⠐⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠨⠾⠠⠀⠠⠭⠰⠷⠂⠆⠾⠷⠒⠲⠢⠖⠾⠐⠀⠨⠅⠀⠠⠭⠰⠷⠂⠆⠾⠷⠒⠖⠢⠲⠾⠐⠀⠨⠅⠀⠸⠴</nemeth>
            </div>
            <p data-braille="continuation">, and the stabilizer subgroups are</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠂⠀⠨⠅⠀⠠⠛⠆⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠒⠢⠾⠷⠲⠖⠾⠨⠾⠠⠀⠠⠛⠒⠀⠨⠅⠀⠠⠛⠲⠀⠨⠅⠀⠠⠛⠢⠀⠨⠅⠀⠠⠛⠖⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. It is easily seen that <nemeth class="inline">⠠⠛⠰⠭</nemeth> is a subgroup of <i class="one-letter">G</i> for each <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>.</p>
          </article>
          <article class="proposition theorem-like" data-braille="theorem-like" id="RBS">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.10</span>
              <span class="period">.</span>
            </h6>
            <p id="SOC">Let <i class="one-letter">G</i> be a group acting on a set <i class="one-letter">X</i> and <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>. The stabilizer group of <i class="one-letter">x</i>, <nemeth class="inline">⠠⠛⠰⠭</nemeth>, is a subgroup of <i class="one-letter">G</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="wDI">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="xgy">Clearly, <nemeth class="inline">⠑⠀⠈⠑⠀⠠⠛⠰⠭</nemeth> since the identity fixes every element in the set <i class="one-letter">X</i>. Let <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠛⠰⠭⠐</nemeth>. Then <nemeth class="inline">⠛⠭⠀⠨⠅⠀⠭</nemeth> and <nemeth class="inline">⠓⠭⠀⠨⠅⠀⠭</nemeth>. So <nemeth class="inline">⠷⠛⠓⠾⠭⠀⠨⠅⠀⠛⠷⠓⠭⠾⠀⠨⠅⠀⠛⠭⠀⠨⠅⠀⠭</nemeth>; hence, the product of two elements in <nemeth class="inline">⠠⠛⠰⠭</nemeth> is also in <nemeth class="inline">⠠⠛⠰⠭</nemeth>. Finally, if <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛⠰⠭</nemeth>, then <nemeth class="inline">⠭⠀⠨⠅⠀⠑⠭⠀⠨⠅⠀⠷⠛⠘⠤⠼⠂⠐⠛⠾⠭⠀⠨⠅⠀⠷⠛⠘⠤⠼⠂⠐⠾⠛⠭⠀⠨⠅⠀⠛⠘⠤⠼⠂⠐⠭</nemeth>. So <nemeth class="inline">⠛⠘⠤⠼⠂</nemeth> is in <nemeth class="inline">⠠⠛⠰⠭</nemeth>.</p>
          </article>
          <p id="Qir">We will denote the number of elements in the fixed point set of an element <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> by <nemeth class="inline">⠳⠠⠭⠰⠛⠐⠳</nemeth> and denote the number of elements in the orbit of <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> by <nemeth class="inline">⠳⠈⠠⠕⠰⠭⠐⠳</nemeth>. The next theorem demonstrates the relationship between orbits of an element <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> and the left cosets of <nemeth class="inline">⠠⠛⠰⠭</nemeth> in <i class="one-letter">G</i>.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="sZi">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">14.1.11</span>
              <span class="period">.</span>
            </h6>
            <p id="ulS">Let <i class="one-letter">G</i> be a finite group and <i class="one-letter">X</i> a finite <i class="one-letter">G</i>-set. If <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>, then <nemeth class="inline">⠳⠈⠠⠕⠰⠭⠐⠳⠀⠨⠅⠀⠈⠷⠠⠛⠒⠀⠠⠛⠰⠭⠐⠈⠾</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="YaY">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="dnH">We know that <nemeth class="inline">⠳⠠⠛⠳⠸⠌⠳⠠⠛⠰⠭⠐⠳</nemeth> is the number of left cosets of <nemeth class="inline">⠠⠛⠰⠭</nemeth> in <i class="one-letter">G</i> by Lagrange's Theorem (Theorem 6.2.2). We will define a bijective  map <nemeth class="inline">⠨⠋</nemeth> between the orbit <nemeth class="inline">⠈⠠⠕⠰⠭</nemeth> of <i class="one-letter">X</i> and the set of left cosets <nemeth class="inline">⠈⠠⠇⠰⠠⠛⠰⠰⠭</nemeth> of <nemeth class="inline">⠠⠛⠰⠭</nemeth> in <i class="one-letter">G</i>. Let <nemeth class="inline">⠽⠀⠈⠑⠀⠈⠠⠕⠰⠭</nemeth>. Then there exists a <i class="one-letter">g</i> in <i class="one-letter">G</i> such that <nemeth class="inline">⠛⠭⠀⠨⠅⠀⠽</nemeth>. Define <nemeth class="inline">⠨⠋</nemeth> by <nemeth class="inline">⠋⠷⠽⠾⠀⠨⠅⠀⠛⠠⠛⠰⠭</nemeth>. To show that <nemeth class="inline">⠨⠋</nemeth> is one-to-one, assume that <nemeth class="inline">⠋⠷⠽⠂⠾⠀⠨⠅⠀⠋⠷⠽⠆⠾</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠽⠂⠾⠀⠨⠅⠀⠛⠂⠠⠛⠰⠭⠐⠀⠨⠅⠀⠛⠆⠠⠛⠰⠭⠐⠀⠨⠅⠀⠋⠷⠽⠆⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠛⠂⠭⠀⠨⠅⠀⠽⠂</nemeth> and <nemeth class="inline">⠛⠆⠭⠀⠨⠅⠀⠽⠆</nemeth>. Since <nemeth class="inline">⠛⠂⠠⠛⠰⠭⠐⠀⠨⠅⠀⠛⠆⠠⠛⠰⠭</nemeth>, there exists a <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛⠰⠭</nemeth> such that <nemeth class="inline">⠛⠆⠀⠨⠅⠀⠛⠂⠛</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠽⠆⠀⠨⠅⠀⠛⠆⠭⠀⠨⠅⠀⠛⠂⠛⠭⠀⠨⠅⠀⠛⠂⠭⠀⠨⠅⠀⠽⠂⠆</nemeth>
            </div>
            <p data-braille="continuation">consequently, the map <nemeth class="inline">⠨⠋</nemeth> is  one-to-one. Finally, we must show that the map <nemeth class="inline">⠨⠋</nemeth> is onto. Let <nemeth class="inline">⠛⠠⠛⠰⠭</nemeth> be a left coset. If <nemeth class="inline">⠛⠭⠀⠨⠅⠀⠽</nemeth>, then <nemeth class="inline">⠋⠷⠽⠾⠀⠨⠅⠀⠛⠠⠛⠰⠭</nemeth>.</p>
          </article>
        </section>
        <section class="section" id="TME">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">14.2</span> <span class="title">The Class Equation</span></div>
          <p id="wpA">Let <i class="one-letter">X</i> be a finite <i class="one-letter">G</i>-set and <nemeth class="inline">⠠⠭⠰⠠⠛</nemeth> be the set of fixed points in <i class="one-letter">X</i>; that is,</p>
          <div class="displaymath">
            <nemeth>⠠⠭⠰⠠⠛⠐⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠠⠭⠒⠀⠛⠭⠀⠨⠅⠀⠭⠋⠕⠗⠀⠁⠇⠇⠛⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">. Since the orbits of the action partition <i class="one-letter">X</i>,</p>
          <div class="displaymath">
            <nemeth>⠳⠠⠭⠳⠀⠨⠅⠀⠳⠠⠭⠰⠠⠛⠐⠳⠬⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠅⠣⠝⠻⠳⠈⠠⠕⠰⠭⠰⠰⠊⠰⠐⠳</nemeth>
          </div>
          <p data-braille="continuation">, where <nemeth class="inline">⠭⠰⠅⠐⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐</nemeth> are representatives from the distinct nontrivial orbits of <i class="one-letter">X</i>.</p>
          <p id="cwJ">Now consider the special case in which <i class="one-letter">G</i> acts on itself by conjugation, <nemeth class="inline">⠷⠛⠠⠀⠭⠾⠀⠫⠳⠒⠒⠕⠀⠛⠭⠛⠘⠤⠼⠂</nemeth>. The <dfn class="terminology">center</dfn>  of <i class="one-letter">G</i>,</p>
          <div class="displaymath">
            <nemeth>⠠⠵⠷⠠⠛⠾⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠛⠀⠨⠅⠀⠛⠭⠋⠕⠗⠀⠁⠇⠇⠛⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">, is the set of points that are fixed by conjugation. The nontrivial orbits of the action are called the <dfn class="terminology">conjugacy classes</dfn>  of <i class="one-letter">G</i>. If <nemeth class="inline">⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠅⠐</nemeth> are representatives from each of the nontrivial conjugacy classes of <i class="one-letter">G</i> and <nemeth class="inline">⠳⠈⠠⠕⠰⠭⠂⠐⠳⠀⠨⠅⠀⠝⠂⠠⠀⠄⠄⠄⠀⠠⠀⠳⠈⠠⠕⠰⠭⠰⠰⠅⠰⠐⠳⠀⠨⠅⠀⠝⠰⠅⠐</nemeth>, then</p>
          <div class="displaymath">
            <nemeth>⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠵⠷⠠⠛⠾⠳⠬⠝⠂⠬⠄⠄⠄⠬⠝⠰⠅</nemeth>
          </div>
          <p data-braille="continuation">. The stabilizer subgroups of each of the <nemeth class="inline">⠭⠰⠊</nemeth>'s, <nemeth class="inline">⠠⠉⠷⠭⠰⠊⠐⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠭⠰⠊⠐⠀⠨⠅⠀⠭⠰⠊⠐⠛⠨⠾</nemeth>, are called the <dfn class="terminology">centralizer subgroups</dfn> of the <nemeth class="inline">⠭⠰⠊</nemeth>'s. From Theorem 14.1.11, we obtain the <dfn class="terminology">class equation</dfn>: </p>
          <div class="displaymath">
            <nemeth>⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠵⠷⠠⠛⠾⠳⠬⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠂⠾⠈⠾⠬⠄⠄⠄⠬⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠰⠅⠐⠾⠈⠾</nemeth>
          </div>
          <p data-braille="continuation">. One of the consequences of the class equation is that the order of each conjugacy class must divide the order of <i class="one-letter">G</i>.</p>
          <article class="example example-like" data-braille="example-like" id="aVE">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.2.1</span>
              <span class="period">.</span>
            </h6>
            <p id="Ipx">It is easy to check that  the conjugacy classes in <nemeth class="inline">⠠⠎⠒</nemeth> are the following:</p>
            <div class="displaymath">
              <nemeth>⠨⠷⠷⠼⠂⠾⠨⠾⠠⠀⠨⠷⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾⠠⠀⠨⠷⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠆⠒⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. The class equation is <nemeth class="inline">⠼⠖⠀⠨⠅⠀⠼⠂⠬⠆⠬⠒</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="HcN">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.2.2</span>
              <span class="period">.</span>
            </h6>
            <p id="owG">The center of <nemeth class="inline">⠠⠙⠲</nemeth> is <nemeth class="inline">⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠨⠾</nemeth>, and the conjugacy classes are</p>
            <div class="displaymath">
              <nemeth>⠨⠷⠷⠼⠂⠒⠾⠠⠀⠷⠼⠆⠲⠾⠨⠾⠠⠀⠨⠷⠷⠼⠂⠲⠒⠆⠾⠠⠀⠷⠼⠂⠆⠒⠲⠾⠨⠾⠠⠀⠨⠷⠷⠼⠂⠆⠾⠷⠒⠲⠾⠠⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Thus, the class equation for <nemeth class="inline">⠠⠙⠲</nemeth> is <nemeth class="inline">⠼⠦⠀⠨⠅⠀⠼⠆⠬⠆⠬⠆⠬⠆</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="njW">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">14.2.3</span>
              <span class="period">.</span>
            </h6>
            <p id="UDP">For <nemeth class="inline">⠠⠎⠰⠝</nemeth> it takes a bit of work to find the conjugacy classes. We begin with cycles. Suppose that <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠷⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> is a cycle and let <nemeth class="inline">⠨⠞⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>. By Theorem 6.2.8,</p>
            <div class="displaymath">
              <nemeth>⠞⠨⠎⠞⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠞⠷⠁⠂⠾⠠⠀⠄⠄⠄⠀⠠⠀⠞⠷⠁⠰⠅⠐⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">. Consequently, any two cycles of the same length are conjugate. Now let <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠨⠎⠂⠨⠎⠆⠀⠄⠄⠄⠀⠨⠎⠰⠗⠐</nemeth> be a cycle decomposition, where the length of each cycle <nemeth class="inline">⠨⠎⠰⠊</nemeth> is <nemeth class="inline">⠗⠰⠊</nemeth>. Then <nemeth class="inline">⠨⠎</nemeth> is conjugate to every other <nemeth class="inline">⠨⠞⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> whose cycle decomposition has the same lengths.</p>
            <p id="AKY">The number of conjugate classes in <nemeth class="inline">⠠⠎⠰⠝</nemeth> is the number of ways in which <i class="one-letter">n</i> can be partitioned into sums of positive integers. In the case of <nemeth class="inline">⠠⠎⠒</nemeth> for example, we can partition the integer <nemeth class="inline">⠼⠒</nemeth> into the following three sums:</p>
            <div class="displaymath">
              <nemeth>⠼⠒⠀⠀⠨⠅⠀⠼⠂⠬⠂⠬⠂⠀⠒⠀⠀⠨⠅⠀⠼⠂⠬⠆⠀⠒⠀⠀⠨⠅⠀⠼⠒⠆</nemeth>
            </div>
            <p data-braille="continuation">therefore, there are three conjugacy classes. There are variations to problem of finding the number of such partitions for any positive integer <i class="one-letter">n</i> that are what computer scientists call <dfn class="terminology">NP-complete</dfn>. This effectively means that the problem cannot be solved for a large <i class="one-letter">n</i> because the computations would be too time-consuming for even the largest computer.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="Zgr">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">14.2.4</span>
              <span class="period">.</span>
            </h6>
            <p id="atb">Let <i class="one-letter">G</i> be a group of order <nemeth class="inline">⠏⠘⠝</nemeth> where <i class="one-letter">p</i> is prime. Then <i class="one-letter">G</i> has a nontrivial center.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="Eih">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="JuQ">We apply the class equation</p>
            <div class="displaymath">
              <nemeth>⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠵⠷⠠⠛⠾⠳⠬⠝⠂⠬⠄⠄⠄⠬⠝⠰⠅</nemeth>
            </div>
            <p data-braille="continuation">. Since each <nemeth class="inline">⠝⠰⠊⠐⠀⠨⠂⠀⠼⠂</nemeth> and <nemeth class="inline">⠝⠰⠊⠐⠳⠳⠠⠛⠳</nemeth>, it follows that <i class="one-letter">p</i>  must divide each <nemeth class="inline">⠝⠰⠊</nemeth>. Also, <nemeth class="inline">⠏⠳⠳⠠⠛⠳</nemeth>; hence, <i class="one-letter">p</i> must divide <nemeth class="inline">⠳⠠⠵⠷⠠⠛⠾⠳</nemeth>. Since the identity is always in the center of <i class="one-letter">G</i>, <nemeth class="inline">⠳⠠⠵⠷⠠⠛⠾⠳⠀⠨⠂⠱⠀⠼⠂</nemeth>. Therefore, <nemeth class="inline">⠳⠠⠵⠷⠠⠛⠾⠳⠀⠨⠂⠱⠀⠏</nemeth>, and there exists some <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠵⠷⠠⠛⠾</nemeth> such that <nemeth class="inline">⠛⠀⠌⠨⠅⠀⠼⠂</nemeth>.</p>
          </article>
          <article class="corollary theorem-like" data-braille="theorem-like" id="dQk">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">14.2.5</span>
              <span class="period">.</span>
            </h6>
            <p id="Lkd">Let <i class="one-letter">G</i> be a group of order <nemeth class="inline">⠏⠘⠆</nemeth> where <i class="one-letter">p</i> is prime. Then <i class="one-letter">G</i> is abelian.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="oZj">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="pBZ">By Theorem 14.2.4, <nemeth class="inline">⠳⠠⠵⠷⠠⠛⠾⠳⠀⠨⠅⠀⠏</nemeth> or <nemeth class="inline">⠏⠘⠆</nemeth>. If <nemeth class="inline">⠳⠠⠵⠷⠠⠛⠾⠳⠀⠨⠅⠀⠏⠘⠆</nemeth>, then we are done. Suppose that <nemeth class="inline">⠳⠠⠵⠷⠠⠛⠾⠳⠀⠨⠅⠀⠏</nemeth>. Then <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth> and <nemeth class="inline">⠠⠛⠸⠌⠠⠵⠷⠠⠛⠾</nemeth> both have order <i class="one-letter">p</i> and must both be cyclic groups. Choosing a generator <nemeth class="inline">⠁⠠⠵⠷⠠⠛⠾</nemeth> for <nemeth class="inline">⠠⠛⠸⠌⠠⠵⠷⠠⠛⠾</nemeth>, we can write any element <nemeth class="inline">⠛⠠⠵⠷⠠⠛⠾</nemeth> in the quotient group as <nemeth class="inline">⠁⠘⠍⠐⠠⠵⠷⠠⠛⠾</nemeth> for some integer <i class="one-letter">m</i>; hence, <nemeth class="inline">⠛⠀⠨⠅⠀⠁⠘⠍⠐⠭</nemeth> for some <i class="one-letter">x</i> in the center of <i class="one-letter">G</i>. Similarly, if <nemeth class="inline">⠓⠠⠵⠷⠠⠛⠾⠀⠈⠑⠀⠠⠛⠸⠌⠠⠵⠷⠠⠛⠾</nemeth>, there exists a <i class="one-letter">y</i> in <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth> such that <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠘⠝⠐⠽</nemeth> for some integer <i class="one-letter">n</i>. Since <i class="one-letter">x</i> and <i class="one-letter">y</i> are in the center of <i class="one-letter">G</i>, they commute with all other elements of <i class="one-letter">G</i>; therefore,</p>
            <div class="displaymath">
              <nemeth>⠛⠓⠀⠨⠅⠀⠁⠘⠍⠐⠭⠁⠘⠝⠐⠽⠀⠨⠅⠀⠁⠘⠍⠬⠝⠐⠭⠽⠀⠨⠅⠀⠁⠘⠝⠐⠽⠁⠘⠍⠐⠭⠀⠨⠅⠀⠓⠛</nemeth>
            </div>
            <p data-braille="continuation">, and <i class="one-letter">G</i> must be abelian.</p>
          </article>
        </section>
        <section class="section" id="zTN">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">14.3</span> <span class="title">Burnside's Counting Theorem</span></div>
          <section class="introduction" id="LMG">
            <p id="lCa">Suppose that we wish to color the vertices of a square with two different colors, say black and white. We might suspect that there would be <nemeth class="inline">⠼⠆⠘⠲⠐⠀⠨⠅⠀⠼⠂⠖</nemeth> different colorings. However, some of these colorings are equivalent. If we color the first vertex black and the remaining vertices white, it is the same as coloring the second vertex black and the remaining ones white since we could obtain the second coloring simply by rotating the square <nemeth class="inline">⠼⠔⠴⠘⠘⠨⠡</nemeth> (Figure 14.3.1).</p>
            <figure class="figure figure-like" data-braille="figure-like" id="xQs">
              <div data-braille="image">
                <p>Image: Four squares with vertices labeled clockwise BWWW, WBWW, WWWB, and WWBW beginning in the upper left corner.</p>
                <p>ID: actions-colorings-square</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">14.3.1<span class="period">.</span></span><span class="space"> </span>Equivalent colorings of square</figcaption>
            </figure>
            <p id="RJj">Burnside's Counting Theorem offers a method of computing the number of distinguishable ways in which something can be done. In addition to its geometric applications, the theorem has interesting applications to areas in switching theory and chemistry. The proof of Burnside's Counting Theorem depends on the following lemma.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="xJb">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">14.3.2</span>
                <span class="period">.</span>
              </h6>
              <p id="fcU">Let <i class="one-letter">X</i> be a <i class="one-letter">G</i>-set and suppose that <nemeth class="inline">⠭⠈⠱⠽</nemeth>. Then <nemeth class="inline">⠠⠛⠰⠭</nemeth> is isomorphic to <nemeth class="inline">⠠⠛⠰⠽</nemeth>. In particular, <nemeth class="inline">⠳⠠⠛⠰⠭⠐⠳⠀⠨⠅⠀⠳⠠⠛⠰⠽⠐⠳</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ISa">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="VJi">Let <i class="one-letter">G</i> act on <i class="one-letter">X</i> by <nemeth class="inline">⠷⠛⠠⠀⠭⠾⠀⠫⠳⠒⠒⠕⠀⠛⠡⠭</nemeth>. Since <nemeth class="inline">⠭⠈⠱⠽</nemeth>, there exists a <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠛⠡⠭⠀⠨⠅⠀⠽</nemeth>. Let <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛⠰⠭</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠛⠁⠛⠘⠤⠼⠂⠐⠡⠽⠀⠨⠅⠀⠛⠁⠡⠛⠘⠤⠼⠂⠐⠽⠀⠨⠅⠀⠛⠁⠡⠭⠀⠨⠅⠀⠛⠡⠭⠀⠨⠅⠀⠽</nemeth>
              </div>
              <p data-braille="continuation">, we can define a map <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠰⠭⠐⠀⠫⠕⠀⠠⠛⠰⠽⠐</nemeth> by <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠛⠁⠛⠘⠤⠼⠂</nemeth>. The map <nemeth class="inline">⠨⠋</nemeth> is a homomorphism since</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠁⠃⠾⠀⠨⠅⠀⠛⠁⠃⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠛⠁⠛⠘⠤⠼⠂⠐⠛⠃⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠋⠷⠁⠾⠋⠷⠃⠾</nemeth>
              </div>
              <p data-braille="continuation">. Suppose that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠋⠷⠃⠾</nemeth>. Then <nemeth class="inline">⠛⠁⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠛⠃⠛⠘⠤⠼⠂</nemeth> or <nemeth class="inline">⠁⠀⠨⠅⠀⠃</nemeth>; hence, the map is injective. To show that <nemeth class="inline">⠨⠋</nemeth> is onto, let <i class="one-letter">b</i> be in <nemeth class="inline">⠠⠛⠰⠽</nemeth>; then <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠃⠛</nemeth> is in <nemeth class="inline">⠠⠛⠰⠭</nemeth> since</p>
              <div class="displaymath">
                <nemeth>⠛⠘⠤⠼⠂⠐⠃⠛⠡⠭⠀⠨⠅⠀⠛⠘⠤⠼⠂⠐⠃⠡⠛⠭⠀⠨⠅⠀⠛⠘⠤⠼⠂⠐⠃⠡⠽⠀⠨⠅⠀⠛⠘⠤⠼⠂⠐⠡⠽⠀⠨⠅⠀⠭⠆</nemeth>
              </div>
              <p data-braille="continuation">and <nemeth class="inline">⠋⠷⠛⠘⠤⠼⠂⠐⠃⠛⠾⠀⠨⠅⠀⠃</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="FnA">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">14.3.3</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Burnside.</span>
              </h6>
              <p id="GAk">Let <i class="one-letter">G</i> be a  finite group acting on a set <i class="one-letter">X</i> and let <i class="one-letter">k</i> denote the number of orbits of <i class="one-letter">X</i>. Then</p>
              <div class="displaymath">
                <nemeth>⠅⠀⠨⠅⠀⠹⠂⠌⠳⠠⠛⠳⠼⠐⠨⠠⠎⠩⠛⠀⠈⠑⠀⠠⠛⠻⠳⠠⠭⠰⠛⠐⠳</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="kpq">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="BQr">We look at all the fixed points <i class="one-letter">x</i> of all the elements in <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>; that is, we look at all <i class="one-letter">g</i>'s and all <i class="one-letter">x</i>'s such that <nemeth class="inline">⠛⠭⠀⠨⠅⠀⠭</nemeth>. If viewed in terms of fixed point sets, the number of all <i class="one-letter">g</i>'s fixing <i class="one-letter">x</i>'s is</p>
              <div class="displaymath">
                <nemeth>⠐⠨⠠⠎⠩⠛⠀⠈⠑⠀⠠⠛⠻⠳⠠⠭⠰⠛⠐⠳</nemeth>
              </div>
              <p data-braille="continuation">. However, if viewed in terms of the stabilizer subgroups, this number is</p>
              <div class="displaymath">
                <nemeth>⠐⠨⠠⠎⠩⠭⠀⠈⠑⠀⠠⠭⠻⠳⠠⠛⠰⠭⠐⠳⠆</nemeth>
              </div>
              <p data-braille="continuation">hence, <nemeth class="inline">⠐⠨⠠⠎⠩⠛⠀⠈⠑⠀⠠⠛⠻⠳⠠⠭⠰⠛⠐⠳⠀⠨⠅⠀⠐⠨⠠⠎⠩⠭⠀⠈⠑⠀⠠⠭⠻⠳⠠⠛⠰⠭⠐⠳</nemeth>. By Lemma 14.3.2,</p>
              <div class="displaymath">
                <nemeth>⠐⠨⠠⠎⠩⠽⠀⠈⠑⠀⠈⠠⠕⠰⠭⠐⠻⠳⠠⠛⠰⠽⠐⠳⠀⠨⠅⠀⠳⠈⠠⠕⠰⠭⠐⠳⠡⠳⠠⠛⠰⠭⠐⠳</nemeth>
              </div>
              <p data-braille="continuation">. By Theorem 14.1.11 and Lagrange's Theorem, this expression is equal  to <nemeth class="inline">⠳⠠⠛⠳</nemeth>. Summing over all of the <i class="one-letter">k</i> distinct orbits, we conclude that</p>
              <div class="displaymath">
                <nemeth>⠐⠨⠠⠎⠩⠛⠀⠈⠑⠀⠠⠛⠻⠳⠠⠭⠰⠛⠐⠳⠀⠨⠅⠀⠐⠨⠠⠎⠩⠭⠀⠈⠑⠀⠠⠭⠻⠳⠠⠛⠰⠭⠐⠳⠀⠨⠅⠀⠅⠡⠳⠠⠛⠳</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Trf">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">14.3.4</span>
                <span class="period">.</span>
              </h6>
              <p id="gSh">Let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠨⠾</nemeth> and suppose that <i class="one-letter">G</i> is the permutation group <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠢⠾⠠⠀⠷⠼⠆⠢⠾⠨⠾</nemeth>. The orbits of <i class="one-letter">X</i> are <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠒⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠆⠠⠀⠼⠢⠨⠾</nemeth>, and <nemeth class="inline">⠨⠷⠼⠲⠨⠾</nemeth>. The fixed point sets are</p>
              <div class="displaymath">
                <nemeth>⠠⠭⠰⠷⠂⠾⠀⠀⠨⠅⠀⠠⠭⠀⠠⠭⠰⠷⠂⠒⠾⠀⠀⠨⠅⠀⠨⠷⠼⠆⠠⠀⠼⠲⠠⠀⠼⠢⠨⠾⠀⠠⠭⠰⠷⠂⠒⠾⠷⠆⠢⠾⠀⠀⠨⠅⠀⠨⠷⠼⠲⠨⠾⠀⠠⠭⠰⠷⠆⠢⠾⠀⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠲⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Burnside's Theorem says that</p>
              <div class="displaymath">
                <nemeth>⠅⠀⠨⠅⠀⠹⠂⠌⠳⠠⠛⠳⠼⠐⠨⠠⠎⠩⠛⠀⠈⠑⠀⠠⠛⠻⠳⠠⠭⠰⠛⠐⠳⠀⠨⠅⠀⠹⠂⠌⠲⠼⠷⠢⠬⠒⠬⠂⠬⠒⠾⠀⠨⠅⠀⠼⠒</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="KsS">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">14.3.1</span> <span class="title">A Geometric Example</span></div>
            <p id="XcW">Before we apply Burnside's Theorem to switching-theory problems, let us examine the number of ways in which the vertices of a square can be colored black or white. Notice that we can sometimes obtain equivalent colorings by simply applying a rigid motion to the square. For instance, as we have pointed out, if we color one of the vertices black and the remaining three white, it does not matter which vertex was colored black since a rotation will give an equivalent coloring.</p>
            <p id="Dkf">The  symmetry group of a square, <nemeth class="inline">⠠⠙⠲</nemeth>, is given by the following permutations:</p>
            <div class="displaymath">
              <nemeth>⠀⠀⠷⠂⠾⠀⠀⠀⠷⠂⠒⠾⠀⠀⠀⠷⠆⠲⠾⠀⠀⠀⠷⠂⠲⠒⠆⠾⠀⠀⠀⠷⠂⠆⠒⠲⠾⠀⠀⠀⠷⠂⠆⠾⠷⠒⠲⠾⠀⠀⠀⠷⠂⠲⠾⠷⠆⠒⠾⠀⠀⠀⠷⠂⠒⠾⠷⠆⠲⠾</nemeth>
            </div>
            <p data-braille="continuation">The group <i class="one-letter">G</i> acts on the set of vertices <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠨⠾</nemeth> in the usual manner. We can describe the different colorings by mappings from <i class="one-letter">X</i> into <nemeth class="inline">⠠⠽⠀⠨⠅⠀⠨⠷⠠⠃⠠⠀⠠⠺⠨⠾</nemeth> where <i class="one-letter">B</i> and <i class="one-letter">W</i> represent the colors black and white, respectively. Each map <nemeth class="inline">⠋⠒⠀⠠⠭⠀⠫⠕⠀⠠⠽</nemeth> describes a way to color the corners of the square. Every <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠙⠲</nemeth> induces a permutation <nemeth class="inline">⠐⠨⠎⠣⠈⠱⠻</nemeth> of the possible colorings given by <nemeth class="inline">⠐⠎⠣⠈⠱⠻⠷⠋⠾⠀⠨⠅⠀⠋⠘⠨⠡⠎</nemeth> for <nemeth class="inline">⠋⠒⠀⠠⠭⠀⠫⠕⠀⠠⠽</nemeth>. For example, suppose that <i class="one-letter">f</i> is defined by</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠼⠂⠾⠀⠀⠨⠅⠀⠠⠃⠀⠋⠷⠼⠆⠾⠀⠀⠨⠅⠀⠠⠺⠀⠋⠷⠼⠒⠾⠀⠀⠨⠅⠀⠠⠺⠀⠋⠷⠼⠲⠾⠀⠀⠨⠅⠀⠠⠺</nemeth>
            </div>
            <p data-braille="continuation">and <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾</nemeth>. Then <nemeth class="inline">⠐⠎⠣⠈⠱⠻⠷⠋⠾⠀⠨⠅⠀⠋⠘⠨⠡⠎</nemeth> sends vertex <nemeth class="inline">⠼⠆</nemeth> to <i class="one-letter">B</i> and the remaining vertices to <i class="one-letter">W</i>. The set of all such <nemeth class="inline">⠐⠨⠎⠣⠈⠱⠻</nemeth> is a permutation group <nemeth class="inline">⠐⠠⠛⠣⠈⠱⠻</nemeth> on the set of possible colorings. Let <nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻</nemeth> denote the set of all possible colorings; that is, <nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻</nemeth> is the set of all possible maps from <i class="one-letter">X</i> to <i class="one-letter">Y</i>. Now we must compute the number of <nemeth class="inline">⠐⠠⠛⠣⠈⠱⠻</nemeth>-equivalence classes.</p>
            <ol class="outerlist">
              <li>1. <p id="GlP"><nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠾⠐⠀⠨⠅⠀⠐⠠⠭⠣⠈⠱⠻</nemeth> since the identity fixes every possible coloring. <nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠳⠀⠨⠅⠀⠼⠆⠘⠲⠐⠀⠨⠅⠀⠼⠂⠖</nemeth>.</p></li>
              <li>2. <p id="msY"><nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠆⠒⠲⠾</nemeth> consists of all <nemeth class="inline">⠋⠀⠈⠑⠀⠐⠠⠭⠣⠈⠱⠻</nemeth> such that <i class="one-letter">f</i> is unchanged by the permutation <nemeth class="inline">⠷⠼⠂⠆⠒⠲⠾</nemeth>. In this case <nemeth class="inline">⠋⠷⠼⠂⠾⠀⠨⠅⠀⠋⠷⠼⠆⠾⠀⠨⠅⠀⠋⠷⠼⠒⠾⠀⠨⠅⠀⠋⠷⠼⠲⠾</nemeth>, so that all values of <i class="one-letter">f</i> must be the same; that is, either <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠠⠃</nemeth> or <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠠⠺</nemeth> for every vertex <i class="one-letter">x</i> of the square. So <nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠆⠒⠲⠾⠐⠳⠀⠨⠅⠀⠼⠆</nemeth>.</p></li>
              <li>3. <p id="SAh"><nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠲⠒⠆⠾⠐⠳⠀⠨⠅⠀⠼⠆</nemeth>.</p></li>
              <li>4. <p id="yHq">For <nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠒⠾⠷⠆⠲⠾</nemeth>, <nemeth class="inline">⠋⠷⠼⠂⠾⠀⠨⠅⠀⠋⠷⠼⠒⠾</nemeth> and <nemeth class="inline">⠋⠷⠼⠆⠾⠀⠨⠅⠀⠋⠷⠼⠲⠾</nemeth>. Thus, <nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠒⠾⠷⠆⠲⠾⠐⠳⠀⠨⠅⠀⠼⠆⠘⠆⠐⠀⠨⠅⠀⠼⠲</nemeth>.</p></li>
              <li>5. <p id="eOz"><nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠆⠾⠷⠒⠲⠾⠐⠳⠀⠨⠅⠀⠼⠲</nemeth>.</p></li>
              <li>6. <p id="KVI"><nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠲⠾⠷⠆⠒⠾⠐⠳⠀⠨⠅⠀⠼⠲</nemeth>.</p></li>
              <li>7. <p id="rcR">For <nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠒⠾</nemeth>, <nemeth class="inline">⠋⠷⠼⠂⠾⠀⠨⠅⠀⠋⠷⠼⠒⠾</nemeth> and the other corners can be of any color; hence, <nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠷⠂⠒⠾⠐⠳⠀⠨⠅⠀⠼⠆⠘⠒⠐⠀⠨⠅⠀⠼⠦</nemeth>.</p></li>
              <li>8. <p id="Xka"><nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠷⠆⠲⠾⠐⠳⠀⠨⠅⠀⠼⠦</nemeth>.</p></li>
            </ol>
            <p data-braille="continuation">By Burnside's Theorem, we can conclude that there are exactly</p>
            <div class="displaymath">
              <nemeth>⠹⠂⠌⠦⠼⠷⠆⠘⠲⠐⠬⠆⠘⠂⠐⠬⠆⠘⠆⠐⠬⠆⠘⠂⠐⠬⠆⠘⠆⠐⠬⠆⠘⠆⠐⠬⠆⠘⠒⠐⠬⠆⠘⠒⠐⠾⠀⠨⠅⠀⠼⠖</nemeth>
            </div>
            <p data-braille="continuation">ways to color the vertices of the square.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="Mif">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">14.3.5</span>
                <span class="period">.</span>
              </h6>
              <p id="yVL">Let <i class="one-letter">G</i> be a permutation group of <i class="one-letter">X</i> and <nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻</nemeth> the set of functions from <i class="one-letter">X</i> to <i class="one-letter">Y</i>. Then there exists a permutation group <nemeth class="inline">⠐⠠⠛⠣⠈⠱⠻</nemeth> acting on <nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻</nemeth>, where <nemeth class="inline">⠐⠨⠎⠣⠈⠱⠻⠀⠈⠑⠀⠐⠠⠛⠣⠈⠱⠻</nemeth> is defined by <nemeth class="inline">⠐⠎⠣⠈⠱⠻⠷⠋⠾⠀⠨⠅⠀⠋⠘⠨⠡⠎</nemeth> for <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠋⠀⠈⠑⠀⠐⠠⠭⠣⠈⠱⠻</nemeth>. Furthermore, if <i class="one-letter">n</i> is the number of cycles in the cycle decomposition of <nemeth class="inline">⠨⠎</nemeth>, then <nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠨⠎⠐⠳⠀⠨⠅⠀⠳⠠⠽⠳⠘⠝</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="cKR">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="hXA">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠋⠀⠈⠑⠀⠐⠠⠭⠣⠈⠱⠻</nemeth>. Clearly, <nemeth class="inline">⠋⠘⠨⠡⠨⠎</nemeth> is also in <nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻</nemeth>. Suppose that <i class="one-letter">g</i> is another function from <i class="one-letter">X</i> to <i class="one-letter">Y</i> such that <nemeth class="inline">⠐⠎⠣⠈⠱⠻⠷⠋⠾⠀⠨⠅⠀⠐⠎⠣⠈⠱⠻⠷⠛⠾</nemeth>. Then for each <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>,</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠎⠷⠭⠾⠾⠀⠨⠅⠀⠐⠎⠣⠈⠱⠻⠷⠋⠾⠷⠭⠾⠀⠨⠅⠀⠐⠎⠣⠈⠱⠻⠷⠛⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠎⠷⠭⠾⠾</nemeth>
              </div>
              <p data-braille="continuation">. Since <nemeth class="inline">⠨⠎</nemeth> is a permutation of <i class="one-letter">X</i>, every element <nemeth class="inline">⠭⠄</nemeth> in <i class="one-letter">X</i> is the image of some <i class="one-letter">x</i> in <i class="one-letter">X</i> under <nemeth class="inline">⠨⠎</nemeth>; hence, <i class="one-letter">f</i> and <i class="one-letter">g</i> agree on all elements of <i class="one-letter">X</i>. Therefore, <nemeth class="inline">⠋⠀⠨⠅⠀⠛</nemeth> and <nemeth class="inline">⠐⠨⠎⠣⠈⠱⠻</nemeth> is injective. The map <nemeth class="inline">⠨⠎⠀⠫⠳⠒⠒⠕⠀⠐⠨⠎⠣⠈⠱⠻</nemeth> is onto, since the two sets are the same size.</p>
              <p id="OeJ">Suppose that <nemeth class="inline">⠨⠎</nemeth> is a permutation of <i class="one-letter">X</i> with cycle decomposition <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠨⠎⠂⠨⠎⠆⠀⠄⠄⠄⠀⠨⠎⠰⠝⠐</nemeth>. Any <i class="one-letter">f</i> in <nemeth class="inline">⠐⠠⠭⠣⠈⠱⠻⠰⠨⠎</nemeth> must have the same value on each cycle of <nemeth class="inline">⠨⠎</nemeth>. Since there are <i class="one-letter">n</i> cycles and <nemeth class="inline">⠳⠠⠽⠳</nemeth> possible values for each cycle, <nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠨⠎⠐⠳⠀⠨⠅⠀⠳⠠⠽⠳⠘⠝</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="spo">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">14.3.6</span>
                <span class="period">.</span>
              </h6>
              <p id="MZq">Let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠼⠶⠨⠾</nemeth> and suppose that <nemeth class="inline">⠠⠽⠀⠨⠅⠀⠨⠷⠠⠁⠠⠀⠠⠃⠠⠀⠠⠉⠨⠾</nemeth>. If <i class="one-letter">g</i> is the permutation of <i class="one-letter">X</i> given by <nemeth class="inline">⠷⠼⠂⠒⠾⠷⠆⠲⠢⠾⠀⠨⠅⠀⠷⠼⠂⠒⠾⠷⠆⠲⠢⠾⠷⠖⠾⠷⠶⠾</nemeth>, then <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠲</nemeth>. Any <nemeth class="inline">⠋⠀⠈⠑⠀⠐⠠⠭⠣⠈⠱⠻⠰⠛</nemeth> must have the same value on each cycle in <i class="one-letter">g</i>. There are <nemeth class="inline">⠳⠠⠽⠳⠀⠨⠅⠀⠼⠒</nemeth> such choices for any value, so <nemeth class="inline">⠳⠐⠠⠭⠣⠈⠱⠻⠰⠛⠐⠳⠀⠨⠅⠀⠼⠒⠘⠲⠐⠀⠨⠅⠀⠼⠦⠂</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Ywx">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">14.3.7</span>
                <span class="period">.</span>
              </h6>
              <p id="tgz">Suppose that we wish to color the vertices of a square using four different colors. By Proposition 14.3.5, we can immediately decide that there are</p>
              <div class="displaymath">
                <nemeth>⠹⠂⠌⠦⠼⠷⠲⠘⠲⠐⠬⠲⠘⠂⠐⠬⠲⠘⠆⠐⠬⠲⠘⠂⠐⠬⠲⠘⠆⠐⠬⠲⠘⠆⠐⠬⠲⠘⠒⠐⠬⠲⠘⠒⠐⠾⠀⠨⠅⠀⠼⠢⠢</nemeth>
              </div>
              <p data-braille="continuation">possible ways.</p>
            </article>
          </section>
          <section class="subsection" id="qAb">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">14.3.2</span> <span class="title">Switching Functions</span></div>
            <p id="jro">In switching theory we are concerned with the design of electronic circuits with binary inputs and outputs. The simplest of these circuits is a switching function that has <i class="one-letter">n</i> inputs and a single output (Figure 14.3.8). Large electronic circuits can often be constructed by combining smaller modules of this kind. The inherent problem here is that even for a simple circuit a large number of different switching functions can be constructed. With only four inputs and a single output, we can construct 65,536 different switching functions. However, we can often replace one switching function with another merely by permuting the input leads to the circuit (Figure 14.3.9).</p>
            <figure class="figure figure-like" data-braille="figure-like" id="gwI">
              <div data-braille="image">
                <p>Image: A function, f, represented by a box with inputs, x1, x2, ..., xn, on the left, and an output f(x1, x2, ..., xn) on the right.</p>
                <p>ID: actions-switching-function</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">14.3.8<span class="period">.</span></span><span class="space"> </span>A switching function of <i class="one-letter">n</i> variables</figcaption>
            </figure>
            <p id="Pyx">We define a <dfn class="terminology">switching</dfn> or <dfn class="terminology">Boolean function</dfn>  of <i class="one-letter">n</i> variables to be a function from <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> to <nemeth class="inline">⠸⠠⠵⠆</nemeth>. Since any switching function can have two possible values for each binary <i class="one-letter">n</i>-tuple and there are <nemeth class="inline">⠼⠆⠘⠝</nemeth> binary <i class="one-letter">n</i>-tuples, <nemeth class="inline">⠼⠆⠘⠆⠘⠘⠝</nemeth> switching functions are possible for <i class="one-letter">n</i> variables. In general, allowing permutations of the inputs greatly reduces the number of different kinds of modules that are needed to build a large circuit.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="MDR">
              <div data-braille="image">
                <p>Image: Two functions, f, represented by rectangle. The function on the left is represented by a rectangle that has inputs a and b on the left and output f(a, b).  The function on the right is represented by a rectangle that has inputs a and b with leads switched on the left and an output f(b, a) on the right.</p>
                <p>ID: actions-switching-two-variables</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">14.3.9<span class="period">.</span></span><span class="space"> </span>A switching function of two variables</figcaption>
            </figure>
            <p id="vFG">The possible switching functions  with two input variables <i class="one-letter">a</i> and <i class="one-letter">b</i> are listed in Table 14.3.10. Two switching functions <i class="one-letter">f</i> and <i class="one-letter">g</i> are equivalent if <i class="one-letter">g</i> can be obtained from <i class="one-letter">f</i> by a permutation of the input variables. For example, <nemeth class="inline">⠛⠷⠁⠠⠀⠃⠠⠀⠉⠾⠀⠨⠅⠀⠋⠷⠃⠠⠀⠉⠠⠀⠁⠾</nemeth>. In this  case <nemeth class="inline">⠛⠈⠱⠋</nemeth> via the permutation <nemeth class="inline">⠷⠁⠉⠃⠾</nemeth>. In the case of switching functions of two variables, the permutation <nemeth class="inline">⠷⠁⠃⠾</nemeth> reduces 16 possible switching functions to 12 equivalent functions since</p>
            <div class="displaymath">
              <nemeth>⠋⠆⠀⠈⠱⠋⠲⠀⠋⠒⠀⠈⠱⠋⠢⠀⠋⠂⠴⠀⠈⠱⠋⠂⠆⠀⠋⠂⠂⠀⠈⠱⠋⠂⠒</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <figure class="table table-like" data-braille="figure-like" id="luW">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">14.3.10<span class="period">.</span></span><span class="space"> </span>Switching functions in two variables</figcaption>
              <table>
                <tr>
                  <td class="c m b0 r2 l2 t2 lines" colspan="2">Inputs</td>
                  <td class="c m b0 r2 l0 t2 lines" data-braille="last-cell" colspan="8">Outputs</td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l2 t0 lines"/>
                  <td class="c m b2 r2 l0 t0 lines"/>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠆</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠒</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠲</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠢</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠖</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠋⠶</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r2 l2 t0 lines" colspan="2">Inputs</td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell" colspan="8">Outputs</td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l2 t0 lines"/>
                  <td class="c m b2 r2 l0 t0 lines"/>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠦</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠔</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠂⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠂⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠂⠆</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠂⠒</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠋⠂⠲</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠋⠂⠢</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                </tr>
              </table>
            </figure>
            <p id="bMP">For three input variables there are <nemeth class="inline">⠼⠆⠘⠆⠘⠘⠒⠐⠀⠨⠅⠀⠼⠆⠢⠖</nemeth> possible switching functions; in the case of four variables there are <nemeth class="inline">⠼⠆⠘⠆⠘⠘⠲⠐⠀⠨⠅⠀⠼⠖⠢⠠⠢⠒⠖</nemeth>. The number of equivalence classes is too large to reasonably calculate directly. It is necessary to employ Burnside's Theorem.</p>
            <p id="HTY">Consider a switching function with three possible inputs, <i class="one-letter">a</i>, <i class="one-letter">b</i>, and <i class="one-letter">c</i>. As we have mentioned, two switching functions <i class="one-letter">f</i> and <i class="one-letter">g</i> are equivalent if a permutation of the input variables of <i class="one-letter">f</i> gives <i class="one-letter">g</i>. It is important to notice that a permutation of the switching functions is not simply a permutation of the input values <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. A switching function is a set of output values for the inputs <i class="one-letter">a</i>, <i class="one-letter">b</i>, and <i class="one-letter">c</i>, so when we consider equivalent switching functions, we are permuting <nemeth class="inline">⠼⠆⠘⠒</nemeth> possible outputs, not just three input values. For example, each binary triple <nemeth class="inline">⠷⠁⠠⠀⠃⠠⠀⠉⠾</nemeth> has a specific output associated with it. The permutation <nemeth class="inline">⠷⠁⠉⠃⠾</nemeth> changes outputs as follows:</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠴⠠⠀⠼⠴⠠⠀⠼⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠷⠼⠴⠠⠀⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠴⠠⠀⠼⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠷⠼⠴⠠⠀⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠠⠀⠼⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠷⠼⠂⠠⠀⠼⠴⠠⠀⠼⠴⠾⠀⠀⠀⠣⠄⠄⠄⠀⠷⠼⠂⠠⠀⠼⠂⠠⠀⠼⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠷⠼⠂⠠⠀⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠂⠠⠀⠼⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠷⠼⠂⠠⠀⠼⠂⠠⠀⠼⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="obh">Let <i class="one-letter">X</i> be the set of output values for a switching function in <i class="one-letter">n</i> variables. Then <nemeth class="inline">⠳⠠⠭⠳⠀⠨⠅⠀⠼⠆⠘⠝</nemeth>. We can enumerate these values as follows:</p>
            <div class="displaymath">
              <nemeth>⠷⠼⠴⠠⠀⠄⠄⠄⠀⠠⠀⠼⠴⠠⠀⠼⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠼⠴⠀⠷⠼⠴⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠠⠀⠼⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠼⠂⠀⠷⠼⠴⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠠⠀⠼⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠼⠆⠀⠀⠀⠣⠄⠄⠄⠀⠷⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠠⠀⠼⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠼⠆⠘⠝⠐⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">. Now let us consider a circuit with four input variables and a single output. Suppose that we can permute the leads of any circuit according to the following permutation group:</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠾⠠⠀⠷⠁⠉⠾⠠⠀⠷⠃⠙⠾⠠⠀⠷⠁⠙⠉⠃⠾⠠⠀⠷⠁⠃⠉⠙⠾⠠⠀⠷⠁⠃⠾⠷⠉⠙⠾⠠⠀⠷⠁⠙⠾⠷⠃⠉⠾⠠⠀⠷⠁⠉⠾⠷⠃⠙⠾</nemeth>
            </div>
            <p data-braille="continuation">. The permutations of the four possible input variables induce the permutations of the output values in Table 14.3.11.</p>
            <p id="Uiq">Hence, there are</p>
            <div class="displaymath">
              <nemeth>⠹⠂⠌⠦⠼⠷⠆⠘⠂⠖⠐⠬⠆⠡⠆⠘⠂⠆⠐⠬⠆⠡⠆⠘⠖⠐⠬⠒⠡⠆⠘⠂⠴⠐⠾⠀⠨⠅⠀⠼⠔⠖⠂⠖</nemeth>
            </div>
            <p data-braille="continuation">possible switching functions of four variables under this group of permutations. This number will be even smaller if we consider the full symmetric group on four letters.</p>
            <figure class="table table-like" data-braille="figure-like" id="RCf">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">14.3.11<span class="period">.</span></span><span class="space"> </span>Permutations of switching functions in four variables</figcaption>
              <table>
                <tr>
                  <td class="l m b0 r0 l0 t2 lines">Group</td>
                  <td class="l m b0 r0 l0 t2 lines"/>
                  <td class="l m b0 r0 l0 t2 lines" data-braille="last-cell">Number</td>
                </tr>
                <tr>
                  <td class="l m b2 r0 l0 t0 lines">Permutation</td>
                  <td class="l m b2 r0 l0 t0 lines">Switching Function Permutation</td>
                  <td class="l m b2 r0 l0 t0 lines" data-braille="last-cell">of Cycles</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠁⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠴⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">16</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠁⠉⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠆⠠⠀⠼⠦⠾⠷⠼⠒⠠⠀⠼⠔⠾⠷⠼⠖⠠⠀⠼⠂⠆⠾⠷⠼⠶⠠⠀⠼⠂⠒⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">12</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠃⠙⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠲⠾⠷⠼⠒⠠⠀⠼⠖⠾⠷⠼⠔⠠⠀⠼⠂⠆⠾⠷⠼⠂⠂⠠⠀⠼⠂⠲⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">12</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠁⠙⠉⠃⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠦⠾⠷⠼⠒⠠⠀⠼⠖⠨⠂⠆⠠⠀⠼⠔⠾⠷⠼⠢⠠⠀⠼⠂⠴⠾⠷⠼⠶⠠⠀⠼⠂⠲⠠⠀⠼⠂⠒⠠⠀⠼⠂⠂⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">6</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠁⠃⠉⠙⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠦⠠⠀⠼⠲⠠⠀⠼⠆⠾⠷⠼⠒⠠⠀⠼⠔⠠⠀⠼⠂⠆⠠⠀⠼⠖⠾⠷⠼⠢⠠⠀⠼⠂⠴⠾⠷⠼⠶⠠⠀⠼⠂⠂⠠⠀⠼⠂⠒⠠⠀⠼⠂⠲⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">6</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠁⠃⠾⠷⠉⠙⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠆⠾⠷⠼⠲⠠⠀⠼⠦⠾⠷⠼⠢⠠⠀⠼⠂⠴⠾⠷⠼⠖⠠⠀⠼⠔⠾⠷⠼⠶⠠⠀⠼⠂⠂⠾⠷⠼⠂⠒⠠⠀⠼⠂⠲⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">10</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠁⠙⠾⠷⠃⠉⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠦⠾⠷⠼⠆⠠⠀⠼⠲⠾⠷⠼⠒⠠⠀⠼⠂⠆⠾⠷⠼⠢⠠⠀⠼⠂⠴⠾⠷⠼⠶⠠⠀⠼⠂⠲⠾⠷⠼⠂⠂⠠⠀⠼⠂⠒⠾</nemeth>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">10</td>
                </tr>
                <tr>
                  <td class="l m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠁⠉⠾⠷⠃⠙⠾</nemeth>
                  </td>
                  <td class="l m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠷⠼⠂⠠⠀⠼⠲⠾⠷⠼⠆⠠⠀⠼⠦⠾⠷⠼⠒⠠⠀⠼⠂⠆⠾⠷⠼⠖⠠⠀⠼⠔⠾⠷⠼⠶⠠⠀⠼⠂⠒⠾⠷⠼⠂⠂⠠⠀⠼⠂⠲⠾</nemeth>
                  </td>
                  <td class="l m b2 r0 l0 t0 lines" data-braille="last-cell">10</td>
                </tr>
              </table>
            </figure>
            <article class="paragraphs" id="Hym">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="Apz">Sage has many commands related to conjugacy, which is a group action. It also has commands for orbits and stabilizers of permutation groups. In the supplement, we illustrate the automorphism group of a (combinatorial) graph as another example of a group action on the vertex set of the graph.</p>
            </article>
          </section>
          <section class="subsection" id="WHk">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">14.3.3</span> <span class="title">Historical Note</span></div>
            <p id="sLa">William Burnside  was born in London in 1852. He attended Cambridge University from 1871 to 1875 and won the Smith's Prize in his last year. After his graduation he lectured at Cambridge. He was made a member of the Royal Society in 1893. Burnside wrote approximately 150 papers on topics in applied mathematics, differential geometry, and probability, but his most famous contributions were in group theory. Several of Burnside's conjectures have stimulated research to this day. One such conjecture was that every group of odd order is solvable; that is, for a group <i class="one-letter">G</i> of odd order, there exists a sequence of subgroups</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠂⠀⠸⠨⠂⠀⠠⠓⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">such that <nemeth class="inline">⠠⠓⠰⠊</nemeth> is normal in <nemeth class="inline">⠠⠓⠰⠊⠬⠂</nemeth> and <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠸⠌⠠⠓⠰⠊</nemeth> is abelian. This conjecture was finally proven by W. Feit  and J. Thompson  in 1963. Burnside's <span class="booktitle">The Theory of Groups of Finite Order</span>, published in 1897, was one of the first books to treat groups in a modern context as opposed to permutation groups. The second edition, published in 1911, is still a classic.</p>
          </section>
        </section>
        <section class="reading-questions" id="MtJ">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">14.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="dcZ">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="hMS">Give an informal description of a group action.</p>
          </article>
          <article class="exercise exercise-like" id="Jki">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="NUb">Describe the class equation.</p>
          </article>
          <article class="exercise exercise-like" id="prr">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="ubk">What are the groups of order <nemeth class="inline">⠼⠲⠔</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="VyA">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="ait">How many switching functions are there with 5 inputs? (Give both a simple expression and the total number as a single integer.)</p>
          </article>
          <article class="exercise exercise-like" id="BFJ">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="GpC">The “Historical Note” mentions the proof of Burnside's Conjecture. How long was the proof?</p>
          </article>
        </section>
        <section class="exercises" id="PcL">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">14.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="EDG">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="qlT">Examples 14.1.1–14.1.5 in the first section each describe an action of a group <i class="one-letter">G</i> on a set <i class="one-letter">X</i>, which will give rise to the equivalence relation defined by <i class="one-letter">G</i>-equivalence. For each example, compute the equivalence classes of the equivalence relation, the <i class="one-letter">G</i>-<dfn class="terminology">equivalence classes</dfn>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="BnB"><span class="type">Hint</span>:<p id="nMM">Example 14.1.1: <nemeth class="inline">⠼⠴</nemeth>, <nemeth class="inline">⠸⠠⠗⠘⠆⠐⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠴⠨⠾</nemeth>. Example 14.1.2: <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="kKP">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="Wtc">Compute all <nemeth class="inline">⠠⠭⠰⠛</nemeth> and all <nemeth class="inline">⠠⠛⠰⠭</nemeth> for each of the following permutation groups.</p>
            <ol class="outerlist">
              <li>a. <p id="Drj"><nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠎⠒⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠆⠒⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth></p></li>
              <li>b. <p id="jys"><nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠖⠨⠾</nemeth>, <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠠⠀⠷⠼⠒⠲⠢⠾⠠⠀⠷⠼⠒⠢⠲⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠲⠢⠾⠠⠀⠷⠼⠂⠆⠾⠷⠒⠢⠲⠾⠨⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="NBT"><span class="type">Hint</span>:<p id="TTV">(a) <nemeth class="inline">⠠⠭⠰⠷⠂⠾⠐⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠭⠰⠷⠂⠆⠾⠐⠀⠨⠅⠀⠨⠷⠼⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠭⠰⠷⠂⠒⠾⠐⠀⠨⠅⠀⠨⠷⠼⠆⠨⠾</nemeth>, <nemeth class="inline">⠠⠭⠰⠷⠆⠒⠾⠐⠀⠨⠅⠀⠨⠷⠼⠂⠨⠾</nemeth>, <nemeth class="inline">⠠⠭⠰⠷⠂⠆⠒⠾⠐⠀⠨⠅⠀⠠⠭⠰⠷⠂⠒⠆⠾⠐⠀⠨⠅⠀⠸⠴</nemeth>. <nemeth class="inline">⠠⠛⠂⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠆⠒⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠛⠆⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠒⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠛⠒⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="QRY">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="CAl">Compute the <i class="one-letter">G</i>-equivalence classes of <i class="one-letter">X</i> for each of the <i class="one-letter">G</i>-sets in Exercise 14.5.2. For each <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> verify that <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠳⠈⠠⠕⠰⠭⠐⠳⠡⠳⠠⠛⠰⠭⠐⠳</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ZQl"><span class="type">Hint</span>:<p id="Abe">(a) <nemeth class="inline">⠈⠠⠕⠂⠀⠨⠅⠀⠈⠠⠕⠆⠀⠨⠅⠀⠈⠠⠕⠒⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="wZh">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="iHu">Let <i class="one-letter">G</i> be the additive group of real numbers. Let the action of <nemeth class="inline">⠨⠹⠀⠈⠑⠀⠠⠛</nemeth> on the real plane <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> be given by rotating the plane counterclockwise about the origin through <nemeth class="inline">⠨⠹</nemeth> radians. Let <i class="one-letter">P</i> be a point on the plane other than the origin.</p>
            <ol class="outerlist">
              <li>a. <p id="oil">Show that <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> is a <i class="one-letter">G</i>-set.</p></li>
              <li>b. <p id="Upu">Describe geometrically the orbit containing <i class="one-letter">P</i>.</p></li>
              <li>c. <p id="AwD">Find the group <nemeth class="inline">⠠⠛⠰⠠⠏</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="dgq">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="OOD">Let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠁⠲</nemeth> and suppose that <i class="one-letter">G</i> acts on itself by conjugation; that is, <nemeth class="inline">⠷⠛⠠⠀⠓⠾⠀⠫⠳⠒⠒⠕⠀⠛⠓⠛⠘⠤⠼⠂</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="YZn">Determine the conjugacy classes (orbits) of each element of <i class="one-letter">G</i>.</p></li>
              <li>b. <p id="Fgw">Determine all of the isotropy subgroups for each element of <i class="one-letter">G</i>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Jnz">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="uVM">Find the conjugacy classes and the class equation for each of the following groups.</p>
            <ol class="outerlist">
              <li>a. <p id="xBX"><nemeth class="inline">⠠⠎⠲</nemeth></p></li>
              <li>b. <p id="dJg"><nemeth class="inline">⠠⠙⠢</nemeth></p></li>
              <li>c. <p id="JQp"><nemeth class="inline">⠸⠠⠵⠔</nemeth></p></li>
              <li>d. <p id="pXy"><nemeth class="inline">⠠⠟⠦</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ysV"><span class="type">Hint</span>:<p id="gin">The conjugacy classes for <nemeth class="inline">⠠⠎⠲</nemeth> are</p><div class="displaymath"><nemeth>⠈⠠⠕⠰⠷⠂⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠨⠾⠠⠀⠈⠠⠕⠰⠷⠂⠆⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠂⠲⠾⠠⠀⠷⠼⠆⠒⠾⠠⠀⠷⠼⠆⠲⠾⠠⠀⠷⠼⠒⠲⠾⠨⠾⠠⠀⠈⠠⠕⠰⠷⠂⠆⠾⠷⠒⠲⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠾⠷⠒⠲⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠠⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾⠨⠾⠠⠀⠈⠠⠕⠰⠷⠂⠆⠒⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠠⠀⠷⠼⠂⠆⠲⠾⠠⠀⠷⠼⠂⠲⠆⠾⠠⠀⠷⠼⠂⠒⠲⠾⠠⠀⠷⠼⠂⠲⠒⠾⠠⠀⠷⠼⠆⠒⠲⠾⠠⠀⠷⠼⠆⠲⠒⠾⠨⠾⠠⠀⠈⠠⠕⠰⠷⠂⠆⠒⠲⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠒⠲⠾⠠⠀⠷⠼⠂⠆⠲⠒⠾⠠⠀⠷⠼⠂⠒⠆⠲⠾⠠⠀⠷⠼⠂⠒⠲⠆⠾⠠⠀⠷⠼⠂⠲⠆⠒⠾⠠⠀⠷⠼⠂⠲⠒⠆⠾⠨⠾</nemeth></div><p data-braille="continuation">. The class equation is <nemeth class="inline">⠼⠂⠬⠒⠬⠖⠬⠖⠬⠦⠀⠨⠅⠀⠼⠆⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="puI">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="bcV">Write the class equation for <nemeth class="inline">⠠⠎⠢</nemeth> and for <nemeth class="inline">⠠⠁⠢</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="VBR">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="Hke">If a square remains fixed in the plane, how many different ways can the corners of the square be colored if three colors are used?</p>
            <div class="solutions">
              <div class="hint solution-like" id="qOw"><span class="type">Hint</span>:<p id="Mpw"><nemeth class="inline">⠷⠼⠒⠘⠲⠐⠬⠒⠘⠂⠐⠬⠒⠘⠆⠐⠬⠒⠘⠂⠐⠬⠒⠘⠆⠐⠬⠒⠘⠆⠐⠬⠒⠘⠒⠐⠬⠒⠘⠒⠐⠾⠸⠌⠦⠀⠨⠅⠀⠼⠆⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="BJa">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="nrn">How many ways can the vertices of an equilateral triangle be colored using three different colors?</p>
          </article>
          <article class="exercise exercise-like" id="hQj">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="Tyw">Find the number of ways a six-sided die can be constructed if each side is marked differently with <nemeth class="inline">⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠖</nemeth> dots.</p>
          </article>
          <article class="exercise exercise-like" id="NXs">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="zFF">Up to a rotation, how many ways can the faces of a cube be colored with three different colors?</p>
            <div class="solutions">
              <div class="hint solution-like" id="Prg"><span class="type">Hint</span>:<p id="swF">The group of rigid motions of the cube can be described by the allowable permutations of the six faces and is isomorphic to <nemeth class="inline">⠠⠎⠲</nemeth>. There are the identity cycle, 6 permutations with the structure <nemeth class="inline">⠷⠁⠃⠉⠙⠾</nemeth> that correspond to the quarter turns, 3 permutations with the structure <nemeth class="inline">⠷⠁⠃⠾⠷⠉⠙⠾</nemeth> that correspond to the half turns, 6 permutations with the structure <nemeth class="inline">⠷⠁⠃⠾⠷⠉⠙⠾⠷⠑⠋⠾</nemeth> that correspond to rotating the cube about the centers of opposite edges, and 8 permutations with the structure <nemeth class="inline">⠷⠁⠃⠉⠾⠷⠙⠑⠋⠾</nemeth> that correspond to rotating the cube about opposite vertices.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ueB">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="fMO">Consider <nemeth class="inline">⠼⠂⠆</nemeth> straight wires of equal lengths with their ends soldered together to form the edges of a cube. Either silver or copper wire can be used for each edge. How many different ways can the cube be constructed?</p>
          </article>
          <article class="exercise exercise-like" id="alK">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="LTX">Suppose that we color each of the eight corners of a cube. Using three different colors, how many ways can the corners be colored up to a rotation of the cube?</p>
          </article>
          <article class="exercise exercise-like" id="GsT">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="sbg">Each of the faces of a regular tetrahedron can be painted either red or white. Up to a rotation, how many different ways can the tetrahedron be painted?</p>
          </article>
          <article class="exercise exercise-like" id="mAc">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="Yip">Suppose that the vertices of a regular hexagon are to be colored either red or white. How many ways can this be done up to a symmetry of the hexagon?</p>
            <div class="solutions">
              <div class="hint solution-like" id="UaZ"><span class="type">Hint</span>:<p id="YDO"><nemeth class="inline">⠷⠼⠂⠡⠆⠘⠖⠐⠬⠒⠡⠆⠘⠲⠐⠬⠲⠡⠆⠘⠒⠐⠬⠆⠡⠆⠘⠆⠐⠬⠆⠡⠆⠘⠂⠐⠾⠸⠌⠂⠆⠀⠨⠅⠀⠼⠂⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="SHl">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="Epy">A molecule of benzene is made up of six carbon atoms and six hydrogen atoms, linked together in a hexagonal shape as in Figure 14.5.1.</p>
            <ol class="outerlist">
              <li>a. <p id="uHr">How many different compounds can be formed by replacing one or more of the hydrogen atoms with a chlorine atom?</p></li>
              <li>b. <p id="aOA">Find the number of different chemical compounds that can be formed by replacing three of the six hydrogen atoms in a benzene ring with a <nemeth class="inline">⠠⠉⠠⠓⠒</nemeth> radical.</p></li>
            </ol>
            <figure class="figure figure-like" data-braille="figure-like" id="kwH">
              <div data-braille="image">
                <p>Image: A hexagon with hydrogen atoms, H, attached at each vertex.</p>
                <p>ID: exercise-benzene</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">14.5.1<span class="period">.</span></span><span class="space"> </span>A benzene ring</figcaption>
            </figure>
          </article>
          <article class="exercise exercise-like" id="yOu">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="QDQ">How many equivalence classes of switching functions are there if the input variables <nemeth class="inline">⠭⠂</nemeth>, <nemeth class="inline">⠭⠆</nemeth>, and <nemeth class="inline">⠭⠒</nemeth> can be permuted by any permutation in <nemeth class="inline">⠠⠎⠒</nemeth>? What if the input variables <nemeth class="inline">⠭⠂</nemeth>, <nemeth class="inline">⠭⠆</nemeth>, <nemeth class="inline">⠭⠒</nemeth>, and <nemeth class="inline">⠭⠲</nemeth> can be permuted by any permutation in <nemeth class="inline">⠠⠎⠲</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="MwA"><span class="type">Hint</span>:<p id="EKX"><nemeth class="inline">⠷⠼⠂⠡⠆⠘⠦⠐⠬⠒⠡⠆⠘⠖⠐⠬⠆⠡⠆⠘⠲⠐⠾⠸⠌⠖⠀⠨⠅⠀⠼⠦⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="eVD">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="wKZ">How many equivalence classes of switching functions are there if the input variables <nemeth class="inline">⠭⠂</nemeth>, <nemeth class="inline">⠭⠆</nemeth>, <nemeth class="inline">⠭⠒</nemeth>, and <nemeth class="inline">⠭⠲</nemeth> can be permuted by any permutation in the subgroup of <nemeth class="inline">⠠⠎⠲</nemeth> generated by the permutation <nemeth class="inline">⠷⠭⠂⠭⠆⠭⠒⠭⠲⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="LcM">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="cSi">A striped necktie has <nemeth class="inline">⠼⠂⠆</nemeth> bands of color. Each band can be colored by one of four possible colors. How many possible different-colored neckties are there?</p>
          </article>
          <article class="exercise exercise-like" id="rjV">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="IZr">A group acts <dfn class="terminology">faithfully</dfn> on a <i class="one-letter">G</i>-set <i class="one-letter">X</i> if the identity is the only element of <i class="one-letter">G</i> that leaves every element of <i class="one-letter">X</i> fixed. Show that <i class="one-letter">G</i> acts faithfully on <i class="one-letter">X</i> if and only if no two distinct elements of <i class="one-letter">G</i> have the same action on each element of <i class="one-letter">X</i>.</p>
          </article>
          <article class="exercise exercise-like" id="Xre">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="pgA">Let <i class="one-letter">p</i> be prime. Show that the number of different abelian groups of order <nemeth class="inline">⠏⠘⠝</nemeth> (up to isomorphism) is the same as the number of conjugacy classes in <nemeth class="inline">⠠⠎⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Dyn">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="VnJ">Let <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>. Show that for any <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, <nemeth class="inline">⠛⠠⠉⠷⠁⠾⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠉⠷⠛⠁⠛⠘⠤⠼⠂⠐⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="xnC"><span class="type">Hint</span>:<p id="kSg">Use the fact that <nemeth class="inline">⠭⠀⠈⠑⠀⠛⠠⠉⠷⠁⠾⠛⠘⠤⠼⠂</nemeth> if and only if <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠭⠛⠀⠈⠑⠀⠠⠉⠷⠁⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="jFw">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="BuS">Let <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠏⠘⠝</nemeth> be a nonabelian group for <i class="one-letter">p</i> prime. Prove that <nemeth class="inline">⠳⠠⠵⠷⠠⠛⠾⠳⠀⠐⠅⠀⠏⠘⠝⠤⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="PMF">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="hCb">Let <i class="one-letter">G</i> be a group with order <nemeth class="inline">⠏⠘⠝</nemeth> where <i class="one-letter">p</i> is prime and <i class="one-letter">X</i> a finite <i class="one-letter">G</i>-set. If <nemeth class="inline">⠠⠭⠰⠠⠛⠐⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠠⠭⠒⠀⠛⠭⠀⠨⠅⠀⠭⠋⠕⠗⠀⠁⠇⠇⠛⠀⠈⠑⠀⠠⠛⠨⠾</nemeth> is the set of elements in <i class="one-letter">X</i> fixed by the group action, then prove that <nemeth class="inline">⠳⠠⠭⠳⠀⠸⠇⠀⠳⠠⠭⠰⠠⠛⠐⠳⠷⠍⠕⠙⠀⠏⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="vTO">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="NJk">If <i class="one-letter">G</i> is a group of order <nemeth class="inline">⠏⠘⠝</nemeth>, where <i class="one-letter">p</i> is prime and <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>, show that <i class="one-letter">G</i> must have a proper subgroup of order <i class="one-letter">p</i>. If <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>, is it true that <i class="one-letter">G</i> will have a proper subgroup of order <nemeth class="inline">⠏⠘⠆</nemeth>?</p>
          </article>
        </section>
        <section class="exercises" id="vjU">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">14.6</span> <span class="title">Programming Exercise</span></div>
          <article class="exercise exercise-like" id="caX">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="tQt">Write a program to compute the number of conjugacy classes in <nemeth class="inline">⠠⠎⠰⠝</nemeth>. What is the largest <i class="one-letter">n</i> for which your program will work?</p>
          </article>
        </section>
        <section class="references" id="JDL">
          <div class="none"><span class="type">References</span> <span class="codenumber">14.7</span> <span class="title">References and Suggested Reading</span></div>
          <article class="bib" id="pKU"><div class="bibitem">[1]</div>  <div class="bibentry"> De Bruijin, N. G. “Pólya's Theory of Counting,” in <i>Applied Combinatorial Mathematics</i>, Beckenbach, E. F., ed. Wiley, New York, 1964.</div></article>
          <article class="bib" id="VSd"><div class="bibitem">[2]</div>  <div class="bibentry"> Eidswick, J. A. “Cubelike Puzzles—What Are They and How Do You Solve Them?” <i>American Mathematical Monthly</i> <b>93</b> (1986), 157–76.</div></article>
          <article class="bib" id="BZm"><div class="bibitem">[3]</div>  <div class="bibentry"> Harary, F., Palmer, E. M., and Robinson, R. W. “Pólya's Contributions to Chemical Enumeration,” in <i>Chemical Applications of Graph Theory</i>, Balaban, A. T., ed. Academic Press, London, 1976.</div></article>
          <article class="bib" id="igv"><div class="bibitem">[4]</div>  <div class="bibentry"> Gårding, L. and Tambour, T. <i>Algebra for Computer Science</i>. Springer-Verlag, New York, 1988.</div></article>
          <article class="bib" id="OnE"><div class="bibitem">[5]</div>  <div class="bibentry"> Laufer, H. B. <i>Discrete Mathematics and Applied Modern Algebra</i>. PWS-Kent, Boston, 1984.</div></article>
          <article class="bib" id="uuN"><div class="bibitem">[6]</div>  <div class="bibentry">Pólya, G. and Read, R. C. <i>Combinatorial Enumeration of Groups, Graphs, and Chemical Compounds</i>. Springer-Verlag, New York, 1985.</div></article>
          <article class="bib" id="aBW"><div class="bibitem">[7]</div>  <div class="bibentry"> Shapiro, L. W. “Finite Groups Acting on Sets with Applications,” <i>Mathematics Magazine</i>, May–June 1973, 136–47.</div></article>
        </section>
        <section class="section" id="gaW">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">14.8</span> <span class="title">Sage</span></div>
          <section class="introduction" id="rTP">
            <p id="dXB">Groups can be realized in many ways, such as as sets of permutations, as sets of matrices, or as sets of abstract symbols related by certain rules (“presentations”) and in myriad other ways. We have concentrated on permutation groups because of their concrete feel, with elements written as functions, and because of their thorough implementation in Sage. Group actions are of great interest when the set they act on is the group itself, and group actions will figure prominently in the proofs of the main results of the next chapter. However, any time we have a group action on a set, we can view that group as a permutation group on the elements of the set. So permutation groups are an area of group theory of independent interest, with its own definitions and theorems.</p>
            <p id="KeK">We will describe Sage's commands applicable when a group action arises naturally via conjugation, and then move into the more general situation in a more general application.</p>
          </section>
          <section class="subsection" id="COt">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">14.8.1</span> <span class="title">Conjugation as a Group Action</span></div>
            <p id="YSj">We might think we need to be careful how Sage defines conjugation (<nemeth class="inline">⠛⠭⠛⠘⠤⠼⠂</nemeth> versus <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠭⠛</nemeth>) and the difference between Sage and the text on the order of products. However, if you look at the definition of the center and centralizer subgroups you can see that any difference in ordering is irrelevant. Here are the group action commands for the particular action that is conjugation of the elements of the group.</p>
            <p id="EZs">Sage has a permutation group method <code class="code-inline tex2jax_ignore">.center()</code> which returns the subgroup of fixed points. The permutation group method, <code class="code-inline tex2jax_ignore">.centralizer(g)</code>, returns a subgroup that is the stabilizer of the group element <code class="code-inline tex2jax_ignore">g</code>. Finally, the orbits are given by conjugacy classes, but Sage will not flood you with the full conjugacy classes and instead gives back a list of one element per conjugacy class, the representatives, via the permutation group method <code class="code-inline tex2jax_ignore">.conjugacy_classes_representatives()</code>. You can manually reconstruct a conjugacy class from a representative, as we do in the example below.</p>
            <p id="lgB">Here is an example of the above commands in action. Notice that an abelian group would be a bad choice for this example.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D = DihedralGroup(8)
C = D.center(); C
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by [(1,5)(2,6)(3,7)(4,8)]
of (Dihedral group of order 16 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,5)(2,6)(3,7)(4,8)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = D("(1,2)(3,8)(4,7)(5,6)")
C1 = D.centralizer(a); C1.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,2)(3,8)(4,7)(5,6), (1,5)(2,6)(3,7)(4,8), (1,6)(2,5)(3,4)(7,8)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = D("(1,2,3,4,5,6,7,8)")
C2 = D.centralizer(b); C2.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">CCR = D.conjugacy_classes_representatives(); CCR
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (2,8)(3,7)(4,6), (1,2)(3,8)(4,7)(5,6), (1,2,3,4,5,6,7,8),
 (1,3,5,7)(2,4,6,8), (1,4,7,2,5,8,3,6), (1,5)(2,6)(3,7)(4,8)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r = CCR[2]; r
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,2)(3,8)(4,7)(5,6)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">conj = []
x = [conj.append(g^-1*r*g) for g in D if not g^-1*r*g in conj]
conj
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(1,2)(3,8)(4,7)(5,6),
 (1,6)(2,5)(3,4)(7,8),
 (1,8)(2,7)(3,6)(4,5),
 (1,4)(2,3)(5,8)(6,7)]
</div>
            </article>
            <p id="RnK">Notice that in the one conjugacy class constructed all the elements have the same cycle structure, which is no accident. Notice too that <code class="code-inline tex2jax_ignore">rep</code> and <code class="code-inline tex2jax_ignore">a</code> are the same element, and the product of the order of the centralizer (<nemeth class="inline">⠼⠲</nemeth>) and the size of the conjugacy class (<nemeth class="inline">⠼⠲</nemeth>) equals the order of the group (<nemeth class="inline">⠼⠂⠖</nemeth>), which is a variant of the conclusion of Theorem 14.1.11.</p>
            <p id="xuT">Verify that the following is a demonstration of the class equation in the special case when the action is conjugation, but would be valid for any group, rather than just <code class="code-inline tex2jax_ignore">D</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sizes = [D.order()/D.centralizer(g).order()
             for g in D.conjugacy_classes_representatives()]
sizes
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 4, 4, 2, 2, 2, 1]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.order() == sum(sizes)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
          </section>
          <section class="subsection" id="iVC">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">14.8.2</span> <span class="title">Graph Automorphisms</span></div>
            <p id="dCc">As mentioned, group actions can be even more interesting when the set they act on is different from the group itself. One class of examples is the group of symmetries of a geometric solid, where the objects in the set are the vertices of the object, or perhaps some other aspect such as edges, faces or diagonals. In this case, the group is all those permutations that move the solid but leave it filling the same space before the motion (“rigid motions”).</p>
            <p id="JJl">In this section we will examine something very similar. A <dfn class="terminology">graph</dfn> is a mathematical object, consisting of vertices and edges, but the only structure is whether or not any given pair of vertices are joined by an edge or not. The group consists of permutations of vertices that preserve the structure, that is, permutations of vertices that take edges to edges and non-edges to non-edges. It is very similar to a symmetry group, but there is no notion of any geometric relationships being preserved.</p>
            <p id="pQu">Here is an example. You will need to run the first compute cell to define the graph and get a nice graphic representation.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q = graphs.CubeGraph(3)
Q.plot(layout='spring')
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A = Q.automorphism_group()
A.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">48
</div>
            </article>
            <p id="VXD">Your plot should look like the vertices and edges of a cube, but may not quite look regular, which is fine, since the geometry is not relevant. Vertices are labeled with strings of three binary digits, <nemeth class="inline">⠼⠴</nemeth> or <nemeth class="inline">⠼⠂</nemeth>, and any two vertices are connected by an edge if their strings differ in exactly one location. We might expect the group of symmetries to have order <nemeth class="inline">⠼⠆⠲</nemeth>, rather than order <nemeth class="inline">⠼⠲⠦</nemeth>, given its resemblance to a cube (in appearance and in name). However, when not restricted to rigid motions, we have new permutations that preserve edges. One in particular is to interchange two “opposite faces.” Locate two <nemeth class="inline">⠼⠲</nemeth>-cycles opposite of each other, listed in the same order: <nemeth class="inline">⠼⠴⠴⠴⠠⠀⠼⠴⠂⠴⠠⠀⠼⠂⠂⠴⠠⠀⠼⠂⠴⠴</nemeth> and <nemeth class="inline">⠼⠴⠴⠂⠠⠀⠼⠴⠂⠂⠠⠀⠼⠂⠂⠂⠠⠀⠼⠂⠴⠂</nemeth>. Notice that each cycle looks very similar, but all the vertices of the first end in a zero and the second cycle has vertices ending in a one.</p>
            <p id="CeM">We can create explicitly the permutation that interchanges these two opposite faces, using a text version of the permutation in cycle notation.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = A("('000','001')('010','011')('110','111')('100','101')")
a in A
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="ilV">We can use this group to illustrate the relevant Sage commands for group actions.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.orbits()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[['000', '001', '010', '100', '011', '101', '110', '111']]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">len(A.orbits()[0])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">8
</div>
            </article>
            <p id="Ote">So this action has only one (big) orbit. This implies that every vertex is “like” any other. When a permutation group behaves this way, we say the group is <dfn class="terminology">transitive</dfn>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.is_transitive()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="uAn">If every vertex is “the same” we can compute the stabilizer of any vertex, since they will all be isomorphic. Because vertex <nemeth class="inline">⠼⠴⠴⠴</nemeth> is the simplest in some sense, we compute its stabilizer.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S = A.stabilizer('000')
S.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(),
 ('001','010','100')('011','110','101'),
 ('001','100','010')('011','101','110'),
 ('010','100')('011','101'),
 ('001','010')('101','110'),
 ('001','100')('011','110')]
</div>
            </article>
            <p id="aHw">That <code class="code-inline tex2jax_ignore">S</code> has <nemeth class="inline">⠼⠖</nemeth> elements is no surprise, since the group has order <nemeth class="inline">⠼⠲⠦</nemeth> and the size of the lone orbit is <nemeth class="inline">⠼⠦</nemeth>. But we can go one step further. The three vertices of the graph attached directly to <nemeth class="inline">⠼⠴⠴⠴</nemeth> are <nemeth class="inline">⠼⠂⠴⠴</nemeth>, <nemeth class="inline">⠼⠴⠂⠴</nemeth>, <nemeth class="inline">⠼⠴⠴⠂</nemeth>. Any automorphism of the graph that fixes <nemeth class="inline">⠼⠴⠴⠴</nemeth> must then permute the three adjacent vertices. There are <nemeth class="inline">⠼⠒⠖⠀⠀⠨⠅⠀⠼⠖</nemeth> possible ways to do this, and you can check that each appears in one of the six elements of the stabilizer. So we can understand a transitive group by considering the smaller stabilizer, and in this case we can see that each element of the stabilizer is determined by how it permutes the neighbors of the stabilized vertex.</p>
            <p id="GOF">Transitive groups are both unusual and important. To contrast, here is a graph automorphism group that is far from transitive (without being trivial). A path is a graph that has all of its vertices in a line. Run the first compute cell to see a path on <nemeth class="inline">⠼⠂⠂</nemeth> vertices.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P = graphs.PathGraph(11)
P.plot()
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A = P.automorphism_group()
A.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (0,10)(1,9)(2,8)(3,7)(4,6)]
</div>
            </article>
            <p id="mVO">The automorphism group is the trivial identity automorphism (always) and an order <nemeth class="inline">⠼⠆</nemeth> permutation that “flips” the path end-to-end. The group is far from transitive and there are many orbits.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.is_transitive()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.orbits()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[0, 10], [1, 9], [2, 8], [3, 7], [4, 6], [5]]
</div>
            </article>
            <p id="TcX">Most of the stabilizers are trivial, with one exception. As subgroups of a group of order <nemeth class="inline">⠼⠆</nemeth>, there really are not too many options.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.stabilizer(2).list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[()]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.stabilizer(5).list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (0,10)(1,9)(2,8)(3,7)(4,6)]
</div>
            </article>
            <p id="zkg">How would this final example have been different if we had used a path on <nemeth class="inline">⠼⠂⠴</nemeth> vertices?</p>
            <p id="frp"><em class="emphasis">NOTE</em>: There was once a small bug with stabilizers being created as subgroups of symmetric groups on fewer symbols than the correct number. This is fixed in Sage 4.8 and newer. Note the correct output below, and you can check your installation by running these commands. If you do not see the singleton <code class="code-inline tex2jax_ignore">[4]</code> in your output, you should definitely update your copy of Sage.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(4)
S = G.stabilizer(4)
S.orbits()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[1, 2, 3], [4]]
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="brd">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">14.9</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="Iig">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ZXC">Construct the Higman-Sims graph with the command <code class="code-inline tex2jax_ignore">graphs.HigmanSimsGraph()</code>. Then construct the automorphism group and determine the order of the one interesting normal subgroup of this group. You can try plotting the graph, but the graphic is unlikely to be very informative.</p>
          </article>
          <article class="exercise exercise-like" id="opp">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="GeL">This exercise asks you to verify the class equation outside of the usual situation where the group action is conjugation. Consider the example of the automorphism group of the path on <nemeth class="inline">⠼⠂⠂</nemeth> vertices. First construct the list of orbits. From each orbit, grab the first element of the orbit as a representative. Compute the size of the orbit as the index of the stabilizer of the representative in the group via Theorem 14.1.11. (Yes, you could just compute the size of the full orbit, but the idea of the exercise is to use more group-theoretic results.) Then sum these orbit-sizes, which should equal the size of the whole vertex set since the orbits form a partition.</p>
          </article>
          <article class="exercise exercise-like" id="Uwy">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="mlU">Construct a simple graph (no loops or multiple edges), with at least two vertices and at least one edge, whose automorphism group is trivial. You might start experimenting by drawing pictures on paper before constructing the graph. A command like the following will let you construct a graph from edges. The graph below looks like a triangle or <nemeth class="inline">⠼⠒</nemeth>-cycle.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = Graph([(1,2), (2,3), (3,1)])
G.plot()
</div>
            </article>
          </article>
          <article class="exercise exercise-like" id="ADH">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="yAm">For the following two pairs of groups, compute the list of conjugacy class representatives for each group in the pair. For each part, compare and contrast the results for the two groups in the pair, with thoughtful and insightful comments.</p>
            <ol class="outerlist">
              <li>a. <p id="GVJ">The full symmetric group on 5 symbols, <nemeth class="inline">⠠⠎⠢</nemeth>, and the alternating group on 5 symbols, <nemeth class="inline">⠠⠁⠢</nemeth>.</p></li>
              <li>b. <p id="ncS">The dihedral groups that are symmetries of a <nemeth class="inline">⠼⠶</nemeth>-gon and an <nemeth class="inline">⠼⠦</nemeth>-gon, <nemeth class="inline">⠠⠙⠶</nemeth> and <nemeth class="inline">⠠⠙⠦</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="gKQ">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="eHv">Use the command <code class="code-inline tex2jax_ignore">graphs.CubeGraph(4)</code> to build the four-dimensional cube graph, <nemeth class="inline">⠠⠟⠲</nemeth>. Using a plain <code class="code-inline tex2jax_ignore">.plot()</code> command (without a spring layout) should create a nice plot. Construct the automorphism group of the graph, which will provide a group action on the vertex set.</p>
            <ol class="outerlist">
              <li>a. <p id="Tkb">Construct the orbits of this action, and comment.</p></li>
              <li>b. <p id="zrk">Construct a stabilizer of a single vertex (which is a subgroup of the full automorphism group) and then consider the action of <em class="emphasis">this</em> group on the vertex set. Construct the orbits of this new action, and comment carefully and fully on your observations, especially in terms of the vertices of the graph.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="MRZ">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="KOE">Build the graph given by the commands below. The result should be a symmetric-looking graph with an automorphism group of order <nemeth class="inline">⠼⠂⠖</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = graphs.CycleGraph(8)
G.add_edges([(0,2),(1,3),(4,6),(5,7)])
G.plot()
</div>
            </article>
            <p id="qVN">Repeat the two parts of the previous exercise, but realize that in the second part there are now two different stabilizers to create, so build both and compare the differences in the stabilizers and their orbits. Creating a second plot with <code class="code-inline tex2jax_ignore">G.plot(layout='planar')</code> might provide extra insight.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="TkO">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">15</span> <span class="title">The Sylow Theorems</span></div>
        <section class="introduction" id="gSU">
          <p id="Ejh">We already know that the converse of Lagrange's Theorem is false. If <i class="one-letter">G</i> is a group of order <i class="one-letter">m</i> and <i class="one-letter">n</i> divides <i class="one-letter">m</i>, then <i class="one-letter">G</i> does not necessarily possess a subgroup of order <i class="one-letter">n</i>. For example, <nemeth class="inline">⠠⠁⠲</nemeth> has order <nemeth class="inline">⠼⠂⠆</nemeth> but does not possess a subgroup of order <nemeth class="inline">⠼⠖</nemeth>. However, the Sylow Theorems do provide a partial converse for Lagrange's Theorem—in certain cases they guarantee us subgroups of specific orders. These theorems yield a powerful set of tools for the classification of all finite nonabelian groups.</p>
        </section>
        <section class="section" id="ILJ">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">15.1</span> <span class="title">The Sylow Theorems</span></div>
          <section class="introduction" id="Nad">
            <p id="kqq">We will use what we have learned about group actions to prove the Sylow Theorems. Recall for a moment what it means for <i class="one-letter">G</i> to act on itself by conjugation and how conjugacy classes are distributed in the group according to the class equation, discussed in Chapter 14. A group  <i class="one-letter">G</i> acts on itself by conjugation via the map <nemeth class="inline">⠷⠛⠠⠀⠭⠾⠀⠫⠳⠒⠒⠕⠀⠛⠭⠛⠘⠤⠼⠂</nemeth>. Let <nemeth class="inline">⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠅⠐</nemeth> be representatives from each  of the distinct conjugacy classes of <i class="one-letter">G</i> that consist of more than one element. Then the class equation can be written as</p>
            <div class="displaymath">
              <nemeth>⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠵⠷⠠⠛⠾⠳⠬⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠂⠾⠈⠾⠬⠄⠄⠄⠬⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠰⠅⠐⠾⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠠⠵⠷⠠⠛⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠭⠀⠨⠅⠀⠭⠛⠋⠕⠗⠀⠁⠇⠇⠭⠀⠈⠑⠀⠠⠛⠨⠾</nemeth> is the center of <i class="one-letter">G</i> and <nemeth class="inline">⠠⠉⠷⠭⠰⠊⠐⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠭⠰⠊⠐⠀⠨⠅⠀⠭⠰⠊⠐⠛⠨⠾</nemeth> is the centralizer subgroup of <nemeth class="inline">⠭⠰⠊</nemeth>.</p>
            <p id="Qxz">We begin our investigation of the Sylow Theorems by examining subgroups of order <i class="one-letter">p</i>, where <i class="one-letter">p</i> is prime. A group <i class="one-letter">G</i> is a <dfn class="terminology"><i class="one-letter">p</i>-group</dfn>  if every element in <i class="one-letter">G</i> has as its order a power of <i class="one-letter">p</i>, where <i class="one-letter">p</i> is a prime number. A subgroup of a group <i class="one-letter">G</i> is a <dfn class="terminology"><i class="one-letter">p</i>-subgroup</dfn> if it is a <i class="one-letter">p</i>-group.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="yWy">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">15.1.1</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Cauchy.</span>
              </h6>
              <p id="Zhr"> Let <i class="one-letter">G</i> be a finite group and <i class="one-letter">p</i> a prime such that <i class="one-letter">p</i> divides the order of <i class="one-letter">G</i>. Then <i class="one-letter">G</i> contains a subgroup of order <i class="one-letter">p</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Zov">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="LdM">We will use induction on the order of <i class="one-letter">G</i>. If <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠏</nemeth>, then clearly <i class="one-letter">G</i> itself is the required subgroup. We now assume that every group of order <i class="one-letter">k</i>, where <nemeth class="inline">⠏⠀⠐⠅⠱⠀⠅⠀⠐⠅⠀⠝</nemeth> and <i class="one-letter">p</i> divides <i class="one-letter">k</i>, has an element of order <i class="one-letter">p</i>. Assume that <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠝</nemeth> and <nemeth class="inline">⠏⠳⠝</nemeth> and consider the class equation of <i class="one-letter">G</i>:</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠵⠷⠠⠛⠾⠳⠬⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠂⠾⠈⠾⠬⠄⠄⠄⠬⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠰⠅⠐⠾⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">. We have two cases.</p>
              <article class="case" id="case-3">
                <h6 class="heading">Case 1.</h6>
                <p id="rkV">Suppose the order of one of the centralizer subgroups, <nemeth class="inline">⠠⠉⠷⠭⠰⠊⠐⠾</nemeth>, is divisible by <i class="one-letter">p</i> for some <i class="one-letter">i</i>, <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠅</nemeth>. In this case, by our induction hypothesis, we are done. Since <nemeth class="inline">⠠⠉⠷⠭⠰⠊⠐⠾</nemeth> is a proper subgroup of <i class="one-letter">G</i> and <i class="one-letter">p</i> divides <nemeth class="inline">⠳⠠⠉⠷⠭⠰⠊⠐⠾⠳</nemeth>, <nemeth class="inline">⠠⠉⠷⠭⠰⠊⠐⠾</nemeth> must contain an element of order <i class="one-letter">p</i>. Hence, <i class="one-letter">G</i> must contain an element of order <i class="one-letter">p</i>.</p>
              </article>
              <article class="case" id="case-4">
                <h6 class="heading">Case 2.</h6>
                <p id="Xse">Suppose the order of no centralizer subgroup is divisible by <i class="one-letter">p</i>. Then <i class="one-letter">p</i> divides <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠰⠊⠐⠾⠈⠾</nemeth>, the order of each conjugacy class in the class equation; hence, <i class="one-letter">p</i> must divide the center of <i class="one-letter">G</i>, <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth>. Since <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth> is abelian, it must have a subgroup of order <i class="one-letter">p</i> by the Fundamental Theorem of Finite Abelian Groups. Therefore, the center of <i class="one-letter">G</i> contains an element of order <i class="one-letter">p</i>.</p>
              </article>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="wbS">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">15.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="iBd">Let <i class="one-letter">G</i> be a finite group. Then <i class="one-letter">G</i> is a <i class="one-letter">p</i>-group if and only if <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠏⠘⠝</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="cjb">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="OIm">Let us consider the group <nemeth class="inline">⠠⠁⠢</nemeth>. We know that <nemeth class="inline">⠳⠠⠁⠢⠳⠀⠨⠅⠀⠼⠖⠴⠀⠨⠅⠀⠼⠆⠘⠆⠐⠡⠒⠡⠢</nemeth>. By Cauchy's Theorem, we are guaranteed that <nemeth class="inline">⠠⠁⠢</nemeth> has subgroups of orders <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth> and <nemeth class="inline">⠼⠢</nemeth>. The Sylow Theorems will give us even more information about the possible subgroups of <nemeth class="inline">⠠⠁⠢</nemeth>.</p>
            </article>
            <p id="wEI">We are now ready to state and prove the first of the Sylow Theorems. The proof is very similar to the proof of Cauchy's Theorem.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="fdH">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">15.1.4</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">First Sylow Theorem.</span>
              </h6>
              <p id="FoA">Let <i class="one-letter">G</i> be a finite group and <i class="one-letter">p</i> a prime such that <nemeth class="inline">⠏⠘⠗</nemeth> divides <nemeth class="inline">⠳⠠⠛⠳</nemeth>. Then <i class="one-letter">G</i> contains a subgroup of order <nemeth class="inline">⠏⠘⠗</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="FvE">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Dzn">We induct on the order of <i class="one-letter">G</i> once again. If <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠏</nemeth>, then we are done. Now suppose that the order of <i class="one-letter">G</i> is <i class="one-letter">n</i> with <nemeth class="inline">⠝⠀⠨⠂⠀⠏</nemeth> and that the theorem is true for all groups of order less than <i class="one-letter">n</i>, where <i class="one-letter">p</i> divides <i class="one-letter">n</i>. We shall apply the class equation once again:</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠵⠷⠠⠛⠾⠳⠬⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠂⠾⠈⠾⠬⠄⠄⠄⠬⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠰⠅⠐⠾⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">. First suppose that <i class="one-letter">p</i> does not divide <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠰⠊⠐⠾⠈⠾</nemeth> for some <i class="one-letter">i</i>. Then <nemeth class="inline">⠏⠘⠗⠐⠳⠳⠠⠉⠷⠭⠰⠊⠐⠾⠳</nemeth>, since <nemeth class="inline">⠏⠘⠗</nemeth> divides <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠳⠠⠉⠷⠭⠰⠊⠐⠾⠳⠡⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠰⠊⠐⠾⠈⠾</nemeth>. Now we can apply the induction hypothesis to <nemeth class="inline">⠠⠉⠷⠭⠰⠊⠐⠾</nemeth>.</p>
              <p id="jGw">Hence, we may assume that <i class="one-letter">p</i> divides <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠉⠷⠭⠰⠊⠐⠾⠈⠾</nemeth> for all <i class="one-letter">i</i>. Since <i class="one-letter">p</i> divides <nemeth class="inline">⠳⠠⠛⠳</nemeth>, the class equation says that <i class="one-letter">p</i> must divide <nemeth class="inline">⠳⠠⠵⠷⠠⠛⠾⠳</nemeth>; hence, by Cauchy's Theorem, <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth> has an element of order <i class="one-letter">p</i>, say <i class="one-letter">g</i>. Let <i class="one-letter">N</i> be the group generated by <i class="one-letter">g</i>. Clearly, <i class="one-letter">N</i> is a normal subgroup of <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth> since <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth> is abelian; therefore, <i class="one-letter">N</i> is normal in <i class="one-letter">G</i> since every element in <nemeth class="inline">⠠⠵⠷⠠⠛⠾</nemeth> commutes with every element in <i class="one-letter">G</i>. Now consider the factor group <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> of order <nemeth class="inline">⠳⠠⠛⠳⠸⠌⠏</nemeth>. By the induction hypothesis, <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> contains a subgroup <i class="one-letter">H</i> of order <nemeth class="inline">⠏⠘⠗⠤⠂</nemeth>. The inverse image of <i class="one-letter">H</i> under the canonical homomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛⠸⠌⠠⠝</nemeth> is a subgroup of order <nemeth class="inline">⠏⠘⠗</nemeth> in <i class="one-letter">G</i>.</p>
            </article>
            <p id="cLR">A <dfn class="terminology">Sylow <i class="one-letter">p</i>-subgroup</dfn> <i class="one-letter">P</i> of a group <i class="one-letter">G</i> is a maximal <i class="one-letter">p</i>-subgroup of <i class="one-letter">G</i>. To prove the other two Sylow Theorems, we need to consider conjugate subgroups as opposed to conjugate elements in a group. For a group <i class="one-letter">G</i>, let <nemeth class="inline">⠈⠠⠎</nemeth> be the collection of all subgroups of <i class="one-letter">G</i>. For any subgroup <i class="one-letter">H</i>, <nemeth class="inline">⠈⠠⠎</nemeth> is a <i class="one-letter">H</i>-set, where  <i class="one-letter">H</i> acts on <nemeth class="inline">⠈⠠⠎</nemeth> by conjugation. That is, we have an action</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠈⠡⠈⠠⠎⠀⠫⠕⠀⠈⠠⠎</nemeth>
            </div>
            <p data-braille="continuation">defined by</p>
            <div class="displaymath">
              <nemeth>⠓⠡⠠⠅⠀⠫⠳⠒⠒⠕⠀⠓⠠⠅⠓⠘⠤⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">for <i class="one-letter">K</i> in <nemeth class="inline">⠈⠠⠎</nemeth>.</p>
            <p id="ITa">The set </p>
            <div class="displaymath">
              <nemeth>⠠⠝⠷⠠⠓⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠠⠓⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠓⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a subgroup of <i class="one-letter">G</i> called the the <dfn class="terminology">normalizer</dfn> of <i class="one-letter">H</i> in <i class="one-letter">G</i>. Notice that <i class="one-letter">H</i> is a normal subgroup of <nemeth class="inline">⠠⠝⠷⠠⠓⠾</nemeth>. In fact, <nemeth class="inline">⠠⠝⠷⠠⠓⠾</nemeth> is the largest subgroup of <i class="one-letter">G</i> in which <i class="one-letter">H</i> is normal.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="jNA">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">15.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="qfC">Let <i class="one-letter">P</i> be a Sylow <i class="one-letter">p</i>-subgroup of a finite group <i class="one-letter">G</i> and let <i class="one-letter">x</i> have as its order a power of <i class="one-letter">p</i>. If <nemeth class="inline">⠭⠘⠤⠼⠂⠐⠠⠏⠭⠀⠨⠅⠀⠠⠏</nemeth>, then <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠏</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="dYo">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="PNF">Certainly <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠝⠷⠠⠏⠾</nemeth>, and the cyclic subgroup, <nemeth class="inline">⠨⠨⠷⠭⠠⠏⠨⠨⠾⠀⠸⠐⠅⠀⠠⠝⠷⠠⠏⠾⠸⠌⠠⠏</nemeth>, has as its order a power of <i class="one-letter">p</i>. By the Correspondence Theorem there exists a subgroup <i class="one-letter">H</i> of <nemeth class="inline">⠠⠝⠷⠠⠏⠾</nemeth> containing <i class="one-letter">P</i> such that <nemeth class="inline">⠠⠓⠸⠌⠠⠏⠀⠨⠅⠀⠨⠨⠷⠭⠠⠏⠨⠨⠾</nemeth>. Since <nemeth class="inline">⠳⠠⠓⠳⠀⠨⠅⠀⠳⠠⠏⠳⠡⠳⠨⠨⠷⠭⠠⠏⠨⠨⠾⠳</nemeth>, the order of <i class="one-letter">H</i> must be a power of <i class="one-letter">p</i>. However, <i class="one-letter">P</i> is a Sylow <i class="one-letter">p</i>-subgroup contained in <i class="one-letter">H</i>. Since the order of <i class="one-letter">P</i> is the largest power of <i class="one-letter">p</i> dividing <nemeth class="inline">⠳⠠⠛⠳</nemeth>, <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠠⠏</nemeth>. Therefore, <nemeth class="inline">⠠⠓⠸⠌⠠⠏</nemeth> is the trivial subgroup and <nemeth class="inline">⠭⠠⠏⠀⠨⠅⠀⠠⠏</nemeth>, or <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠏</nemeth>.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="PUJ">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">15.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="WmL">Let <i class="one-letter">H</i> and <i class="one-letter">K</i> be subgroups of <i class="one-letter">G</i>. The number of distinct <i class="one-letter">H</i>-conjugates of <i class="one-letter">K</i> is <nemeth class="inline">⠈⠷⠠⠓⠒⠀⠠⠝⠷⠠⠅⠾⠨⠩⠠⠓⠈⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Kfx">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="vUO">We define a bijection between the conjugacy classes of <i class="one-letter">K</i> and the right cosets of <nemeth class="inline">⠠⠝⠷⠠⠅⠾⠨⠩⠠⠓</nemeth> by <nemeth class="inline">⠓⠘⠤⠼⠂⠐⠠⠅⠓⠀⠫⠳⠒⠒⠕⠀⠷⠠⠝⠷⠠⠅⠾⠨⠩⠠⠓⠾⠓</nemeth>. To show that this map is a bijection, let <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth> and suppose that <nemeth class="inline">⠷⠠⠝⠷⠠⠅⠾⠨⠩⠠⠓⠾⠓⠂⠀⠨⠅⠀⠷⠠⠝⠷⠠⠅⠾⠨⠩⠠⠓⠾⠓⠆</nemeth>. Then <nemeth class="inline">⠓⠆⠓⠂⠘⠤⠼⠂⠀⠈⠑⠀⠠⠝⠷⠠⠅⠾</nemeth>. Therefore, <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠓⠆⠓⠂⠘⠤⠼⠂⠐⠠⠅⠓⠂⠓⠆⠘⠤⠼⠂</nemeth> or <nemeth class="inline">⠓⠂⠘⠤⠼⠂⠐⠠⠅⠓⠂⠀⠨⠅⠀⠓⠆⠘⠤⠼⠂⠐⠠⠅⠓⠆</nemeth>, and the map is an injection. It is easy to see that this map is surjective; hence, we have a one-to-one and onto map between the <i class="one-letter">H</i>-conjugates of <i class="one-letter">K</i> and the right cosets of <nemeth class="inline">⠠⠝⠷⠠⠅⠾⠨⠩⠠⠓</nemeth> in <i class="one-letter">H</i>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="LkQ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">15.1.7</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Second Sylow Theorem.</span>
              </h6>
              <p id="lvJ">Let <i class="one-letter">G</i> be a finite group and <i class="one-letter">p</i> a prime dividing <nemeth class="inline">⠳⠠⠛⠳</nemeth>. Then all Sylow <i class="one-letter">p</i>-subgroups of <i class="one-letter">G</i> are conjugate. That is, if <nemeth class="inline">⠠⠏⠂</nemeth> and <nemeth class="inline">⠠⠏⠆</nemeth> are two Sylow <i class="one-letter">p</i>-subgroups, there exists a <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠛⠠⠏⠂⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠏⠆</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="lCN">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="cbX">Let <i class="one-letter">P</i> be a Sylow <i class="one-letter">p</i>-subgroup of <i class="one-letter">G</i> and suppose that <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠏⠘⠗⠐⠍</nemeth> with <nemeth class="inline">⠳⠠⠏⠳⠀⠨⠅⠀⠏⠘⠗</nemeth>. Let</p>
              <div class="displaymath">
                <nemeth>⠈⠠⠎⠀⠨⠅⠀⠨⠷⠠⠏⠀⠨⠅⠀⠠⠏⠂⠠⠀⠠⠏⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠏⠰⠅⠐⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">consist of the distinct conjugates of <i class="one-letter">P</i> in <i class="one-letter">G</i>. By Lemma 15.1.6, <nemeth class="inline">⠅⠀⠨⠅⠀⠈⠷⠠⠛⠒⠀⠠⠝⠷⠠⠏⠾⠈⠾</nemeth>. Notice that</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠛⠳⠀⠨⠅⠀⠏⠘⠗⠐⠍⠀⠨⠅⠀⠳⠠⠝⠷⠠⠏⠾⠳⠡⠈⠷⠠⠛⠒⠀⠠⠝⠷⠠⠏⠾⠈⠾⠀⠨⠅⠀⠳⠠⠝⠷⠠⠏⠾⠳⠡⠅</nemeth>
              </div>
              <p data-braille="continuation">. Since <nemeth class="inline">⠏⠘⠗</nemeth> divides <nemeth class="inline">⠳⠠⠝⠷⠠⠏⠾⠳</nemeth>, <i class="one-letter">p</i> cannot divide <i class="one-letter">k</i>.</p>
              <p id="Ijg">Given any other Sylow <i class="one-letter">p</i>-subgroup <i class="one-letter">Q</i>, we must show that <nemeth class="inline">⠠⠟⠀⠈⠑⠀⠈⠠⠎</nemeth>. Consider the <i class="one-letter">Q</i>-conjugacy classes of each <nemeth class="inline">⠠⠏⠰⠊</nemeth>. Clearly, these conjugacy classes partition <nemeth class="inline">⠈⠠⠎</nemeth>. The size of the partition containing <nemeth class="inline">⠠⠏⠰⠊</nemeth> is <nemeth class="inline">⠈⠷⠠⠟⠒⠀⠠⠝⠷⠠⠏⠰⠊⠐⠾⠨⠩⠠⠟⠈⠾</nemeth> by Lemma 15.1.6, and Lagrange's Theorem tells us that <nemeth class="inline">⠳⠠⠟⠳⠀⠨⠅⠀⠈⠷⠠⠟⠒⠀⠠⠝⠷⠠⠏⠰⠊⠐⠾⠨⠩⠠⠟⠈⠾⠳⠠⠝⠷⠠⠏⠰⠊⠐⠾⠨⠩⠠⠟⠳</nemeth>. Thus, <nemeth class="inline">⠈⠷⠠⠟⠒⠀⠠⠝⠷⠠⠏⠰⠊⠐⠾⠨⠩⠠⠟⠈⠾</nemeth> must be a divisor of <nemeth class="inline">⠳⠠⠟⠳⠀⠨⠅⠀⠏⠘⠗</nemeth>. Hence, the number of conjugates in every equivalence class of the partition is a power of <i class="one-letter">p</i>. However, since <i class="one-letter">p</i> does not divide <i class="one-letter">k</i>, one of these equivalence classes must contain only a single Sylow <i class="one-letter">p</i>-subgroup, say <nemeth class="inline">⠠⠏⠰⠚</nemeth>. In this case, <nemeth class="inline">⠭⠘⠤⠼⠂⠐⠠⠏⠰⠚⠐⠭⠀⠨⠅⠀⠠⠏⠰⠚</nemeth> for all <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠟</nemeth>. By Lemma 15.1.5, <nemeth class="inline">⠠⠏⠰⠚⠐⠀⠨⠅⠀⠠⠟</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="rrZ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">15.1.8</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Third Sylow Theorem.</span>
              </h6>
              <p id="RCS">Let <i class="one-letter">G</i> be a finite group and let <i class="one-letter">p</i> be a prime dividing the order of <i class="one-letter">G</i>. Then the number of Sylow <i class="one-letter">p</i>-subgroups is congruent to <nemeth class="inline">⠼⠂⠷⠍⠕⠙⠀⠏⠾</nemeth> and divides <nemeth class="inline">⠳⠠⠛⠳</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="RJW">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="oqp">Let <i class="one-letter">P</i> be a Sylow <i class="one-letter">p</i>-subgroup acting on the set of Sylow <i class="one-letter">p</i>-subgroups,</p>
              <div class="displaymath">
                <nemeth>⠈⠠⠎⠀⠨⠅⠀⠨⠷⠠⠏⠀⠨⠅⠀⠠⠏⠂⠠⠀⠠⠏⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠏⠰⠅⠐⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">, by conjugation. From the proof of the Second Sylow Theorem, the only <i class="one-letter">P</i>-conjugate of <i class="one-letter">P</i> is itself and the order of the other <i class="one-letter">P</i>-conjugacy classes is a power of <i class="one-letter">p</i>. Each <i class="one-letter">P</i>-conjugacy class contributes a positive power of <i class="one-letter">p</i> toward <nemeth class="inline">⠳⠈⠠⠎⠳</nemeth> except the equivalence class  <nemeth class="inline">⠨⠷⠠⠏⠨⠾</nemeth>. Since <nemeth class="inline">⠳⠈⠠⠎⠳</nemeth> is the sum of positive powers of <i class="one-letter">p</i> and <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠳⠈⠠⠎⠳⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠏⠾</nemeth>.</p>
              <p id="Uxy">Now suppose that <i class="one-letter">G</i> acts on <nemeth class="inline">⠈⠠⠎</nemeth> by conjugation. Since all Sylow <i class="one-letter">p</i>-subgroups are conjugate, there can be only one orbit under this action. For <nemeth class="inline">⠠⠏⠀⠈⠑⠀⠈⠠⠎</nemeth>,</p>
              <div class="displaymath">
                <nemeth>⠳⠈⠠⠎⠳⠀⠨⠅⠀⠳⠕⠗⠃⠊⠞⠀⠕⠋⠠⠏⠳⠀⠨⠅⠀⠈⠷⠠⠛⠒⠀⠠⠝⠷⠠⠏⠾⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">by Lemma 15.1.6. But <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠝⠷⠠⠏⠾⠈⠾</nemeth> is a divisor of <nemeth class="inline">⠳⠠⠛⠳</nemeth>; consequently, the number of Sylow <i class="one-letter">p</i>-subgroups of a finite group must divide the order of the group.</p>
            </article>
          </section>
          <section class="subsection" id="zrX">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">15.1.1</span> <span class="title">Historical Note</span></div>
            <p id="zdP">Peter Ludvig Mejdell Sylow  was born in 1832 in Christiania, Norway (now Oslo). After attending Christiania University, Sylow taught high school. In 1862 he obtained a temporary appointment at Christiania University. Even though his appointment was relatively brief, he influenced students such as Sophus Lie  (1842–1899). Sylow had a chance at a permanent chair in 1869, but failed to obtain the appointment. In 1872, he published a 10-page paper presenting the theorems that now bear his name. Later Lie and Sylow collaborated on a new edition of Abel's works. In 1898, a chair at Christiania University was finally created for Sylow through the efforts of his student and colleague Lie. Sylow died in 1918.</p>
          </section>
        </section>
        <section class="section" id="oSS">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">15.2</span> <span class="title">Examples and Applications</span></div>
          <section class="introduction" id="thm">
            <article class="example example-like" data-braille="example-like" id="Iqk">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="uPv">Using the Sylow Theorems, we can determine that <nemeth class="inline">⠠⠁⠢</nemeth> has subgroups of orders <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠲</nemeth>, and <nemeth class="inline">⠼⠢</nemeth>. The Sylow <i class="one-letter">p</i>-subgroups of <nemeth class="inline">⠠⠁⠢</nemeth> have orders <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠲</nemeth>, and <nemeth class="inline">⠼⠢</nemeth>. The Third Sylow Theorem tells us exactly how many Sylow <i class="one-letter">p</i>-subgroups <nemeth class="inline">⠠⠁⠢</nemeth> has. Since the number of Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups must divide <nemeth class="inline">⠼⠖⠴</nemeth> and also be congruent to <nemeth class="inline">⠼⠂⠷⠍⠕⠙⠀⠢⠾</nemeth>, there are either one or six Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups in <nemeth class="inline">⠠⠁⠢</nemeth>. All Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups are conjugate. If there were only a single Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroup, it would be conjugate to itself; that is, it would be a normal subgroup of <nemeth class="inline">⠠⠁⠢</nemeth>. Since <nemeth class="inline">⠠⠁⠢</nemeth> has no normal subgroups, this is impossible; hence, we have determined that there are exactly six distinct Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups of <nemeth class="inline">⠠⠁⠢</nemeth>.</p>
            </article>
            <p id="paj">The Sylow Theorems allow us to prove many useful results about finite groups. By using them, we can often conclude a great deal about groups of a particular order if certain hypotheses are satisfied.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="Xzi">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="xKb">If <i class="one-letter">p</i> and <i class="one-letter">q</i> are distinct primes with <nemeth class="inline">⠏⠀⠐⠅⠀⠟</nemeth>, then every group <i class="one-letter">G</i> of order <nemeth class="inline">⠏⠟</nemeth> has a single subgroup of order <i class="one-letter">q</i> and this subgroup is normal in <i class="one-letter">G</i>. Hence, <i class="one-letter">G</i> cannot be simple. Furthermore, if <nemeth class="inline">⠟⠀⠌⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠏⠾</nemeth>, then <i class="one-letter">G</i> is cyclic.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="xRf">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="AEH">We know that <i class="one-letter">G</i> contains a subgroup <i class="one-letter">H</i> of order <i class="one-letter">q</i>. The number of conjugates of <i class="one-letter">H</i> divides <nemeth class="inline">⠏⠟</nemeth> and is equal to <nemeth class="inline">⠼⠂⠬⠅⠟</nemeth> for <nemeth class="inline">⠅⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄</nemeth>. However, <nemeth class="inline">⠼⠂⠬⠟</nemeth> is already too large to divide the order of the group; hence, <i class="one-letter">H</i> can only be conjugate to itself. That is, <i class="one-letter">H</i> must be normal in <i class="one-letter">G</i>.</p>
              <p id="gLQ">The group <i class="one-letter">G</i> also has a Sylow <i class="one-letter">p</i>-subgroup, say <i class="one-letter">K</i>. The number of conjugates of <i class="one-letter">K</i> must divide <i class="one-letter">q</i> and be equal to <nemeth class="inline">⠼⠂⠬⠅⠏</nemeth> for <nemeth class="inline">⠅⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄</nemeth>. Since <i class="one-letter">q</i> is prime, either <nemeth class="inline">⠼⠂⠬⠅⠏⠀⠨⠅⠀⠟</nemeth> or <nemeth class="inline">⠼⠂⠬⠅⠏⠀⠨⠅⠀⠼⠂</nemeth>. If <nemeth class="inline">⠼⠂⠬⠅⠏⠀⠨⠅⠀⠼⠂</nemeth>, then <i class="one-letter">K</i> is normal in <i class="one-letter">G</i>. In this case, we can easily show that <i class="one-letter">G</i> satisfies the criteria, given in Chapter 9, for the internal direct product of <i class="one-letter">H</i> and <i class="one-letter">K</i>. Since <i class="one-letter">H</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠟</nemeth> and <i class="one-letter">K</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>, <nemeth class="inline">⠠⠛⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠏⠐⠈⠡⠸⠠⠵⠰⠟⠐⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠏⠟</nemeth> by Theorem 9.2.9.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="oxt">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="aWE">Every group of order <nemeth class="inline">⠼⠂⠢</nemeth> is cyclic. This is true because <nemeth class="inline">⠼⠂⠢⠀⠨⠅⠀⠼⠢⠡⠒</nemeth> and <nemeth class="inline">⠼⠢⠀⠌⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠒⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="UEC">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="HdN">Let us classify all of the groups of order <nemeth class="inline">⠼⠔⠔⠀⠨⠅⠀⠼⠒⠘⠆⠐⠡⠂⠂</nemeth> up to isomorphism. First we will show that every group <i class="one-letter">G</i> of order <nemeth class="inline">⠼⠔⠔</nemeth> is abelian. By the Third Sylow Theorem, there are <nemeth class="inline">⠼⠂⠬⠒⠅</nemeth> Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroups, each of order <nemeth class="inline">⠼⠔</nemeth>, for some <nemeth class="inline">⠅⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>. Also, <nemeth class="inline">⠼⠂⠬⠒⠅</nemeth> must divide <nemeth class="inline">⠼⠂⠂</nemeth>; hence, there can only be a single normal Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup <i class="one-letter">H</i> in <i class="one-letter">G</i>. Similarly, there are <nemeth class="inline">⠼⠂⠬⠂⠂⠅</nemeth> Sylow <nemeth class="inline">⠼⠂⠂</nemeth>-subgroups and <nemeth class="inline">⠼⠂⠬⠂⠂⠅</nemeth> must divide <nemeth class="inline">⠼⠔</nemeth>. Consequently, there is only one Sylow <nemeth class="inline">⠼⠂⠂</nemeth>-subgroup <i class="one-letter">K</i> in <i class="one-letter">G</i>. By Corollary 14.2.5, any group of order <nemeth class="inline">⠏⠘⠆</nemeth> is abelian for <i class="one-letter">p</i> prime; hence, <i class="one-letter">H</i> is isomorphic either to <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒</nemeth> or to <nemeth class="inline">⠸⠠⠵⠔</nemeth>. Since <i class="one-letter">K</i> has order <nemeth class="inline">⠼⠂⠂</nemeth>, it must be isomorphic to <nemeth class="inline">⠸⠠⠵⠂⠂</nemeth>. Therefore, the only possible groups of order <nemeth class="inline">⠼⠔⠔</nemeth> are <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒⠈⠡⠸⠠⠵⠂⠂</nemeth> or <nemeth class="inline">⠸⠠⠵⠔⠈⠡⠸⠠⠵⠂⠂</nemeth> up to isomorphism.</p>
            </article>
            <p id="Vhs">To determine all of the groups of order <nemeth class="inline">⠼⠢⠡⠶⠡⠲⠶⠀⠨⠅⠀⠼⠂⠖⠲⠢</nemeth>, we need the following theorem.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="DGr">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="dRk">Let <nemeth class="inline">⠠⠛⠘⠄⠐⠀⠨⠅⠀⠨⠨⠷⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂⠐⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛⠨⠨⠾</nemeth> be the subgroup consisting of all finite products of elements of the form <nemeth class="inline">⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂</nemeth> in a group <i class="one-letter">G</i>. Then <nemeth class="inline">⠠⠛⠄</nemeth> is a normal subgroup of <i class="one-letter">G</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠛⠄</nemeth> is abelian.</p>
            </article>
            <p id="BoB">The subgroup <nemeth class="inline">⠠⠛⠄</nemeth> of <i class="one-letter">G</i> is called the <dfn class="terminology">commutator subgroup</dfn> of <i class="one-letter">G</i>. We leave the proof of this theorem as an exercise (Exercise 10.4.14 in Chapter 10).</p>
            <article class="example example-like" data-braille="example-like" id="ALL">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="nkW">We will now show that every group of order <nemeth class="inline">⠼⠢⠡⠶⠡⠲⠶⠀⠨⠅⠀⠼⠂⠖⠲⠢</nemeth> is abelian, and cyclic by Theorem 9.2.9. By the Third Sylow Theorem, <i class="one-letter">G</i> has only one subgroup <nemeth class="inline">⠠⠓⠂</nemeth> of order <nemeth class="inline">⠼⠲⠶</nemeth>. So <nemeth class="inline">⠠⠛⠸⠌⠠⠓⠂</nemeth> has order 35 and must be abelian by Theorem 15.2.2. Hence, the commutator subgroup of <i class="one-letter">G</i> is contained in <i class="one-letter">H</i> which tells us that <nemeth class="inline">⠳⠠⠛⠘⠄⠐⠳</nemeth> is either <nemeth class="inline">⠼⠂</nemeth> or <nemeth class="inline">⠼⠲⠶</nemeth>. If <nemeth class="inline">⠳⠠⠛⠘⠄⠐⠳⠀⠨⠅⠀⠼⠂</nemeth>, we are done. Suppose that <nemeth class="inline">⠳⠠⠛⠘⠄⠐⠳⠀⠨⠅⠀⠼⠲⠶</nemeth>. The Third Sylow Theorem tells us that <i class="one-letter">G</i> has only one subgroup of order <nemeth class="inline">⠼⠢</nemeth> and one subgroup of order <nemeth class="inline">⠼⠶</nemeth>. So there exist normal subgroups <nemeth class="inline">⠠⠓⠆</nemeth> and <nemeth class="inline">⠠⠓⠒</nemeth> in <i class="one-letter">G</i>, where <nemeth class="inline">⠳⠠⠓⠆⠳⠀⠨⠅⠀⠼⠢</nemeth> and <nemeth class="inline">⠳⠠⠓⠒⠳⠀⠨⠅⠀⠼⠶</nemeth>. In either case the quotient group is abelian; hence, <nemeth class="inline">⠠⠛⠄</nemeth> must be a subgroup of <nemeth class="inline">⠠⠓⠰⠊</nemeth>, <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆</nemeth>. Therefore, the order of <nemeth class="inline">⠠⠛⠄</nemeth> is <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠢</nemeth>, or <nemeth class="inline">⠼⠶</nemeth>. However, we already have determined that <nemeth class="inline">⠳⠠⠛⠘⠄⠐⠳⠀⠨⠅⠀⠼⠂</nemeth> or <nemeth class="inline">⠼⠲⠶</nemeth>. So the commutator subgroup of <i class="one-letter">G</i> is trivial, and consequently <i class="one-letter">G</i> is abelian.</p>
            </article>
          </section>
          <section class="subsection" id="fzg">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">15.2.1</span> <span class="title">Finite Simple Groups</span></div>
            <p id="fkY">Given a finite group, one can ask whether or not that group has any normal subgroups. Recall that a simple group is one with no proper nontrivial normal subgroups. As in the case of <nemeth class="inline">⠠⠁⠢</nemeth>, proving a group to be simple can be a very difficult task; however, the Sylow Theorems are useful tools for proving that a group is not simple. Usually, some sort of counting argument is involved.</p>
            <article class="example example-like" data-braille="example-like" id="NvC">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="Tsf">Let us show that no group <i class="one-letter">G</i> of order <nemeth class="inline">⠼⠆⠴</nemeth> can be simple. By the Third Sylow Theorem, <i class="one-letter">G</i> contains one or more Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups. The number of such subgroups is congruent to <nemeth class="inline">⠼⠂⠷⠍⠕⠙⠀⠢⠾</nemeth> and must also divide <nemeth class="inline">⠼⠆⠴</nemeth>. The only possible such number is <nemeth class="inline">⠼⠂</nemeth>. Since there is only a single Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroup and all Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups are conjugate, this subgroup must be normal.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="tCL">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="zzo">Let <i class="one-letter">G</i> be a finite group of order <nemeth class="inline">⠏⠘⠝</nemeth>, <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth> and <i class="one-letter">p</i> prime. By Theorem 14.2.4, <i class="one-letter">G</i> has a nontrivial center. Since the center of any group <i class="one-letter">G</i> is a normal subgroup, <i class="one-letter">G</i> cannot be a simple group. Therefore, groups of orders <nemeth class="inline">⠼⠲</nemeth>, <nemeth class="inline">⠼⠦</nemeth>, <nemeth class="inline">⠼⠔</nemeth>, <nemeth class="inline">⠼⠂⠖</nemeth>, <nemeth class="inline">⠼⠆⠢</nemeth>, <nemeth class="inline">⠼⠆⠶</nemeth>, <nemeth class="inline">⠼⠒⠆</nemeth>, <nemeth class="inline">⠼⠲⠔</nemeth>, <nemeth class="inline">⠼⠖⠲</nemeth>, and <nemeth class="inline">⠼⠦⠂</nemeth> are not simple. In fact, the groups of order <nemeth class="inline">⠼⠲</nemeth>, <nemeth class="inline">⠼⠔</nemeth>, <nemeth class="inline">⠼⠆⠢</nemeth>, and <nemeth class="inline">⠼⠲⠔</nemeth> are abelian by Corollary 14.2.5.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="ZJU">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="fGx">No group of order <nemeth class="inline">⠼⠢⠖⠀⠨⠅⠀⠼⠆⠘⠒⠐⠡⠶</nemeth> is simple. We have seen that if we can show that there is only one Sylow <i class="one-letter">p</i>-subgroup for some prime <i class="one-letter">p</i> dividing 56, then this must be a normal subgroup and we are done. By the Third Sylow Theorem, there are either one or eight Sylow <nemeth class="inline">⠼⠶</nemeth>-subgroups. If there is only a single Sylow <nemeth class="inline">⠼⠶</nemeth>-subgroup, then it must be normal.</p>
              <p id="LNG">On the other hand, suppose that there are eight Sylow <nemeth class="inline">⠼⠶</nemeth>-subgroups. Then each of these subgroups must be cyclic; hence, the intersection of any two of these subgroups contains only the identity of the group. This leaves <nemeth class="inline">⠼⠦⠡⠖⠀⠨⠅⠀⠼⠲⠦</nemeth> distinct elements in the group, each of order <nemeth class="inline">⠼⠶</nemeth>. Now let us count Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups. There are either one or seven Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups. Any element of a Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup other than the identity must have as its order a power of <nemeth class="inline">⠼⠆</nemeth>; and therefore cannot be one of the <nemeth class="inline">⠼⠲⠦</nemeth> elements of order <nemeth class="inline">⠼⠶</nemeth> in the Sylow <nemeth class="inline">⠼⠶</nemeth>-subgroups. Since a Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup has order <nemeth class="inline">⠼⠦</nemeth>, there is only enough room for a single Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup in a group of order <nemeth class="inline">⠼⠢⠖</nemeth>. If there is only one Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup, it must be normal.</p>
            </article>
            <p id="Lsh">For other groups <i class="one-letter">G</i>, it is more difficult to prove that <i class="one-letter">G</i> is not simple. Suppose <i class="one-letter">G</i> has order <nemeth class="inline">⠼⠲⠦</nemeth>. In this case the technique that we employed in the last example will not work. We need the following lemma to prove that no group of order <nemeth class="inline">⠼⠲⠦</nemeth> is simple.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="hot">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="CtU">Let <i class="one-letter">H</i> and <i class="one-letter">K</i> be finite subgroups of a group <i class="one-letter">G</i>. Then</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠓⠠⠅⠳⠀⠨⠅⠀⠹⠳⠠⠓⠳⠡⠳⠠⠅⠳⠌⠳⠠⠓⠨⠩⠠⠅⠳⠼</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="qmG">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="MSZ">Recall that</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠠⠅⠀⠨⠅⠀⠨⠷⠓⠅⠒⠀⠓⠀⠈⠑⠀⠠⠓⠠⠀⠅⠀⠈⠑⠀⠠⠅⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Certainly, <nemeth class="inline">⠳⠠⠓⠠⠅⠳⠀⠐⠅⠱⠀⠳⠠⠓⠳⠡⠳⠠⠅⠳</nemeth> since some element in <nemeth class="inline">⠠⠓⠠⠅</nemeth> could be written as the product of different elements in <i class="one-letter">H</i> and <i class="one-letter">K</i>. It is quite possible that <nemeth class="inline">⠓⠂⠅⠂⠀⠨⠅⠀⠓⠆⠅⠆</nemeth> for <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠅⠂⠠⠀⠅⠆⠀⠈⠑⠀⠠⠅</nemeth>. If this is the case, let</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠷⠓⠂⠾⠘⠤⠼⠂⠐⠓⠆⠀⠨⠅⠀⠅⠂⠷⠅⠆⠾⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. Notice that <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠓⠨⠩⠠⠅</nemeth>, since <nemeth class="inline">⠷⠓⠂⠾⠘⠤⠼⠂⠐⠓⠆</nemeth> is in <i class="one-letter">H</i> and <nemeth class="inline">⠅⠆⠷⠅⠂⠾⠘⠤⠼⠂</nemeth> is in <i class="one-letter">K</i>; consequently,</p>
              <div class="displaymath">
                <nemeth>⠓⠆⠀⠀⠨⠅⠀⠓⠂⠁⠘⠤⠼⠂⠐⠀⠅⠆⠀⠀⠨⠅⠀⠁⠅⠂</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="tai">Conversely, let <nemeth class="inline">⠓⠀⠨⠅⠀⠓⠂⠃⠘⠤⠼⠂</nemeth> and <nemeth class="inline">⠅⠀⠨⠅⠀⠃⠅⠂</nemeth> for <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠓⠨⠩⠠⠅</nemeth>. Then <nemeth class="inline">⠓⠅⠀⠨⠅⠀⠓⠂⠅⠂</nemeth>, where <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠅</nemeth>. Hence, any element <nemeth class="inline">⠓⠅⠀⠈⠑⠀⠠⠓⠠⠅</nemeth> can be written in the form <nemeth class="inline">⠓⠰⠊⠐⠅⠰⠊</nemeth> for <nemeth class="inline">⠓⠰⠊⠐⠀⠈⠑⠀⠠⠓</nemeth> and <nemeth class="inline">⠅⠰⠊⠐⠀⠈⠑⠀⠠⠅</nemeth>, as many times as there are elements in <nemeth class="inline">⠠⠓⠨⠩⠠⠅</nemeth>; that is, <nemeth class="inline">⠳⠠⠓⠨⠩⠠⠅⠳</nemeth> times. Therefore, <nemeth class="inline">⠳⠠⠓⠠⠅⠳⠀⠨⠅⠀⠷⠳⠠⠓⠳⠡⠳⠠⠅⠳⠾⠸⠌⠳⠠⠓⠨⠩⠠⠅⠳</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="FRd">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="rUP">To demonstrate that a group <i class="one-letter">G</i> of order <nemeth class="inline">⠼⠲⠦</nemeth> is not simple, we will show that <i class="one-letter">G</i> contains either a normal subgroup of order <nemeth class="inline">⠼⠦</nemeth> or a normal subgroup of order <nemeth class="inline">⠼⠂⠖</nemeth>. By the Third Sylow Theorem, <i class="one-letter">G</i> has either one or three Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups of order <nemeth class="inline">⠼⠂⠖</nemeth>. If there is only one subgroup, then it must be a normal subgroup.</p>
              <p id="YbY">Suppose that the other case is true, and two of the three Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups are <i class="one-letter">H</i> and <i class="one-letter">K</i>. We claim that  <nemeth class="inline">⠳⠠⠓⠨⠩⠠⠅⠳⠀⠨⠅⠀⠼⠦</nemeth>. If <nemeth class="inline">⠳⠠⠓⠨⠩⠠⠅⠳⠀⠐⠅⠱⠀⠼⠲</nemeth>, then by Lemma 15.2.10,</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠓⠠⠅⠳⠀⠨⠂⠱⠀⠹⠂⠖⠡⠂⠖⠌⠲⠼⠀⠨⠅⠀⠼⠖⠲</nemeth>
              </div>
              <p data-braille="continuation">, which is impossible. Notice that <nemeth class="inline">⠠⠓⠨⠩⠠⠅</nemeth> has index two in both of <i class="one-letter">H</i> and <i class="one-letter">K</i>, so is normal in both, and thus <i class="one-letter">H</i> and <i class="one-letter">K</i> are each in the normalizer of <nemeth class="inline">⠠⠓⠨⠩⠠⠅</nemeth>. Because <i class="one-letter">H</i> is a subgroup of <nemeth class="inline">⠠⠝⠷⠠⠓⠨⠩⠠⠅⠾</nemeth> and because <nemeth class="inline">⠠⠝⠷⠠⠓⠨⠩⠠⠅⠾</nemeth> has strictly more than <nemeth class="inline">⠼⠂⠖</nemeth> elements, <nemeth class="inline">⠳⠠⠝⠷⠠⠓⠨⠩⠠⠅⠾⠳</nemeth> must be a multiple of <nemeth class="inline">⠼⠂⠖</nemeth> greater than <nemeth class="inline">⠼⠂</nemeth>, as well as dividing <nemeth class="inline">⠼⠲⠦</nemeth>. The only possibility is that <nemeth class="inline">⠳⠠⠝⠷⠠⠓⠨⠩⠠⠅⠾⠳⠀⠨⠅⠀⠼⠲⠦</nemeth>. Hence, <nemeth class="inline">⠠⠝⠷⠠⠓⠨⠩⠠⠅⠾⠀⠨⠅⠀⠠⠛</nemeth>.</p>
            </article>
            <p id="rzq">The following famous conjecture of Burnside was proved in a long and difficult paper by Feit and Thompson [2].</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="Bhk">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">15.2.12</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Odd Order Theorem.</span>
              </h6>
              <p id="JYt">Every finite simple group of nonprime order must be of even order.</p>
            </article>
            <p id="XGz">The proof of this theorem laid the groundwork for a program in the 1960s and 1970s that classified all finite simple groups. The success of this program is one of the outstanding achievements of modern mathematics.</p>
            <article class="paragraphs" id="cEA">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="DNI">Sage will compute a single Sylow <i class="one-letter">p</i>-subgroup for each prime divisor <i class="one-letter">p</i> of the order of the group. Then, with conjugacy, all of the Sylow <i class="one-letter">p</i>-subgroups can be enumerated. It is also possible to compute the normalizer of a subgroup.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="EPk">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">15.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="RyB">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Wiu">State Sylow's First Theorem.</p>
          </article>
          <article class="exercise exercise-like" id="xFK">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="CpD">How many groups are there of order <nemeth class="inline">⠼⠖⠔</nemeth>? Why?</p>
          </article>
          <article class="exercise exercise-like" id="dMT">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="iwM">Give two descriptions, fundamentally different in character, of the normalizer of a subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="JUc">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="ODV">Suppose that <i class="one-letter">G</i> is an abelian group.  What is the commutator subgroup of <i class="one-letter">G</i>, and how do you know?</p>
          </article>
          <article class="exercise exercise-like" id="qbl">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="uLe">What's all the fuss about Sylow's Theorems?</p>
          </article>
        </section>
        <section class="exercises" id="kiZ">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">15.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="lYm">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="NCT">What are the orders of all Sylow <i class="one-letter">p</i>-subgroups where <i class="one-letter">G</i> has order <nemeth class="inline">⠼⠂⠦</nemeth>, <nemeth class="inline">⠼⠆⠲</nemeth>, <nemeth class="inline">⠼⠢⠲</nemeth>, <nemeth class="inline">⠼⠶⠆</nemeth>, and <nemeth class="inline">⠼⠦⠴</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="CAY"><span class="type">Hint</span>:<p id="NYs">If <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠼⠂⠦⠀⠨⠅⠀⠼⠆⠡⠒⠘⠆</nemeth>, then the order of a Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup is <nemeth class="inline">⠼⠆</nemeth>, and the order of a Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup is <nemeth class="inline">⠼⠔</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Sfv">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="tKc">Find all the Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroups of <nemeth class="inline">⠠⠎⠲</nemeth> and show that they are all conjugate.</p>
            <div class="solutions">
              <div class="hint solution-like" id="OPq"><span class="type">Hint</span>:<p id="ufB">The four Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroups of <nemeth class="inline">⠠⠎⠲</nemeth> are <nemeth class="inline">⠠⠏⠂⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠏⠆⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠲⠾⠠⠀⠷⠼⠂⠲⠆⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠏⠒⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠒⠲⠾⠠⠀⠷⠼⠂⠲⠒⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠏⠲⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠆⠒⠲⠾⠠⠀⠷⠼⠆⠲⠒⠾⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ymE">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="ZRl">Show that every group of order <nemeth class="inline">⠼⠲⠢</nemeth> has a normal subgroup of order <nemeth class="inline">⠼⠔</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="etN">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="FYu">Let <i class="one-letter">H</i> be a Sylow <i class="one-letter">p</i>-subgroup of <i class="one-letter">G</i>. Prove that <i class="one-letter">H</i> is the only Sylow <i class="one-letter">p</i>-subgroup of <i class="one-letter">G</i> contained in <nemeth class="inline">⠠⠝⠷⠠⠓⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="KAW">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="mfD">Prove that no group of order <nemeth class="inline">⠼⠔⠖</nemeth> is simple.</p>
            <div class="solutions">
              <div class="hint solution-like" id="nsa"><span class="type">Hint</span>:<p id="amK">Since <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠼⠔⠖⠀⠨⠅⠀⠼⠆⠘⠢⠐⠡⠒</nemeth>, <i class="one-letter">G</i> has either one or three Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups by the Third Sylow Theorem. If there is only one subgroup, we are done. If there are three Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups, let <i class="one-letter">H</i> and <i class="one-letter">K</i> be two of them. Therefore, <nemeth class="inline">⠳⠠⠓⠨⠩⠠⠅⠳⠀⠨⠂⠱⠀⠼⠂⠖</nemeth>; otherwise, <nemeth class="inline">⠠⠓⠠⠅</nemeth> would have <nemeth class="inline">⠷⠼⠒⠆⠡⠒⠆⠾⠸⠌⠦⠀⠨⠅⠀⠼⠂⠆⠦</nemeth> elements, which is impossible. Thus, <nemeth class="inline">⠠⠓⠨⠩⠠⠅</nemeth> is normal in both <i class="one-letter">H</i> and <i class="one-letter">K</i> since it has index <nemeth class="inline">⠼⠆</nemeth> in both groups.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="qIf">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="SmM">Prove that no group of order <nemeth class="inline">⠼⠂⠖⠴</nemeth> is simple.</p>
          </article>
          <article class="exercise exercise-like" id="WPo">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="ytV">If <i class="one-letter">H</i> is a normal subgroup of a finite group <i class="one-letter">G</i> and <nemeth class="inline">⠳⠠⠓⠳⠀⠨⠅⠀⠏⠘⠅</nemeth> for some prime <i class="one-letter">p</i>, show that <i class="one-letter">H</i> is contained in every Sylow <i class="one-letter">p</i>-subgroup of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="CWx">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="eBe">Let <i class="one-letter">G</i> be a group of order <nemeth class="inline">⠏⠘⠆⠐⠟⠘⠆</nemeth>, where <i class="one-letter">p</i> and <i class="one-letter">q</i> are distinct primes such that <nemeth class="inline">⠟⠌⠳⠏⠘⠆⠤⠂</nemeth> and <nemeth class="inline">⠏⠌⠳⠟⠘⠆⠤⠂</nemeth>. Prove that <i class="one-letter">G</i> must be abelian. Find a pair of primes for which this is true.</p>
            <div class="solutions">
              <div class="hint solution-like" id="LUK"><span class="type">Hint</span>:<p id="GtT">Show that <i class="one-letter">G</i> has a normal Sylow <i class="one-letter">p</i>-subgroup of order <nemeth class="inline">⠏⠘⠆</nemeth> and a normal Sylow <i class="one-letter">q</i>-subgroup of order <nemeth class="inline">⠟⠘⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="jdG">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="KIn">Show that a group of order <nemeth class="inline">⠼⠒⠒</nemeth> has only one Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="PkP">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="qPw">Let <i class="one-letter">H</i> be a subgroup of a group <i class="one-letter">G</i>. Prove or disprove that the normalizer of <i class="one-letter">H</i> is normal in <i class="one-letter">G</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Eql"><span class="type">Hint</span>:<p id="mBc">False.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="vrY">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="WWF">Let <i class="one-letter">G</i> be a finite group whose order is divisible by a prime <i class="one-letter">p</i>. Prove that if there is only one Sylow <i class="one-letter">p</i>-subgroup in <i class="one-letter">G</i>, it must be a normal subgroup of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="bzh">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="DdO">Let <i class="one-letter">G</i> be a group of order <nemeth class="inline">⠏⠘⠗</nemeth>, <i class="one-letter">p</i> prime. Prove that <i class="one-letter">G</i> contains a normal subgroup of order <nemeth class="inline">⠏⠘⠗⠤⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="HGq">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="jkX">Suppose that <i class="one-letter">G</i> is a finite group of order <nemeth class="inline">⠏⠘⠝⠐⠅</nemeth>, where <nemeth class="inline">⠅⠀⠐⠅⠀⠏</nemeth>. Show that <i class="one-letter">G</i> must contain a normal subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="nNz">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="Psg">Let <i class="one-letter">H</i> be a subgroup of a finite group <i class="one-letter">G</i>. Prove that <nemeth class="inline">⠛⠠⠝⠷⠠⠓⠾⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠝⠷⠛⠠⠓⠛⠘⠤⠼⠂⠐⠾</nemeth> for any <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="TUI">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="vzp">Prove that a group of order <nemeth class="inline">⠼⠂⠴⠦</nemeth> must have a normal subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="AbR">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="bGy">Classify all the groups of order <nemeth class="inline">⠼⠂⠶⠢</nemeth> up to isomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="gja">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="HNH">Show that every group of order <nemeth class="inline">⠼⠆⠢⠢</nemeth> is cyclic.</p>
            <div class="solutions">
              <div class="hint solution-like" id="BvF"><span class="type">Hint</span>:<p id="SIl">If <i class="one-letter">G</i> is abelian, then <i class="one-letter">G</i> is cyclic, since <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠼⠒⠡⠢⠡⠂⠶</nemeth>. Now look at Example 15.2.6.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Mqj">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="nUQ">Let <i class="one-letter">G</i> have order <nemeth class="inline">⠏⠂⠘⠑⠂⠐⠀⠄⠄⠄⠀⠏⠰⠝⠘⠑⠘⠰⠝⠘</nemeth> and suppose that <i class="one-letter">G</i> has <i class="one-letter">n</i> Sylow <i class="one-letter">p</i>-subgroups <nemeth class="inline">⠠⠏⠂⠠⠀⠄⠄⠄⠀⠠⠀⠠⠏⠰⠝⠐</nemeth> where <nemeth class="inline">⠳⠠⠏⠰⠊⠐⠳⠀⠨⠅⠀⠏⠰⠊⠘⠑⠘⠰⠊</nemeth>. Prove that <i class="one-letter">G</i> is isomorphic to <nemeth class="inline">⠠⠏⠂⠈⠡⠄⠄⠄⠈⠡⠠⠏⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="sxs">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="UbZ">Let <i class="one-letter">P</i> be a normal Sylow <i class="one-letter">p</i>-subgroup of <i class="one-letter">G</i>. Prove that every inner automorphism of <i class="one-letter">G</i> fixes <i class="one-letter">P</i>.</p>
          </article>
          <article class="exercise exercise-like" id="YEB">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="Aji">What is the smallest possible order of a group <i class="one-letter">G</i> such that <i class="one-letter">G</i> is nonabelian and <nemeth class="inline">⠳⠠⠛⠳</nemeth> is odd? Can you find such a group?</p>
          </article>
          <article class="exercise exercise-like" id="ELK">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">The Frattini Lemma.</span>
            </h6>
            <p id="gqr">If <i class="one-letter">H</i> is a normal subgroup of a finite group <i class="one-letter">G</i> and <i class="one-letter">P</i> is a Sylow <i class="one-letter">p</i>-subgroup of <i class="one-letter">H</i>, for each <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> show that there is an <i class="one-letter">h</i> in <i class="one-letter">H</i> such that <nemeth class="inline">⠛⠠⠏⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠓⠠⠏⠓⠘⠤⠼⠂</nemeth>. Also, show that if <i class="one-letter">N</i> is the normalizer of <i class="one-letter">P</i>, then <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠓⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="kST">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="MxA">Show that if the order of <i class="one-letter">G</i> is <nemeth class="inline">⠏⠘⠝⠐⠟</nemeth>, where <i class="one-letter">p</i> and <i class="one-letter">q</i> are primes and <nemeth class="inline">⠏⠀⠨⠂⠀⠟</nemeth>, then <i class="one-letter">G</i> contains a normal subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="Rac">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="sEJ">Prove that the number of distinct conjugates of a subgroup <i class="one-letter">H</i> of a finite group <i class="one-letter">G</i> is <nemeth class="inline">⠈⠷⠠⠛⠒⠀⠠⠝⠷⠠⠓⠾⠈⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="StQ"><span class="type">Hint</span>:<p id="yPu">Define a mapping between the right cosets of <nemeth class="inline">⠠⠝⠷⠠⠓⠾</nemeth> in <i class="one-letter">G</i> and the conjugates of <i class="one-letter">H</i> in <i class="one-letter">G</i> by <nemeth class="inline">⠠⠝⠷⠠⠓⠾⠛⠀⠫⠳⠒⠒⠕⠀⠛⠘⠤⠼⠂⠐⠠⠓⠛</nemeth>. Prove that this map is a bijection.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="xhl">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="YLS">Prove that a Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup of <nemeth class="inline">⠠⠎⠢</nemeth> is isomorphic to <nemeth class="inline">⠠⠙⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="dou">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Another Proof of the Sylow Theorems.</span>
            </h6>
            <ol class="outerlist">
              <li>a. <p id="aIj">Suppose <i class="one-letter">p</i> is prime and <i class="one-letter">p</i> does not divide <i class="one-letter">m</i>. Show that</p><div class="displaymath"><nemeth>⠏⠌⠳⠏⠘⠅⠐⠍⠀⠏⠘⠅</nemeth></div><p data-braille="continuation">.</p></li>
              <li>b. <p id="GPs">Let <nemeth class="inline">⠈⠠⠎</nemeth> denote the set of all <nemeth class="inline">⠏⠘⠅</nemeth> element subsets of <i class="one-letter">G</i>. Show that <i class="one-letter">p</i> does not divide <nemeth class="inline">⠳⠈⠠⠎⠳</nemeth>.</p></li>
              <li>c. <p id="mWB">Define an action of <i class="one-letter">G</i> on <nemeth class="inline">⠈⠠⠎</nemeth> by left multiplication, <nemeth class="inline">⠁⠠⠞⠀⠨⠅⠀⠨⠷⠁⠞⠒⠀⠞⠀⠈⠑⠀⠠⠞⠨⠾</nemeth> for <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠠⠞⠀⠈⠑⠀⠈⠠⠎</nemeth>. Prove that this is a group action.</p></li>
              <li>d. <p id="TdK">Prove <nemeth class="inline">⠏⠌⠳⠳⠈⠠⠕⠰⠠⠞⠐⠳</nemeth> for some <nemeth class="inline">⠠⠞⠀⠈⠑⠀⠈⠠⠎</nemeth>.</p></li>
              <li>e. <p id="zkT">Let <nemeth class="inline">⠨⠷⠠⠞⠂⠠⠀⠄⠄⠄⠀⠠⠀⠠⠞⠰⠥⠐⠨⠾</nemeth> be an orbit such that <nemeth class="inline">⠏⠌⠳⠥</nemeth> and <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠠⠞⠂⠀⠨⠅⠀⠠⠞⠂⠨⠾</nemeth>. Prove that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i> and show that <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠥⠳⠠⠓⠳</nemeth>.</p></li>
              <li>f. <p id="fsc">Show that <nemeth class="inline">⠏⠘⠅</nemeth> divides <nemeth class="inline">⠳⠠⠓⠳</nemeth> and <nemeth class="inline">⠏⠘⠅⠐⠀⠐⠅⠱⠀⠳⠠⠓⠳</nemeth>.</p></li>
              <li>g. <p id="Lzl">Show that <nemeth class="inline">⠳⠠⠓⠳⠀⠨⠅⠀⠳⠈⠠⠕⠰⠠⠞⠐⠳⠀⠐⠅⠱⠀⠏⠘⠅</nemeth>; conclude that therefore <nemeth class="inline">⠏⠘⠅⠐⠀⠨⠅⠀⠳⠠⠓⠳</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="JvD">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="lak">Let <i class="one-letter">G</i> be a group. Prove that <nemeth class="inline">⠠⠛⠘⠄⠐⠀⠨⠅⠀⠨⠨⠷⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂⠐⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛⠨⠨⠾</nemeth> is a normal subgroup of <i class="one-letter">G</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠛⠄</nemeth> is abelian. Find an example to show that <nemeth class="inline">⠨⠷⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂⠐⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛⠨⠾</nemeth> is not necessarily a group.</p>
            <div class="solutions">
              <div class="hint solution-like" id="qWA"><span class="type">Hint</span>:<p id="eWD">Let <nemeth class="inline">⠁⠠⠛⠘⠄⠐⠠⠀⠃⠠⠛⠘⠄⠐⠀⠈⠑⠀⠠⠛⠸⠌⠠⠛⠄</nemeth>. Then <nemeth class="inline">⠷⠁⠠⠛⠘⠄⠐⠾⠷⠃⠠⠛⠘⠄⠐⠾⠀⠨⠅⠀⠁⠃⠠⠛⠘⠄⠐⠀⠨⠅⠀⠁⠃⠷⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂⠐⠃⠁⠾⠠⠛⠘⠄⠐⠀⠨⠅⠀⠷⠁⠃⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂⠐⠾⠃⠁⠠⠛⠘⠄⠐⠀⠨⠅⠀⠃⠁⠠⠛⠄</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="exercises" id="Qqi">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">15.5</span> <span class="title">A Project</span></div>
          <section class="introduction" id="pCM">
            <p id="hvK">The main objective of finite group theory is to classify all possible finite groups up to isomorphism. This problem is very difficult even if we try to classify the groups of order less than or equal to <nemeth class="inline">⠼⠖⠴</nemeth>. However, we can break the problem down into several intermediate problems. This is a challenging project that requires a working knowledge of the group theory you have learned up to this point. Even if you do not complete it, it will teach you a great deal about finite groups. You can use Table 15.5.1 as a guide.</p>
          </section>
          <figure class="table table-like" data-braille="figure-like" id="afG">
            <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">15.5.1<span class="period">.</span></span><span class="space"> </span>Numbers of distinct groups <i class="one-letter">G</i>, <nemeth class="inline">⠳⠠⠛⠳⠀⠐⠅⠱⠀⠼⠖⠴</nemeth></figcaption>
            <table>
              <tr>
                <td class="c m b2 r0 l2 t2 lines">Order</td>
                <td class="c m b2 r2 l0 t2 lines">Number</td>
                <td class="c m b2 r0 l0 t2 lines">Order</td>
                <td class="c m b2 r2 l0 t2 lines">Number</td>
                <td class="c m b2 r0 l0 t2 lines">Order</td>
                <td class="c m b2 r2 l0 t2 lines">Number</td>
                <td class="c m b2 r0 l0 t2 lines">Order</td>
                <td class="c m b2 r2 l0 t2 lines" data-braille="last-cell">Number</td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠖</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠲</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠂</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠖</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠆</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠆</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠶</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠆</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠶</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠒</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠦</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠒</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠦</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠢⠆</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠲</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠔</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠲</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠔</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">?</td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠢</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠴</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠢</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠢</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠴</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠢</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠖</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠂</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠖</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠲</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠂</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">?</td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠶</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠆</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠆</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠶</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠆</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">?</td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠦</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠒</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠦</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠒</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">?</td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠔</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠲</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠔</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠆</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠲</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠂⠢</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠂⠴</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠢</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠆</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠴</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂⠲</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠢</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠆</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠂⠂</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠖</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠆</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠂</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠖</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">?</td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠂⠆</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠢</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠶</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠢</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠆</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠶</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠆</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠂⠒</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠦</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠒</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠦</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">?</td>
              </tr>
              <tr>
                <td class="c m b0 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠂⠲</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">?</td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠆⠔</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠲</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠲</nemeth>
                </td>
                <td class="c m b0 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠢⠔</nemeth>
                </td>
                <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
              </tr>
              <tr>
                <td class="c m b2 r0 l2 t0 lines">
                  <nemeth class="inline">⠼⠂⠢</nemeth>
                </td>
                <td class="c m b2 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠂</nemeth>
                </td>
                <td class="c m b2 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠒⠴</nemeth>
                </td>
                <td class="c m b2 r2 l0 t0 lines">
                  <nemeth class="inline">⠼⠲</nemeth>
                </td>
                <td class="c m b2 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠲⠢</nemeth>
                </td>
                <td class="c m b2 r2 l0 t0 lines">?</td>
                <td class="c m b2 r0 l0 t0 lines">
                  <nemeth class="inline">⠼⠖⠴</nemeth>
                </td>
                <td class="c m b2 r2 l0 t0 lines" data-braille="last-cell">
                  <nemeth class="inline">⠼⠂⠒</nemeth>
                </td>
              </tr>
            </table>
          </figure>
          <article class="exercise exercise-like" id="VJV">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Rht">Find all simple groups <i class="one-letter">G</i> ( <nemeth class="inline">⠳⠠⠛⠳⠀⠐⠅⠱⠀⠼⠖⠴</nemeth>). <em class="emphasis">Do not use the Odd Order Theorem unless you are prepared to prove it.</em></p>
          </article>
          <article class="exercise exercise-like" id="BRe">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="xoC">Find the number of distinct groups <i class="one-letter">G</i>, where the order of <i class="one-letter">G</i> is <i class="one-letter">n</i> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠖⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="hYn">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="dvL">Find the actual groups (up to isomorphism) for each <i class="one-letter">n</i>.</p>
          </article>
        </section>
        <section class="references" id="Sgz">
          <div class="none"><span class="type">References</span> <span class="codenumber">15.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="ynI"><div class="bibitem">[1]</div>  <div class="bibentry"> Edwards, H. “A Short History of the Fields Medal,” <i>Mathematical Intelligencer</i> <b>1</b> (1978), 127–29.</div></article>
          <article class="bib" id="euR"><div class="bibitem">[2]</div>  <div class="bibentry"> Feit, W. and Thompson, J. G. “Solvability of Groups of Odd Order,” <i>Pacific Journal of Mathematics</i> <b>13</b> (1963), 775–1029.</div></article>
          <article class="bib" id="KCa"><div class="bibitem">[3]</div>  <div class="bibentry"> Gallian, J. A. “The Search for Finite Simple Groups,” <i>Mathematics Magazine</i> <b>49</b> (1976), 163–79.</div></article>
          <article class="bib" id="qJj"><div class="bibitem">[4]</div>  <div class="bibentry"> Gorenstein, D. “Classifying the Finite Simple Groups,” <i>Bulletin of the American Mathematical Society</i> <b>14</b> (1986), 1–98.</div></article>
          <article class="bib" id="WQs"><div class="bibitem">[5]</div>  <div class="bibentry"> Gorenstein, D. <i>Finite Groups</i>. AMS Chelsea Publishing, Providence RI, 1968.</div></article>
          <article class="bib" id="CXB"><div class="bibitem">[6]</div>  <div class="bibentry"> Gorenstein, D., Lyons, R., and Solomon, R. <i>The Classification of Finite Simple Groups</i>. American Mathematical Society, Providence RI, 1994.</div></article>
        </section>
        <section class="section" id="Vab">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">15.7</span> <span class="title">Sage</span></div>
          <section class="subsection" id="LGp">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">15.7.1</span> <span class="title">Sylow Subgroups</span></div>
            <p id="jUR">The Sage permutation group method <code class="code-inline tex2jax_ignore">.sylow_subgroup(p)</code> will return a single Sylow <i class="one-letter">p</i>-subgroup. If the prime is not a proper divisor of the group order it returns a subgroup of order <nemeth class="inline">⠏⠘⠴</nemeth>, in other words, a trivial subgroup. So be careful about how you construct your primes. Sometimes, you may only want <em class="emphasis">one</em> such Sylow subgroup, since any two Sylow <i class="one-letter">p</i>-subgroups are conjugate, and hence isomorphic (Theorem 15.1.7). This also means we can create other Sylow <i class="one-letter">p</i>-subgroups by conjugating the one we have. The permutation group method <code class="code-inline tex2jax_ignore">.conjugate(g)</code> will conjugate the group by <code class="code-inline tex2jax_ignore">g</code>.</p>
            <p id="Qca">With repeated conjugations of a single Sylow <i class="one-letter">p</i>-subgroup, we will always create duplicate subgroups. So we need to use a slightly complicated construction to form a list of just the unique subgroups as the list of conjugates. This routine that computes all Sylow <i class="one-letter">p</i>-subgroups can be helpful throughout this section. It could be made much more efficient by conjugating by just one element per coset of the normalizer, but it will be sufficient for our purposes here. Be sure to execute the next cell if you are online, so the function is defined for use later.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">def all_sylow(G, p):
    '''Form the set of all distinct Sylow p-subgroups of G'''
    scriptP = []
    P = G.sylow_subgroup(p)
    for x in G:
        H = P.conjugate(x)
        if not(H in scriptP):
            scriptP.append(H)
    return scriptP
</div>
            </article>
            <p id="wjj">Lets investigate the Sylow subgroups of the dihedral group <nemeth class="inline">⠠⠙⠂⠦</nemeth>. As a group of order <nemeth class="inline">⠼⠒⠖⠀⠨⠅⠀⠼⠆⠘⠆⠐⠡⠒⠘⠆</nemeth>, we know by the First Sylow Theorem that there is a Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup of order <nemeth class="inline">⠼⠲</nemeth> and a Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup of order <nemeth class="inline">⠼⠔</nemeth>. First for <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠆</nemeth>, we obtain one Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup, form all the conjugates, and form a list of non-duplicate subgroups. (These commands take a while to execute, so be patient.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(18)
S2 = G.sylow_subgroup(2); S2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by
[(2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11),
 (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)]
of (Dihedral group of order 36 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">uniqS2 = all_sylow(G, 2)
uniqS2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[Permutation Group with generators
 [(2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11),
 (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
 Permutation Group with generators
 [(1,7)(2,6)(3,5)(8,18)(9,17)(10,16)(11,15)(12,14),
 (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
 Permutation Group with generators
 [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18),
 (1,13)(2,12)(3,11)(4,10)(5,9)(6,8)(14,18)(15,17)],
 Permutation Group with generators
 [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18),
 (1,15)(2,14)(3,13)(4,12)(5,11)(6,10)(7,9)(16,18)],
 Permutation Group with generators
 [(1,3)(4,18)(5,17)(6,16)(7,15)(8,14)(9,13)(10,12),
 (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
 Permutation Group with generators
 [(1,9)(2,8)(3,7)(4,6)(10,18)(11,17)(12,16)(13,15),
 (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)],
 Permutation Group with generators
 [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18),
 (1,11)(2,10)(3,9)(4,8)(5,7)(12,18)(13,17)(14,16)],
 Permutation Group with generators
 [(1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18),
 (1,17)(2,16)(3,15)(4,14)(5,13)(6,12)(7,11)(8,10)],
 Permutation Group with generators
 [(1,5)(2,4)(6,18)(7,17)(8,16)(9,15)(10,14)(11,13),
 (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">len(uniqS2)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">9
</div>
            </article>
            <p id="cqs">The Third Sylow Theorem tells us that for <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠆</nemeth> we would expect <nemeth class="inline">⠼⠂⠠⠀⠼⠒</nemeth> or <nemeth class="inline">⠼⠔</nemeth> Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups, so our computational result of <nemeth class="inline">⠼⠔</nemeth> subgroups is consistent with what the theory predicts. Can you visualize each of these subgroups as symmetries of an <nemeth class="inline">⠼⠂⠦</nemeth>-gon? Notice that we also have many subgroups of order <nemeth class="inline">⠼⠆</nemeth> inside of these subgroups of order <nemeth class="inline">⠼⠲</nemeth>.</p>
            <p id="IxB">Now for the case of <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠒</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(18)
S3 = G.sylow_subgroup(3); S3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by
[(1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18),
 (1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6)]
of (Dihedral group of order 36 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">uniqS3 = all_sylow(G, 3)
uniqS3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[Permutation Group with generators
[(1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18),
(1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6)]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">len(uniqS3)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <p id="oEK">What does the Third Sylow Theorem predict? Just <nemeth class="inline">⠼⠂</nemeth> or <nemeth class="inline">⠼⠲</nemeth> Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroups. Having found just one subgroup computationally, we know that all of the conjugates of the lone Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup are equal. In other words, the Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup is normal in <nemeth class="inline">⠠⠙⠂⠦</nemeth>. Let us check anyway.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S3.is_normal(G)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="ULT">At least one of the subgroups of order <nemeth class="inline">⠼⠒</nemeth> contained in this Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup should be obvious by looking at the orders of the generators, and then you may even notice that the generators given could be reduced, and one is a power of the other.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S3.is_cyclic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="ATc">Remember that there are many other subgroups, of other orders. For example, can you construct a subgroup of order <nemeth class="inline">⠼⠖⠀⠨⠅⠀⠼⠆⠡⠒</nemeth> in <nemeth class="inline">⠠⠙⠂⠦</nemeth>?</p>
          </section>
          <section class="subsection" id="rNy">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">15.7.2</span> <span class="title">Normalizers</span></div>
            <p id="hal">A new command that is relevant to this section is the construction of a normalizer. The Sage command <code class="code-inline tex2jax_ignore">G.normalizer(H)</code> will return the subgroup of <code class="code-inline tex2jax_ignore">G</code> containing elements that normalize the subgroup <code class="code-inline tex2jax_ignore">H</code>. We illustrate its use with the Sylow subgroups from above.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(18)
S2 = G.sylow_subgroup(2)
S3 = G.sylow_subgroup(3)
N2 = G.normalizer(S2); N2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by
[(2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11),
 (1,10)(2,11)(3,12)(4,13)(5,14)(6,15)(7,16)(8,17)(9,18)]
of (Dihedral group of order 36 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N2 == S2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N3 = G.normalizer(S3); N3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by
[(2,18)(3,17)(4,16)(5,15)(6,14)(7,13)(8,12)(9,11),
 (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
 (1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18),
 (1,15,11,7,3,17,13,9,5)(2,16,12,8,4,18,14,10,6)]
of (Dihedral group of order 36 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N3 == G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="Nhu">The normalizer of a subgroup always contains the whole subgroup, so the normalizer of <code class="code-inline tex2jax_ignore">S2</code> is as small as possible. We already knew <code class="code-inline tex2jax_ignore">S3</code> is normal in <code class="code-inline tex2jax_ignore">G</code>, so it is no surprise that its normalizer is as big as possible — every element of <code class="code-inline tex2jax_ignore">G</code> normalizes <code class="code-inline tex2jax_ignore">S3</code>. Let us compute a normalizer in <nemeth class="inline">⠠⠙⠂⠦</nemeth> that is more “interesting.”</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(18)
a = G("(1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18)")
b = G("(1,5)(2,4)(6,18)(7,17)(8,16)(9,15)(10,14)(11,13)")
H = G.subgroup([a, b])
H.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N = G.normalizer(H)
N
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by
[(1,2)(3,18)(4,17)(5,16)(6,15)(7,14)(8,13)(9,12)(10,11),
 (1,5)(2,4)(6,18)(7,17)(8,16)(9,15)(10,14)(11,13),
 (1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18)]
of (Dihedral group of order 36 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">12
</div>
            </article>
            <p id="toD">So for this subgroup of order <nemeth class="inline">⠼⠖</nemeth>, the normalizer is strictly bigger than the subgroup, but still strictly smaller than the whole group (and hence not normal in the dihedral group). Trivially, a subgroup is normal in its normalizer:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.is_normal(G)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.is_normal(N)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
          </section>
          <section class="subsection" id="XUH">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">15.7.3</span> <span class="title">Finite Simple Groups</span></div>
            <p id="ZvM">We saw earlier Sage's permutation group method <code class="code-inline tex2jax_ignore">.is_simple()</code>. Example 15.2.8 tells us that a group of order <nemeth class="inline">⠼⠖⠲</nemeth> is never simple. The dicyclic group <code class="code-inline tex2jax_ignore">DiCyclicGroup(16)</code> is a non-abelian group of <nemeth class="inline">⠼⠖⠲</nemeth>, so we can test this method on this group. It turns out this group has many normal subgroups — the list will always contain the trivial subgroup and the group itself, so any number exceeding <nemeth class="inline">⠼⠆</nemeth> indicates a non-trivial normal subgroup.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">DC=DiCyclicGroup(16)
DC.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">64
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">DC.is_simple()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">ns = DC.normal_subgroups()
len(ns)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">9
</div>
            </article>
            <p id="FCV">Here is a rather interesting group, one of the <nemeth class="inline">⠼⠆⠖</nemeth> sporadic simple groups, known as the Higman-Sims group, <nemeth class="inline">⠠⠓⠠⠎</nemeth>. The generators used below come from the representation on 100 points in <abbr class="acronym">GAP</abbr> format, available off of <a class="external" href="http://web.mat.bham.ac.uk/atlas/v2.0/spor/HS/" target="_blank">web.mat.bham.ac.uk/atlas/v2.0/spor/HS/</a>. Two generators of just order <nemeth class="inline">⠼⠆</nemeth> and order <nemeth class="inline">⠼⠢</nemeth> (as you can esily see), generating exactly <nemeth class="inline">⠼⠲⠲⠒⠢⠆⠴⠴⠴</nemeth> elements, but no normal subgroups. Amazing.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(100)
a = G([(1,60),  (2,72),  (3,81),  (4,43),  (5,11),  (6,87),
        (7,34),  (9,63),  (12,46), (13,28), (14,71), (15,42),
        (16,97), (18,57), (19,52), (21,32), (23,47), (24,54),
        (25,83), (26,78), (29,89), (30,39), (33,61), (35,56),
        (37,67), (44,76), (45,88), (48,59), (49,86), (50,74),
        (51,66), (53,99), (55,75), (62,73), (65,79), (68,82),
        (77,92), (84,90), (85,98), (94,100)])
b = G([(1,86,13,10,47),  (2,53,30,8,38),
        (3,40,48,25,17),  (4,29,92,88,43),   (5,98,66,54, 65),
        (6,27,51,73,24),  (7,83,16,20,28),   (9,23,89,95,61),
        (11,42,46,91,32), (12,14, 81,55,68), (15,90,31,56,37),
        (18,69,45,84,76), (19,59,79,35,93),  (21,22,64,39,100),
        (26,58,96,85,77), (33,52,94,75,44),  (34,62,87,78,50),
        (36,82,60,74,72), (41,80,70,49,67),  (57,63,71,99,97)])
a.order(), b.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2, 5)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">HS = G.subgroup([a, b])
HS.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">44352000
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">HS.is_simple()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="lKe">We saw this group earlier in the exercises for Chapter 14 on group actions, where it was the single non-trivial normal subgroup of the automorphism group of the Higman-Sims graph, hence its name.</p>
          </section>
          <section class="subsection" id="EbQ">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">15.7.4</span> <span class="title"><abbr class="acronym">GAP</abbr> Console and Interface</span></div>
            <p id="RRn">This concludes our exclusive study of group theory, though we will be using groups some in the subsequent sections. As we have remarked, much of Sage's computation with groups is performed by the open source program, “Groups, Algorithms, and Programming,” which is better know as simply <abbr class="acronym">GAP</abbr>. If after this course you outgrow Sage's support for groups, then learning <abbr class="acronym">GAP</abbr> would be your next step as a group theorist. Every copy of Sage includes a copy of <abbr class="acronym">GAP</abbr> and is easy to see which version of <abbr class="acronym">GAP</abbr> is included:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">gap.version()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">'4.10.2'
</div>
            </article>
            <p id="xYw">You can interact with <abbr class="acronym">GAP</abbr> in Sage in several ways. The most direct is by creating a permutation group via Sage's <code class="code-inline tex2jax_ignore">gap()</code> command.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = gap('Group( (1,2,3,4,5,6), (1,3,5) )')
G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Group( [ (1,2,3,4,5,6), (1,3,5) ] )
</div>
            </article>
            <p id="efF">Now we can use most any <abbr class="acronym">GAP</abbr> command with <code class="code-inline tex2jax_ignore">G</code>, via the convention that most <abbr class="acronym">GAP</abbr> commands expect a group as the first argument, and we instead provide the group by using the object-oriented<code class="code-inline tex2jax_ignore">G.</code> syntax. If you consult the <abbr class="acronym">GAP</abbr> documentation you will see that <code class="code-inline tex2jax_ignore">Center</code> is a <abbr class="acronym">GAP</abbr> command that expects a group as its lone argument, and <code class="code-inline tex2jax_ignore">Centralizer</code> is a <abbr class="acronym">GAP</abbr> command that expects two arguments — a group and then a group element.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.Center()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Group( [ ( 1, 3, 5)( 2, 4, 6) ] )
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.Centralizer('(1, 3, 5)')
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Group( [ (1,3,5), (2,4,6), (1,3,5)(2,4,6) ] )
</div>
            </article>
            <p id="KmO">If you use the Sage Notebook interface you can set the first line of a compute cell to <code class="code-inline tex2jax_ignore">%gap</code> and the entire cell will be interpreted as if you were interacting directly with <abbr class="acronym">GAP</abbr>. This means you would now use <abbr class="acronym">GAP</abbr>'s syntax, which you can see above is slightly different than Sage's universal syntax. You can also use the drop-down box at the top of a worksheet, and select <code class="code-inline tex2jax_ignore">gap</code> as the system (rather than <code class="code-inline tex2jax_ignore">sage</code>) and your whole worksheet will be interpreted as <abbr class="acronym">GAP</abbr> commands. Here is one simple example, which you should be able to evaluate in your current worksheet. This particular example will not run properly in a Sage Cell in a web page version of this section.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">%gap
G := Group( (1,2,3,4,5,6), (1,3,5) );
Centralizer(G, (1,3,5));
</div>
            </article>
            <p id="qtX">Notice that</p>
            <ul class="outerlist">
              <li>• <p id="IEF">We do not need to wrap the individual permutations in as many quotation marks as we do in Sage.</p></li>
              <li>• <p id="oLO">Assignment is <code class="code-inline tex2jax_ignore">:=</code> not <code class="code-inline tex2jax_ignore">=</code>. If you forget the colon, you will get an error message such as <code class="code-inline tex2jax_ignore">Variable: 'G' must have a value</code></p></li>
              <li>• <p id="USX">A line <em class="emphasis">must</em> end with a semi-colon. If you forget, several lines will be merged together.</p></li>
            </ul>
            <p id="WBg">You can get help about <abbr class="acronym">GAP</abbr> commands with a command such as the following, though you will soon see that <abbr class="acronym">GAP</abbr> assumes you know a lot more algebra than Sage assumes you know.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">print(gap.help('SymmetricGroup', pager=False))
</div>
            </article>
            <p id="CIp">In the command-line version of Sage, you can also use the <abbr class="acronym">GAP</abbr> “console.” Again, you need to use <abbr class="acronym">GAP</abbr> syntax, and you do not have many of the conveniences of the Sage notebook. It is also good to know in advance that <code class="code-inline tex2jax_ignore">quit;</code> is how you can leave the <abbr class="acronym">GAP</abbr> console and get back to Sage. If you run Sage at the command-line, use the command <code class="code-inline tex2jax_ignore">gap_console()</code> to start <abbr class="acronym">GAP</abbr> running.</p>
            <p id="iPy">It is a comfort to know that with Sage you get a complete copy of <abbr class="acronym">GAP</abbr>, installed and all ready to run. However, this is not a tutorial on <abbr class="acronym">GAP</abbr>, so consult the documentation available at the main <abbr class="acronym">GAP</abbr> website: <a class="external" href="http://www.gap-system.org" target="_blank">www.gap-system.org</a> to learn how to get the most out of <abbr class="acronym">GAP</abbr>.</p>
          </section>
        </section>
        <section class="exercises" id="wxr">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">15.8</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="Ofw">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="JCU">This exercise verifies Theorem 15.2.5. The commutator subgroup is computed with the permutation group method <code class="code-inline tex2jax_ignore">.commutator()</code>. For the dihedral group of order <nemeth class="inline">⠼⠲⠴</nemeth>, <nemeth class="inline">⠠⠙⠆⠴</nemeth> (<code class="code-inline tex2jax_ignore">DihedralGroup(20)</code> in Sage), compute the commutator subgroup and form the quotient with the dihedral group. Then verify that this quotient is abelian. Can you identify the quotient group exactly (in other words, up to isomorphism)?</p>
          </article>
          <article class="exercise exercise-like" id="umF">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="pKd">For each possible prime, find all of the distinct Sylow <i class="one-letter">p</i>-subgroups of the alternating group <nemeth class="inline">⠠⠁⠢</nemeth>. Confirm that your results are consistent with the Third Sylow Theorem for each prime. We know that <nemeth class="inline">⠠⠁⠢</nemeth> is a simple group. Explain how this would explain or predict some aspects of your answers.</p>
            <p id="VRm">Count the number of distinct elements contained in the union of all the Sylow subgroups you just found. What is interesting about this count?</p>
          </article>
          <article class="exercise exercise-like" id="atO">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="BYv">For the dihedral group <nemeth class="inline">⠠⠙⠒⠖</nemeth> (symmetries of a <nemeth class="inline">⠼⠒⠖</nemeth>-gon) and each possible prime, determine the possibilities for the number of distinct Sylow <i class="one-letter">p</i>-subgroups as predicted by the Third Sylow Theorem (Theorem 15.1.8). Now compute the actual number of distinct Sylow <i class="one-letter">p</i>-subgroups for each prime and comment on the result.</p>
            <p id="ifE">It can be proved that <em class="emphasis">any group</em> with order <nemeth class="inline">⠼⠶⠆</nemeth> is not a simple group, using techniques such as those used in the later examples in this chapter. Discuss this result in the context of your computations with Sage.</p>
          </article>
          <article class="exercise exercise-like" id="GAX">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="OmN">This exercise verifies Lemma 15.1.6. Let <i class="one-letter">G</i> be the dihedral group of order <nemeth class="inline">⠼⠒⠖</nemeth>, <nemeth class="inline">⠠⠙⠂⠦</nemeth>. Let <i class="one-letter">H</i> be the one Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup. Let <i class="one-letter">K</i> be the subgroup of order <nemeth class="inline">⠼⠖</nemeth> generated by the two permutations <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code> given below. First, form a list of the distinct conjugates of <i class="one-letter">K</i> by the elements of <i class="one-letter">H</i>, and determine the number of subgroups in this list. Compare this with the index given in the statement of the lemma, employing a single (long) statement making use of the <code class="code-inline tex2jax_ignore">.order()</code>, <code class="code-inline tex2jax_ignore">.normalizer()</code> and <code class="code-inline tex2jax_ignore">.intersection()</code> methods with <code class="code-inline tex2jax_ignore">G</code>, <i class="one-letter">H</i> and <i class="one-letter">K</i>, <em class="emphasis">only</em>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = DihedralGroup(18)
a = G("(1,7,13)(2,8,14)(3,9,15)(4,10,16)(5,11,17)(6,12,18)")
b = G("(1,5)(2,4)(6,18)(7,17)(8,16)(9,15)(10,14)(11,13)")
</div>
            </article>
          </article>
          <article class="exercise exercise-like" id="mIg">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="utW">Example 15.2.11 shows that every group of order <nemeth class="inline">⠼⠲⠦</nemeth> has a normal subgroup. The dicyclic groups are an infinite family of non-abelian groups with order <nemeth class="inline">⠼⠲⠝</nemeth>, which includes the quaternions (the case of <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠆</nemeth>). So the permutation group <code class="code-inline tex2jax_ignore">DiCyclicGroup(12)</code> has order 48. Use Sage to follow the logic of the proof in Example 15.2.11 and construct a normal subgroup in this group. (In other words, do not just ask for a list of the normal subgroups from Sage, but instead trace through the implications in the example to arrive at a normal subgroup, and then check your answer.)</p>
          </article>
          <article class="exercise exercise-like" id="SPp">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="aBf">The proofs of the Second and Third Sylow Theorems (Theorem 15.1.7, Theorem 15.1.8) employ a group action on sets of Sylow <i class="one-letter">p</i>-subgroups, For the Second Theorem, the list is proposed as incomplete and is proved to be <em class="emphasis">all</em> of the Sylow <i class="one-letter">p</i>-subgroups. In this exercise we will see how these actions behave, and how they are different when we use different groups acting on the same set.</p>
            <p id="GIo">Construct the six Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups of the alternating group <nemeth class="inline">⠠⠁⠢</nemeth>. This will be the set of objects for both of our actions. Conjugating one of these Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups by an element of <nemeth class="inline">⠠⠁⠢</nemeth> will produce another Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroup, and so can be used to create a group action. For such an action, from each group element form a Sage permutation of the subgroups by numbering the six subgroups and using these integers as markers for the subgroups. You will find the Python list method <code class="code-inline tex2jax_ignore">.index()</code> very helpful. Now use all of these permutations to generate a permutation group (a subgroup of <nemeth class="inline">⠠⠎⠖</nemeth>). Finally, use permutation group methods for orbits and stabilisers, etc. to explore the actions.</p>
            <p id="mPx">For the first action, use all of <nemeth class="inline">⠠⠁⠢</nemeth> as the group. Show that the resulting action is transitive. In other words, there is exactly one single orbit.</p>
            <p id="SWG">For the second action, use just one of the Sylow <nemeth class="inline">⠼⠢</nemeth>-subgroups as the group. Write the class equation for this action in a format that suggests the “congruent to <nemeth class="inline">⠼⠂</nemeth> mod <i class="one-letter">p</i>” part of the conclusion of the Third Theorem.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="bhz">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">16</span> <span class="title">Rings</span></div>
        <section class="introduction" id="VGI">
          <p id="BsF">Up to this point we have studied sets with a single binary operation satisfying certain axioms, but we are often more interested in working with sets that have two binary operations. For example, one of the most natural algebraic structures to study is the integers with the operations of addition and multiplication. These operations are related to one another by the distributive property. If we consider a set with two such related binary operations satisfying certain axioms, we have an algebraic structure called a ring. In a ring we add and multiply elements such as real numbers, complex numbers, matrices, and functions.</p>
        </section>
        <section class="section" id="kBl">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">16.1</span> <span class="title">Rings</span></div>
          <p id="wXh">A nonempty set <i class="one-letter">R</i> is a <dfn class="terminology">ring</dfn> if it has two closed binary operations, addition and multiplication, satisfying the following conditions.</p>
          <ol class="outerlist">
            <li>1. <p id="mcq"><nemeth class="inline">⠁⠬⠃⠀⠨⠅⠀⠃⠬⠁</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠗</nemeth>.</p></li>
            <li>2. <p id="Sjz"><nemeth class="inline">⠷⠁⠬⠃⠾⠬⠉⠀⠨⠅⠀⠁⠬⠷⠃⠬⠉⠾</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠗</nemeth>.</p></li>
            <li>3. <p id="yqI">There is an element <nemeth class="inline">⠼⠴</nemeth> in <i class="one-letter">R</i> such that <nemeth class="inline">⠁⠬⠴⠀⠨⠅⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth>.</p></li>
            <li>4. <p id="exR">For every element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth>, there exists an element <nemeth class="inline">⠤⠁</nemeth> in <i class="one-letter">R</i> such that <nemeth class="inline">⠁⠬⠷⠤⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
            <li>5. <p id="KFa"><nemeth class="inline">⠷⠁⠃⠾⠉⠀⠨⠅⠀⠁⠷⠃⠉⠾</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠗</nemeth>.</p></li>
            <li>6. <p id="qMj">For <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠗</nemeth>,</p><div class="displaymath"><nemeth>⠁⠷⠃⠬⠉⠾⠀⠀⠨⠅⠀⠁⠃⠬⠁⠉⠀⠷⠁⠬⠃⠾⠉⠀⠀⠨⠅⠀⠁⠉⠬⠃⠉</nemeth></div><p data-braille="continuation">.</p></li>
          </ol>
          <p data-braille="continuation">This last condition, the distributive axiom, relates the binary operations of addition and multiplication. Notice that the first four axioms simply require that a ring be an abelian group under addition, so we could also have defined a ring to be an abelian group <nemeth class="inline">⠷⠠⠗⠠⠀⠬⠾</nemeth> together with a second binary operation satisfying the fifth and sixth conditions given above.</p>
          <p id="deq">If there is an element <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠗</nemeth> such that <nemeth class="inline">⠼⠂⠀⠌⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠼⠂⠁⠀⠨⠅⠀⠁⠐⠂⠀⠨⠅⠀⠁</nemeth> for each element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth>, we say that <i class="one-letter">R</i> is a ring with <dfn class="terminology">unity</dfn>  or <dfn class="terminology">identity</dfn>.  A ring <i class="one-letter">R</i> for which <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠃⠁</nemeth> for all <nemeth class="inline">⠁⠠⠀⠃</nemeth> in <i class="one-letter">R</i> is called a <dfn class="terminology">commutative ring</dfn>.  A commutative ring <i class="one-letter">R</i> with identity is called an <dfn class="terminology">integral domain</dfn>  if, for every <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠗</nemeth> such that <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠼⠴</nemeth>, either <nemeth class="inline">⠁⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠃⠀⠨⠅⠀⠼⠴</nemeth>. A <dfn class="terminology">division ring</dfn>  is a ring <i class="one-letter">R</i>, with an identity, in which every nonzero element in <i class="one-letter">R</i> is a <dfn class="terminology">unit</dfn>;  that is, for each <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth> with <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>, there exists a unique element <nemeth class="inline">⠁⠘⠤⠼⠂</nemeth> such that <nemeth class="inline">⠁⠘⠤⠼⠂⠐⠁⠀⠨⠅⠀⠁⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠼⠂</nemeth>. A commutative division ring is called a <dfn class="terminology">field</dfn>.  The relationship among rings, integral domains, division rings, and fields is shown in Figure 16.1.1.</p>
          <figure class="figure figure-like" data-braille="figure-like" id="vRO">
            <div data-braille="image">
              <p>Image: A graph with rings at the top level connected to commutative rings and rings with identity at the second level. Commutative rings is connected to integral domains on the third level while rings with identity is connected to both integral domains and division rings on the third level.  Integral domains and division rings are connected to fields on the bottom level.</p>
              <p>ID: rings-types</p>
            </div>
            <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">16.1.1<span class="period">.</span></span><span class="space"> </span>Types of rings</figcaption>
          </figure>
          <article class="example example-like" data-braille="example-like" id="eqA">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="xOf">As we have mentioned previously, the integers form a ring. In fact, <nemeth class="inline">⠸⠠⠵</nemeth> is an integral domain. Certainly if <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠼⠴</nemeth> for two integers <i class="one-letter">a</i> and <i class="one-letter">b</i>, either <nemeth class="inline">⠁⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠃⠀⠨⠅⠀⠼⠴</nemeth>. However, <nemeth class="inline">⠸⠠⠵</nemeth> is not a field. There is no integer that is the multiplicative inverse of <nemeth class="inline">⠼⠆</nemeth>, since <nemeth class="inline">⠼⠂⠸⠌⠆</nemeth> is not an integer. The only integers with multiplicative inverses are <nemeth class="inline">⠼⠂</nemeth> and <nemeth class="inline">⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="KxJ">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="dVo">Under the ordinary operations of addition and multiplication, all of the familiar number systems are rings: the rationals, <nemeth class="inline">⠸⠠⠟</nemeth>; the real numbers, <nemeth class="inline">⠸⠠⠗</nemeth>; and the complex numbers, <nemeth class="inline">⠸⠠⠉</nemeth>. Each of these rings is a field.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="qES">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="Kcx">We can define the product of two elements <i class="one-letter">a</i> and <i class="one-letter">b</i> in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> by <nemeth class="inline">⠁⠃⠷⠍⠕⠙⠀⠝⠾</nemeth>. For instance, in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>, <nemeth class="inline">⠼⠢⠡⠶⠀⠸⠇⠀⠼⠂⠂⠷⠍⠕⠙⠀⠂⠆⠾</nemeth>. This product makes the abelian group <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> into a ring. Certainly <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> is a commutative ring; however, it may fail to be an integral domain. If we consider <nemeth class="inline">⠼⠒⠡⠲⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠂⠆⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>, it is easy to see that a product of two nonzero elements in the ring can be equal to zero.</p>
          </article>
          <p id="Jlz">A nonzero element <i class="one-letter">a</i> in a ring <i class="one-letter">R</i> is called a <dfn class="terminology">zero divisor</dfn>  if there is a nonzero element <i class="one-letter">b</i> in <i class="one-letter">R</i> such that <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠼⠴</nemeth>. In the previous example, <nemeth class="inline">⠼⠒</nemeth> and <nemeth class="inline">⠼⠲</nemeth> are zero divisors in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="WMb">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="qjG">In calculus the continuous real-valued functions on an interval <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾</nemeth> form a commutative ring. We add or multiply two functions by adding or multiplying the values of the functions. If <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠉⠕⠎⠀⠭</nemeth>, then <nemeth class="inline">⠷⠋⠬⠛⠾⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾⠬⠛⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆⠐⠬⠉⠕⠎⠀⠭</nemeth> and <nemeth class="inline">⠷⠋⠛⠾⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾⠛⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆⠐⠉⠕⠎⠀⠭</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="CTk">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.6</span>
              <span class="period">.</span>
            </h6>
            <p id="WqP">The <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠗</nemeth> form a ring under the usual operations of matrix addition and multiplication. This ring is noncommutative, since it is usually the case that <nemeth class="inline">⠠⠁⠠⠃⠀⠌⠨⠅⠀⠠⠃⠠⠁</nemeth>. Also, notice that we can have <nemeth class="inline">⠠⠁⠠⠃⠀⠨⠅⠀⠼⠴</nemeth> when neither <i class="one-letter">A</i> nor <i class="one-letter">B</i> is zero.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="jat">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="CxY">For an example of a noncommutative division ring, let</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠸⠊⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠠⠀⠸⠚⠀⠨⠅⠀⠠⠷⠼⠴⠀⠊⠠⠾⠀⠠⠷⠊⠀⠴⠠⠾⠠⠀⠸⠅⠀⠨⠅⠀⠠⠷⠊⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠊⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>. These elements satisfy the following relations:</p>
            <div class="displaymath">
              <nemeth>⠸⠊⠘⠆⠐⠀⠨⠅⠀⠸⠚⠘⠆⠐⠀⠀⠨⠅⠀⠸⠅⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂⠀⠸⠊⠸⠚⠀⠀⠨⠅⠀⠸⠅⠀⠸⠚⠸⠅⠀⠀⠨⠅⠀⠸⠊⠀⠸⠅⠸⠊⠀⠀⠨⠅⠀⠸⠚⠀⠸⠚⠸⠊⠀⠀⠨⠅⠀⠤⠸⠅⠀⠸⠅⠸⠚⠀⠀⠨⠅⠀⠤⠸⠊⠀⠸⠊⠸⠅⠀⠀⠨⠅⠀⠤⠸⠚</nemeth>
            </div>
            <p data-braille="continuation">. Let <nemeth class="inline">⠸⠠⠓</nemeth> consist of elements of the form <nemeth class="inline">⠁⠬⠃⠸⠊⠬⠉⠸⠚⠬⠙⠸⠅</nemeth>, where <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠠⠀⠙</nemeth> are real numbers. Equivalently, <nemeth class="inline">⠸⠠⠓</nemeth> can be considered to be the set of all <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices of the form </p>
            <div class="displaymath">
              <nemeth>⠠⠷⠨⠁⠀⠨⠃⠠⠾⠀⠠⠷⠤⠐⠨⠃⠣⠱⠻⠀⠐⠨⠁⠣⠱⠻⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠁⠬⠙⠊</nemeth> and <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠃⠬⠉⠊</nemeth> are complex numbers. We can define addition and multiplication on <nemeth class="inline">⠸⠠⠓</nemeth> either by the usual matrix operations or in terms of the generators <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠸⠊</nemeth>, <nemeth class="inline">⠸⠚</nemeth>, and <nemeth class="inline">⠸⠅</nemeth>:</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠂⠬⠃⠂⠸⠊⠬⠉⠂⠸⠚⠬⠙⠂⠸⠅⠾⠬⠷⠁⠆⠬⠃⠆⠸⠊⠬⠉⠆⠸⠚⠬⠙⠆⠸⠅⠾⠀⠀⠨⠅⠀⠷⠁⠂⠬⠁⠆⠾⠬⠷⠃⠂⠬⠃⠆⠾⠸⠊⠬⠷⠉⠂⠬⠉⠆⠾⠸⠚⠬⠷⠙⠂⠬⠙⠆⠾⠸⠅</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠂⠬⠃⠂⠸⠊⠬⠉⠂⠸⠚⠬⠙⠂⠸⠅⠾⠷⠁⠆⠬⠃⠆⠸⠊⠬⠉⠆⠸⠚⠬⠙⠆⠸⠅⠾⠀⠨⠅⠀⠨⠁⠬⠨⠃⠸⠊⠬⠨⠛⠸⠚⠬⠨⠙⠸⠅</nemeth>
            </div>
            <p data-braille="continuation">, where</p>
            <div class="displaymath">
              <nemeth>⠨⠁⠀⠀⠨⠅⠀⠁⠂⠁⠆⠤⠃⠂⠃⠆⠤⠉⠂⠉⠆⠤⠙⠂⠙⠆⠀⠨⠃⠀⠀⠨⠅⠀⠁⠂⠃⠆⠬⠁⠆⠃⠂⠬⠉⠂⠙⠆⠤⠙⠂⠉⠆⠀⠨⠛⠀⠀⠨⠅⠀⠁⠂⠉⠆⠤⠃⠂⠙⠆⠬⠉⠂⠁⠆⠬⠙⠂⠃⠆⠀⠨⠙⠀⠀⠨⠅⠀⠁⠂⠙⠆⠬⠃⠂⠉⠆⠤⠉⠂⠃⠆⠬⠙⠂⠁⠆</nemeth>
            </div>
            <p data-braille="continuation">. Though multiplication looks complicated, it is actually a straightforward computation if we remember that we just add and multiply elements in <nemeth class="inline">⠸⠠⠓</nemeth> like polynomials and keep in mind the relationships between the generators <nemeth class="inline">⠸⠊</nemeth>, <nemeth class="inline">⠸⠚</nemeth>, and <nemeth class="inline">⠸⠅</nemeth>. The ring <nemeth class="inline">⠸⠠⠓</nemeth> is called the ring of <dfn class="terminology">quaternions</dfn>. </p>
            <p id="iFh">To show that the quaternions are a division ring, we must be able to find an inverse for each nonzero element. Notice that</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠸⠊⠬⠉⠸⠚⠬⠙⠸⠅⠾⠷⠁⠤⠃⠸⠊⠤⠉⠸⠚⠤⠙⠸⠅⠾⠀⠨⠅⠀⠁⠘⠆⠐⠬⠃⠘⠆⠐⠬⠉⠘⠆⠐⠬⠙⠘⠆</nemeth>
            </div>
            <p data-braille="continuation">. This element can be zero only if <i class="one-letter">a</i>, <i class="one-letter">b</i>, <i class="one-letter">c</i>, and <i class="one-letter">d</i> are all zero. So if <nemeth class="inline">⠁⠬⠃⠸⠊⠬⠉⠸⠚⠬⠙⠸⠅⠀⠌⠨⠅⠀⠼⠴</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠸⠊⠬⠉⠸⠚⠬⠙⠸⠅⠾⠷⠹⠁⠤⠃⠸⠊⠤⠉⠸⠚⠤⠙⠸⠅⠌⠁⠘⠆⠐⠬⠃⠘⠆⠐⠬⠉⠘⠆⠐⠬⠙⠘⠆⠐⠼⠾⠀⠨⠅⠀⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="proposition theorem-like" data-braille="theorem-like" id="BdX">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.8</span>
              <span class="period">.</span>
            </h6>
            <p id="UBC">Let <i class="one-letter">R</i> be a ring with <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠗</nemeth>. Then</p>
            <ol class="outerlist">
              <li>1. <p id="WTs"><nemeth class="inline">⠁⠐⠴⠀⠨⠅⠀⠼⠴⠁⠀⠨⠅⠀⠼⠴</nemeth>;</p></li>
              <li>2. <p id="DaB"><nemeth class="inline">⠁⠷⠤⠃⠾⠀⠨⠅⠀⠷⠤⠁⠾⠃⠀⠨⠅⠀⠤⠁⠃</nemeth>;</p></li>
              <li>3. <p id="jhK"><nemeth class="inline">⠷⠤⠁⠾⠷⠤⠃⠾⠀⠨⠅⠀⠁⠃</nemeth>.</p></li>
            </ol>
          </article>
          <article class="hiddenproof" data-braille="proof" id="LhD">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="YBB">To prove (1), observe that</p>
            <div class="displaymath">
              <nemeth>⠁⠐⠴⠀⠨⠅⠀⠁⠷⠴⠬⠴⠾⠀⠨⠅⠀⠁⠐⠴⠬⠁⠐⠴⠆</nemeth>
            </div>
            <p data-braille="continuation">hence, <nemeth class="inline">⠁⠐⠴⠀⠨⠅⠀⠼⠴</nemeth>. Similarly, <nemeth class="inline">⠼⠴⠁⠀⠨⠅⠀⠼⠴</nemeth>. For (2), we have <nemeth class="inline">⠁⠃⠬⠁⠷⠤⠃⠾⠀⠨⠅⠀⠁⠷⠃⠤⠃⠾⠀⠨⠅⠀⠁⠼⠴⠀⠨⠅⠀⠼⠴</nemeth>; consequently, <nemeth class="inline">⠤⠁⠃⠀⠨⠅⠀⠁⠷⠤⠃⠾</nemeth>. Similarly, <nemeth class="inline">⠤⠁⠃⠀⠨⠅⠀⠷⠤⠁⠾⠃</nemeth>. Part (3) follows directly from (2) since <nemeth class="inline">⠷⠤⠁⠾⠷⠤⠃⠾⠀⠨⠅⠀⠤⠷⠁⠷⠤⠃⠾⠾⠀⠨⠅⠀⠤⠷⠤⠁⠃⠾⠀⠨⠅⠀⠁⠃</nemeth>.</p>
          </article>
          <p id="psI">Just as we have subgroups of groups, we have an analogous class of substructures for rings. A <dfn class="terminology">subring</dfn>  <i class="one-letter">S</i> of a ring <i class="one-letter">R</i> is a subset <i class="one-letter">S</i> of <i class="one-letter">R</i> such that <i class="one-letter">S</i> is also a ring under the inherited operations from <i class="one-letter">R</i>.</p>
          <article class="example example-like" data-braille="example-like" id="PhC">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.9</span>
              <span class="period">.</span>
            </h6>
            <p id="OMq">The ring <nemeth class="inline">⠝⠸⠠⠵</nemeth> is a subring of <nemeth class="inline">⠸⠠⠵</nemeth>. Notice that even though the original ring may have an identity, we do not require that its subring have an identity. We have the following chain of subrings:</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠀⠸⠐⠅⠀⠸⠠⠟⠀⠸⠐⠅⠀⠸⠠⠗⠀⠸⠐⠅⠀⠸⠠⠉</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="VzR">The following proposition gives us some easy criteria for determining whether or not a subset of a ring is indeed a subring. (We will leave the proof of this proposition as an exercise.)</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="hlg">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.10</span>
              <span class="period">.</span>
            </h6>
            <p id="AIL">Let <i class="one-letter">R</i> be a ring and <i class="one-letter">S</i> a subset of <i class="one-letter">R</i>. Then <i class="one-letter">S</i> is a subring of <i class="one-letter">R</i> if and only if the following conditions are satisfied.</p>
            <ol class="outerlist">
              <li>1. <p id="vwc"><nemeth class="inline">⠠⠎⠀⠌⠨⠅⠀⠸⠴</nemeth>.</p></li>
              <li>2. <p id="bDl"><nemeth class="inline">⠗⠎⠀⠈⠑⠀⠠⠎</nemeth> for all <nemeth class="inline">⠗⠠⠀⠎⠀⠈⠑⠀⠠⠎</nemeth>.</p></li>
              <li>3. <p id="HKu"><nemeth class="inline">⠗⠤⠎⠀⠈⠑⠀⠠⠎</nemeth> for all <nemeth class="inline">⠗⠠⠀⠎⠀⠈⠑⠀⠠⠎</nemeth>.</p></li>
            </ol>
          </article>
          <article class="example example-like" data-braille="example-like" id="voL">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.1.11</span>
              <span class="period">.</span>
            </h6>
            <p id="uTz">Let  <nemeth class="inline">⠠⠗⠀⠨⠅⠀⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> be the ring of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠗</nemeth>. If <i class="one-letter">T</i> is the set of upper triangular matrices in <i class="one-letter">R</i>; i.e.,</p>
            <div class="displaymath">
              <nemeth>⠠⠞⠀⠨⠅⠀⠨⠷⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠴⠀⠉⠠⠾⠒⠀⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠸⠠⠗⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">, then <i class="one-letter">T</i> is a subring of <i class="one-letter">R</i>. If</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠴⠀⠉⠠⠾⠁⠝⠙⠠⠃⠀⠨⠅⠀⠠⠷⠁⠘⠄⠐⠀⠃⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠉⠄⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">are in <i class="one-letter">T</i>, then clearly <nemeth class="inline">⠠⠁⠤⠠⠃</nemeth> is also in <i class="one-letter">T</i>. Also,</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠠⠃⠀⠨⠅⠀⠠⠷⠁⠁⠘⠄⠐⠀⠁⠃⠘⠄⠐⠬⠃⠉⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠉⠉⠄⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">is in <i class="one-letter">T</i>.</p>
          </article>
        </section>
        <section class="section" id="QIu">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">16.2</span> <span class="title">Integral Domains and Fields</span></div>
          <p id="BHa">Let us briefly recall some definitions. If <i class="one-letter">R</i> is a ring and <i class="one-letter">r</i> is a nonzero element in <i class="one-letter">R</i>, then <i class="one-letter">r</i> is said to be a <dfn class="terminology">zero divisor</dfn> if there is some nonzero element <nemeth class="inline">⠎⠀⠈⠑⠀⠠⠗</nemeth> such that <nemeth class="inline">⠗⠎⠀⠨⠅⠀⠼⠴</nemeth>. A commutative ring with identity is said to be an <dfn class="terminology">integral domain</dfn> if it has no zero divisors. If an element <i class="one-letter">a</i> in a ring <i class="one-letter">R</i> with identity has a multiplicative inverse, we say that <i class="one-letter">a</i> is a <dfn class="terminology">unit</dfn>. If every nonzero element in a ring <i class="one-letter">R</i> is a unit, then <i class="one-letter">R</i> is called a <dfn class="terminology">division ring</dfn>. A commutative division ring is called a <dfn class="terminology">field</dfn>.</p>
          <article class="example example-like" data-braille="example-like" id="bvU">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.2.1</span>
              <span class="period">.</span>
            </h6>
            <p id="baI">If <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>, then the set <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾⠀⠨⠅⠀⠨⠷⠍⠬⠝⠊⠒⠀⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth> forms a ring known as the <dfn class="terminology">Gaussian integers</dfn>.  It is easily seen that the Gaussian integers are a subring of the complex numbers since they are closed under addition and multiplication. Let <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> be a unit in <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>. Then <nemeth class="inline">⠐⠨⠁⠣⠱⠻⠀⠨⠅⠀⠁⠤⠃⠊</nemeth> is also a unit since if <nemeth class="inline">⠨⠁⠨⠃⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠐⠨⠁⠣⠱⠻⠐⠨⠃⠣⠱⠻⠀⠨⠅⠀⠼⠂</nemeth>. If <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠉⠬⠙⠊</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠀⠨⠅⠀⠨⠁⠨⠃⠐⠨⠁⠣⠱⠻⠐⠨⠃⠣⠱⠻⠀⠨⠅⠀⠷⠁⠘⠆⠐⠬⠃⠘⠆⠐⠾⠷⠉⠘⠆⠐⠬⠙⠘⠆⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">. Therefore, <nemeth class="inline">⠁⠘⠆⠐⠬⠃⠘⠆</nemeth> must either be <nemeth class="inline">⠼⠂</nemeth> or <nemeth class="inline">⠤⠼⠂</nemeth>; or, equivalently, <nemeth class="inline">⠁⠬⠃⠊⠀⠨⠅⠀⠬⠤⠼⠂</nemeth> or <nemeth class="inline">⠁⠬⠃⠊⠀⠨⠅⠀⠬⠤⠊</nemeth>. Therefore, units of this ring are <nemeth class="inline">⠬⠤⠼⠂</nemeth> and <nemeth class="inline">⠬⠤⠊</nemeth>; hence, the Gaussian integers are not a field. We will leave it as an exercise to prove that the Gaussian integers are an integral domain.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="HDd">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.2.2</span>
              <span class="period">.</span>
            </h6>
            <p id="HhR">The set of matrices</p>
            <div class="displaymath">
              <nemeth>⠠⠋⠀⠨⠅⠀⠨⠷⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">with entries in <nemeth class="inline">⠸⠠⠵⠆</nemeth> forms a field.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="nKm">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.2.3</span>
              <span class="period">.</span>
            </h6>
            <p id="npa">The set <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth> is a field. The inverse of an element <nemeth class="inline">⠁⠬⠃⠜⠆⠻</nemeth> in <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth> is</p>
            <div class="displaymath">
              <nemeth>⠹⠁⠌⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠼⠬⠹⠤⠃⠌⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠼⠜⠆⠻</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="hOj">We have the following alternative characterization of integral domains.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="Nsp">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">16.2.4</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Cancellation Law.</span>
            </h6>
            <p id="gPU">Let <i class="one-letter">D</i> be a commutative ring with identity. Then <i class="one-letter">D</i> is an integral domain if and only if for all nonzero elements <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠙</nemeth> with <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠁⠉</nemeth>, we have <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="roM">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="EIK">Let <i class="one-letter">D</i> be an integral domain. Then <i class="one-letter">D</i> has no zero divisors. Let <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠁⠉</nemeth> with <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>. Then <nemeth class="inline">⠁⠷⠃⠤⠉⠾⠀⠨⠅⠀⠼⠴</nemeth>. Hence, <nemeth class="inline">⠃⠤⠉⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth>.</p>
            <p id="kPT">Conversely, let us suppose that cancellation is possible in <i class="one-letter">D</i>. That is, suppose that <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠁⠉</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth>. Let <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠼⠴</nemeth>. If <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠁⠐⠴</nemeth> or <nemeth class="inline">⠃⠀⠨⠅⠀⠼⠴</nemeth>. Therefore, <i class="one-letter">a</i> cannot be a zero divisor.</p>
          </article>
          <p id="NVs">The following surprising theorem is due to Wedderburn.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="LDc">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.2.5</span>
              <span class="period">.</span>
            </h6>
            <p id="faH">Every finite integral domain is a field.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="Ocj">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="QXc">Let <i class="one-letter">D</i> be a finite integral domain and <nemeth class="inline">⠠⠙⠘⠈⠼</nemeth> be the set of nonzero elements of <i class="one-letter">D</i>. We must show that every element in <nemeth class="inline">⠠⠙⠘⠈⠼</nemeth> has an inverse. For each <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠙⠘⠈⠼</nemeth> we can define a map <nemeth class="inline">⠨⠇⠰⠁⠐⠒⠀⠠⠙⠘⠈⠼⠐⠀⠫⠕⠀⠠⠙⠘⠈⠼</nemeth> by <nemeth class="inline">⠇⠰⠁⠐⠷⠙⠾⠀⠨⠅⠀⠁⠙</nemeth>. This map makes sense, because if  <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠙⠀⠌⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠁⠙⠀⠌⠨⠅⠀⠼⠴</nemeth>. The map <nemeth class="inline">⠨⠇⠰⠁</nemeth> is one-to-one, since for <nemeth class="inline">⠙⠂⠠⠀⠙⠆⠀⠈⠑⠀⠠⠙⠘⠈⠼</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠁⠙⠂⠀⠨⠅⠀⠇⠰⠁⠐⠷⠙⠂⠾⠀⠨⠅⠀⠇⠰⠁⠐⠷⠙⠆⠾⠀⠨⠅⠀⠁⠙⠆</nemeth>
            </div>
            <p data-braille="continuation">implies <nemeth class="inline">⠙⠂⠀⠨⠅⠀⠙⠆</nemeth> by left cancellation. Since <nemeth class="inline">⠠⠙⠘⠈⠼</nemeth> is a finite set, the map <nemeth class="inline">⠨⠇⠰⠁</nemeth> must also be onto; hence, for some <nemeth class="inline">⠙⠀⠈⠑⠀⠠⠙⠘⠈⠼</nemeth>, <nemeth class="inline">⠇⠰⠁⠐⠷⠙⠾⠀⠨⠅⠀⠁⠙⠀⠨⠅⠀⠼⠂</nemeth>. Therefore, <i class="one-letter">a</i> has a left inverse. Since <i class="one-letter">D</i> is commutative, <i class="one-letter">d</i> must also be a right inverse for <i class="one-letter">a</i>. Consequently, <i class="one-letter">D</i> is a field.</p>
          </article>
          <p id="ucB">For any nonnegative integer <i class="one-letter">n</i> and any element <i class="one-letter">r</i> in a ring <i class="one-letter">R</i> we write <nemeth class="inline">⠗⠬⠄⠄⠄⠬⠗</nemeth> (<i class="one-letter">n</i> times) as <nemeth class="inline">⠝⠗</nemeth>. We define the <dfn class="terminology">characteristic</dfn> of a ring <i class="one-letter">R</i> to be the least positive integer <i class="one-letter">n</i> such that <nemeth class="inline">⠝⠗⠀⠨⠅⠀⠼⠴</nemeth> for all <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth>. If no such integer exists, then the characteristic of <i class="one-letter">R</i> is defined to be <nemeth class="inline">⠼⠴</nemeth>. We will denote the characteristic of <i class="one-letter">R</i> by <nemeth class="inline">⠉⠓⠁⠗⠠⠗</nemeth>. </p>
          <article class="example example-like" data-braille="example-like" id="TRv">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.2.6</span>
              <span class="period">.</span>
            </h6>
            <p id="Twj">For every prime <i class="one-letter">p</i>, <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth> is a field of characteristic <i class="one-letter">p</i>. By Proposition 3.1.4, every nonzero element in <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth> has an inverse; hence, <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth> is a field. If <i class="one-letter">a</i> is any nonzero element in the field, then <nemeth class="inline">⠏⠁⠀⠨⠅⠀⠼⠴</nemeth>, since the order of any nonzero element in the abelian group <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth> is <i class="one-letter">p</i>.</p>
          </article>
          <article class="lemma theorem-like" data-braille="theorem-like" id="lUZ">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">16.2.7</span>
              <span class="period">.</span>
            </h6>
            <p id="FsE">Let <i class="one-letter">R</i> be a ring with identity. If <nemeth class="inline">⠼⠂</nemeth> has order <i class="one-letter">n</i>, then the characteristic of <i class="one-letter">R</i> is <i class="one-letter">n</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="jKn">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="xel">If <nemeth class="inline">⠼⠂</nemeth> has order <i class="one-letter">n</i>, then <i class="one-letter">n</i> is the least positive integer such that <nemeth class="inline">⠝⠐⠂⠀⠨⠅⠀⠼⠴</nemeth>. Thus, for all <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠝⠗⠀⠨⠅⠀⠝⠷⠼⠂⠗⠾⠀⠨⠅⠀⠷⠝⠼⠂⠾⠗⠀⠨⠅⠀⠼⠴⠗⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. On the other hand, if no positive <i class="one-letter">n</i> exists such that <nemeth class="inline">⠝⠐⠂⠀⠨⠅⠀⠼⠴</nemeth>, then the characteristic of <i class="one-letter">R</i> is zero.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="rKl">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.2.8</span>
              <span class="period">.</span>
            </h6>
            <p id="LhQ">The characteristic of an integral domain is either prime or zero.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="ujs">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="dlu">Let <i class="one-letter">D</i> be an integral domain and suppose that the characteristic of <i class="one-letter">D</i> is <i class="one-letter">n</i> with <nemeth class="inline">⠝⠀⠌⠨⠅⠀⠼⠴</nemeth>. If <i class="one-letter">n</i> is not prime, then <nemeth class="inline">⠝⠀⠨⠅⠀⠁⠃</nemeth>, where <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠁⠀⠐⠅⠀⠝</nemeth> and <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠃⠀⠐⠅⠀⠝</nemeth>. By Lemma 16.2.7, we need only consider the case <nemeth class="inline">⠝⠐⠂⠀⠨⠅⠀⠼⠴</nemeth>. Since <nemeth class="inline">⠼⠴⠀⠨⠅⠀⠝⠐⠂⠀⠨⠅⠀⠷⠁⠃⠾⠂⠀⠨⠅⠀⠷⠁⠐⠂⠾⠷⠃⠐⠂⠾</nemeth> and there are no zero divisors in <i class="one-letter">D</i>, either <nemeth class="inline">⠁⠐⠂⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠃⠐⠂⠀⠨⠅⠀⠼⠴</nemeth>. Hence, the characteristic of <i class="one-letter">D</i> must be less than <i class="one-letter">n</i>, which is a contradiction. Therefore, <i class="one-letter">n</i> must be prime.</p>
          </article>
        </section>
        <section class="section" id="wPD">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">16.3</span> <span class="title">Ring Homomorphisms and Ideals</span></div>
          <p id="ajK">In the study of groups, a homomorphism is a map that preserves the operation of the group. Similarly, a homomorphism between rings preserves the operations of addition and multiplication in the ring. More specifically, if <i class="one-letter">R</i> and <i class="one-letter">S</i> are rings, then a <dfn class="terminology">ring homomorphism</dfn>  is a map <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth> satisfying</p>
          <div class="displaymath">
            <nemeth>⠋⠷⠁⠬⠃⠾⠀⠀⠨⠅⠀⠋⠷⠁⠾⠬⠋⠷⠃⠾⠀⠋⠷⠁⠃⠾⠀⠀⠨⠅⠀⠋⠷⠁⠾⠋⠷⠃⠾</nemeth>
          </div>
          <p data-braille="continuation">for all <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠗</nemeth>. If <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth> is a one-to-one and onto homomorphism, then <nemeth class="inline">⠨⠋</nemeth> is called an <dfn class="terminology">isomorphism</dfn>  of rings.</p>
          <p id="GqT">The set of elements that a ring homomorphism maps to <nemeth class="inline">⠼⠴</nemeth> plays a fundamental role in the theory of rings. For any ring homomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth>, we define the <dfn class="terminology">kernel</dfn> of a ring homomorphism to be the set</p>
          <div class="displaymath">
            <nemeth>⠅⠑⠗⠀⠋⠀⠨⠅⠀⠨⠷⠗⠀⠈⠑⠀⠠⠗⠒⠀⠋⠷⠗⠾⠀⠨⠅⠀⠼⠴⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">.</p>
          <article class="example example-like" data-braille="example-like" id="zYE">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.1</span>
              <span class="period">.</span>
            </h6>
            <p id="zDs">For any integer <i class="one-letter">n</i> we can define a ring homomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠵⠰⠝⠐</nemeth> by <nemeth class="inline">⠁⠀⠫⠳⠒⠒⠕⠀⠁⠷⠍⠕⠙⠀⠝⠾</nemeth>. This is indeed a ring homomorphism, since</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠬⠃⠾⠀⠀⠨⠅⠀⠷⠁⠬⠃⠾⠷⠍⠕⠙⠀⠝⠾⠀⠀⠀⠀⠨⠅⠀⠁⠷⠍⠕⠙⠀⠝⠾⠬⠃⠷⠍⠕⠙⠀⠝⠾⠀⠀⠀⠀⠨⠅⠀⠋⠷⠁⠾⠬⠋⠷⠃⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠃⠾⠀⠀⠨⠅⠀⠁⠃⠷⠍⠕⠙⠀⠝⠾⠀⠀⠀⠀⠨⠅⠀⠁⠷⠍⠕⠙⠀⠝⠾⠡⠃⠷⠍⠕⠙⠀⠝⠾⠀⠀⠀⠀⠨⠅⠀⠋⠷⠁⠾⠋⠷⠃⠾</nemeth>
            </div>
            <p data-braille="continuation">. The kernel of the homomorphism <nemeth class="inline">⠨⠋</nemeth> is <nemeth class="inline">⠝⠸⠠⠵</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="gfN">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.2</span>
              <span class="period">.</span>
            </h6>
            <p id="fKB">Let <nemeth class="inline">⠠⠉⠈⠷⠁⠠⠀⠃⠈⠾</nemeth> be the ring of continuous real-valued functions on an interval <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾</nemeth> as in Example 16.1.5. For a fixed  <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠈⠷⠁⠠⠀⠃⠈⠾</nemeth>, we can define a ring homomorphism <nemeth class="inline">⠨⠋⠰⠨⠁⠐⠒⠀⠠⠉⠈⠷⠁⠠⠀⠃⠈⠾⠀⠫⠕⠀⠸⠠⠗</nemeth> by <nemeth class="inline">⠋⠰⠨⠁⠐⠷⠋⠾⠀⠨⠅⠀⠋⠷⠨⠁⠾</nemeth>. This  is a ring homomorphism since</p>
            <div class="displaymath">
              <nemeth>⠋⠰⠨⠁⠐⠷⠋⠬⠛⠾⠀⠨⠅⠀⠷⠋⠬⠛⠾⠷⠨⠁⠾⠀⠨⠅⠀⠋⠷⠨⠁⠾⠬⠛⠷⠨⠁⠾⠀⠨⠅⠀⠋⠰⠨⠁⠐⠷⠋⠾⠬⠋⠰⠨⠁⠐⠷⠛⠾⠀⠋⠰⠨⠁⠐⠷⠋⠛⠾⠀⠨⠅⠀⠷⠋⠛⠾⠷⠨⠁⠾⠀⠨⠅⠀⠋⠷⠨⠁⠾⠛⠷⠨⠁⠾⠀⠨⠅⠀⠋⠰⠨⠁⠐⠷⠋⠾⠋⠰⠨⠁⠐⠷⠛⠾</nemeth>
            </div>
            <p data-braille="continuation">. Ring homomorphisms of the type <nemeth class="inline">⠨⠋⠰⠨⠁</nemeth> are called <dfn class="terminology">evaluation homomorphisms</dfn>. </p>
          </article>
          <p id="myc">In the next proposition we will examine some fundamental properties of ring homomorphisms. The proof of the proposition is left as an exercise.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="tzy">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.3</span>
              <span class="period">.</span>
            </h6>
            <p id="MXd">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth> be a ring homomorphism.</p>
            <ol class="outerlist">
              <li>1. <p id="nRD">If <i class="one-letter">R</i> is a commutative ring, then <nemeth class="inline">⠋⠷⠠⠗⠾</nemeth> is a commutative ring.</p></li>
              <li>2. <p id="TYM"><nemeth class="inline">⠋⠷⠼⠴⠾⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
              <li>3. <p id="AfV">Let <nemeth class="inline">⠼⠂⠰⠠⠗</nemeth> and <nemeth class="inline">⠼⠂⠰⠠⠎</nemeth> be the identities for <i class="one-letter">R</i> and <i class="one-letter">S</i>, respectively. If <nemeth class="inline">⠨⠋</nemeth> is onto, then <nemeth class="inline">⠋⠷⠼⠂⠰⠠⠗⠐⠾⠀⠨⠅⠀⠼⠂⠰⠠⠎</nemeth>.</p></li>
              <li>4. <p id="gne">If <i class="one-letter">R</i> is a field and <nemeth class="inline">⠋⠷⠠⠗⠾⠀⠌⠨⠅⠀⠨⠷⠼⠴⠨⠾</nemeth>, then <nemeth class="inline">⠋⠷⠠⠗⠾</nemeth> is a field.</p></li>
            </ol>
          </article>
          <p id="SFl">In group theory we found that normal subgroups play a special role. These subgroups have nice characteristics that make them more interesting to study than arbitrary subgroups. In ring theory the objects corresponding to normal subgroups are a special class of subrings called ideals. An <dfn class="terminology">ideal</dfn> in a ring <i class="one-letter">R</i> is a subring <i class="one-letter">I</i> of <i class="one-letter">R</i> such that if <i class="one-letter">a</i> is in <i class="one-letter">I</i> and <i class="one-letter">r</i> is in <i class="one-letter">R</i>, then both <nemeth class="inline">⠁⠗</nemeth> and <nemeth class="inline">⠗⠁</nemeth> are in <i class="one-letter">I</i>; that is, <nemeth class="inline">⠗⠠⠊⠀⠸⠐⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠠⠊⠗⠀⠸⠐⠅⠀⠠⠊</nemeth> for all <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="MmW">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.4</span>
              <span class="period">.</span>
            </h6>
            <p id="LRK">Every ring <i class="one-letter">R</i> has at least two ideals, <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth> and <i class="one-letter">R</i>. These ideals are called the <dfn class="terminology">trivial ideals</dfn>. </p>
          </article>
          <p id="yMu">Let <i class="one-letter">R</i> be a ring with identity and suppose that <i class="one-letter">I</i> is an ideal in <i class="one-letter">R</i> such that <nemeth class="inline">⠼⠂</nemeth> is in <i class="one-letter">I</i>. Since for any <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth>, <nemeth class="inline">⠗⠐⠂⠀⠨⠅⠀⠗⠀⠈⠑⠀⠠⠊</nemeth> by the definition of an ideal, <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠠⠗</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="suf">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.5</span>
              <span class="period">.</span>
            </h6>
            <p id="rYT">If <i class="one-letter">a</i> is any element in a commutative ring <i class="one-letter">R</i> with identity, then the set</p>
            <div class="displaymath">
              <nemeth>⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠷⠁⠗⠒⠀⠗⠀⠈⠑⠀⠠⠗⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is an ideal in <i class="one-letter">R</i>. Certainly, <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> is nonempty since both <nemeth class="inline">⠼⠴⠀⠨⠅⠀⠁⠐⠴</nemeth> and <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠐⠂</nemeth> are in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>. The sum of two elements in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> is again in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> since <nemeth class="inline">⠁⠗⠬⠁⠗⠘⠄⠐⠀⠨⠅⠀⠁⠷⠗⠬⠗⠘⠄⠐⠾</nemeth>. The inverse of <nemeth class="inline">⠁⠗</nemeth> is <nemeth class="inline">⠤⠁⠗⠀⠨⠅⠀⠁⠷⠤⠗⠾⠀⠈⠑⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>. Finally, if we multiply an element <nemeth class="inline">⠁⠗⠀⠈⠑⠀⠨⠨⠷⠁⠨⠨⠾</nemeth> by an arbitrary element <nemeth class="inline">⠎⠀⠈⠑⠀⠠⠗</nemeth>, we have <nemeth class="inline">⠎⠷⠁⠗⠾⠀⠨⠅⠀⠁⠷⠎⠗⠾</nemeth>. Therefore, <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> satisfies the definition of an ideal.</p>
          </article>
          <p id="eTD">If <i class="one-letter">R</i> is a commutative ring with identity, then an ideal of the form <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠷⠁⠗⠒⠀⠗⠀⠈⠑⠀⠠⠗⠨⠾</nemeth> is called a <dfn class="terminology">principal ideal</dfn>. </p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="XRu">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.6</span>
              <span class="period">.</span>
            </h6>
            <p id="roZ">Every ideal in the ring of integers <nemeth class="inline">⠸⠠⠵</nemeth> is a principal ideal.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="aqB">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="JsD">The zero ideal <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth> is a principal ideal since <nemeth class="inline">⠨⠨⠷⠼⠴⠨⠨⠾⠀⠨⠅⠀⠨⠷⠼⠴⠨⠾</nemeth>. If  <i class="one-letter">I</i> is any nonzero ideal in <nemeth class="inline">⠸⠠⠵</nemeth>, then  <i class="one-letter">I</i> must contain some positive integer <i class="one-letter">m</i>. There exists a least positive integer <i class="one-letter">n</i> in <i class="one-letter">I</i> by the Principle of Well-Ordering. Now let <i class="one-letter">a</i> be any element in <i class="one-letter">I</i>. Using the division algorithm, we know that there exist integers <i class="one-letter">q</i> and <i class="one-letter">r</i> such that</p>
            <div class="displaymath">
              <nemeth>⠁⠀⠨⠅⠀⠝⠟⠬⠗</nemeth>
            </div>
            <p data-braille="continuation">where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠝</nemeth>. This equation tells us that <nemeth class="inline">⠗⠀⠨⠅⠀⠁⠤⠝⠟⠀⠈⠑⠀⠠⠊</nemeth>, but <i class="one-letter">r</i> must be <nemeth class="inline">⠼⠴</nemeth> since <i class="one-letter">n</i> is the least positive element in <i class="one-letter">I</i>. Therefore, <nemeth class="inline">⠁⠀⠨⠅⠀⠝⠟</nemeth> and <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠨⠷⠝⠨⠨⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="YBo">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.7</span>
              <span class="period">.</span>
            </h6>
            <p id="Ygc">The set <nemeth class="inline">⠝⠸⠠⠵</nemeth> is ideal in the ring of integers. If <nemeth class="inline">⠝⠁</nemeth> is in <nemeth class="inline">⠝⠸⠠⠵</nemeth> and <i class="one-letter">b</i> is in <nemeth class="inline">⠸⠠⠵</nemeth>, then <nemeth class="inline">⠝⠁⠃</nemeth> is in <nemeth class="inline">⠝⠸⠠⠵</nemeth> as required. In fact, by Theorem 16.3.6, these are the only ideals of <nemeth class="inline">⠸⠠⠵</nemeth>.</p>
          </article>
          <article class="proposition theorem-like" data-braille="theorem-like" id="ZGH">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.8</span>
              <span class="period">.</span>
            </h6>
            <p id="tem">The kernel of any ring homomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth> is an ideal in <i class="one-letter">R</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="XvV">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="pzM">We know from group theory that <nemeth class="inline">⠅⠑⠗⠀⠨⠋</nemeth> is an additive subgroup of <i class="one-letter">R</i>. Suppose that <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth> and <nemeth class="inline">⠁⠀⠈⠑⠀⠅⠑⠗⠀⠨⠋</nemeth>. Then we must show that <nemeth class="inline">⠁⠗</nemeth> and <nemeth class="inline">⠗⠁</nemeth> are in <nemeth class="inline">⠅⠑⠗⠀⠨⠋</nemeth>. However,</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠗⠾⠀⠨⠅⠀⠋⠷⠁⠾⠋⠷⠗⠾⠀⠨⠅⠀⠼⠴⠋⠷⠗⠾⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠗⠁⠾⠀⠨⠅⠀⠋⠷⠗⠾⠋⠷⠁⠾⠀⠨⠅⠀⠋⠷⠗⠾⠴⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="remark remark-like" data-braille="remark-like" id="pzz">
            <h6 class="heading">
              <span class="type">Remark</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.9</span>
              <span class="period">.</span>
            </h6>
            <p id="Vlw">In our definition of an ideal we have required that <nemeth class="inline">⠗⠠⠊⠀⠸⠐⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠠⠊⠗⠀⠸⠐⠅⠀⠠⠊</nemeth> for all <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth>. Such ideals are sometimes referred to as <dfn class="terminology">two-sided ideals</dfn>.  We can also consider <dfn class="terminology">one-sided ideals</dfn>;  that is, we may require only that either <nemeth class="inline">⠗⠠⠊⠀⠸⠐⠅⠀⠠⠊</nemeth> or <nemeth class="inline">⠠⠊⠗⠀⠸⠐⠅⠀⠠⠊</nemeth> for <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth> hold but not both. Such ideals are called <dfn class="terminology">left ideals</dfn> and <dfn class="terminology">right ideals</dfn>, respectively. Of course, in a commutative ring any ideal must be two-sided. In this text we will concentrate on two-sided ideals.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="DYD">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.10</span>
              <span class="period">.</span>
            </h6>
            <p id="Xwi">Let <i class="one-letter">I</i> be an ideal of <i class="one-letter">R</i>. The factor group <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth> is a ring with multiplication defined by</p>
            <div class="displaymath">
              <nemeth>⠷⠗⠬⠠⠊⠾⠷⠎⠬⠠⠊⠾⠀⠨⠅⠀⠗⠎⠬⠠⠊</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="GxK">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="VGV">We already know that <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth> is an abelian group under addition. Let <nemeth class="inline">⠗⠬⠠⠊</nemeth> and <nemeth class="inline">⠎⠬⠠⠊</nemeth> be in <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth>. We must show that the product <nemeth class="inline">⠷⠗⠬⠠⠊⠾⠷⠎⠬⠠⠊⠾⠀⠨⠅⠀⠗⠎⠬⠠⠊</nemeth> is independent of the choice of coset; that is, if <nemeth class="inline">⠗⠘⠄⠐⠀⠈⠑⠀⠗⠬⠠⠊</nemeth> and <nemeth class="inline">⠎⠘⠄⠐⠀⠈⠑⠀⠎⠬⠠⠊</nemeth>, then <nemeth class="inline">⠗⠘⠄⠐⠎⠄</nemeth> must be in <nemeth class="inline">⠗⠎⠬⠠⠊</nemeth>. Since <nemeth class="inline">⠗⠘⠄⠐⠀⠈⠑⠀⠗⠬⠠⠊</nemeth>, there exists an element <i class="one-letter">a</i>  in <i class="one-letter">I</i> such that <nemeth class="inline">⠗⠘⠄⠐⠀⠨⠅⠀⠗⠬⠁</nemeth>. Similarly, there exists a <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠊</nemeth> such that <nemeth class="inline">⠎⠘⠄⠐⠀⠨⠅⠀⠎⠬⠃</nemeth>. Notice that</p>
            <div class="displaymath">
              <nemeth>⠗⠘⠄⠐⠎⠘⠄⠐⠀⠨⠅⠀⠷⠗⠬⠁⠾⠷⠎⠬⠃⠾⠀⠨⠅⠀⠗⠎⠬⠁⠎⠬⠗⠃⠬⠁⠃</nemeth>
            </div>
            <p data-braille="continuation">and <nemeth class="inline">⠁⠎⠬⠗⠃⠬⠁⠃⠀⠈⠑⠀⠠⠊</nemeth> since <i class="one-letter">I</i> is an ideal; consequently, <nemeth class="inline">⠗⠘⠄⠐⠎⠄⠀⠈⠑⠀⠗⠎⠬⠠⠊</nemeth>. We will leave as an exercise the verification of the  associative law for multiplication and the distributive laws.</p>
          </article>
          <p id="LaM">The ring <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth> in Theorem 16.3.10 is called the <dfn class="terminology">factor</dfn>  or <dfn class="terminology">quotient ring</dfn>.  Just as with group homomorphisms and normal subgroups, there is a relationship between ring homomorphisms and ideals.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="kfM">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.11</span>
              <span class="period">.</span>
            </h6>
            <p id="DDr">Let <i class="one-letter">I</i> be an ideal of <i class="one-letter">R</i>. The map <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠗⠸⠌⠠⠊</nemeth> defined by <nemeth class="inline">⠋⠷⠗⠾⠀⠨⠅⠀⠗⠬⠠⠊</nemeth> is a ring homomorphism of <i class="one-letter">R</i> onto <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth> with kernel <i class="one-letter">I</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="mET">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="BOe">Certainly <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠗⠸⠌⠠⠊</nemeth> is a surjective abelian group homomorphism. It remains to show that <nemeth class="inline">⠨⠋</nemeth> works correctly under ring multiplication. Let <i class="one-letter">r</i> and <i class="one-letter">s</i> be in <i class="one-letter">R</i>. Then</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠗⠾⠋⠷⠎⠾⠀⠨⠅⠀⠷⠗⠬⠠⠊⠾⠷⠎⠬⠠⠊⠾⠀⠨⠅⠀⠗⠎⠬⠠⠊⠀⠨⠅⠀⠋⠷⠗⠎⠾</nemeth>
            </div>
            <p data-braille="continuation">, which completes the proof of the theorem.</p>
          </article>
          <p id="rhV">The map <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠗⠸⠌⠠⠊</nemeth> is often called the <dfn class="terminology">natural</dfn> or <dfn class="terminology">canonical homomorphism</dfn>.  In ring theory we have isomorphism theorems relating ideals and ring homomorphisms similar to the isomorphism theorems for groups that relate normal subgroups and homomorphisms in Chapter 11. We will prove only the First Isomorphism Theorem for rings in this chapter and leave the proofs of the other two theorems as exercises. All of the proofs are similar to the proofs of the isomorphism theorems for groups.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="QmV">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.12</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">First Isomorphism Theorem.</span>
            </h6>
            <p id="jKA">Let <nemeth class="inline">⠨⠓⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth> be a ring homomorphism. Then <nemeth class="inline">⠅⠑⠗⠀⠨⠓</nemeth> is an ideal of <i class="one-letter">R</i>. If <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠗⠸⠌⠅⠑⠗⠀⠨⠓</nemeth> is the canonical homomorphism, then there exists a unique isomorphism <nemeth class="inline">⠨⠦⠒⠀⠠⠗⠸⠌⠅⠑⠗⠀⠓⠀⠫⠕⠀⠓⠷⠠⠗⠾</nemeth> such that <nemeth class="inline">⠨⠓⠀⠨⠅⠀⠨⠦⠨⠋</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="SMc">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="hVn">Let <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠅⠑⠗⠀⠨⠓</nemeth>. By the First Isomorphism Theorem for groups, there exists a well-defined group homomorphism <nemeth class="inline">⠨⠦⠒⠀⠠⠗⠸⠌⠠⠅⠀⠫⠕⠀⠓⠷⠠⠗⠾</nemeth> defined by <nemeth class="inline">⠨⠦⠷⠗⠬⠠⠅⠾⠀⠨⠅⠀⠓⠷⠗⠾</nemeth> for the additive abelian groups <i class="one-letter">R</i> and <nemeth class="inline">⠠⠗⠸⠌⠠⠅</nemeth>. To show that this is a ring homomorphism, we need only show that <nemeth class="inline">⠦⠷⠷⠗⠬⠠⠅⠾⠷⠎⠬⠠⠅⠾⠾⠀⠨⠅⠀⠦⠷⠗⠬⠠⠅⠾⠦⠷⠎⠬⠠⠅⠾</nemeth>; but</p>
            <div class="displaymath">
              <nemeth>⠦⠷⠷⠗⠬⠠⠅⠾⠷⠎⠬⠠⠅⠾⠾⠀⠀⠨⠅⠀⠦⠷⠗⠎⠬⠠⠅⠾⠀⠀⠀⠀⠨⠅⠀⠓⠷⠗⠎⠾⠀⠀⠀⠀⠨⠅⠀⠓⠷⠗⠾⠓⠷⠎⠾⠀⠀⠀⠀⠨⠅⠀⠦⠷⠗⠬⠠⠅⠾⠦⠷⠎⠬⠠⠅⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="wue">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.13</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Second Isomorphism Theorem.</span>
            </h6>
            <p id="PRJ">Let <i class="one-letter">I</i> be a subring of a ring <i class="one-letter">R</i>  and  <i class="one-letter">J</i> an ideal of <i class="one-letter">R</i>. Then <nemeth class="inline">⠠⠊⠨⠩⠠⠚</nemeth> is an ideal of <i class="one-letter">I</i> and</p>
            <div class="displaymath">
              <nemeth>⠠⠊⠸⠌⠠⠊⠨⠩⠠⠚⠀⠈⠱⠈⠱⠀⠷⠠⠊⠬⠠⠚⠾⠸⠌⠠⠚</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="cBn">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.14</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Third Isomorphism Theorem.</span>
            </h6>
            <p id="vYS">Let <i class="one-letter">R</i> be a ring and <i class="one-letter">I</i> and <i class="one-letter">J</i> be ideals of <i class="one-letter">R</i> where <nemeth class="inline">⠠⠚⠀⠸⠐⠅⠀⠠⠊</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠠⠗⠸⠌⠠⠊⠀⠈⠱⠈⠱⠀⠹⠠⠗⠸⠌⠠⠚⠌⠠⠊⠸⠌⠠⠚⠼</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="IIw">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.3.15</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Correspondence Theorem.</span>
            </h6>
            <p id="cgb">Let <i class="one-letter">I</i> be an ideal of a ring <i class="one-letter">R</i>. Then <nemeth class="inline">⠠⠎⠀⠫⠳⠒⠒⠕⠀⠠⠎⠸⠌⠠⠊</nemeth> is a one-to-one correspondence between the set of subrings <i class="one-letter">S</i> containing <i class="one-letter">I</i> and the set of subrings of <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth>. Furthermore, the ideals of <i class="one-letter">R</i> containing <i class="one-letter">I</i> correspond to ideals of <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth>.</p>
          </article>
        </section>
        <section class="section" id="cWM">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">16.4</span> <span class="title">Maximal and Prime Ideals</span></div>
          <section class="introduction" id="BNR">
            <p id="hzO">In this particular section we are especially interested in certain ideals of commutative rings. These ideals give us special types of factor rings. More specifically, we would like to characterize those ideals <i class="one-letter">I</i> of a commutative ring <i class="one-letter">R</i> such that <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth> is an integral domain or a field.</p>
            <p id="NGX">A proper ideal <i class="one-letter">M</i> of a ring <i class="one-letter">R</i> is a <dfn class="terminology">maximal ideal</dfn>  of <i class="one-letter">R</i> if the ideal <i class="one-letter">M</i> is not a proper subset of any ideal of <i class="one-letter">R</i> except <i class="one-letter">R</i> itself. That is, <i class="one-letter">M</i> is a maximal ideal if for any ideal <i class="one-letter">I</i> properly containing <i class="one-letter">M</i>, <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠠⠗</nemeth>. The following theorem completely characterizes maximal ideals for commutative rings with identity in terms of their corresponding factor rings.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="oPF">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">16.4.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Ink">Let <i class="one-letter">R</i> be a commutative ring with identity and <i class="one-letter">M</i> an ideal in <i class="one-letter">R</i>. Then <i class="one-letter">M</i> is a maximal ideal of <i class="one-letter">R</i> if and only if <nemeth class="inline">⠠⠗⠸⠌⠠⠍</nemeth> is a field.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="yTl">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Ocw">Let <i class="one-letter">M</i> be a maximal ideal in <i class="one-letter">R</i>. If <i class="one-letter">R</i> is a commutative ring, then <nemeth class="inline">⠠⠗⠸⠌⠠⠍</nemeth> must also be a commutative ring. Clearly, <nemeth class="inline">⠼⠂⠬⠠⠍</nemeth> acts as an identity for <nemeth class="inline">⠠⠗⠸⠌⠠⠍</nemeth>. We must also show that every nonzero element in <nemeth class="inline">⠠⠗⠸⠌⠠⠍</nemeth> has an inverse. If <nemeth class="inline">⠁⠬⠠⠍</nemeth> is a nonzero element in <nemeth class="inline">⠠⠗⠸⠌⠠⠍</nemeth>, then <nemeth class="inline">⠁⠀⠌⠈⠑⠀⠠⠍</nemeth>. Define <i class="one-letter">I</i> to be the set <nemeth class="inline">⠨⠷⠗⠁⠬⠍⠒⠀⠗⠀⠈⠑⠀⠠⠗⠁⠝⠙⠍⠀⠈⠑⠀⠠⠍⠨⠾</nemeth>. We will show that <i class="one-letter">I</i> is an ideal in <i class="one-letter">R</i>. The set <i class="one-letter">I</i> is nonempty since <nemeth class="inline">⠼⠴⠁⠬⠴⠀⠨⠅⠀⠼⠴</nemeth> is in <i class="one-letter">I</i>. If <nemeth class="inline">⠗⠂⠁⠬⠍⠂</nemeth> and <nemeth class="inline">⠗⠆⠁⠬⠍⠆</nemeth> are two elements in <i class="one-letter">I</i>, then</p>
              <div class="displaymath">
                <nemeth>⠷⠗⠂⠁⠬⠍⠂⠾⠤⠷⠗⠆⠁⠬⠍⠆⠾⠀⠨⠅⠀⠷⠗⠂⠤⠗⠆⠾⠁⠬⠷⠍⠂⠤⠍⠆⠾</nemeth>
              </div>
              <p data-braille="continuation">is in <i class="one-letter">I</i>. Also, for any <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth> it is true that <nemeth class="inline">⠗⠠⠊⠀⠸⠐⠅⠀⠠⠊</nemeth>; hence, <i class="one-letter">I</i> is closed under multiplication and satisfies the necessary conditions to be an ideal. Therefore, by Proposition 16.1.10 and the definition of an ideal, <i class="one-letter">I</i> is an ideal properly containing <i class="one-letter">M</i>. Since <i class="one-letter">M</i> is a maximal ideal, <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠠⠗</nemeth>; consequently, by the definition of <i class="one-letter">I</i> there must be an <i class="one-letter">m</i> in <i class="one-letter">M</i> and an element <i class="one-letter">b</i> in <i class="one-letter">R</i> such that <nemeth class="inline">⠼⠂⠀⠨⠅⠀⠁⠃⠬⠍</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠬⠠⠍⠀⠨⠅⠀⠁⠃⠬⠠⠍⠀⠨⠅⠀⠃⠁⠬⠠⠍⠀⠨⠅⠀⠷⠁⠬⠠⠍⠾⠷⠃⠬⠠⠍⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="ujF">Conversely, suppose that <i class="one-letter">M</i> is an ideal and <nemeth class="inline">⠠⠗⠸⠌⠠⠍</nemeth> is a field. Since <nemeth class="inline">⠠⠗⠸⠌⠠⠍</nemeth> is a field, it must contain at least two elements: <nemeth class="inline">⠼⠴⠬⠠⠍⠀⠨⠅⠀⠠⠍</nemeth> and <nemeth class="inline">⠼⠂⠬⠠⠍</nemeth>. Hence, <i class="one-letter">M</i> is a proper ideal of <i class="one-letter">R</i>. Let <i class="one-letter">I</i> be any ideal properly containing <i class="one-letter">M</i>. We need to show that <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠠⠗</nemeth>. Choose <i class="one-letter">a</i> in <i class="one-letter">I</i> but not in <i class="one-letter">M</i>. Since <nemeth class="inline">⠁⠬⠠⠍</nemeth> is a nonzero element in a field, there exists an element <nemeth class="inline">⠃⠬⠠⠍</nemeth> in <nemeth class="inline">⠠⠗⠸⠌⠠⠍</nemeth> such that <nemeth class="inline">⠷⠁⠬⠠⠍⠾⠷⠃⠬⠠⠍⠾⠀⠨⠅⠀⠁⠃⠬⠠⠍⠀⠨⠅⠀⠼⠂⠬⠠⠍</nemeth>. Consequently, there exists an element <nemeth class="inline">⠍⠀⠈⠑⠀⠠⠍</nemeth> such that <nemeth class="inline">⠁⠃⠬⠍⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠼⠂</nemeth> is in <i class="one-letter">I</i>. Therefore, <nemeth class="inline">⠗⠐⠂⠀⠨⠅⠀⠗⠀⠈⠑⠀⠠⠊</nemeth> for all <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠗</nemeth>. Consequently, <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠠⠗</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="EIx">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">16.4.2</span>
                <span class="period">.</span>
              </h6>
              <p id="Enl">Let <nemeth class="inline">⠏⠸⠠⠵</nemeth> be an ideal in <nemeth class="inline">⠸⠠⠵</nemeth>, where <i class="one-letter">p</i> is prime. Then <nemeth class="inline">⠏⠸⠠⠵</nemeth> is a maximal ideal since <nemeth class="inline">⠸⠠⠵⠸⠌⠏⠸⠠⠵⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠏</nemeth> is a field.</p>
            </article>
            <p id="tOg">A proper ideal <i class="one-letter">P</i> in a commutative ring <i class="one-letter">R</i> is called a <dfn class="terminology">prime ideal</dfn>  if whenever <nemeth class="inline">⠁⠃⠀⠈⠑⠀⠠⠏</nemeth>, then either <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠏</nemeth> or <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠏</nemeth>.<a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-6" id="fn-6"><sup> 1 </sup></a></p>
            <div class="hidden-content tex2jax_ignore" id="hk-fn-6">
              <div class="fn">It is possible to define prime ideals in a noncommutative ring. See [1] or [3].</div>
            </div>
            <article class="example example-like" data-braille="example-like" id="kPG">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">16.4.3</span>
                <span class="period">.</span>
              </h6>
              <p id="kuu">It is easy to check that the set <nemeth class="inline">⠠⠏⠀⠨⠅⠀⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠴⠨⠾</nemeth> is an ideal in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>. This ideal is prime. In fact, it is a maximal ideal.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="FNQ">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">16.4.4</span>
                <span class="period">.</span>
              </h6>
              <p id="Zlv">Let <i class="one-letter">R</i> be a commutative ring with identity <nemeth class="inline">⠼⠂</nemeth>, where <nemeth class="inline">⠼⠂⠀⠌⠨⠅⠀⠼⠴</nemeth>. Then <i class="one-letter">P</i> is a prime ideal in <i class="one-letter">R</i> if and only if <nemeth class="inline">⠠⠗⠸⠌⠠⠏</nemeth> is an integral domain.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="DDe">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="aqO">First let us assume that <i class="one-letter">P</i> is an ideal in <i class="one-letter">R</i> and <nemeth class="inline">⠠⠗⠸⠌⠠⠏</nemeth> is an integral domain. Suppose that <nemeth class="inline">⠁⠃⠀⠈⠑⠀⠠⠏</nemeth>. If <nemeth class="inline">⠁⠬⠠⠏</nemeth> and <nemeth class="inline">⠃⠬⠠⠏</nemeth> are two elements of <nemeth class="inline">⠠⠗⠸⠌⠠⠏</nemeth> such that <nemeth class="inline">⠷⠁⠬⠠⠏⠾⠷⠃⠬⠠⠏⠾⠀⠨⠅⠀⠼⠴⠬⠠⠏⠀⠨⠅⠀⠠⠏</nemeth>, then either <nemeth class="inline">⠁⠬⠠⠏⠀⠨⠅⠀⠠⠏</nemeth> or <nemeth class="inline">⠃⠬⠠⠏⠀⠨⠅⠀⠠⠏</nemeth>. This means that either <i class="one-letter">a</i> is in <i class="one-letter">P</i> or <i class="one-letter">b</i> is in <i class="one-letter">P</i>, which shows that <i class="one-letter">P</i> must be prime.</p>
              <p id="GxX">Conversely, suppose that <i class="one-letter">P</i> is prime and</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠬⠠⠏⠾⠷⠃⠬⠠⠏⠾⠀⠨⠅⠀⠁⠃⠬⠠⠏⠀⠨⠅⠀⠼⠴⠬⠠⠏⠀⠨⠅⠀⠠⠏</nemeth>
              </div>
              <p data-braille="continuation">. Then <nemeth class="inline">⠁⠃⠀⠈⠑⠀⠠⠏</nemeth>. If <nemeth class="inline">⠁⠀⠌⠈⠑⠀⠠⠏</nemeth>, then <i class="one-letter">b</i> must be in <i class="one-letter">P</i> by the definition of a prime ideal; hence, <nemeth class="inline">⠃⠬⠠⠏⠀⠨⠅⠀⠼⠴⠬⠠⠏</nemeth> and <nemeth class="inline">⠠⠗⠸⠌⠠⠏</nemeth> is an integral domain.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="QWP">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">16.4.5</span>
                <span class="period">.</span>
              </h6>
              <p id="QBD">Every ideal in <nemeth class="inline">⠸⠠⠵</nemeth> is of the form <nemeth class="inline">⠝⠸⠠⠵</nemeth>. The factor ring <nemeth class="inline">⠸⠠⠵⠸⠌⠝⠸⠠⠵⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠝</nemeth> is an integral domain only when <i class="one-letter">n</i> is prime. It is actually a field. Hence, the nonzero prime ideals in <nemeth class="inline">⠸⠠⠵</nemeth> are the ideals <nemeth class="inline">⠏⠸⠠⠵</nemeth>, where <i class="one-letter">p</i> is prime. This example really justifies the use of the word “prime” in our definition of prime ideals.</p>
            </article>
            <p id="ZVp">Since every field is an integral domain, we have the following corollary.</p>
            <article class="corollary theorem-like" data-braille="theorem-like" id="yjr">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">16.4.6</span>
                <span class="period">.</span>
              </h6>
              <p id="RGW">Every maximal ideal in a commutative ring with identity is also a prime ideal.</p>
            </article>
          </section>
          <section class="subsection" id="HoI">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">16.4.1</span> <span class="title">Historical Note</span></div>
            <p id="cuw">Amalie Emmy Noether,  one of the outstanding mathematicians of the twentieth century, was born in Erlangen, Germany in 1882. She was the daughter of Max Noether  (1844–1921), a distinguished mathematician at the University of Erlangen. Together with Paul Gordon (1837–1912), Emmy Noether's father strongly influenced her early education. She entered the University of Erlangen at the age of 18. Although women had been admitted to universities in England, France, and Italy for decades, there was great resistance to their presence at universities in Germany. Noether was one of only two women among the university's 986 students. After completing her doctorate under Gordon in 1907, she continued to do research at Erlangen, occasionally lecturing when her father was ill.</p>
            <p id="IBF">Noether went to Göttingen to study in 1916. David Hilbert  and Felix Klein  tried unsuccessfully to secure her an appointment at Göttingen. Some of the faculty objected to women lecturers, saying, “What will our soldiers think when they return to the university and are expected to learn at the feet of a woman?” Hilbert, annoyed at the question, responded, “Meine Herren, I do not see that the sex of a candidate is an argument against her admission as a Privatdozent. After all, the Senate is not a bathhouse.” At the end of World War I, attitudes changed and conditions greatly improved for women. After Noether passed her habilitation examination in 1919, she was given a title and was paid a small sum for her lectures.</p>
            <p id="oIO">In 1922, Noether became a Privatdozent at Göttingen. Over the next 11 years she used axiomatic methods to develop an abstract theory of rings and ideals. Though she was not good at lecturing, Noether was an inspiring teacher. One of her many students was B. L. van der Waerden, author of the first text treating abstract algebra from a modern point of view. Some of the other mathematicians Noether influenced or closely worked with were Alexandroff, Artin, Brauer, Courant, Hasse, Hopf, Pontryagin, von Neumann, and Weyl. One of the high points of her career was an invitation to address the International Congress of Mathematicians in Zurich in 1932. In spite of all the recognition she received from her colleagues, Noether's abilities were never recognized as they should have been during her lifetime. She was never promoted to full professor by the Prussian academic bureaucracy.</p>
            <p id="UPX">In 1933, Noether, who was Jewish, was banned from participation in all academic activities in Germany. She emigrated to the United States, took a position at Bryn Mawr College, and became a member of the Institute for Advanced Study at Princeton. Noether died suddenly on April 14, 1935. After her death she was eulogized by such notable scientists as Albert Einstein.</p>
          </section>
        </section>
        <section class="section" id="JdV">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">16.5</span> <span class="title">An Application to Software Design</span></div>
          <p id="Xpe">The Chinese Remainder Theorem is a result from elementary number theory about the solution of systems of simultaneous congruences. The Chinese mathematician Sun-tsï wrote about the theorem in the first century A.D. This theorem has some interesting consequences in the design of software for parallel processors.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="Sci">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">16.5.1</span>
              <span class="period">.</span>
            </h6>
            <p id="lzN">Let <i class="one-letter">m</i> and <i class="one-letter">n</i> be positive integers such that <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>. Then for <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠵</nemeth> the system</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠍⠾⠀⠭⠀⠀⠸⠇⠀⠃⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">has a solution. If <nemeth class="inline">⠭⠂</nemeth> and <nemeth class="inline">⠭⠆</nemeth> are two solutions of the system, then  <nemeth class="inline">⠭⠂⠀⠸⠇⠀⠭⠆⠷⠍⠕⠙⠀⠍⠝⠾</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="PRw">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="mFg">The equation <nemeth class="inline">⠭⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠍⠾</nemeth> has a solution since <nemeth class="inline">⠁⠬⠅⠍</nemeth> satisfies the equation for all <nemeth class="inline">⠅⠀⠈⠑⠀⠸⠠⠵</nemeth>. We must show that there exists an integer <nemeth class="inline">⠅⠂</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠁⠬⠅⠂⠍⠀⠸⠇⠀⠃⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">. This is equivalent to showing that</p>
            <div class="displaymath">
              <nemeth>⠅⠂⠍⠀⠸⠇⠀⠷⠃⠤⠁⠾⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">has a solution for <nemeth class="inline">⠅⠂</nemeth>. Since <i class="one-letter">m</i> and <i class="one-letter">n</i> are relatively prime, there exist integers <i class="one-letter">s</i> and <i class="one-letter">t</i> such that <nemeth class="inline">⠍⠎⠬⠝⠞⠀⠨⠅⠀⠼⠂</nemeth>. Consequently,</p>
            <div class="displaymath">
              <nemeth>⠷⠃⠤⠁⠾⠍⠎⠀⠨⠅⠀⠷⠃⠤⠁⠾⠤⠷⠃⠤⠁⠾⠝⠞</nemeth>
            </div>
            <p data-braille="continuation">, or</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠷⠃⠤⠁⠾⠎⠈⠾⠍⠀⠸⠇⠀⠷⠃⠤⠁⠾⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">. Now let <nemeth class="inline">⠅⠂⠀⠨⠅⠀⠷⠃⠤⠁⠾⠎</nemeth>.</p>
            <p id="SMp">To show that any two solutions are congruent modulo <nemeth class="inline">⠍⠝</nemeth>, let <nemeth class="inline">⠉⠂</nemeth> and <nemeth class="inline">⠉⠆</nemeth> be two solutions of  the system. That is,</p>
            <div class="displaymath">
              <nemeth>⠉⠰⠊⠀⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠍⠾⠀⠉⠰⠊⠀⠀⠸⠇⠀⠃⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠉⠆⠀⠀⠸⠇⠀⠉⠂⠷⠍⠕⠙⠀⠍⠾⠀⠉⠆⠀⠀⠸⠇⠀⠉⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">. Therefore, both <i class="one-letter">m</i> and <i class="one-letter">n</i> divide <nemeth class="inline">⠉⠂⠤⠉⠆</nemeth>. Consequently, <nemeth class="inline">⠉⠆⠀⠸⠇⠀⠉⠂⠷⠍⠕⠙⠀⠍⠝⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="xdY">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.5.2</span>
              <span class="period">.</span>
            </h6>
            <p id="wIM">Let us solve the system</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠼⠒⠷⠍⠕⠙⠀⠲⠾⠀⠭⠀⠀⠸⠇⠀⠼⠲⠷⠍⠕⠙⠀⠢⠾</nemeth>
            </div>
            <p data-braille="continuation">. Using the Euclidean algorithm, we can find integers <i class="one-letter">s</i> and <i class="one-letter">t</i> such that <nemeth class="inline">⠼⠲⠎⠬⠢⠞⠀⠨⠅⠀⠼⠂</nemeth>. Two such integers are <nemeth class="inline">⠎⠀⠨⠅⠀⠼⠲</nemeth> and <nemeth class="inline">⠞⠀⠨⠅⠀⠤⠼⠒</nemeth>. Consequently,</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠨⠅⠀⠁⠬⠅⠂⠍⠀⠨⠅⠀⠼⠒⠬⠲⠅⠂⠀⠨⠅⠀⠼⠒⠬⠲⠈⠷⠷⠢⠤⠲⠾⠲⠈⠾⠀⠨⠅⠀⠼⠂⠔</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="UWO">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">16.5.3</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Chinese Remainder Theorem.</span>
            </h6>
            <p id="out">Let <nemeth class="inline">⠝⠂⠠⠀⠝⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝⠰⠅⠐</nemeth> be positive integers such that <nemeth class="inline">⠛⠉⠙⠀⠷⠝⠰⠊⠐⠠⠀⠝⠰⠚⠐⠾⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth>. Then for any integers <nemeth class="inline">⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐</nemeth>, the system</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠁⠂⠷⠍⠕⠙⠀⠝⠂⠾⠀⠭⠀⠀⠸⠇⠀⠁⠆⠷⠍⠕⠙⠀⠝⠆⠾⠀⠀⠀⠣⠄⠄⠄⠀⠭⠀⠀⠸⠇⠀⠁⠰⠅⠐⠷⠍⠕⠙⠀⠝⠰⠅⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">has a solution. Furthermore, any two solutions of the system are congruent modulo <nemeth class="inline">⠝⠂⠝⠆⠀⠄⠄⠄⠀⠝⠰⠅⠐</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="fau">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="yTy">We will use mathematical induction on the number of equations in the system. If there are <nemeth class="inline">⠅⠀⠨⠅⠀⠼⠆</nemeth> equations, then the theorem is true by  Lemma 16.5.1. Now suppose that the result is true for a system of <i class="one-letter">k</i> equations or less and that we wish to find a solution of</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠁⠂⠷⠍⠕⠙⠀⠝⠂⠾⠀⠭⠀⠀⠸⠇⠀⠁⠆⠷⠍⠕⠙⠀⠝⠆⠾⠀⠀⠀⠣⠄⠄⠄⠀⠭⠀⠀⠸⠇⠀⠁⠰⠅⠬⠂⠐⠷⠍⠕⠙⠀⠝⠰⠅⠬⠂⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">. Considering the first <i class="one-letter">k</i> equations, there exists a solution that is unique modulo <nemeth class="inline">⠝⠂⠀⠄⠄⠄⠀⠝⠰⠅⠐</nemeth>, say <i class="one-letter">a</i>. Since <nemeth class="inline">⠝⠂⠀⠄⠄⠄⠀⠝⠰⠅⠐</nemeth> and <nemeth class="inline">⠝⠰⠅⠬⠂</nemeth> are relatively prime, the system</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠂⠀⠄⠄⠄⠀⠝⠰⠅⠐⠾⠀⠭⠀⠀⠸⠇⠀⠁⠰⠅⠬⠂⠐⠷⠍⠕⠙⠀⠝⠰⠅⠬⠂⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">has a solution that is unique modulo <nemeth class="inline">⠝⠂⠀⠄⠄⠄⠀⠝⠰⠅⠬⠂⠐</nemeth> by the lemma.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="dlh">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.5.4</span>
              <span class="period">.</span>
            </h6>
            <p id="cPV">Let us solve the system</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠼⠒⠷⠍⠕⠙⠀⠲⠾⠀⠭⠀⠀⠸⠇⠀⠼⠲⠷⠍⠕⠙⠀⠢⠾⠀⠭⠀⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠔⠾⠀⠭⠀⠀⠸⠇⠀⠼⠢⠷⠍⠕⠙⠀⠶⠾</nemeth>
            </div>
            <p data-braille="continuation">. From Example 16.5.2 we know that <nemeth class="inline">⠼⠂⠔</nemeth> is a solution of the first two congruences and any other solution of the system is congruent to <nemeth class="inline">⠼⠂⠔⠷⠍⠕⠙⠀⠆⠴⠾</nemeth>. Hence, we can reduce the system to a system of three congruences:</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠼⠂⠔⠷⠍⠕⠙⠀⠆⠴⠾⠀⠭⠀⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠔⠾⠀⠭⠀⠀⠸⠇⠀⠼⠢⠷⠍⠕⠙⠀⠶⠾</nemeth>
            </div>
            <p data-braille="continuation">. Solving the next two equations, we can reduce the system to</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠼⠂⠔⠷⠍⠕⠙⠀⠂⠦⠴⠾⠀⠭⠀⠀⠸⠇⠀⠼⠢⠷⠍⠕⠙⠀⠶⠾</nemeth>
            </div>
            <p data-braille="continuation">. Solving this last system, we find that <nemeth class="inline">⠼⠂⠔</nemeth> is a solution for the system that is unique up to modulo <nemeth class="inline">⠼⠂⠆⠖⠴</nemeth>.</p>
          </article>
          <p id="Dwn">One interesting application of the Chinese Remainder Theorem in the design of computer software is that the theorem allows us to break up a calculation involving large integers into several less formidable calculations. A computer will handle integer calculations only up to a certain size due to the size of its processor chip, which is usually a 32 or 64-bit processor chip. For example, the largest integer available on a computer with a 64-bit processor chip is</p>
          <div class="displaymath">
            <nemeth>⠼⠆⠘⠖⠒⠐⠤⠂⠀⠨⠅⠀⠼⠔⠠⠆⠆⠒⠠⠒⠶⠆⠠⠴⠒⠖⠠⠦⠢⠲⠠⠶⠶⠢⠠⠦⠴⠶</nemeth>
          </div>
          <p data-braille="continuation">. Larger processors such as 128 or 256-bit have been proposed or are under development. There is even talk of a 512-bit processor chip. The largest integer that such a chip could store with be <nemeth class="inline">⠼⠆⠘⠢⠂⠂⠐⠤⠂</nemeth>, which would be a 154 digit number. However, we would need to deal with much larger numbers to break sophisticated encryption schemes.</p>
          <p id="jDw">Special software is required for calculations involving larger integers which cannot be added directly by the machine. By using the Chinese Remainder Theorem we can break down large integer additions and multiplications into calculations that the computer can handle directly. This is especially useful on parallel processing computers which have the ability to run several programs concurrently.</p>
          <p id="PKF">Most computers have a single central processing unit (CPU) containing one processor chip and can only add two numbers at a time. To add a list of ten numbers, the CPU must do nine additions in sequence. However, a parallel processing computer has more than one CPU. A computer with 10 CPUs, for example, can perform 10 different additions at the same time. If we can take a large integer and break it down into parts, sending each part to a different CPU, then by performing several additions or multiplications simultaneously on those parts, we can work with an integer that the computer would not be able to handle as a whole.</p>
          <article class="example example-like" data-braille="example-like" id="Jsq">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">16.5.5</span>
              <span class="period">.</span>
            </h6>
            <p id="IXe">Suppose that we wish to multiply <nemeth class="inline">⠼⠆⠂⠒⠲</nemeth> by <nemeth class="inline">⠼⠂⠢⠒⠂</nemeth>. We will use the integers <nemeth class="inline">⠼⠔⠢</nemeth>, <nemeth class="inline">⠼⠔⠶</nemeth>, <nemeth class="inline">⠼⠔⠦</nemeth>, and <nemeth class="inline">⠼⠔⠔</nemeth> because they are relatively prime. We can break down each integer into four parts:</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠂⠒⠲⠀⠀⠸⠇⠀⠼⠲⠲⠷⠍⠕⠙⠀⠔⠢⠾⠀⠆⠂⠒⠲⠀⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠔⠶⠾⠀⠆⠂⠒⠲⠀⠀⠸⠇⠀⠼⠶⠖⠷⠍⠕⠙⠀⠔⠦⠾⠀⠆⠂⠒⠲⠀⠀⠸⠇⠀⠼⠢⠢⠷⠍⠕⠙⠀⠔⠔⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠢⠒⠂⠀⠀⠸⠇⠀⠼⠂⠂⠷⠍⠕⠙⠀⠔⠢⠾⠀⠂⠢⠒⠂⠀⠀⠸⠇⠀⠼⠶⠖⠷⠍⠕⠙⠀⠔⠶⠾⠀⠂⠢⠒⠂⠀⠀⠸⠇⠀⠼⠖⠂⠷⠍⠕⠙⠀⠔⠦⠾⠀⠂⠢⠒⠂⠀⠀⠸⠇⠀⠼⠲⠖⠷⠍⠕⠙⠀⠔⠔⠾</nemeth>
            </div>
            <p data-braille="continuation">. Multiplying the corresponding equations, we obtain</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠂⠒⠲⠡⠂⠢⠒⠂⠀⠀⠸⠇⠀⠼⠲⠲⠡⠂⠂⠀⠸⠇⠀⠼⠔⠷⠍⠕⠙⠀⠔⠢⠾⠀⠆⠂⠒⠲⠡⠂⠢⠒⠂⠀⠀⠸⠇⠀⠼⠴⠡⠶⠖⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠔⠶⠾⠀⠆⠂⠒⠲⠡⠂⠢⠒⠂⠀⠀⠸⠇⠀⠼⠶⠖⠡⠖⠂⠀⠸⠇⠀⠼⠒⠴⠷⠍⠕⠙⠀⠔⠦⠾⠀⠆⠂⠒⠲⠡⠂⠢⠒⠂⠀⠀⠸⠇⠀⠼⠢⠢⠡⠲⠖⠀⠸⠇⠀⠼⠢⠢⠷⠍⠕⠙⠀⠔⠔⠾</nemeth>
            </div>
            <p data-braille="continuation">. Each of these four computations can be sent to a different processor if our computer has several CPUs. By the above calculation, we know that <nemeth class="inline">⠼⠆⠂⠒⠲⠡⠂⠢⠒⠂</nemeth> is a solution of the system</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠀⠸⠇⠀⠼⠔⠷⠍⠕⠙⠀⠔⠢⠾⠀⠭⠀⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠔⠶⠾⠀⠭⠀⠀⠸⠇⠀⠼⠒⠴⠷⠍⠕⠙⠀⠔⠦⠾⠀⠭⠀⠀⠸⠇⠀⠼⠢⠢⠷⠍⠕⠙⠀⠔⠔⠾</nemeth>
            </div>
            <p data-braille="continuation">. The Chinese Remainder Theorem tells us that solutions are unique up to modulo <nemeth class="inline">⠼⠔⠢⠡⠔⠶⠡⠔⠦⠡⠔⠔⠀⠨⠅⠀⠼⠦⠔⠠⠲⠴⠒⠠⠔⠒⠴</nemeth>. Solving this system of congruences for <i class="one-letter">x</i> tells us that <nemeth class="inline">⠼⠆⠂⠒⠲⠡⠂⠢⠒⠂⠀⠨⠅⠀⠼⠒⠠⠆⠖⠶⠠⠂⠢⠲</nemeth>.</p>
            <p id="pen">The conversion of the computation into the four subcomputations will take some computing time. In addition, solving the system of congruences can also take considerable time. However, if we have many computations to be performed on a particular set of numbers, it makes sense to transform the problem as we have done above and to perform the necessary calculations simultaneously.</p>
          </article>
          <article class="paragraphs" id="Euc">
            <h5 class="heading">
              <span class="title">Sage.</span>
            </h5>
            <p id="QPY">Rings are at the heart of Sage's design, so you will find a wide range of possibilities for computing with rings and fields. Ideals, quotients, and homomorphisms are all available.</p>
          </article>
        </section>
        <section class="reading-questions" id="bCH">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">16.6</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="sHw">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="xrp">What is the fundamental difference between groups and rings?</p>
          </article>
          <article class="exercise exercise-like" id="YOF">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="dyy">Give two characterizations of an integral domain.</p>
          </article>
          <article class="exercise exercise-like" id="EVO">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="JFH">Provide two examples of fields, one infinite, one finite.</p>
          </article>
          <article class="exercise exercise-like" id="lcX">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="pMQ">Who was Emmy Noether?</p>
          </article>
          <article class="exercise exercise-like" id="Rkg">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="VTZ">Speculate on a computer program that might use the Chinese Remainder Theorem to speed up computations with large integers.</p>
          </article>
        </section>
        <section class="exercises" id="LYB">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">16.7</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="Vsn">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="mjH">Which of the following sets are rings with respect to the usual operations of addition and multiplication? If the set is a ring, is it also a field?</p>
            <ol class="outerlist">
              <li>a. <p id="Mun"><nemeth class="inline">⠼⠶⠸⠠⠵</nemeth></p></li>
              <li>b. <p id="sBw"><nemeth class="inline">⠸⠠⠵⠂⠦</nemeth></p></li>
              <li>c. <p id="YIF"><nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth></p></li>
              <li>d. <p id="EPO"><nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠜⠒⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠬⠉⠜⠒⠻⠬⠙⠜⠖⠻⠒⠀⠁⠠⠀⠃⠠⠀⠉⠠⠀⠙⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth></p></li>
              <li>e. <p id="kWX"><nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠈⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠒⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth></p></li>
              <li>f. <p id="Reg"><nemeth class="inline">⠠⠗⠀⠨⠅⠀⠨⠷⠁⠬⠃⠣⠒⠜⠒⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth></p></li>
              <li>g. <p id="xlp"><nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠊⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠵⠁⠝⠙⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂⠨⠾</nemeth></p></li>
              <li>h. <p id="dsy"><nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠒⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠣⠒⠜⠒⠻⠬⠉⠣⠒⠜⠔⠻⠒⠀⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="cfO"><span class="type">Hint</span>:<p id="CTx">(a) <nemeth class="inline">⠼⠶⠸⠠⠵</nemeth> is a ring but not a field; (c) <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth> is a field; (f) <i class="one-letter">R</i> is not a ring.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Bzw">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="SqQ">Let <i class="one-letter">R</i> be the ring of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠗</nemeth>. Show that although <i class="one-letter">R</i> is a ring that has no identity, we can find a subring <i class="one-letter">S</i> of <i class="one-letter">R</i> with an identity.</p>
          </article>
          <article class="exercise exercise-like" id="hGF">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="yxZ">List or characterize all of the units in each of the following rings.</p>
            <ol class="outerlist">
              <li>a. <p id="GFb"><nemeth class="inline">⠸⠠⠵⠂⠴</nemeth></p></li>
              <li>b. <p id="mMk"><nemeth class="inline">⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>c. <p id="STt"><nemeth class="inline">⠸⠠⠵⠶</nemeth></p></li>
              <li>d. <p id="zaC"><nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠵⠾</nemeth>, the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠵</nemeth></p></li>
              <li>e. <p id="fhL"><nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠵⠆⠾</nemeth>, the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠵⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="UBp"><span class="type">Hint</span>:<p id="jaG">(a) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠶⠠⠀⠼⠔⠨⠾</nemeth>; (c) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠖⠨⠾</nemeth>; (e)</p><div class="displaymath"><nemeth>⠨⠷⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠠⠨⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NNO">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="eFi">Find all of the ideals in each of the following rings. Which of these ideals are maximal and which are prime?</p>
            <ol class="outerlist">
              <li>a. <p id="PYN"><nemeth class="inline">⠸⠠⠵⠂⠦</nemeth></p></li>
              <li>b. <p id="wfW"><nemeth class="inline">⠸⠠⠵⠆⠢</nemeth></p></li>
              <li>c. <p id="cnf"><nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth>, the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠗</nemeth></p></li>
              <li>d. <p id="Iuo"><nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠵⠾</nemeth>, the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠵</nemeth></p></li>
              <li>e. <p id="oBx"><nemeth class="inline">⠸⠠⠟</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="gPH"><span class="type">Hint</span>:<p id="PhP">(a) <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠔⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠖⠠⠀⠼⠂⠆⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠠⠀⠼⠂⠆⠠⠀⠼⠂⠢⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠴⠠⠀⠼⠂⠆⠠⠀⠼⠂⠲⠠⠀⠼⠂⠖⠨⠾</nemeth>; (c) there are no nontrivial ideals.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="tUX">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="KMr">For each of the following rings <i class="one-letter">R</i> with ideal <i class="one-letter">I</i>, give an addition table and a multiplication table for <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="Zsz"><nemeth class="inline">⠠⠗⠀⠨⠅⠀⠸⠠⠵</nemeth> and <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠼⠖⠸⠠⠵</nemeth></p></li>
              <li>b. <p id="FzI"><nemeth class="inline">⠠⠗⠀⠨⠅⠀⠸⠠⠵⠂⠆</nemeth> and <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠨⠾</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="acg">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="qTA">Find all homomorphisms <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠸⠌⠖⠸⠠⠵⠀⠫⠕⠀⠸⠠⠵⠸⠌⠂⠢⠸⠠⠵</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Gjp">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="XaJ">Prove that <nemeth class="inline">⠸⠠⠗</nemeth> is not isomorphic to <nemeth class="inline">⠸⠠⠉</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Fsr"><span class="type">Hint</span>:<p id="voY">Assume there is an isomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠉⠀⠫⠕⠀⠸⠠⠗</nemeth> with <nemeth class="inline">⠋⠷⠊⠾⠀⠨⠅⠀⠁</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="mqy">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="DhS">Prove or disprove: The ring <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth> is isomorphic to the ring <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠒⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="RGJ"><span class="type">Hint</span>:<p id="bwh">False. Assume there is an isomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠟⠷⠜⠆⠻⠾⠀⠫⠕⠀⠸⠠⠟⠷⠜⠒⠻⠾</nemeth> such that <nemeth class="inline">⠋⠷⠜⠆⠻⠾⠀⠨⠅⠀⠁</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="SxH">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="jpb">What is the characteristic of the field formed by the set of matrices</p>
            <div class="displaymath">
              <nemeth>⠠⠋⠀⠨⠅⠀⠨⠷⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">with entries in <nemeth class="inline">⠸⠠⠵⠆</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="yEQ">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="Pwk">Define a map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠉⠀⠫⠕⠀⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> by</p>
            <div class="displaymath">
              <nemeth>⠨⠋⠷⠁⠬⠃⠊⠾⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠤⠃⠀⠁⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">. Show that <nemeth class="inline">⠨⠋</nemeth> is an isomorphism of <nemeth class="inline">⠸⠠⠉</nemeth> with its image in <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="eLZ">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="vDt">Prove that the Gaussian integers, <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>, are an integral domain.</p>
          </article>
          <article class="exercise exercise-like" id="KTi">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="bKC">Prove that <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠒⠻⠊⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth> is an integral domain.</p>
          </article>
          <article class="exercise exercise-like" id="rar">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="HRL">Solve each of the following systems of congruences.</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠭⠀⠀⠸⠇⠀⠼⠆⠷⠍⠕⠙⠀⠢⠾⠀⠭⠀⠀⠸⠇⠀⠼⠖⠷⠍⠕⠙⠀⠂⠂⠾</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠭⠀⠀⠸⠇⠀⠼⠒⠷⠍⠕⠙⠀⠶⠾⠀⠭⠀⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠦⠾⠀⠭⠀⠀⠸⠇⠀⠼⠢⠷⠍⠕⠙⠀⠂⠢⠾</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠭⠀⠀⠸⠇⠀⠼⠆⠷⠍⠕⠙⠀⠲⠾⠀⠭⠀⠀⠸⠇⠀⠼⠲⠷⠍⠕⠙⠀⠶⠾⠀⠭⠀⠀⠸⠇⠀⠼⠶⠷⠍⠕⠙⠀⠔⠾⠀⠭⠀⠀⠸⠇⠀⠼⠢⠷⠍⠕⠙⠀⠂⠂⠾</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠭⠀⠀⠸⠇⠀⠼⠒⠷⠍⠕⠙⠀⠢⠾⠀⠭⠀⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠦⠾⠀⠭⠀⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠂⠂⠾⠀⠭⠀⠀⠸⠇⠀⠼⠢⠷⠍⠕⠙⠀⠂⠒⠾</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="CxL"><span class="type">Hint</span>:<p id="HDq">(a) <nemeth class="inline">⠭⠀⠸⠇⠀⠼⠂⠶⠷⠍⠕⠙⠀⠢⠢⠾</nemeth>; (c) <nemeth class="inline">⠭⠀⠸⠇⠀⠼⠆⠂⠲⠷⠍⠕⠙⠀⠆⠶⠶⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="XhA">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="nYU">Use the method of parallel computation outlined in the text to calculate <nemeth class="inline">⠼⠆⠆⠒⠲⠬⠲⠂⠆⠂</nemeth> by dividing the calculation into four separate additions modulo <nemeth class="inline">⠼⠔⠢</nemeth>, <nemeth class="inline">⠼⠔⠶</nemeth>, <nemeth class="inline">⠼⠔⠦</nemeth>, and <nemeth class="inline">⠼⠔⠔</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="DoJ">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="Ugd">Explain why the method of parallel computation outlined in the text fails for <nemeth class="inline">⠼⠆⠂⠒⠲⠡⠂⠢⠒⠂</nemeth> if we attempt to break the calculation down into two smaller calculations modulo <nemeth class="inline">⠼⠔⠦</nemeth> and <nemeth class="inline">⠼⠔⠔</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="jvS">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="Anm">If <i class="one-letter">R</i> is a field, show that the only two ideals of <i class="one-letter">R</i> are <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth> and <i class="one-letter">R</i> itself.</p>
            <div class="solutions">
              <div class="hint solution-like" id="bav"><span class="type">Hint</span>:<p id="nKz">If <nemeth class="inline">⠠⠊⠀⠌⠨⠅⠀⠨⠷⠼⠴⠨⠾</nemeth>, show that <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠊</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="PDb">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="guv">Let <i class="one-letter">a</i> be any element in a ring <i class="one-letter">R</i> with identity. Show that <nemeth class="inline">⠷⠤⠼⠂⠾⠁⠀⠨⠅⠀⠤⠁</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="vKk">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="MBE">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth> be a ring homomorphism. Prove each of the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="vaD">If <i class="one-letter">R</i> is a commutative ring, then <nemeth class="inline">⠋⠷⠠⠗⠾</nemeth> is a commutative ring.</p></li>
              <li>b. <p id="bhM"><nemeth class="inline">⠋⠷⠼⠴⠾⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
              <li>c. <p id="HoV">Let <nemeth class="inline">⠼⠂⠰⠠⠗</nemeth> and <nemeth class="inline">⠼⠂⠰⠠⠎</nemeth> be the identities for <i class="one-letter">R</i> and <i class="one-letter">S</i>, respectively. If <nemeth class="inline">⠨⠋</nemeth> is onto, then <nemeth class="inline">⠋⠷⠼⠂⠰⠠⠗⠐⠾⠀⠨⠅⠀⠼⠂⠰⠠⠎</nemeth>.</p></li>
              <li>d. <p id="nwe">If <i class="one-letter">R</i> is a field and <nemeth class="inline">⠋⠷⠠⠗⠾⠀⠌⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠋⠷⠠⠗⠾</nemeth> is a field.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="TvW"><span class="type">Hint</span>:<p id="TRI">(a) <nemeth class="inline">⠋⠷⠁⠾⠋⠷⠃⠾⠀⠨⠅⠀⠋⠷⠁⠃⠾⠀⠨⠅⠀⠋⠷⠃⠁⠾⠀⠨⠅⠀⠋⠷⠃⠾⠋⠷⠁⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="bRt">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="sIN">Prove that the associative law for multiplication and the distributive laws hold in <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="HYC">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="YPW">Prove the Second Isomorphism Theorem for rings: Let <i class="one-letter">I</i> be a subring of a ring <i class="one-letter">R</i>  and  <i class="one-letter">J</i> an ideal in <i class="one-letter">R</i>. Then <nemeth class="inline">⠠⠊⠨⠩⠠⠚</nemeth> is an ideal in <i class="one-letter">I</i> and</p>
            <div class="displaymath">
              <nemeth>⠠⠊⠸⠌⠠⠊⠨⠩⠠⠚⠀⠈⠱⠈⠱⠀⠠⠊⠬⠠⠚⠸⠌⠠⠚</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="ofL">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="EXf">Prove the Third Isomorphism Theorem for rings: Let <i class="one-letter">R</i> be a ring and <i class="one-letter">I</i> and <i class="one-letter">J</i> be ideals of <i class="one-letter">R</i>, where <nemeth class="inline">⠠⠚⠀⠸⠐⠅⠀⠠⠊</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠠⠗⠸⠌⠠⠊⠀⠈⠱⠈⠱⠀⠹⠠⠗⠸⠌⠠⠚⠌⠠⠊⠸⠌⠠⠚⠼</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="UmU">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="leo">Prove the Correspondence Theorem: Let <i class="one-letter">I</i> be an ideal of a ring <i class="one-letter">R</i>. Then <nemeth class="inline">⠠⠎⠀⠫⠕⠀⠠⠎⠸⠌⠠⠊</nemeth> is a one-to-one correspondence between the set of subrings <i class="one-letter">S</i> containing <i class="one-letter">I</i> and the set of subrings of <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth>. Furthermore, the ideals of <i class="one-letter">R</i> correspond to ideals of <nemeth class="inline">⠠⠗⠸⠌⠠⠊</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Aud">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="Rlx">Let <i class="one-letter">R</i> be a ring and <i class="one-letter">S</i> a subset of <i class="one-letter">R</i>. Show that <i class="one-letter">S</i> is a subring of <i class="one-letter">R</i> if and only if each of the following conditions is satisfied.</p>
            <ol class="outerlist">
              <li>a. <p id="sfX"><nemeth class="inline">⠠⠎⠀⠌⠨⠅⠀⠸⠴</nemeth>.</p></li>
              <li>b. <p id="Yng"><nemeth class="inline">⠗⠎⠀⠈⠑⠀⠠⠎</nemeth> for all <nemeth class="inline">⠗⠠⠀⠎⠀⠈⠑⠀⠠⠎</nemeth>.</p></li>
              <li>c. <p id="Eup"><nemeth class="inline">⠗⠤⠎⠀⠈⠑⠀⠠⠎</nemeth> for all <nemeth class="inline">⠗⠠⠀⠎⠀⠈⠑⠀⠠⠎</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="gBm">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="xsG">Let <i class="one-letter">R</i> be a ring with a collection of subrings <nemeth class="inline">⠨⠷⠠⠗⠰⠨⠁⠐⠨⠾</nemeth>. Prove that <nemeth class="inline">⠨⠩⠠⠗⠰⠨⠁</nemeth> is a subring of <i class="one-letter">R</i>. Give an example to show that the union of two subrings is not necessarily a subring.</p>
          </article>
          <article class="exercise exercise-like" id="MIv">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="dzP">Let <nemeth class="inline">⠨⠷⠠⠊⠰⠨⠁⠐⠨⠾⠰⠨⠁⠀⠈⠑⠀⠠⠁</nemeth> be a collection of ideals in a ring <i class="one-letter">R</i>. Prove that <nemeth class="inline">⠐⠨⠩⠩⠨⠁⠀⠈⠑⠀⠠⠁⠻⠠⠊⠰⠨⠁</nemeth> is also an ideal in <i class="one-letter">R</i>. Give an example to show that if <nemeth class="inline">⠠⠊⠂</nemeth> and <nemeth class="inline">⠠⠊⠆</nemeth> are ideals in <i class="one-letter">R</i>, then <nemeth class="inline">⠠⠊⠂⠨⠬⠠⠊⠆</nemeth> may not be an ideal.</p>
          </article>
          <article class="exercise exercise-like" id="sPE">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="JGY">Let <i class="one-letter">R</i> be an integral domain. Show that if the only ideals in <i class="one-letter">R</i> are <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth> and <i class="one-letter">R</i> itself, <i class="one-letter">R</i> must be a field.</p>
            <div class="solutions">
              <div class="hint solution-like" id="wIz"><span class="type">Hint</span>:<p id="zYR">Let <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth> with <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>. Then the principal ideal generated by <i class="one-letter">a</i> is <i class="one-letter">R</i>. Thus, there exists a <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠗</nemeth> such that <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="YWN">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="pOh">Let <i class="one-letter">R</i> be a commutative ring. An element <i class="one-letter">a</i> in <i class="one-letter">R</i> is <dfn class="terminology">nilpotent</dfn> if <nemeth class="inline">⠁⠘⠝⠐⠀⠨⠅⠀⠼⠴</nemeth> for some positive integer <i class="one-letter">n</i>. Show that the set of all nilpotent elements forms an ideal in <i class="one-letter">R</i>.</p>
          </article>
          <article class="exercise exercise-like" id="FdW">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="VVq">A ring <i class="one-letter">R</i> is a <dfn class="terminology">Boolean ring</dfn> if for every <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth>, <nemeth class="inline">⠁⠘⠆⠐⠀⠨⠅⠀⠁</nemeth>. Show that every Boolean ring is a commutative ring.</p>
            <div class="solutions">
              <div class="hint solution-like" id="pea"><span class="type">Hint</span>:<p id="gga">Compute <nemeth class="inline">⠷⠁⠬⠃⠾⠘⠆</nemeth> and <nemeth class="inline">⠷⠤⠁⠃⠾⠘⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="llf">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="Ccz">Let <i class="one-letter">R</i> be a ring, where <nemeth class="inline">⠁⠘⠒⠐⠀⠨⠅⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth>. Prove that <i class="one-letter">R</i> must be a commutative ring.</p>
          </article>
          <article class="exercise exercise-like" id="Rso">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="ijI">Let <i class="one-letter">R</i> be a ring with identity <nemeth class="inline">⠼⠂⠰⠠⠗</nemeth> and <i class="one-letter">S</i> a subring of <i class="one-letter">R</i> with identity <nemeth class="inline">⠼⠂⠰⠠⠎</nemeth>. Prove or disprove that <nemeth class="inline">⠼⠂⠰⠠⠗⠐⠀⠨⠅⠀⠼⠂⠰⠠⠎</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="xzx">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="OqR">If we do not require the identity of a ring to be distinct from 0, we will not have a very interesting mathematical structure. Let <i class="one-letter">R</i> be a ring such that <nemeth class="inline">⠼⠂⠀⠨⠅⠀⠼⠴</nemeth>. Prove that <nemeth class="inline">⠠⠗⠀⠨⠅⠀⠨⠷⠼⠴⠨⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="JNP">
            <h6 class="heading">
              <span class="codenumber">32<span class="period">.</span></span>
            </h6>
            <p id="aFj">Let <i class="one-letter">R</i> be a ring. Define the <dfn class="terminology">center</dfn> of <i class="one-letter">R</i> to be</p>
            <div class="displaymath">
              <nemeth>⠠⠵⠷⠠⠗⠾⠀⠨⠅⠀⠨⠷⠁⠀⠈⠑⠀⠠⠗⠒⠀⠁⠗⠀⠨⠅⠀⠗⠁⠋⠕⠗⠀⠁⠇⠇⠗⠀⠈⠑⠀⠠⠗⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <nemeth class="inline">⠠⠵⠷⠠⠗⠾</nemeth> is a commutative subring of <i class="one-letter">R</i>.</p>
          </article>
          <article class="exercise exercise-like" id="pUY">
            <h6 class="heading">
              <span class="codenumber">33<span class="period">.</span></span>
            </h6>
            <p id="GMs">Let <i class="one-letter">p</i> be prime. Prove that</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠵⠰⠷⠏⠾⠐⠀⠨⠅⠀⠨⠷⠁⠸⠌⠃⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠵⠁⠝⠙⠛⠉⠙⠀⠷⠃⠠⠀⠏⠾⠀⠨⠅⠀⠼⠂⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a ring. The ring <nemeth class="inline">⠸⠠⠵⠰⠷⠏⠾</nemeth> is called the <dfn class="terminology">ring of integers localized at</dfn> <i class="one-letter">p</i>. </p>
            <div class="solutions">
              <div class="hint solution-like" id="Gcl"><span class="type">Hint</span>:<p id="Mnj">Let <nemeth class="inline">⠁⠸⠌⠃⠠⠀⠉⠸⠌⠙⠀⠈⠑⠀⠸⠠⠵⠰⠷⠏⠾⠐</nemeth>. Then <nemeth class="inline">⠁⠸⠌⠃⠬⠉⠸⠌⠙⠀⠨⠅⠀⠷⠁⠙⠬⠃⠉⠾⠸⠌⠃⠙</nemeth> and <nemeth class="inline">⠷⠁⠸⠌⠃⠾⠡⠷⠉⠸⠌⠙⠾⠀⠨⠅⠀⠷⠁⠉⠾⠸⠌⠷⠃⠙⠾</nemeth> are both in <nemeth class="inline">⠸⠠⠵⠰⠷⠏⠾</nemeth>, since <nemeth class="inline">⠛⠉⠙⠀⠷⠃⠙⠠⠀⠏⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Wch">
            <h6 class="heading">
              <span class="codenumber">34<span class="period">.</span></span>
            </h6>
            <p id="mTB">Prove or disprove: Every finite integral domain is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Cjq">
            <h6 class="heading">
              <span class="codenumber">35<span class="period">.</span></span>
            </h6>
            <p id="TaK">Let <i class="one-letter">R</i> be a ring with identity.</p>
            <ol class="outerlist">
              <li>a. <p id="kBy">Let <i class="one-letter">u</i> be a unit in <i class="one-letter">R</i>. Define a map <nemeth class="inline">⠊⠰⠥⠐⠒⠀⠠⠗⠀⠫⠕⠀⠠⠗</nemeth> by <nemeth class="inline">⠗⠀⠫⠳⠒⠒⠕⠀⠥⠗⠥⠘⠤⠼⠂</nemeth>. Prove that <nemeth class="inline">⠊⠰⠥</nemeth> is an automorphism of <i class="one-letter">R</i>. Such an automorphism of <i class="one-letter">R</i> is called an inner automorphism of <i class="one-letter">R</i>. Denote the set of all inner automorphisms of <i class="one-letter">R</i> by <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠗⠾</nemeth>.</p></li>
              <li>b. <p id="QIH">Denote the set of all automorphisms of <i class="one-letter">R</i> by <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠗⠾</nemeth>. Prove that <nemeth class="inline">⠠⠊⠝⠝⠷⠠⠗⠾</nemeth> is a normal subgroup of <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠗⠾</nemeth>.</p></li>
              <li>c. <p id="wPQ">Let <nemeth class="inline">⠠⠥⠷⠠⠗⠾</nemeth> be the group of units in <i class="one-letter">R</i>. Prove that the map</p><div class="displaymath"><nemeth>⠨⠋⠒⠀⠠⠥⠷⠠⠗⠾⠀⠫⠕⠀⠠⠊⠝⠝⠷⠠⠗⠾</nemeth></div><p data-braille="continuation">defined by <nemeth class="inline">⠥⠀⠫⠳⠒⠒⠕⠀⠊⠰⠥</nemeth> is a homomorphism. Determine the kernel of <nemeth class="inline">⠨⠋</nemeth>.</p></li>
              <li>d. <p id="cWZ">Compute <nemeth class="inline">⠠⠁⠥⠞⠷⠸⠠⠵⠾</nemeth>, <nemeth class="inline">⠠⠊⠝⠝⠷⠸⠠⠵⠾</nemeth>, and <nemeth class="inline">⠠⠥⠷⠸⠠⠵⠾</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="iqz">
            <h6 class="heading">
              <span class="codenumber">36<span class="period">.</span></span>
            </h6>
            <p id="zhT">Let <i class="one-letter">R</i> and <i class="one-letter">S</i> be arbitrary rings. Show that their Cartesian product is a ring if we define addition and multiplication in <nemeth class="inline">⠠⠗⠈⠡⠠⠎</nemeth> by</p>
            <ol class="outerlist">
              <li>a. <p id="hGS"><nemeth class="inline">⠷⠗⠠⠀⠎⠾⠬⠷⠗⠘⠄⠐⠠⠀⠎⠘⠄⠐⠾⠀⠨⠅⠀⠷⠗⠬⠗⠘⠄⠐⠠⠀⠎⠬⠎⠘⠄⠐⠾</nemeth></p></li>
              <li>b. <p id="NOb"><nemeth class="inline">⠷⠗⠠⠀⠎⠾⠷⠗⠘⠄⠐⠠⠀⠎⠘⠄⠐⠾⠀⠨⠅⠀⠷⠗⠗⠘⠄⠐⠠⠀⠎⠎⠘⠄⠐⠾</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="OxI">
            <h6 class="heading">
              <span class="codenumber">37<span class="period">.</span></span>
            </h6>
            <p id="fpc">An element <i class="one-letter">x</i> in a ring is called an <dfn class="terminology">idempotent</dfn> if <nemeth class="inline">⠭⠘⠆⠐⠀⠨⠅⠀⠭</nemeth>. Prove that the only idempotents in an integral domain are <nemeth class="inline">⠼⠴</nemeth> and <nemeth class="inline">⠼⠂</nemeth>. Find a ring with a idempotent <i class="one-letter">x</i> not equal to 0 or 1.</p>
            <div class="solutions">
              <div class="hint solution-like" id="KMe"><span class="type">Hint</span>:<p id="sus">Suppose that <nemeth class="inline">⠭⠘⠆⠐⠀⠨⠅⠀⠭</nemeth> and <nemeth class="inline">⠭⠀⠌⠨⠅⠀⠼⠴</nemeth>. Since <i class="one-letter">R</i> is an integral domain, <nemeth class="inline">⠭⠀⠨⠅⠀⠼⠂</nemeth>. To find a nontrivial idempotent, look in <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uER">
            <h6 class="heading">
              <span class="codenumber">38<span class="period">.</span></span>
            </h6>
            <p id="Lwl">Let <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠝⠾⠀⠨⠅⠀⠙</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠃⠠⠀⠙⠾⠀⠌⠨⠅⠀⠼⠂</nemeth>. Prove that <nemeth class="inline">⠁⠭⠀⠸⠇⠀⠃⠷⠍⠕⠙⠀⠝⠾</nemeth> does not have a solution.</p>
          </article>
          <article class="exercise exercise-like" id="aMa">
            <h6 class="heading">
              <span class="codenumber">39<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">The Chinese Remainder Theorem for Rings.</span>
            </h6>
            <p id="rDu">Let <i class="one-letter">R</i> be a ring and <i class="one-letter">I</i> and <i class="one-letter">J</i> be ideals in <i class="one-letter">R</i> such that <nemeth class="inline">⠠⠊⠬⠠⠚⠀⠨⠅⠀⠠⠗</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="tVk">Show that for any <i class="one-letter">r</i> and <i class="one-letter">s</i> in <i class="one-letter">R</i>, the system of equations</p><div class="displaymath"><nemeth>⠭⠀⠀⠸⠇⠀⠗⠷⠍⠕⠙⠀⠠⠊⠾⠀⠭⠀⠀⠸⠇⠀⠎⠷⠍⠕⠙⠀⠠⠚⠾</nemeth></div><p data-braille="continuation">has a solution.</p></li>
              <li>b. <p id="act">In addition, prove that any two solutions of the system are congruent modulo <nemeth class="inline">⠠⠊⠨⠩⠠⠚</nemeth>.</p></li>
              <li>c. <p id="GjC">Let <i class="one-letter">I</i> and <i class="one-letter">J</i> be ideals in a ring <i class="one-letter">R</i> such that <nemeth class="inline">⠠⠊⠬⠠⠚⠀⠨⠅⠀⠠⠗</nemeth>. Show that there exists a ring isomorphism</p><div class="displaymath"><nemeth>⠠⠗⠸⠌⠷⠠⠊⠨⠩⠠⠚⠾⠀⠈⠱⠈⠱⠀⠠⠗⠸⠌⠠⠊⠈⠡⠠⠗⠸⠌⠠⠚</nemeth></div><p data-braille="continuation">.</p></li>
            </ol>
          </article>
        </section>
        <section class="exercises" id="sfK">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">16.8</span> <span class="title">Programming Exercise</span></div>
          <article class="exercise exercise-like" id="GTj">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="XKD">Write a computer program implementing fast addition and multiplication using the Chinese Remainder Theorem and the method outlined in the text.</p>
          </article>
        </section>
        <section class="references" id="JSg">
          <div class="none"><span class="type">References</span> <span class="codenumber">16.9</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="pZp"><div class="bibitem">[1]</div>  <div class="bibentry"> Anderson, F. W. and Fuller, K. R. <i>Rings and Categories of  Modules</i>. 2nd ed.  Springer, New York, 1992.</div></article>
          <article class="bib" id="Wgy"><div class="bibitem">[2]</div>  <div class="bibentry"> Atiyah, M. F.  and MacDonald, I. G. <i>Introduction to Commutative Algebra</i>. Westview Press, Boulder, CO, 1994.</div></article>
          <article class="bib" id="CnH"><div class="bibitem">[3]</div>  <div class="bibentry"> Herstein, I. N. <i>Noncommutative Rings</i>. Mathematical Association of America, Washington, DC, 1994.</div></article>
          <article class="bib" id="iuQ"><div class="bibitem">[4]</div>  <div class="bibentry"> Kaplansky, I. <i>Commutative Rings</i>. Revised edition. University of Chicago Press, Chicago, 1974.</div></article>
          <article class="bib" id="OBZ"><div class="bibitem">[5]</div>  <div class="bibentry"> Knuth, D. E. <i>The Art of Computer Programming: Semi-Numerical Algorithms</i>, vol. 2. 3rd ed. Addison-Wesley Professional, Boston, 1997.</div></article>
          <article class="bib" id="uJi"><div class="bibitem">[6]</div>  <div class="bibentry"> Lidl, R. and Pilz, G. <i>Applied Abstract Algebra</i>. 2nd ed. Springer, New York, 1998. A good source for applications.</div></article>
          <article class="bib" id="aQr"><div class="bibitem">[7]</div>  <div class="bibentry"> Mackiw, G. <i>Applications of Abstract Algebra</i>. Wiley, New York, 1985.</div></article>
          <article class="bib" id="GXA"><div class="bibitem">[8]</div>  <div class="bibentry"> McCoy,  N. H. <i>Rings and Ideals</i>. Carus Monograph Series, No. 8. Mathematical Association of America, Washington, DC, 1968.</div></article>
          <article class="bib" id="neJ"><div class="bibitem">[9]</div>  <div class="bibentry"> McCoy,  N. H. <i>The Theory of Rings</i>. Chelsea, New York, 1972.</div></article>
          <article class="bib" id="TlS"><div class="bibitem">[10]</div>  <div class="bibentry"> Zariski, O. and Samuel, P. <i>Commutative Algebra</i>, vols. I and II. Springer, New York, 1975, 1960.</div></article>
        </section>
        <section class="section" id="ple">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">16.10</span> <span class="title">Sage</span></div>
          <section class="introduction" id="hVa">
            <p id="Gcy">Rings are very important in your study of abstract algebra, and similarly, they are very important in the design and use of Sage. There is a lot of material in this chapter, and there are many corresponding commands in Sage.</p>
          </section>
          <section class="subsection" id="nvR">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">16.10.1</span> <span class="title">Creating Rings</span></div>
            <p id="AXg">Here is a list of various rings, domains and fields you can construct simply.</p>
            <ol class="outerlist">
              <li>1. <p id="mqL"><code class="code-inline tex2jax_ignore">Integers()</code>, <code class="code-inline tex2jax_ignore">ZZ</code>: the integral domain of positive and negative integers, <nemeth class="inline">⠸⠠⠵</nemeth>.</p></li>
              <li>2. <p id="SxU"><code class="code-inline tex2jax_ignore">Integers(n)</code>: the integers mod <i class="one-letter">n</i>, <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. A field when <i class="one-letter">n</i> is prime, but just a ring for composite <i class="one-letter">n</i>.</p></li>
              <li>3. <p id="yFd"><code class="code-inline tex2jax_ignore">QQ</code>: the field of rational numbers, <nemeth class="inline">⠸⠠⠟</nemeth>.</p></li>
              <li>4. <p id="eMm"><code class="code-inline tex2jax_ignore">RR</code>, <code class="code-inline tex2jax_ignore">CC</code>: the field of real numbers and the field of complex numbers, <nemeth class="inline">⠸⠠⠗</nemeth>, <nemeth class="inline">⠸⠠⠉</nemeth>. It is impossible to create <em class="emphasis">every</em> real number inside a computer, so technically these sets do not behave as fields, but only give a good imitiation of the real thing. We say they are <dfn class="terminology">inexact</dfn> rings to make this point.</p></li>
              <li>5. <p id="KTv"><code class="code-inline tex2jax_ignore">QuadraticField(n)</code>: the field formed by combining the rationals with a solution to the polynomial equation <nemeth class="inline">⠭⠘⠆⠐⠤⠝⠀⠨⠅⠀⠼⠴</nemeth>. The notation in the text is <nemeth class="inline">⠸⠠⠟⠈⠷⠜⠝⠻⠈⠾</nemeth>. A functional equivalent can be made with the syntax <code class="code-inline tex2jax_ignore">QQ[sqrt(n)]</code>. Note that <code class="code-inline tex2jax_ignore">n</code> can be negative.</p></li>
              <li>6. <p id="raE"><code class="code-inline tex2jax_ignore">CyclotomicField(n)</code>: the field formed by combining the rationals with the solutions to the polynomial equation <nemeth class="inline">⠭⠘⠝⠐⠤⠂⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
              <li>7. <p id="XhN"><code class="code-inline tex2jax_ignore">QQbar</code>: the field formed by combining the rationals with the solutions to <em class="emphasis">every</em> polynomial equation with integer coefficients. This is known as a the field of algebraic numbers, denoted as <nemeth class="inline">⠐⠸⠠⠟⠣⠱⠻</nemeth>.</p></li>
              <li>8. <p id="DoW"><code class="code-inline tex2jax_ignore">FiniteField(p)</code>: for a prime <i class="one-letter">p</i>, the field of integers <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p></li>
            </ol>
            <p id="hep">If you print a description of some of the above rings, you will sometimes see a new symbol introduced. Consider the following example:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F = QuadraticField(7)
F
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in a with defining polynomial x^2 - 7
with a = 2.645751311...?
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">root = F.gen(0)
root^2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">root
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(2*root)^3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">56*a
</div>
            </article>
            <p id="Nly">Here <code class="code-inline tex2jax_ignore">Number Field</code> describes an object generally formed by combining the rationals with another number (here <nemeth class="inline">⠜⠶⠻</nemeth>). “a” is a new symbol which behaves as a root of the polynomial <nemeth class="inline">⠭⠘⠆⠐⠤⠶</nemeth>. We do not say which root, <nemeth class="inline">⠜⠶⠻</nemeth> or <nemeth class="inline">⠤⠜⠶⠻</nemeth>, and as we understand the theory better we will see that this does not really matter.</p>
            <p id="tsH">We can obtain this root as a generator of the number field, and then manipulate it. First squaring <code class="code-inline tex2jax_ignore">root</code> yields 7. Notice that <code class="code-inline tex2jax_ignore">root</code> prints as <code class="code-inline tex2jax_ignore">a</code>. Notice, too, that computations with <code class="code-inline tex2jax_ignore">root</code> behave as if it was <em class="emphasis">either</em> root of <nemeth class="inline">⠭⠘⠆⠐⠤⠶</nemeth>, and results print using <code class="code-inline tex2jax_ignore">a</code>.</p>
            <p id="ZzQ">This can get a bit confusing, inputing computations with <code class="code-inline tex2jax_ignore">root</code> and getting output in terms of <code class="code-inline tex2jax_ignore">a</code>. Fortunately, there is a better way. Consider the following example:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;b&gt; = QuadraticField(7)
F
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in b with defining polynomial x^2 - 7
with b = 2.645751311...?
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b^2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(2*b)^3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">56*b
</div>
            </article>
            <p id="FGZ">With the syntax <code class="code-inline tex2jax_ignore">F.&lt;b&gt;</code> we can create the field <code class="code-inline tex2jax_ignore">F</code> along with specifying a generator <code class="code-inline tex2jax_ignore">b</code> using a name of our choosing. Then computations can use <code class="code-inline tex2jax_ignore">b</code> in both input and output as a root of <nemeth class="inline">⠭⠘⠆⠐⠤⠶</nemeth>.</p>
            <p id="lOi">Here are three new rings that are best created using this new syntax.</p>
            <ol class="outerlist">
              <li>1. <p id="jwf"><code class="code-inline tex2jax_ignore">F.&lt;a&gt; = FiniteField(p^n)</code>: We will later have a theorem that tells us that finite fields only exist with orders equal to to a power of a prime. When the power is larger than 1, then we need a generator, here given as <code class="code-inline tex2jax_ignore">a</code>.</p></li>
              <li>2. <p id="PDo"><code class="code-inline tex2jax_ignore">P.&lt;x&gt;=R[]</code>: the ring of all polynomials in the variable <code class="code-inline tex2jax_ignore">x</code>, with coefficients from the ring <code class="code-inline tex2jax_ignore">R</code>. Notice that <code class="code-inline tex2jax_ignore">R</code> can be <em class="emphasis">any</em> ring, so this is a very general construction that uses one ring to form another. See an example below.</p></li>
              <li>3. <p id="vKx"><code class="code-inline tex2jax_ignore">Q.&lt;r,s,t&gt; = QuaternionAlgebra(n, m)</code>: the rationals combined with indeterminates <code class="code-inline tex2jax_ignore">r</code>, <code class="code-inline tex2jax_ignore">s</code> and <code class="code-inline tex2jax_ignore">t</code> such that <nemeth class="inline">⠗⠘⠆⠐⠀⠨⠅⠀⠝</nemeth>, <nemeth class="inline">⠎⠘⠆⠐⠀⠨⠅⠀⠍</nemeth> and <nemeth class="inline">⠞⠀⠨⠅⠀⠗⠎⠀⠨⠅⠀⠤⠎⠗</nemeth>. This is a generalization of the quaternions described in this chapter, though over the rationals rather than the reals, so it is an exact ring. Notice that this is one of the few noncommutative rings in Sage. The “usual” quaternions would be constructed with <code class="code-inline tex2jax_ignore">Q.&lt;I,J,K&gt; = QuaternionAlgebra(-1, -1)</code>. (Notice that using <code class="code-inline tex2jax_ignore">I</code> here is not a good choice, because it will then clobber the symbol <code class="code-inline tex2jax_ignore">I</code> used for complex numbers.)</p></li>
            </ol>
            <p id="RVr">Syntax specifying names for generators can be used for many of the above rings as well, such as demonstrated above for quadratic fields and below for cyclotomic fields.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.&lt;t&gt; = CyclotomicField(8)
C.random_element()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-2/11*t^2 + t - 1
</div>
            </article>
          </section>
          <section class="subsection" id="TDa">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">16.10.2</span> <span class="title">Properties of Rings</span></div>
            <p id="ycA">The examples below demonstrate how to query certain properties of rings. If you are playing along, be sure to execute the first compute cell to define the various rings involved in the examples.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z7 = Integers(7)
Z9 = Integers(9)
Q = QuadraticField(-11)
F.&lt;a&gt; = FiniteField(3^2)
P.&lt;x&gt; = Z7[]
S.&lt;f,g,h&gt; = QuaternionAlgebra(-7, 3)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">
</div>
            </article>
            <p id="ejJ">Exact versus inexact.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">QQ.is_exact()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">RR.is_exact()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="KqS">Finite versus infinite.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z7.is_finite()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z7.is_finite()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="qyb">Integral domain?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z7.is_integral_domain()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z9.is_integral_domain()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="WFk">Field?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z9.is_field()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.is_field()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_field()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="CMt">Commutative?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_commutative()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S.is_commutative()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="iTC">Characteristic.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z7.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z9.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">9
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <p id="PaL">Additive and multiplicative identities <em class="emphasis">print</em> like you would expect, but notice that while they may <em class="emphasis">print</em> identically, they could be <em class="emphasis">different</em> because of the ring they live in.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = Z9.zero(); b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 9
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = Q.zero(); c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in a with defining polynomial x^2 + 11
with a = 3.316624790...?*I
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b == c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d = Z9.one(); d
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 9
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">e = Q.one(); e
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">e.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in a with defining polynomial x^2 + 11
with a = 3.316624790...?*I
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d == e
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="vhU">There is some support for subrings. For example, <code class="code-inline tex2jax_ignore">Q</code> and <code class="code-inline tex2jax_ignore">S</code> are extensions of the rationals, while <code class="code-inline tex2jax_ignore">F</code> is totally distinct from the rationals.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">QQ.is_subring(Q)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">QQ.is_subring(S)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">QQ.is_subring(F)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="bpd">Not every element of a ring may have a multiplicative inverse, in other words, not every element has to be a unit (unless the ring is a field). It would now be good practice to check if an element is a unit before you try computing its inverse.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">three = Z9(3)
three.is_unit()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">three*three
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">four = Z9(4)
four.is_unit()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">g = four^-1; g
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">four*g
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
          </section>
          <section class="subsection" id="zKj">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">16.10.3</span> <span class="title">Quotient Structure</span></div>
            <p id="Hwm">Ideals are the normal subgroups of rings and allow us to build “quotients” — basically new rings defined on equivalence classes of elements of the original ring. Sage support for ideals is variable. When they can be created, there is not always a lot you can do with them. But they work well in certain very important cases.</p>
            <p id="nDv">The integers, <nemeth class="inline">⠸⠠⠵</nemeth>, have ideals that are just multiples of a single integer. We can create them with the <code class="code-inline tex2jax_ignore">.ideal()</code> method or just by wrting a scalar multiple of <code class="code-inline tex2jax_ignore">ZZ</code>. And then the quotient is isomorphic to a well-understood ring. (Notice that <code class="code-inline tex2jax_ignore">I</code> is a bad name for an ideal if we want to work with complex numbers later.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">I1 = ZZ.ideal(4)
I2 = 4*ZZ
I3 = (-4)*ZZ
I1 == I2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">I2 == I3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q = ZZ.quotient(I1); Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q == Integers(4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="TKE">We might normally be more careful about the last statement. The quotient is a set of equivalence classes, each infinite, and certainly not a single integer. But the quotient is <em class="emphasis">isomorphic</em> to <nemeth class="inline">⠸⠠⠵⠲</nemeth>, so Sage just makes this identification.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z7 = Integers(7)
P.&lt;y&gt; = Z7[]
M = P.ideal(y^2+4)
Q = P.quotient(M)
Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Quotient Polynomial Ring in ybar over
Ring of integers modulo 7 with modulus y^2 + 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.random_element()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2*ybar + 6
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">49
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_field()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="zRN">Notice that the construction of the quotient ring has created a new generator, converting <code class="code-inline tex2jax_ignore">y</code>(<i class="one-letter">y</i>) to <code class="code-inline tex2jax_ignore">ybar</code> (<nemeth class="inline">⠐⠽⠣⠱⠻</nemeth>). We can override this as before with the syntax demonstrated below.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.&lt;t&gt; = P.quotient(M); Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Quotient Polynomial Ring in t over
Ring of integers modulo 7 with modulus y^2 + 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.random_element()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4*t + 6
</div>
            </article>
            <p id="fYW">So from a quotient of an infinite ring and an ideal (which is also a ring), we create a field, which is finite. Understanding this construction will be an important theme in the next few chapters. To see how remarkable it is, consider what happens with just one little change.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z7 = Integers(7)
P.&lt;y&gt; = Z7[]
M = P.ideal(y^2+3)
Q.&lt;t&gt; = P.quotient(M)
Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Quotient Polynomial Ring in t over
Ring of integers modulo 7 with modulus y^2 + 3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.random_element()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3*t + 1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">49
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_field()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="Mgf">There are a few methods available which will give us properties of ideals. In particular, we can check for prime and maximal ideals in rings of polynomials. Examine the results above and below in the context of Theorem 16.4.1.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z7 = Integers(7)
P.&lt;y&gt; = Z7[]
M = P.ideal(y^2+4)
N = P.ideal(y^2+3)
M.is_maximal()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N.is_maximal()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="sno">The fact that <code class="code-inline tex2jax_ignore">M</code> is a prime ideal is verification of Corollary 16.4.6.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M.is_prime()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N.is_prime()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
          </section>
          <section class="subsection" id="fRs">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">16.10.4</span> <span class="title">Ring Homomorphisms</span></div>
            <p id="Yux">When Sage is presented with <code class="code-inline tex2jax_ignore">3 + 4/3</code>, how does it know that 3 is meant to be an integer? And then to add it to a rational, how does it know that we really want to view the computation as 3/1 + 4/3? This is really easy for you and me, but devilishly hard for a program, and you can imagine it getting ever more complicated with the many possible rings in Sage, subrings, matrices, etc. Part of the answer is that Sage uses ring homomorphisms to “translate” objects (numbers) between rings.</p>
            <p id="EBG">We will give an example below, but not pursue the topic much further. For the curious, reading the Sage documentation and experimenting would be a good exercise.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = Hom(ZZ, QQ)
phi = H([1])
phi
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring morphism:
  From: Integer Ring
  To:   Rational Field
  Defn: 1 |--&gt; 1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">phi.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Set of Homomorphisms from Integer Ring to Rational Field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 3; a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Integer Ring
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = phi(3); b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Rational Field
</div>
            </article>
            <p id="kIP">So <code class="code-inline tex2jax_ignore">phi</code> is a homomorphism (“morphism”) that converts integers (the domain is <code class="code-inline tex2jax_ignore">ZZ</code>) into rationals (the codomain is <code class="code-inline tex2jax_ignore">QQ</code>), whose parent is a set of homomorphisms that Sage calls a “homset.” Even though <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code> both print as <code class="code-inline tex2jax_ignore">3</code>, which is indistinguishable to our eyes, the parents of <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code> are different. Yet the numerical value of the two objects has not changed.</p>
          </section>
        </section>
        <section class="exercises" id="YmT">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">16.11</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="nas">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="DRM">Define the two rings <nemeth class="inline">⠸⠠⠵⠂⠂</nemeth> and <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth> with the commands <code class="code-inline tex2jax_ignore">R = Integers(11)</code> and <code class="code-inline tex2jax_ignore">S = Integers(12)</code>. For each ring, use the relevant command to determine: if the ring is finite, if it is commutative, if it is an integral domain and if it is a field. Then use single Sage commands to find the order of the ring, list the elements, and output the multiplicative identity (i.e. <nemeth class="inline">⠼⠂</nemeth>, if it exists).</p>
          </article>
          <article class="exercise exercise-like" id="ThB">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="jYV">Define <code class="code-inline tex2jax_ignore">R</code> to be the ring of integers, <nemeth class="inline">⠸⠠⠵</nemeth>, by executing <code class="code-inline tex2jax_ignore">R = ZZ</code> or <code class="code-inline tex2jax_ignore">R = Integers()</code>. A command like <code class="code-inline tex2jax_ignore">R.ideal(4)</code> will create the principal ideal <nemeth class="inline">⠨⠨⠷⠼⠲⠨⠨⠾</nemeth>. The same command can accept more than one generator, so for example, <code class="code-inline tex2jax_ignore">R.ideal(3, 5)</code> will create the ideal <nemeth class="inline">⠨⠷⠁⠡⠒⠬⠃⠡⠢⠳⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>. Create several ideals of <nemeth class="inline">⠸⠠⠵</nemeth> with two generators and ask Sage to print each as you create it. Explain what you observe and then create code that will test your observation for thousands of different examples.</p>
          </article>
          <article class="exercise exercise-like" id="zoK">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Qge">Create a finite field <i class="one-letter">F</i> of order 81 with <code class="code-inline tex2jax_ignore">F.&lt;t&gt;=FiniteField(3^4)</code>.</p>
            <ol class="outerlist">
              <li>a. <p id="bRG">List the elements of <i class="one-letter">F</i>.</p></li>
              <li>b. <p id="HYP">Obtain the generators of <i class="one-letter">F</i> with <code class="code-inline tex2jax_ignore">F.gens()</code>.</p></li>
              <li>c. <p id="ofY">Obtain the first generator of <i class="one-letter">F</i> and save it as <code class="code-inline tex2jax_ignore">u</code> with <code class="code-inline tex2jax_ignore">u = F.0</code>(alternatively, <code class="code-inline tex2jax_ignore">u = F.gen(0)</code>).</p></li>
              <li>d. <p id="Unh">Compute the first 80 powers of <code class="code-inline tex2jax_ignore">u</code> and comment.</p></li>
              <li>e. <p id="Auq">The generator you have worked with above is a root of a polynomial over <nemeth class="inline">⠸⠠⠵⠒</nemeth>. Obtain this polynomial with <code class="code-inline tex2jax_ignore">F.modulus()</code> and use this observation to explain the entry in your list of powers that is the fourth power of the generator.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="fvT">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="wnn">Build and analyze a quotient ring as follows:</p>
            <ol class="outerlist">
              <li>a. <p id="gBz">Use <code class="code-inline tex2jax_ignore">P.&lt;z&gt;=Integers(7)[]</code> to construct a ring <i class="one-letter">P</i> of polynomials in <i class="one-letter">z</i> with coefficients from <nemeth class="inline">⠸⠠⠵⠶</nemeth>.</p></li>
              <li>b. <p id="MII">Use <code class="code-inline tex2jax_ignore">K = P.ideal(z^2+z+3)</code> to build a principal ideal <i class="one-letter">K</i> generated by the polynomial <nemeth class="inline">⠵⠘⠆⠐⠬⠵⠬⠒</nemeth>.</p></li>
              <li>c. <p id="sPR">Use <code class="code-inline tex2jax_ignore">H = P.quotient(K)</code> to build <i class="one-letter">H</i>, the quotient ring of <i class="one-letter">P</i> by <i class="one-letter">K</i>.</p></li>
              <li>d. <p id="YXa">Use Sage to verify that <i class="one-letter">H</i> is a field.</p></li>
              <li>e. <p id="Fej">As in the previous exercise, obtain a generator and examine the proper collection of powers of that generator.</p></li>
            </ol>
          </article>
        </section>
      </section>
      <section class="chapter" id="tPt">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">17</span> <span class="title">Polynomials</span></div>
        <section class="introduction" id="VBe">
          <p id="Djs">Most people are fairly familiar with polynomials by the time they begin to study abstract algebra. When we examine polynomial expressions such as</p>
          <div class="displaymath">
            <nemeth>⠏⠷⠭⠾⠀⠀⠨⠅⠀⠭⠘⠒⠐⠤⠒⠭⠬⠆⠀⠟⠷⠭⠾⠀⠀⠨⠅⠀⠼⠒⠭⠘⠆⠐⠤⠖⠭⠬⠢</nemeth>
          </div>
          <p data-braille="continuation">, we have a pretty good idea of what <nemeth class="inline">⠏⠷⠭⠾⠬⠟⠷⠭⠾</nemeth> and <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾</nemeth> mean. We just add and multiply polynomials as functions; that is,</p>
          <div class="displaymath">
            <nemeth>⠷⠏⠬⠟⠾⠷⠭⠾⠀⠀⠨⠅⠀⠏⠷⠭⠾⠬⠟⠷⠭⠾⠀⠀⠀⠀⠨⠅⠀⠷⠭⠘⠒⠐⠤⠒⠭⠬⠆⠾⠬⠷⠒⠭⠘⠆⠐⠤⠖⠭⠬⠢⠾⠀⠀⠀⠀⠨⠅⠀⠭⠘⠒⠐⠬⠒⠭⠘⠆⠐⠤⠔⠭⠬⠶</nemeth>
          </div>
          <p data-braille="continuation">and</p>
          <div class="displaymath">
            <nemeth>⠷⠏⠟⠾⠷⠭⠾⠀⠀⠨⠅⠀⠏⠷⠭⠾⠟⠷⠭⠾⠀⠀⠀⠀⠨⠅⠀⠷⠭⠘⠒⠐⠤⠒⠭⠬⠆⠾⠷⠒⠭⠘⠆⠐⠤⠖⠭⠬⠢⠾⠀⠀⠀⠀⠨⠅⠀⠼⠒⠭⠘⠢⠐⠤⠖⠭⠘⠲⠐⠤⠲⠭⠘⠒⠐⠬⠆⠲⠭⠘⠆⠐⠤⠆⠶⠭⠬⠂⠴</nemeth>
          </div>
          <p data-braille="continuation">. It is probably no surprise that polynomials form a ring. In this chapter we shall emphasize the algebraic structure of polynomials by studying polynomial rings. We can prove many results for polynomial rings that are similar to the theorems we proved for the integers. Analogs of prime numbers, the division algorithm, and the Euclidean algorithm exist for polynomials.</p>
        </section>
        <section class="section" id="Djf">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">17.1</span> <span class="title">Polynomial Rings</span></div>
          <p id="NWS">Throughout this chapter we shall assume that <i class="one-letter">R</i> is a commutative ring with identity. Any expression of the form</p>
          <div class="displaymath">
            <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠁⠰⠊⠐⠭⠘⠊⠐⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠁⠆⠭⠘⠆⠐⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝</nemeth>
          </div>
          <p data-braille="continuation">, where <nemeth class="inline">⠁⠰⠊⠐⠀⠈⠑⠀⠠⠗</nemeth> and <nemeth class="inline">⠁⠰⠝⠐⠀⠌⠨⠅⠀⠼⠴</nemeth>, is called a <dfn class="terminology">polynomial over <i class="one-letter">R</i></dfn> with <dfn class="terminology">indeterminate</dfn>  <i class="one-letter">x</i>. The elements <nemeth class="inline">⠁⠴⠠⠀⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐</nemeth> are called the <dfn class="terminology">coefficients</dfn> of <i class="one-letter">f</i>. The coefficient <nemeth class="inline">⠁⠰⠝</nemeth> is called the <dfn class="terminology">leading coefficient</dfn>.  A polynomial is called <dfn class="terminology">monic</dfn>  if the leading coefficient is 1. If <i class="one-letter">n</i> is the largest nonnegative number for which <nemeth class="inline">⠁⠰⠝⠐⠀⠌⠨⠅⠀⠼⠴</nemeth>, we say that the <dfn class="terminology">degree</dfn> of <i class="one-letter">f</i> is <i class="one-letter">n</i> and write <nemeth class="inline">⠙⠑⠛⠀⠋⠷⠭⠾⠀⠨⠅⠀⠝</nemeth>.  If no such <i class="one-letter">n</i> exists—that is, if <nemeth class="inline">⠋⠀⠨⠅⠀⠼⠴</nemeth> is the zero polynomial—then the degree of <i class="one-letter">f</i> is defined to be <nemeth class="inline">⠤⠠⠿</nemeth>. We will denote the set of all polynomials with coefficients in a ring <i class="one-letter">R</i> by <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth>.  Two polynomials are equal exactly when their corresponding coefficients are equal; that is, if we let</p>
          <div class="displaymath">
            <nemeth>⠏⠷⠭⠾⠀⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠀⠟⠷⠭⠾⠀⠀⠨⠅⠀⠃⠴⠬⠃⠂⠭⠬⠄⠄⠄⠬⠃⠰⠍⠐⠭⠘⠍</nemeth>
          </div>
          <p data-braille="continuation">, then <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠟⠷⠭⠾</nemeth> if and only if <nemeth class="inline">⠁⠰⠊⠐⠀⠨⠅⠀⠃⠰⠊</nemeth> for all <nemeth class="inline">⠊⠀⠨⠂⠱⠀⠼⠴</nemeth>.</p>
          <p id="ueb">To show that the set of all polynomials forms a ring, we must first define addition and multiplication. We define the sum of two polynomials as follows. Let</p>
          <div class="displaymath">
            <nemeth>⠏⠷⠭⠾⠀⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠀⠟⠷⠭⠾⠀⠀⠨⠅⠀⠃⠴⠬⠃⠂⠭⠬⠄⠄⠄⠬⠃⠰⠍⠐⠭⠘⠍</nemeth>
          </div>
          <p data-braille="continuation">. Then the sum of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> is</p>
          <div class="displaymath">
            <nemeth>⠏⠷⠭⠾⠬⠟⠷⠭⠾⠀⠨⠅⠀⠉⠴⠬⠉⠂⠭⠬⠄⠄⠄⠬⠉⠰⠅⠐⠭⠘⠅</nemeth>
          </div>
          <p data-braille="continuation">, where <nemeth class="inline">⠉⠰⠊⠐⠀⠨⠅⠀⠁⠰⠊⠐⠬⠃⠰⠊</nemeth> for each <i class="one-letter">i</i>. We define the product of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> to be</p>
          <div class="displaymath">
            <nemeth>⠏⠷⠭⠾⠟⠷⠭⠾⠀⠨⠅⠀⠉⠴⠬⠉⠂⠭⠬⠄⠄⠄⠬⠉⠰⠍⠬⠝⠐⠭⠘⠍⠬⠝</nemeth>
          </div>
          <p data-braille="continuation">, where</p>
          <div class="displaymath">
            <nemeth>⠉⠰⠊⠐⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠊⠻⠁⠰⠅⠐⠃⠰⠊⠤⠅⠐⠀⠨⠅⠀⠁⠴⠃⠰⠊⠐⠬⠁⠂⠃⠰⠊⠤⠂⠐⠬⠄⠄⠄⠬⠁⠰⠊⠤⠂⠐⠃⠂⠬⠁⠰⠊⠐⠃⠴</nemeth>
          </div>
          <p data-braille="continuation">for each <i class="one-letter">i</i>. Notice that in each case some of the coefficients may be zero.</p>
          <article class="example example-like" data-braille="example-like" id="YvK">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">17.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="hBo">Suppose that</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠼⠒⠬⠴⠭⠬⠴⠭⠘⠆⠐⠬⠆⠭⠘⠒⠐⠬⠴⠭⠘⠲</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠟⠷⠭⠾⠀⠨⠅⠀⠼⠆⠬⠴⠭⠤⠭⠘⠆⠐⠬⠴⠭⠘⠒⠐⠬⠲⠭⠘⠲</nemeth>
            </div>
            <p data-braille="continuation">are polynomials in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. If the coefficient of some term in a polynomial is zero, then we usually just omit that term. In this case we  would write <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠼⠒⠬⠆⠭⠘⠒</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠼⠆⠤⠭⠘⠆⠐⠬⠲⠭⠘⠲</nemeth>. The sum of these two polynomials is</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠬⠟⠷⠭⠾⠀⠨⠅⠀⠼⠢⠤⠭⠘⠆⠐⠬⠆⠭⠘⠒⠐⠬⠲⠭⠘⠲</nemeth>
            </div>
            <p data-braille="continuation">. The product,</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠟⠷⠭⠾⠀⠨⠅⠀⠷⠼⠒⠬⠆⠭⠘⠒⠐⠾⠷⠆⠤⠭⠘⠆⠐⠬⠲⠭⠘⠲⠐⠾⠀⠨⠅⠀⠼⠖⠤⠒⠭⠘⠆⠐⠬⠲⠭⠘⠒⠐⠬⠂⠆⠭⠘⠲⠐⠤⠆⠭⠘⠢⠐⠬⠦⠭⠘⠶</nemeth>
            </div>
            <p data-braille="continuation">, can be calculated either by determining the <nemeth class="inline">⠉⠰⠊</nemeth>s in the definition or by simply multiplying polynomials in the same way as we have always done.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="ECT">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">17.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="NIx">Let</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠼⠒⠬⠒⠭⠘⠒⠐⠁⠝⠙⠟⠷⠭⠾⠀⠨⠅⠀⠼⠲⠬⠲⠭⠘⠆⠐⠬⠲⠭⠘⠲</nemeth>
            </div>
            <p data-braille="continuation">be polynomials in <nemeth class="inline">⠸⠠⠵⠂⠆⠈⠷⠭⠈⠾</nemeth>. The sum of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> is <nemeth class="inline">⠼⠶⠬⠲⠭⠘⠆⠬⠒⠭⠘⠒⠬⠲⠭⠘⠲</nemeth>. The product of the two polynomials is  the zero polynomial. This example tells us that we can not expect <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth> to be an integral domain if <i class="one-letter">R</i> is not an integral domain.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="CNG">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">17.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="fMb">Let <i class="one-letter">R</i> be a commutative ring with identity. Then <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth> is a commutative ring with identity.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="NWF">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="UDc">Our first task is to show that <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth> is an abelian group under polynomial addition. The zero polynomial, <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth>, is the additive identity. Given a polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠁⠰⠊⠐⠭⠘⠊</nemeth>, the inverse of <nemeth class="inline">⠏⠷⠭⠾</nemeth> is easily verified to be <nemeth class="inline">⠤⠏⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠷⠤⠁⠰⠊⠐⠾⠭⠘⠊⠐⠀⠨⠅⠀⠤⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠁⠰⠊⠐⠭⠘⠊</nemeth>. Commutativity and associativity follow immediately from the definition of polynomial addition and from the fact that addition in <i class="one-letter">R</i> is both commutative and associative.</p>
            <p id="AKl">To show that polynomial multiplication is associative, let</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠻⠁⠰⠊⠐⠭⠘⠊⠐⠠⠀⠟⠷⠭⠾⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠃⠰⠊⠐⠭⠘⠊⠐⠠⠀⠗⠷⠭⠾⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠏⠻⠉⠰⠊⠐⠭⠘⠊</nemeth>
            </div>
            <p data-braille="continuation">. Then</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠏⠷⠭⠾⠟⠷⠭⠾⠈⠾⠗⠷⠭⠾⠀⠀⠨⠅⠀⠈⠷⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠻⠁⠰⠊⠐⠭⠘⠊⠐⠾⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠃⠰⠊⠐⠭⠘⠊⠐⠾⠈⠾⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠏⠻⠉⠰⠊⠐⠭⠘⠊⠐⠾⠀⠀⠀⠀⠨⠅⠀⠈⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠬⠝⠻⠷⠐⠨⠠⠎⠩⠚⠀⠨⠅⠀⠼⠴⠣⠊⠻⠁⠰⠚⠐⠃⠰⠊⠤⠚⠐⠾⠭⠘⠊⠐⠈⠾⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠏⠻⠉⠰⠊⠐⠭⠘⠊⠐⠾⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠬⠝⠬⠏⠻⠈⠷⠐⠨⠠⠎⠩⠚⠀⠨⠅⠀⠼⠴⠣⠊⠻⠷⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠚⠻⠁⠰⠅⠐⠃⠰⠚⠤⠅⠐⠾⠉⠰⠊⠤⠚⠐⠈⠾⠭⠘⠊⠐⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠬⠝⠬⠏⠻⠷⠐⠨⠠⠎⠩⠚⠬⠅⠬⠇⠀⠨⠅⠀⠊⠻⠁⠰⠚⠐⠃⠰⠅⠐⠉⠰⠇⠐⠾⠭⠘⠊⠐⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠬⠝⠬⠏⠻⠈⠷⠐⠨⠠⠎⠩⠚⠀⠨⠅⠀⠼⠴⠣⠊⠻⠁⠰⠚⠐⠷⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠊⠤⠚⠻⠃⠰⠅⠐⠉⠰⠊⠤⠚⠤⠅⠐⠾⠈⠾⠭⠘⠊⠐⠀⠀⠀⠀⠨⠅⠀⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠻⠁⠰⠊⠐⠭⠘⠊⠐⠾⠈⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠬⠏⠻⠷⠐⠨⠠⠎⠩⠚⠀⠨⠅⠀⠼⠴⠣⠊⠻⠃⠰⠚⠐⠉⠰⠊⠤⠚⠐⠾⠭⠘⠊⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠻⠁⠰⠊⠐⠭⠘⠊⠐⠾⠈⠷⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠃⠰⠊⠐⠭⠘⠊⠐⠾⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠏⠻⠉⠰⠊⠐⠭⠘⠊⠐⠾⠈⠾⠀⠀⠀⠀⠨⠅⠀⠏⠷⠭⠾⠈⠷⠟⠷⠭⠾⠗⠷⠭⠾⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">The commutativity and distribution properties of polynomial multiplication are proved in a similar manner. We shall leave the proofs of these properties as an exercise.</p>
          </article>
          <article class="proposition theorem-like" data-braille="theorem-like" id="Hxz">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">17.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="wKm">Let <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> be polynomials in <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth>, where <i class="one-letter">R</i> is an integral domain. Then <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠬⠙⠑⠛⠀⠟⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠷⠏⠷⠭⠾⠟⠷⠭⠾⠾</nemeth>. Furthermore, <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth> is an integral domain.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="eUQ">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="gRu">Suppose that we have two nonzero polynomials</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠁⠰⠍⠐⠭⠘⠍⠐⠬⠄⠄⠄⠬⠁⠂⠭⠬⠁⠴</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠟⠷⠭⠾⠀⠨⠅⠀⠃⠰⠝⠐⠭⠘⠝⠐⠬⠄⠄⠄⠬⠃⠂⠭⠬⠃⠴</nemeth>
            </div>
            <p data-braille="continuation">with <nemeth class="inline">⠁⠰⠍⠐⠀⠌⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠃⠰⠝⠐⠀⠌⠨⠅⠀⠼⠴</nemeth>. The degrees of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> are <i class="one-letter">m</i> and <i class="one-letter">n</i>, respectively. The leading term of <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾</nemeth> is <nemeth class="inline">⠁⠰⠍⠐⠃⠰⠝⠐⠭⠘⠍⠬⠝</nemeth>, which cannot be zero since <i class="one-letter">R</i> is an integral domain; hence, the degree of <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾</nemeth> is <nemeth class="inline">⠍⠬⠝</nemeth>, and <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾⠀⠌⠨⠅⠀⠼⠴</nemeth>. Since <nemeth class="inline">⠏⠷⠭⠾⠀⠌⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠌⠨⠅⠀⠼⠴</nemeth> imply that <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾⠀⠌⠨⠅⠀⠼⠴</nemeth>, we know that <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth> must also be an integral domain.</p>
          </article>
          <p id="alk">We also want to consider polynomials in two or more variables, such as <nemeth class="inline">⠭⠘⠆⠐⠤⠒⠭⠽⠬⠆⠽⠘⠒</nemeth>. Let <i class="one-letter">R</i> be a ring and suppose that we are given two indeterminates <i class="one-letter">x</i> and <i class="one-letter">y</i>. Certainly we can form the ring <nemeth class="inline">⠷⠠⠗⠈⠷⠭⠈⠾⠾⠈⠷⠽⠈⠾</nemeth>. It is straightforward but perhaps tedious to show that <nemeth class="inline">⠷⠠⠗⠈⠷⠭⠈⠾⠾⠈⠷⠽⠈⠾⠀⠈⠱⠈⠱⠀⠠⠗⠷⠈⠷⠽⠈⠾⠾⠈⠷⠭⠈⠾</nemeth>. We shall identify these two rings by this isomorphism and simply write <nemeth class="inline">⠠⠗⠈⠷⠭⠠⠀⠽⠈⠾</nemeth>. The ring <nemeth class="inline">⠠⠗⠈⠷⠭⠠⠀⠽⠈⠾</nemeth> is called the <dfn class="terminology">ring of polynomials in two indeterminates <i class="one-letter">x</i> and <i class="one-letter">y</i> with coefficients in</dfn> <i class="one-letter">R</i>. We can define the <dfn class="terminology">ring of polynomials in</dfn> <i class="one-letter">n</i> <dfn class="terminology">indeterminates with coefficients in</dfn> <i class="one-letter">R</i> similarly. We shall denote this ring by <nemeth class="inline">⠠⠗⠈⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠈⠾</nemeth>. </p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="iUP">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">17.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="LTk">Let <i class="one-letter">R</i> be a commutative ring with identity and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠗</nemeth>. Then we have a ring homomorphism  <nemeth class="inline">⠨⠋⠰⠨⠁⠐⠒⠀⠠⠗⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠗</nemeth> defined by </p>
            <div class="displaymath">
              <nemeth>⠋⠰⠨⠁⠐⠷⠏⠷⠭⠾⠾⠀⠨⠅⠀⠏⠷⠨⠁⠾⠀⠨⠅⠀⠁⠰⠝⠐⠨⠁⠘⠝⠐⠬⠄⠄⠄⠬⠁⠂⠨⠁⠬⠁⠴</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠁⠰⠝⠐⠭⠘⠝⠐⠬⠄⠄⠄⠬⠁⠂⠭⠬⠁⠴</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="udO">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="MYD">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠁⠰⠊⠐⠭⠘⠊</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠻⠃⠰⠊⠐⠭⠘⠊</nemeth>. It is easy to show that <nemeth class="inline">⠋⠰⠨⠁⠐⠷⠏⠷⠭⠾⠬⠟⠷⠭⠾⠾⠀⠨⠅⠀⠋⠰⠨⠁⠐⠷⠏⠷⠭⠾⠾⠬⠋⠰⠨⠁⠐⠷⠟⠷⠭⠾⠾</nemeth>. To show that multiplication is preserved under the map <nemeth class="inline">⠨⠋⠰⠨⠁</nemeth>, observe that</p>
            <div class="displaymath">
              <nemeth>⠋⠰⠨⠁⠐⠷⠏⠷⠭⠾⠾⠋⠰⠨⠁⠐⠷⠟⠷⠭⠾⠾⠀⠀⠨⠅⠀⠏⠷⠨⠁⠾⠟⠷⠨⠁⠾⠀⠀⠀⠀⠨⠅⠀⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠁⠰⠊⠐⠨⠁⠘⠊⠐⠾⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠻⠃⠰⠊⠐⠨⠁⠘⠊⠐⠾⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠬⠝⠻⠷⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠊⠻⠁⠰⠅⠐⠃⠰⠊⠤⠅⠐⠾⠨⠁⠘⠊⠐⠀⠀⠀⠀⠨⠅⠀⠋⠰⠨⠁⠐⠷⠏⠷⠭⠾⠟⠷⠭⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="Gst">The map <nemeth class="inline">⠨⠋⠰⠨⠁⠐⠒⠀⠠⠗⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠗</nemeth> is called the <dfn class="terminology">evaluation homomorphism</dfn> at <nemeth class="inline">⠨⠁</nemeth>.</p>
        </section>
        <section class="section" id="jqo">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">17.2</span> <span class="title">The Division Algorithm</span></div>
          <p id="mzC">Recall that the division algorithm for integers (Theorem 2.2.1) says that if <i class="one-letter">a</i> and <i class="one-letter">b</i> are integers with <nemeth class="inline">⠃⠀⠨⠂⠀⠼⠴</nemeth>, then there exist unique integers <i class="one-letter">q</i> and <i class="one-letter">r</i> such that <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth>, where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠃</nemeth>. The algorithm by which <i class="one-letter">q</i> and <i class="one-letter">r</i> are found is just long division. A similar theorem exists for polynomials. The division algorithm for polynomials has several important consequences. Since its proof is very similar to the corresponding proof for integers, it is worthwhile to review Theorem 2.2.1 at this point.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="PbY">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">17.2.1</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Division Algorithm.</span>
            </h6>
            <p id="sat">Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> be polynomials in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, where <i class="one-letter">F</i> is a field and  <nemeth class="inline">⠛⠷⠭⠾</nemeth> is a nonzero polynomial. Then there exist unique polynomials <nemeth class="inline">⠟⠷⠭⠾⠠⠀⠗⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠛⠷⠭⠾⠟⠷⠭⠾⠬⠗⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">, where either  <nemeth class="inline">⠙⠑⠛⠀⠗⠷⠭⠾⠀⠐⠅⠀⠙⠑⠛⠀⠛⠷⠭⠾</nemeth> or <nemeth class="inline">⠗⠷⠭⠾</nemeth> is the zero polynomial.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="akX">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="tfM">We will first consider the existence of <nemeth class="inline">⠟⠷⠭⠾</nemeth> and <nemeth class="inline">⠗⠷⠭⠾</nemeth>. If <nemeth class="inline">⠋⠷⠭⠾</nemeth> is the zero polynomial, then</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠀⠨⠅⠀⠼⠴⠡⠛⠷⠭⠾⠬⠴⠆</nemeth>
            </div>
            <p data-braille="continuation">hence, both <i class="one-letter">q</i> and <i class="one-letter">r</i> must also be the zero polynomial. Now suppose that <nemeth class="inline">⠋⠷⠭⠾</nemeth> is not the zero polynomial and that <nemeth class="inline">⠙⠑⠛⠀⠋⠷⠭⠾⠀⠨⠅⠀⠝</nemeth> and <nemeth class="inline">⠙⠑⠛⠀⠛⠷⠭⠾⠀⠨⠅⠀⠍</nemeth>. If <nemeth class="inline">⠍⠀⠨⠂⠀⠝</nemeth>, then we can let <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠗⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾</nemeth>. Hence, we may assume that <nemeth class="inline">⠍⠀⠐⠅⠱⠀⠝</nemeth> and proceed by induction on <i class="one-letter">n</i>. If</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠭⠾⠀⠀⠨⠅⠀⠁⠰⠝⠐⠭⠘⠝⠐⠬⠁⠰⠝⠤⠂⠐⠭⠘⠝⠤⠂⠐⠬⠄⠄⠄⠬⠁⠂⠭⠬⠁⠴⠀⠛⠷⠭⠾⠀⠀⠨⠅⠀⠃⠰⠍⠐⠭⠘⠍⠐⠬⠃⠰⠍⠤⠂⠐⠭⠘⠍⠤⠂⠐⠬⠄⠄⠄⠬⠃⠂⠭⠬⠃⠴</nemeth>
            </div>
            <p data-braille="continuation">the polynomial</p>
            <div class="displaymath">
              <nemeth>⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾⠤⠹⠁⠰⠝⠐⠌⠃⠰⠍⠐⠼⠭⠘⠝⠤⠍⠐⠛⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">has degree less than <i class="one-letter">n</i> or is the zero polynomial. By induction, there exist polynomials <nemeth class="inline">⠟⠘⠄⠐⠷⠭⠾</nemeth> and <nemeth class="inline">⠗⠷⠭⠾</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠟⠘⠄⠐⠷⠭⠾⠛⠷⠭⠾⠬⠗⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠗⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth> or the degree of <nemeth class="inline">⠗⠷⠭⠾</nemeth> is less than the degree of <nemeth class="inline">⠛⠷⠭⠾</nemeth>. Now let</p>
            <div class="displaymath">
              <nemeth>⠟⠷⠭⠾⠀⠨⠅⠀⠟⠘⠄⠐⠷⠭⠾⠬⠹⠁⠰⠝⠐⠌⠃⠰⠍⠐⠼⠭⠘⠝⠤⠍</nemeth>
            </div>
            <p data-braille="continuation">. Then</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠛⠷⠭⠾⠟⠷⠭⠾⠬⠗⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">, with <nemeth class="inline">⠗⠷⠭⠾</nemeth> the zero polynomial or <nemeth class="inline">⠙⠑⠛⠀⠗⠷⠭⠾⠀⠐⠅⠀⠙⠑⠛⠀⠛⠷⠭⠾</nemeth>.</p>
            <p id="ZmV">To show that  <nemeth class="inline">⠟⠷⠭⠾</nemeth> and <nemeth class="inline">⠗⠷⠭⠾</nemeth> are unique, suppose that there exist two other polynomials <nemeth class="inline">⠟⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠗⠂⠷⠭⠾</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠛⠷⠭⠾⠟⠂⠷⠭⠾⠬⠗⠂⠷⠭⠾</nemeth> with <nemeth class="inline">⠙⠑⠛⠀⠗⠂⠷⠭⠾⠀⠐⠅⠀⠙⠑⠛⠀⠛⠷⠭⠾</nemeth> or <nemeth class="inline">⠗⠂⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth>, so that</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠛⠷⠭⠾⠟⠷⠭⠾⠬⠗⠷⠭⠾⠀⠨⠅⠀⠛⠷⠭⠾⠟⠂⠷⠭⠾⠬⠗⠂⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">, and</p>
            <div class="displaymath">
              <nemeth>⠛⠷⠭⠾⠈⠷⠟⠷⠭⠾⠤⠟⠂⠷⠭⠾⠈⠾⠀⠨⠅⠀⠗⠂⠷⠭⠾⠤⠗⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠟⠷⠭⠾⠤⠟⠂⠷⠭⠾</nemeth> is not the zero polynomial, then</p>
            <div class="displaymath">
              <nemeth>⠙⠑⠛⠀⠷⠛⠷⠭⠾⠈⠷⠟⠷⠭⠾⠤⠟⠂⠷⠭⠾⠈⠾⠾⠀⠨⠅⠀⠙⠑⠛⠀⠷⠗⠂⠷⠭⠾⠤⠗⠷⠭⠾⠾⠀⠨⠂⠱⠀⠙⠑⠛⠀⠛⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">. However, the degrees of both <nemeth class="inline">⠗⠷⠭⠾</nemeth> and <nemeth class="inline">⠗⠂⠷⠭⠾</nemeth> are strictly less than the degree of <nemeth class="inline">⠛⠷⠭⠾</nemeth>; therefore, <nemeth class="inline">⠗⠷⠭⠾⠀⠨⠅⠀⠗⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠟⠂⠷⠭⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="kKc">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">17.2.2</span>
              <span class="period">.</span>
            </h6>
            <p id="tPG">The division algorithm merely formalizes long division of polynomials, a task we have been familiar with since high school. For example, suppose that we divide <nemeth class="inline">⠭⠘⠒⠐⠤⠭⠘⠆⠬⠆⠭⠤⠒</nemeth> by <nemeth class="inline">⠭⠤⠆</nemeth>.</p>
            <div class="sidebyside">
              <div class="sbsrow" style="margin-left:30%;margin-right:30%;">
                <div class="sbspanel fixed-width" style="width:100%;justify-content:flex-start;">
                  <table>
                    <tr>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠭⠘⠆</nemeth>
                      </td>
                      <td class="r m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠬</nemeth>
                      </td>
                      <td class="r m b2 r0 l0 t0 lines">
                        <i class="one-letter">x</i>
                      </td>
                      <td class="r m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠬</nemeth>
                      </td>
                      <td class="r m b2 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠲</nemeth>
                      </td>
                      <td class="r m b2 r0 l0 t0 lines"/>
                      <td class="r m b2 r0 l0 t0 lines" data-braille="last-cell"/>
                    </tr>
                    <tr>
                      <td class="r m b0 r0 l0 t0 lines">
                        <i class="one-letter">x</i>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠤</nemeth>
                      </td>
                      <td class="r m b0 r2 l0 t0 lines">
                        <nemeth class="inline">⠼⠆</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠭⠘⠒</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠤</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠭⠘⠆</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠬</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠆⠭</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠤</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines" data-braille="last-cell">
                        <nemeth class="inline">⠼⠒</nemeth>
                      </td>
                    </tr>
                    <tr>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b1 r0 l0 t0 lines">
                        <nemeth class="inline">⠭⠘⠒</nemeth>
                      </td>
                      <td class="r m b1 r0 l0 t0 lines">
                        <nemeth class="inline">⠤</nemeth>
                      </td>
                      <td class="r m b1 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠆⠭⠘⠆</nemeth>
                      </td>
                      <td class="r m b1 r0 l0 t0 lines"/>
                      <td class="r m b1 r0 l0 t0 lines"/>
                      <td class="r m b1 r0 l0 t0 lines"/>
                      <td class="r m b1 r0 l0 t0 lines" data-braille="last-cell"/>
                    </tr>
                    <tr>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠭⠘⠆</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠬</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠆⠭</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠤</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines" data-braille="last-cell">
                        <nemeth class="inline">⠼⠒</nemeth>
                      </td>
                    </tr>
                    <tr>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b1 r0 l0 t0 lines">
                        <nemeth class="inline">⠭⠘⠆</nemeth>
                      </td>
                      <td class="r m b1 r0 l0 t0 lines">
                        <nemeth class="inline">⠤</nemeth>
                      </td>
                      <td class="r m b1 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠆⠭</nemeth>
                      </td>
                      <td class="r m b1 r0 l0 t0 lines"/>
                      <td class="r m b1 r0 l0 t0 lines" data-braille="last-cell"/>
                    </tr>
                    <tr>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠲⠭</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines">
                        <nemeth class="inline">⠤</nemeth>
                      </td>
                      <td class="r m b0 r0 l0 t0 lines" data-braille="last-cell">
                        <nemeth class="inline">⠼⠒</nemeth>
                      </td>
                    </tr>
                    <tr>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b1 r0 l0 t0 lines">
                        <nemeth class="inline">⠼⠲⠭</nemeth>
                      </td>
                      <td class="r m b1 r0 l0 t0 lines">
                        <nemeth class="inline">⠤</nemeth>
                      </td>
                      <td class="r m b1 r0 l0 t0 lines" data-braille="last-cell">
                        <nemeth class="inline">⠼⠦</nemeth>
                      </td>
                    </tr>
                    <tr>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines"/>
                      <td class="r m b0 r0 l0 t0 lines" data-braille="last-cell">
                        <nemeth class="inline">⠼⠢</nemeth>
                      </td>
                    </tr>
                  </table>
                </div>
              </div>
            </div>
            <p id="ZWP">Hence, <nemeth class="inline">⠭⠘⠒⠐⠤⠭⠘⠆⠐⠬⠆⠭⠤⠒⠀⠨⠅⠀⠷⠭⠤⠆⠾⠷⠭⠘⠆⠐⠬⠭⠬⠲⠾⠬⠢</nemeth>.</p>
          </article>
          <p id="SGL">Let <nemeth class="inline">⠏⠷⠭⠾</nemeth> be a polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>. We say that <nemeth class="inline">⠨⠁</nemeth> is a <dfn class="terminology">zero</dfn> or <dfn class="terminology">root</dfn> of <nemeth class="inline">⠏⠷⠭⠾</nemeth> if <nemeth class="inline">⠏⠷⠭⠾</nemeth> is in the kernel of the evaluation homomorphism <nemeth class="inline">⠨⠋⠰⠨⠁</nemeth>. All we are really saying here is that <nemeth class="inline">⠨⠁</nemeth> is a zero of <nemeth class="inline">⠏⠷⠭⠾</nemeth> if <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>.</p>
          <article class="corollary theorem-like" data-braille="theorem-like" id="zTa">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">17.2.3</span>
              <span class="period">.</span>
            </h6>
            <p id="pfN">Let <i class="one-letter">F</i> be a field. An element <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> is a zero of <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> if and only if <nemeth class="inline">⠭⠤⠨⠁</nemeth> is a factor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="Xqr">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="Fue">Suppose that <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> and <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. By the division algorithm, there exist polynomials <nemeth class="inline">⠟⠷⠭⠾</nemeth> and <nemeth class="inline">⠗⠷⠭⠾</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠟⠷⠭⠾⠬⠗⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">and the degree of <nemeth class="inline">⠗⠷⠭⠾</nemeth> must be less than the degree of <nemeth class="inline">⠭⠤⠨⠁</nemeth>. Since the degree of <nemeth class="inline">⠗⠷⠭⠾</nemeth> is less than 1, <nemeth class="inline">⠗⠷⠭⠾⠀⠨⠅⠀⠁</nemeth> for <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠋</nemeth>; therefore,</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠟⠷⠭⠾⠬⠁</nemeth>
            </div>
            <p data-braille="continuation">. But</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠀⠨⠅⠀⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴⠡⠟⠷⠨⠁⠾⠬⠁⠀⠨⠅⠀⠁⠆</nemeth>
            </div>
            <p data-braille="continuation">consequently, <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠟⠷⠭⠾</nemeth>, and <nemeth class="inline">⠭⠤⠨⠁</nemeth> is a factor of <nemeth class="inline">⠏⠷⠭⠾</nemeth>.</p>
            <p id="lBn">Conversely, suppose that <nemeth class="inline">⠭⠤⠨⠁</nemeth> is a factor of <nemeth class="inline">⠏⠷⠭⠾</nemeth>; say <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠟⠷⠭⠾</nemeth>. Then <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴⠡⠟⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>.</p>
          </article>
          <article class="corollary theorem-like" data-braille="theorem-like" id="gaj">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">17.2.4</span>
              <span class="period">.</span>
            </h6>
            <p id="VmW">Let <i class="one-letter">F</i> be a field. A nonzero polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> of degree <i class="one-letter">n</i> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> can have at most <i class="one-letter">n</i> distinct zeros in <i class="one-letter">F</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="DxA">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="RIw">We will use induction on the degree of <nemeth class="inline">⠏⠷⠭⠾</nemeth>. If <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a constant polynomial and has no zeros. Let <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠅⠀⠼⠂</nemeth>. Then <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠁⠭⠬⠃</nemeth> for some <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">F</i>. If <nemeth class="inline">⠨⠁⠂</nemeth> and <nemeth class="inline">⠨⠁⠆</nemeth> are zeros of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, then <nemeth class="inline">⠁⠨⠁⠂⠬⠃⠀⠨⠅⠀⠁⠨⠁⠆⠬⠃</nemeth> or <nemeth class="inline">⠨⠁⠂⠀⠨⠅⠀⠨⠁⠆</nemeth>.</p>
            <p id="xPF">Now assume that <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠂⠀⠼⠂</nemeth>. If <nemeth class="inline">⠏⠷⠭⠾</nemeth> does not have a zero in <i class="one-letter">F</i>, then we are done. On the other hand, if <nemeth class="inline">⠨⠁</nemeth> is a zero of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠟⠷⠭⠾</nemeth> for some <nemeth class="inline">⠟⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> by Corollary 17.2.3. The degree of <nemeth class="inline">⠟⠷⠭⠾</nemeth> is <nemeth class="inline">⠝⠤⠂</nemeth> by Proposition 17.1.4. Let <nemeth class="inline">⠨⠃</nemeth> be some other zero of <nemeth class="inline">⠏⠷⠭⠾</nemeth> that is distinct from <nemeth class="inline">⠨⠁</nemeth>. Then <nemeth class="inline">⠏⠷⠨⠃⠾⠀⠨⠅⠀⠷⠨⠃⠤⠨⠁⠾⠟⠷⠨⠃⠾⠀⠨⠅⠀⠼⠴</nemeth>. Since <nemeth class="inline">⠨⠁⠀⠌⠨⠅⠀⠨⠃</nemeth> and <i class="one-letter">F</i> is a field, <nemeth class="inline">⠟⠷⠨⠃⠾⠀⠨⠅⠀⠼⠴</nemeth>. By our induction hypothesis, <nemeth class="inline">⠟⠷⠭⠾</nemeth> can have at most <nemeth class="inline">⠝⠤⠂</nemeth> zeros in <i class="one-letter">F</i> that are distinct from <nemeth class="inline">⠨⠁</nemeth>. Therefore, <nemeth class="inline">⠏⠷⠭⠾</nemeth> has at most <i class="one-letter">n</i> distinct zeros in <i class="one-letter">F</i>.</p>
          </article>
          <p id="yNU">Let <i class="one-letter">F</i> be a field. A monic polynomial <nemeth class="inline">⠙⠷⠭⠾</nemeth> is a <dfn class="terminology">greatest common divisor</dfn> of polynomials <nemeth class="inline">⠏⠷⠭⠾⠠⠀⠟⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> if <nemeth class="inline">⠙⠷⠭⠾</nemeth> evenly divides both <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>; and, if for any other polynomial <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾</nemeth> dividing both <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>, <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾⠳⠙⠷⠭⠾</nemeth>. We write <nemeth class="inline">⠙⠷⠭⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠏⠷⠭⠾⠠⠀⠟⠷⠭⠾⠾</nemeth>. Two polynomials <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> are <dfn class="terminology">relatively prime</dfn> if <nemeth class="inline">⠛⠉⠙⠀⠷⠏⠷⠭⠾⠠⠀⠟⠷⠭⠾⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="nEI">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">17.2.5</span>
              <span class="period">.</span>
            </h6>
            <p id="cRv">Let <i class="one-letter">F</i> be a field and suppose that <nemeth class="inline">⠙⠷⠭⠾</nemeth> is a greatest common divisor of two polynomials <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Then there exist polynomials <nemeth class="inline">⠗⠷⠭⠾</nemeth> and <nemeth class="inline">⠎⠷⠭⠾</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠙⠷⠭⠾⠀⠨⠅⠀⠗⠷⠭⠾⠏⠷⠭⠾⠬⠎⠷⠭⠾⠟⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">. Furthermore, the greatest common divisor of two polynomials is unique.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="LbZ">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="dWO">Let <nemeth class="inline">⠙⠷⠭⠾</nemeth> be the monic polynomial of smallest degree in the set</p>
            <div class="displaymath">
              <nemeth>⠠⠎⠀⠨⠅⠀⠨⠷⠋⠷⠭⠾⠏⠷⠭⠾⠬⠛⠷⠭⠾⠟⠷⠭⠾⠒⠀⠋⠷⠭⠾⠠⠀⠛⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. We can write <nemeth class="inline">⠙⠷⠭⠾⠀⠨⠅⠀⠗⠷⠭⠾⠏⠷⠭⠾⠬⠎⠷⠭⠾⠟⠷⠭⠾</nemeth> for two polynomials  <nemeth class="inline">⠗⠷⠭⠾</nemeth> and <nemeth class="inline">⠎⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. We need to show that <nemeth class="inline">⠙⠷⠭⠾</nemeth> divides both <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>. We shall first show that <nemeth class="inline">⠙⠷⠭⠾</nemeth> divides <nemeth class="inline">⠏⠷⠭⠾</nemeth>. By the division algorithm, there exist polynomials <nemeth class="inline">⠁⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠷⠭⠾</nemeth> such that <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠁⠷⠭⠾⠙⠷⠭⠾⠬⠃⠷⠭⠾</nemeth>, where <nemeth class="inline">⠃⠷⠭⠾</nemeth> is either the zero polynomial or <nemeth class="inline">⠙⠑⠛⠀⠃⠷⠭⠾⠀⠐⠅⠀⠙⠑⠛⠀⠙⠷⠭⠾</nemeth>. Therefore,</p>
            <div class="displaymath">
              <nemeth>⠃⠷⠭⠾⠀⠀⠨⠅⠀⠏⠷⠭⠾⠤⠁⠷⠭⠾⠙⠷⠭⠾⠀⠀⠀⠀⠨⠅⠀⠏⠷⠭⠾⠤⠁⠷⠭⠾⠷⠗⠷⠭⠾⠏⠷⠭⠾⠬⠎⠷⠭⠾⠟⠷⠭⠾⠾⠀⠀⠀⠀⠨⠅⠀⠏⠷⠭⠾⠤⠁⠷⠭⠾⠗⠷⠭⠾⠏⠷⠭⠾⠤⠁⠷⠭⠾⠎⠷⠭⠾⠟⠷⠭⠾⠀⠀⠀⠀⠨⠅⠀⠏⠷⠭⠾⠷⠂⠤⠁⠷⠭⠾⠗⠷⠭⠾⠾⠬⠟⠷⠭⠾⠷⠤⠁⠷⠭⠾⠎⠷⠭⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">is a linear combination of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> and therefore must be in <i class="one-letter">S</i>. However, <nemeth class="inline">⠃⠷⠭⠾</nemeth> must be the zero polynomial since <nemeth class="inline">⠙⠷⠭⠾</nemeth> was chosen to be of smallest degree; consequently, <nemeth class="inline">⠙⠷⠭⠾</nemeth> divides <nemeth class="inline">⠏⠷⠭⠾</nemeth>. A symmetric argument shows that <nemeth class="inline">⠙⠷⠭⠾</nemeth> must also divide <nemeth class="inline">⠟⠷⠭⠾</nemeth>; hence, <nemeth class="inline">⠙⠷⠭⠾</nemeth> is a common divisor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>.</p>
            <p id="KdX">To show that <nemeth class="inline">⠙⠷⠭⠾</nemeth> is a greatest common divisor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>, suppose that <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾</nemeth> is another common divisor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>. We will show that <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾⠳⠙⠷⠭⠾</nemeth>. Since <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾</nemeth> is a common divisor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>, there exist polynomials <nemeth class="inline">⠥⠷⠭⠾</nemeth> and <nemeth class="inline">⠧⠷⠭⠾</nemeth> such that <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠥⠷⠭⠾⠙⠘⠄⠐⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠧⠷⠭⠾⠙⠘⠄⠐⠷⠭⠾</nemeth>. Therefore,</p>
            <div class="displaymath">
              <nemeth>⠙⠷⠭⠾⠀⠀⠨⠅⠀⠗⠷⠭⠾⠏⠷⠭⠾⠬⠎⠷⠭⠾⠟⠷⠭⠾⠀⠀⠀⠀⠨⠅⠀⠗⠷⠭⠾⠥⠷⠭⠾⠙⠘⠄⠐⠷⠭⠾⠬⠎⠷⠭⠾⠧⠷⠭⠾⠙⠘⠄⠐⠷⠭⠾⠀⠀⠀⠀⠨⠅⠀⠙⠘⠄⠐⠷⠭⠾⠈⠷⠗⠷⠭⠾⠥⠷⠭⠾⠬⠎⠷⠭⠾⠧⠷⠭⠾⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">. Since <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾⠳⠙⠷⠭⠾</nemeth>, <nemeth class="inline">⠙⠷⠭⠾</nemeth> is a greatest common divisor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>.</p>
            <p id="qlg">Finally, we must show that the greatest common divisor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> is unique. Suppose that <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾</nemeth> is another greatest common divisor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>. We have just shown that there exist polynomials <nemeth class="inline">⠥⠷⠭⠾</nemeth> and <nemeth class="inline">⠧⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> such that <nemeth class="inline">⠙⠷⠭⠾⠀⠨⠅⠀⠙⠘⠄⠐⠷⠭⠾⠈⠷⠗⠷⠭⠾⠥⠷⠭⠾⠬⠎⠷⠭⠾⠧⠷⠭⠾⠈⠾</nemeth>. Since</p>
            <div class="displaymath">
              <nemeth>⠙⠑⠛⠀⠙⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠙⠘⠄⠐⠷⠭⠾⠬⠙⠑⠛⠀⠈⠷⠗⠷⠭⠾⠥⠷⠭⠾⠬⠎⠷⠭⠾⠧⠷⠭⠾⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">and <nemeth class="inline">⠙⠷⠭⠾</nemeth> and <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾</nemeth> are both greatest common divisors, <nemeth class="inline">⠙⠑⠛⠀⠙⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠙⠘⠄⠐⠷⠭⠾</nemeth>. Since <nemeth class="inline">⠙⠷⠭⠾</nemeth> and <nemeth class="inline">⠙⠘⠄⠐⠷⠭⠾</nemeth> are both monic polynomials of the same degree, it must be the case that <nemeth class="inline">⠙⠷⠭⠾⠀⠨⠅⠀⠙⠘⠄⠐⠷⠭⠾</nemeth>.</p>
          </article>
          <p id="eVd">Notice the similarity between the proof of Proposition 17.2.5 and the proof of Theorem 2.2.2.</p>
        </section>
        <section class="section" id="Pxx">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">17.3</span> <span class="title">Irreducible Polynomials</span></div>
          <section class="introduction" id="BIn">
            <p id="jqB">A nonconstant polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> is <dfn class="terminology">irreducible</dfn> over a field <i class="one-letter">F</i> if <nemeth class="inline">⠋⠷⠭⠾</nemeth> cannot be expressed as a product of two polynomials <nemeth class="inline">⠛⠷⠭⠾</nemeth> and <nemeth class="inline">⠓⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, where the degrees of <nemeth class="inline">⠛⠷⠭⠾</nemeth> and <nemeth class="inline">⠓⠷⠭⠾</nemeth> are both smaller than the degree of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. Irreducible polynomials function as the “prime numbers” of polynomial rings.</p>
            <article class="example example-like" data-braille="example-like" id="QRl">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.1</span>
                <span class="period">.</span>
              </h6>
              <p id="GdY">The polynomial <nemeth class="inline">⠭⠘⠆⠐⠤⠆⠀⠈⠑⠀⠸⠠⠟⠈⠷⠭⠈⠾</nemeth> is irreducible since it cannot be factored any further over the rational numbers. Similarly, <nemeth class="inline">⠭⠘⠆⠐⠬⠂</nemeth> is irreducible over the real numbers.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="wYu">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.2</span>
                <span class="period">.</span>
              </h6>
              <p id="mlh">The polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠆</nemeth> is irreducible over <nemeth class="inline">⠸⠠⠵⠒⠈⠷⠭⠈⠾</nemeth>. Suppose that this polynomial was reducible over <nemeth class="inline">⠸⠠⠵⠒⠈⠷⠭⠈⠾</nemeth>. By the division algorithm there would have to be a factor of the form <nemeth class="inline">⠭⠤⠁</nemeth>, where <i class="one-letter">a</i> is some element in <nemeth class="inline">⠸⠠⠵⠒⠈⠷⠭⠈⠾</nemeth>. Hence, it would have to be true that <nemeth class="inline">⠏⠷⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. However,</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠼⠴⠾⠀⠀⠨⠅⠀⠼⠆⠀⠏⠷⠼⠂⠾⠀⠀⠨⠅⠀⠼⠂⠀⠏⠷⠼⠆⠾⠀⠀⠨⠅⠀⠼⠆</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <nemeth class="inline">⠏⠷⠭⠾</nemeth> has no zeros in <nemeth class="inline">⠸⠠⠵⠒</nemeth> and must be irreducible.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="TLR">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.3</span>
                <span class="period">.</span>
              </h6>
              <p id="IYE">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠹⠗⠌⠎⠼⠷⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠗⠠⠀⠎⠠⠀⠁⠴⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐</nemeth> are integers, the <nemeth class="inline">⠁⠰⠊</nemeth>'s are relatively prime, and <i class="one-letter">r</i> and <i class="one-letter">s</i> are relatively prime.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="rji">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Wsp">Suppose that</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠹⠃⠴⠌⠉⠴⠼⠬⠹⠃⠂⠌⠉⠂⠼⠭⠬⠄⠄⠄⠬⠹⠃⠰⠝⠐⠌⠉⠰⠝⠐⠼⠭⠘⠝</nemeth>
              </div>
              <p data-braille="continuation">, where the <nemeth class="inline">⠃⠰⠊</nemeth>'s and the <nemeth class="inline">⠉⠰⠊</nemeth>'s are integers. We can rewrite <nemeth class="inline">⠏⠷⠭⠾</nemeth> as</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠹⠂⠌⠉⠴⠀⠄⠄⠄⠀⠉⠰⠝⠐⠼⠷⠙⠴⠬⠙⠂⠭⠬⠄⠄⠄⠬⠙⠰⠝⠐⠭⠘⠝⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠙⠴⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠝⠐</nemeth> are integers. Let <i class="one-letter">d</i> be the greatest common divisor of <nemeth class="inline">⠙⠴⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠝⠐</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠹⠙⠌⠉⠴⠀⠄⠄⠄⠀⠉⠰⠝⠐⠼⠷⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠙⠰⠊⠐⠀⠨⠅⠀⠙⠁⠰⠊</nemeth> and the <nemeth class="inline">⠁⠰⠊</nemeth>'s are relatively prime. Reducing <nemeth class="inline">⠙⠸⠌⠷⠉⠴⠀⠄⠄⠄⠀⠉⠰⠝⠐⠾</nemeth> to its lowest terms, we can write</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠹⠗⠌⠎⠼⠷⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠛⠉⠙⠀⠷⠗⠠⠀⠎⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="vjh">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.4</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Gauss's Lemma.</span>
              </h6>
              <p id="YhC">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠸⠠⠵⠈⠷⠭⠈⠾</nemeth> be a monic polynomial such that <nemeth class="inline">⠏⠷⠭⠾</nemeth> factors into a product of two polynomials <nemeth class="inline">⠁⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>, where the degrees of both <nemeth class="inline">⠁⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠷⠭⠾</nemeth> are less than the degree of <nemeth class="inline">⠏⠷⠭⠾</nemeth>. Then <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠁⠷⠭⠾⠃⠷⠭⠾</nemeth>, where <nemeth class="inline">⠁⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠷⠭⠾</nemeth> are monic polynomials in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth> with <nemeth class="inline">⠙⠑⠛⠀⠁⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠁⠷⠭⠾</nemeth> and <nemeth class="inline">⠙⠑⠛⠀⠃⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠃⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Gsg">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Czy">By Lemma 17.3.3, we can assume that</p>
              <div class="displaymath">
                <nemeth>⠁⠷⠭⠾⠀⠀⠨⠅⠀⠹⠉⠂⠌⠙⠂⠼⠷⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠍⠐⠭⠘⠍⠐⠾⠀⠨⠅⠀⠹⠉⠂⠌⠙⠂⠼⠁⠂⠷⠭⠾⠀⠃⠷⠭⠾⠀⠀⠨⠅⠀⠹⠉⠆⠌⠙⠆⠼⠷⠃⠴⠬⠃⠂⠭⠬⠄⠄⠄⠬⠃⠰⠝⠐⠭⠘⠝⠐⠾⠀⠨⠅⠀⠹⠉⠆⠌⠙⠆⠼⠃⠂⠷⠭⠾</nemeth>
              </div>
              <p data-braille="continuation">, where the <nemeth class="inline">⠁⠰⠊</nemeth>'s are relatively prime and the <nemeth class="inline">⠃⠰⠊</nemeth>'s are relatively prime. Consequently,</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠁⠷⠭⠾⠃⠷⠭⠾⠀⠨⠅⠀⠹⠉⠂⠉⠆⠌⠙⠂⠙⠆⠼⠁⠂⠷⠭⠾⠃⠂⠷⠭⠾⠀⠨⠅⠀⠹⠉⠌⠙⠼⠁⠂⠷⠭⠾⠃⠂⠷⠭⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠉⠸⠌⠙</nemeth> is the product of <nemeth class="inline">⠉⠂⠸⠌⠙⠂</nemeth> and <nemeth class="inline">⠉⠆⠸⠌⠙⠆</nemeth> expressed in lowest terms. Hence, <nemeth class="inline">⠙⠏⠷⠭⠾⠀⠨⠅⠀⠉⠁⠂⠷⠭⠾⠃⠂⠷⠭⠾</nemeth>.</p>
              <p id="iGH">If <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠉⠁⠰⠍⠐⠃⠰⠝⠐⠀⠨⠅⠀⠼⠂</nemeth> since <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a monic polynomial. Hence, either <nemeth class="inline">⠉⠀⠨⠅⠀⠼⠂</nemeth> or <nemeth class="inline">⠉⠀⠨⠅⠀⠤⠼⠂</nemeth>. If <nemeth class="inline">⠉⠀⠨⠅⠀⠼⠂</nemeth>, then either <nemeth class="inline">⠁⠰⠍⠐⠀⠨⠅⠀⠃⠰⠝⠐⠀⠨⠅⠀⠼⠂</nemeth> or <nemeth class="inline">⠁⠰⠍⠐⠀⠨⠅⠀⠃⠰⠝⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>. In the first case <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠁⠂⠷⠭⠾⠃⠂⠷⠭⠾</nemeth>, where <nemeth class="inline">⠁⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠂⠷⠭⠾</nemeth> are monic polynomials with <nemeth class="inline">⠙⠑⠛⠀⠁⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠁⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠙⠑⠛⠀⠃⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠃⠂⠷⠭⠾</nemeth>. In the second case <nemeth class="inline">⠁⠷⠭⠾⠀⠨⠅⠀⠤⠁⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠷⠭⠾⠀⠨⠅⠀⠤⠃⠂⠷⠭⠾</nemeth> are the correct monic polynomials since <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠷⠤⠁⠂⠷⠭⠾⠾⠷⠤⠃⠂⠷⠭⠾⠾⠀⠨⠅⠀⠁⠷⠭⠾⠃⠷⠭⠾</nemeth>. The case in which <nemeth class="inline">⠉⠀⠨⠅⠀⠤⠼⠂</nemeth> can be handled similarly.</p>
              <p id="ONQ">Now suppose that <nemeth class="inline">⠙⠀⠌⠨⠅⠀⠼⠂</nemeth>. Since <nemeth class="inline">⠛⠉⠙⠀⠷⠉⠠⠀⠙⠾⠀⠨⠅⠀⠼⠂</nemeth>, there exists a prime <i class="one-letter">p</i> such that <nemeth class="inline">⠏⠳⠙</nemeth> and <nemeth class="inline">⠏⠌⠳⠉</nemeth>. Also, since the coefficients of <nemeth class="inline">⠁⠂⠷⠭⠾</nemeth> are relatively prime, there exists a coefficient <nemeth class="inline">⠁⠰⠊</nemeth> such that <nemeth class="inline">⠏⠌⠳⠁⠰⠊</nemeth>. Similarly, there exists a coefficient <nemeth class="inline">⠃⠰⠚</nemeth> of <nemeth class="inline">⠃⠂⠷⠭⠾</nemeth> such that <nemeth class="inline">⠏⠌⠳⠃⠰⠚</nemeth>. Let <nemeth class="inline">⠁⠄⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠄⠂⠷⠭⠾</nemeth> be the polynomials in <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠈⠷⠭⠈⠾</nemeth> obtained by reducing the coefficients of <nemeth class="inline">⠁⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠂⠷⠭⠾</nemeth> modulo <i class="one-letter">p</i>. Since <nemeth class="inline">⠏⠳⠙</nemeth>, <nemeth class="inline">⠁⠄⠂⠷⠭⠾⠃⠄⠂⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth> in <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠈⠷⠭⠈⠾</nemeth>. However, this is impossible since neither <nemeth class="inline">⠁⠄⠂⠷⠭⠾</nemeth> nor <nemeth class="inline">⠃⠄⠂⠷⠭⠾</nemeth> is the zero polynomial and <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠈⠷⠭⠈⠾</nemeth> is an integral domain. Therefore, <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠂</nemeth> and the theorem is proven.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="Mhs">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.5</span>
                <span class="period">.</span>
              </h6>
              <p id="Buf">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠝⠐⠬⠁⠰⠝⠤⠂⠐⠭⠘⠝⠤⠂⠐⠬⠄⠄⠄⠬⠁⠴</nemeth> be a polynomial with coefficients in <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠁⠴⠀⠌⠨⠅⠀⠼⠴</nemeth>. If <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a zero in <nemeth class="inline">⠸⠠⠟</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾</nemeth> also has a zero <nemeth class="inline">⠨⠁</nemeth> in <nemeth class="inline">⠸⠠⠵</nemeth>. Furthermore, <nemeth class="inline">⠨⠁</nemeth> divides <nemeth class="inline">⠁⠴</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="jEJ">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="uUZ">Let <nemeth class="inline">⠏⠷⠭⠾</nemeth> have a zero <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠟</nemeth>. Then <nemeth class="inline">⠏⠷⠭⠾</nemeth> must have a linear factor <nemeth class="inline">⠭⠤⠁</nemeth>. By Gauss's Lemma, <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a factorization with a linear factor in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. Hence, for some <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠸⠠⠵</nemeth></p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠷⠭⠘⠝⠤⠂⠐⠬⠄⠄⠄⠤⠁⠴⠸⠌⠨⠁⠾</nemeth>
              </div>
              <p data-braille="continuation">. Thus <nemeth class="inline">⠁⠴⠸⠌⠨⠁⠀⠈⠑⠀⠸⠠⠵</nemeth> and so <nemeth class="inline">⠨⠁⠳⠁⠴</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="dfD">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.6</span>
                <span class="period">.</span>
              </h6>
              <p id="Ssq">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠤⠆⠭⠘⠒⠐⠬⠭⠬⠂</nemeth>. We shall show that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible over <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>. Assume that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is reducible. Then either <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a linear factor, say <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠟⠷⠭⠾</nemeth>, where <nemeth class="inline">⠟⠷⠭⠾</nemeth> is a polynomial of degree three, or <nemeth class="inline">⠏⠷⠭⠾</nemeth> has two quadratic factors.</p>
              <p id="yzz">If <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a linear factor in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>, then it has a zero in <nemeth class="inline">⠸⠠⠵</nemeth>. By Corollary 17.3.5, any zero must divide 1 and therefore must be <nemeth class="inline">⠬⠤⠼⠂</nemeth>; however, <nemeth class="inline">⠏⠷⠼⠂⠾⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠏⠷⠤⠼⠂⠾⠀⠨⠅⠀⠼⠒</nemeth>. Consequently, we have eliminated the possibility that <nemeth class="inline">⠏⠷⠭⠾</nemeth> has any linear factors.</p>
              <p id="eGI">Therefore, if <nemeth class="inline">⠏⠷⠭⠾</nemeth> is reducible it must factor into two quadratic polynomials, say</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠀⠨⠅⠀⠷⠭⠘⠆⠐⠬⠁⠭⠬⠃⠾⠷⠭⠘⠆⠐⠬⠉⠭⠬⠙⠾⠀⠀⠀⠀⠨⠅⠀⠭⠘⠲⠐⠬⠷⠁⠬⠉⠾⠭⠘⠒⠐⠬⠷⠁⠉⠬⠃⠬⠙⠾⠭⠘⠆⠐⠬⠷⠁⠙⠬⠃⠉⠾⠭⠬⠃⠙</nemeth>
              </div>
              <p data-braille="continuation">, where each factor is in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth> by Gauss's Lemma. Hence,</p>
              <div class="displaymath">
                <nemeth>⠁⠬⠉⠀⠀⠨⠅⠀⠤⠼⠆⠀⠁⠉⠬⠃⠬⠙⠀⠀⠨⠅⠀⠼⠴⠀⠁⠙⠬⠃⠉⠀⠀⠨⠅⠀⠼⠂⠀⠃⠙⠀⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. Since <nemeth class="inline">⠃⠙⠀⠨⠅⠀⠼⠂</nemeth>, either <nemeth class="inline">⠃⠀⠨⠅⠀⠙⠀⠨⠅⠀⠼⠂</nemeth> or <nemeth class="inline">⠃⠀⠨⠅⠀⠙⠀⠨⠅⠀⠤⠼⠂</nemeth>. In either case <nemeth class="inline">⠃⠀⠨⠅⠀⠙</nemeth> and so</p>
              <div class="displaymath">
                <nemeth>⠁⠙⠬⠃⠉⠀⠨⠅⠀⠃⠷⠁⠬⠉⠾⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. Since <nemeth class="inline">⠁⠬⠉⠀⠨⠅⠀⠤⠼⠆</nemeth>, we know that <nemeth class="inline">⠤⠼⠆⠃⠀⠨⠅⠀⠼⠂</nemeth>. This is impossible since <i class="one-letter">b</i> is an integer. Therefore, <nemeth class="inline">⠏⠷⠭⠾</nemeth> must be irreducible over <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="bqq">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.7</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Eisenstein's Criterion.</span>
              </h6>
              <p id="EoL">Let <i class="one-letter">p</i> be a prime and suppose that</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠁⠰⠝⠐⠭⠘⠝⠐⠬⠄⠄⠄⠬⠁⠴⠀⠈⠑⠀⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">. If <nemeth class="inline">⠏⠳⠁⠰⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠂</nemeth>, but <nemeth class="inline">⠏⠌⠳⠁⠰⠝</nemeth> and <nemeth class="inline">⠏⠘⠆⠐⠌⠳⠁⠴</nemeth>, then <nemeth class="inline">⠋⠷⠭⠾</nemeth> is irreducible over <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="mzp">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="bci">By Gauss's Lemma, we need only show that <nemeth class="inline">⠋⠷⠭⠾</nemeth> does not factor into polynomials of lower degree in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. Let</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠷⠃⠰⠗⠐⠭⠘⠗⠐⠬⠄⠄⠄⠬⠃⠴⠾⠷⠉⠰⠎⠐⠭⠘⠎⠐⠬⠄⠄⠄⠬⠉⠴⠾</nemeth>
              </div>
              <p data-braille="continuation">be a factorization in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>, with <nemeth class="inline">⠃⠰⠗</nemeth> and <nemeth class="inline">⠉⠰⠎</nemeth> not equal to zero and <nemeth class="inline">⠗⠠⠀⠎⠀⠐⠅⠀⠝</nemeth>. Since <nemeth class="inline">⠏⠘⠆</nemeth> does not divide <nemeth class="inline">⠁⠴⠀⠨⠅⠀⠃⠴⠉⠴</nemeth>, either <nemeth class="inline">⠃⠴</nemeth> or <nemeth class="inline">⠉⠴</nemeth> is not divisible by <i class="one-letter">p</i>. Suppose that <nemeth class="inline">⠏⠌⠳⠃⠴</nemeth> and <nemeth class="inline">⠏⠳⠉⠴</nemeth>. Since <nemeth class="inline">⠏⠌⠳⠁⠰⠝</nemeth> and <nemeth class="inline">⠁⠰⠝⠐⠀⠨⠅⠀⠃⠰⠗⠐⠉⠰⠎</nemeth>, neither <nemeth class="inline">⠃⠰⠗</nemeth> nor <nemeth class="inline">⠉⠰⠎</nemeth> is divisible by <i class="one-letter">p</i>. Let <i class="one-letter">m</i> be the smallest value of <i class="one-letter">k</i> such that <nemeth class="inline">⠏⠌⠳⠉⠰⠅</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠁⠰⠍⠐⠀⠨⠅⠀⠃⠴⠉⠰⠍⠐⠬⠃⠂⠉⠰⠍⠤⠂⠐⠬⠄⠄⠄⠬⠃⠰⠍⠐⠉⠴</nemeth>
              </div>
              <p data-braille="continuation">is not divisible by <i class="one-letter">p</i>, since each term on the right-hand side of the equation is divisible by <i class="one-letter">p</i> except for <nemeth class="inline">⠃⠴⠉⠰⠍</nemeth>. Therefore, <nemeth class="inline">⠍⠀⠨⠅⠀⠝</nemeth> since <nemeth class="inline">⠁⠰⠊</nemeth> is divisible by <i class="one-letter">p</i> for <nemeth class="inline">⠍⠀⠐⠅⠀⠝</nemeth>. Hence, <nemeth class="inline">⠋⠷⠭⠾</nemeth> cannot be factored into polynomials of lower degree and therefore must be irreducible.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="JmM">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.8</span>
                <span class="period">.</span>
              </h6>
              <p id="KNR">The polynomial</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠼⠂⠖⠭⠘⠢⠐⠤⠔⠭⠘⠲⠐⠬⠒⠭⠘⠆⠐⠬⠖⠭⠤⠆⠂</nemeth>
              </div>
              <p data-braille="continuation">is easily seen to be irreducible over <nemeth class="inline">⠸⠠⠟</nemeth> by Eisenstein's Criterion if we let <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠒</nemeth>.</p>
            </article>
            <p id="PxK">Eisenstein's Criterion is more useful in constructing irreducible polynomials of a certain degree over <nemeth class="inline">⠸⠠⠟</nemeth> than in determining the irreducibility of an arbitrary polynomial in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>: given an arbitrary polynomial, it is not very likely that we can apply Eisenstein's Criterion. The real value of Theorem 17.3.7 is that we now have an easy method of generating irreducible polynomials of any degree.</p>
          </section>
          <section class="subsection" id="ZWC">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">17.3.1</span> <span class="title">Ideals in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth></span></div>
            <p id="iVc">Let <i class="one-letter">F</i> be a field. Recall that a principal ideal in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is an ideal <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> generated by some polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth>; that is,</p>
            <div class="displaymath">
              <nemeth>⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠨⠅⠀⠨⠷⠏⠷⠭⠾⠟⠷⠭⠾⠒⠀⠟⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="example example-like" data-braille="example-like" id="oah">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.9</span>
                <span class="period">.</span>
              </h6>
              <p id="qVa">The polynomial <nemeth class="inline">⠭⠘⠆</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> generates the ideal <nemeth class="inline">⠨⠨⠷⠭⠘⠆⠐⠨⠨⠾</nemeth> consisting of all polynomials with no constant term or term of degree <nemeth class="inline">⠼⠂</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="bLP">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.10</span>
                <span class="period">.</span>
              </h6>
              <p id="kvU">If <i class="one-letter">F</i> is a field, then every ideal in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is a principal ideal.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="SGy">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Hjr">Let <i class="one-letter">I</i> be an ideal of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. If <i class="one-letter">I</i> is the zero ideal, the theorem is easily true. Suppose that <i class="one-letter">I</i> is a nontrivial ideal in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, and let <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠊</nemeth> be a nonzero element of minimal degree. If <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a nonzero constant and 1 must be in <i class="one-letter">I</i>. Since 1 generates all of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, <nemeth class="inline">⠨⠨⠷⠼⠂⠨⠨⠾⠀⠨⠅⠀⠠⠊⠀⠨⠅⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> and <i class="one-letter">I</i> is again a principal ideal.</p>
              <p id="nqA">Now assume that <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠂⠱⠀⠼⠂</nemeth> and let <nemeth class="inline">⠋⠷⠭⠾</nemeth> be any element in <i class="one-letter">I</i>. By the division algorithm there exist <nemeth class="inline">⠟⠷⠭⠾</nemeth> and <nemeth class="inline">⠗⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠏⠷⠭⠾⠟⠷⠭⠾⠬⠗⠷⠭⠾</nemeth> and <nemeth class="inline">⠙⠑⠛⠀⠗⠷⠭⠾⠀⠐⠅⠀⠙⠑⠛⠀⠏⠷⠭⠾</nemeth>. Since <nemeth class="inline">⠋⠷⠭⠾⠠⠀⠏⠷⠭⠾⠀⠈⠑⠀⠠⠊</nemeth> and <i class="one-letter">I</i> is an ideal, <nemeth class="inline">⠗⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾⠤⠏⠷⠭⠾⠟⠷⠭⠾</nemeth> is also in <i class="one-letter">I</i>. However, since we chose <nemeth class="inline">⠏⠷⠭⠾</nemeth> to be of minimal degree, <nemeth class="inline">⠗⠷⠭⠾</nemeth> must be the zero polynomial. Since we can write any element <nemeth class="inline">⠋⠷⠭⠾</nemeth> in <i class="one-letter">I</i> as <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾</nemeth> for some <nemeth class="inline">⠟⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>, it must be the case that <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Uhq">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.11</span>
                <span class="period">.</span>
              </h6>
              <p id="Xcj">It is not the case that every ideal in the ring <nemeth class="inline">⠠⠋⠈⠷⠭⠠⠀⠽⠈⠾</nemeth> is a principal ideal. Consider the ideal of <nemeth class="inline">⠠⠋⠈⠷⠭⠠⠀⠽⠈⠾</nemeth> generated by the polynomials <i class="one-letter">x</i> and <i class="one-letter">y</i>. This is the ideal of <nemeth class="inline">⠠⠋⠈⠷⠭⠠⠀⠽⠈⠾</nemeth> consisting of all polynomials with no constant term. Since both <i class="one-letter">x</i> and <i class="one-letter">y</i> are in the ideal, no single polynomial can generate the entire ideal.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="HSY">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">17.3.12</span>
                <span class="period">.</span>
              </h6>
              <p id="QDd">Let <i class="one-letter">F</i> be a field and suppose that <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>. Then the ideal generated by <nemeth class="inline">⠏⠷⠭⠾</nemeth> is maximal if and only if <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="yNH">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="TxJ">Suppose that <nemeth class="inline">⠏⠷⠭⠾</nemeth> generates a maximal ideal of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Then <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> is also a prime ideal of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Since a maximal ideal must be properly contained inside <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, <nemeth class="inline">⠏⠷⠭⠾</nemeth> cannot be a constant polynomial. Let us assume that <nemeth class="inline">⠏⠷⠭⠾</nemeth> factors into two polynomials of lesser degree, say <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾⠛⠷⠭⠾</nemeth>. Since <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> is a prime ideal one of these factors, say <nemeth class="inline">⠋⠷⠭⠾</nemeth>, is in <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> and therefore be a multiple of <nemeth class="inline">⠏⠷⠭⠾</nemeth>. But this would imply that <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠋⠷⠭⠾⠨⠨⠾</nemeth>, which is impossible since <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> is maximal.</p>
              <p id="zES">Conversely, suppose that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible over <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Let <i class="one-letter">I</i> be an ideal in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> containing <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>. By Theorem 17.3.10, <i class="one-letter">I</i> is a principal ideal; hence, <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠨⠷⠋⠷⠭⠾⠨⠨⠾</nemeth> for some <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>. Since <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠊</nemeth>, it must be the case that <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾⠛⠷⠭⠾</nemeth> for some <nemeth class="inline">⠛⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>. However, <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible; hence, either <nemeth class="inline">⠋⠷⠭⠾</nemeth> or <nemeth class="inline">⠛⠷⠭⠾</nemeth> is a constant polynomial. If <nemeth class="inline">⠋⠷⠭⠾</nemeth> is constant, then <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> and we are done. If <nemeth class="inline">⠛⠷⠭⠾</nemeth> is constant, then <nemeth class="inline">⠋⠷⠭⠾</nemeth> is a constant multiple of <i class="one-letter">I</i> and <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>. Thus, there are no proper ideals of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> that properly contain <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>.</p>
            </article>
            <article class="paragraphs" id="XbW">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="Pcl">Polynomial rings are very important for computational approaches to algebra, and so Sage makes it very easy to compute with polynomials, over rings, or over fields. And it is trivial to check if a polynomial is irreducible.</p>
            </article>
          </section>
          <section class="subsection" id="GdL">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">17.3.2</span> <span class="title">Historical Note</span></div>
            <p id="vju">Throughout history, the solution of polynomial equations has been a challenging problem. The Babylonians knew how to solve the equation <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth>. Omar Khayyam (1048–1131) devised methods of solving cubic equations through the use of geometric constructions and conic sections. The algebraic solution of the general cubic equation <nemeth class="inline">⠁⠭⠘⠒⠐⠬⠃⠭⠘⠆⠐⠬⠉⠭⠬⠙⠀⠨⠅⠀⠼⠴</nemeth> was not discovered until the sixteenth century. An Italian mathematician, Luca Pacioli (ca. 1445–1509), wrote in <span class="booktitle">Summa de Arithmetica</span> that the solution of the cubic was impossible. This was taken as a challenge by the rest of the mathematical community.</p>
            <p id="bqD">Scipione del Ferro  (1465–1526), of the University of Bologna, solved the “depressed cubic,”</p>
            <div class="displaymath">
              <nemeth>⠁⠭⠘⠒⠐⠬⠉⠭⠬⠙⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. He kept his solution an absolute secret. This may seem surprising today, when mathematicians are usually very eager to publish their results, but in the days of the Italian Renaissance secrecy was customary. Academic appointments were not easy to secure and depended on the ability to prevail in public contests. Such challenges could be issued at any time. Consequently, any major new discovery was a valuable weapon in such a contest. If an opponent presented a list of problems to be solved, del Ferro could in turn present a list of depressed cubics. He kept the secret of his discovery throughout his life, passing it on only on his deathbed to his student Antonio Fior  (ca. 1506–?).</p>
            <p id="HxM">Although Fior was not the equal of his teacher, he immediately issued a challenge to Niccolo Fontana (1499–1557). Fontana was known as Tartaglia  (the Stammerer). As a youth he had suffered a blow from the sword of a French soldier during an attack on his village. He survived the savage wound, but his speech was permanently impaired. Tartaglia sent Fior a list of 30 various mathematical problems; Fior countered by sending Tartaglia a list of 30 depressed cubics. Tartaglia would either solve all 30 of the problems or absolutely fail. After much effort Tartaglia finally succeeded in solving the depressed cubic and defeated Fior, who faded into obscurity.</p>
            <p id="nEV">At this point another mathematician, Gerolamo Cardano  (1501–1576), entered the story. Cardano wrote to Tartaglia, begging him for the solution to the depressed cubic. Tartaglia refused several of his requests, then finally revealed the solution to Cardano after the latter swore an oath not to publish the secret or to pass it on to anyone else. Using the knowledge that he had obtained from Tartaglia, Cardano eventually solved the general cubic</p>
            <div class="displaymath">
              <nemeth>⠁⠭⠘⠒⠐⠬⠃⠭⠘⠆⠐⠬⠉⠭⠬⠙⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. Cardano shared the secret with his student, Ludovico Ferrari  (1522–1565), who solved the general quartic equation,</p>
            <div class="displaymath">
              <nemeth>⠁⠭⠘⠲⠐⠬⠃⠭⠘⠒⠐⠬⠉⠭⠘⠆⠐⠬⠙⠭⠬⠑⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. In 1543, Cardano and Ferrari examined del Ferro's papers and discovered that he had also solved the depressed cubic. Cardano felt that this relieved him of his obligation to Tartaglia, so he proceeded to publish the solutions in <span class="booktitle">Ars Magna</span> (1545), in which he gave credit to del Ferro for solving the special case of the cubic. This resulted in a bitter dispute between Cardano and Tartaglia, who published the story of the oath a year later.</p>
          </section>
        </section>
        <section class="reading-questions" id="Afr">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">17.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="eis">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="iSl">Suppose <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a polynomial of degree <i class="one-letter">n</i> with coefficients from any field. How many roots can <nemeth class="inline">⠏⠷⠭⠾</nemeth> have? How does this generalize your high school algebra experience?</p>
          </article>
          <article class="exercise exercise-like" id="KpB">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="OZu">What is the definition of an irreducible polynomial?</p>
          </article>
          <article class="exercise exercise-like" id="qwK">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="vgD">Find the remainder upon division of <nemeth class="inline">⠼⠦⠭⠘⠢⠤⠂⠦⠭⠘⠲⠬⠆⠴⠭⠘⠒⠤⠆⠢⠭⠘⠆⠬⠆⠴</nemeth> by <nemeth class="inline">⠼⠲⠭⠘⠆⠤⠭⠤⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="WDT">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="bnM">A single theorem in this chapter connects many of the ideas of this chapter to many of the ideas of the previous chapter. State a paraphrased version of this theorem.</p>
          </article>
          <article class="exercise exercise-like" id="CLc">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="HuV">Early in this chapter, we say, “We can prove many results for polynomial rings that are similar to the theorems we proved for the integers.” Write a short essay (or a very long paragraph) justifying this assertion.</p>
          </article>
        </section>
        <section class="exercises" id="eGv">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">17.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="Aoz">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="bMc">List all of the polynomials of degree <nemeth class="inline">⠼⠒</nemeth> or less in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="gvI">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="HTl">Compute each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="JfI"><nemeth class="inline">⠷⠼⠢⠭⠘⠆⠐⠬⠒⠭⠤⠲⠾⠬⠷⠲⠭⠘⠆⠐⠤⠭⠬⠔⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>b. <p id="pmR"><nemeth class="inline">⠷⠼⠢⠭⠘⠆⠐⠬⠒⠭⠤⠲⠾⠷⠲⠭⠘⠆⠐⠤⠭⠬⠔⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>c. <p id="Vua"><nemeth class="inline">⠷⠼⠶⠭⠘⠒⠐⠬⠒⠭⠘⠆⠐⠤⠭⠾⠬⠷⠖⠭⠘⠆⠐⠤⠦⠭⠬⠲⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠔</nemeth></p></li>
              <li>d. <p id="BBj"><nemeth class="inline">⠷⠼⠒⠭⠘⠆⠐⠬⠆⠭⠤⠲⠾⠬⠷⠲⠭⠘⠆⠐⠬⠆⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠢</nemeth></p></li>
              <li>e. <p id="hIs"><nemeth class="inline">⠷⠼⠒⠭⠘⠆⠐⠬⠆⠭⠤⠲⠾⠷⠲⠭⠘⠆⠐⠬⠆⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠢</nemeth></p></li>
              <li>f. <p id="NPB"><nemeth class="inline">⠷⠼⠢⠭⠘⠆⠐⠬⠒⠭⠤⠆⠾⠘⠆</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="cak"><span class="type">Hint</span>:<p id="fch">(a) <nemeth class="inline">⠼⠔⠭⠘⠆⠬⠆⠭⠬⠢</nemeth>; (b) <nemeth class="inline">⠼⠦⠭⠘⠲⠬⠶⠭⠘⠒⠬⠆⠭⠘⠆⠬⠶⠭</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="MCR">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="oau">Use the division algorithm to find <nemeth class="inline">⠟⠷⠭⠾</nemeth> and <nemeth class="inline">⠗⠷⠭⠾</nemeth> such that <nemeth class="inline">⠁⠷⠭⠾⠀⠨⠅⠀⠟⠷⠭⠾⠃⠷⠭⠾⠬⠗⠷⠭⠾</nemeth> with <nemeth class="inline">⠙⠑⠛⠀⠗⠷⠭⠾⠀⠐⠅⠀⠙⠑⠛⠀⠃⠷⠭⠾</nemeth> for each of the following pairs of polynomials.</p>
            <ol class="outerlist">
              <li>a. <p id="eNM"><nemeth class="inline">⠁⠷⠭⠾⠀⠨⠅⠀⠼⠢⠭⠘⠒⠐⠬⠖⠭⠘⠆⠐⠤⠒⠭⠬⠲</nemeth> and <nemeth class="inline">⠃⠷⠭⠾⠀⠨⠅⠀⠭⠤⠆</nemeth> in <nemeth class="inline">⠸⠠⠵⠶⠈⠷⠭⠈⠾</nemeth></p></li>
              <li>b. <p id="KUV"><nemeth class="inline">⠁⠷⠭⠾⠀⠨⠅⠀⠼⠖⠭⠘⠲⠐⠤⠆⠭⠘⠒⠐⠬⠭⠘⠆⠐⠤⠒⠭⠬⠂</nemeth> and <nemeth class="inline">⠃⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆⠐⠬⠭⠤⠆</nemeth> in <nemeth class="inline">⠸⠠⠵⠶⠈⠷⠭⠈⠾</nemeth></p></li>
              <li>c. <p id="rce"><nemeth class="inline">⠁⠷⠭⠾⠀⠨⠅⠀⠼⠲⠭⠘⠢⠐⠤⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠲</nemeth> and <nemeth class="inline">⠃⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠤⠆</nemeth> in <nemeth class="inline">⠸⠠⠵⠢⠈⠷⠭⠈⠾</nemeth></p></li>
              <li>d. <p id="Xjn"><nemeth class="inline">⠁⠷⠭⠾⠀⠨⠅⠀⠭⠘⠢⠐⠬⠭⠘⠒⠐⠤⠭⠘⠆⠐⠤⠭</nemeth> and <nemeth class="inline">⠃⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠬⠭</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ooC"><span class="type">Hint</span>:<p id="Ljq">(a) <nemeth class="inline">⠼⠢⠭⠘⠒⠐⠬⠖⠭⠘⠆⠐⠤⠒⠭⠬⠲⠀⠨⠅⠀⠷⠼⠢⠭⠘⠆⠐⠬⠆⠭⠬⠂⠾⠷⠭⠤⠆⠾⠬⠖</nemeth>; (c) <nemeth class="inline">⠼⠲⠭⠘⠢⠐⠤⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠲⠀⠨⠅⠀⠷⠼⠲⠭⠘⠆⠐⠬⠲⠾⠷⠭⠘⠒⠐⠬⠒⠾⠬⠲⠭⠘⠆⠐⠬⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="sKa">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="UhD">Find the greatest common divisor of each of the following pairs <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> of polynomials. If <nemeth class="inline">⠙⠷⠭⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠏⠷⠭⠾⠠⠀⠟⠷⠭⠾⠾</nemeth>, find two polynomials <nemeth class="inline">⠁⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠷⠭⠾</nemeth> such that <nemeth class="inline">⠁⠷⠭⠾⠏⠷⠭⠾⠬⠃⠷⠭⠾⠟⠷⠭⠾⠀⠨⠅⠀⠙⠷⠭⠾</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="bTg"><nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠤⠖⠭⠘⠆⠐⠬⠂⠲⠭⠤⠂⠢</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠤⠦⠭⠘⠆⠐⠬⠆⠂⠭⠤⠂⠦</nemeth>, where <nemeth class="inline">⠏⠷⠭⠾⠠⠀⠟⠷⠭⠾⠀⠈⠑⠀⠸⠠⠟⠈⠷⠭⠈⠾</nemeth></p></li>
              <li>b. <p id="Iap"><nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠬⠭⠘⠆⠐⠤⠭⠬⠂</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠬⠭⠤⠂</nemeth>, where <nemeth class="inline">⠏⠷⠭⠾⠠⠀⠟⠷⠭⠾⠀⠈⠑⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth></p></li>
              <li>c. <p id="ohy"><nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠬⠭⠘⠆⠐⠤⠲⠭⠬⠲</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠬⠒⠭⠤⠆</nemeth>, where <nemeth class="inline">⠏⠷⠭⠾⠠⠀⠟⠷⠭⠾⠀⠈⠑⠀⠸⠠⠵⠢⠈⠷⠭⠈⠾</nemeth></p></li>
              <li>d. <p id="UoH"><nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠤⠆⠭⠬⠲</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠼⠲⠭⠘⠒⠐⠬⠭⠬⠒</nemeth>, where <nemeth class="inline">⠏⠷⠭⠾⠠⠀⠟⠷⠭⠾⠀⠈⠑⠀⠸⠠⠟⠈⠷⠭⠈⠾</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="YRj">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="AoM">Find all of the zeros for each of the following polynomials.</p>
            <ol class="outerlist">
              <li>a. <p id="YYA"><nemeth class="inline">⠼⠢⠭⠘⠒⠬⠲⠭⠘⠆⠤⠭⠬⠔</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>b. <p id="FfJ"><nemeth class="inline">⠼⠒⠭⠘⠒⠤⠲⠭⠘⠆⠤⠭⠬⠲</nemeth> in <nemeth class="inline">⠸⠠⠵⠢</nemeth></p></li>
              <li>c. <p id="lmS"><nemeth class="inline">⠼⠢⠭⠘⠲⠬⠆⠭⠘⠆⠤⠒</nemeth> in <nemeth class="inline">⠸⠠⠵⠶</nemeth></p></li>
              <li>d. <p id="Rub"><nemeth class="inline">⠭⠘⠒⠐⠬⠭⠬⠂</nemeth> in <nemeth class="inline">⠸⠠⠵⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="gKd"><span class="type">Hint</span>:<p id="rqz">(a) No zeros in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>; (c) <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="EYs">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="gvV">Find all of the units in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="lfB">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="MDe">Find a unit <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠲⠈⠷⠭⠈⠾</nemeth> such that <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠂⠀⠼⠂</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ZfE"><span class="type">Hint</span>:<p id="XxI">Look at <nemeth class="inline">⠷⠼⠆⠭⠬⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="RmK">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="sKn">Which of the following polynomials are irreducible over <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>?</p>
            <ol class="outerlist">
              <li>a. <p id="WdU"><nemeth class="inline">⠭⠘⠲⠐⠤⠆⠭⠘⠒⠬⠆⠭⠘⠆⠬⠭⠬⠲</nemeth></p></li>
              <li>b. <p id="Cld"><nemeth class="inline">⠭⠘⠲⠐⠤⠢⠭⠘⠒⠬⠒⠭⠤⠆</nemeth></p></li>
              <li>c. <p id="ism"><nemeth class="inline">⠼⠒⠭⠘⠢⠤⠲⠭⠘⠒⠤⠖⠭⠘⠆⠬⠖</nemeth></p></li>
              <li>d. <p id="Ozv"><nemeth class="inline">⠼⠢⠭⠘⠢⠤⠖⠭⠘⠲⠤⠒⠭⠘⠆⠬⠔⠭⠤⠂⠢</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ltW"><span class="type">Hint</span>:<p id="DER">(a) Reducible; (c) irreducible.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="xtT">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="YRw">Find all of the irreducible polynomials of degrees <nemeth class="inline">⠼⠆</nemeth> and <nemeth class="inline">⠼⠒</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="dBc">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="EYF">Give two different factorizations of <nemeth class="inline">⠭⠘⠆⠐⠬⠭⠬⠦</nemeth> in <nemeth class="inline">⠸⠠⠵⠂⠴⠈⠷⠭⠈⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="dPx"><span class="type">Hint</span>:<p id="jMa">One factorization is <nemeth class="inline">⠭⠘⠆⠐⠬⠭⠬⠦⠀⠨⠅⠀⠷⠭⠬⠆⠾⠷⠭⠬⠔⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="JIl">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="lfO">Prove or disprove: There exists a polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠖⠈⠷⠭⠈⠾</nemeth> of degree <i class="one-letter">n</i> with more than <i class="one-letter">n</i> distinct zeros.</p>
          </article>
          <article class="exercise exercise-like" id="pPu">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="RmX">If <i class="one-letter">F</i> is a field, show that <nemeth class="inline">⠠⠋⠈⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠈⠾</nemeth> is an integral domain.</p>
          </article>
          <article class="exercise exercise-like" id="VWD">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="xug">Show that the division algorithm does not hold for <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. Why does it fail?</p>
            <div class="solutions">
              <div class="hint solution-like" id="Csh"><span class="type">Hint</span>:<p id="PTj">The integers <nemeth class="inline">⠸⠠⠵</nemeth> do not form a field.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="CdM">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="dBp">Prove or disprove: <nemeth class="inline">⠭⠘⠏⠐⠬⠁</nemeth> is irreducible for any <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠵⠰⠏</nemeth>, where <i class="one-letter">p</i> is prime.</p>
            <div class="solutions">
              <div class="hint solution-like" id="OGz"><span class="type">Hint</span>:<p id="was">False.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ikV">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="JIy">Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> be irreducible in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, where <i class="one-letter">F</i> is a field. If <nemeth class="inline">⠋⠷⠭⠾⠳⠏⠷⠭⠾⠟⠷⠭⠾</nemeth>, prove that either <nemeth class="inline">⠋⠷⠭⠾⠳⠏⠷⠭⠾</nemeth> or <nemeth class="inline">⠋⠷⠭⠾⠳⠟⠷⠭⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Ose">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="pPH">Suppose that <i class="one-letter">R</i> and <i class="one-letter">S</i> are isomorphic rings. Prove that <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾⠀⠈⠱⠈⠱⠀⠠⠎⠈⠷⠭⠈⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Hca"><span class="type">Hint</span>:<p id="chB">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth> be an isomorphism. Define <nemeth class="inline">⠐⠨⠋⠣⠱⠻⠒⠀⠠⠗⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠎⠈⠷⠭⠈⠾</nemeth> by <nemeth class="inline">⠐⠋⠣⠱⠻⠷⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠾⠀⠨⠅⠀⠋⠷⠁⠴⠾⠬⠋⠷⠁⠂⠾⠭⠬⠄⠄⠄⠬⠋⠷⠁⠰⠝⠐⠾⠭⠘⠝</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uzn">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="VWQ">Let <i class="one-letter">F</i> be a field and <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠋</nemeth>. If <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>, show that <nemeth class="inline">⠏⠷⠁⠾</nemeth> is the remainder obtained when <nemeth class="inline">⠏⠷⠭⠾</nemeth> is divided by <nemeth class="inline">⠭⠤⠁</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="aGw">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">The Rational Root Theorem.</span>
            </h6>
            <p id="CdZ">Let</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠁⠰⠝⠐⠭⠘⠝⠐⠬⠁⠰⠝⠤⠂⠐⠭⠘⠝⠤⠂⠐⠬⠄⠄⠄⠬⠁⠴⠀⠈⠑⠀⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠁⠰⠝⠐⠀⠌⠨⠅⠀⠼⠴</nemeth>. Prove that if <nemeth class="inline">⠏⠷⠗⠸⠌⠎⠾⠀⠨⠅⠀⠼⠴</nemeth>, where <nemeth class="inline">⠛⠉⠙⠀⠷⠗⠠⠀⠎⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠗⠳⠁⠴</nemeth> and <nemeth class="inline">⠎⠳⠁⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="GNF">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="ili">Let <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> be the multiplicative group of positive rational numbers. Prove that <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> is isomorphic to <nemeth class="inline">⠷⠸⠠⠵⠈⠷⠭⠈⠾⠠⠀⠬⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="mUO">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Cyclotomic Polynomials.</span>
            </h6>
            <p id="Osr">The polynomial</p>
            <div class="displaymath">
              <nemeth>⠨⠠⠋⠰⠝⠐⠷⠭⠾⠀⠨⠅⠀⠹⠭⠘⠝⠐⠤⠂⠌⠭⠤⠂⠼⠀⠨⠅⠀⠭⠘⠝⠤⠂⠐⠬⠭⠘⠝⠤⠆⠐⠬⠄⠄⠄⠬⠭⠬⠂</nemeth>
            </div>
            <p data-braille="continuation">is called the <dfn class="terminology">cyclotomic polynomial.</dfn> Show that <nemeth class="inline">⠨⠠⠋⠰⠏⠐⠷⠭⠾</nemeth> is irreducible over <nemeth class="inline">⠸⠠⠟</nemeth> for any prime <i class="one-letter">p</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="LLT"><span class="type">Hint</span>:<p id="IoK">The polynomial</p><div class="displaymath"><nemeth>⠨⠠⠋⠰⠝⠐⠷⠭⠾⠀⠨⠅⠀⠹⠭⠘⠝⠐⠤⠂⠌⠭⠤⠂⠼⠀⠨⠅⠀⠭⠘⠝⠤⠂⠐⠬⠭⠘⠝⠤⠆⠐⠬⠄⠄⠄⠬⠭⠬⠂</nemeth></div><p data-braille="continuation">is called the <dfn class="terminology">cyclotomic polynomial.</dfn> Show that <nemeth class="inline">⠨⠠⠋⠰⠏⠐⠷⠭⠾</nemeth> is irreducible over <nemeth class="inline">⠸⠠⠟</nemeth> for any prime <i class="one-letter">p</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="TbX">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="uzA">If <i class="one-letter">F</i> is a field, show that there are infinitely many irreducible polynomials in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="zjg">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="aGJ">Let <i class="one-letter">R</i> be a commutative ring with identity. Prove that multiplication is commutative in <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="fqp">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="GNS">Let <i class="one-letter">R</i> be a commutative ring with identity. Prove that multiplication is distributive in <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Lxy">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="mVb">Show that <nemeth class="inline">⠭⠘⠏⠐⠤⠭</nemeth> has <i class="one-letter">p</i> distinct zeros in <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>, for any prime <i class="one-letter">p</i>. Conclude that</p>
            <div class="displaymath">
              <nemeth>⠭⠘⠏⠐⠤⠭⠀⠨⠅⠀⠭⠷⠭⠤⠂⠾⠷⠭⠤⠆⠾⠀⠄⠄⠄⠀⠷⠭⠤⠷⠏⠤⠂⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="rEH">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="Tck">Let <i class="one-letter">F</i> be a field and <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝</nemeth> be in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Define <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠁⠂⠬⠆⠁⠆⠭⠬⠄⠄⠄⠬⠝⠁⠰⠝⠐⠭⠘⠝⠤⠂</nemeth> to be the <dfn class="terminology">derivative</dfn> of <nemeth class="inline">⠋⠷⠭⠾</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="Tjo">Prove that</p><div class="displaymath"><nemeth>⠷⠋⠬⠛⠾⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠋⠘⠄⠐⠷⠭⠾⠬⠛⠘⠄⠐⠷⠭⠾</nemeth></div><p data-braille="continuation">. Conclude that we can define a homomorphism of abelian groups <nemeth class="inline">⠠⠙⠒⠀⠠⠋⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> by <nemeth class="inline">⠠⠙⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠋⠘⠄⠐⠷⠭⠾</nemeth>.</p></li>
              <li>b. <p id="zqx">Calculate the kernel of <i class="one-letter">D</i> if <nemeth class="inline">⠉⠓⠁⠗⠠⠋⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
              <li>c. <p id="fxG">Calculate the kernel of <i class="one-letter">D</i> if <nemeth class="inline">⠉⠓⠁⠗⠠⠋⠀⠨⠅⠀⠏</nemeth>.</p></li>
              <li>d. <p id="LEP">Prove that</p><div class="displaymath"><nemeth>⠷⠋⠛⠾⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠋⠘⠄⠐⠷⠭⠾⠛⠷⠭⠾⠬⠋⠷⠭⠾⠛⠘⠄⠐⠷⠭⠾</nemeth></div><p data-braille="continuation">.</p></li>
              <li>e. <p id="rLY">Suppose that we can factor a polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> into linear factors, say</p><div class="displaymath"><nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠁⠷⠭⠤⠁⠂⠾⠷⠭⠤⠁⠆⠾⠀⠄⠄⠄⠀⠷⠭⠤⠁⠰⠝⠐⠾</nemeth></div><p data-braille="continuation">. Prove that <nemeth class="inline">⠋⠷⠭⠾</nemeth> has no repeated factors if and only if <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾</nemeth> are relatively prime.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="XLQ">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="zjt">Let <i class="one-letter">F</i> be a field. Show that <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is never a field.</p>
            <div class="solutions">
              <div class="hint solution-like" id="cKe"><span class="type">Hint</span>:<p id="ovT">Find a nontrivial proper ideal in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="DSZ">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="fqC">Let <i class="one-letter">R</i> be an integral domain. Prove that <nemeth class="inline">⠠⠗⠈⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠈⠾</nemeth> is an integral domain.</p>
          </article>
          <article class="exercise exercise-like" id="kai">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="LxL">Let <i class="one-letter">R</i> be a commutative ring with identity. Show that <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth> has a subring <nemeth class="inline">⠠⠗⠄</nemeth> isomorphic to <i class="one-letter">R</i>.</p>
          </article>
          <article class="exercise exercise-like" id="Qhr">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="rEU">Let <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> be polynomials in <nemeth class="inline">⠠⠗⠈⠷⠭⠈⠾</nemeth>, where <i class="one-letter">R</i> is a commutative ring with identity. Prove that <nemeth class="inline">⠙⠑⠛⠀⠷⠏⠷⠭⠾⠬⠟⠷⠭⠾⠾⠀⠐⠅⠱⠀⠍⠁⠭⠀⠷⠙⠑⠛⠀⠏⠷⠭⠾⠠⠀⠙⠑⠛⠀⠟⠷⠭⠾⠾</nemeth>.</p>
          </article>
        </section>
        <section class="exercises" id="KNE">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">17.6</span> <span class="title">Additional Exercises:  Solving the Cubic and Quartic Equations</span></div>
          <article class="exercise exercise-like" id="woA">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="XMd">Solve the general quadratic equation</p>
            <div class="displaymath">
              <nemeth>⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">to obtain</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">. The <dfn class="terminology">discriminant</dfn> of the quadratic equation <nemeth class="inline">⠨⠠⠙⠀⠨⠅⠀⠃⠘⠆⠐⠤⠲⠁⠉</nemeth> determines the nature of the solutions of the equation. If <nemeth class="inline">⠨⠠⠙⠀⠨⠂⠀⠼⠴</nemeth>, the equation has two distinct real solutions. If <nemeth class="inline">⠨⠠⠙⠀⠨⠅⠀⠼⠴</nemeth>, the equation has a single repeated real root. If <nemeth class="inline">⠨⠠⠙⠀⠐⠅⠀⠼⠴</nemeth>, there are two distinct imaginary solutions.</p>
          </article>
          <article class="exercise exercise-like" id="cvJ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="DTm">Show that any cubic equation of the form</p>
            <div class="displaymath">
              <nemeth>⠭⠘⠒⠐⠬⠃⠭⠘⠆⠐⠬⠉⠭⠬⠙⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">can be reduced to the form <nemeth class="inline">⠽⠘⠒⠐⠬⠏⠽⠬⠟⠀⠨⠅⠀⠼⠴</nemeth> by making the substitution <nemeth class="inline">⠭⠀⠨⠅⠀⠽⠤⠃⠸⠌⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ICS">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="kav">Prove that the cube roots of 1 are given by</p>
            <div class="displaymath">
              <nemeth>⠨⠕⠀⠀⠨⠅⠀⠹⠤⠂⠬⠊⠜⠒⠻⠌⠆⠼⠀⠨⠕⠘⠆⠀⠀⠨⠅⠀⠹⠤⠂⠤⠊⠜⠒⠻⠌⠆⠼⠀⠨⠕⠘⠒⠀⠀⠨⠅⠀⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="oKb">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="QhE">Make the substitution</p>
            <div class="displaymath">
              <nemeth>⠽⠀⠨⠅⠀⠵⠤⠹⠏⠌⠒⠵⠼</nemeth>
            </div>
            <p data-braille="continuation">for <i class="one-letter">y</i> in the equation <nemeth class="inline">⠽⠘⠒⠐⠬⠏⠽⠬⠟⠀⠨⠅⠀⠼⠴</nemeth> and obtain two solutions <i class="one-letter">A</i> and <i class="one-letter">B</i> for <nemeth class="inline">⠵⠘⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="URk">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="woN">Show that the product of the solutions obtained in (4) is <nemeth class="inline">⠤⠏⠘⠒⠸⠌⠆⠶</nemeth>, deducing that <nemeth class="inline">⠣⠒⠜⠠⠁⠠⠃⠻⠀⠨⠅⠀⠤⠏⠸⠌⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="AYt">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="cvW">Prove that the possible solutions for <i class="one-letter">z</i> in (4) are given by</p>
            <div class="displaymath">
              <nemeth>⠣⠒⠜⠠⠁⠻⠠⠀⠨⠕⠣⠒⠜⠠⠁⠻⠠⠀⠨⠕⠘⠆⠐⠣⠒⠜⠠⠁⠻⠠⠀⠣⠒⠜⠠⠃⠻⠠⠀⠨⠕⠣⠒⠜⠠⠃⠻⠠⠀⠨⠕⠘⠆⠐⠣⠒⠜⠠⠃⠻</nemeth>
            </div>
            <p data-braille="continuation">and use this result to show that the three possible solutions for <i class="one-letter">y</i> are</p>
            <div class="displaymath">
              <nemeth>⠨⠕⠘⠊⠐⠣⠒⠜⠤⠹⠟⠌⠆⠼⠬⠨⠜⠹⠏⠘⠒⠐⠌⠆⠶⠼⠬⠹⠟⠘⠆⠐⠌⠲⠼⠨⠻⠻⠬⠨⠕⠘⠆⠊⠐⠣⠒⠜⠤⠹⠟⠌⠆⠼⠤⠨⠜⠹⠏⠘⠒⠐⠌⠆⠶⠼⠬⠹⠟⠘⠆⠐⠌⠲⠼⠨⠻⠻</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="hfC">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="IDf">The <dfn class="terminology">discriminant</dfn> of the cubic equation is</p>
            <div class="displaymath">
              <nemeth>⠨⠠⠙⠀⠨⠅⠀⠹⠏⠘⠒⠐⠌⠆⠶⠼⠬⠹⠟⠘⠆⠐⠌⠲⠼</nemeth>
            </div>
            <p data-braille="continuation">. Show that <nemeth class="inline">⠽⠘⠒⠐⠬⠏⠽⠬⠟⠀⠨⠅⠀⠼⠴</nemeth></p>
            <ol class="outerlist">
              <li>a. <p id="cDa">has three real roots, at least two of which are equal, if <nemeth class="inline">⠨⠠⠙⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
              <li>b. <p id="IKj">has one real root and two conjugate imaginary roots if <nemeth class="inline">⠨⠠⠙⠀⠨⠂⠀⠼⠴</nemeth>.</p></li>
              <li>c. <p id="oRs">has three distinct real roots if <nemeth class="inline">⠨⠠⠙⠀⠐⠅⠀⠼⠴</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="NmL">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="oKo">Solve the following cubic equations.</p>
            <ol class="outerlist">
              <li>a. <p id="UYB"><nemeth class="inline">⠭⠘⠒⠐⠤⠲⠭⠘⠆⠐⠬⠂⠂⠭⠬⠒⠴⠀⠨⠅⠀⠼⠴</nemeth></p></li>
              <li>b. <p id="BfK"><nemeth class="inline">⠭⠘⠒⠐⠤⠒⠭⠬⠢⠀⠨⠅⠀⠼⠴</nemeth></p></li>
              <li>c. <p id="hmT"><nemeth class="inline">⠭⠘⠒⠐⠤⠒⠭⠬⠆⠀⠨⠅⠀⠼⠴</nemeth></p></li>
              <li>d. <p id="Nuc"><nemeth class="inline">⠭⠘⠒⠐⠬⠭⠬⠒⠀⠨⠅⠀⠼⠴</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="ttU">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="URx">Show that the general quartic equation</p>
            <div class="displaymath">
              <nemeth>⠭⠘⠲⠐⠬⠁⠭⠘⠒⠐⠬⠃⠭⠘⠆⠐⠬⠉⠭⠬⠙⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">can be reduced to</p>
            <div class="displaymath">
              <nemeth>⠽⠘⠲⠐⠬⠏⠽⠘⠆⠐⠬⠟⠽⠬⠗⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">by using the substitution <nemeth class="inline">⠭⠀⠨⠅⠀⠽⠤⠁⠸⠌⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ZBd">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="AYG">Show that</p>
            <div class="displaymath">
              <nemeth>⠷⠽⠘⠆⠐⠬⠹⠂⠌⠆⠼⠵⠾⠘⠆⠐⠀⠨⠅⠀⠷⠵⠤⠏⠾⠽⠘⠆⠐⠤⠟⠽⠬⠷⠹⠂⠌⠲⠼⠵⠘⠆⠐⠤⠗⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="FIm">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="hfP">Show that the right-hand side of Exercise 17.6.10 can be put in the form <nemeth class="inline">⠷⠍⠽⠬⠅⠾⠘⠆</nemeth> if and only if</p>
            <div class="displaymath">
              <nemeth>⠟⠘⠆⠐⠤⠲⠷⠵⠤⠏⠾⠷⠹⠂⠌⠲⠼⠵⠘⠆⠐⠤⠗⠾⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="lPv">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="NmY">From Exercise 17.6.11 obtain the <dfn class="terminology">resolvent cubic equation</dfn></p>
            <div class="displaymath">
              <nemeth>⠵⠘⠒⠐⠤⠏⠵⠘⠆⠐⠤⠲⠗⠵⠬⠷⠲⠏⠗⠤⠟⠘⠆⠐⠾⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. Solving the resolvent cubic equation, put the equation found in Exercise 17.6.10 in the form</p>
            <div class="displaymath">
              <nemeth>⠷⠽⠘⠆⠐⠬⠹⠂⠌⠆⠼⠵⠾⠘⠆⠐⠀⠨⠅⠀⠷⠍⠽⠬⠅⠾⠘⠆</nemeth>
            </div>
            <p data-braille="continuation">to obtain the solution of the quartic equation.</p>
          </article>
          <article class="exercise exercise-like" id="RWE">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="tuh">Use this method to solve the following quartic equations.</p>
            <ol class="outerlist">
              <li>a. <p id="tBl"><nemeth class="inline">⠭⠘⠲⠐⠤⠭⠘⠆⠐⠤⠒⠭⠬⠆⠀⠨⠅⠀⠼⠴</nemeth></p></li>
              <li>b. <p id="ZIu"><nemeth class="inline">⠭⠘⠲⠐⠬⠭⠘⠒⠐⠤⠶⠭⠘⠆⠐⠤⠭⠬⠖⠀⠨⠅⠀⠼⠴</nemeth></p></li>
              <li>c. <p id="FPD"><nemeth class="inline">⠭⠘⠲⠐⠤⠆⠭⠘⠆⠐⠬⠲⠭⠤⠒⠀⠨⠅⠀⠼⠴</nemeth></p></li>
              <li>d. <p id="lWM"><nemeth class="inline">⠭⠘⠲⠐⠤⠲⠭⠘⠒⠐⠬⠒⠭⠘⠆⠐⠤⠢⠭⠬⠆⠀⠨⠅⠀⠼⠴</nemeth></p></li>
            </ol>
          </article>
        </section>
        <section class="section" id="vEG">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">17.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="hPw">
            <p id="vET">Sage is particularly adept at building, analyzing and manipulating polynomial rings. We have seen some of this in the previous chapter. Let's begin by creating three polynomial rings and checking some of their basic properties. There are several ways to construct polynomial rings, but the syntax used here is the most straightforward.</p>
          </section>
          <section class="subsection" id="mkU">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">17.7.1</span> <span class="title">Polynomial Rings and their Elements</span></div>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R.&lt;x&gt; = Integers(8)[]; R
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in x over Ring of integers modulo 8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S.&lt;y&gt; = ZZ[]; S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in y over Integer Ring
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">T.&lt;z&gt; = QQ[]; T
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in z over Rational Field
</div>
            </article>
            <p id="TMe">Basic properties of rings are availble for these examples.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R.is_finite()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R.is_integral_domain()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S.is_integral_domain()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">T.is_field()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">T.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <p id="zTn">With the construction syntax used above, the variables can be used to create elements of the polynomial ring without explicit coercion (though we need to be careful about constant polynomials).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">y in S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x in S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">q = (3/2) + (5/4)*z^2
q in T
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">3 in S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r = 3
r.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Integer Ring
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">s = 3*y^0
s.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in y over Integer Ring
</div>
            </article>
            <p id="gaw">Polynomials can be evaluated like they are functions, so we can mimic the evaluation homomorphism.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p = 3 + 5*x + 2*x^2
p.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in x over Ring of integers modulo 8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p(1)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[p(t) for t in Integers(8)]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3, 2, 5, 4, 7, 6, 1, 0]
</div>
            </article>
            <p id="MhF">Notice that <code class="code-inline tex2jax_ignore">p</code> is a degree two polynomial, yet through a brute-force examination we see that the polynomial only has one root, contrary to our usual expectations. It can be even more unusual.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">q = 4*x^2+4*x
[q(t) for t in Integers(8)]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[0, 0, 0, 0, 0, 0, 0, 0]
</div>
            </article>
            <p id="soO">Sage can create and manipulate rings of polynomials in more than one variable, though we will not have much occasion to use this functionality in this course.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M.&lt;s, t&gt; = QQ[]; M
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Multivariate Polynomial Ring in s, t over Rational Field
</div>
            </article>
          </section>
          <section class="subsection" id="Ssd">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">17.7.2</span> <span class="title">Irreducible Polynomials</span></div>
            <p id="YvX">Whether or not a polynomial factors, taking into consideration the ring used for its coefficients, is an important topic in this chapter and many of the following chapters. Sage can factor, and determine irreducibility, over the integers, the rationals, and finite fields.</p>
            <p id="EDg">First, over the rationals.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R.&lt;x&gt; = QQ[]
p = 1/4*x^4 - x^3 + x^2 - x - 1/2
p.is_irreducible()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1/4) * (x^4 - 4*x^3 + 4*x^2 - 4*x - 2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">q = 2*x^5 + 5/2*x^4 + 3/4*x^3 - 25/24*x^2 - x - 1/2
q.is_irreducible()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">q.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2) * (x^2 + 3/2*x + 3/4) * (x^3 - 1/4*x^2 - 1/3)
</div>
            </article>
            <p id="kKp">Factoring over the integers is really no different than factoring over the rationals. This is the content of Theorem 17.3.4 — finding a factorization over the integers can be converted to finding a factorization over the rationals. So it is with Sage, there is little difference between working over the rationals and the integers. It is a little different working over a finite field. Commentary follows.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;a&gt; = FiniteField(5^2)
S.&lt;y&gt; = F[]
p = 2*y^5 + 2*y^4 + 4*y^3 + 2*y^2 + 3*y + 1
p.is_irreducible()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2) * (y^5 + y^4 + 2*y^3 + y^2 + 4*y + 3)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">q = 3*y^4+2*y^3-y+4; q.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(3) * (y^2 + (a + 4)*y + 2*a + 3) * (y^2 + 4*a*y + 3*a)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r = y^4+2*y^3+3*y^2+4; r.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(y + 4) * (y^3 + 3*y^2 + y + 1)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">s = 3*y^4+2*y^3-y+3; s.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(3) * (y + 1) * (y + 3) * (y + 2*a + 4) * (y + 3*a + 1)
</div>
            </article>
            <p id="QRy">To check these factorizations, we need to compute in the finite field, <code class="code-inline tex2jax_ignore">F</code>, and so we need to know how the symbol <code class="code-inline tex2jax_ignore">a</code> behaves. This symbol is considered as a root of a degree two polynomial over the integers mod 5, which we can get with the <code class="code-inline tex2jax_ignore">.modulus()</code> method.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.modulus()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">x^2 + 4*x + 2
</div>
            </article>
            <p id="wYH">So <nemeth class="inline">⠁⠘⠆⠐⠬⠲⠁⠬⠆⠀⠨⠅⠀⠼⠴</nemeth>, or <nemeth class="inline">⠁⠘⠆⠐⠀⠨⠅⠀⠤⠼⠲⠁⠤⠒⠀⠨⠅⠀⠁⠬⠆</nemeth>. So when checking the factorizations, anytime you see an <nemeth class="inline">⠁⠘⠆</nemeth> you can replace it by <nemeth class="inline">⠁⠬⠆</nemeth>. Notice that by Corollary 17.2.3 we could find the one linear factor of <code class="code-inline tex2jax_ignore">r</code>, and the four linear factors of <code class="code-inline tex2jax_ignore">s</code>, through a brute-force search for roots. This is feasible because the field is finite.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[t for t in F if r(t)==0]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[t for t in F if s(t)==0]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[2, 3*a + 1, 4, 2*a + 4]
</div>
            </article>
            <p id="dfQ">However, <code class="code-inline tex2jax_ignore">q</code> factors into a pair of degree 2 polynomials, so no amount of testing for roots will discover a factor.</p>
            <p id="JmZ">With Eisenstein's Criterion, we can create irreducible polynomials, such as in Example 17.3.8.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">W.&lt;w&gt; = QQ[]
p = 16*w^5 - 9*w^4 +3*w^2 + 6*w -21
p.is_irreducible()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="pui">Over the field <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>, the field of integers mod a prime <i class="one-letter">p</i>, Conway polynomials are canonical choices of a polynomial of degree <i class="one-letter">n</i> that is irreducible over <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>. See the exercises for more about these polynomials.</p>
          </section>
          <section class="subsection" id="yzm">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">17.7.3</span> <span class="title">Polynomials over Fields</span></div>
            <p id="VBr">If <i class="one-letter">F</i> is a field, then every ideal of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is principal (Theorem 17.3.10). Nothing stops you from giving Sage two (or more) generators to construct an ideal, but Sage will determine the element to use in a description of the ideal as a principal ideal.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">W.&lt;w&gt; = QQ[]
r = -w^5 + 5*w^4 - 4*w^3 + 14*w^2 - 67*w + 17
s = 3*w^5 - 14*w^4 + 12*w^3 - 6*w^2 + w
S = W.ideal(r, s)
S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Principal ideal (w^2 - 4*w + 1) of
Univariate Polynomial Ring in w over Rational Field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(w^2)*r + (3*w-6)*s in S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="BIA">Theorem 17.3.12 is the key fact that allows us to easily construct finite fields. Here is a construction of a finite field of order <nemeth class="inline">⠼⠶⠘⠢⠐⠀⠨⠅⠀⠼⠂⠖⠦⠴⠶</nemeth>. All we need is a polynomial of degree <nemeth class="inline">⠼⠢</nemeth> that is irreducible over <nemeth class="inline">⠸⠠⠵⠶</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F = Integers(7)
R.&lt;x&gt; = F[]
p = x^5+ x + 4
p.is_irreducible()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">id = R.ideal(p)
Q = R.quotient(id); Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Quotient Polynomial Ring in xbar over
Ring of integers modulo 7 with modulus x^5 + x + 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_field()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.order() == 7^5
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="hPJ">The symbol <code class="code-inline tex2jax_ignore">xbar</code> is a generator of the field, but right now it is not accessible. <code class="code-inline tex2jax_ignore">xbar</code> is the coset <nemeth class="inline">⠭⠬⠨⠨⠷⠭⠘⠢⠐⠬⠭⠬⠲⠨⠨⠾</nemeth>. A better construction would include specifying this generator.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.gen(0)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">xbar
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.&lt;t&gt; = R.quotient(id); Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Quotient Polynomial Ring in t over
Ring of integers modulo 7 with modulus x^5 + x + 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">t^5 + t + 4
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">t^5 == -(t+4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">t^5
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6*t + 3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(3*t^3 + t + 5)*(t^2 + 4*t + 2)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">5*t^4 + 2*t^2 + 5*t + 5
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 3*t^4 - 6*t^3 + 3*t^2 + 5*t + 2
ainv = a^-1; ainv
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6*t^4 + 5*t^2 + 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a*ainv
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="qUN">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">17.8</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="ydN">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ZBq">Consider the polynomial <nemeth class="inline">⠭⠘⠒⠐⠤⠒⠭⠬⠲</nemeth>. Compute the most thorough factorization of this polynomial over each of the following fields: (a) the finite field <nemeth class="inline">⠸⠠⠵⠢</nemeth>, (b) a finite field with 125 elements, (c) the rationals, (d) the real numbers and (e) the complex numbers. To do this, build the appropriate polynomial ring, and construct the polynomial as a member of this ring, and use the <code class="code-inline tex2jax_ignore">.factor()</code> method.</p>
          </article>
          <article class="exercise exercise-like" id="ekW">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="FIz">“Conway polynomials” are irreducible polynomials over <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth> that Sage (and other software) uses to build maximal ideals in polynomial rings, and thus quotient rings that are fields. Roughly speaking, they are “canonical” choices for each degree and each prime. The command <code class="code-inline tex2jax_ignore">conway_polynomial(p, n)</code> will return a database entry that is an irreducible polynomial of degree <i class="one-letter">n</i> over <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p>
            <p id="lPI">Execute the command <code class="code-inline tex2jax_ignore">conway_polynomial(5, 4)</code> to obtain an allegedly irreducible polynomial of degree 4 over <nemeth class="inline">⠸⠠⠵⠢</nemeth>: <nemeth class="inline">⠏⠀⠨⠅⠀⠭⠘⠲⠐⠬⠲⠭⠘⠆⠐⠬⠲⠭⠬⠆</nemeth>. Construct the right polynomial ring (i.e., in the indeterminate <i class="one-letter">x</i>) and verify that <code class="code-inline tex2jax_ignore">p</code> is really an element of your polynomial ring.</p>
            <p id="RWR">First determine that p has no linear factors. The only possibility left is that <code class="code-inline tex2jax_ignore">p</code> factors as two quadratic polynomials over <nemeth class="inline">⠸⠠⠵⠢</nemeth>. Use a list comprehension with <em class="emphasis">three</em> <code class="code-inline tex2jax_ignore">for</code> statements to create <em class="emphasis">every</em> possible quadratic polynomial over <nemeth class="inline">⠸⠠⠵⠢</nemeth>. Now use this list to create every possible product of two quadratic polynomials and check to see if <code class="code-inline tex2jax_ignore">p</code> is in this list.</p>
            <p id="yea">More on Conway polynomials is available at <a class="external" href="http://www.math.rwth-aachen.de/~Frank.Luebeck/data/ConwayPol/index.html" target="_blank">Frank Lübeck's site</a>.</p>
          </article>
          <article class="exercise exercise-like" id="Ksf">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="elj">Construct a finite field of order <nemeth class="inline">⠼⠶⠆⠔</nemeth> as a quotient of a polynomial ring by a principal ideal generated with a Conway polynomial.</p>
          </article>
          <article class="exercise exercise-like" id="qzo">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="Kss">Define the polynomials <nemeth class="inline">⠏⠀⠨⠅⠀⠭⠘⠒⠐⠬⠆⠭⠘⠆⠐⠬⠆⠭⠬⠲</nemeth> and <nemeth class="inline">⠟⠀⠨⠅⠀⠭⠘⠲⠐⠬⠆⠭⠘⠆</nemeth> as polynomials with coefficients from the integers. Compute <code class="code-inline tex2jax_ignore">gcd(p, q)</code> and verify that the result divides both <code class="code-inline tex2jax_ignore">p</code> and <code class="code-inline tex2jax_ignore">q</code>(just form a fraction in Sage and see that it simplifies cleanly, or use the <code class="code-inline tex2jax_ignore">.quo_rem()</code> method).</p>
            <p id="qzB">Proposition 17.2.5 says there are polynomials <nemeth class="inline">⠗⠷⠭⠾</nemeth> and <nemeth class="inline">⠎⠷⠭⠾</nemeth> such that the greatest common divisor equals <nemeth class="inline">⠗⠷⠭⠾⠏⠷⠭⠾⠬⠎⠷⠭⠾⠟⠷⠭⠾</nemeth>, <em class="emphasis">if the coefficients come from a field</em>. Since here we have two polynomials over the integers, investigate the results returned by Sage for the extended gcd, <code class="code-inline tex2jax_ignore">xgcd(p, q)</code>. In particular, show that the first result of the returned triple is a multiple of the gcd. Then verify the “linear combination” property of the result.</p>
          </article>
          <article class="exercise exercise-like" id="WGx">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="WGK">For a polynomial ring over a field, every ideal is principal. Begin with the ring of polynomials over the rationals. Experiment with constructing ideals using two generators and then see that Sage converts the ideal to a principal ideal with a single generator. (You can get this generator with the ideal method <code class="code-inline tex2jax_ignore">.gen()</code>.) Can you explain how this single generator is computed?</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="HlR">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">18</span> <span class="title">Integral Domains</span></div>
        <section class="introduction" id="oMO">
          <p id="TVV">One of the most important rings we study is the ring of integers. It was our first example of an algebraic structure: the first polynomial ring that we examined was <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. We also know that the integers sit naturally inside the field of rational numbers, <nemeth class="inline">⠸⠠⠟</nemeth>. The ring of integers is the model for all integral domains. In this chapter we will examine integral domains in general, answering questions about the ideal structure of integral domains, polynomial rings over integral domains, and whether or not an integral domain can be embedded in a field.</p>
        </section>
        <section class="section" id="cTV">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">18.1</span> <span class="title">Fields of Fractions</span></div>
          <p id="iJu">Every field is also an integral domain; however, there are many integral domains that are not fields. For example, the integers <nemeth class="inline">⠸⠠⠵</nemeth> form an integral domain but not a field. A question that naturally arises is how we might associate an integral domain with a field. There is a natural way to construct the rationals <nemeth class="inline">⠸⠠⠟</nemeth> from the integers: the rationals can be represented as formal quotients of two integers. The rational numbers are certainly a field. In fact, it can be shown that the rationals are the smallest field that contains the integers. Given an integral domain <i class="one-letter">D</i>, our question now becomes how to construct a smallest field <i class="one-letter">F</i> containing <i class="one-letter">D</i>. We will do this in the same way as we constructed the rationals from the integers.</p>
          <p id="OQD">An element <nemeth class="inline">⠏⠸⠌⠟⠀⠈⠑⠀⠸⠠⠟</nemeth> is the quotient of two integers <i class="one-letter">p</i> and <i class="one-letter">q</i>; however, different pairs of integers can represent the same rational number. For instance, <nemeth class="inline">⠼⠂⠸⠌⠆⠀⠨⠅⠀⠼⠆⠸⠌⠲⠀⠨⠅⠀⠼⠒⠸⠌⠖</nemeth>. We know that</p>
          <div class="displaymath">
            <nemeth>⠹⠁⠌⠃⠼⠀⠨⠅⠀⠹⠉⠌⠙⠼</nemeth>
          </div>
          <p data-braille="continuation">if and only if <nemeth class="inline">⠁⠙⠀⠨⠅⠀⠃⠉</nemeth>. A more formal way of considering this problem is to examine fractions in terms of equivalence relations. We can think of elements in <nemeth class="inline">⠸⠠⠟</nemeth> as ordered pairs in <nemeth class="inline">⠸⠠⠵⠈⠡⠸⠠⠵</nemeth>. A quotient <nemeth class="inline">⠏⠸⠌⠟</nemeth> can be written as <nemeth class="inline">⠷⠏⠠⠀⠟⠾</nemeth>. For instance, <nemeth class="inline">⠷⠼⠒⠠⠀⠼⠶⠾</nemeth> would represent the fraction <nemeth class="inline">⠼⠒⠸⠌⠶</nemeth>. However, there are problems if we consider all possible pairs in <nemeth class="inline">⠸⠠⠵⠈⠡⠸⠠⠵</nemeth>. There is no fraction <nemeth class="inline">⠼⠢⠸⠌⠴</nemeth> corresponding to the pair <nemeth class="inline">⠷⠼⠢⠠⠀⠼⠴⠾</nemeth>. Also, the pairs <nemeth class="inline">⠷⠼⠒⠠⠀⠼⠖⠾</nemeth> and <nemeth class="inline">⠷⠼⠆⠠⠀⠼⠲⠾</nemeth> both represent the fraction <nemeth class="inline">⠼⠂⠸⠌⠆</nemeth>. The first problem is easily solved if we require the second coordinate to be nonzero. The second problem is solved by considering two pairs <nemeth class="inline">⠷⠁⠠⠀⠃⠾</nemeth> and <nemeth class="inline">⠷⠉⠠⠀⠙⠾</nemeth> to be equivalent if <nemeth class="inline">⠁⠙⠀⠨⠅⠀⠃⠉</nemeth>.</p>
          <p id="uXM">If we use the approach of ordered pairs instead of fractions, then we can study integral domains in general. Let <i class="one-letter">D</i> be any integral domain and let</p>
          <div class="displaymath">
            <nemeth>⠠⠎⠀⠨⠅⠀⠨⠷⠷⠁⠠⠀⠃⠾⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠠⠙⠁⠝⠙⠃⠀⠌⠨⠅⠀⠼⠴⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">. Define a relation on <i class="one-letter">S</i> by <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠈⠱⠷⠉⠠⠀⠙⠾</nemeth> if <nemeth class="inline">⠁⠙⠀⠨⠅⠀⠃⠉</nemeth>.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="LAl">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">18.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="rOL">The relation <nemeth class="inline">⠈⠱</nemeth> between elements of <i class="one-letter">S</i> is an equivalence relation.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="RZr">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="jAs">Since <i class="one-letter">D</i> is commutative, <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠃⠁</nemeth>; hence, <nemeth class="inline">⠈⠱</nemeth> is reflexive on <i class="one-letter">D</i>. Now suppose that <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠈⠱⠷⠉⠠⠀⠙⠾</nemeth>. Then <nemeth class="inline">⠁⠙⠀⠨⠅⠀⠃⠉</nemeth> or <nemeth class="inline">⠉⠃⠀⠨⠅⠀⠙⠁</nemeth>. Therefore, <nemeth class="inline">⠷⠉⠠⠀⠙⠾⠈⠱⠷⠁⠠⠀⠃⠾</nemeth> and the relation is symmetric. Finally, to show that the relation is transitive, let <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠈⠱⠷⠉⠠⠀⠙⠾</nemeth> and <nemeth class="inline">⠷⠉⠠⠀⠙⠾⠈⠱⠷⠑⠠⠀⠋⠾</nemeth>. In this case <nemeth class="inline">⠁⠙⠀⠨⠅⠀⠃⠉</nemeth> and <nemeth class="inline">⠉⠋⠀⠨⠅⠀⠙⠑</nemeth>. Multiplying both sides of <nemeth class="inline">⠁⠙⠀⠨⠅⠀⠃⠉</nemeth> by <i class="one-letter">f</i> yields</p>
            <div class="displaymath">
              <nemeth>⠁⠋⠙⠀⠨⠅⠀⠁⠙⠋⠀⠨⠅⠀⠃⠉⠋⠀⠨⠅⠀⠃⠙⠑⠀⠨⠅⠀⠃⠑⠙</nemeth>
            </div>
            <p data-braille="continuation">. Since <i class="one-letter">D</i> is an integral domain, we can deduce that <nemeth class="inline">⠁⠋⠀⠨⠅⠀⠃⠑</nemeth> or <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠈⠱⠷⠑⠠⠀⠋⠾</nemeth>.</p>
          </article>
          <p id="beV">We will denote the set of equivalence classes on <i class="one-letter">S</i> by <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>. We now need to define the operations of addition and multiplication on <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>. Recall how fractions are added and multiplied in <nemeth class="inline">⠸⠠⠟</nemeth>:</p>
          <div class="displaymath">
            <nemeth>⠹⠁⠌⠃⠼⠬⠹⠉⠌⠙⠼⠀⠀⠨⠅⠀⠹⠁⠙⠬⠃⠉⠌⠃⠙⠼⠆⠀⠹⠁⠌⠃⠼⠡⠹⠉⠌⠙⠼⠀⠀⠨⠅⠀⠹⠁⠉⠌⠃⠙⠼</nemeth>
          </div>
          <p data-braille="continuation">. It seems reasonable to define the operations of addition and multiplication on <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> in a similar manner. If we denote the equivalence class of <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠎</nemeth> by <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾</nemeth>, then we are led to define the operations of addition and multiplication on <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> by</p>
          <div class="displaymath">
            <nemeth>⠈⠷⠁⠠⠀⠃⠈⠾⠬⠈⠷⠉⠠⠀⠙⠈⠾⠀⠨⠅⠀⠈⠷⠁⠙⠬⠃⠉⠠⠀⠃⠙⠈⠾</nemeth>
          </div>
          <p data-braille="continuation">and</p>
          <div class="displaymath">
            <nemeth>⠈⠷⠁⠠⠀⠃⠈⠾⠡⠈⠷⠉⠠⠀⠙⠈⠾⠀⠨⠅⠀⠈⠷⠁⠉⠠⠀⠃⠙⠈⠾</nemeth>
          </div>
          <p data-braille="continuation">, respectively. The next lemma demonstrates that these operations are independent of the choice of representatives from each equivalence class.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="rHu">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">18.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="XVU">The operations of addition and multiplication on <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> are well-defined.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="ygA">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="PHB">We will prove that the operation of addition is well-defined. The proof that multiplication is well-defined is left as an exercise. Let <nemeth class="inline">⠈⠷⠁⠂⠠⠀⠃⠂⠈⠾⠀⠨⠅⠀⠈⠷⠁⠆⠠⠀⠃⠆⠈⠾</nemeth> and <nemeth class="inline">⠈⠷⠉⠂⠠⠀⠙⠂⠈⠾⠀⠨⠅⠀⠈⠷⠉⠆⠠⠀⠙⠆⠈⠾</nemeth>. We must show that</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠁⠂⠙⠂⠬⠃⠂⠉⠂⠠⠀⠃⠂⠙⠂⠈⠾⠀⠨⠅⠀⠈⠷⠁⠆⠙⠆⠬⠃⠆⠉⠆⠠⠀⠃⠆⠙⠆⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">or, equivalently, that</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠂⠙⠂⠬⠃⠂⠉⠂⠾⠷⠃⠆⠙⠆⠾⠀⠨⠅⠀⠷⠃⠂⠙⠂⠾⠷⠁⠆⠙⠆⠬⠃⠆⠉⠆⠾</nemeth>
            </div>
            <p data-braille="continuation">. Since  <nemeth class="inline">⠈⠷⠁⠂⠠⠀⠃⠂⠈⠾⠀⠨⠅⠀⠈⠷⠁⠆⠠⠀⠃⠆⠈⠾</nemeth> and <nemeth class="inline">⠈⠷⠉⠂⠠⠀⠙⠂⠈⠾⠀⠨⠅⠀⠈⠷⠉⠆⠠⠀⠙⠆⠈⠾</nemeth>, we know that <nemeth class="inline">⠁⠂⠃⠆⠀⠨⠅⠀⠃⠂⠁⠆</nemeth> and <nemeth class="inline">⠉⠂⠙⠆⠀⠨⠅⠀⠙⠂⠉⠆</nemeth>. Therefore,</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠂⠙⠂⠬⠃⠂⠉⠂⠾⠷⠃⠆⠙⠆⠾⠀⠀⠨⠅⠀⠁⠂⠙⠂⠃⠆⠙⠆⠬⠃⠂⠉⠂⠃⠆⠙⠆⠀⠀⠀⠀⠨⠅⠀⠁⠂⠃⠆⠙⠂⠙⠆⠬⠃⠂⠃⠆⠉⠂⠙⠆⠀⠀⠀⠀⠨⠅⠀⠃⠂⠁⠆⠙⠂⠙⠆⠬⠃⠂⠃⠆⠙⠂⠉⠆⠀⠀⠀⠀⠨⠅⠀⠷⠃⠂⠙⠂⠾⠷⠁⠆⠙⠆⠬⠃⠆⠉⠆⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="lemma theorem-like" data-braille="theorem-like" id="XOD">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">18.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="Edd">The set of equivalence classes of <i class="one-letter">S</i>, <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>, under the equivalence relation <nemeth class="inline">⠈⠱</nemeth>, together with the operations of addition and  multiplication defined by</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠁⠠⠀⠃⠈⠾⠬⠈⠷⠉⠠⠀⠙⠈⠾⠀⠀⠨⠅⠀⠈⠷⠁⠙⠬⠃⠉⠠⠀⠃⠙⠈⠾⠀⠈⠷⠁⠠⠀⠃⠈⠾⠡⠈⠷⠉⠠⠀⠙⠈⠾⠀⠀⠨⠅⠀⠈⠷⠁⠉⠠⠀⠃⠙⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">, is a field.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="enJ">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="vOK">The additive and multiplicative identities are <nemeth class="inline">⠈⠷⠼⠴⠠⠀⠼⠂⠈⠾</nemeth> and <nemeth class="inline">⠈⠷⠼⠂⠠⠀⠼⠂⠈⠾</nemeth>, respectively. To show that <nemeth class="inline">⠈⠷⠼⠴⠠⠀⠼⠂⠈⠾</nemeth> is the additive identity, observe that</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠁⠠⠀⠃⠈⠾⠬⠈⠷⠼⠴⠠⠀⠼⠂⠈⠾⠀⠨⠅⠀⠈⠷⠁⠐⠂⠬⠃⠐⠴⠠⠀⠃⠐⠂⠈⠾⠀⠨⠅⠀⠈⠷⠁⠠⠀⠃⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">. It is easy to show that <nemeth class="inline">⠈⠷⠼⠂⠠⠀⠼⠂⠈⠾</nemeth> is the multiplicative identity. Let <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾⠀⠈⠑⠀⠠⠋⠰⠠⠙</nemeth> such that <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>. Then <nemeth class="inline">⠈⠷⠃⠠⠀⠁⠈⠾</nemeth> is also in <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> and <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾⠡⠈⠷⠃⠠⠀⠁⠈⠾⠀⠨⠅⠀⠈⠷⠼⠂⠠⠀⠼⠂⠈⠾</nemeth>; hence, <nemeth class="inline">⠈⠷⠃⠠⠀⠁⠈⠾</nemeth> is the multiplicative inverse for <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾</nemeth>. Similarly, <nemeth class="inline">⠈⠷⠤⠁⠠⠀⠃⠈⠾</nemeth> is the additive inverse of <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾</nemeth>. We leave as exercises the verification of the associative and  commutative properties of multiplication in <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>. We also leave it to the reader to show that <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> is an abelian group under addition.</p>
            <p id="bVT">It remains to show that the distributive property holds in <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>; however,</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠁⠠⠀⠃⠈⠾⠈⠷⠑⠠⠀⠋⠈⠾⠬⠈⠷⠉⠠⠀⠙⠈⠾⠈⠷⠑⠠⠀⠋⠈⠾⠀⠀⠨⠅⠀⠈⠷⠁⠑⠠⠀⠃⠋⠈⠾⠬⠈⠷⠉⠑⠠⠀⠙⠋⠈⠾⠀⠀⠀⠀⠨⠅⠀⠈⠷⠁⠑⠙⠋⠬⠃⠋⠉⠑⠠⠀⠃⠙⠋⠘⠆⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠈⠷⠁⠑⠙⠬⠃⠉⠑⠠⠀⠃⠙⠋⠈⠾⠀⠀⠀⠀⠨⠅⠀⠈⠷⠁⠙⠑⠬⠃⠉⠑⠠⠀⠃⠙⠋⠈⠾⠀⠀⠀⠀⠨⠅⠀⠷⠈⠷⠁⠠⠀⠃⠈⠾⠬⠈⠷⠉⠠⠀⠙⠈⠾⠾⠈⠷⠑⠠⠀⠋⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">and the lemma is proved.</p>
          </article>
          <p id="Hme">The field <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> in Lemma 18.1.3 is called the <dfn class="terminology">field of fractions</dfn> or <dfn class="terminology">field of quotients</dfn> of the integral domain <i class="one-letter">D</i>.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="ftc">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">18.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="GXJ">Let <i class="one-letter">D</i> be an integral domain. Then <i class="one-letter">D</i> can be embedded in a field of fractions <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>, where any element in <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> can be expressed as the quotient of two elements in <i class="one-letter">D</i>. Furthermore, the field of fractions <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> is unique in the sense that if <i class="one-letter">E</i> is any field containing <i class="one-letter">D</i>, then there exists a map <nemeth class="inline">⠨⠓⠒⠀⠠⠋⠰⠠⠙⠐⠀⠫⠕⠀⠠⠑</nemeth> giving an isomorphism with a subfield of <i class="one-letter">E</i> such that <nemeth class="inline">⠓⠷⠁⠾⠀⠨⠅⠀⠁</nemeth> for all elements <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠙</nemeth>, where we identify <i class="one-letter">a</i> with its image in <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="hip">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="Idc">We will first demonstrate that <i class="one-letter">D</i> can be embedded in the field  <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>. Define a map <nemeth class="inline">⠨⠋⠒⠀⠠⠙⠀⠫⠕⠀⠠⠋⠰⠠⠙⠐</nemeth> by <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠈⠷⠁⠠⠀⠼⠂⠈⠾</nemeth>. Then for <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">D</i>,</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠬⠃⠾⠀⠨⠅⠀⠈⠷⠁⠬⠃⠠⠀⠼⠂⠈⠾⠀⠨⠅⠀⠈⠷⠁⠠⠀⠼⠂⠈⠾⠬⠈⠷⠃⠠⠀⠼⠂⠈⠾⠀⠨⠅⠀⠋⠷⠁⠾⠬⠋⠷⠃⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠃⠾⠀⠨⠅⠀⠈⠷⠁⠃⠠⠀⠼⠂⠈⠾⠀⠨⠅⠀⠈⠷⠁⠠⠀⠼⠂⠈⠾⠈⠷⠃⠠⠀⠼⠂⠈⠾⠀⠨⠅⠀⠋⠷⠁⠾⠋⠷⠃⠾⠆</nemeth>
            </div>
            <p data-braille="continuation">hence, <nemeth class="inline">⠨⠋</nemeth> is a homomorphism. To show that <nemeth class="inline">⠨⠋</nemeth> is one-to-one, suppose that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠋⠷⠃⠾</nemeth>. Then <nemeth class="inline">⠈⠷⠁⠠⠀⠼⠂⠈⠾⠀⠨⠅⠀⠈⠷⠃⠠⠀⠼⠂⠈⠾</nemeth>, or <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠐⠂⠀⠨⠅⠀⠼⠂⠃⠀⠨⠅⠀⠃</nemeth>. Finally, any element of <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> can be expressed as the quotient of two elements in <i class="one-letter">D</i>, since</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠾⠈⠷⠋⠷⠃⠾⠈⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠈⠷⠁⠠⠀⠼⠂⠈⠾⠈⠷⠃⠠⠀⠼⠂⠈⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠈⠷⠁⠠⠀⠼⠂⠈⠾⠡⠈⠷⠼⠂⠠⠀⠃⠈⠾⠀⠨⠅⠀⠈⠷⠁⠠⠀⠃⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="okl">Now let <i class="one-letter">E</i> be a field containing <i class="one-letter">D</i> and define a map <nemeth class="inline">⠨⠓⠒⠀⠠⠋⠰⠠⠙⠐⠀⠫⠕⠀⠠⠑</nemeth> by <nemeth class="inline">⠓⠷⠈⠷⠁⠠⠀⠃⠈⠾⠾⠀⠨⠅⠀⠁⠃⠘⠤⠼⠂</nemeth>. To show that <nemeth class="inline">⠨⠓</nemeth> is well-defined, let <nemeth class="inline">⠈⠷⠁⠂⠠⠀⠃⠂⠈⠾⠀⠨⠅⠀⠈⠷⠁⠆⠠⠀⠃⠆⠈⠾</nemeth>. Then <nemeth class="inline">⠁⠂⠃⠆⠀⠨⠅⠀⠃⠂⠁⠆</nemeth>. Therefore, <nemeth class="inline">⠁⠂⠃⠂⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠆⠃⠆⠘⠤⠼⠂</nemeth> and <nemeth class="inline">⠓⠷⠈⠷⠁⠂⠠⠀⠃⠂⠈⠾⠾⠀⠨⠅⠀⠓⠷⠈⠷⠁⠆⠠⠀⠃⠆⠈⠾⠾</nemeth>.</p>
            <p id="Uru">If <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾</nemeth> and <nemeth class="inline">⠈⠷⠉⠠⠀⠙⠈⠾</nemeth> are in <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠓⠷⠈⠷⠁⠠⠀⠃⠈⠾⠬⠈⠷⠉⠠⠀⠙⠈⠾⠾⠀⠀⠨⠅⠀⠓⠷⠈⠷⠁⠙⠬⠃⠉⠠⠀⠃⠙⠈⠾⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠙⠬⠃⠉⠾⠷⠃⠙⠾⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠁⠃⠘⠤⠼⠂⠐⠬⠉⠙⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠓⠷⠈⠷⠁⠠⠀⠃⠈⠾⠾⠬⠓⠷⠈⠷⠉⠠⠀⠙⠈⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠓⠷⠈⠷⠁⠠⠀⠃⠈⠾⠡⠈⠷⠉⠠⠀⠙⠈⠾⠾⠀⠀⠨⠅⠀⠓⠷⠈⠷⠁⠉⠠⠀⠃⠙⠈⠾⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠉⠾⠷⠃⠙⠾⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠁⠃⠘⠤⠼⠂⠐⠉⠙⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠓⠷⠈⠷⠁⠠⠀⠃⠈⠾⠾⠓⠷⠈⠷⠉⠠⠀⠙⠈⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">. Therefore, <nemeth class="inline">⠨⠓</nemeth> is a homomorphism.</p>
            <p id="AyD">To complete the proof of the theorem, we need to show that <nemeth class="inline">⠨⠓</nemeth> is one-to-one. Suppose that <nemeth class="inline">⠓⠷⠈⠷⠁⠠⠀⠃⠈⠾⠾⠀⠨⠅⠀⠁⠃⠘⠤⠼⠂⠐⠀⠨⠅⠀⠼⠴</nemeth>. Then <nemeth class="inline">⠁⠀⠨⠅⠀⠼⠴⠃⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾⠀⠨⠅⠀⠈⠷⠼⠴⠠⠀⠃⠈⠾</nemeth>. Therefore, the kernel of <nemeth class="inline">⠨⠓</nemeth> is the zero element <nemeth class="inline">⠈⠷⠼⠴⠠⠀⠃⠈⠾</nemeth> in <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>, and <nemeth class="inline">⠨⠓</nemeth> is injective.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="Qke">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">18.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="SgI">Since <nemeth class="inline">⠸⠠⠟</nemeth> is a field, <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth> is an integral domain. The field of fractions of <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth> is the set of all rational expressions <nemeth class="inline">⠏⠷⠭⠾⠸⠌⠟⠷⠭⠾</nemeth>, where <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> are polynomials over the rationals and <nemeth class="inline">⠟⠷⠭⠾</nemeth> is not the zero polynomial. We will denote this field by <nemeth class="inline">⠸⠠⠟⠷⠭⠾</nemeth>. </p>
          </article>
          <p id="ntn">We will leave the proofs of the following corollaries of Theorem 18.1.4 as exercises.</p>
          <article class="corollary theorem-like" data-braille="theorem-like" id="DVM">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">18.1.6</span>
              <span class="period">.</span>
            </h6>
            <p id="IMW">Let <i class="one-letter">F</i> be a field of characteristic zero. Then <i class="one-letter">F</i> contains a subfield isomorphic to <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
          </article>
          <article class="corollary theorem-like" data-braille="theorem-like" id="kcV">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">18.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="oUf">Let <i class="one-letter">F</i> be a field of characteristic <i class="one-letter">p</i>. Then <i class="one-letter">F</i> contains a subfield isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p>
          </article>
        </section>
        <section class="section" id="Jbe">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">18.2</span> <span class="title">Factorization in Integral Domains</span></div>
          <section class="introduction" id="UTX">
            <p id="Ade">The building blocks of the integers are the prime numbers. If <i class="one-letter">F</i> is a field, then irreducible polynomials in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> play a role that is very similar to that of the prime numbers in the ring of integers. Given an arbitrary integral domain, we are led to the following series of definitions.</p>
            <p id="gkn">Let <i class="one-letter">R</i> be a commutative ring with identity, and let <i class="one-letter">a</i> and <i class="one-letter">b</i> be elements in <i class="one-letter">R</i>. We say that <i class="one-letter">a</i> <dfn class="terminology">divides</dfn> <i class="one-letter">b</i>, and write <nemeth class="inline">⠁⠳⠃</nemeth>, if there exists an element <nemeth class="inline">⠉⠀⠈⠑⠀⠠⠗</nemeth> such that <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠉</nemeth>. A <dfn class="terminology">unit</dfn>  in <i class="one-letter">R</i> is an element that has a multiplicative inverse. Two elements <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">R</i> are said to be <dfn class="terminology">associates</dfn>  if there exists a unit <i class="one-letter">u</i> in <i class="one-letter">R</i> such that <nemeth class="inline">⠁⠀⠨⠅⠀⠥⠃</nemeth>.</p>
            <p id="Mrw">Let <i class="one-letter">D</i> be an integral domain. A nonzero element <nemeth class="inline">⠏⠀⠈⠑⠀⠠⠙</nemeth> that is not a unit is said to be <dfn class="terminology">irreducible</dfn> provided that whenever <nemeth class="inline">⠏⠀⠨⠅⠀⠁⠃</nemeth>, either <i class="one-letter">a</i> or <i class="one-letter">b</i> is a unit. Furthermore, <i class="one-letter">p</i> is <dfn class="terminology">prime</dfn>  if whenever <nemeth class="inline">⠏⠳⠁⠃</nemeth> either <nemeth class="inline">⠏⠳⠁</nemeth> or <nemeth class="inline">⠏⠳⠃</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="wrn">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="ynR">It is important to notice that prime and irreducible elements do not always coincide. Let <i class="one-letter">R</i> be the subring (with identity) of <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠠⠀⠽⠈⠾</nemeth> generated by <nemeth class="inline">⠭⠘⠆</nemeth>, <nemeth class="inline">⠽⠘⠆</nemeth>, and <nemeth class="inline">⠭⠽</nemeth>. Each of these elements is irreducible in <i class="one-letter">R</i>; however, <nemeth class="inline">⠭⠽</nemeth> is not prime, since <nemeth class="inline">⠭⠽</nemeth> divides <nemeth class="inline">⠭⠘⠆⠐⠽⠘⠆</nemeth> but does not divide either <nemeth class="inline">⠭⠘⠆</nemeth> or <nemeth class="inline">⠽⠘⠆</nemeth>.</p>
            </article>
            <p id="syF">The Fundamental Theorem of Arithmetic states that every positive integer <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth> can be factored into a product of prime numbers <nemeth class="inline">⠏⠂⠀⠄⠄⠄⠀⠏⠰⠅⠐</nemeth>, where the <nemeth class="inline">⠏⠰⠊</nemeth>'s are not necessarily distinct. We also know that such factorizations are unique up to the order of the <nemeth class="inline">⠏⠰⠊</nemeth>'s. We can easily extend this result to the integers. The question arises of whether or not such factorizations are possible in other rings. Generalizing this definition, we say an integral domain <i class="one-letter">D</i> is a <dfn class="terminology">unique factorization domain</dfn>, or <dfn class="terminology"><abbr class="acronym">UFD</abbr></dfn>, if <i class="one-letter">D</i> satisfies the following criteria.</p>
            <ol class="outerlist">
              <li>1. <p id="grr">Let <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠙</nemeth> such that <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth> and <i class="one-letter">a</i> is not a unit. Then <i class="one-letter">a</i> can be written as the product of irreducible elements in <i class="one-letter">D</i>.</p></li>
              <li>2. <p id="MyA">Let <nemeth class="inline">⠁⠀⠨⠅⠀⠏⠂⠀⠄⠄⠄⠀⠏⠰⠗⠐⠀⠨⠅⠀⠟⠂⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>, where the <nemeth class="inline">⠏⠰⠊</nemeth>'s and the <nemeth class="inline">⠟⠰⠊</nemeth>'s are irreducible. Then <nemeth class="inline">⠗⠀⠨⠅⠀⠎</nemeth> and there is a <nemeth class="inline">⠨⠏⠀⠈⠑⠀⠠⠎⠰⠗</nemeth> such that <nemeth class="inline">⠏⠰⠊</nemeth> and <nemeth class="inline">⠟⠰⠏⠷⠚⠾</nemeth> are associates for <nemeth class="inline">⠚⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠗</nemeth>.</p></li>
            </ol>
            <article class="example example-like" data-braille="example-like" id="cyw">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="eva">The integers are a unique factorization domain by the Fundamental Theorem of Arithmetic.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="IFF">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="KCj">Not every integral domain is a unique factorization domain. The subring <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠒⠻⠊⠨⠾</nemeth> of the complex numbers is an integral domain (Exercise 16.7.12, Chapter 16). Let <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠜⠒⠻⠊</nemeth> and define <nemeth class="inline">⠨⠝⠒⠀⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾⠀⠫⠕⠀⠸⠠⠝⠨⠬⠨⠷⠴⠨⠾</nemeth> by <nemeth class="inline">⠝⠷⠵⠾⠀⠨⠅⠀⠳⠵⠳⠘⠆⠐⠀⠨⠅⠀⠁⠘⠆⠐⠬⠒⠃⠘⠆</nemeth>. It is clear that <nemeth class="inline">⠝⠷⠵⠾⠀⠨⠂⠱⠀⠼⠴</nemeth> with equality when <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠴</nemeth>. Also, from our knowledge of complex numbers we know that <nemeth class="inline">⠝⠷⠵⠺⠾⠀⠨⠅⠀⠝⠷⠵⠾⠝⠷⠺⠾</nemeth>. It is easy to show that if <nemeth class="inline">⠝⠷⠵⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <i class="one-letter">z</i> is a unit, and that the only units of <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth> are <nemeth class="inline">⠼⠂</nemeth> and <nemeth class="inline">⠤⠼⠂</nemeth>.</p>
              <p id="qJs">We claim that <nemeth class="inline">⠼⠲</nemeth> has two distinct factorizations into irreducible elements:</p>
              <div class="displaymath">
                <nemeth>⠼⠲⠀⠨⠅⠀⠼⠆⠡⠆⠀⠨⠅⠀⠷⠼⠂⠤⠜⠒⠻⠊⠾⠷⠂⠬⠜⠒⠻⠊⠾</nemeth>
              </div>
              <p data-braille="continuation">. We must show that each of these factors is an irreducible element in <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth>. If <nemeth class="inline">⠼⠆</nemeth> is not irreducible, then <nemeth class="inline">⠼⠆⠀⠨⠅⠀⠵⠺</nemeth> for elements <nemeth class="inline">⠵⠠⠀⠺</nemeth> in <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth> where <nemeth class="inline">⠝⠷⠵⠾⠀⠨⠅⠀⠝⠷⠺⠾⠀⠨⠅⠀⠼⠆</nemeth>. However, there does not exist an element in <i class="one-letter">z</i> in <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth> such that <nemeth class="inline">⠝⠷⠵⠾⠀⠨⠅⠀⠼⠆</nemeth> because the equation <nemeth class="inline">⠁⠘⠆⠐⠬⠒⠃⠘⠆⠐⠀⠨⠅⠀⠼⠆</nemeth> has no integer solutions. Therefore, <nemeth class="inline">⠼⠆</nemeth> must be irreducible. A similar argument shows that both <nemeth class="inline">⠼⠂⠤⠜⠒⠻⠊</nemeth> and <nemeth class="inline">⠼⠂⠬⠜⠒⠻⠊</nemeth> are irreducible. Since <nemeth class="inline">⠼⠆</nemeth> is not a unit multiple of either <nemeth class="inline">⠼⠂⠤⠜⠒⠻⠊</nemeth> or <nemeth class="inline">⠼⠂⠬⠜⠒⠻⠊</nemeth>, <nemeth class="inline">⠼⠲</nemeth> has at least two distinct factorizations into irreducible elements.</p>
            </article>
          </section>
          <section class="subsection" id="nta">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">18.2.1</span> <span class="title">Principal Ideal Domains</span></div>
            <p id="DHE">Let <i class="one-letter">R</i> be a commutative ring with identity. Recall that a principal ideal generated by <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth> is an ideal of the form <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠷⠗⠁⠒⠀⠗⠀⠈⠑⠀⠠⠗⠨⠾</nemeth>. An integral domain in which every ideal is principal is called a <dfn class="terminology">principal ideal domain</dfn>, or <dfn class="terminology"><abbr class="acronym">PID</abbr></dfn>.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="hDO">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="kkm">Let <i class="one-letter">D</i> be an integral domain and let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠙</nemeth>. Then</p>
              <ol class="outerlist">
                <li>1. <p id="sFJ"><nemeth class="inline">⠁⠳⠃</nemeth> if and only if <nemeth class="inline">⠨⠨⠷⠃⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>.</p></li>
                <li>2. <p id="YMS"><i class="one-letter">a</i> and <i class="one-letter">b</i> are associates if and only if <nemeth class="inline">⠨⠨⠷⠃⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>.</p></li>
                <li>3. <p id="EUb"><i class="one-letter">a</i> is a unit in <i class="one-letter">D</i> if and only if <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠠⠙</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="KuS">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="gFM">(1) Suppose that <nemeth class="inline">⠁⠳⠃</nemeth>. Then <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠭</nemeth> for some <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠙</nemeth>. Hence, for every <i class="one-letter">r</i> in <i class="one-letter">D</i>, <nemeth class="inline">⠃⠗⠀⠨⠅⠀⠷⠁⠭⠾⠗⠀⠨⠅⠀⠁⠷⠭⠗⠾</nemeth> and <nemeth class="inline">⠨⠨⠷⠃⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>. Conversely, suppose that <nemeth class="inline">⠨⠨⠷⠃⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>. Then <nemeth class="inline">⠃⠀⠈⠑⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>. Consequently, <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠭</nemeth> for some <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠙</nemeth>. Thus, <nemeth class="inline">⠁⠳⠃</nemeth>.</p>
              <p id="MMV">(2) Since <i class="one-letter">a</i> and <i class="one-letter">b</i> are associates, there exists a unit <i class="one-letter">u</i> such that <nemeth class="inline">⠁⠀⠨⠅⠀⠥⠃</nemeth>. Therefore, <nemeth class="inline">⠃⠳⠁</nemeth> and <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠃⠨⠨⠾</nemeth>. Similarly, <nemeth class="inline">⠨⠨⠷⠃⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>. It follows that <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠃⠨⠨⠾</nemeth>. Conversely, suppose that <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠃⠨⠨⠾</nemeth>. By part (1), <nemeth class="inline">⠁⠳⠃</nemeth> and <nemeth class="inline">⠃⠳⠁</nemeth>. Then <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠭</nemeth> and <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠽</nemeth> for some <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠙</nemeth>. Therefore, <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠭⠀⠨⠅⠀⠁⠽⠭</nemeth>. Since <i class="one-letter">D</i> is an integral domain, <nemeth class="inline">⠭⠽⠀⠨⠅⠀⠼⠂</nemeth>; that is, <i class="one-letter">x</i> and <i class="one-letter">y</i> are units and <i class="one-letter">a</i> and <i class="one-letter">b</i> are associates.</p>
              <p id="sUe">(3) An element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠙</nemeth> is a unit if and only if <i class="one-letter">a</i> is an associate of <nemeth class="inline">⠼⠂</nemeth>. However, <i class="one-letter">a</i> is an associate of <nemeth class="inline">⠼⠂</nemeth> if and only if <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠼⠂⠨⠨⠾⠀⠨⠅⠀⠠⠙</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="Vpw">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="neS">Let <i class="one-letter">D</i> be a <abbr class="acronym">PID</abbr> and <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾</nemeth> be a nonzero ideal in <i class="one-letter">D</i>. Then <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾</nemeth> is a maximal ideal if and only if <i class="one-letter">p</i> is irreducible.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Npy">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Zbn">Suppose that <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾</nemeth> is a maximal ideal. If some element <i class="one-letter">a</i> in <i class="one-letter">D</i> divides <i class="one-letter">p</i>, then <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>. Since <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾</nemeth> is maximal, either <nemeth class="inline">⠠⠙⠀⠨⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth> or <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>. Consequently, either <i class="one-letter">a</i> and <i class="one-letter">p</i> are associates or <i class="one-letter">a</i> is a unit. Therefore, <i class="one-letter">p</i> is irreducible.</p>
              <p id="Fiw">Conversely, let <i class="one-letter">p</i> be irreducible. If <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> is an ideal in <i class="one-letter">D</i> such that <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠨⠨⠾⠀⠸⠐⠅⠀⠠⠙</nemeth>, then <nemeth class="inline">⠁⠳⠏</nemeth>. Since <i class="one-letter">p</i> is irreducible, either <i class="one-letter">a</i> must be a unit or <i class="one-letter">a</i> and <i class="one-letter">p</i> are associates. Therefore, either <nemeth class="inline">⠠⠙⠀⠨⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth> or <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>. Thus, <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾</nemeth> is a maximal ideal.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="tSg">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="Vbo">Let <i class="one-letter">D</i> be a <abbr class="acronym">PID</abbr>. If <i class="one-letter">p</i> is irreducible, then <i class="one-letter">p</i> is prime.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="iXC">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="lpF">Let <i class="one-letter">p</i> be irreducible and suppose that <nemeth class="inline">⠏⠳⠁⠃</nemeth>. Then <nemeth class="inline">⠨⠨⠷⠁⠃⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠏⠨⠨⠾</nemeth>. By Corollary 16.4.6, since <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾</nemeth> is a maximal ideal, <nemeth class="inline">⠨⠨⠷⠏⠨⠨⠾</nemeth> must also be a prime ideal. Thus, either <nemeth class="inline">⠁⠀⠈⠑⠀⠨⠨⠷⠏⠨⠨⠾</nemeth> or <nemeth class="inline">⠃⠀⠈⠑⠀⠨⠨⠷⠏⠨⠨⠾</nemeth>. Hence, either <nemeth class="inline">⠏⠳⠁</nemeth> or <nemeth class="inline">⠏⠳⠃</nemeth>.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="NKX">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="Qrv">Let <i class="one-letter">D</i> be a <abbr class="acronym">PID</abbr>. Let <nemeth class="inline">⠠⠊⠂⠠⠀⠠⠊⠆⠠⠀⠄⠄⠄</nemeth> be a set of ideals such that <nemeth class="inline">⠠⠊⠂⠀⠸⠐⠅⠀⠠⠊⠆⠀⠸⠐⠅⠀⠄⠄⠄</nemeth>. Then there exists an integer <i class="one-letter">N</i> such that <nemeth class="inline">⠠⠊⠰⠝⠐⠀⠨⠅⠀⠠⠊⠰⠠⠝</nemeth> for all <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠠⠝</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="qCb">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="RwO">We claim that <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠐⠨⠬⠩⠊⠀⠨⠅⠀⠼⠂⠣⠠⠿⠻⠠⠊⠰⠊</nemeth> is an ideal of <i class="one-letter">D</i>. Certainly <i class="one-letter">I</i> is not empty, since <nemeth class="inline">⠠⠊⠂⠀⠸⠐⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠼⠴⠀⠈⠑⠀⠠⠊</nemeth>. If <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠊</nemeth>, then <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠊⠰⠊</nemeth> and <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠊⠰⠚</nemeth> for some <i class="one-letter">i</i> and <i class="one-letter">j</i> in <nemeth class="inline">⠸⠠⠝</nemeth>. Without loss of generality we can assume that <nemeth class="inline">⠊⠀⠐⠅⠱⠀⠚</nemeth>. Hence, <i class="one-letter">a</i> and <i class="one-letter">b</i> are both in <nemeth class="inline">⠠⠊⠰⠚</nemeth> and so <nemeth class="inline">⠁⠤⠃</nemeth> is also in <nemeth class="inline">⠠⠊⠰⠚</nemeth>. Now let <nemeth class="inline">⠗⠀⠈⠑⠀⠠⠙</nemeth> and <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠊</nemeth>. Again, we note that <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠊⠰⠊</nemeth> for some positive integer <i class="one-letter">i</i>. Since <nemeth class="inline">⠠⠊⠰⠊</nemeth> is an ideal, <nemeth class="inline">⠗⠁⠀⠈⠑⠀⠠⠊⠰⠊</nemeth> and hence must be in <i class="one-letter">I</i>. Therefore, we have shown that <i class="one-letter">I</i> is an ideal in <i class="one-letter">D</i>.</p>
              <p id="xDX">Since <i class="one-letter">D</i> is a principal ideal domain, there exists an element <nemeth class="inline">⠐⠁⠣⠱⠻⠀⠈⠑⠀⠠⠙</nemeth> that generates <i class="one-letter">I</i>. Since <nemeth class="inline">⠐⠁⠣⠱⠻</nemeth> is in <nemeth class="inline">⠠⠊⠰⠠⠝</nemeth> for some <nemeth class="inline">⠠⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>, we know that <nemeth class="inline">⠠⠊⠰⠠⠝⠐⠀⠨⠅⠀⠠⠊⠀⠨⠅⠀⠨⠨⠷⠐⠁⠣⠱⠻⠨⠨⠾</nemeth>. Consequently, <nemeth class="inline">⠠⠊⠰⠝⠐⠀⠨⠅⠀⠠⠊⠰⠠⠝</nemeth> for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠠⠝</nemeth>.</p>
            </article>
            <p id="jON">Any commutative ring satisfying the condition in Lemma 18.2.7 is said to satisfy the <dfn class="terminology">ascending chain condition</dfn>, or <dfn class="terminology">ACC</dfn>. Such rings are called <dfn class="terminology">Noetherian rings</dfn>,  after Emmy Noether.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="BwF">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="Tmb">Every <abbr class="acronym">PID</abbr> is a <abbr class="acronym">UFD</abbr>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="twH">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="dLg"><em class="emphasis">Existence of a factorization.</em> Let <i class="one-letter">D</i> be a <abbr class="acronym">PID</abbr> and <i class="one-letter">a</i> be a nonzero element in <i class="one-letter">D</i> that is not a unit. If <i class="one-letter">a</i> is irreducible, then we are done. If not, then there exists a factorization <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠂⠃⠂</nemeth>, where neither <nemeth class="inline">⠁⠂</nemeth> nor <nemeth class="inline">⠃⠂</nemeth> is a unit. Hence, <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠂⠨⠨⠾</nemeth>. By Lemma 18.2.4, we know that <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠌⠨⠅⠀⠨⠨⠷⠁⠂⠨⠨⠾</nemeth>; otherwise, <i class="one-letter">a</i> and <nemeth class="inline">⠁⠂</nemeth> would be associates and <nemeth class="inline">⠃⠂</nemeth> would be a unit, which would contradict our assumption. Now suppose that <nemeth class="inline">⠁⠂⠀⠨⠅⠀⠁⠆⠃⠆</nemeth>, where neither <nemeth class="inline">⠁⠆</nemeth> nor <nemeth class="inline">⠃⠆</nemeth> is a unit. By the same argument as before, <nemeth class="inline">⠨⠨⠷⠁⠂⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠆⠨⠨⠾</nemeth>. We can continue with this construction to obtain an ascending chain of ideals</p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠁⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠂⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠁⠆⠨⠨⠾⠀⠸⠐⠅⠀⠄⠄⠄</nemeth>
              </div>
              <p data-braille="continuation">. By Lemma 18.2.7, there exists a positive integer <i class="one-letter">N</i> such that <nemeth class="inline">⠨⠨⠷⠁⠰⠝⠐⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠁⠰⠠⠝⠐⠨⠨⠾</nemeth> for all <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠠⠝</nemeth>. Consequently, <nemeth class="inline">⠁⠰⠠⠝</nemeth> must be irreducible. We have now shown that <i class="one-letter">a</i> is the product of two elements, one of which must be irreducible.</p>
              <p id="JSp">Now suppose that <nemeth class="inline">⠁⠀⠨⠅⠀⠉⠂⠏⠂</nemeth>, where <nemeth class="inline">⠏⠂</nemeth> is irreducible. If <nemeth class="inline">⠉⠂</nemeth> is not a unit, we can repeat the preceding argument to conclude that <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠉⠂⠨⠨⠾</nemeth>. Either <nemeth class="inline">⠉⠂</nemeth> is irreducible or <nemeth class="inline">⠉⠂⠀⠨⠅⠀⠉⠆⠏⠆</nemeth>, where <nemeth class="inline">⠏⠆</nemeth> is irreducible and <nemeth class="inline">⠉⠆</nemeth> is not a unit. Continuing in this manner, we obtain another chain of ideals</p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠁⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠉⠂⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠉⠆⠨⠨⠾⠀⠸⠐⠅⠀⠄⠄⠄</nemeth>
              </div>
              <p data-braille="continuation">. This chain must satisfy the ascending chain condition; therefore,</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠗⠐</nemeth>
              </div>
              <p data-braille="continuation">for irreducible elements <nemeth class="inline">⠏⠂⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠗⠐</nemeth>.</p>
              <p id="pZy"><em class="emphasis">Uniqueness of the factorization.</em> To show uniqueness, let</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠗⠐⠀⠨⠅⠀⠟⠂⠟⠆⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>
              </div>
              <p data-braille="continuation">, where each <nemeth class="inline">⠏⠰⠊</nemeth> and each <nemeth class="inline">⠟⠰⠊</nemeth> is irreducible. Without loss of generality, we can assume that <nemeth class="inline">⠗⠀⠐⠅⠀⠎</nemeth>. Since <nemeth class="inline">⠏⠂</nemeth> divides <nemeth class="inline">⠟⠂⠟⠆⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>, by Corollary 18.2.6 it must divide some <nemeth class="inline">⠟⠰⠊</nemeth>. By rearranging the <nemeth class="inline">⠟⠰⠊</nemeth>'s, we can assume that <nemeth class="inline">⠏⠂⠳⠟⠂</nemeth>; hence, <nemeth class="inline">⠟⠂⠀⠨⠅⠀⠥⠂⠏⠂</nemeth> for some unit <nemeth class="inline">⠥⠂</nemeth> in <i class="one-letter">D</i>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠗⠐⠀⠨⠅⠀⠥⠂⠏⠂⠟⠆⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>
              </div>
              <p data-braille="continuation">or</p>
              <div class="displaymath">
                <nemeth>⠏⠆⠀⠄⠄⠄⠀⠏⠰⠗⠐⠀⠨⠅⠀⠥⠂⠟⠆⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>
              </div>
              <p data-braille="continuation">. Continuing in this manner, we can arrange the <nemeth class="inline">⠟⠰⠊</nemeth>'s such that <nemeth class="inline">⠏⠆⠀⠨⠅⠀⠟⠆⠠⠀⠏⠒⠀⠨⠅⠀⠟⠒⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠗⠐⠀⠨⠅⠀⠟⠰⠗⠐</nemeth>, to obtain</p>
              <div class="displaymath">
                <nemeth>⠥⠂⠥⠆⠀⠄⠄⠄⠀⠥⠰⠗⠐⠟⠰⠗⠬⠂⠐⠀⠄⠄⠄⠀⠟⠰⠎⠐⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. In this case <nemeth class="inline">⠟⠰⠗⠬⠂⠐⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth> is a unit, which contradicts the fact that <nemeth class="inline">⠟⠰⠗⠬⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠟⠰⠎⠐</nemeth> are irreducibles. Therefore, <nemeth class="inline">⠗⠀⠨⠅⠀⠎</nemeth> and the factorization of <i class="one-letter">a</i> is unique.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="ZZp">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="Bix">Let <i class="one-letter">F</i> be a field. Then <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is a <abbr class="acronym">UFD</abbr>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Ggy">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="WQB">Every <abbr class="acronym">PID</abbr> is a <abbr class="acronym">UFD</abbr>, but it is not the case that every <abbr class="acronym">UFD</abbr> is a <abbr class="acronym">PID</abbr>. In Corollary 18.2.24, we will prove that <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth> is a <abbr class="acronym">UFD</abbr>. However, <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth> is not a <abbr class="acronym">PID</abbr>. Let <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠷⠼⠢⠋⠷⠭⠾⠬⠭⠛⠷⠭⠾⠒⠀⠋⠷⠭⠾⠠⠀⠛⠷⠭⠾⠀⠈⠑⠀⠸⠠⠵⠈⠷⠭⠈⠾⠨⠾</nemeth>. We can easily show that <i class="one-letter">I</i> is an ideal of <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. Suppose that <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>. Since <nemeth class="inline">⠼⠢⠀⠈⠑⠀⠠⠊</nemeth>, <nemeth class="inline">⠼⠢⠀⠨⠅⠀⠋⠷⠭⠾⠏⠷⠭⠾</nemeth>. In this case <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠏</nemeth> must be a constant. Since <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠊</nemeth>, <nemeth class="inline">⠭⠀⠨⠅⠀⠏⠛⠷⠭⠾</nemeth>; consequently, <nemeth class="inline">⠏⠀⠨⠅⠀⠬⠤⠼⠂</nemeth>. However, it follows from this fact that <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠨⠅⠀⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. But this would mean that <nemeth class="inline">⠼⠒</nemeth> is in <i class="one-letter">I</i>. Therefore, we can write <nemeth class="inline">⠼⠒⠀⠨⠅⠀⠼⠢⠋⠷⠭⠾⠬⠭⠛⠷⠭⠾</nemeth> for some <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. Examining the constant term of this polynomial, we see that <nemeth class="inline">⠼⠒⠀⠨⠅⠀⠼⠢⠋⠷⠭⠾</nemeth>, which is impossible.</p>
            </article>
          </section>
          <section class="subsection" id="TAj">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">18.2.2</span> <span class="title">Euclidean Domains</span></div>
            <p id="PVW">We have repeatedly used the division algorithm when proving results about either <nemeth class="inline">⠸⠠⠵</nemeth> or <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, where <i class="one-letter">F</i> is a field. We should now ask when a division algorithm is available for an integral domain.</p>
            <p id="wdf">Let <i class="one-letter">D</i> be an integral domain such that there is a function <nemeth class="inline">⠨⠝⠒⠀⠠⠙⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠴⠨⠾⠀⠫⠕⠀⠸⠠⠝</nemeth> satisfying the following conditions. </p>
            <ol class="outerlist">
              <li>1. <p id="lbk">If <i class="one-letter">a</i> and <i class="one-letter">b</i> are nonzero elements in <i class="one-letter">D</i>, then <nemeth class="inline">⠝⠷⠁⠾⠀⠐⠅⠱⠀⠝⠷⠁⠃⠾</nemeth>.</p></li>
              <li>2. <p id="Rit">Let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠙</nemeth> and suppose that <nemeth class="inline">⠃⠀⠌⠨⠅⠀⠼⠴</nemeth>. Then there exist elements <nemeth class="inline">⠟⠠⠀⠗⠀⠈⠑⠀⠠⠙</nemeth> such that <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth> and either <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠝⠷⠗⠾⠀⠐⠅⠀⠝⠷⠃⠾</nemeth>.</p></li>
            </ol>
            <p data-braille="continuation">Then <i class="one-letter">D</i> is called a <dfn class="terminology">Euclidean domain</dfn>  and <nemeth class="inline">⠨⠝</nemeth> is called a <dfn class="terminology">Euclidean valuation</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="yBZ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="CXK">Absolute value on <nemeth class="inline">⠸⠠⠵</nemeth> is a Euclidean valuation.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="eJi">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.12</span>
                <span class="period">.</span>
              </h6>
              <p id="jeT">Let <i class="one-letter">F</i> be a field. Then the degree of a polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is a Euclidean valuation.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="KQr">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.13</span>
                <span class="period">.</span>
              </h6>
              <p id="Pmc">Recall that the Gaussian integers in Example 16.2.1 of Chapter 16 are defined by</p>
              <div class="displaymath">
                <nemeth>⠸⠠⠵⠈⠷⠊⠈⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠊⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. We usually measure the size of a complex number <nemeth class="inline">⠁⠬⠃⠊</nemeth> by its absolute value, <nemeth class="inline">⠳⠁⠬⠃⠊⠳⠀⠨⠅⠀⠜⠁⠘⠆⠐⠬⠃⠘⠆⠐⠻</nemeth>; however, <nemeth class="inline">⠜⠁⠘⠆⠐⠬⠃⠘⠆⠐⠻</nemeth> may not be an integer. For our valuation we will let <nemeth class="inline">⠨⠝⠷⠁⠬⠃⠊⠾⠀⠨⠅⠀⠁⠘⠆⠐⠬⠃⠘⠆</nemeth> to ensure that we have an integer.</p>
              <p id="vtl">We claim that <nemeth class="inline">⠨⠝⠷⠁⠬⠃⠊⠾⠀⠨⠅⠀⠁⠘⠆⠐⠬⠃⠘⠆</nemeth> is a Euclidean valuation on <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>. Let <nemeth class="inline">⠵⠠⠀⠺⠀⠈⠑⠀⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>. Then <nemeth class="inline">⠝⠷⠵⠺⠾⠀⠨⠅⠀⠳⠵⠺⠳⠘⠆⠐⠀⠨⠅⠀⠳⠵⠳⠘⠆⠐⠳⠺⠳⠘⠆⠐⠀⠨⠅⠀⠝⠷⠵⠾⠝⠷⠺⠾</nemeth>. Since <nemeth class="inline">⠝⠷⠵⠾⠀⠨⠂⠱⠀⠼⠂</nemeth> for every nonzero <nemeth class="inline">⠵⠀⠈⠑⠀⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>, <nemeth class="inline">⠝⠷⠵⠾⠀⠐⠅⠱⠀⠝⠷⠵⠾⠝⠷⠺⠾</nemeth>.</p>
              <p id="bAu">Next, we must show that for any <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠉⠬⠙⠊</nemeth> in <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth> with <nemeth class="inline">⠺⠀⠌⠨⠅⠀⠼⠴</nemeth>, there exist elements <i class="one-letter">q</i> and <i class="one-letter">r</i> in  <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth> such that <nemeth class="inline">⠵⠀⠨⠅⠀⠟⠺⠬⠗</nemeth> with either <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth> or  <nemeth class="inline">⠝⠷⠗⠾⠀⠐⠅⠀⠝⠷⠺⠾</nemeth>. We can view <i class="one-letter">z</i> and <i class="one-letter">w</i> as elements in <nemeth class="inline">⠸⠠⠟⠷⠊⠾⠀⠨⠅⠀⠨⠷⠏⠬⠟⠊⠒⠀⠏⠠⠀⠟⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth>, the field of fractions of <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>. Observe that</p>
              <div class="displaymath">
                <nemeth>⠵⠺⠘⠤⠼⠂⠀⠀⠨⠅⠀⠷⠁⠬⠃⠊⠾⠹⠉⠤⠙⠊⠌⠉⠘⠆⠐⠬⠙⠘⠆⠐⠼⠀⠀⠀⠀⠨⠅⠀⠹⠁⠉⠬⠃⠙⠌⠉⠘⠆⠐⠬⠙⠘⠆⠐⠼⠬⠹⠃⠉⠤⠁⠙⠌⠉⠘⠆⠐⠬⠙⠘⠆⠐⠼⠊⠀⠀⠀⠀⠨⠅⠀⠷⠍⠂⠬⠹⠝⠂⠌⠉⠘⠆⠐⠬⠙⠘⠆⠐⠼⠾⠬⠷⠍⠆⠬⠹⠝⠆⠌⠉⠘⠆⠐⠬⠙⠘⠆⠐⠼⠾⠊⠀⠀⠀⠀⠨⠅⠀⠷⠍⠂⠬⠍⠆⠊⠾⠬⠷⠹⠝⠂⠌⠉⠘⠆⠐⠬⠙⠘⠆⠐⠼⠬⠹⠝⠆⠌⠉⠘⠆⠐⠬⠙⠘⠆⠐⠼⠊⠾⠀⠀⠀⠀⠨⠅⠀⠷⠍⠂⠬⠍⠆⠊⠾⠬⠷⠎⠬⠞⠊⠾</nemeth>
              </div>
              <p data-braille="continuation">in <nemeth class="inline">⠸⠠⠟⠷⠊⠾</nemeth>. In the last steps we are writing the real and imaginary parts as an integer plus a proper fraction. That is, we take the closest integer <nemeth class="inline">⠍⠰⠊</nemeth> such that the fractional part satisfies <nemeth class="inline">⠳⠝⠰⠊⠐⠸⠌⠷⠁⠘⠆⠐⠬⠃⠘⠆⠐⠾⠳⠀⠐⠅⠱⠀⠼⠂⠸⠌⠆</nemeth>. For example, we write</p>
              <div class="displaymath">
                <nemeth>⠹⠔⠌⠦⠼⠀⠀⠨⠅⠀⠼⠂⠬⠹⠂⠌⠦⠼⠀⠹⠂⠢⠌⠦⠼⠀⠀⠨⠅⠀⠼⠆⠤⠹⠂⠌⠦⠼</nemeth>
              </div>
              <p data-braille="continuation">. Thus, <i class="one-letter">s</i> and <i class="one-letter">t</i> are the “fractional parts” of <nemeth class="inline">⠵⠺⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠍⠂⠬⠍⠆⠊⠾⠬⠷⠎⠬⠞⠊⠾</nemeth>. We also know that <nemeth class="inline">⠎⠘⠆⠐⠬⠞⠘⠆⠐⠀⠐⠅⠱⠀⠼⠂⠸⠌⠲⠬⠂⠸⠌⠲⠀⠨⠅⠀⠼⠂⠸⠌⠆</nemeth>. Multiplying by <i class="one-letter">w</i>, we have</p>
              <div class="displaymath">
                <nemeth>⠵⠀⠨⠅⠀⠵⠺⠘⠤⠼⠂⠐⠺⠀⠨⠅⠀⠺⠷⠍⠂⠬⠍⠆⠊⠾⠬⠺⠷⠎⠬⠞⠊⠾⠀⠨⠅⠀⠟⠺⠬⠗</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠟⠀⠨⠅⠀⠍⠂⠬⠍⠆⠊</nemeth> and <nemeth class="inline">⠗⠀⠨⠅⠀⠺⠷⠎⠬⠞⠊⠾</nemeth>. Since <i class="one-letter">z</i> and <nemeth class="inline">⠟⠺</nemeth> are in <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>, <i class="one-letter">r</i> must be in <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>. Finally, we need to show that either <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠝⠷⠗⠾⠀⠐⠅⠀⠝⠷⠺⠾</nemeth>. However,</p>
              <div class="displaymath">
                <nemeth>⠝⠷⠗⠾⠀⠨⠅⠀⠝⠷⠺⠾⠝⠷⠎⠬⠞⠊⠾⠀⠐⠅⠱⠀⠹⠂⠌⠆⠼⠝⠷⠺⠾⠀⠐⠅⠀⠝⠷⠺⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="mnH">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.14</span>
                <span class="period">.</span>
              </h6>
              <p id="ztk">Every Euclidean domain is a principal ideal domain.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZDQ">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="WgH">Let <i class="one-letter">D</i> be a Euclidean domain and let <nemeth class="inline">⠨⠝</nemeth> be a Euclidean valuation on <i class="one-letter">D</i>. Suppose <i class="one-letter">I</i> is a nontrivial ideal in <i class="one-letter">D</i> and choose a nonzero element <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠊</nemeth> such that <nemeth class="inline">⠝⠷⠃⠾</nemeth> is minimal for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠊</nemeth>. Since <i class="one-letter">D</i> is a Euclidean domain, there exist elements <i class="one-letter">q</i> and <i class="one-letter">r</i> in <i class="one-letter">D</i> such that <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth> and either <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠝⠷⠗⠾⠀⠐⠅⠀⠝⠷⠃⠾</nemeth>. But <nemeth class="inline">⠗⠀⠨⠅⠀⠁⠤⠃⠟</nemeth> is in <i class="one-letter">I</i> since <i class="one-letter">I</i> is an ideal; therefore, <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth> by the minimality of <i class="one-letter">b</i>. It follows that <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠟</nemeth> and <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠨⠷⠃⠨⠨⠾</nemeth>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="SuQ">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.15</span>
                <span class="period">.</span>
              </h6>
              <p id="hpG">Every Euclidean domain is a unique factorization domain.</p>
            </article>
          </section>
          <section class="subsection" id="zHs">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">18.2.3</span> <span class="title">Factorization in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth></span></div>
            <p id="cko">One of the most important polynomial rings is <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>. One of the first questions that come to mind about <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth> is whether or not it is a <abbr class="acronym">UFD</abbr>. We will prove a more general statement here. Our first task is to obtain a more general version of Gauss's Lemma (Theorem 17.3.4).</p>
            <p id="Irx">Let <i class="one-letter">D</i> be a unique factorization domain and suppose that</p>
            <div class="displaymath">
              <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠁⠰⠝⠐⠭⠘⠝⠐⠬⠄⠄⠄⠬⠁⠂⠭⠬⠁⠴</nemeth>
            </div>
            <p data-braille="continuation">in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. Then the <dfn class="terminology">content</dfn> of <nemeth class="inline">⠏⠷⠭⠾</nemeth> is the greatest common divisor of <nemeth class="inline">⠁⠴⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐</nemeth>. We say that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is <dfn class="terminology">primitive</dfn>  if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠴⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="Ukd">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.16</span>
                <span class="period">.</span>
              </h6>
              <p id="HHD">In <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth> the polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠼⠢⠭⠘⠲⠐⠤⠒⠭⠘⠒⠐⠬⠭⠤⠲</nemeth> is a primitive polynomial since the greatest common divisor of the coefficients is <nemeth class="inline">⠼⠂</nemeth>; however, the polynomial <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠼⠲⠭⠘⠆⠐⠤⠖⠭⠬⠦</nemeth> is not primitive since the content of <nemeth class="inline">⠟⠷⠭⠾</nemeth> is <nemeth class="inline">⠼⠆</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="qXA">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.17</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Gauss's Lemma.</span>
              </h6>
              <p id="fAt">Let <i class="one-letter">D</i> be a <abbr class="acronym">UFD</abbr> and let <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> be primitive polynomials in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. Then <nemeth class="inline">⠋⠷⠭⠾⠛⠷⠭⠾</nemeth> is primitive.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="FKZ">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="CnQ">Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠍⠻⠁⠰⠊⠐⠭⠘⠊</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠝⠻⠃⠰⠊⠐⠭⠘⠊</nemeth>. Suppose that <i class="one-letter">p</i> is a prime dividing the coefficients of <nemeth class="inline">⠋⠷⠭⠾⠛⠷⠭⠾</nemeth>. Let <i class="one-letter">r</i> be the smallest integer such that <nemeth class="inline">⠏⠌⠳⠁⠰⠗</nemeth> and <i class="one-letter">s</i> be the smallest integer such that <nemeth class="inline">⠏⠌⠳⠃⠰⠎</nemeth>. The coefficient of <nemeth class="inline">⠭⠘⠗⠬⠎</nemeth> in <nemeth class="inline">⠋⠷⠭⠾⠛⠷⠭⠾</nemeth> is</p>
              <div class="displaymath">
                <nemeth>⠉⠰⠗⠬⠎⠐⠀⠨⠅⠀⠁⠴⠃⠰⠗⠬⠎⠐⠬⠁⠂⠃⠰⠗⠬⠎⠤⠂⠐⠬⠄⠄⠄⠬⠁⠰⠗⠬⠎⠤⠂⠐⠃⠂⠬⠁⠰⠗⠬⠎⠐⠃⠴</nemeth>
              </div>
              <p data-braille="continuation">. Since <i class="one-letter">p</i> divides <nemeth class="inline">⠁⠴⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠗⠤⠂⠐</nemeth> and <nemeth class="inline">⠃⠴⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠎⠤⠂⠐</nemeth>, <i class="one-letter">p</i> divides every term of <nemeth class="inline">⠉⠰⠗⠬⠎</nemeth> except for the term <nemeth class="inline">⠁⠰⠗⠐⠃⠰⠎</nemeth>. However, since <nemeth class="inline">⠏⠳⠉⠰⠗⠬⠎</nemeth>, either <i class="one-letter">p</i> divides <nemeth class="inline">⠁⠰⠗</nemeth> or <i class="one-letter">p</i> divides <nemeth class="inline">⠃⠰⠎</nemeth>. But this is impossible.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="DlS">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.18</span>
                <span class="period">.</span>
              </h6>
              <p id="wyE">Let <i class="one-letter">D</i> be a <abbr class="acronym">UFD</abbr>, and let <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> be in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. Then the content of <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾</nemeth> is equal to the product of the contents of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="WJk">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="iuZ">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠉⠏⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠙⠟⠂⠷⠭⠾</nemeth>, where <i class="one-letter">c</i> and <i class="one-letter">d</i> are the contents of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>, respectively. Then <nemeth class="inline">⠏⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠂⠷⠭⠾</nemeth> are primitive. We can now write <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾⠀⠨⠅⠀⠉⠙⠏⠂⠷⠭⠾⠟⠂⠷⠭⠾</nemeth>. Since <nemeth class="inline">⠏⠂⠷⠭⠾⠟⠂⠷⠭⠾</nemeth> is primitive, the content of <nemeth class="inline">⠏⠷⠭⠾⠟⠷⠭⠾</nemeth> must be <nemeth class="inline">⠉⠙</nemeth>.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="jtb">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.19</span>
                <span class="period">.</span>
              </h6>
              <p id="cFN">Let <i class="one-letter">D</i> be a <abbr class="acronym">UFD</abbr> and <i class="one-letter">F</i> its field of fractions. Suppose that <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠙⠈⠷⠭⠈⠾</nemeth> and <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾⠛⠷⠭⠾</nemeth>, where <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> are in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Then <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠋⠂⠷⠭⠾⠛⠂⠷⠭⠾</nemeth>, where <nemeth class="inline">⠋⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠂⠷⠭⠾</nemeth> are in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. Furthermore, <nemeth class="inline">⠙⠑⠛⠀⠋⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠋⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠙⠑⠛⠀⠛⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠛⠂⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="CQt">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="OCi">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be nonzero elements of <i class="one-letter">D</i> such that <nemeth class="inline">⠁⠋⠷⠭⠾⠠⠀⠃⠛⠷⠭⠾</nemeth> are in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. We can find <nemeth class="inline">⠁⠂⠠⠀⠃⠂⠀⠈⠑⠀⠠⠙</nemeth> such that <nemeth class="inline">⠁⠋⠷⠭⠾⠀⠨⠅⠀⠁⠂⠋⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠃⠛⠷⠭⠾⠀⠨⠅⠀⠃⠂⠛⠂⠷⠭⠾</nemeth>, where <nemeth class="inline">⠋⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠂⠷⠭⠾</nemeth> are primitive polynomials in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. Therefore, <nemeth class="inline">⠁⠃⠏⠷⠭⠾⠀⠨⠅⠀⠷⠁⠂⠋⠂⠷⠭⠾⠾⠷⠃⠂⠛⠂⠷⠭⠾⠾</nemeth>. Since <nemeth class="inline">⠋⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠂⠷⠭⠾</nemeth> are primitive polynomials, it must be the case that <nemeth class="inline">⠁⠃⠳⠁⠂⠃⠂</nemeth> by Gauss's Lemma. Thus there exists a <nemeth class="inline">⠉⠀⠈⠑⠀⠠⠙</nemeth> such that <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠉⠋⠂⠷⠭⠾⠛⠂⠷⠭⠾</nemeth>. Clearly, <nemeth class="inline">⠙⠑⠛⠀⠋⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠋⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠙⠑⠛⠀⠛⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠛⠂⠷⠭⠾</nemeth>.</p>
            </article>
            <p id="oyG">The following corollaries are direct consequences of Lemma 18.2.19.</p>
            <article class="corollary theorem-like" data-braille="theorem-like" id="PAk">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.20</span>
                <span class="period">.</span>
              </h6>
              <p id="NwP">Let <i class="one-letter">D</i> be a <abbr class="acronym">UFD</abbr> and <i class="one-letter">F</i> its field of fractions. A primitive polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth> is irreducible in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> if and only if it is irreducible in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="vHt">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.21</span>
                <span class="period">.</span>
              </h6>
              <p id="tDY">Let <i class="one-letter">D</i> be a <abbr class="acronym">UFD</abbr> and <i class="one-letter">F</i> its field of fractions. If <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a monic polynomial in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth> with <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠋⠷⠭⠾⠛⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠋⠂⠷⠭⠾⠛⠂⠷⠭⠾</nemeth>, where <nemeth class="inline">⠋⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠂⠷⠭⠾</nemeth> are in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. Furthermore, <nemeth class="inline">⠙⠑⠛⠀⠋⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠋⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠙⠑⠛⠀⠛⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠛⠂⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="XeJ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.22</span>
                <span class="period">.</span>
              </h6>
              <p id="LHC">If <i class="one-letter">D</i> is a <abbr class="acronym">UFD</abbr>, then <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth> is a <abbr class="acronym">UFD</abbr>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="lSi">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="uJr">Let <nemeth class="inline">⠏⠷⠭⠾</nemeth> be a nonzero polynomial in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. If <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a constant polynomial, then it must have a unique factorization since <i class="one-letter">D</i> is a <abbr class="acronym">UFD</abbr>. Now suppose that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a polynomial of positive degree in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. Let <i class="one-letter">F</i> be the field of fractions of <i class="one-letter">D</i>, and let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠋⠂⠷⠭⠾⠋⠆⠷⠭⠾⠀⠄⠄⠄⠀⠋⠰⠝⠐⠷⠭⠾</nemeth> by a factorization of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, where each <nemeth class="inline">⠋⠰⠊⠐⠷⠭⠾</nemeth> is irreducible. Choose <nemeth class="inline">⠁⠰⠊⠐⠀⠈⠑⠀⠠⠙</nemeth> such that <nemeth class="inline">⠁⠰⠊⠐⠋⠰⠊⠐⠷⠭⠾</nemeth> is in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. There exist <nemeth class="inline">⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠝⠐⠀⠈⠑⠀⠠⠙</nemeth> such that <nemeth class="inline">⠁⠰⠊⠐⠋⠰⠊⠐⠷⠭⠾⠀⠨⠅⠀⠃⠰⠊⠐⠛⠰⠊⠐⠷⠭⠾</nemeth>, where <nemeth class="inline">⠛⠰⠊⠐⠷⠭⠾</nemeth> is a primitive polynomial in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. By Corollary 18.2.20, each <nemeth class="inline">⠛⠰⠊⠐⠷⠭⠾</nemeth> is irreducible in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. Consequently, we can write</p>
              <div class="displaymath">
                <nemeth>⠁⠂⠀⠄⠄⠄⠀⠁⠰⠝⠐⠏⠷⠭⠾⠀⠨⠅⠀⠃⠂⠀⠄⠄⠄⠀⠃⠰⠝⠐⠛⠂⠷⠭⠾⠀⠄⠄⠄⠀⠛⠰⠝⠐⠷⠭⠾</nemeth>
              </div>
              <p data-braille="continuation">. Let <nemeth class="inline">⠃⠀⠨⠅⠀⠃⠂⠀⠄⠄⠄⠀⠃⠰⠝⠐</nemeth>. Since <nemeth class="inline">⠛⠂⠷⠭⠾⠀⠄⠄⠄⠀⠛⠰⠝⠐⠷⠭⠾</nemeth> is primitive, <nemeth class="inline">⠁⠂⠀⠄⠄⠄⠀⠁⠰⠝⠐</nemeth> divides <i class="one-letter">b</i>. Therefore, <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠁⠛⠂⠷⠭⠾⠀⠄⠄⠄⠀⠛⠰⠝⠐⠷⠭⠾</nemeth>, where <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠙</nemeth>. Since <i class="one-letter">D</i> is a <abbr class="acronym">UFD</abbr>, we can factor <i class="one-letter">a</i> as <nemeth class="inline">⠥⠉⠂⠀⠄⠄⠄⠀⠉⠰⠅⠐</nemeth>, where <i class="one-letter">u</i> is a unit and each of the <nemeth class="inline">⠉⠰⠊</nemeth>'s is irreducible in <i class="one-letter">D</i>.</p>
              <p id="aQA">We will now show the uniqueness of this factorization. Let</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠁⠂⠀⠄⠄⠄⠀⠁⠰⠍⠐⠋⠂⠷⠭⠾⠀⠄⠄⠄⠀⠋⠰⠝⠐⠷⠭⠾⠀⠨⠅⠀⠃⠂⠀⠄⠄⠄⠀⠃⠰⠗⠐⠛⠂⠷⠭⠾⠀⠄⠄⠄⠀⠛⠰⠎⠐⠷⠭⠾</nemeth>
              </div>
              <p data-braille="continuation">be two factorizations of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, where all of the factors are irreducible in <nemeth class="inline">⠠⠙⠈⠷⠭⠈⠾</nemeth>. By Corollary 18.2.20, each of the <nemeth class="inline">⠋⠰⠊</nemeth>'s and <nemeth class="inline">⠛⠰⠊</nemeth>'s is irreducible in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. The <nemeth class="inline">⠁⠰⠊</nemeth>'s and the <nemeth class="inline">⠃⠰⠊</nemeth>'s are units in <i class="one-letter">F</i>. Since <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is a <abbr class="acronym">PID</abbr>, it is a <abbr class="acronym">UFD</abbr>; therefore, <nemeth class="inline">⠝⠀⠨⠅⠀⠎</nemeth>. Now rearrange the <nemeth class="inline">⠛⠰⠊⠐⠷⠭⠾</nemeth>'s so that <nemeth class="inline">⠋⠰⠊⠐⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠰⠊⠐⠷⠭⠾</nemeth> are associates for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝</nemeth>. Then there exist <nemeth class="inline">⠉⠂⠠⠀⠄⠄⠄⠀⠠⠀⠉⠰⠝⠐</nemeth> and <nemeth class="inline">⠙⠂⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠝⠐</nemeth> in <i class="one-letter">D</i> such that <nemeth class="inline">⠷⠉⠰⠊⠐⠸⠌⠙⠰⠊⠐⠾⠋⠰⠊⠐⠷⠭⠾⠀⠨⠅⠀⠛⠰⠊⠐⠷⠭⠾</nemeth> or <nemeth class="inline">⠉⠰⠊⠐⠋⠰⠊⠐⠷⠭⠾⠀⠨⠅⠀⠙⠰⠊⠐⠛⠰⠊⠐⠷⠭⠾</nemeth>. The polynomials <nemeth class="inline">⠋⠰⠊⠐⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠰⠊⠐⠷⠭⠾</nemeth> are primitive; hence, <nemeth class="inline">⠉⠰⠊</nemeth> and <nemeth class="inline">⠙⠰⠊</nemeth> are associates in <i class="one-letter">D</i>. Thus, <nemeth class="inline">⠁⠂⠀⠄⠄⠄⠀⠁⠰⠍⠐⠀⠨⠅⠀⠥⠃⠂⠀⠄⠄⠄⠀⠃⠰⠗⠐</nemeth> in <i class="one-letter">D</i>, where <i class="one-letter">u</i> is a unit in <i class="one-letter">D</i>. Since <i class="one-letter">D</i> is a unique factorization domain, <nemeth class="inline">⠍⠀⠨⠅⠀⠎</nemeth>. Finally, we can reorder the <nemeth class="inline">⠃⠰⠊</nemeth>'s so that <nemeth class="inline">⠁⠰⠊</nemeth> and <nemeth class="inline">⠃⠰⠊</nemeth> are associates for each <i class="one-letter">i</i>. This completes the uniqueness part of the proof.</p>
            </article>
            <p id="UFP">The theorem that we have just proven has several obvious but important corollaries.</p>
            <article class="corollary theorem-like" data-braille="theorem-like" id="bOC">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.23</span>
                <span class="period">.</span>
              </h6>
              <p id="ZLh">Let <i class="one-letter">F</i> be a field. Then <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is a <abbr class="acronym">UFD</abbr>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="HVL">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.24</span>
                <span class="period">.</span>
              </h6>
              <p id="FSq">The ring of polynomials over the integers, <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>, is a <abbr class="acronym">UFD</abbr>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="ocU">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.25</span>
                <span class="period">.</span>
              </h6>
              <p id="lZz">Let <i class="one-letter">D</i> be a <abbr class="acronym">UFD</abbr>. Then <nemeth class="inline">⠠⠙⠈⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠈⠾</nemeth> is a <abbr class="acronym">UFD</abbr>.</p>
            </article>
            <article class="remark remark-like" data-braille="remark-like" id="Arm">
              <h6 class="heading">
                <span class="type">Remark</span>
                <span class="space"> </span>
                <span class="codenumber">18.2.26</span>
                <span class="period">.</span>
              </h6>
              <p id="nOM">It is important to notice that every Euclidean domain is a <abbr class="acronym">PID</abbr> and every <abbr class="acronym">PID</abbr> is a <abbr class="acronym">UFD</abbr>. However, as demonstrated by our examples, the converse of each of these statements fails. There are principal ideal domains that are not Euclidean domains, and there are unique factorization domains that are not principal ideal domains (<nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>).</p>
            </article>
            <article class="paragraphs" id="wMM">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="AMY">Sage supports distinctions between “plain” rings, domains, principal ideal domains and fields. Support is often very good for constructions and computations with PID's, but sometimes problems get significantly harder (computationally) when a ring has less structure that that of a PID. So be aware when using Sage that some questions may go unanswered for rings with less structure.</p>
            </article>
          </section>
          <section class="subsection" id="fOB">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">18.2.4</span> <span class="title">Historical Note</span></div>
            <p id="gUh">Karl Friedrich Gauss,  born in Brunswick, Germany on April 30, 1777, is considered to be one of the greatest mathematicians who ever lived. Gauss was truly a child prodigy. At the age of three he was able to detect errors in the books of his father's business. Gauss entered college at the age of 15. Before the age of 20, Gauss was able to construct a regular <nemeth class="inline">⠼⠂⠶</nemeth>-sided polygon with a ruler and compass. This was the first new construction of a regular <i class="one-letter">n</i>-sided polygon since the time of the ancient Greeks. Gauss succeeded in showing that if <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠼⠆⠘⠆⠘⠘⠝⠐⠬⠂</nemeth> was prime, then it was possible to construct a regular <i class="one-letter">N</i>-sided polygon.</p>
            <p id="Nbq">Gauss obtained his Ph.D. in 1799 under the direction of Pfaff at the University of Helmstedt. In his dissertation he gave the first complete proof of the Fundamental Theorem of Algebra, which states that every polynomial with real coefficients can be factored into linear factors over the complex numbers. The acceptance of complex numbers was brought about by Gauss, who was the first person to use the notation of <i class="one-letter">i</i> for <nemeth class="inline">⠜⠤⠂⠻</nemeth>.</p>
            <p id="tiz">Gauss then turned his attention toward number theory; in 1801, he published his famous book on number theory, <em class="emphasis">Disquisitiones Arithmeticae</em>. Throughout his life Gauss was intrigued with this branch of mathematics. He once wrote, “Mathematics is the queen of the sciences, and the theory of numbers is the queen of mathematics.”</p>
            <p id="ZpI">In 1807, Gauss was appointed director of the Observatory at the University of Göttingen, a position he held until his death. This position required him to study applications of mathematics to the sciences. He succeeded in making contributions to fields such as astronomy, mechanics, optics, geodesy, and magnetism. Along with Wilhelm Weber, he coinvented the first practical electric telegraph some years before a better version was invented by Samuel F. B. Morse.</p>
            <p id="FwR">Gauss was clearly the most prominent mathematician in the world in the early nineteenth century. His status naturally made his discoveries subject to intense scrutiny. Gauss's cold and distant personality many times led him to ignore the work of his contemporaries, making him many enemies. He did not enjoy teaching very much, and young mathematicians who sought him out for encouragement were often rebuffed. Nevertheless, he had many outstanding students, including Eisenstein, Riemann, Kummer, Dirichlet, and Dedekind. Gauss also offered a great deal of encouragement to Sophie Germain (1776–1831), who overcame the many obstacles facing women in her day to become a very prominent mathematician. Gauss died at the age of 78 in Göttingen on February 23, 1855.</p>
          </section>
        </section>
        <section class="reading-questions" id="drU">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">18.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="CZx">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="HJq">Integral domains are an abstraction of which two fundamental rings that we have already studied?</p>
          </article>
          <article class="exercise exercise-like" id="jgG">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="nQz">What are the various types of integral domains defined in this section?</p>
          </article>
          <article class="exercise exercise-like" id="PnP">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="TXI">The field of fractions of a ring abstracts what idea from basic mathematics?</p>
          </article>
          <article class="exercise exercise-like" id="vuY">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="AeR">In the previous chapter we had a theorem about irreducible polynomials generating maximal ideals. Which theorem in this chapter generalizes this previous result?</p>
          </article>
          <article class="exercise exercise-like" id="bCh">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="gma">Describe an example which is a <abbr class="initialism">UFD</abbr>, but not a <abbr class="initialism">PID</abbr>.</p>
          </article>
        </section>
        <section class="exercises" id="kyu">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">18.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="gyv">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="kUg">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠜⠒⠻⠊</nemeth> be in <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth>. If <nemeth class="inline">⠁⠘⠆⠐⠬⠒⠃⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth>, show that <i class="one-letter">z</i> must be a unit. Show that the only units of <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth> are <nemeth class="inline">⠼⠂</nemeth> and <nemeth class="inline">⠤⠼⠂</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="vlU"><span class="type">Hint</span>:<p id="yJq">Note that <nemeth class="inline">⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠼⠂⠸⠌⠷⠁⠬⠃⠜⠒⠻⠊⠾⠀⠨⠅⠀⠷⠁⠤⠃⠜⠒⠻⠊⠾⠸⠌⠷⠁⠘⠆⠐⠬⠒⠃⠘⠆⠐⠾</nemeth> is in <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth> if and only if <nemeth class="inline">⠁⠘⠆⠐⠬⠒⠃⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth>. The only integer solutions to the equation are <nemeth class="inline">⠁⠀⠨⠅⠀⠬⠤⠼⠂⠠⠀⠃⠀⠨⠅⠀⠼⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="MFE">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="Rbp">The Gaussian integers, <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>, are a <abbr class="acronym">UFD</abbr>. Factor each of the following elements in <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth> into a product of irreducibles.</p>
            <ol class="outerlist">
              <li>a. <p id="xpC"><nemeth class="inline">⠼⠢</nemeth></p></li>
              <li>b. <p id="dwL"><nemeth class="inline">⠼⠂⠬⠒⠊</nemeth></p></li>
              <li>c. <p id="JDU"><nemeth class="inline">⠼⠖⠬⠦⠊</nemeth></p></li>
              <li>d. <p id="pLd"><nemeth class="inline">⠼⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="HAm"><span class="type">Hint</span>:<p id="eQz">(a) <nemeth class="inline">⠼⠢⠀⠨⠅⠀⠤⠊⠷⠂⠬⠆⠊⠾⠷⠆⠬⠊⠾</nemeth>; (c) <nemeth class="inline">⠼⠖⠬⠦⠊⠀⠨⠅⠀⠤⠊⠷⠂⠬⠊⠾⠘⠆⠐⠷⠆⠬⠊⠾⠘⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="sMN">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="xiy">Let <i class="one-letter">D</i> be an integral domain.</p>
            <ol class="outerlist">
              <li>a. <p id="uuW">Prove that <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth> is an abelian group under the operation of addition.</p></li>
              <li>b. <p id="aCf">Show that the operation of multiplication is well-defined in the field of fractions, <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>.</p></li>
              <li>c. <p id="GJo">Verify the associative and commutative properties for multiplication in <nemeth class="inline">⠠⠋⠰⠠⠙</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="YTW">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="dpH">Prove or disprove: Any subring of a field <i class="one-letter">F</i> containing <nemeth class="inline">⠼⠂</nemeth> is an integral domain.</p>
            <div class="solutions">
              <div class="hint solution-like" id="zVN"><span class="type">Hint</span>:<p id="KXI">True.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Fbf">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="JwQ">Prove or disprove: If <i class="one-letter">D</i> is an integral domain, then every prime element in <i class="one-letter">D</i> is also irreducible in <i class="one-letter">D</i>.</p>
          </article>
          <article class="exercise exercise-like" id="lio">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="pDZ">Let <i class="one-letter">F</i> be a field of characteristic zero. Prove that <i class="one-letter">F</i> contains a subfield isomorphic to <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Rpx">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="VLi">Let <i class="one-letter">F</i> be a field.</p>
            <ol class="outerlist">
              <li>a. <p id="flY">Prove that the field of fractions of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, denoted by <nemeth class="inline">⠠⠋⠷⠭⠾</nemeth>, is isomorphic to the set all rational expressions <nemeth class="inline">⠏⠷⠭⠾⠸⠌⠟⠷⠭⠾</nemeth>, where <nemeth class="inline">⠟⠷⠭⠾</nemeth> is not the zero polynomial. </p></li>
              <li>b. <p id="Lth">Let <nemeth class="inline">⠏⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾</nemeth> be polynomials in <nemeth class="inline">⠠⠋⠈⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠈⠾</nemeth>. Show that the set of all rational expressions <nemeth class="inline">⠏⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾⠸⠌⠟⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾</nemeth> is isomorphic to the field of fractions of <nemeth class="inline">⠠⠋⠈⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠈⠾</nemeth>. We denote the field of fractions of <nemeth class="inline">⠠⠋⠈⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠈⠾</nemeth> by <nemeth class="inline">⠠⠋⠷⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠾</nemeth>. </p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="xwG">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="BSr">Let <i class="one-letter">p</i> be prime and denote the field of fractions of <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠈⠷⠭⠈⠾</nemeth> by <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠷⠭⠾</nemeth>. Prove that <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠷⠭⠾</nemeth> is an infinite field of characteristic <i class="one-letter">p</i>.</p>
          </article>
          <article class="exercise exercise-like" id="dDP">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="hZA">Prove that the field of fractions of the Gaussian integers, <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>, is</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠟⠷⠊⠾⠀⠨⠅⠀⠨⠷⠏⠬⠟⠊⠒⠀⠏⠠⠀⠟⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <div class="solutions">
              <div class="hint solution-like" id="kMP"><span class="type">Hint</span>:<p id="reR">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠉⠬⠙⠊⠀⠌⠨⠅⠀⠼⠴</nemeth> be in <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>. Prove that <nemeth class="inline">⠵⠸⠌⠺⠀⠈⠑⠀⠸⠠⠟⠷⠊⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="JKY">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="OgJ">A field <i class="one-letter">F</i> is called a <dfn class="terminology">prime field</dfn> if it has no proper subfields. If <i class="one-letter">E</i> is a subfield of <i class="one-letter">F</i> and <i class="one-letter">E</i> is a prime field, then <i class="one-letter">E</i> is a <dfn class="terminology">prime subfield</dfn> of <i class="one-letter">F</i>.</p>
            <ol class="outerlist">
              <li>a. <p id="rAq">Prove that every field contains a unique prime subfield.</p></li>
              <li>b. <p id="XHz">If <i class="one-letter">F</i> is a field of characteristic 0, prove that the prime subfield of <i class="one-letter">F</i> is isomorphic to the field of rational numbers, <nemeth class="inline">⠸⠠⠟</nemeth>.</p></li>
              <li>c. <p id="DOI">If <i class="one-letter">F</i> is a field of characteristic <i class="one-letter">p</i>, prove that the prime subfield of <i class="one-letter">F</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="pSh">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="unS">Let <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠆⠻⠈⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="crs">Prove that <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠆⠻⠈⠾</nemeth> is an integral domain.</p></li>
              <li>b. <p id="IyB">Find all of the units in <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠆⠻⠈⠾</nemeth>.</p></li>
              <li>c. <p id="oFK">Determine the field of fractions of <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠆⠻⠈⠾</nemeth>.</p></li>
              <li>d. <p id="UMT">Prove that <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠆⠻⠊⠈⠾</nemeth> is a Euclidean domain under the Euclidean valuation <nemeth class="inline">⠨⠝⠷⠁⠬⠃⠜⠆⠻⠊⠾⠀⠨⠅⠀⠁⠘⠆⠐⠬⠆⠃⠘⠆</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="VZq">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="avb">Let <i class="one-letter">D</i> be a <abbr class="acronym">UFD</abbr>. An element <nemeth class="inline">⠙⠀⠈⠑⠀⠠⠙</nemeth> is a <dfn class="terminology">greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">D</i></dfn> if <nemeth class="inline">⠙⠳⠁</nemeth> and <nemeth class="inline">⠙⠳⠃</nemeth> and <i class="one-letter">d</i> is divisible by any other element dividing both <i class="one-letter">a</i> and <i class="one-letter">b</i>.</p>
            <ol class="outerlist">
              <li>a. <p id="ZwM">If <i class="one-letter">D</i> is a <abbr class="acronym">PID</abbr> and <i class="one-letter">a</i> and <i class="one-letter">b</i> are both nonzero elements of <i class="one-letter">D</i>, prove there exists a unique greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> up to associates. That is, if <i class="one-letter">d</i> and <nemeth class="inline">⠙⠄</nemeth> are both greatest common divisors of <i class="one-letter">a</i> and <i class="one-letter">b</i>, then <i class="one-letter">d</i> and <nemeth class="inline">⠙⠄</nemeth> are associates. We write <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth> for the greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>.</p></li>
              <li>b. <p id="FDV">Let <i class="one-letter">D</i> be a <abbr class="acronym">PID</abbr> and <i class="one-letter">a</i> and <i class="one-letter">b</i> be nonzero elements of <i class="one-letter">D</i>. Prove that there exist elements <i class="one-letter">s</i> and <i class="one-letter">t</i> in <i class="one-letter">D</i> such that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠁⠎⠬⠃⠞</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Cgz">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="GCk">Let <i class="one-letter">D</i> be an integral domain. Define a relation on <i class="one-letter">D</i> by <nemeth class="inline">⠁⠈⠱⠃</nemeth> if <i class="one-letter">a</i> and <i class="one-letter">b</i> are associates in <i class="one-letter">D</i>. Prove that <nemeth class="inline">⠈⠱</nemeth> is an equivalence relation on <i class="one-letter">D</i>.</p>
          </article>
          <article class="exercise exercise-like" id="inI">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="mJt">Let <i class="one-letter">D</i> be a Euclidean domain with Euclidean valuation <nemeth class="inline">⠨⠝</nemeth>. If <i class="one-letter">u</i> is a unit in <i class="one-letter">D</i>, show that <nemeth class="inline">⠝⠷⠥⠾⠀⠨⠅⠀⠝⠷⠼⠂⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="OuR">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="SQC">Let <i class="one-letter">D</i> be a Euclidean domain with Euclidean valuation <nemeth class="inline">⠨⠝</nemeth>. If <i class="one-letter">a</i> and <i class="one-letter">b</i> are associates in <i class="one-letter">D</i>, prove that <nemeth class="inline">⠝⠷⠁⠾⠀⠨⠅⠀⠝⠷⠃⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="BLa"><span class="type">Hint</span>:<p id="Xma">Let <nemeth class="inline">⠁⠀⠨⠅⠀⠥⠃</nemeth> with <i class="one-letter">u</i> a unit. Then <nemeth class="inline">⠝⠷⠃⠾⠀⠐⠅⠱⠀⠝⠷⠥⠃⠾⠀⠐⠅⠱⠀⠝⠷⠁⠾</nemeth>. Similarly, <nemeth class="inline">⠝⠷⠁⠾⠀⠐⠅⠱⠀⠝⠷⠃⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uCa">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="yXL">Show that <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠢⠻⠊⠈⠾</nemeth> is not a unique factorization domain.</p>
            <div class="solutions">
              <div class="hint solution-like" id="NZs"><span class="type">Hint</span>:<p id="Dtj">Show that 21 can be factored in two different ways.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="aJj">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="feU">Prove or disprove: Every subdomain of a <abbr class="acronym">UFD</abbr> is also a <abbr class="acronym">UFD</abbr>.</p>
          </article>
          <article class="exercise exercise-like" id="GQs">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="Lmd">An ideal of a commutative ring <i class="one-letter">R</i> is said to be <dfn class="terminology">finitely generated</dfn> if there exist elements <nemeth class="inline">⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐</nemeth> in <i class="one-letter">R</i> such that every element <i class="one-letter">r</i> in the ideal can be written as <nemeth class="inline">⠁⠂⠗⠂⠬⠄⠄⠄⠬⠁⠰⠝⠐⠗⠰⠝</nemeth> for some <nemeth class="inline">⠗⠂⠠⠀⠄⠄⠄⠀⠠⠀⠗⠰⠝⠐</nemeth> in <i class="one-letter">R</i>. Prove that <i class="one-letter">R</i> satisfies the ascending chain condition if and only if every ideal of <i class="one-letter">R</i> is finitely generated.</p>
          </article>
          <article class="exercise exercise-like" id="mXB">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="rtm">Let <i class="one-letter">D</i> be an integral domain with a descending chain of ideals <nemeth class="inline">⠠⠊⠂⠀⠸⠨⠂⠀⠠⠊⠆⠀⠸⠨⠂⠀⠠⠊⠒⠀⠸⠨⠂⠀⠄⠄⠄</nemeth>. Suppose that there exists an <i class="one-letter">N</i> such that <nemeth class="inline">⠠⠊⠰⠅⠐⠀⠨⠅⠀⠠⠊⠰⠠⠝</nemeth> for all <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠠⠝</nemeth>. A ring satisfying this condition is said to satisfy the <dfn class="terminology">descending chain condition</dfn>, or <dfn class="terminology">DCC</dfn>. Rings satisfying the DCC are called <dfn class="terminology">Artinian rings</dfn>, after Emil Artin. Show that if <i class="one-letter">D</i> satisfies the descending chain condition, it must satisfy the ascending chain condition.</p>
          </article>
          <article class="exercise exercise-like" id="TeK">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="XAv">Let <i class="one-letter">R</i> be a commutative ring with identity. We define a <dfn class="terminology">multiplicative subset</dfn> of <i class="one-letter">R</i> to be a subset <i class="one-letter">S</i> such that <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠎</nemeth> and <nemeth class="inline">⠁⠃⠀⠈⠑⠀⠠⠎</nemeth> if <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠎</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="lLe">Define a relation <nemeth class="inline">⠈⠱</nemeth> on <nemeth class="inline">⠠⠗⠈⠡⠠⠎</nemeth> by <nemeth class="inline">⠷⠁⠠⠀⠎⠾⠈⠱⠷⠁⠘⠄⠐⠠⠀⠎⠘⠄⠐⠾</nemeth> if there exists an <nemeth class="inline">⠎⠘⠈⠼⠐⠀⠈⠑⠀⠠⠎</nemeth> such that <nemeth class="inline">⠎⠘⠈⠼⠐⠷⠎⠘⠄⠐⠁⠤⠎⠁⠘⠄⠐⠾⠀⠨⠅⠀⠼⠴</nemeth>. Show that <nemeth class="inline">⠈⠱</nemeth> is an equivalence relation on <nemeth class="inline">⠠⠗⠈⠡⠠⠎</nemeth>.</p></li>
              <li>b. <p id="RSn">Let <nemeth class="inline">⠁⠸⠌⠎</nemeth> denote the equivalence class of <nemeth class="inline">⠷⠁⠠⠀⠎⠾⠀⠈⠑⠀⠠⠗⠈⠡⠠⠎</nemeth> and let <nemeth class="inline">⠠⠎⠘⠤⠼⠂⠐⠠⠗</nemeth> be the set of all equivalence classes with respect to <nemeth class="inline">⠈⠱</nemeth>. Define the operations of addition and multiplication on <nemeth class="inline">⠠⠎⠘⠤⠼⠂⠐⠠⠗</nemeth> by</p><div class="displaymath"><nemeth>⠹⠁⠌⠎⠼⠬⠹⠃⠌⠞⠼⠀⠀⠨⠅⠀⠹⠁⠞⠬⠃⠎⠌⠎⠞⠼⠀⠹⠁⠌⠎⠼⠹⠃⠌⠞⠼⠀⠀⠨⠅⠀⠹⠁⠃⠌⠎⠞⠼</nemeth></div><p data-braille="continuation">, respectively. Prove that these operations are well-defined on <nemeth class="inline">⠠⠎⠘⠤⠼⠂⠐⠠⠗</nemeth> and that <nemeth class="inline">⠠⠎⠘⠤⠼⠂⠐⠠⠗</nemeth> is a ring with identity under these operations. The ring <nemeth class="inline">⠠⠎⠘⠤⠼⠂⠐⠠⠗</nemeth> is called the <dfn class="terminology">ring of quotients</dfn> of <i class="one-letter">R</i> with respect to <i class="one-letter">S</i>.</p></li>
              <li>c. <p id="xZw">Show that the map <nemeth class="inline">⠨⠓⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎⠘⠤⠼⠂⠐⠠⠗</nemeth> defined by <nemeth class="inline">⠓⠷⠁⠾⠀⠨⠅⠀⠁⠸⠌⠂</nemeth> is a ring homomorphism.</p></li>
              <li>d. <p id="egF">If <i class="one-letter">R</i> has no zero divisors and <nemeth class="inline">⠼⠴⠀⠌⠈⠑⠀⠠⠎</nemeth>, show that <nemeth class="inline">⠨⠓</nemeth> is one-to-one.</p></li>
              <li>e. <p id="KnO">Prove that <i class="one-letter">P</i> is a prime ideal of <i class="one-letter">R</i> if and only if <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠠⠗⠄⡳⠭⠆⠆⠂⠖⠄⠠⠏</nemeth> is a multiplicative subset of <i class="one-letter">R</i>.</p></li>
              <li>f. <p id="quX">If <i class="one-letter">P</i> is a prime ideal of <i class="one-letter">R</i> and <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠠⠗⠄⡳⠭⠆⠆⠂⠖⠄⠠⠏</nemeth>, show that the ring of quotients <nemeth class="inline">⠠⠎⠘⠤⠼⠂⠐⠠⠗</nemeth> has a unique maximal ideal. Any ring that has a unique maximal ideal is called a <dfn class="terminology">local ring</dfn>.</p></li>
            </ol>
          </article>
        </section>
        <section class="references" id="CJg">
          <div class="none"><span class="type">References</span> <span class="codenumber">18.5</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="iQp"><div class="bibitem">[1]</div>  <div class="bibentry"> Atiyah, M. F.  and MacDonald, I. G. <i>Introduction to Commutative Algebra</i>. Westview Press, Boulder, CO, 1994.</div></article>
          <article class="bib" id="OXy"><div class="bibitem">[2]</div>  <div class="bibentry"> Zariski, O. and Samuel, P. <i>Commutative Algebra</i>, vols. I and II. Springer, New York, 1975, 1960.</div></article>
        </section>
        <section class="section" id="pin">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">18.6</span> <span class="title">Sage</span></div>
          <section class="introduction" id="Bbg">
            <p id="YFO">We have already seen some integral domains and unique factorizations in the previous two chapters. In addition to what we have already seen, Sage has support for some of the topics from this section, but the coverage is limited. Some functions will work for some rings and not others, while some functions are not yet part of Sage. So we will give some examples, but this is far from comprehensive.</p>
          </section>
          <section class="subsection" id="LVK">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">18.6.1</span> <span class="title">Field of Fractions</span></div>
            <p id="lEa">Sage is frequently able to construct a field of fractions, or identify a certain field as the field of fractions. For example, the ring of integers and the field of rational numbers are both implemented in Sage, and the integers “know” that the rationals is it's field of fractions.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q = ZZ.fraction_field(); Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Rational Field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q == QQ
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="RLj">In other cases Sage will construct a fraction field, in the spirit of Lemma 18.1.3. So it is then possible to do basic calculations in the constructed field.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R.&lt;x&gt; = ZZ[]
P = R.fraction_field();P
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Fraction Field of Univariate Polynomial Ring in x over Integer Ring
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">f = P((x^2+3)/(7*x+4))
g = P((4*x^2)/(3*x^2-5*x+4))
h = P((-2*x^3+4*x^2+3)/(x^2+1))
((f+g)/h).numerator()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3*x^6 + 23*x^5 + 32*x^4 + 8*x^3 + 41*x^2 - 15*x + 12
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">((f+g)/h).denominator()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-42*x^6 + 130*x^5 - 108*x^4 + 63*x^3 - 5*x^2 + 24*x + 48
</div>
            </article>
          </section>
          <section class="subsection" id="scT">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">18.6.2</span> <span class="title">Prime Subfields</span></div>
            <p id="xSs">Corollary 18.1.7 says every field of characteristic <i class="one-letter">p</i> has a subfield isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>. For a finite field, the exact nature of this subfield is not a surprise, but Sage will allow us to extract it easily.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;c&gt; = FiniteField(3^5)
F.characteristic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = F.prime_subfield(); G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Finite Field of size 3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[0, 1, 2]
</div>
            </article>
            <p id="dZB">More generally, the fields mentioned in the conclusions of Corollary 18.1.6 and Corollary 18.1.7 are known as the “prime subfield” of the ring containing them. Here is an example of the characteristic zero case.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.&lt;y&gt;=QuadraticField(-7); K
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in y with defining polynomial x^2 + 7
with y = 2.645751311...?*I
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.prime_subfield()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Rational Field
</div>
            </article>
            <p id="KgK">In a rough sense, every characteristic zero field contains a copy of the rational numbers (the fraction field of the integers), which can explain Sage's extensive support for rings and fields that extend the integers and the rationals.</p>
          </section>
          <section class="subsection" id="Ykc">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">18.6.3</span> <span class="title">Integral Domains</span></div>
            <p id="qnT">Sage can determine if some rings are integral domains and we can test products in them. However, notions of units, irreducibles or prime elements are not generally supported (outside of what we have seen for polynomials in the previous chapter). Worse, the construction below creates a ring within a larger field and so some functions (such as <code class="code-inline tex2jax_ignore">.is_unit()</code>) pass through and give misleading results. This is because the construction below creates a ring known as an “order in a number field.”</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.&lt;x&gt; = ZZ[sqrt(-3)]; K
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Order in Number Field in a with defining polynomial x^2 + 3
with a = 0.?e-18 + 1.732050807...?*I
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.is_integral_domain()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.basis()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, a]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(1+x)*(1-x) == 2*2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="Wvc">The following is a bit misleading, since <nemeth class="inline">⠼⠲</nemeth>, as an element of <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth> does not have a multiplicative inverse, though seemingly we can compute one.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">four = K(4)
four.is_unit()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">four^-1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1/4
</div>
            </article>
          </section>
          <section class="subsection" id="Erl">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">18.6.4</span> <span class="title">Principal Ideals</span></div>
            <p id="CCl">When a ring is a principal ideal domain, such as the integers, or polynomials over a field, Sage works well. Beyond that, support begins to weaken.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">T.&lt;x&gt;=ZZ[]
T.is_integral_domain()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">J = T.ideal(5, x); J
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ideal (5, x) of Univariate Polynomial Ring in x over Integer Ring
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q = T.quotient(J); Q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Quotient of Univariate Polynomial Ring in x over
Integer Ring by the ideal (5, x)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">J.is_principal()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
NotImplementedError
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_field()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
NotImplementedError
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="QFD">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">18.7</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="zlT">
            <p id="EMX">There are no Sage exercises for this section.</p>
          </section>
        </section>
      </section>
      <section class="chapter" id="dAp">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">19</span> <span class="title">Lattices and Boolean Algebras</span></div>
        <section class="introduction" id="bZx">
          <p id="dWb">The axioms of a ring give structure to the operations of addition and multiplication on a set. However, we can construct algebraic structures, known as lattices and Boolean algebras, that generalize other types of operations. For example, the important operations on sets are inclusion, union, and intersection. Lattices are generalizations of order relations on algebraic spaces, such as set inclusion in set theory and inequality in the familiar number systems <nemeth class="inline">⠸⠠⠝</nemeth>, <nemeth class="inline">⠸⠠⠵</nemeth>, <nemeth class="inline">⠸⠠⠟</nemeth>, and <nemeth class="inline">⠸⠠⠗</nemeth>. Boolean algebras generalize the operations of intersection and union. Lattices and Boolean algebras have found applications in logic, circuit theory, and probability.</p>
        </section>
        <section class="section" id="Tbk">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">19.1</span> <span class="title">Lattices</span></div>
          <section class="subsection" id="JHy">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">19.1.1</span> <span class="title">Partially Ordered Sets</span></div>
            <p id="sJA">We begin the study of lattices and Boolean algebras by generalizing the idea of inequality. Recall that a <dfn class="terminology">relation</dfn> on a set <i class="one-letter">X</i> is a subset of <nemeth class="inline">⠠⠭⠈⠡⠠⠭</nemeth>. A relation <i class="one-letter">P</i> on <i class="one-letter">X</i> is called a <dfn class="terminology">partial order</dfn>  of <i class="one-letter">X</i> if it satisfies the following axioms.</p>
            <ol class="outerlist">
              <li>1. <p id="biz">The relation is <dfn class="terminology">reflexive</dfn>: <nemeth class="inline">⠷⠁⠠⠀⠁⠾⠀⠈⠑⠀⠠⠏</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠭</nemeth>.</p></li>
              <li>2. <p id="HpI">The relation is <dfn class="terminology">antisymmetric</dfn>: if <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠏</nemeth> and <nemeth class="inline">⠷⠃⠠⠀⠁⠾⠀⠈⠑⠀⠠⠏</nemeth>, then <nemeth class="inline">⠁⠀⠨⠅⠀⠃</nemeth>.</p></li>
              <li>3. <p id="nwR">The relation is <dfn class="terminology">transitive</dfn>: if <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠏</nemeth> and <nemeth class="inline">⠷⠃⠠⠀⠉⠾⠀⠈⠑⠀⠠⠏</nemeth>, then <nemeth class="inline">⠷⠁⠠⠀⠉⠾⠀⠈⠑⠀⠠⠏</nemeth>.</p></li>
            </ol>
            <p data-braille="continuation">We will usually write <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> to mean <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠏</nemeth> unless some symbol is naturally associated with a particular partial order, such as <nemeth class="inline">⠁⠀⠐⠅⠱⠀⠃</nemeth> with integers <i class="one-letter">a</i> and <i class="one-letter">b</i>, or <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠃</nemeth> with sets <i class="one-letter">A</i> and <i class="one-letter">B</i>. A set <i class="one-letter">X</i> together with a partial order <nemeth class="inline">⠀⠨⠐⠅⠱⠀</nemeth> is called a <dfn class="terminology">partially ordered set</dfn>,  or <dfn class="terminology">poset</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="QgE">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="UCp">The set of integers (or rationals or reals) is a poset where <nemeth class="inline">⠁⠀⠐⠅⠱⠀⠃</nemeth> has the usual meaning for two integers <i class="one-letter">a</i> and <i class="one-letter">b</i> in <nemeth class="inline">⠸⠠⠵</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="wnN">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="AJy">Let <i class="one-letter">X</i> be any set. We will define the <dfn class="terminology">power set</dfn>  of <i class="one-letter">X</i> to be the set of all subsets of <i class="one-letter">X</i>. We denote the power set of <i class="one-letter">X</i> by <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>. For example, let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. Then <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth> is  the set of all subsets of the set  <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>:</p>
              <div class="displaymath">
                <nemeth>⠀⠀⠸⠴⠀⠀⠀⠨⠷⠁⠨⠾⠀⠀⠀⠨⠷⠃⠨⠾⠀⠀⠀⠨⠷⠉⠨⠾⠀⠀⠀⠀⠀⠨⠷⠁⠠⠀⠃⠨⠾⠀⠀⠀⠨⠷⠁⠠⠀⠉⠨⠾⠀⠀⠀⠨⠷⠃⠠⠀⠉⠨⠾⠀⠀⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾⠨⠐⠀⠀</nemeth>
              </div>
              <p data-braille="continuation">On any power set of a set <i class="one-letter">X</i>, set inclusion, <nemeth class="inline">⠀⠸⠐⠅⠀</nemeth>, is a partial order. We can represent the order on <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth> schematically by a diagram such as the one in  Figure 19.1.3.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="JHL">
              <div data-braille="image">
                <p>Image: A graph with the set consisting of a, b, c at the top level;  The sets (a, b), (a, c), and (b, c) at the second level; the threee sets consisting of a, b, and c at the third level; and the empty set at the fourth level.</p>
                <p>ID: boolean-order-abc</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">19.1.3<span class="period">.</span></span><span class="space"> </span>Partial order on <nemeth class="inline">⠈⠠⠏⠷⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾⠾</nemeth></figcaption>
            </figure>
            <article class="example example-like" data-braille="example-like" id="cuW">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="gQH">Let <i class="one-letter">G</i> be a group. The set of subgroups of <i class="one-letter">G</i> is a poset, where the partial order is set inclusion.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="ICf">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="MXQ">There can be more than one partial order on a particular set. We can form a partial order on <nemeth class="inline">⠸⠠⠝</nemeth> by <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> if <nemeth class="inline">⠁⠳⠃</nemeth>. The relation is certainly reflexive since <nemeth class="inline">⠁⠳⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠝</nemeth>. If <nemeth class="inline">⠍⠳⠝</nemeth> and <nemeth class="inline">⠝⠳⠍</nemeth>, then <nemeth class="inline">⠍⠀⠨⠅⠀⠝</nemeth>; hence, the relation is also antisymmetric. The relation is transitive, because if <nemeth class="inline">⠍⠳⠝</nemeth> and <nemeth class="inline">⠝⠳⠏</nemeth>, then <nemeth class="inline">⠍⠳⠏</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="oJo">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="teZ">Let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠆⠠⠀⠼⠆⠲⠨⠾</nemeth> be the set of divisors of <nemeth class="inline">⠼⠆⠲</nemeth> with the partial order defined in Example 19.1.5. Figure 19.1.7 shows the partial order on <i class="one-letter">X</i>.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="pOU">
              <div data-braille="image">
                <p>Image: A graph with 24 at the top level,, 8 and 12 at the second level, 4 (connected to 8 and 12) and 6 (connected to 12) at the third level, 2 (connected to 4 and 6) and 3 (connected to 6) at the fourth level, and 1 at the bottom level.</p>
                <p>ID: boolean-order-24</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">19.1.7<span class="period">.</span></span><span class="space"> </span>A partial order on the divisors of <nemeth class="inline">⠼⠆⠲</nemeth></figcaption>
            </figure>
            <p id="YQJ">Let <i class="one-letter">Y</i> be a subset of a poset <i class="one-letter">X</i>. An element <i class="one-letter">u</i> in <i class="one-letter">X</i> is an <dfn class="terminology">upper bound</dfn>  of <i class="one-letter">Y</i> if <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠥</nemeth> for every element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠽</nemeth>. If <i class="one-letter">u</i> is an upper bound of <i class="one-letter">Y</i> such that <nemeth class="inline">⠥⠀⠨⠐⠅⠱⠀⠧</nemeth> for every other upper bound <i class="one-letter">v</i> of <i class="one-letter">Y</i>, then <i class="one-letter">u</i> is called a <dfn class="terminology">least upper bound</dfn>  or <dfn class="terminology">supremum</dfn>  of <i class="one-letter">Y</i>. An element <i class="one-letter">l</i> in <i class="one-letter">X</i> is said to be a <dfn class="terminology">lower bound</dfn>  of <i class="one-letter">Y</i> if <nemeth class="inline">⠇⠀⠨⠐⠅⠱⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠽</nemeth>. If <i class="one-letter">l</i> is a lower bound of <i class="one-letter">Y</i> such that <nemeth class="inline">⠅⠀⠨⠐⠅⠱⠀⠇</nemeth> for every other lower bound <i class="one-letter">k</i> of <i class="one-letter">Y</i>, then <i class="one-letter">l</i> is called a <dfn class="terminology">greatest lower bound</dfn>  or <dfn class="terminology">infimum</dfn>  of <i class="one-letter">Y</i>.</p>
            <article class="example example-like" data-braille="example-like" id="UQx">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.8</span>
                <span class="period">.</span>
              </h6>
              <p id="Zmi">Let <nemeth class="inline">⠠⠽⠀⠨⠅⠀⠨⠷⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠖⠨⠾</nemeth> be contained in the set <i class="one-letter">X</i> of Example 19.1.6. Then <i class="one-letter">Y</i> has upper bounds <nemeth class="inline">⠼⠂⠆</nemeth> and <nemeth class="inline">⠼⠆⠲</nemeth>, with <nemeth class="inline">⠼⠂⠆</nemeth> as a least upper bound. The only lower bound is <nemeth class="inline">⠼⠂</nemeth>; hence, it must be a greatest lower bound.</p>
            </article>
            <p id="EXS">As it turns out, least upper bounds and greatest lower bounds are unique if they exist.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="rDU">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="GyK">Let <i class="one-letter">Y</i> be a nonempty subset of a poset <i class="one-letter">X</i>. If <i class="one-letter">Y</i> has a least upper bound, then <i class="one-letter">Y</i> has a unique least upper bound. If <i class="one-letter">Y</i> has a greatest lower bound, then <i class="one-letter">Y</i> has a unique greatest lower bound.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ACh">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="PiC">Let <nemeth class="inline">⠥⠂</nemeth> and <nemeth class="inline">⠥⠆</nemeth> be least upper bounds for <i class="one-letter">Y</i>. By the definition of the least upper bound, <nemeth class="inline">⠥⠂⠀⠨⠐⠅⠱⠀⠥</nemeth> for all upper bounds <i class="one-letter">u</i> of <i class="one-letter">Y</i>. In particular, <nemeth class="inline">⠥⠂⠀⠨⠐⠅⠱⠀⠥⠆</nemeth>. Similarly, <nemeth class="inline">⠥⠆⠀⠨⠐⠅⠱⠀⠥⠂</nemeth>. Therefore, <nemeth class="inline">⠥⠂⠀⠨⠅⠀⠥⠆</nemeth> by antisymmetry. A similar argument show that the greatest lower bound is unique.</p>
            </article>
            <p id="lfb">On many posets it is possible to define binary operations by using the greatest lower bound and the least upper bound of two elements. A <dfn class="terminology">lattice</dfn> is a poset <i class="one-letter">L</i> such that every pair of elements in <i class="one-letter">L</i> has a least upper bound and a greatest lower bound. The least upper bound of <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠇</nemeth> is called the <dfn class="terminology">join</dfn>  of <i class="one-letter">a</i> and <i class="one-letter">b</i> and is denoted by <nemeth class="inline">⠁⠈⠬⠃</nemeth>.  The greatest lower bound of <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠇</nemeth> is called the <dfn class="terminology">meet</dfn>  of <i class="one-letter">a</i> and <i class="one-letter">b</i> and is denoted by <nemeth class="inline">⠁⠈⠩⠃</nemeth>. </p>
            <article class="example example-like" data-braille="example-like" id="AXG">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="Ftr">Let <i class="one-letter">X</i> be a set. Then the power set of <i class="one-letter">X</i>, <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>, is a lattice. For two sets <i class="one-letter">A</i> and <i class="one-letter">B</i> in <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>, the least upper bound of <i class="one-letter">A</i> and <i class="one-letter">B</i> is <nemeth class="inline">⠠⠁⠨⠬⠠⠃</nemeth>. Certainly <nemeth class="inline">⠠⠁⠨⠬⠠⠃</nemeth> is an upper bound of <i class="one-letter">A</i> and <i class="one-letter">B</i>, since <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠁⠨⠬⠠⠃</nemeth> and <nemeth class="inline">⠠⠃⠀⠸⠐⠅⠀⠠⠁⠨⠬⠠⠃</nemeth>. If <i class="one-letter">C</i> is some other set containing both <i class="one-letter">A</i> and <i class="one-letter">B</i>, then <i class="one-letter">C</i> must contain <nemeth class="inline">⠠⠁⠨⠬⠠⠃</nemeth>; hence, <nemeth class="inline">⠠⠁⠨⠬⠠⠃</nemeth> is the least upper bound of <i class="one-letter">A</i> and <i class="one-letter">B</i>. Similarly, the greatest lower bound of <i class="one-letter">A</i> and <i class="one-letter">B</i> is <nemeth class="inline">⠠⠁⠨⠩⠠⠃</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="heP">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="lAA">Let <i class="one-letter">G</i> be a group and suppose that <i class="one-letter">X</i> is the set of subgroups of <i class="one-letter">G</i>. Then <i class="one-letter">X</i> is a poset ordered by set-theoretic inclusion, <nemeth class="inline">⠀⠸⠐⠅⠀</nemeth>. The set of subgroups of <i class="one-letter">G</i> is also a lattice. If <i class="one-letter">H</i> and <i class="one-letter">K</i> are subgroups of <i class="one-letter">G</i>, the greatest lower bound of <i class="one-letter">H</i> and <i class="one-letter">K</i> is <nemeth class="inline">⠠⠓⠨⠩⠠⠅</nemeth>. The set <nemeth class="inline">⠠⠓⠨⠬⠠⠅</nemeth> may not be a subgroup of <i class="one-letter">G</i>. We leave it as an exercise to show that the least upper bound of <i class="one-letter">H</i> and <i class="one-letter">K</i> is the subgroup generated by <nemeth class="inline">⠠⠓⠨⠬⠠⠅</nemeth>.</p>
            </article>
            <p id="Rmk">In set theory we have certain duality conditions. For example, by De Morgan's laws, any statement about sets that is true about <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠄</nemeth> must also be true about <nemeth class="inline">⠠⠁⠘⠄⠐⠨⠩⠠⠃⠄</nemeth>. We also have a duality principle for lattices.</p>
            <article class="axiom theorem-like" data-braille="theorem-like" id="jZv">
              <h6 class="heading">
                <span class="type">Axiom</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.12</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Principle of Duality.</span>
              </h6>
              <p id="ovg">Any statement that is true for all lattices remains true when <nemeth class="inline">⠀⠨⠐⠅⠱⠀</nemeth> is replaced by <nemeth class="inline">⠀⠨⠨⠐⠱⠀</nemeth> and <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth> are interchanged throughout the statement.</p>
            </article>
            <p id="xtt">The following theorem tells us that a lattice is an algebraic structure with two binary operations that satisfy certain axioms.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="XLd">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.13</span>
                <span class="period">.</span>
              </h6>
              <p id="mFT">If <i class="one-letter">L</i> is a lattice, then the binary operations <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth> satisfy the following properties for <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠇</nemeth>.</p>
              <ol class="outerlist">
                <li>1. <p id="TEa">Commutative laws: <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃⠈⠬⠁</nemeth> and <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠃⠈⠩⠁</nemeth>.</p></li>
                <li>2. <p id="zLj">Associative laws: <nemeth class="inline">⠁⠈⠬⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth> and <nemeth class="inline">⠁⠈⠩⠷⠃⠈⠩⠉⠾⠀⠨⠅⠀⠷⠁⠈⠩⠃⠾⠈⠩⠉</nemeth>.</p></li>
                <li>3. <p id="fSs">Idempotent laws: <nemeth class="inline">⠁⠈⠬⠁⠀⠨⠅⠀⠁</nemeth> and <nemeth class="inline">⠁⠈⠩⠁⠀⠨⠅⠀⠁</nemeth>.</p></li>
                <li>4. <p id="LZB">Absorption laws: <nemeth class="inline">⠁⠈⠬⠷⠁⠈⠩⠃⠾⠀⠨⠅⠀⠁</nemeth> and <nemeth class="inline">⠁⠈⠩⠷⠁⠈⠬⠃⠾⠀⠨⠅⠀⠁</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="gJq">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="vpL">By the Principle of Duality, we need only prove the first statement in each part.</p>
              <p id="bwU">(1) By definition <nemeth class="inline">⠁⠈⠬⠃</nemeth> is the least upper bound of <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠨⠾</nemeth>, and <nemeth class="inline">⠃⠈⠬⠁</nemeth> is the least upper bound of <nemeth class="inline">⠨⠷⠃⠠⠀⠁⠨⠾</nemeth>; however, <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠨⠾⠀⠨⠅⠀⠨⠷⠃⠠⠀⠁⠨⠾</nemeth>.</p>
              <p id="HEd">(2) We will show that <nemeth class="inline">⠁⠈⠬⠷⠃⠈⠬⠉⠾</nemeth> and <nemeth class="inline">⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth> are both least upper bounds of <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. Let <nemeth class="inline">⠙⠀⠨⠅⠀⠁⠈⠬⠃</nemeth>. Then <nemeth class="inline">⠉⠀⠨⠐⠅⠱⠀⠙⠈⠬⠉⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth>. We also know that</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠐⠅⠱⠀⠁⠈⠬⠃⠀⠨⠅⠀⠙⠀⠨⠐⠅⠱⠀⠙⠈⠬⠉⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth>
              </div>
              <p data-braille="continuation">. A similar argument demonstrates that <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth>. Therefore, <nemeth class="inline">⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth> is an upper bound of <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. We now need to show that <nemeth class="inline">⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth> is the least upper bound of <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. Let <i class="one-letter">u</i> be some other upper bound of <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. Then <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠥</nemeth> and <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠥</nemeth>; hence, <nemeth class="inline">⠙⠀⠨⠅⠀⠁⠈⠬⠃⠀⠨⠐⠅⠱⠀⠥</nemeth>. Since <nemeth class="inline">⠉⠀⠨⠐⠅⠱⠀⠥</nemeth>, it follows that <nemeth class="inline">⠷⠁⠈⠬⠃⠾⠈⠬⠉⠀⠨⠅⠀⠙⠈⠬⠉⠀⠨⠐⠅⠱⠀⠥</nemeth>. Therefore, <nemeth class="inline">⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth> must be the least upper  bound of <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. The argument that shows  <nemeth class="inline">⠁⠈⠬⠷⠃⠈⠬⠉⠾</nemeth> is the least upper bound of <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth> is the same. Consequently, <nemeth class="inline">⠁⠈⠬⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth>.</p>
              <p id="nLm">(3) The join of <i class="one-letter">a</i> and <i class="one-letter">a</i> is the least upper bound of <nemeth class="inline">⠨⠷⠁⠨⠾</nemeth>; hence, <nemeth class="inline">⠁⠈⠬⠁⠀⠨⠅⠀⠁</nemeth>.</p>
              <p id="TSv">(4) Let <nemeth class="inline">⠙⠀⠨⠅⠀⠁⠈⠩⠃</nemeth>. Then <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠁⠈⠬⠙</nemeth>. On the other hand, <nemeth class="inline">⠙⠀⠨⠅⠀⠁⠈⠩⠃⠀⠨⠐⠅⠱⠀⠁</nemeth>, and so <nemeth class="inline">⠁⠈⠬⠙⠀⠨⠐⠅⠱⠀⠁</nemeth>. Therefore, <nemeth class="inline">⠁⠈⠬⠷⠁⠈⠩⠃⠾⠀⠨⠅⠀⠁</nemeth>.</p>
            </article>
            <p id="dAC">Given any arbitrary set <i class="one-letter">L</i> with operations <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth>, satisfying the conditions of the previous theorem, it is natural to ask whether or not this set comes from some lattice. The following theorem says that this is always the case.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="DSm">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">19.1.14</span>
                <span class="period">.</span>
              </h6>
              <p id="SNc">Let <i class="one-letter">L</i> be a nonempty set with two binary operations <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth> satisfying the commutative, associative, idempotent, and absorption laws. We can define a partial order on <i class="one-letter">L</i> by <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> if <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃</nemeth>. Furthermore, <i class="one-letter">L</i> is a lattice with respect to <nemeth class="inline">⠀⠨⠐⠅⠱⠀</nemeth> if for all <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠇</nemeth>, we define the least upper bound and greatest lower bound of <i class="one-letter">a</i> and <i class="one-letter">b</i> by <nemeth class="inline">⠁⠈⠬⠃</nemeth> and <nemeth class="inline">⠁⠈⠩⠃</nemeth>, respectively.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="MQz">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="zZE">We first show that <i class="one-letter">L</i> is a poset under <nemeth class="inline">⠀⠨⠐⠅⠱⠀</nemeth>. Since <nemeth class="inline">⠁⠈⠬⠁⠀⠨⠅⠀⠁</nemeth>, <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠁</nemeth> and <nemeth class="inline">⠀⠨⠐⠅⠱⠀</nemeth> is reflexive. To show that <nemeth class="inline">⠀⠨⠐⠅⠱⠀</nemeth> is antisymmetric, let <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> and <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠁</nemeth>. Then <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃</nemeth> and <nemeth class="inline">⠃⠈⠬⠁⠀⠨⠅⠀⠁</nemeth>.By the commutative law, <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠈⠬⠃⠀⠨⠅⠀⠃⠈⠬⠁⠀⠨⠅⠀⠁</nemeth>. Finally, we must show that <nemeth class="inline">⠀⠨⠐⠅⠱⠀</nemeth> is transitive. Let <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> and <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠉</nemeth>. Then <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃</nemeth> and <nemeth class="inline">⠃⠈⠬⠉⠀⠨⠅⠀⠉</nemeth>. Thus,</p>
              <div class="displaymath">
                <nemeth>⠁⠈⠬⠉⠀⠨⠅⠀⠁⠈⠬⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠬⠉⠀⠨⠅⠀⠃⠈⠬⠉⠀⠨⠅⠀⠉</nemeth>
              </div>
              <p data-braille="continuation">, or <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠉</nemeth>.</p>
              <p id="ggN">To show that <i class="one-letter">L</i> is a lattice, we must prove that <nemeth class="inline">⠁⠈⠬⠃</nemeth> and <nemeth class="inline">⠁⠈⠩⠃</nemeth> are, respectively, the least upper and greatest lower bounds of <i class="one-letter">a</i> and <i class="one-letter">b</i>. Since <nemeth class="inline">⠁⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠩⠁⠀⠨⠅⠀⠁⠈⠩⠷⠁⠈⠬⠃⠾</nemeth>, it follows that <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠁⠈⠬⠃</nemeth>. Similarly, <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠁⠈⠬⠃</nemeth>. Therefore, <nemeth class="inline">⠁⠈⠬⠃</nemeth> is an upper bound for <i class="one-letter">a</i> and <i class="one-letter">b</i>. Let <i class="one-letter">u</i> be any other upper bound of both <i class="one-letter">a</i> and <i class="one-letter">b</i>. Then <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠥</nemeth> and <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠥</nemeth>. But <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠐⠅⠱⠀⠥</nemeth> since</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠈⠬⠃⠾⠈⠬⠥⠀⠨⠅⠀⠁⠈⠬⠷⠃⠈⠬⠥⠾⠀⠨⠅⠀⠁⠈⠬⠥⠀⠨⠅⠀⠥</nemeth>
              </div>
              <p data-braille="continuation">. The proof that <nemeth class="inline">⠁⠈⠩⠃</nemeth> is the greatest lower bound of <i class="one-letter">a</i> and <i class="one-letter">b</i> is left as an exercise.</p>
            </article>
          </section>
        </section>
        <section class="section" id="zit">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">19.2</span> <span class="title">Boolean Algebras</span></div>
          <section class="introduction" id="IgG">
            <p id="Kdk">Let us investigate the example of the power set, <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>, of a set <i class="one-letter">X</i> more closely. The power set is a lattice that is ordered by inclusion. By the definition of the power set, the largest element in <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth> is <i class="one-letter">X</i> itself and the smallest element is <nemeth class="inline">⠸⠴</nemeth>, the empty set. For any set <i class="one-letter">A</i> in <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>, we know that <nemeth class="inline">⠠⠁⠨⠩⠠⠭⠀⠨⠅⠀⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠬⠸⠴⠀⠨⠅⠀⠠⠁</nemeth>. This suggests the following definition for lattices. An element <i class="one-letter">I</i> in a poset <i class="one-letter">X</i> is a <dfn class="terminology">largest element</dfn> if <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠠⠊</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠭</nemeth>.  An element <i class="one-letter">O</i> is a <dfn class="terminology">smallest element</dfn> of <i class="one-letter">X</i> if <nemeth class="inline">⠠⠕⠀⠨⠐⠅⠱⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠭</nemeth>. </p>
            <p id="qkt">Let <i class="one-letter">A</i> be in <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>. Recall that the complement of <i class="one-letter">A</i> is</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠘⠄⠐⠀⠨⠅⠀⠠⠭⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠭⠁⠝⠙⠭⠀⠌⠈⠑⠀⠠⠁⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. We know that <nemeth class="inline">⠠⠁⠨⠬⠠⠁⠘⠄⠐⠀⠨⠅⠀⠠⠭</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠠⠁⠘⠄⠐⠀⠨⠅⠀⠸⠴</nemeth>. We can generalize this example for lattices. A lattice <i class="one-letter">L</i> with a largest element <i class="one-letter">I</i> and a smallest element <i class="one-letter">O</i> is <dfn class="terminology">complemented</dfn>  if for each <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠇</nemeth>, there exists an <nemeth class="inline">⠁⠄</nemeth> such that <nemeth class="inline">⠁⠈⠬⠁⠘⠄⠐⠀⠨⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠁⠈⠩⠁⠘⠄⠐⠀⠨⠅⠀⠠⠕</nemeth>. </p>
            <p id="WrC">In a lattice <i class="one-letter">L</i>, the binary operations <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth> satisfy commutative and associative laws; however, they need not satisfy the distributive law</p>
            <div class="displaymath">
              <nemeth>⠁⠈⠩⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠩⠃⠾⠈⠬⠷⠁⠈⠩⠉⠾⠆</nemeth>
            </div>
            <p data-braille="continuation">however, in <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth> the distributive law is satisfied since</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠨⠩⠠⠉⠾</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠠⠁⠠⠀⠠⠃⠠⠀⠠⠉⠀⠈⠑⠀⠈⠠⠏⠷⠠⠭⠾</nemeth>. We will say that a lattice <i class="one-letter">L</i> is <dfn class="terminology">distributive</dfn> if the following distributive law holds:</p>
            <div class="displaymath">
              <nemeth>⠁⠈⠩⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠩⠃⠾⠈⠬⠷⠁⠈⠩⠉⠾</nemeth>
            </div>
            <p data-braille="continuation">for all <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠇</nemeth>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="riv">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="yUl">A lattice <i class="one-letter">L</i> is distributive if and only if</p>
              <div class="displaymath">
                <nemeth>⠁⠈⠬⠷⠃⠈⠩⠉⠾⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠉⠾</nemeth>
              </div>
              <p data-braille="continuation">for all <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠇</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="sXI">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="MnW">Let us assume that <i class="one-letter">L</i> is a distributive lattice.</p>
              <div class="displaymath">
                <nemeth>⠁⠈⠬⠷⠃⠈⠩⠉⠾⠀⠀⠨⠅⠀⠈⠷⠁⠈⠬⠷⠁⠈⠩⠉⠾⠈⠾⠈⠬⠷⠃⠈⠩⠉⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠬⠈⠷⠷⠁⠈⠩⠉⠾⠈⠬⠷⠃⠈⠩⠉⠾⠈⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠬⠈⠷⠷⠉⠈⠩⠁⠾⠈⠬⠷⠉⠈⠩⠃⠾⠈⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠬⠈⠷⠉⠈⠩⠷⠁⠈⠬⠃⠾⠈⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠬⠈⠷⠷⠁⠈⠬⠃⠾⠈⠩⠉⠈⠾⠀⠀⠀⠀⠨⠅⠀⠈⠷⠷⠁⠈⠬⠃⠾⠈⠩⠁⠈⠾⠈⠬⠈⠷⠷⠁⠈⠬⠃⠾⠈⠩⠉⠈⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠉⠾</nemeth>
              </div>
              <p data-braille="continuation">. The converse follows directly from the Duality Principle.</p>
            </article>
            <p id="CyL">A <dfn class="terminology">Boolean algebra</dfn> is a lattice <i class="one-letter">B</i> with a greatest element <i class="one-letter">I</i> and a smallest element <i class="one-letter">O</i> such that <i class="one-letter">B</i> is both distributive and complemented. The power set of <i class="one-letter">X</i>, <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>, is our prototype for a Boolean algebra. As it turns out, it is also one of the most important Boolean algebras. The following theorem allows us to characterize Boolean algebras in terms of the binary relations <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth> without mention of the fact that a Boolean algebra is a poset.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="XpE">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="fbu">A set <i class="one-letter">B</i> is a Boolean algebra if and only if there exist binary operations <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth> on <i class="one-letter">B</i> satisfying the following axioms.</p>
              <ol class="outerlist">
                <li>1. <p id="sgK"><nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃⠈⠬⠁</nemeth> and <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠃⠈⠩⠁</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠃</nemeth>.</p></li>
                <li>2. <p id="YnT"><nemeth class="inline">⠁⠈⠬⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠬⠉</nemeth> and <nemeth class="inline">⠁⠈⠩⠷⠃⠈⠩⠉⠾⠀⠨⠅⠀⠷⠁⠈⠩⠃⠾⠈⠩⠉</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠃</nemeth>.</p></li>
                <li>3. <p id="Evc"><nemeth class="inline">⠁⠈⠩⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠩⠃⠾⠈⠬⠷⠁⠈⠩⠉⠾</nemeth> and <nemeth class="inline">⠁⠈⠬⠷⠃⠈⠩⠉⠾⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠉⠾</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠃</nemeth>.</p></li>
                <li>4. <p id="kCl">There exist elements <i class="one-letter">I</i> and <i class="one-letter">O</i> such that <nemeth class="inline">⠁⠈⠬⠠⠕⠀⠨⠅⠀⠁</nemeth> and <nemeth class="inline">⠁⠈⠩⠠⠊⠀⠨⠅⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>.</p></li>
                <li>5. <p id="QJu">For every <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth> there exists an <nemeth class="inline">⠁⠘⠄⠐⠀⠈⠑⠀⠠⠃</nemeth> such that <nemeth class="inline">⠁⠈⠬⠁⠘⠄⠐⠀⠨⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠁⠈⠩⠁⠘⠄⠐⠀⠨⠅⠀⠠⠕</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZeR">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="svf">Let <i class="one-letter">B</i> be a set satisfying (1)–(5) in the theorem. One of the idempotent laws is satisfied since</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠀⠨⠅⠀⠁⠈⠬⠠⠕⠀⠀⠀⠀⠨⠅⠀⠁⠈⠬⠷⠁⠈⠩⠁⠘⠄⠐⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠈⠬⠁⠾⠈⠩⠷⠁⠈⠬⠁⠘⠄⠐⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠈⠬⠁⠾⠈⠩⠠⠊⠀⠀⠀⠀⠨⠅⠀⠁⠈⠬⠁</nemeth>
              </div>
              <p data-braille="continuation">. Observe that</p>
              <div class="displaymath">
                <nemeth>⠠⠊⠈⠬⠃⠀⠨⠅⠀⠷⠃⠈⠬⠃⠘⠄⠐⠾⠈⠬⠃⠀⠨⠅⠀⠷⠃⠘⠄⠐⠈⠬⠃⠾⠈⠬⠃⠀⠨⠅⠀⠃⠘⠄⠐⠈⠬⠷⠃⠈⠬⠃⠾⠀⠨⠅⠀⠃⠘⠄⠐⠈⠬⠃⠀⠨⠅⠀⠠⠊</nemeth>
              </div>
              <p data-braille="continuation">. Consequently, the first of the two absorption laws holds, since</p>
              <div class="displaymath">
                <nemeth>⠁⠈⠬⠷⠁⠈⠩⠃⠾⠀⠀⠨⠅⠀⠷⠁⠈⠩⠠⠊⠾⠈⠬⠷⠁⠈⠩⠃⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠩⠷⠠⠊⠈⠬⠃⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠩⠠⠊⠀⠀⠀⠀⠨⠅⠀⠁</nemeth>
              </div>
              <p data-braille="continuation">. The other idempotent and absorption laws are proven similarly. Since <i class="one-letter">B</i> also satisfies (1)–(3), the conditions of Theorem 19.1.14 are met; therefore, <i class="one-letter">B</i> must be a lattice. Condition (4) tells us that <i class="one-letter">B</i> is a distributive lattice.</p>
              <p id="YCo">For <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>, <nemeth class="inline">⠠⠕⠈⠬⠁⠀⠨⠅⠀⠁</nemeth>; hence, <nemeth class="inline">⠠⠕⠀⠨⠐⠅⠱⠀⠁</nemeth> and <i class="one-letter">O</i> is the smallest element in <i class="one-letter">B</i>. To show that <i class="one-letter">I</i> is the largest element in <i class="one-letter">B</i>, we will first show that <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃</nemeth> is equivalent to <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠁</nemeth>. Since <nemeth class="inline">⠁⠈⠬⠠⠊⠀⠨⠅⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>, using the absorption laws we can determine that</p>
              <div class="displaymath">
                <nemeth>⠁⠈⠬⠠⠊⠀⠨⠅⠀⠷⠁⠈⠩⠠⠊⠾⠈⠬⠠⠊⠀⠨⠅⠀⠠⠊⠈⠬⠷⠠⠊⠈⠩⠁⠾⠀⠨⠅⠀⠠⠊</nemeth>
              </div>
              <p data-braille="continuation">or <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠠⠊</nemeth> for all <i class="one-letter">a</i> in <i class="one-letter">B</i>. Finally, since we know that <i class="one-letter">B</i> is complemented by (5), <i class="one-letter">B</i> must be a Boolean algebra.</p>
              <p id="EJx">Conversely, suppose that <i class="one-letter">B</i> is a Boolean algebra. Let <i class="one-letter">I</i> and <i class="one-letter">O</i> be the greatest and least elements in <i class="one-letter">B</i>, respectively. If we define <nemeth class="inline">⠁⠈⠬⠃</nemeth> and <nemeth class="inline">⠁⠈⠩⠃</nemeth> as least upper and greatest lower bounds of <nemeth class="inline">⠨⠷⠁⠠⠀⠃⠨⠾</nemeth>, then <i class="one-letter">B</i> is a Boolean algebra by Theorem 19.1.14, Theorem 19.2.1, and our hypothesis.</p>
            </article>
            <p id="iFU">Many other identities hold in Boolean algebras. Some of these identities are listed in the following theorem.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="DwN">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="LiD">Let <i class="one-letter">B</i> be a Boolean algebra. Then</p>
              <ol class="outerlist">
                <li>1. <p id="wQD"><nemeth class="inline">⠁⠈⠬⠠⠊⠀⠨⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠁⠈⠩⠠⠕⠀⠨⠅⠀⠠⠕</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>.</p></li>
                <li>2. <p id="cXM">If <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠁⠈⠬⠉</nemeth> and <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠁⠈⠩⠉</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠃</nemeth>, then <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth>.</p></li>
                <li>3. <p id="JeV">If <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠠⠕</nemeth>, then <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠄</nemeth>.</p></li>
                <li>4. <p id="pme"><nemeth class="inline">⠷⠁⠘⠄⠐⠾⠘⠄⠐⠀⠨⠅⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>.</p></li>
                <li>5. <p id="Vtn"><nemeth class="inline">⠠⠊⠘⠄⠐⠀⠨⠅⠀⠠⠕</nemeth> and <nemeth class="inline">⠠⠕⠘⠄⠐⠀⠨⠅⠀⠠⠊</nemeth>.</p></li>
                <li>6. <p id="BAw"><nemeth class="inline">⠷⠁⠈⠬⠃⠾⠘⠄⠐⠀⠨⠅⠀⠁⠘⠄⠐⠈⠩⠃⠄</nemeth> and <nemeth class="inline">⠷⠁⠈⠩⠃⠾⠘⠄⠐⠀⠨⠅⠀⠁⠘⠄⠐⠈⠬⠃⠄</nemeth> (De Morgan's Laws). </p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Fma">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="kQG">We will prove only (2). The rest of the identities are left as exercises. For <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠁⠈⠬⠉</nemeth> and <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠁⠈⠩⠉</nemeth>, we have</p>
              <div class="displaymath">
                <nemeth>⠃⠀⠀⠨⠅⠀⠃⠈⠬⠷⠃⠈⠩⠁⠾⠀⠀⠀⠀⠨⠅⠀⠃⠈⠬⠷⠁⠈⠩⠃⠾⠀⠀⠀⠀⠨⠅⠀⠃⠈⠬⠷⠁⠈⠩⠉⠾⠀⠀⠀⠀⠨⠅⠀⠷⠃⠈⠬⠁⠾⠈⠩⠷⠃⠈⠬⠉⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠩⠷⠃⠈⠬⠉⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠈⠬⠉⠾⠈⠩⠷⠃⠈⠬⠉⠾⠀⠀⠀⠀⠨⠅⠀⠷⠉⠈⠬⠁⠾⠈⠩⠷⠉⠈⠬⠃⠾⠀⠀⠀⠀⠨⠅⠀⠉⠈⠬⠷⠁⠈⠩⠃⠾⠀⠀⠀⠀⠨⠅⠀⠉⠈⠬⠷⠁⠈⠩⠉⠾⠀⠀⠀⠀⠨⠅⠀⠉⠈⠬⠷⠉⠈⠩⠁⠾⠀⠀⠀⠀⠨⠅⠀⠉</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="pOH">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">19.2.1</span> <span class="title">Finite Boolean Algebras</span></div>
            <p id="VWd">A Boolean algebra is a <dfn class="terminology">finite Boolean algebra</dfn> if it contains a finite number of elements as a set. Finite Boolean algebras are particularly nice since we can classify them up to isomorphism.</p>
            <p id="Cdm">Let <i class="one-letter">B</i> and <i class="one-letter">C</i> be Boolean algebras. A bijective map <nemeth class="inline">⠨⠋⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> is an <dfn class="terminology">isomorphism</dfn> of Boolean algebras  if</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠈⠬⠃⠾⠀⠀⠨⠅⠀⠋⠷⠁⠾⠈⠬⠋⠷⠃⠾⠀⠋⠷⠁⠈⠩⠃⠾⠀⠀⠨⠅⠀⠋⠷⠁⠾⠈⠩⠋⠷⠃⠾</nemeth>
            </div>
            <p data-braille="continuation">for all <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">B</i>.</p>
            <p id="ikv">We will show that any finite Boolean algebra is isomorphic to the Boolean algebra obtained by taking the power set of some finite set <i class="one-letter">X</i>. We will need a few lemmas and definitions before we prove this result. Let <i class="one-letter">B</i> be a finite Boolean algebra. An element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth> is an <dfn class="terminology">atom</dfn>  of <i class="one-letter">B</i> if <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠠⠕</nemeth> and <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠁</nemeth> for all <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> with <nemeth class="inline">⠃⠀⠌⠨⠅⠀⠠⠕</nemeth>. Equivalently, <i class="one-letter">a</i> is an atom of <i class="one-letter">B</i> if there is no <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> with <nemeth class="inline">⠃⠀⠌⠨⠅⠀⠠⠕</nemeth> distinct from <i class="one-letter">a</i> such that <nemeth class="inline">⠠⠕⠀⠨⠐⠅⠱⠀⠃⠀⠨⠐⠅⠱⠀⠁</nemeth>.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="tth">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="DEe">Let <i class="one-letter">B</i> be a finite Boolean algebra. If <i class="one-letter">b</i> is a element of <i class="one-letter">B</i> with <nemeth class="inline">⠃⠀⠌⠨⠅⠀⠠⠕</nemeth>, then there is an atom <i class="one-letter">a</i> in <i class="one-letter">B</i> such that <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="RAs">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="QXP">If <i class="one-letter">b</i> is an atom, let <nemeth class="inline">⠁⠀⠨⠅⠀⠃</nemeth>. Otherwise, choose an element <nemeth class="inline">⠃⠂</nemeth>, not equal to <i class="one-letter">O</i> or <i class="one-letter">b</i>, such that <nemeth class="inline">⠃⠂⠀⠨⠐⠅⠱⠀⠃</nemeth>. We are guaranteed that this is possible since <i class="one-letter">b</i> is not an atom. If <nemeth class="inline">⠃⠂</nemeth> is an atom, then we are done. If not, choose <nemeth class="inline">⠃⠆</nemeth>, not equal to <i class="one-letter">O</i> or <nemeth class="inline">⠃⠂</nemeth>, such that  <nemeth class="inline">⠃⠆⠀⠨⠐⠅⠱⠀⠃⠂</nemeth>. Again, if <nemeth class="inline">⠃⠆</nemeth> is an atom, let <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠆</nemeth>. Continuing this process, we can obtain a chain</p>
              <div class="displaymath">
                <nemeth>⠠⠕⠀⠨⠐⠅⠱⠀⠄⠄⠄⠀⠨⠐⠅⠱⠀⠃⠒⠀⠨⠐⠅⠱⠀⠃⠆⠀⠨⠐⠅⠱⠀⠃⠂⠀⠨⠐⠅⠱⠀⠃</nemeth>
              </div>
              <p data-braille="continuation">. Since <i class="one-letter">B</i> is a finite Boolean algebra, this chain must be finite. That is, for some <i class="one-letter">k</i>, <nemeth class="inline">⠃⠰⠅</nemeth> is an atom. Let <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠰⠅</nemeth>.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="ZAq">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="jLn">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be atoms in a finite Boolean algebra <i class="one-letter">B</i> such that <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠃</nemeth>. Then <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠠⠕</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="xHB">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="xeY">Since <nemeth class="inline">⠁⠈⠩⠃</nemeth> is the greatest lower bound of <i class="one-letter">a</i> and <i class="one-letter">b</i>, we know that <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠐⠅⠱⠀⠁</nemeth>. Hence, either <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠁</nemeth> or <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠠⠕</nemeth>. However, if <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠁</nemeth>, then either <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> or <nemeth class="inline">⠁⠀⠨⠅⠀⠠⠕</nemeth>. In either case we have a contradiction because <i class="one-letter">a</i> and <i class="one-letter">b</i> are both atoms; therefore, <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠠⠕</nemeth>.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="FHz">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="PSw">Let <i class="one-letter">B</i> be a Boolean algebra and <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠃</nemeth>. The following statements are equivalent.</p>
              <ol class="outerlist">
                <li>1. <p id="hHF"><nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth>.</p></li>
                <li>2. <p id="NOO"><nemeth class="inline">⠁⠈⠩⠃⠘⠄⠐⠀⠨⠅⠀⠠⠕</nemeth>.</p></li>
                <li>3. <p id="tVX"><nemeth class="inline">⠁⠘⠄⠐⠈⠬⠃⠀⠨⠅⠀⠠⠊</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="dOK">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="dmh">(1) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (2). If <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth>, then <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠁⠈⠩⠃⠄⠀⠀⠨⠅⠀⠁⠈⠩⠷⠁⠈⠬⠃⠾⠘⠄⠐⠀⠀⠀⠀⠨⠅⠀⠁⠈⠩⠷⠁⠘⠄⠐⠈⠩⠃⠘⠄⠐⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠈⠩⠁⠘⠄⠐⠾⠈⠩⠃⠘⠄⠐⠀⠀⠀⠀⠨⠅⠀⠠⠕⠈⠩⠃⠘⠄⠐⠀⠀⠀⠀⠨⠅⠀⠠⠕</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="Jtq">(2) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (3). If <nemeth class="inline">⠁⠈⠩⠃⠘⠄⠐⠀⠨⠅⠀⠠⠕</nemeth>, then <nemeth class="inline">⠁⠘⠄⠐⠈⠬⠃⠀⠨⠅⠀⠷⠁⠈⠩⠃⠘⠄⠐⠾⠘⠄⠐⠀⠨⠅⠀⠠⠕⠘⠄⠐⠀⠨⠅⠀⠠⠊</nemeth>.</p>
              <p id="pAz">(3) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (1). If <nemeth class="inline">⠁⠘⠄⠐⠈⠬⠃⠀⠨⠅⠀⠠⠊</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠀⠨⠅⠀⠁⠈⠩⠷⠁⠘⠄⠐⠈⠬⠃⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠈⠩⠁⠘⠄⠐⠾⠈⠬⠷⠁⠈⠩⠃⠾⠀⠀⠀⠀⠨⠅⠀⠠⠕⠈⠬⠷⠁⠈⠩⠃⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠩⠃</nemeth>
              </div>
              <p data-braille="continuation">. Thus, <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth>.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="lOI">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="vZF">Let <i class="one-letter">B</i> be a Boolean algebra and <i class="one-letter">b</i> and <i class="one-letter">c</i> be elements in <i class="one-letter">B</i> such that <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀̸⠉</nemeth>. Then there exists an atom <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth> such that <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> and <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀̸⠉</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="JVT">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="VHI">By Lemma 19.2.6, <nemeth class="inline">⠃⠈⠩⠉⠘⠄⠐⠀⠌⠨⠅⠀⠠⠕</nemeth>. Hence, there exists an atom <i class="one-letter">a</i> such that <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃⠈⠩⠉⠄</nemeth>. Consequently, <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> and <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀̸⠉</nemeth>.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="RVR">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="cgO">Let <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> and <nemeth class="inline">⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐</nemeth> be the atoms of <i class="one-letter">B</i> such that <nemeth class="inline">⠁⠰⠊⠐⠀⠨⠐⠅⠱⠀⠃</nemeth>. Then <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝</nemeth>. Furthermore, if <nemeth class="inline">⠁⠠⠀⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐</nemeth> are atoms of <i class="one-letter">B</i> such that <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth>, <nemeth class="inline">⠁⠰⠊⠐⠀⠨⠐⠅⠱⠀⠃</nemeth>, and <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠈⠬⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝</nemeth>, then <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠰⠊</nemeth> for some <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="qdc">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="BOR">Let <nemeth class="inline">⠃⠂⠀⠨⠅⠀⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝</nemeth>. Since <nemeth class="inline">⠁⠰⠊⠐⠀⠨⠐⠅⠱⠀⠃</nemeth> for each <i class="one-letter">i</i>, we know that <nemeth class="inline">⠃⠂⠀⠨⠐⠅⠱⠀⠃</nemeth>. If we can show that <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠃⠂</nemeth>, then the lemma is true by antisymmetry. Assume <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀̸⠃⠂</nemeth>. Then there exists an atom <i class="one-letter">a</i> such that <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> and <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀̸⠃⠂</nemeth>. Since <i class="one-letter">a</i> is an atom and <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth>, we can deduce that <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠰⠊</nemeth> for some <nemeth class="inline">⠁⠰⠊</nemeth>. However, this is impossible since <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃⠂</nemeth>. Therefore, <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠃⠂</nemeth>.</p>
              <p id="hWa">Now suppose that <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝</nemeth>. If <i class="one-letter">a</i> is an atom less than <i class="one-letter">b</i>,</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠁⠈⠩⠃⠀⠨⠅⠀⠁⠈⠩⠷⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝⠐⠾⠀⠨⠅⠀⠷⠁⠈⠩⠁⠂⠾⠈⠬⠄⠄⠄⠈⠬⠷⠁⠈⠩⠁⠰⠝⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. But each term is <i class="one-letter">O</i> or <i class="one-letter">a</i> with <nemeth class="inline">⠁⠈⠩⠁⠰⠊</nemeth> occurring for only one <nemeth class="inline">⠁⠰⠊</nemeth>. Hence, by Lemma 19.2.5, <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠰⠊</nemeth> for some <i class="one-letter">i</i>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="NlY">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="rpM">Let <i class="one-letter">B</i> be a finite Boolean algebra. Then there exists a set <i class="one-letter">X</i> such that <i class="one-letter">B</i> is isomorphic to <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ltj">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Odj">We will show that <i class="one-letter">B</i> is isomorphic to <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>, where <i class="one-letter">X</i> is the set of atoms of <i class="one-letter">B</i>. Let <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>. By Lemma 19.2.8, we can write <i class="one-letter">a</i> uniquely as <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝</nemeth> for <nemeth class="inline">⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠀⠈⠑⠀⠠⠭</nemeth>. Consequently, we can define a  map <nemeth class="inline">⠨⠋⠒⠀⠠⠃⠀⠫⠕⠀⠈⠠⠏⠷⠠⠭⠾</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠁⠾⠀⠨⠅⠀⠋⠷⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝⠐⠾⠀⠨⠅⠀⠨⠷⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Clearly, <nemeth class="inline">⠨⠋</nemeth> is onto.</p>
              <p id="uks">Now let <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝</nemeth> and <nemeth class="inline">⠃⠀⠨⠅⠀⠃⠂⠈⠬⠄⠄⠄⠈⠬⠃⠰⠍</nemeth> be elements in <i class="one-letter">B</i>, where each <nemeth class="inline">⠁⠰⠊</nemeth> and each <nemeth class="inline">⠃⠰⠊</nemeth> is an atom. If <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠋⠷⠃⠾</nemeth>, then <nemeth class="inline">⠨⠷⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠨⠾⠀⠨⠅⠀⠨⠷⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠍⠐⠨⠾</nemeth> and <nemeth class="inline">⠁⠀⠨⠅⠀⠃</nemeth>. Consequently, <nemeth class="inline">⠨⠋</nemeth> is injective.</p>
              <p id="arB">The join of <i class="one-letter">a</i> and <i class="one-letter">b</i> is preserved by <nemeth class="inline">⠨⠋</nemeth> since</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠁⠈⠬⠃⠾⠀⠀⠨⠅⠀⠋⠷⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝⠐⠈⠬⠃⠂⠈⠬⠄⠄⠄⠈⠬⠃⠰⠍⠐⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠠⠀⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠍⠐⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠨⠾⠨⠬⠨⠷⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠍⠐⠨⠾⠀⠀⠀⠀⠨⠅⠀⠋⠷⠁⠂⠈⠬⠄⠄⠄⠈⠬⠁⠰⠝⠐⠾⠨⠬⠋⠷⠃⠂⠈⠩⠄⠄⠄⠈⠬⠃⠰⠍⠐⠾⠀⠀⠀⠀⠨⠅⠀⠋⠷⠁⠾⠨⠬⠋⠷⠃⠾</nemeth>
              </div>
              <p data-braille="continuation">. Similarly, <nemeth class="inline">⠋⠷⠁⠈⠩⠃⠾⠀⠨⠅⠀⠋⠷⠁⠾⠨⠩⠋⠷⠃⠾</nemeth>.</p>
            </article>
            <p id="OrE">We leave the proof of the following corollary as an exercise.</p>
            <article class="corollary theorem-like" data-braille="theorem-like" id="yda">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">19.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="InX">The order of any finite Boolean algebra must be <nemeth class="inline">⠼⠆⠘⠝</nemeth> for some positive integer <i class="one-letter">n</i>.</p>
            </article>
          </section>
        </section>
        <section class="section" id="fpC">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">19.3</span> <span class="title">The Algebra of Electrical Circuits</span></div>
          <section class="introduction" id="onP">
            <p id="ONd">The usefulness of Boolean algebras has become increasingly apparent over the past several decades with the development of the modern computer. The circuit design of computer chips can be expressed in terms of Boolean algebras. In this section we will develop the Boolean algebra of electrical circuits and switches; however, these results can easily be generalized to the design of integrated computer circuitry.</p>
            <p id="uUm">A <dfn class="terminology">switch</dfn> is a device, located at some point in an electrical circuit, that controls the flow of current through the circuit. Each switch has two possible states: it can be <dfn class="terminology">open</dfn>,  and not allow the passage of current through the circuit, or a it can be <dfn class="terminology">closed</dfn>,  and allow the passage of current. These states are mutually exclusive. We require that every switch be in one state or the other—a switch cannot be open and closed at the same time. Also, if one switch is always in the same state as another, we will denote both by the same letter; that is, two switches that are both labeled with the same letter <i class="one-letter">a</i> will always be open at the same time and closed at the same time.</p>
            <p id="bbv">Given two switches, we can construct two fundamental types of circuits. Two switches <i class="one-letter">a</i> and <i class="one-letter">b</i> are in <dfn class="terminology">series</dfn>  if they make up a circuit of the type that is illustrated in Figure 19.3.1. Current can pass between the terminals <i class="one-letter">A</i> and <i class="one-letter">B</i> in a series circuit only if both of the switches <i class="one-letter">a</i> and <i class="one-letter">b</i> are closed. We will denote this combination of switches by <nemeth class="inline">⠁⠈⠩⠃</nemeth>. Two switches <i class="one-letter">a</i> and <i class="one-letter">b</i> are in <dfn class="terminology">parallel</dfn>  if they form a circuit of the type that appears in Figure 19.3.2. In the case of a parallel circuit, current can pass between <i class="one-letter">A</i> and <i class="one-letter">B</i> if either one of the switches is closed. We denote a parallel combination of circuits <i class="one-letter">a</i> and <i class="one-letter">b</i> by <nemeth class="inline">⠁⠈⠬⠃</nemeth>.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="fLo">
              <div data-braille="image">
                <p>Image: A graph with a path from left to right that connect A, a, b, and B in that order.</p>
                <p>ID: boolean-wedge</p>
              </div>
              <figcaption>
                <span class="type">Figure</span>
                <span class="space"> </span>
                <span class="codenumber">19.3.1<span class="period">.</span></span>
                <span class="space"> </span>
                <nemeth class="inline">⠁⠈⠩⠃</nemeth>
              </figcaption>
            </figure>
            <figure class="figure figure-like" data-braille="figure-like" id="LSx">
              <div data-braille="image">
                <p>Image: A graph from left ot right that has two paths.  Starting on the left A goes to a on the top path and a goes to B.  The second path starts on the left at A and then goes to b on the bottom path and b goes to B.</p>
                <p>ID: boolean-parallel</p>
              </div>
              <figcaption>
                <span class="type">Figure</span>
                <span class="space"> </span>
                <span class="codenumber">19.3.2<span class="period">.</span></span>
                <span class="space"> </span>
                <nemeth class="inline">⠁⠈⠬⠃</nemeth>
              </figcaption>
            </figure>
            <p id="HiE">We can build more complicated electrical circuits out of series and parallel circuits by replacing any switch in the circuit with one of these two fundamental types of circuits. Circuits constructed in this manner are called <dfn class="terminology">series-parallel circuits</dfn>. </p>
            <p id="npN">We will consider two circuits equivalent if they act the same. That is, if we set the switches in equivalent circuits exactly the same we will obtain the same result. For example, in a series circuit <nemeth class="inline">⠁⠈⠩⠃</nemeth> is exactly the same as <nemeth class="inline">⠃⠈⠩⠁</nemeth>. Notice that this is exactly the commutative law for Boolean algebras. In fact, the set of all series-parallel circuits forms a Boolean algebra under the operations of <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth>. We can use diagrams to verify the different axioms of a Boolean algebra. The distributive law, <nemeth class="inline">⠁⠈⠩⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠩⠃⠾⠈⠬⠷⠁⠈⠩⠉⠾</nemeth>, is illustrated in Figure 19.3.3. If <i class="one-letter">a</i> is a switch, then <nemeth class="inline">⠁⠄</nemeth> is the switch that is always open when <i class="one-letter">a</i> is closed and always closed when <i class="one-letter">a</i> is open. A circuit that is always closed is <i class="one-letter">I</i> in our algebra; a circuit that is always open is <i class="one-letter">O</i>. The laws for <nemeth class="inline">⠁⠈⠩⠁⠘⠄⠐⠀⠨⠅⠀⠠⠕</nemeth> and <nemeth class="inline">⠁⠈⠬⠁⠘⠄⠐⠀⠨⠅⠀⠠⠊</nemeth> are shown in Figure 19.3.4.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="rZG">
              <div data-braille="image">
                <p>Image: Two graphs.  The graph on the left has two paths. a goes to b on the top path and a goes to c on the bottom path, after which the two paths rejoin. The graph on the right also has two paths.  A single path splits to two paths. On the top path a goes to b.  On the bottom path a goes to c.  Then the two paths rejoin.</p>
                <p>ID: boolean-distributive</p>
              </div>
              <figcaption>
                <span class="type">Figure</span>
                <span class="space"> </span>
                <span class="codenumber">19.3.3<span class="period">.</span></span>
                <span class="space"> </span>
                <nemeth class="inline">⠁⠈⠩⠷⠃⠈⠬⠉⠾⠀⠨⠅⠀⠷⠁⠈⠩⠃⠾⠈⠬⠷⠁⠈⠩⠉⠾</nemeth>
              </figcaption>
            </figure>
            <figure class="figure figure-like" data-braille="figure-like" id="YgP">
              <div data-braille="image">
                <p>Image: Two graphs:  In the lefthand graph,  a is goes to to a'.  The righthand graph splits into two paths.  The top path is a and the bottom path is a' after which the paths rejoin.</p>
                <p>ID: boolean-one-zero</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">19.3.4<span class="period">.</span></span><span class="space"> </span><nemeth class="inline">⠁⠈⠩⠁⠘⠄⠐⠀⠨⠅⠀⠠⠕</nemeth> and <nemeth class="inline">⠁⠈⠬⠁⠘⠄⠐⠀⠨⠅⠀⠠⠊</nemeth></figcaption>
            </figure>
            <article class="example example-like" data-braille="example-like" id="PLf">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.3.5</span>
                <span class="period">.</span>
              </h6>
              <p id="RHJ">Every Boolean expression represents a switching circuit. For example, given the expression <nemeth class="inline">⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠃⠘⠄⠐⠾⠈⠩⠷⠁⠈⠬⠃⠾</nemeth>, we can construct the circuit in Figure 19.3.8.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="jDW">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">19.3.6</span>
                <span class="period">.</span>
              </h6>
              <p id="XwV">The set of all circuits is a Boolean algebra.</p>
            </article>
            <p id="TwW">We leave as an exercise the proof of this theorem for the Boolean algebra axioms not yet verified. We can now apply the techniques of Boolean algebras to switching theory.</p>
            <article class="example example-like" data-braille="example-like" id="vSo">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">19.3.7</span>
                <span class="period">.</span>
              </h6>
              <p id="xOS">Given a complex circuit, we can now apply the techniques of Boolean algebra to reduce it to a simpler one. Consider the circuit in  Figure 19.3.8. Since</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠃⠘⠄⠐⠾⠈⠩⠷⠁⠈⠬⠃⠾⠀⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠃⠘⠄⠐⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠃⠘⠄⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠬⠷⠃⠈⠩⠃⠘⠄⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠈⠬⠠⠕⠀⠀⠀⠀⠨⠅⠀⠁</nemeth>
              </div>
              <p data-braille="continuation">, we can replace the more complicated circuit with a circuit containing the single switch <i class="one-letter">a</i> and achieve the same function.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="EnY">
              <div data-braille="image">
                <p>Image: A graph from left to right that splits into a top path a and bottom path b and then rejoins.  The graph continues and splits into a top  path a and a bottom path b', rejoins and splits into two paths, a and b, and finally rejoins.</p>
                <p>ID: boolean-switching</p>
              </div>
              <figcaption>
                <span class="type">Figure</span>
                <span class="space"> </span>
                <span class="codenumber">19.3.8<span class="period">.</span></span>
                <span class="space"> </span>
                <nemeth class="inline">⠷⠁⠈⠬⠃⠾⠈⠩⠷⠁⠈⠬⠃⠘⠄⠐⠾⠈⠩⠷⠁⠈⠬⠃⠾</nemeth>
              </figcaption>
            </figure>
            <article class="paragraphs" id="mUb">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="zEf">Sage has a full suite of functionality for both posets and lattices, all as part of its excellent support for combinatorics. There is little in this chapter that cannot be investigated with Sage.</p>
            </article>
          </section>
          <section class="subsection" id="VVQ">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">19.3.1</span> <span class="title">Historical Note</span></div>
            <p id="uyN">George Boole  (1815–1864) was the first person to study lattices. In 1847, he published <em class="emphasis">The Investigation of the Laws of Thought</em>, a book in which he used lattices to formalize logic and the calculus of propositions. Boole believed that mathematics was the study of form rather than of content; that is, he was not so much concerned with what he was calculating as with how he was calculating it. Boole's work was carried on by his friend Augustus De Morgan  (1806–1871). De Morgan observed that the principle of duality often held in set theory, as is illustrated by De Morgan's laws for set theory. He believed, as did Boole, that mathematics was the study of symbols and abstract operations.</p>
            <p id="aFW">Set theory and logic were further advanced by such mathematicians as Alfred North Whitehead  (1861–1947), Bertrand Russell  (1872–1970), and David Hilbert  (1862–1943). In <em class="emphasis">Principia Mathematica</em>, Whitehead and Russell attempted to show the connection between mathematics and logic by the deduction of the natural number system from the rules of formal logic. If the natural numbers could be determined from logic itself, then so could much of the rest of existing mathematics. Hilbert attempted to build up mathematics by using symbolic logic in a way that would prove the consistency of mathematics. His approach was dealt a mortal blow by Kurt Gödel  (1906–1978), who proved that there will always be “undecidable” problems in any sufficiently rich axiomatic system; that is, that in any mathematical system of any consequence, there will always be statements that can never be proven either true or false.</p>
            <p id="GNf">As often occurs, this basic research in pure mathematics later became indispensable in a wide variety of applications. Boolean algebras and logic have become essential in the design of the large-scale integrated circuitry found on today's computer chips. Sociologists have used lattices and Boolean algebras to model social hierarchies; biologists have used them to describe biosystems.</p>
          </section>
        </section>
        <section class="reading-questions" id="nQZ">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">19.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="LuU">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="QeN">Describe succinctly what a poset is. Do not just list the defining properties, but give a description that another student of algebra who has never seen a poset might understand. For example, part of your answer might include what type of common algebraic topics a poset generalizes, and your answer should be short on symbols.</p>
          </article>
          <article class="exercise exercise-like" id="rCd">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="wlW">How does a lattice differ from a poset? Answer this in the spirit of the previous question.</p>
          </article>
          <article class="exercise exercise-like" id="XJm">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="ctf">How does a Boolean algebra differ from a lattice? Again, answer this in the spirit of the previous two questions.</p>
          </article>
          <article class="exercise exercise-like" id="DQv">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="IAo">Give two (perhaps related) reasons why any discussion of finite Boolean algebras might center on the example of the power set of a finite set.</p>
          </article>
          <article class="exercise exercise-like" id="jXE">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="oHx">Describe a major innovation of the middle twentieth century made possible by Boolean algebra.</p>
          </article>
        </section>
        <section class="exercises" id="uyA">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">19.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="bpD">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="QCq">Draw the lattice diagram for the power set of <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠠⠀⠙⠨⠾</nemeth> with the set inclusion relation, <nemeth class="inline">⠀⠸⠐⠅⠀</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="HwM">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="wJz">Draw the diagram for the set of positive integers that are divisors of <nemeth class="inline">⠼⠒⠴</nemeth>. Is this poset a Boolean algebra?</p>
            <div class="solutions">
              <div class="hint solution-like" id="iyD"><span class="type">Hint</span>:<div class="sidebyside"><div class="sbsrow" style="margin-left:30%;margin-right:30%;"><div class="sbspanel" style="width:100%;justify-content:flex-start;"><div data-braille="image"><p>Image: A graph with 30 at the top level which is connected to 10 and 15 at the second level.  The third level has 2, which is connected to 30 and 10, and 5, which is connected to 10 and 15, and 3 which is connected to 15.  The bottom level is 1 which is connected to 2, 3, and 5.</p><p>ID: hint-divisors-30</p></div></div></div></div></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="nDV">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="cQI">Draw a diagram of the lattice of subgroups of <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="TLe">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="IXR">Let <i class="one-letter">B</i> be the set of positive integers that are divisors of <nemeth class="inline">⠼⠆⠂⠴</nemeth>. Define an order on <i class="one-letter">B</i> by <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> if <nemeth class="inline">⠁⠳⠃</nemeth>. Prove that <i class="one-letter">B</i> is a Boolean algebra. Find a set <i class="one-letter">X</i> such that <i class="one-letter">B</i> is isomorphic to <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="hint-170"><span class="type">Hint</span>:<p id="p-3095">What are the atoms of <i class="one-letter">B</i>?</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="zSn">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="pfa">Prove or disprove: <nemeth class="inline">⠸⠠⠵</nemeth> is a poset under the relation <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> if <nemeth class="inline">⠁⠳⠃</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Hbn"><span class="type">Hint</span>:<p id="Sdi">False.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="fZw">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="Vmj">Draw the switching circuit for each of the following Boolean expressions.</p>
            <ol class="outerlist">
              <li>a. <p id="adg"><nemeth class="inline">⠷⠁⠈⠬⠃⠈⠬⠁⠘⠄⠐⠾⠈⠩⠁</nemeth></p></li>
              <li>b. <p id="Gkp"><nemeth class="inline">⠷⠁⠈⠬⠃⠾⠘⠄⠐⠈⠩⠷⠁⠈⠬⠃⠾</nemeth></p></li>
              <li>c. <p id="mry"><nemeth class="inline">⠁⠈⠬⠷⠁⠈⠩⠃⠾</nemeth></p></li>
              <li>d. <p id="SyH"><nemeth class="inline">⠷⠉⠈⠬⠁⠈⠬⠃⠾⠈⠩⠉⠘⠄⠐⠈⠩⠷⠁⠈⠬⠃⠾⠄</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="TpF"><span class="type">Hint</span>:<p id="ykr">(a) <nemeth class="inline">⠷⠁⠈⠬⠃⠈⠬⠁⠘⠄⠐⠾⠈⠩⠁</nemeth></p><div class="sidebyside"><div class="sbsrow" style="margin-left:25%;margin-right:25%;"><div class="sbspanel" style="width:100%;justify-content:flex-start;"><div data-braille="image"><p>Image: A graph from left to right which splits into three paths, a b, and b' and then rejoins into a single path and goes through a.</p><p>ID: hint-switching-circuit-part-a</p></div></div></div></div><p id="erA">(c) <nemeth class="inline">⠁⠈⠬⠷⠁⠈⠩⠃⠾</nemeth></p><div class="sidebyside"><div class="sbsrow" style="margin-left:25%;margin-right:25%;"><div class="sbspanel" style="width:100%;justify-content:flex-start;"><div data-braille="image"><p>Image: A graph from left to right which splits into two paths and then rejoins.  The top path is a then b.  The bottom path is a.</p><p>ID: hint-switching-circuit-part-c</p></div></div></div></div></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="MgF">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="Bts">Draw a circuit that will be closed exactly when only one of three switches <i class="one-letter">a</i>, <i class="one-letter">b</i>, and <i class="one-letter">c</i> are closed.</p>
          </article>
          <article class="exercise exercise-like" id="snO">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="hAB">Prove or disprove that the two circuits shown are equivalent.</p>
            <div class="sidebyside">
              <div class="sbsrow" style="margin-left:10%;margin-right:10%;">
                <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                  <div data-braille="image">
                    <p>Image: Two graphs.  The graph on the left splits into three paths, a-b-c, a'-b, and a-c', and then rejoins.  The graph on the right splits into two paths, a-b and a-c', and then rejoins.</p>
                    <p>ID: exercise-equivalent-circuits</p>
                  </div>
                </div>
              </div>
            </div>
            <div class="solutions">
              <div class="hint solution-like" id="LLg"><span class="type">Hint</span>:<p id="KyJ">Not equivalent.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="YuX">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="NHK">Let <i class="one-letter">X</i> be a finite set containing <i class="one-letter">n</i> elements. Prove that <nemeth class="inline">⠳⠈⠠⠏⠷⠠⠭⠾⠳⠀⠨⠅⠀⠼⠆⠘⠝</nemeth>. Conclude that the order of any finite Boolean algebra must be <nemeth class="inline">⠼⠆⠘⠝</nemeth> for some <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ECg">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="tOT">For each of the following circuits, write a Boolean expression. If the circuit can be replaced by one with fewer switches, give the Boolean expression and draw a diagram for the new circuit.</p>
            <div class="sidebyside">
              <div class="sbsrow" style="margin-left:25%;margin-right:25%;">
                <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                  <div data-braille="image">
                    <p>Image: Three graphs.  The top graph from left to right is a', then splits into a top path a-b' and a on the bottom and then rejoins.  The middle graph from left to right splits into two paths with a on the top path and b on the bottom path.  The graph then rejoins and splits into three paths with the top path a-b, the middle path a', and the bottom path a'-b.  The graph then rejoins.  The bottom graph splits into three paths with top path a-b-c, middle path a'-b'-c, and the bottom path a-b'-c'.  The paths then rejoin.</p>
                    <p>ID: exercise-boolean-circuit</p>
                  </div>
                </div>
              </div>
            </div>
            <div class="solutions">
              <div class="hint solution-like" id="EgH"><span class="type">Hint</span>:<p id="qFS">(a) <nemeth class="inline">⠁⠘⠄⠐⠈⠩⠈⠷⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠃⠈⠾⠀⠨⠅⠀⠁⠈⠩⠷⠁⠈⠬⠃⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="kJp">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="ZWc">Prove or disprove: The set of all nonzero integers is a lattice, where <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> is defined by <nemeth class="inline">⠁⠳⠃</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="QQy">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="Gdl">Let <i class="one-letter">L</i> be a nonempty set with two binary operations <nemeth class="inline">⠈⠬</nemeth> and <nemeth class="inline">⠈⠩</nemeth> satisfying the commutative, associative, idempotent, and absorption laws. We can define a partial order on <i class="one-letter">L</i>, as in Theorem 19.1.14, by <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> if <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃</nemeth>. Prove that the greatest lower bound of <i class="one-letter">a</i> and <i class="one-letter">b</i> is <nemeth class="inline">⠁⠈⠩⠃</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="wXH">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="mku">Let <i class="one-letter">G</i> be a group and <i class="one-letter">X</i> be the set of subgroups of <i class="one-letter">G</i> ordered by set-theoretic inclusion. If <i class="one-letter">H</i> and <i class="one-letter">K</i> are subgroups of <i class="one-letter">G</i>, show that the least upper bound of <i class="one-letter">H</i> and <i class="one-letter">K</i> is the subgroup generated by <nemeth class="inline">⠠⠓⠨⠬⠠⠅</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="deQ">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="SrD">Let <i class="one-letter">R</i> be a ring and suppose that <i class="one-letter">X</i> is the set of ideals of <i class="one-letter">R</i>. Show that <i class="one-letter">X</i> is a poset ordered by set-theoretic inclusion, <nemeth class="inline">⠀⠸⠐⠅⠀</nemeth>. Define the meet of two ideals <i class="one-letter">I</i> and <i class="one-letter">J</i> in <i class="one-letter">X</i> by <nemeth class="inline">⠠⠊⠨⠩⠠⠚</nemeth> and the join of <i class="one-letter">I</i> and <i class="one-letter">J</i> by <nemeth class="inline">⠠⠊⠬⠠⠚</nemeth>. Prove that the set of ideals of <i class="one-letter">R</i> is a lattice under these operations.</p>
            <div class="solutions">
              <div class="hint solution-like" id="IQA"><span class="type">Hint</span>:<p id="WNb">Let <nemeth class="inline">⠠⠊⠠⠀⠠⠚</nemeth> be ideals in <i class="one-letter">R</i>. We need to show that <nemeth class="inline">⠠⠊⠬⠠⠚⠀⠨⠅⠀⠨⠷⠗⠬⠎⠒⠀⠗⠀⠈⠑⠀⠠⠊⠁⠝⠙⠎⠀⠈⠑⠀⠠⠚⠨⠾</nemeth> is the smallest ideal in <i class="one-letter">R</i> containing both <i class="one-letter">I</i> and <i class="one-letter">J</i>. If <nemeth class="inline">⠗⠂⠠⠀⠗⠆⠀⠈⠑⠀⠠⠊</nemeth> and <nemeth class="inline">⠎⠂⠠⠀⠎⠆⠀⠈⠑⠀⠠⠚</nemeth>, then <nemeth class="inline">⠷⠗⠂⠬⠎⠂⠾⠬⠷⠗⠆⠬⠎⠆⠾⠀⠨⠅⠀⠷⠗⠂⠬⠗⠆⠾⠬⠷⠎⠂⠬⠎⠆⠾</nemeth> is in <nemeth class="inline">⠠⠊⠬⠠⠚</nemeth>. For <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth>, <nemeth class="inline">⠁⠷⠗⠂⠬⠎⠂⠾⠀⠨⠅⠀⠁⠗⠂⠬⠁⠎⠂⠀⠈⠑⠀⠠⠊⠬⠠⠚</nemeth>; hence, <nemeth class="inline">⠠⠊⠬⠠⠚</nemeth> is an ideal in <i class="one-letter">R</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="JlZ">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="yyM">Let <i class="one-letter">B</i> be a Boolean algebra. Prove each of the following identities.</p>
            <ol class="outerlist">
              <li>a. <p id="yFQ"><nemeth class="inline">⠁⠈⠬⠠⠊⠀⠨⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠁⠈⠩⠠⠕⠀⠨⠅⠀⠠⠕</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>.</p></li>
              <li>b. <p id="eMZ">If <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠠⠊</nemeth> and <nemeth class="inline">⠁⠈⠩⠃⠀⠨⠅⠀⠠⠕</nemeth>, then <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠄</nemeth>.</p></li>
              <li>c. <p id="KUi"><nemeth class="inline">⠷⠁⠘⠄⠐⠾⠘⠄⠐⠀⠨⠅⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>.</p></li>
              <li>d. <p id="rbr"><nemeth class="inline">⠠⠊⠘⠄⠐⠀⠨⠅⠀⠠⠕</nemeth> and <nemeth class="inline">⠠⠕⠘⠄⠐⠀⠨⠅⠀⠠⠊</nemeth>.</p></li>
              <li>e. <p id="XiA"><nemeth class="inline">⠷⠁⠈⠬⠃⠾⠘⠄⠐⠀⠨⠅⠀⠁⠘⠄⠐⠈⠩⠃⠄</nemeth> and <nemeth class="inline">⠷⠁⠈⠩⠃⠾⠘⠄⠐⠀⠨⠅⠀⠁⠘⠄⠐⠈⠬⠃⠄</nemeth> (De Morgan's laws).</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="pti">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="eFV">By drawing the appropriate diagrams, complete the proof of Theorem 19.3.6 to show that the switching functions form a Boolean algebra.</p>
          </article>
          <article class="exercise exercise-like" id="VAr">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="KNe">Let <i class="one-letter">B</i> be a Boolean algebra. Define binary operations <nemeth class="inline">⠬</nemeth> and <nemeth class="inline">⠡</nemeth> on <i class="one-letter">B</i> by</p>
            <div class="displaymath">
              <nemeth>⠁⠬⠃⠀⠀⠨⠅⠀⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠀⠁⠡⠃⠀⠀⠨⠅⠀⠁⠈⠩⠃</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <i class="one-letter">B</i> is a commutative ring under these operations satisfying <nemeth class="inline">⠁⠘⠆⠐⠀⠨⠅⠀⠁</nemeth> for all <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠃</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="BHA">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="qUn">Let <i class="one-letter">X</i> be a poset such that for every <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">X</i>, either <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> or <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠁</nemeth>. Then <i class="one-letter">X</i> is said to be a <dfn class="terminology">totally ordered set</dfn>.</p>
            <ol class="outerlist">
              <li>a. <p id="HZC">Is <nemeth class="inline">⠁⠳⠃</nemeth> a total order on <nemeth class="inline">⠸⠠⠝</nemeth>?</p></li>
              <li>b. <p id="ogL">Prove that <nemeth class="inline">⠸⠠⠝</nemeth>, <nemeth class="inline">⠸⠠⠵</nemeth>, <nemeth class="inline">⠸⠠⠟</nemeth>, and <nemeth class="inline">⠸⠠⠗</nemeth> are totally ordered sets under the usual ordering <nemeth class="inline">⠀⠐⠅⠱⠀</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="NAt"><span class="type">Hint</span>:<p id="CUk">(a) No.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="hOJ">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="Xbw">Let <i class="one-letter">X</i> and <i class="one-letter">Y</i> be posets. A map <nemeth class="inline">⠨⠋⠒⠀⠠⠭⠀⠫⠕⠀⠠⠽</nemeth> is <dfn class="terminology">order-preserving</dfn> if <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠃</nemeth> implies that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠐⠅⠱⠀⠋⠷⠃⠾</nemeth>. Let <i class="one-letter">L</i> and <i class="one-letter">M</i> be lattices. A map <nemeth class="inline">⠨⠓⠒⠀⠠⠇⠀⠫⠕⠀⠠⠍</nemeth> is a <dfn class="terminology">lattice homomorphism</dfn> if <nemeth class="inline">⠓⠷⠁⠈⠬⠃⠾⠀⠨⠅⠀⠓⠷⠁⠾⠈⠬⠓⠷⠃⠾</nemeth> and <nemeth class="inline">⠓⠷⠁⠈⠩⠃⠾⠀⠨⠅⠀⠓⠷⠁⠾⠈⠩⠓⠷⠃⠾</nemeth>. Show that every lattice homomorphism is order-preserving, but that it is not the case that every order-preserving homomorphism is a lattice homomorphism.</p>
          </article>
          <article class="exercise exercise-like" id="NVS">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="DiF">Let <i class="one-letter">B</i> be a Boolean algebra. Prove that <nemeth class="inline">⠁⠀⠨⠅⠀⠃</nemeth> if and only if <nemeth class="inline">⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠀⠨⠅⠀⠠⠕</nemeth> for <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠃</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="FVU"><span class="type">Hint</span>:<p id="jbt"><nemeth class="inline">⠷⠀⠫⠒⠒⠕⠕⠀⠾</nemeth>. <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠀⠫⠒⠒⠕⠕⠀⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠀⠨⠅⠀⠷⠁⠈⠩⠁⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠁⠾⠀⠨⠅⠀⠠⠕⠈⠬⠠⠕⠀⠨⠅⠀⠠⠕</nemeth>. <nemeth class="inline">⠷⠀⠫⠪⠪⠒⠒⠀⠾</nemeth>. <nemeth class="inline">⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠀⠨⠅⠀⠠⠕⠀⠫⠒⠒⠕⠕⠀⠁⠈⠬⠃⠀⠨⠅⠀⠷⠁⠈⠬⠁⠾⠈⠬⠃⠀⠨⠅⠀⠁⠈⠬⠷⠁⠈⠬⠃⠾⠀⠨⠅⠀⠁⠈⠬⠈⠷⠠⠊⠈⠩⠷⠁⠈⠬⠃⠾⠈⠾⠀⠨⠅⠀⠁⠈⠬⠈⠷⠷⠁⠈⠬⠁⠘⠄⠐⠾⠈⠩⠷⠁⠈⠬⠃⠾⠈⠾⠀⠨⠅⠀⠈⠷⠁⠈⠬⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠾⠈⠬⠈⠷⠁⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠈⠾⠀⠨⠅⠀⠁⠈⠬⠈⠷⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠈⠾⠀⠨⠅⠀⠁⠈⠬⠴⠀⠨⠅⠀⠁</nemeth>. A symmetric argument shows that <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="udb">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="jpO">Let <i class="one-letter">B</i> be a Boolean algebra. Prove that <nemeth class="inline">⠁⠀⠨⠅⠀⠠⠕</nemeth> if and only if <nemeth class="inline">⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠀⠨⠅⠀⠃</nemeth> for all <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="akk">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="PwX">Let <i class="one-letter">L</i> and <i class="one-letter">M</i> be lattices. Define an order relation on <nemeth class="inline">⠠⠇⠈⠡⠠⠍</nemeth> by <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠨⠐⠅⠱⠀⠷⠉⠠⠀⠙⠾</nemeth> if <nemeth class="inline">⠁⠀⠨⠐⠅⠱⠀⠉</nemeth> and <nemeth class="inline">⠃⠀⠨⠐⠅⠱⠀⠙</nemeth>. Show that <nemeth class="inline">⠠⠇⠈⠡⠠⠍</nemeth> is a lattice under this partial order.</p>
          </article>
        </section>
        <section class="exercises" id="aFJ">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">19.6</span> <span class="title">Programming Exercises</span></div>
          <article class="exercise exercise-like" id="Grt">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="vEg">A <dfn class="terminology">Boolean</dfn>  or <dfn class="terminology">switching function on <i class="one-letter">n</i> variables</dfn>  is a map <nemeth class="inline">⠋⠒⠀⠨⠷⠠⠕⠠⠀⠠⠊⠨⠾⠘⠝⠐⠀⠫⠕⠀⠨⠷⠼⠴⠠⠀⠠⠊⠨⠾</nemeth>. A Boolean polynomial is a special type of Boolean function: it is any type of Boolean expression formed from a finite combination of variables <nemeth class="inline">⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐</nemeth> together with <i class="one-letter">O</i> and <i class="one-letter">I</i>, using the operations <nemeth class="inline">⠈⠬</nemeth>, <nemeth class="inline">⠈⠩</nemeth>, and <nemeth class="inline">⠄</nemeth>. The values of the functions are defined in Table 19.6.1. Write a program to evaluate Boolean polynomials.</p>
            <figure class="table table-like" data-braille="figure-like" id="ooc">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">19.6.1<span class="period">.</span></span><span class="space"> </span>Boolean polynomials</figcaption>
              <table>
                <tr>
                  <td class="c m b2 r0 l2 t2 lines">
                    <i class="one-letter">x</i>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines">
                    <i class="one-letter">y</i>
                  </td>
                  <td class="c m b2 r0 l0 t2 lines">
                    <nemeth class="inline">⠭⠄</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t2 lines">
                    <nemeth class="inline">⠭⠈⠬⠽</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t2 lines" data-braille="last-cell">
                    <nemeth class="inline">⠭⠈⠩⠽</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b0 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b0 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b0 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                </tr>
                <tr>
                  <td class="c m b2 r0 l2 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠴</nemeth>
                  </td>
                  <td class="c m b2 r0 l0 t0 lines">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                  <td class="c m b2 r2 l0 t0 lines" data-braille="last-cell">
                    <nemeth class="inline">⠼⠂</nemeth>
                  </td>
                </tr>
              </table>
            </figure>
          </article>
        </section>
        <section class="references" id="QcR">
          <div class="none"><span class="type">References</span> <span class="codenumber">19.7</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="wka"><div class="bibitem">[1]</div>  <div class="bibentry"> Donnellan, T. <i>Lattice Theory</i> . Pergamon Press, Oxford, 1968.</div></article>
          <article class="bib" id="crj"><div class="bibitem">[2]</div>  <div class="bibentry"> Halmos, P. R. “The Basic Concepts of Algebraic Logic,” <i>American Mathematical Monthly</i> <b>53</b> (1956), 363–87.</div></article>
          <article class="bib" id="Iys"><div class="bibitem">[3]</div>  <div class="bibentry"> Hohn, F. “Some Mathematical Aspects of Switching,” <i>American Mathematical Monthly</i> <b>62</b> (1955), 75–90.</div></article>
          <article class="bib" id="oFB"><div class="bibitem">[4]</div>  <div class="bibentry"> Hohn, F. <i>Applied Boolean Algebra</i>. 2nd ed. Macmillan, New York, 1966.</div></article>
          <article class="bib" id="UMK"><div class="bibitem">[5]</div>  <div class="bibentry"> Lidl, R. and Pilz, G. <i>Applied Abstract Algebra</i>. 2nd ed. Springer, New York, 1998.</div></article>
          <article class="bib" id="ATT"><div class="bibitem">[6]</div>  <div class="bibentry"> Whitesitt, J. <i>Boolean Algebra and Its Applications</i>. Dover, Mineola, NY, 2010.</div></article>
        </section>
        <section class="section" id="LwL">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">19.8</span> <span class="title">Sage</span></div>
          <section class="introduction" id="UuY">
            <p id="kvh">Sage has support for both partially ordered sets (“posets”) and lattices, and does an excellent job of providing visual depictions of both.</p>
          </section>
          <section class="subsection" id="CcZ">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">19.8.1</span> <span class="title">Creating Partially Ordered Sets</span></div>
            <p id="mUo">Example 19.1.6 in the text is a good example to replicate as a demonstration of Sage commands. We first define the elements of the set <i class="one-letter">X</i>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">X = (24).divisors()
X
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 2, 3, 4, 6, 8, 12, 24]
</div>
            </article>
            <p id="Tbx">One approach to creating the relation is to specify <em class="emphasis">every</em> instance where one element is comparable to the another. So we build a list of pairs, where each pair contains comparable elements, with the lesser one first. This is the set of relations.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R = [(a,b) for a in X for b in X if a.divides(b)]; R
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(1, 1), (1, 2), (1, 3), (1, 4), (1, 6), (1, 8), (1, 12), (1, 24),
 (2, 2), (2, 4), (2, 6), (2, 8), (2, 12), (2, 24), (3, 3), (3, 6),
 (3, 12), (3, 24), (4, 4), (4, 8), (4, 12), (4, 24), (6, 6),
 (6, 12), (6, 24), (8, 8), (8, 24), (12, 12), (12, 24), (24, 24)]
</div>
            </article>
            <p id="ziG">We construct the poset by giving the the <code class="code-inline tex2jax_ignore">Poset</code> constructor a list containing the elements and the relations. We can then easily get a “plot” of the poset. Notice the plot just shows the “cover relations” — a minimal set of comparisons which the assumption of transitivity would expand into the set of all the relations.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D = Poset([X, R])
D.plot()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">
</div>
            </article>
            <p id="fpP">Another approach to creating a <code class="code-inline tex2jax_ignore">Poset</code> is to let the poset constructor run over all the pairs of elements, and all we do is give the constructor a way to test if two elements are comparable. Our comparison function should expect two elements and then return <code class="code-inline tex2jax_ignore">True</code> or <code class="code-inline tex2jax_ignore">False</code>. A “lambda” function is one way to quickly build such a function. This may be a new idea for you, but mastering lambda functions can be a great convenience. Notice that “lambda” is a word reserved for just this purpose (so, for example, <code class="code-inline tex2jax_ignore">lambda</code> is a bad choice for the name of an eigenvalue of a matrix). There are other ways to make functions in Sage, but a lambda function is quickest when the function is simple.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">divisible = lambda x, y: x.divides(y)
L = Poset([X, divisible])
L == D
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">L.plot()
</div>
            </article>
            <p id="LwY">Sage also has a collection of stock posets. Some are one-shot constructions, while others are members of parameterized families. Use tab-completion on <code class="code-inline tex2jax_ignore">Posets.</code> to see the full list. Here are some examples.</p>
            <p id="rEh">A one-shot construction. Perhaps what you would expect, though there might be other, equally plausible, alternatives.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q = Posets.PentagonPoset()
Q.plot()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">
</div>
            </article>
            <p id="XLq">A parameterized family. This is the classic example where the elements are subsets of a set with <i class="one-letter">n</i> elements and the relation is “subset of.”</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S = Posets.BooleanLattice(4)
S.plot()
</div>
            </article>
            <p id="DSz">And random posets. These can be useful for testing and experimenting, but are unlikely to exhibit special cases that may be important. You might run the following command many times and vary the second argument, which is a rough upper bound on the probability any two elements are comparable. Remember that the plot only shows the cover relations. The more elements that are comparable, the more “vertically stretched” the plot will be.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">T = Posets.RandomPoset(20,0.05)
T.plot()
</div>
            </article>
          </section>
          <section class="subsection" id="iki">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">19.8.2</span> <span class="title">Properties of a Poset</span></div>
            <p id="jZI">Once you have a poset, what can you do with it? Let's return to our first example, <code class="code-inline tex2jax_ignore">D</code>. We can of course determine if one element is less than another, which is the fundamental structure of a poset.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.is_lequal(4, 8)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.is_lequal(4, 4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.is_less_than(4, 8)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.is_less_than(4, 4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.is_lequal(6, 8)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.is_lequal(8, 6)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="QgR">Notice that <code class="code-inline tex2jax_ignore">6</code> and <code class="code-inline tex2jax_ignore">8</code> are not comparable in this poset (it is a <em class="emphasis">partial</em> order). The methods <code class="code-inline tex2jax_ignore">.is_gequal()</code> and <code class="code-inline tex2jax_ignore">.is_greater_than()</code> work similarly, but returns <code class="code-inline tex2jax_ignore">True</code> if the first element is greater (or equal).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.is_gequal(8, 4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D.is_greater_than(4, 8)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="woa">We can find the largest and smallest elements of a poset. This is a random poset built with a 10%probability, but copied here to be repeatable.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">X = range(20)
C = [[18, 7],  [9, 11], [9, 10], [11, 8], [6, 10],
     [10, 2],   [0, 2],  [2, 1],  [1, 8], [8, 12],
     [8, 3],  [3, 15], [15, 7], [7, 16],  [7, 4],
     [16, 17], [16, 13], [4, 19], [4, 14], [14, 5]]
P = Poset([X, C])
P.plot()
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P.minimal_elements()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[18, 9, 6, 0]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P.maximal_elements()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[5, 19, 13, 17, 12]
</div>
            </article>
            <p id="cvj">Elements of a poset can be partioned into level sets. In plots of posets, elements at the same level are plotted vertically at the same height. Each level set is obtained by removing all of the previous level sets and then taking the minimal elements of the result.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P.level_sets()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[18, 9, 6, 0], [11, 10], [2], [1], [8], [3, 12],
 [15], [7], [16, 4], [13, 17, 14, 19], [5]]
</div>
            </article>
            <p id="ICs">If we make two elements in <code class="code-inline tex2jax_ignore">R</code> comparable when they had not previously been, this is an extension of <code class="code-inline tex2jax_ignore">R</code>. Consider all possible extensions of one poset — we can make a poset from all of these, where set inclusion is the relation. A linear extension is a maximal element in this poset of posets. Informally, we are adding as many new relations as possible, consistent with the original poset and so that the result is a total order. In other words, there is an ordering of the elements that is consistent with the order in the poset. We can build such a thing, but the output is just a list of the elements in the linear order. A computer scientist would be inclined to call this a “topological sort.”</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">linear = P.linear_extension(); linear
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[18, 9, 11, 6, 10, 0, 2, 1, 8, 3, 15, 
 7, 4, 14, 5, 19, 16, 13, 17, 12]
</div>
            </article>
            <p id="oJB">We can construct subposets by giving a set of elements to induce the new poset. Here we take roughly the “bottom half” of the random poset <code class="code-inline tex2jax_ignore">P</code> by inducing the subposet on a union of some of the level sets.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">level = P.level_sets()
bottomhalf = sum([level[i] for i in range(5)], [])
B = P.subposet(bottomhalf)
B.plot()
</div>
            </article>
            <p id="UQK">The dual of a poset retains the same set of elements, but reverses any comparisons.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Pdual = P.dual()
Pdual.plot()
</div>
            </article>
            <p id="AXT">Taking the dual of the divisibility poset from Example 19.1.6 would be like changing the relation to “is a multiple of.”</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Ddual = D.dual()
Ddual.plot()
</div>
            </article>
          </section>
          <section class="subsection" id="Orr">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">19.8.3</span> <span class="title">Lattices</span></div>
            <p id="hfc">Every lattice is a poset, so all the commands above will perform equally well for a lattice. But how do you create a lattice? Simple — first create a poset and then feed it into the <code class="code-inline tex2jax_ignore">LatticePoset()</code> constructor. But realize that just because you give this constructor a poset, it does not mean a lattice will always come back out. Only if the poset is <em class="emphasis">already</em> a lattice will it get upgraded from a poset to a lattice for Sage's purposes, and you will get a <code class="code-inline tex2jax_ignore">ValueError</code> if the upgrade is not possible. Finally, notice that some of the posets Sage constructs are already recognized as lattices, such as the prototypical <code class="code-inline tex2jax_ignore">BooleanLattice</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P = Posets.AntichainPoset(8)
P.is_lattice()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">LatticePoset(P)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
ValueError: not a meet-semilattice: no bottom element
</div>
            </article>
            <p id="Nml">An integer composition of <i class="one-letter">n</i> is a list of positive integers that sum to <i class="one-letter">n</i>. A composition <nemeth class="inline">⠠⠉⠂</nemeth> covers a composition <nemeth class="inline">⠠⠉⠆</nemeth> if <nemeth class="inline">⠠⠉⠆</nemeth> can be formed from <nemeth class="inline">⠠⠉⠂</nemeth> by adding consecutive parts. For example, <nemeth class="inline">⠠⠉⠂⠀⠨⠅⠀⠈⠷⠼⠆⠠⠀⠼⠂⠠⠀⠼⠆⠈⠾⠀⠨⠨⠐⠱⠀⠈⠷⠼⠒⠠⠀⠼⠆⠈⠾⠀⠨⠅⠀⠠⠉⠆</nemeth>. With this relation, the set of all integer compositions of a fixed integer <i class="one-letter">n</i> is a poset that is also a lattice.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">CP = Posets.IntegerCompositions(5)
C = LatticePoset(CP)
C.plot()
</div>
            </article>
            <p id="ttu">A meet or a join is a fundamental operation in a lattice.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">par = C.an_element().parent()
a = par([1, 1, 1, 2])
b = par([2, 1, 1, 1])
a, b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">([1, 1, 1, 2], [2, 1, 1, 1])
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.meet(a, b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[2, 1, 2]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = par([1, 4])
d = par([2, 3])
c, d
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">([1, 4], [2, 3])
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.join(c, d)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 1, 3]
</div>
            </article>
            <p id="ZAD">Once a poset is upgraded to lattice status, then additional commands become available, or the character of their results changes.</p>
            <p id="FHM">An example of the former is the <code class="code-inline tex2jax_ignore">.is_distributive()</code> method.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.is_distributive()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="lOV">An example of the latter is the <code class="code-inline tex2jax_ignore">.top()</code> method. What your text calls a largest element and a smallest element of a lattice, Sage calls a top and a bottom. For a poset, <code class="code-inline tex2jax_ignore">.top()</code> and <code class="code-inline tex2jax_ignore">.bottom()</code> may return an element or may not (returning <code class="code-inline tex2jax_ignore">None</code>), but for a lattice it is guaranteed to return exactly one element.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.top()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 1, 1, 1, 1]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.bottom()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[5]
</div>
            </article>
            <p id="RWe">Notice that the returned values are all elements of the lattice, in this case ordered lists of integers summing to <nemeth class="inline">⠼⠢</nemeth>.</p>
            <p id="ydn">Complements now make sense in a lattice. The result of the <code class="code-inline tex2jax_ignore">.complements()</code> method is a dictionary that uses elements of the lattice as the keys. We say the dictionary is “indexed” by the elements of the lattice. The result is a list of the complements of the element. We call this the “value” of the key-value pair. (You may know dictionaries as “associative arrays”, but they are really just fancy functions.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">comp = C.complements()
comp[par([1, 1, 1, 2])]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[4, 1]]
</div>
            </article>
            <p id="ekw">The lattice of integer compositions is a complemented lattice, as we can see by the result that each element has a single (unique) complement, evidenced by the lists of length <nemeth class="inline">⠼⠂</nemeth> in the values of the dictionary. Or we can just ask Sage via <code class="code-inline tex2jax_ignore">.is_complemented()</code>. Dictionaries have no inherent order, so you may get different output each time you inspect the dictionary.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">comp
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">{[1, 1, 1, 1, 1]: [[5]],
 [1, 1, 1, 2]: [[4, 1]],
 [1, 1, 2, 1]: [[3, 2]],
 [1, 1, 3]: [[3, 1, 1]],
 [1, 2, 1, 1]: [[2, 3]],
 [1, 2, 2]: [[2, 2, 1]],
 [1, 3, 1]: [[2, 1, 2]],
 [1, 4]: [[2, 1, 1, 1]],
 [2, 1, 1, 1]: [[1, 4]],
 [2, 1, 2]: [[1, 3, 1]],
 [2, 2, 1]: [[1, 2, 2]],
 [2, 3]: [[1, 2, 1, 1]],
 [3, 1, 1]: [[1, 1, 3]],
 [3, 2]: [[1, 1, 2, 1]],
 [4, 1]: [[1, 1, 1, 2]],
 [5]: [[1, 1, 1, 1, 1]]}
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[len(e[1]) for e in comp.items()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.is_complemented()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="KrF">There are many more commands which apply to posets and lattices, so build a few and use tab-completion liberally to explore. There is more to discover than we can cover in just a single chapter, but you now have the basic tools to profitably study posets and lattices in Sage.</p>
          </section>
        </section>
        <section class="exercises" id="GMS">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">19.9</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="myC">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="bLp">Use <code class="code-inline tex2jax_ignore">R = Posets.RandomPoset(30,0.05)</code> to construct a random poset. Use <code class="code-inline tex2jax_ignore">R.plot()</code> to get an idea of what you have built.</p>
            <ol class="outerlist">
              <li>a. <p id="UnU">Illustrate the use of the poset methods: <code class="code-inline tex2jax_ignore">.is_lequal()</code>, <code class="code-inline tex2jax_ignore">.is_less_than()</code>, <code class="code-inline tex2jax_ignore">.is_gequal()</code>, and <code class="code-inline tex2jax_ignore">.is_greater_than()</code> to determine if two specific elements (of your choice) are related or incomparable.</p></li>
              <li>b. <p id="Avd">Use <code class="code-inline tex2jax_ignore">.minimal_elements()</code> and <code class="code-inline tex2jax_ignore">.maximal_elements()</code> to find the smallest and largest elements of your poset.</p></li>
              <li>c. <p id="gCm">Use <code class="code-inline tex2jax_ignore">LatticePoset(R)</code> to see if the poset <code class="code-inline tex2jax_ignore">R</code> is a lattice by attempting to convert it into a lattice.</p></li>
              <li>d. <p id="MJv">Find a linear extension of your poset. Confirm that any pair of elements that are comparable in the poset will be similarly comparable in the linear extension.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="SFL">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="HSy">Construct the poset on the positive divisors of <nemeth class="inline">⠼⠶⠆⠀⠨⠅⠀⠼⠆⠘⠒⠐⠡⠒⠘⠆</nemeth> with divisiblity as the relation, and then convert to a lattice.</p>
            <ol class="outerlist">
              <li>a. <p id="sQE">Determine the one and zero element using <code class="code-inline tex2jax_ignore">.top()</code> and <code class="code-inline tex2jax_ignore">.bottom()</code>.</p></li>
              <li>b. <p id="YXN">Determine all the pairs of elements of the lattice that are complements of each other <em class="emphasis">without</em> using the <code class="code-inline tex2jax_ignore">.complement()</code> method, but rather just use the <code class="code-inline tex2jax_ignore">.meet()</code> and <code class="code-inline tex2jax_ignore">.join()</code> methods. Extra credit if you can output each pair just once.</p></li>
              <li>c. <p id="FeW">Determine if the lattice is distributive using just the <code class="code-inline tex2jax_ignore">.meet()</code> and <code class="code-inline tex2jax_ignore">.join()</code> methods, and not the <code class="code-inline tex2jax_ignore">.is_distributive()</code> method.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="yMU">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="nZH">Construct several specific diamond lattices with <code class="code-inline tex2jax_ignore">Posets.DiamondPoset(n)</code> by varying the value of <code class="code-inline tex2jax_ignore">n</code>. Once you feel you have enough empirical evidence, give answers, with justifications, to the following questions for <em class="emphasis">general</em> values of <i class="one-letter">n</i>, based on observations obtained from your experiments with Sage.</p>
            <ol class="outerlist">
              <li>a. <p id="lmf">Which elements have complements and which do not, and why?</p></li>
              <li>b. <p id="Rto">Read the documentation of the <code class="code-inline tex2jax_ignore">.antichains()</code> method to learn what an antichain is. How many antichains are there?</p></li>
              <li>c. <p id="xAx">Is the lattice distributive?</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="eUd">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="UgQ">Use <code class="code-inline tex2jax_ignore">Posets.BooleanLattice(4)</code> to construct an instance of the prototypical Boolean algebra on <nemeth class="inline">⠼⠂⠖</nemeth> elements (i.e., all subsets of a <nemeth class="inline">⠼⠲</nemeth>-set).</p>
            <p id="AnZ">Then use <code class="code-inline tex2jax_ignore">Posets.IntegerCompositions(5)</code> to construct the poset whose <nemeth class="inline">⠼⠂⠖</nemeth> elements are the compositions of the integer <nemeth class="inline">⠼⠢</nemeth>. We have seen above that the integer composition lattice is distributive and complemented, making it a Boolean algebra. And by Theorem 19.2.9 we can conclude that these two Boolean algebras are isomorphic.</p>
            <p id="gvi">Use the <code class="code-inline tex2jax_ignore">.plot()</code> method to see the similarity visually. Then use the method <code class="code-inline tex2jax_ignore">.hasse_diagram()</code> on each poset to obtain a directed graph (which you can also plot, though the embedding into the plane may not be as informative). Employ the graph method <code class="code-inline tex2jax_ignore">.is_isomorphic()</code> to see that the two Hasse diagrams really are the “same.”</p>
          </article>
          <article class="exercise exercise-like" id="Lbm">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="MCr">(Advanced) For the previous question, construct an <em class="emphasis">explicit</em> isomorphism between the two Boolean algebras. This would be a bijective function (constructed with the <code class="code-inline tex2jax_ignore">def</code> command) that converts compositions into sets (or if, you choose, sets into compositions) and which respects the meet and join operations. You can test and illustrate your function by its interaction with specific elements evaluated in the meet and join operations, as described in the definition of an isomorphism of Boolean algebras.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="kTG">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">20</span> <span class="title">Vector Spaces</span></div>
        <section class="introduction" id="LVx">
          <p id="ppr">In a physical system a quantity can often be described with a single number. For example, we need to know only a single number to describe temperature, mass, or volume. However, for some quantities, such as location, we need several numbers. To give the location of a point in space, we need <i class="one-letter">x</i>, <i class="one-letter">y</i>, and <i class="one-letter">z</i> coordinates. Temperature distribution over a solid object requires four numbers: three to identify each point within the object and a fourth to describe the temperature at that point. Often <i class="one-letter">n</i>-tuples of numbers, or vectors, also have certain algebraic properties, such as addition or scalar multiplication.</p>
          <p id="VwA">In this chapter we will examine mathematical structures called vector spaces. As with groups and rings, it is desirable to give a simple list of axioms that must be satisfied to make a set of vectors a structure worth studying.</p>
        </section>
        <section class="section" id="Ogj">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">20.1</span> <span class="title">Definitions and Examples</span></div>
          <p id="Vbb">A <dfn class="terminology">vector space</dfn> <i class="one-letter">V</i> over a field <i class="one-letter">F</i> is an abelian group with a <dfn class="terminology">scalar product</dfn>  <nemeth class="inline">⠨⠁⠡⠧</nemeth> or <nemeth class="inline">⠨⠁⠧</nemeth> defined for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> and all <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth> satisfying the following axioms.</p>
          <ul class="outerlist">
            <li>• <p id="POs"><nemeth class="inline">⠁⠷⠨⠃⠧⠾⠀⠨⠅⠀⠷⠁⠨⠃⠾⠧</nemeth>;</p></li>
            <li>• <p id="vVB"><nemeth class="inline">⠷⠨⠁⠬⠨⠃⠾⠧⠀⠨⠅⠀⠨⠁⠧⠬⠨⠃⠧</nemeth>;</p></li>
            <li>• <p id="ccK"><nemeth class="inline">⠨⠁⠷⠥⠬⠧⠾⠀⠨⠅⠀⠨⠁⠥⠬⠨⠁⠧</nemeth>;</p></li>
            <li>• <p id="IjT"><nemeth class="inline">⠼⠂⠧⠀⠨⠅⠀⠧</nemeth>;</p></li>
          </ul>
          <p data-braille="continuation">where <nemeth class="inline">⠨⠁⠠⠀⠨⠃⠀⠈⠑⠀⠠⠋</nemeth> and <nemeth class="inline">⠥⠠⠀⠧⠀⠈⠑⠀⠠⠧</nemeth>.</p>
          <p id="Bik">The elements of <i class="one-letter">V</i> are called <dfn class="terminology">vectors</dfn>; the elements of <i class="one-letter">F</i> are called <dfn class="terminology">scalars</dfn>. It is important to notice that in most cases two vectors cannot be multiplied. In general, it is only possible to multiply a vector with a scalar. To differentiate between the scalar zero and the vector zero, we will write them as 0 and <nemeth class="inline">⠼⠴</nemeth>, respectively.</p>
          <p id="hpt">Let us examine several examples of vector spaces. Some of them will be quite familiar; others will seem less so.</p>
          <article class="example example-like" data-braille="example-like" id="OQd">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">20.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="sjX">The <i class="one-letter">n</i>-tuples of real numbers, denoted by <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth>, form a vector space over <nemeth class="inline">⠸⠠⠗</nemeth>. Given vectors <nemeth class="inline">⠥⠀⠨⠅⠀⠷⠥⠂⠠⠀⠄⠄⠄⠀⠠⠀⠥⠰⠝⠐⠾</nemeth> and <nemeth class="inline">⠧⠀⠨⠅⠀⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠾</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> and <nemeth class="inline">⠨⠁</nemeth> in <nemeth class="inline">⠸⠠⠗</nemeth>, we can define vector addition by</p>
            <div class="displaymath">
              <nemeth>⠥⠬⠧⠀⠨⠅⠀⠷⠥⠂⠠⠀⠄⠄⠄⠀⠠⠀⠥⠰⠝⠐⠾⠬⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠾⠀⠨⠅⠀⠷⠥⠂⠬⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠥⠰⠝⠐⠬⠧⠰⠝⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">and scalar multiplication by</p>
            <div class="displaymath">
              <nemeth>⠁⠥⠀⠨⠅⠀⠁⠷⠥⠂⠠⠀⠄⠄⠄⠀⠠⠀⠥⠰⠝⠐⠾⠀⠨⠅⠀⠷⠁⠥⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠥⠰⠝⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="uXm">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">20.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="Yrg">If <i class="one-letter">F</i> is a field, then <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is a vector space over <i class="one-letter">F</i>. The vectors in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> are simply polynomials, and vector addition is just polynomial addition. If <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> and <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>, then scalar multiplication is defined by <nemeth class="inline">⠨⠁⠏⠷⠭⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="bev">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">20.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="Eyp">The set of all continuous real-valued functions on a closed interval <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾</nemeth> is a vector space over <nemeth class="inline">⠸⠠⠗</nemeth>. If <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> are continuous on <nemeth class="inline">⠈⠷⠁⠠⠀⠃⠈⠾</nemeth>, then <nemeth class="inline">⠷⠋⠬⠛⠾⠷⠭⠾</nemeth> is defined to be <nemeth class="inline">⠋⠷⠭⠾⠬⠛⠷⠭⠾</nemeth>. Scalar multiplication is defined by <nemeth class="inline">⠷⠨⠁⠋⠾⠷⠭⠾⠀⠨⠅⠀⠨⠁⠋⠷⠭⠾</nemeth> for <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠸⠠⠗</nemeth>. For example, if <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠎⠊⠝⠀⠭</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆</nemeth>, then <nemeth class="inline">⠷⠼⠆⠋⠬⠢⠛⠾⠷⠭⠾⠀⠨⠅⠀⠼⠆⠎⠊⠝⠀⠭⠬⠢⠭⠘⠆</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="HlE">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">20.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="kFy">Let <nemeth class="inline">⠠⠧⠀⠨⠅⠀⠸⠠⠟⠷⠜⠆⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth>. Then <i class="one-letter">V</i> is a vector space over <nemeth class="inline">⠸⠠⠟</nemeth>. If <nemeth class="inline">⠥⠀⠨⠅⠀⠁⠬⠃⠜⠆⠻</nemeth> and <nemeth class="inline">⠧⠀⠨⠅⠀⠉⠬⠙⠜⠆⠻</nemeth>, then <nemeth class="inline">⠥⠬⠧⠀⠨⠅⠀⠷⠁⠬⠉⠾⠬⠷⠃⠬⠙⠾⠜⠆⠻</nemeth> is again in <i class="one-letter">V</i>. Also, for <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠸⠠⠟</nemeth>, <nemeth class="inline">⠨⠁⠧</nemeth> is in <i class="one-letter">V</i>. We will leave it as an exercise to verify that all of the vector space axioms hold for <i class="one-letter">V</i>.</p>
          </article>
          <article class="proposition theorem-like" data-braille="theorem-like" id="dZb">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">20.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="HsV">Let <i class="one-letter">V</i> be a vector space over <i class="one-letter">F</i>. Then each of the following statements is true.</p>
            <ol class="outerlist">
              <li>1. <p id="orc"><nemeth class="inline">⠼⠴⠧⠀⠨⠅⠀⠼⠴</nemeth> for all <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth>.</p></li>
              <li>2. <p id="Uyl"><nemeth class="inline">⠨⠁⠐bold⠴⠀⠨⠅⠀⠼⠴</nemeth> for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>.</p></li>
              <li>3. <p id="AFu">If <nemeth class="inline">⠨⠁⠧⠀⠨⠅⠀⠼⠴</nemeth>, then either <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠧⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
              <li>4. <p id="gMD"><nemeth class="inline">⠷⠤⠼⠂⠾⠧⠀⠨⠅⠀⠤⠧</nemeth> for all <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth>.</p></li>
              <li>5. <p id="MTM"><nemeth class="inline">⠤⠷⠁⠧⠾⠀⠨⠅⠀⠷⠤⠁⠾⠧⠀⠨⠅⠀⠁⠷⠤⠧⠾</nemeth> for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> and all <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth>.</p></li>
            </ol>
          </article>
          <article class="hiddenproof" data-braille="proof" id="YjP">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="egs">To prove (1), observe that</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠧⠀⠨⠅⠀⠷⠼⠴⠬⠴⠾⠧⠀⠨⠅⠀⠼⠴⠧⠬⠴⠧⠆</nemeth>
            </div>
            <p data-braille="continuation">consequently, <nemeth class="inline">⠼⠴⠬⠴⠧⠀⠨⠅⠀⠼⠴⠧⠬⠴⠧</nemeth>. Since <i class="one-letter">V</i> is an abelian group, <nemeth class="inline">⠼⠴⠀⠨⠅⠀⠼⠴⠧</nemeth>.</p>
            <p id="KnB">The proof of (2) is almost identical to the proof of (1). For (3), we are done if <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠼⠴</nemeth>. Suppose that <nemeth class="inline">⠨⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>. Multiplying both sides of <nemeth class="inline">⠨⠁⠧⠀⠨⠅⠀⠼⠴</nemeth> by <nemeth class="inline">⠼⠂⠸⠌⠨⠁</nemeth>, we have <nemeth class="inline">⠧⠀⠨⠅⠀⠼⠴</nemeth>.</p>
            <p id="quK">To show (4), observe that</p>
            <div class="displaymath">
              <nemeth>⠧⠬⠷⠤⠼⠂⠾⠧⠀⠨⠅⠀⠼⠂⠧⠬⠷⠤⠼⠂⠾⠧⠀⠨⠅⠀⠷⠼⠂⠤⠂⠾⠧⠀⠨⠅⠀⠼⠴⠧⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">, and so <nemeth class="inline">⠤⠧⠀⠨⠅⠀⠷⠤⠼⠂⠾⠧</nemeth>. We will leave the proof of (5) as an exercise.</p>
          </article>
        </section>
        <section class="section" id="uns">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">20.2</span> <span class="title">Subspaces</span></div>
          <p id="NwC">Just as groups have subgroups and rings have subrings, vector spaces also have substructures. Let <i class="one-letter">V</i> be a vector space over a field <i class="one-letter">F</i>, and <i class="one-letter">W</i> a subset of <i class="one-letter">V</i>. Then <i class="one-letter">W</i> is a <dfn class="terminology">subspace</dfn> of <i class="one-letter">V</i> if it is closed under vector addition and scalar multiplication; that is, if <nemeth class="inline">⠥⠠⠀⠧⠀⠈⠑⠀⠠⠺</nemeth> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>, it will always be the case that <nemeth class="inline">⠥⠬⠧</nemeth> and <nemeth class="inline">⠨⠁⠧</nemeth> are also in <i class="one-letter">W</i>.</p>
          <article class="example example-like" data-braille="example-like" id="nsN">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">20.2.1</span>
              <span class="period">.</span>
            </h6>
            <p id="QMH">Let <i class="one-letter">W</i> be the subspace of <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> defined by <nemeth class="inline">⠠⠺⠀⠨⠅⠀⠨⠷⠷⠭⠂⠠⠀⠼⠆⠭⠂⠬⠭⠆⠠⠀⠭⠂⠤⠭⠆⠾⠒⠀⠭⠂⠠⠀⠭⠆⠀⠈⠑⠀⠸⠠⠗⠨⠾</nemeth>. We claim that <i class="one-letter">W</i> is a  subspace of <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth>. Since</p>
            <div class="displaymath">
              <nemeth>⠁⠷⠭⠂⠠⠀⠼⠆⠭⠂⠬⠭⠆⠠⠀⠭⠂⠤⠭⠆⠾⠀⠀⠨⠅⠀⠷⠁⠭⠂⠠⠀⠁⠷⠼⠆⠭⠂⠬⠭⠆⠾⠠⠀⠁⠷⠭⠂⠤⠭⠆⠾⠾⠀⠀⠀⠀⠨⠅⠀⠷⠁⠭⠂⠠⠀⠼⠆⠷⠁⠭⠂⠾⠬⠁⠭⠆⠠⠀⠁⠭⠂⠤⠁⠭⠆⠾</nemeth>
            </div>
            <p data-braille="continuation">, <i class="one-letter">W</i> is closed under scalar multiplication. To show that <i class="one-letter">W</i> is closed under vector addition, let <nemeth class="inline">⠥⠀⠨⠅⠀⠷⠭⠂⠠⠀⠼⠆⠭⠂⠬⠭⠆⠠⠀⠭⠂⠤⠭⠆⠾</nemeth> and <nemeth class="inline">⠧⠀⠨⠅⠀⠷⠽⠂⠠⠀⠼⠆⠽⠂⠬⠽⠆⠠⠀⠽⠂⠤⠽⠆⠾</nemeth> be vectors in <i class="one-letter">W</i>. Then</p>
            <div class="displaymath">
              <nemeth>⠥⠬⠧⠀⠨⠅⠀⠷⠭⠂⠬⠽⠂⠠⠀⠼⠆⠷⠭⠂⠬⠽⠂⠾⠬⠷⠭⠆⠬⠽⠆⠾⠠⠀⠷⠭⠂⠬⠽⠂⠾⠤⠷⠭⠆⠬⠽⠆⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="TzW">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">20.2.2</span>
              <span class="period">.</span>
            </h6>
            <p id="wTQ">Let <i class="one-letter">W</i> be the subset of polynomials of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> with no odd-power terms. If <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> have no odd-power terms, then neither will <nemeth class="inline">⠏⠷⠭⠾⠬⠟⠷⠭⠾</nemeth>. Also, <nemeth class="inline">⠨⠁⠏⠷⠭⠾⠀⠈⠑⠀⠠⠺</nemeth> for <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> and <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠺</nemeth>.</p>
          </article>
          <p id="tDL">Let <i class="one-letter">V</i> be any vector space over a field <i class="one-letter">F</i> and suppose that <nemeth class="inline">⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth> are vectors in <i class="one-letter">V</i> and <nemeth class="inline">⠨⠁⠂⠠⠀⠨⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> are scalars in <i class="one-letter">F</i>. Any vector <i class="one-letter">w</i> in <i class="one-letter">V</i> of the form</p>
          <div class="displaymath">
            <nemeth>⠺⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠨⠁⠰⠊⠐⠧⠰⠊⠐⠀⠨⠅⠀⠨⠁⠂⠧⠂⠬⠨⠁⠆⠧⠆⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝</nemeth>
          </div>
          <p data-braille="continuation">is called a <dfn class="terminology">linear combination</dfn>  of the vectors <nemeth class="inline">⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth>. The <dfn class="terminology">spanning set</dfn>  of vectors <nemeth class="inline">⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth> is the set of vectors obtained from all possible linear combinations of <nemeth class="inline">⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth>. If <i class="one-letter">W</i> is the spanning set of <nemeth class="inline">⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth>, then we say that <i class="one-letter">W</i> is <dfn class="terminology">spanned</dfn> by <nemeth class="inline">⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth>.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="Kgk">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">20.2.3</span>
              <span class="period">.</span>
            </h6>
            <p id="nAe">Let <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> be vectors in a vector space <i class="one-letter">V</i>. Then the span of <i class="one-letter">S</i> is a subspace of <i class="one-letter">V</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="EqY">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="WBT">Let <i class="one-letter">u</i> and <i class="one-letter">v</i> be in <i class="one-letter">S</i>. We can write both of these vectors as  linear combinations of the <nemeth class="inline">⠧⠰⠊</nemeth>'s:</p>
            <div class="displaymath">
              <nemeth>⠥⠀⠀⠨⠅⠀⠨⠁⠂⠧⠂⠬⠨⠁⠆⠧⠆⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝⠐⠀⠧⠀⠀⠨⠅⠀⠨⠃⠂⠧⠂⠬⠨⠃⠆⠧⠆⠬⠄⠄⠄⠬⠨⠃⠰⠝⠐⠧⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">. Then</p>
            <div class="displaymath">
              <nemeth>⠥⠬⠧⠀⠨⠅⠀⠷⠨⠁⠂⠬⠨⠃⠂⠾⠧⠂⠬⠷⠨⠁⠆⠬⠨⠃⠆⠾⠧⠆⠬⠄⠄⠄⠬⠷⠨⠁⠰⠝⠐⠬⠨⠃⠰⠝⠐⠾⠧⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">is a linear combination of the <nemeth class="inline">⠧⠰⠊</nemeth>'s. For <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠨⠁⠥⠀⠨⠅⠀⠷⠨⠁⠨⠁⠂⠾⠧⠂⠬⠷⠨⠁⠨⠁⠆⠾⠧⠆⠬⠄⠄⠄⠬⠷⠨⠁⠨⠁⠰⠝⠐⠾⠧⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">is in the span of <i class="one-letter">S</i>.</p>
          </article>
        </section>
        <section class="section" id="auB">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">20.3</span> <span class="title">Linear Independence</span></div>
          <p id="ZKU">Let <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> be a set of vectors in a vector space <i class="one-letter">V</i>. If there exist scalars <nemeth class="inline">⠨⠁⠂⠠⠀⠨⠁⠆⠀⠄⠄⠄⠀⠨⠁⠰⠝⠐⠀⠈⠑⠀⠠⠋</nemeth> such that not all of the <nemeth class="inline">⠨⠁⠰⠊</nemeth>'s are zero and</p>
          <div class="displaymath">
            <nemeth>⠨⠁⠂⠧⠂⠬⠨⠁⠆⠧⠆⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>
          </div>
          <p data-braille="continuation">, then <i class="one-letter">S</i> is said to be <dfn class="terminology">linearly dependent</dfn>.  If the set <i class="one-letter">S</i> is not linearly dependent, then it is said to be <dfn class="terminology">linearly independent</dfn>.  More specifically, <i class="one-letter">S</i> is a linearly independent set if</p>
          <div class="displaymath">
            <nemeth>⠨⠁⠂⠧⠂⠬⠨⠁⠆⠧⠆⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>
          </div>
          <p data-braille="continuation">implies that</p>
          <div class="displaymath">
            <nemeth>⠨⠁⠂⠀⠨⠅⠀⠨⠁⠆⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠨⠁⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>
          </div>
          <p data-braille="continuation">for any set of scalars <nemeth class="inline">⠨⠷⠨⠁⠂⠠⠀⠨⠁⠆⠀⠄⠄⠄⠀⠨⠁⠰⠝⠐⠨⠾</nemeth>.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="qnt">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">20.3.1</span>
              <span class="period">.</span>
            </h6>
            <p id="THn">Let <nemeth class="inline">⠨⠷⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> be a set of linearly independent vectors in a vector space. Suppose that</p>
            <div class="displaymath">
              <nemeth>⠧⠀⠨⠅⠀⠨⠁⠂⠧⠂⠬⠨⠁⠆⠧⠆⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠨⠃⠂⠧⠂⠬⠨⠃⠆⠧⠆⠬⠄⠄⠄⠬⠨⠃⠰⠝⠐⠧⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">. Then <nemeth class="inline">⠨⠁⠂⠀⠨⠅⠀⠨⠃⠂⠠⠀⠨⠁⠆⠀⠨⠅⠀⠨⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠀⠨⠅⠀⠨⠃⠰⠝⠐</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="kyh">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="CJc">If</p>
            <div class="displaymath">
              <nemeth>⠧⠀⠨⠅⠀⠨⠁⠂⠧⠂⠬⠨⠁⠆⠧⠆⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠨⠃⠂⠧⠂⠬⠨⠃⠆⠧⠆⠬⠄⠄⠄⠬⠨⠃⠰⠝⠐⠧⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">, then</p>
            <div class="displaymath">
              <nemeth>⠷⠨⠁⠂⠤⠨⠃⠂⠾⠧⠂⠬⠷⠨⠁⠆⠤⠨⠃⠆⠾⠧⠆⠬⠄⠄⠄⠬⠷⠨⠁⠰⠝⠐⠤⠨⠃⠰⠝⠐⠾⠧⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. Since <nemeth class="inline">⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth> are linearly independent, <nemeth class="inline">⠨⠁⠰⠊⠐⠤⠨⠃⠰⠊⠐⠀⠨⠅⠀⠼⠴</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝</nemeth>.</p>
          </article>
          <p id="FSd">The definition of linear dependence makes more sense if we consider the following proposition.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="WuC">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">20.3.2</span>
              <span class="period">.</span>
            </h6>
            <p id="zOw">A set <nemeth class="inline">⠨⠷⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> of vectors in a vector space <i class="one-letter">V</i> is linearly dependent if and only if one of the <nemeth class="inline">⠧⠰⠊</nemeth>'s is a linear combination of the rest.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="QFq">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="iQl">Suppose that <nemeth class="inline">⠨⠷⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> is a set of linearly dependent vectors. Then there exist scalars <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠨⠁⠂⠧⠂⠬⠨⠁⠆⠧⠆⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">, with at least one of the <nemeth class="inline">⠨⠁⠰⠊</nemeth>'s not equal to zero. Suppose that <nemeth class="inline">⠨⠁⠰⠅⠐⠀⠌⠨⠅⠀⠼⠴</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠧⠰⠅⠐⠀⠨⠅⠀⠤⠹⠨⠁⠂⠌⠨⠁⠰⠅⠐⠼⠧⠂⠤⠄⠄⠄⠤⠹⠨⠁⠰⠅⠤⠂⠐⠌⠨⠁⠰⠅⠐⠼⠧⠰⠅⠤⠂⠐⠤⠹⠨⠁⠰⠅⠬⠂⠐⠌⠨⠁⠰⠅⠐⠼⠧⠰⠅⠬⠂⠐⠤⠄⠄⠄⠤⠹⠨⠁⠰⠝⠐⠌⠨⠁⠰⠅⠐⠼⠧⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="OXu">Conversely, suppose that</p>
            <div class="displaymath">
              <nemeth>⠧⠰⠅⠐⠀⠨⠅⠀⠨⠃⠂⠧⠂⠬⠄⠄⠄⠬⠨⠃⠰⠅⠤⠂⠐⠧⠰⠅⠤⠂⠐⠬⠨⠃⠰⠅⠬⠂⠐⠧⠰⠅⠬⠂⠐⠬⠄⠄⠄⠬⠨⠃⠰⠝⠐⠧⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">. Then</p>
            <div class="displaymath">
              <nemeth>⠨⠃⠂⠧⠂⠬⠄⠄⠄⠬⠨⠃⠰⠅⠤⠂⠐⠧⠰⠅⠤⠂⠐⠤⠧⠰⠅⠐⠬⠨⠃⠰⠅⠬⠂⠐⠧⠰⠅⠬⠂⠐⠬⠄⠄⠄⠬⠨⠃⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="lZm">The following proposition is a consequence of the fact that any system of homogeneous linear equations with more unknowns than equations will have a nontrivial solution. We leave the details of the proof for the end-of-chapter exercises.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="CBL">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">20.3.3</span>
              <span class="period">.</span>
            </h6>
            <p id="fVF">Suppose that a vector space <i class="one-letter">V</i> is spanned by <i class="one-letter">n</i> vectors. If <nemeth class="inline">⠍⠀⠨⠂⠀⠝</nemeth>, then any set of <i class="one-letter">m</i> vectors in <i class="one-letter">V</i> must be linearly dependent.</p>
          </article>
          <p id="Sgv">A set <nemeth class="inline">⠨⠷⠑⠂⠠⠀⠑⠆⠠⠀⠄⠄⠄⠀⠠⠀⠑⠰⠝⠐⠨⠾</nemeth> of vectors in a vector space <i class="one-letter">V</i> is called a <dfn class="terminology">basis</dfn> for <i class="one-letter">V</i> if <nemeth class="inline">⠨⠷⠑⠂⠠⠀⠑⠆⠠⠀⠄⠄⠄⠀⠠⠀⠑⠰⠝⠐⠨⠾</nemeth> is a linearly independent set that spans <i class="one-letter">V</i>.</p>
          <article class="example example-like" data-braille="example-like" id="zHf">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">20.3.4</span>
              <span class="period">.</span>
            </h6>
            <p id="daZ">The vectors <nemeth class="inline">⠑⠂⠀⠨⠅⠀⠷⠼⠂⠠⠀⠼⠴⠠⠀⠼⠴⠾</nemeth>, <nemeth class="inline">⠑⠆⠀⠨⠅⠀⠷⠼⠴⠠⠀⠼⠂⠠⠀⠼⠴⠾</nemeth>, and <nemeth class="inline">⠑⠒⠀⠨⠅⠀⠷⠼⠴⠠⠀⠼⠴⠠⠀⠼⠂⠾</nemeth> form a basis for <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth>. The set certainly spans <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth>, since any arbitrary vector <nemeth class="inline">⠷⠭⠂⠠⠀⠭⠆⠠⠀⠭⠒⠾</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> can be written as <nemeth class="inline">⠭⠂⠑⠂⠬⠭⠆⠑⠆⠬⠭⠒⠑⠒</nemeth>. Also, none of the vectors <nemeth class="inline">⠑⠂⠠⠀⠑⠆⠠⠀⠑⠒</nemeth> can be written as a linear combination of the other two; hence, they are linearly independent. The vectors <nemeth class="inline">⠑⠂⠠⠀⠑⠆⠠⠀⠑⠒</nemeth> are not the only basis of <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth>: the set <nemeth class="inline">⠨⠷⠷⠼⠒⠠⠀⠼⠆⠠⠀⠼⠂⠾⠠⠀⠷⠼⠒⠠⠀⠼⠆⠠⠀⠼⠴⠾⠠⠀⠷⠼⠂⠠⠀⠼⠂⠠⠀⠼⠂⠾⠨⠾</nemeth> is also a basis for <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="fOo">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">20.3.5</span>
              <span class="period">.</span>
            </h6>
            <p id="Jii">Let <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth>. The sets <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠆⠻⠨⠾</nemeth> and <nemeth class="inline">⠨⠷⠼⠂⠬⠜⠆⠻⠠⠀⠼⠂⠤⠜⠆⠻⠨⠾</nemeth> are both bases of <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth>.</p>
          </article>
          <p id="ynE">From the last two examples it should be clear that a given vector space has several bases. In fact, there are an infinite number of bases for both of these examples. <em class="emphasis">In general, there is no unique basis for a vector space.</em> However, every basis of <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> consists of exactly three vectors, and every basis of <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth> consists of exactly two vectors. This is a consequence of the next proposition.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="iIU">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">20.3.6</span>
              <span class="period">.</span>
            </h6>
            <p id="McO">Let <nemeth class="inline">⠨⠷⠑⠂⠠⠀⠑⠆⠠⠀⠄⠄⠄⠀⠠⠀⠑⠰⠍⠐⠨⠾</nemeth> and <nemeth class="inline">⠨⠷⠋⠂⠠⠀⠋⠆⠠⠀⠄⠄⠄⠀⠠⠀⠋⠰⠝⠐⠨⠾</nemeth> be two bases for a vector space <i class="one-letter">V</i>. Then <nemeth class="inline">⠍⠀⠨⠅⠀⠝</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="wMz">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="veD">Since <nemeth class="inline">⠨⠷⠑⠂⠠⠀⠑⠆⠠⠀⠄⠄⠄⠀⠠⠀⠑⠰⠍⠐⠨⠾</nemeth> is a basis, it is a linearly independent set. By Proposition 20.3.3, <nemeth class="inline">⠝⠀⠐⠅⠱⠀⠍</nemeth>. Similarly, <nemeth class="inline">⠨⠷⠋⠂⠠⠀⠋⠆⠠⠀⠄⠄⠄⠀⠠⠀⠋⠰⠝⠐⠨⠾</nemeth> is a linearly independent set, and the last proposition implies that <nemeth class="inline">⠍⠀⠐⠅⠱⠀⠝</nemeth>. Consequently, <nemeth class="inline">⠍⠀⠨⠅⠀⠝</nemeth>.</p>
          </article>
          <p id="euN">If <nemeth class="inline">⠨⠷⠑⠂⠠⠀⠑⠆⠠⠀⠄⠄⠄⠀⠠⠀⠑⠰⠝⠐⠨⠾</nemeth> is a basis for a vector space <i class="one-letter">V</i>, then we say that the <dfn class="terminology">dimension</dfn> of <i class="one-letter">V</i> is <i class="one-letter">n</i> and we write <nemeth class="inline">⠙⠊⠍⠀⠠⠧⠀⠨⠅⠀⠝</nemeth>.  We will leave the proof of the following theorem as an exercise.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="xRS">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">20.3.7</span>
              <span class="period">.</span>
            </h6>
            <p id="blM">Let <i class="one-letter">V</i> be a vector space of dimension <i class="one-letter">n</i>.</p>
            <ol class="outerlist">
              <li>1. <p id="taV">If <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> is a set of linearly independent vectors for <i class="one-letter">V</i>, then <i class="one-letter">S</i> is a basis for <i class="one-letter">V</i>.</p></li>
              <li>2. <p id="Zie">If <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> spans <i class="one-letter">V</i>, then <i class="one-letter">S</i> is a basis for <i class="one-letter">V</i>.</p></li>
              <li>3. <p id="Fpn">If <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠅⠐⠨⠾</nemeth> is a set of linearly independent vectors for <i class="one-letter">V</i> with <nemeth class="inline">⠅⠀⠐⠅⠀⠝</nemeth>, then there exist vectors <nemeth class="inline">⠧⠰⠅⠬⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth> such that</p><div class="displaymath"><nemeth>⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠅⠐⠠⠀⠧⠰⠅⠬⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth></div><p data-braille="continuation">is a basis for <i class="one-letter">V</i>.</p></li>
            </ol>
          </article>
          <article class="paragraphs" id="hZa">
            <h5 class="heading">
              <span class="title">Sage.</span>
            </h5>
            <p id="oTS">Many of Sage's computations, in a wide variety of algebraic settings, come from solving problems in linear algebra. So you will find a wealth of linear algebra functionality. Further, you can use structures such as finite fields to find vector spaces in new settings.</p>
          </article>
        </section>
        <section class="reading-questions" id="xkL">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">20.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="tFL">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ypE">Why do the axioms of a vector space appear to only have four conditions, rather than the ten you may have seen the first time you saw an axiomatic definition?</p>
          </article>
          <article class="exercise exercise-like" id="ZMU">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="ewN">The set <nemeth class="inline">⠠⠧⠀⠨⠅⠀⠸⠠⠟⠷⠜⠂⠂⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠂⠂⠻⠳⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth> is a vector space. Carefully define the operations on this set that will make this possible. Describe the subspace spanned by <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠸⠥⠨⠾</nemeth>, where <nemeth class="inline">⠸⠥⠀⠨⠅⠀⠼⠒⠬⠹⠆⠌⠶⠼⠜⠂⠂⠻⠀⠈⠑⠀⠠⠧</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="FUd">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="KDW">Write a long paragraph, or a short essay, on the importance of linear independence in linear algebra.</p>
          </article>
          <article class="exercise exercise-like" id="mbm">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="qLf">Write a long paragraph, or a short essay, on the importance of spanning sets in linear algebra.</p>
          </article>
          <article class="exercise exercise-like" id="Siv">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="WSo">“Linear algebra is all about linear combinations.” Explain why you might say this.</p>
          </article>
        </section>
        <section class="exercises" id="VKI">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">20.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="mIT">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="hKS">If <i class="one-letter">F</i> is a field, show that <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is a vector space over <i class="one-letter">F</i>, where the vectors in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> are polynomials. Vector addition is polynomial addition, and scalar multiplication is defined by <nemeth class="inline">⠨⠁⠏⠷⠭⠾</nemeth> for <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="SQc">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="NSb">Prove that <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth> is a vector space.</p>
          </article>
          <article class="exercise exercise-like" id="yXl">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="tZk">Let <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠜⠒⠻⠾</nemeth> be the field generated by elements of the form <nemeth class="inline">⠁⠬⠃⠜⠆⠻⠬⠉⠜⠒⠻⠬⠙⠜⠖⠻</nemeth>, where <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠠⠀⠙</nemeth> are in <nemeth class="inline">⠸⠠⠟</nemeth>. Prove that <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠜⠒⠻⠾</nemeth> is a vector space of dimension <nemeth class="inline">⠼⠲</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>. Find a basis for <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠜⠒⠻⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Vpj"><span class="type">Hint</span>:<p id="haY"><nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠜⠒⠻⠾</nemeth> has basis <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠆⠻⠠⠀⠜⠒⠻⠠⠀⠜⠖⠻⠨⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="feu">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="agt">Prove that the complex numbers are a vector space of dimension <nemeth class="inline">⠼⠆</nemeth> over <nemeth class="inline">⠸⠠⠗</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LlD">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="GnC">Prove that the set <nemeth class="inline">⠠⠏⠰⠝</nemeth> of all polynomials of degree less than <i class="one-letter">n</i> form a subspace of the vector space <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Find a basis for <nemeth class="inline">⠠⠏⠰⠝</nemeth> and compute the dimension of <nemeth class="inline">⠠⠏⠰⠝</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="NKK"><span class="type">Hint</span>:<p id="Nih">The set <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠭⠠⠀⠭⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠭⠘⠝⠤⠂⠐⠨⠾</nemeth> is a basis for <nemeth class="inline">⠠⠏⠰⠝</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="rsM">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="muL">Let <i class="one-letter">F</i> be a field and denote the set of <i class="one-letter">n</i>-tuples of <i class="one-letter">F</i> by <nemeth class="inline">⠠⠋⠘⠝</nemeth>. Given vectors <nemeth class="inline">⠥⠀⠨⠅⠀⠷⠥⠂⠠⠀⠄⠄⠄⠀⠠⠀⠥⠰⠝⠐⠾</nemeth> and <nemeth class="inline">⠧⠀⠨⠅⠀⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠾</nemeth> in <nemeth class="inline">⠠⠋⠘⠝</nemeth> and <nemeth class="inline">⠨⠁</nemeth> in <i class="one-letter">F</i>, define vector addition by</p>
            <div class="displaymath">
              <nemeth>⠥⠬⠧⠀⠨⠅⠀⠷⠥⠂⠠⠀⠄⠄⠄⠀⠠⠀⠥⠰⠝⠐⠾⠬⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠾⠀⠨⠅⠀⠷⠥⠂⠬⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠥⠰⠝⠐⠬⠧⠰⠝⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">and scalar multiplication by</p>
            <div class="displaymath">
              <nemeth>⠁⠥⠀⠨⠅⠀⠁⠷⠥⠂⠠⠀⠄⠄⠄⠀⠠⠀⠥⠰⠝⠐⠾⠀⠨⠅⠀⠷⠁⠥⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠥⠰⠝⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <nemeth class="inline">⠠⠋⠘⠝</nemeth> is a vector space of dimension <i class="one-letter">n</i> under these operations.</p>
          </article>
          <article class="exercise exercise-like" id="XzV">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="SBU">Which of the following sets are subspaces of <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth>? If the set is indeed a subspace, find a basis for the subspace and compute its dimension.</p>
            <ol class="outerlist">
              <li>a. <p id="lww"><nemeth class="inline">⠨⠷⠷⠭⠂⠠⠀⠭⠆⠠⠀⠭⠒⠾⠒⠀⠼⠒⠭⠂⠤⠆⠭⠆⠬⠭⠒⠀⠨⠅⠀⠼⠴⠨⠾</nemeth></p></li>
              <li>b. <p id="RDF"><nemeth class="inline">⠨⠷⠷⠭⠂⠠⠀⠭⠆⠠⠀⠭⠒⠾⠒⠀⠼⠒⠭⠂⠬⠲⠭⠒⠀⠨⠅⠀⠼⠴⠠⠀⠼⠆⠭⠂⠤⠭⠆⠬⠭⠒⠀⠨⠅⠀⠼⠴⠨⠾</nemeth></p></li>
              <li>c. <p id="xKO"><nemeth class="inline">⠨⠷⠷⠭⠂⠠⠀⠭⠆⠠⠀⠭⠒⠾⠒⠀⠭⠂⠤⠆⠭⠆⠬⠆⠭⠒⠀⠨⠅⠀⠼⠆⠨⠾</nemeth></p></li>
              <li>d. <p id="dRX"><nemeth class="inline">⠨⠷⠷⠭⠂⠠⠀⠭⠆⠠⠀⠭⠒⠾⠒⠀⠼⠒⠭⠂⠤⠆⠭⠆⠘⠆⠐⠀⠨⠅⠀⠼⠴⠨⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Ggl"><span class="type">Hint</span>:<p id="tpq">(a) Subspace of dimension <nemeth class="inline">⠼⠆</nemeth> with basis <nemeth class="inline">⠨⠷⠷⠼⠂⠠⠀⠼⠴⠠⠀⠤⠼⠒⠾⠠⠀⠷⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠾⠨⠾</nemeth>; (d) not a subspace</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="DHe">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="yJd">Show that the set of all possible solutions <nemeth class="inline">⠷⠭⠠⠀⠽⠠⠀⠵⠾⠀⠈⠑⠀⠸⠠⠗⠘⠒</nemeth> of the equations</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠭⠬⠠⠃⠽⠬⠠⠉⠵⠀⠀⠨⠅⠀⠼⠴⠀⠠⠙⠭⠬⠠⠑⠽⠬⠠⠉⠵⠀⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">form a subspace of <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="jOn">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="eQm">Let <i class="one-letter">W</i> be the subset of continuous functions on <nemeth class="inline">⠈⠷⠼⠴⠠⠀⠼⠂⠈⠾</nemeth> such that <nemeth class="inline">⠋⠷⠼⠴⠾⠀⠨⠅⠀⠼⠴</nemeth>. Prove that <i class="one-letter">W</i> is a subspace of <nemeth class="inline">⠠⠉⠈⠷⠼⠴⠠⠀⠼⠂⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="PVw">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="KXv">Let <i class="one-letter">V</i> be a vector space over <i class="one-letter">F</i>. Prove that <nemeth class="inline">⠤⠷⠁⠧⠾⠀⠨⠅⠀⠷⠤⠁⠾⠧⠀⠨⠅⠀⠁⠷⠤⠧⠾</nemeth> for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> and all <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="eIV"><span class="type">Hint</span>:<p id="Zwz">Since <nemeth class="inline">⠼⠴⠀⠨⠅⠀⠁⠼⠴⠀⠨⠅⠀⠁⠷⠤⠧⠬⠧⠾⠀⠨⠅⠀⠁⠷⠤⠧⠾⠬⠁⠧</nemeth>, it follows that <nemeth class="inline">⠤⠁⠧⠀⠨⠅⠀⠁⠷⠤⠧⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="wcF">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="reE">Let <i class="one-letter">V</i> be a vector space of dimension <i class="one-letter">n</i>. Prove each of the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="iBQ">If <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> is a set of linearly independent vectors for <i class="one-letter">V</i>, then <i class="one-letter">S</i> is a basis for <i class="one-letter">V</i>.</p></li>
              <li>b. <p id="OIZ">If <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> spans <i class="one-letter">V</i>, then <i class="one-letter">S</i> is a basis for <i class="one-letter">V</i>.</p></li>
              <li>c. <p id="uQi">If <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠅⠐⠨⠾</nemeth> is a set of linearly independent vectors for <i class="one-letter">V</i> with <nemeth class="inline">⠅⠀⠐⠅⠀⠝</nemeth>, then there exist vectors <nemeth class="inline">⠧⠰⠅⠬⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth> such that</p><div class="displaymath"><nemeth>⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠅⠐⠠⠀⠧⠰⠅⠬⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth></div><p data-braille="continuation">is a basis for <i class="one-letter">V</i>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="cjO">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="XlN">Prove that any set of vectors containing <nemeth class="inline">⠼⠴</nemeth> is linearly dependent.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Xew"><span class="type">Hint</span>:<p id="FDI">Let <nemeth class="inline">⠧⠴⠀⠨⠅⠀⠼⠴⠠⠀⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠀⠈⠑⠀⠠⠧</nemeth> and <nemeth class="inline">⠨⠁⠴⠀⠌⠨⠅⠀⠼⠴⠠⠀⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠀⠈⠑⠀⠠⠋</nemeth>. Then <nemeth class="inline">⠨⠁⠴⠧⠴⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="IqX">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="DsW">Let <i class="one-letter">V</i> be a vector space. Show that <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth> is a subspace of <i class="one-letter">V</i> of dimension zero.</p>
          </article>
          <article class="exercise exercise-like" id="oyg">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="jAf">If a vector space <i class="one-letter">V</i> is spanned by <i class="one-letter">n</i> vectors, show that any set of <i class="one-letter">m</i> vectors in <i class="one-letter">V</i> must be linearly dependent for <nemeth class="inline">⠍⠀⠨⠂⠀⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="UFp">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Linear Transformations.</span>
            </h6>
            <p id="PHo">Let <i class="one-letter">V</i> and <i class="one-letter">W</i> be vector spaces over a field <i class="one-letter">F</i>, of dimensions <i class="one-letter">m</i> and <i class="one-letter">n</i>, respectively. If <nemeth class="inline">⠠⠞⠒⠀⠠⠧⠀⠫⠕⠀⠠⠺</nemeth> is a map satisfying</p>
            <div class="displaymath">
              <nemeth>⠠⠞⠷⠥⠬⠧⠾⠀⠀⠨⠅⠀⠠⠞⠷⠥⠾⠬⠠⠞⠷⠧⠾⠀⠠⠞⠷⠨⠁⠧⠾⠀⠀⠨⠅⠀⠨⠁⠠⠞⠷⠧⠾</nemeth>
            </div>
            <p data-braille="continuation">for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> and all <nemeth class="inline">⠥⠠⠀⠧⠀⠈⠑⠀⠠⠧</nemeth>, then <i class="one-letter">T</i> is called a <dfn class="terminology">linear transformation</dfn> from <i class="one-letter">V</i> into <i class="one-letter">W</i>.</p>
            <ol class="outerlist">
              <li>a. <p id="TsS">Prove that the <dfn class="terminology">kernel</dfn> of <i class="one-letter">T</i>, <nemeth class="inline">⠅⠑⠗⠀⠷⠠⠞⠾⠀⠨⠅⠀⠨⠷⠧⠀⠈⠑⠀⠠⠧⠒⠀⠠⠞⠷⠧⠾⠀⠨⠅⠀⠼⠴⠨⠾</nemeth>, is a subspace of <i class="one-letter">V</i>. The kernel of <i class="one-letter">T</i> is sometimes called the <dfn class="terminology">null space</dfn> of <i class="one-letter">T</i>.</p></li>
              <li>b. <p id="zAb">Prove that the <dfn class="terminology">range</dfn> or <dfn class="terminology">range space</dfn> of <i class="one-letter">T</i>, <nemeth class="inline">⠠⠗⠷⠠⠧⠾⠀⠨⠅⠀⠨⠷⠺⠀⠈⠑⠀⠠⠺⠒⠀⠠⠞⠷⠧⠾⠀⠨⠅⠀⠺⠋⠕⠗⠀⠎⠕⠍⠑⠧⠀⠈⠑⠀⠠⠧⠨⠾</nemeth>, is a subspace of <i class="one-letter">W</i>.</p></li>
              <li>c. <p id="fHk">Show that <nemeth class="inline">⠠⠞⠒⠀⠠⠧⠀⠫⠕⠀⠠⠺</nemeth> is injective if and only if <nemeth class="inline">⠅⠑⠗⠀⠷⠠⠞⠾⠀⠨⠅⠀⠨⠷⠼⠴⠨⠾</nemeth>.</p></li>
              <li>d. <p id="LOt">Let <nemeth class="inline">⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠅⠐⠨⠾</nemeth> be a basis for the null space of <i class="one-letter">T</i>. We can extend this basis to be a basis <nemeth class="inline">⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠅⠐⠠⠀⠧⠰⠅⠬⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠍⠐⠨⠾</nemeth> of <i class="one-letter">V</i>. Why? Prove that <nemeth class="inline">⠨⠷⠠⠞⠷⠧⠰⠅⠬⠂⠐⠾⠠⠀⠄⠄⠄⠀⠠⠀⠠⠞⠷⠧⠰⠍⠐⠾⠨⠾</nemeth> is a basis for the range of <i class="one-letter">T</i>. Conclude that the range of <i class="one-letter">T</i> has dimension <nemeth class="inline">⠍⠤⠅</nemeth>.</p></li>
              <li>e. <p id="rVC">Let <nemeth class="inline">⠙⠊⠍⠀⠠⠧⠀⠨⠅⠀⠙⠊⠍⠀⠠⠺</nemeth>. Show that a linear transformation <nemeth class="inline">⠠⠞⠒⠀⠠⠧⠀⠫⠕⠀⠠⠺</nemeth> is injective if and only if it is surjective.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="vHg"><span class="type">Hint</span>:<p id="lKR">(a) Let <nemeth class="inline">⠥⠠⠀⠧⠀⠈⠑⠀⠅⠑⠗⠀⠷⠠⠞⠾</nemeth> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>. Then</p><div class="displaymath"><nemeth>⠠⠞⠷⠥⠬⠧⠾⠀⠨⠅⠀⠠⠞⠷⠥⠾⠬⠠⠞⠷⠧⠾⠀⠨⠅⠀⠼⠴⠀⠠⠞⠷⠨⠁⠧⠾⠀⠨⠅⠀⠨⠁⠠⠞⠷⠧⠾⠀⠨⠅⠀⠨⠁⠐⠴⠀⠨⠅⠀⠼⠴</nemeth></div><p data-braille="continuation">. Hence, <nemeth class="inline">⠥⠬⠧⠠⠀⠨⠁⠧⠀⠈⠑⠀⠅⠑⠗⠀⠷⠠⠞⠾</nemeth>, and <nemeth class="inline">⠅⠑⠗⠀⠷⠠⠞⠾</nemeth> is a subspace of <i class="one-letter">V</i>.</p><p id="RSa">(c) The statement that <nemeth class="inline">⠠⠞⠷⠥⠾⠀⠨⠅⠀⠠⠞⠷⠧⠾</nemeth> is equivalent to <nemeth class="inline">⠠⠞⠷⠥⠤⠧⠾⠀⠨⠅⠀⠠⠞⠷⠥⠾⠤⠠⠞⠷⠧⠾⠀⠨⠅⠀⠼⠴</nemeth>, which is true if and only if <nemeth class="inline">⠥⠤⠧⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠥⠀⠨⠅⠀⠧</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="AMy">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="vOx">Let <i class="one-letter">V</i> and <i class="one-letter">W</i> be finite dimensional vector spaces of dimension <i class="one-letter">n</i> over a field <i class="one-letter">F</i>. Suppose that <nemeth class="inline">⠠⠞⠒⠀⠠⠧⠀⠫⠕⠀⠠⠺</nemeth> is a vector space isomorphism. If <nemeth class="inline">⠨⠷⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠨⠾</nemeth> is a basis of <i class="one-letter">V</i>, show that <nemeth class="inline">⠨⠷⠠⠞⠷⠧⠂⠾⠠⠀⠄⠄⠄⠀⠠⠀⠠⠞⠷⠧⠰⠝⠐⠾⠨⠾</nemeth> is a basis of <i class="one-letter">W</i>. Conclude that any vector space over a field <i class="one-letter">F</i> of dimension <i class="one-letter">n</i> is isomorphic to <nemeth class="inline">⠠⠋⠘⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="gTH">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Direct Sums.</span>
            </h6>
            <p id="bVG">Let <i class="one-letter">U</i> and <i class="one-letter">V</i> be subspaces of a vector space <i class="one-letter">W</i>. The sum of <i class="one-letter">U</i> and <i class="one-letter">V</i>, denoted <nemeth class="inline">⠠⠥⠬⠠⠧</nemeth>, is defined to be the set of all vectors of the form <nemeth class="inline">⠥⠬⠧</nemeth>, where <nemeth class="inline">⠥⠀⠈⠑⠀⠠⠥</nemeth> and <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="cME">Prove that <nemeth class="inline">⠠⠥⠬⠠⠧</nemeth> and <nemeth class="inline">⠠⠥⠨⠩⠠⠧</nemeth> are subspaces of <i class="one-letter">W</i>.</p></li>
              <li>b. <p id="ITN">If <nemeth class="inline">⠠⠥⠬⠠⠧⠀⠨⠅⠀⠠⠺</nemeth> and <nemeth class="inline">⠠⠥⠨⠩⠠⠧⠀⠨⠅⠀⠼⠴</nemeth>, then <i class="one-letter">W</i> is said to be the <dfn class="terminology">direct sum.</dfn> In this case, we write <nemeth class="inline">⠠⠺⠀⠨⠅⠀⠠⠥⠫⠉⠸⠫⠬⠻⠠⠧</nemeth>.  Show that every element <nemeth class="inline">⠺⠀⠈⠑⠀⠠⠺</nemeth> can be written uniquely as <nemeth class="inline">⠺⠀⠨⠅⠀⠥⠬⠧</nemeth>, where <nemeth class="inline">⠥⠀⠈⠑⠀⠠⠥</nemeth> and <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth>.</p></li>
              <li>c. <p id="paW">Let <i class="one-letter">U</i> be a subspace of dimension <i class="one-letter">k</i> of a vector space <i class="one-letter">W</i> of dimension <i class="one-letter">n</i>. Prove that there exists a subspace <i class="one-letter">V</i> of dimension <nemeth class="inline">⠝⠤⠅</nemeth> such that <nemeth class="inline">⠠⠺⠀⠨⠅⠀⠠⠥⠫⠉⠸⠫⠬⠻⠠⠧</nemeth>. Is the subspace <i class="one-letter">V</i> unique?</p></li>
              <li>d. <p id="Vif">If <i class="one-letter">U</i> and <i class="one-letter">V</i> are arbitrary subspaces of a vector space <i class="one-letter">W</i>, show that</p><div class="displaymath"><nemeth>⠙⠊⠍⠀⠷⠠⠥⠬⠠⠧⠾⠀⠨⠅⠀⠙⠊⠍⠀⠠⠥⠬⠙⠊⠍⠀⠠⠧⠤⠙⠊⠍⠀⠷⠠⠥⠨⠩⠠⠧⠾</nemeth></div><p data-braille="continuation">.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ocH"><span class="type">Hint</span>:<p id="xZj">(a) Let <nemeth class="inline">⠥⠠⠀⠥⠘⠄⠐⠀⠈⠑⠀⠠⠥</nemeth> and <nemeth class="inline">⠧⠠⠀⠧⠘⠄⠐⠀⠈⠑⠀⠠⠧</nemeth>. Then</p><div class="displaymath"><nemeth>⠷⠥⠬⠧⠾⠬⠷⠥⠘⠄⠐⠬⠧⠘⠄⠐⠾⠀⠀⠨⠅⠀⠷⠥⠬⠥⠘⠄⠐⠾⠬⠷⠧⠬⠧⠘⠄⠐⠾⠀⠈⠑⠀⠠⠥⠬⠠⠧⠀⠨⠁⠷⠥⠬⠧⠾⠀⠀⠨⠅⠀⠨⠁⠥⠬⠨⠁⠧⠀⠈⠑⠀⠠⠥⠬⠠⠧</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NaQ">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Dual Spaces.</span>
            </h6>
            <p id="IcP">Let <i class="one-letter">V</i> and <i class="one-letter">W</i> be finite dimensional vector spaces over a field <i class="one-letter">F</i>.</p>
            <ol class="outerlist">
              <li>a. <p id="ZRY">Show that the set of all linear transformations from <i class="one-letter">V</i> into <i class="one-letter">W</i>, denoted by <nemeth class="inline">⠠⠓⠕⠍⠷⠠⠧⠠⠀⠠⠺⠾</nemeth>, is a vector space over <i class="one-letter">F</i>, where we define vector addition as follows: </p><div class="displaymath"><nemeth>⠷⠠⠎⠬⠠⠞⠾⠷⠧⠾⠀⠀⠨⠅⠀⠠⠎⠷⠧⠾⠬⠠⠞⠷⠧⠾⠀⠷⠨⠁⠠⠎⠾⠷⠧⠾⠀⠀⠨⠅⠀⠨⠁⠠⠎⠷⠧⠾</nemeth></div><p data-braille="continuation">, where <nemeth class="inline">⠠⠎⠠⠀⠠⠞⠀⠈⠑⠀⠠⠓⠕⠍⠷⠠⠧⠠⠀⠠⠺⠾</nemeth>, <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>, and <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth>.</p></li>
              <li>b. <p id="FZh">Let <i class="one-letter">V</i> be an <i class="one-letter">F</i>-vector space. Define the <dfn class="terminology">dual space</dfn> of <i class="one-letter">V</i> to be <nemeth class="inline">⠠⠧⠘⠈⠼⠐⠀⠨⠅⠀⠠⠓⠕⠍⠷⠠⠧⠠⠀⠠⠋⠾</nemeth>.  Elements in the dual space of <i class="one-letter">V</i> are called <dfn class="terminology">linear functionals.</dfn> Let <nemeth class="inline">⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth> be an ordered basis for <i class="one-letter">V</i>. If <nemeth class="inline">⠧⠀⠨⠅⠀⠨⠁⠂⠧⠂⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝</nemeth> is any vector in <i class="one-letter">V</i>, define a linear functional <nemeth class="inline">⠨⠋⠰⠊⠐⠒⠀⠠⠧⠀⠫⠕⠀⠠⠋</nemeth> by <nemeth class="inline">⠋⠰⠊⠐⠷⠧⠾⠀⠨⠅⠀⠨⠁⠰⠊</nemeth>. Show that the <nemeth class="inline">⠨⠋⠰⠊</nemeth>'s form a basis for <nemeth class="inline">⠠⠧⠘⠈⠼</nemeth>. This basis is called the <dfn class="terminology">dual basis</dfn> of <nemeth class="inline">⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth> (or simply the dual basis if the context makes the meaning clear).</p></li>
              <li>c. <p id="mgq">Consider the basis <nemeth class="inline">⠨⠷⠷⠼⠒⠠⠀⠼⠂⠾⠠⠀⠷⠼⠆⠠⠀⠤⠼⠆⠾⠨⠾</nemeth> for <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>. What is the dual basis for <nemeth class="inline">⠷⠸⠠⠗⠘⠆⠐⠾⠘⠈⠼</nemeth>?</p></li>
              <li>d. <p id="Snz">Let <i class="one-letter">V</i> be a vector space of dimension <i class="one-letter">n</i> over a field <i class="one-letter">F</i> and let <nemeth class="inline">⠠⠧⠘⠈⠼⠈⠼</nemeth> be the dual space of <nemeth class="inline">⠠⠧⠘⠈⠼</nemeth>. Show that each element <nemeth class="inline">⠧⠀⠈⠑⠀⠠⠧</nemeth> gives rise to an element <nemeth class="inline">⠨⠇⠰⠧</nemeth> in <nemeth class="inline">⠠⠧⠘⠈⠼⠈⠼</nemeth> and that the map <nemeth class="inline">⠧⠀⠫⠳⠒⠒⠕⠀⠨⠇⠰⠧</nemeth> is an isomorphism of <i class="one-letter">V</i> with <nemeth class="inline">⠠⠧⠘⠈⠼⠈⠼</nemeth>.</p></li>
            </ol>
          </article>
        </section>
        <section class="references" id="jeK">
          <div class="none"><span class="type">References</span> <span class="codenumber">20.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="PlT"><div class="bibitem">[1]</div>  <div class="bibentry"> Beezer, R. <i>A First Course in Linear Algebra</i> . Available online at <a class="external" href="http://linear.ups.edu/" target="_blank"><code class="code-inline tex2jax_ignore">http://linear.ups.edu/</code></a>.  2004–2014.</div></article>
          <article class="bib" id="vtc"><div class="bibitem">[2]</div>  <div class="bibentry"> Bretscher, O. <i>Linear Algebra with Applications</i>. 4th ed. Pearson, Upper Saddle River, NJ, 2009.</div></article>
          <article class="bib" id="bAl"><div class="bibitem">[3]</div>  <div class="bibentry"> Curtis, C. W. <i>Linear Algebra: An Introductory Approach</i>. 4th ed. Springer, New York, 1984.</div></article>
          <article class="bib" id="HHu"><div class="bibitem">[4]</div>  <div class="bibentry"> Hoffman, K. and Kunze, R. <i>Linear Algebra</i>. 2nd ed. Prentice-Hall, Englewood Cliffs, NJ, 1971.</div></article>
          <article class="bib" id="nOD"><div class="bibitem">[5]</div>  <div class="bibentry"> Johnson, L. W., Riess, R. D., and Arnold, J. T. <i>Introduction to Linear Algebra</i>. 6th ed. Pearson, Upper Saddle River, NJ, 2011.</div></article>
          <article class="bib" id="TVM"><div class="bibitem">[6]</div>  <div class="bibentry"> Leon, S. J. <i>Linear Algebra with Applications</i>. 8th ed. Pearson, Upper Saddle River, NJ, 2010.</div></article>
        </section>
        <section class="section" id="GBK">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">20.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="scG">
            <p id="BDJ">Many computations, in seemingly very different areas of mathematics, can be translated into questions about linear combinations, or other areas of linear algebra. So Sage has extensive and thorough support for topics such as vector spaces.</p>
          </section>
          <section class="subsection" id="RaP">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">20.7.1</span> <span class="title">Vector Spaces</span></div>
            <p id="pZl">The simplest way to create a vector space is to begin with a field and use an exponent to indicate the number of entries in the vectors of the space.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">V = QQ^4; V
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of dimension 4 over Rational Field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;a&gt; = FiniteField(3^4)
W = F^5; W
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of dimension 5 over Finite Field in a of size 3^4
</div>
            </article>
            <p id="Wgu">Elements can be built with the vector constructor.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">v = vector(QQ, [1, 1/2, 1/3, 1/4]); v
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, 1/2, 1/3, 1/4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">v in V
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">w = vector(F, [1, a^2, a^4, a^6, a^8]); w
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, a^2, a^3 + 1, a^3 + a^2 + a + 1, a^2 + a + 2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">w in W
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="CnD">Notice that vectors are printed with parentheses, which helps distinguish them from lists (though they alos look like tuples). Vectors print horizontally, but in Sage there is no such thing as a “row vector” or a “column vector,” though once matrices get involved we need to address this distinction. Finally, notice how the elements of the finite field have been converted to an alternate representation.</p>
            <p id="iuM">Once we have vector spaces full of vectors, we can perform computations with them. Ultimately, all the action in a vector space comes back to vector addition and scalar multiplication, which together create linear combinations.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">u = vector(QQ, [ 1, 2,  3, 4,   5,  6])
v = vector(QQ, [-1, 2, -4, 8, -16, 32])
3*u - 2*v
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(5, 2, 17, -4, 47, -46)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">w = vector(F, [1, a^2, a^4, a^6,  a^8])
x = vector(F, [1,   a, 2*a,   a,    1])
y = vector(F, [1, a^3, a^6, a^9, a^12])
a^25*w + a^43*x + a^66*y
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(a^3 + a^2 + a + 2, a^2 + 2*a, 2*a^3 + a^2 + 2, 2*a^3 + a^2 + a,
 a^3 + 2*a^2 + a + 2)
</div>
            </article>
          </section>
          <section class="subsection" id="xhY">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">20.7.2</span> <span class="title">Subspaces</span></div>
            <p id="OBV">Sage can create subspaces in a variety of ways, such as in the creation of row or column spaces of matrices. However, the most direct way is to begin with a set of vectors to use as a spanning set.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">u = vector(QQ, [1, -1, 3])
v = vector(QQ, [2, 1, -1])
w = vector(QQ, [3, 0, 2])
S = (QQ^3).subspace([u, v, w]); S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of degree 3 and dimension 2 over Rational Field
Basis matrix:
[   1    0  2/3]
[   0    1 -7/3]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">3*u - 6*v + (1/2)*w in S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">vector(QQ, [4, -1, -2]) in S
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="uJe">Notice that the information printed about <code class="code-inline tex2jax_ignore">S</code> includes a “basis matrix.” The rows of this matrix are a basis for the vector space. We can get the basis, as a list of vectors (not rows of a matrix), with the <code class="code-inline tex2jax_ignore">.basis()</code> method.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S.basis()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[
(1, 0, 2/3),
(0, 1, -7/3)
]
</div>
            </article>
            <p id="aQn">Notice that Sage has converted the spanning set of three vectors into a basis with two vectors. This is partially due to the fact that the original set of three vectors is linearly dependent, but a more substantial change has occurred.</p>
            <p id="GXw">This is a good place to discuss some of the mathematics behind what makes Sage work. A vector space over an infinite field, like the rationals or the reals, is an infinite set. No matter how expansive computer memory may seem, it is still finite. How does Sage fit an infinite set into our finite machines? The main idea is that a finite-dimensional vector space has a finite set of generators, which we know as a basis. So Sage really only needs the elements of a basis (two vectors in the previous example) to be able to work with the infinitely many possibilities for elements of the subspace.</p>
            <p id="neF">Furthermore, for every basis associated with a vector space, Sage performs linear combinations to convert the given basis into another “standard” basis. This new basis has the property that as the rows of a matrix, the matrix is in reduced row-echelon form. You can see this in the basis matrix above. The reduced row-echelon form of a matrix is unique, so this standard basis allows Sage to recognize when two vector spaces are equal. Here is an example.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">u = vector(QQ, [1, -1,  3])
v = vector(QQ, [2,  1, -1])
w = vector(QQ, [3,  0,  2])
u + v == w
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S1 = (QQ^3).subspace([u, v, w])
S2 = (QQ^3).subspace([u-v, v-w, w-u])
S1 == S2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="TlO">As you might expect, it is easy to determine the dimension of a vector space.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">u = vector(QQ, [1, -1,  3,  4])
v = vector(QQ, [2,  1, -1, -2])
S = (QQ^4).subspace([u, v, 2*u + 3*v, -u + 2*v])
S.dimension()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
          </section>
          <section class="subsection" id="dph">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">20.7.3</span> <span class="title">Linear Independence</span></div>
            <p id="zsX">There are a variety of ways in Sage to determine if a set of vectors is linearly independent or not, and to find relations of linear dependence if they exist. The technique we will show here is a simple test to see if a set of vectors is linearly independent or not. Simply use the vectors as a spanning set for a subspace, and check the dimension of the subspace. The dimension equals the number of vectors in the spanning set if and only if the spanning set is linearly independent.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;a&gt; = FiniteField(3^4)
u = vector(F, [a^i for i in range(0,  7, 1)])
v = vector(F, [a^i for i in range(0, 14, 2)])
w = vector(F, [a^i for i in range(0, 21, 3)])
S = (F^7).subspace([u, v, w])
S.dimension()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S = (F^7).subspace([u, v, a^3*u + a^11*v])
S.dimension()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <p id="LHp">So the first set of vectors, <code class="code-inline tex2jax_ignore">[u, v, w]</code>, is linearly independent, while the second set, <code class="code-inline tex2jax_ignore">[u, v, a^3*u + a^11*v]</code>, is not.</p>
          </section>
          <section class="subsection" id="Jwq">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">20.7.4</span> <span class="title">Abstract Vector Spaces</span></div>
            <p id="rOy">Sage does not implement many abstract vector spaces directly, such as <nemeth class="inline">⠠⠏⠰⠝</nemeth>, the vector space of polynomials of degree <i class="one-letter">n</i> or less. This is due in part to the fact that a finite-dimensional vector space over a field <i class="one-letter">F</i> is isomorphic to the vector space <nemeth class="inline">⠠⠋⠘⠝</nemeth>. So Sage captures all the functionality of finite-dimensional vector spaces, and it is left to the user to perform the conversions according to the isomorphism (which is often trivial with the choice of an obvious basis).</p>
            <p id="XVH">However, there are instances where rings behave naturally as vector spaces and we can exploit this extra structure. We will see much more of this in the chapters on fields and Galois theory. As an example, finite fields have a single generator, and the first few powers of the generator form a basis. Consider creating a vector space from the elements of a finite field of order <nemeth class="inline">⠼⠶⠘⠖⠐⠀⠨⠅⠀⠼⠂⠂⠶⠖⠲⠔</nemeth>. As elements of a field we know they can be added, so we will <em class="emphasis">define</em> this to be the addition in our vector space. For any element of the integers mod 7, we can multiply an element of the field by the integer, so we <em class="emphasis">define</em> this to be our scalar multiplication. Later, we will be certain that these two definitions lead to a vector space, but take that for granted now. So here are some operations in our new vector space.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;a&gt; = FiniteField(7^6)
u = 2*a^5 + 6*a^4 + 2*a^3 + 3*a^2 + 2*a + 3
v = 4*a^5 + 4*a^4 + 4*a^3 + 6*a^2 + 5*a + 6
u + v
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6*a^5 + 3*a^4 + 6*a^3 + 2*a^2 + 2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">4*u
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a^5 + 3*a^4 + a^3 + 5*a^2 + a + 5
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">2*u + 5*v
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3*a^5 + 4*a^4 + 3*a^3 + a^2 + a + 1
</div>
            </article>
            <p id="EcQ">You might recognize that this looks very familiar to how we add polynomials, and multiply polynomials by scalars. You would be correct. However, notice that in this vector space construction, we are totally ignoring the possibility of multiplying two field elements together. As a vector space with scalars from <nemeth class="inline">⠸⠠⠵⠶</nemeth>, a basis is the first six powers of the generator, <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠁⠠⠀⠁⠘⠆⠐⠠⠀⠁⠘⠒⠐⠠⠀⠁⠘⠲⠐⠠⠀⠁⠘⠢⠐⠨⠾</nemeth>. (Notice how counting from zero is natural here.) You may have noticed how Sage consistently rewrites elements of fields as linear combinations — now you have a good explanation.</p>
            <p id="kjZ">Here is what Sage knows about a finite field as a vector space. First, it knows that the finite field <em class="emphasis">is</em> a vector space, and what the field of scalars is. We suppress additional output with isomorphisms between the finite field structure and the vector space structure.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">V = F.vector_space(map=False); V
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of dimension 6 over Finite Field of size 7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R = V.base_ring(); R
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Finite Field of size 7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R == FiniteField(7)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">V.dimension()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6
</div>
            </article>
            <p id="Qri">So the finite field (as a vector space) is isomorphic to the vector space <nemeth class="inline">⠷⠸⠠⠵⠶⠾⠘⠖</nemeth>. Notice this is not a ring or field isomorphism, as it does not fully address multiplication of elements, even though that is possible in the field.</p>
            <p id="wyr">Second, elements of the field can be converted to elements of the vector space easily.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x = V(u); x
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(3, 2, 3, 2, 6, 2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">y = V(v); y
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(6, 5, 6, 4, 4, 4)
</div>
            </article>
            <p id="cFA">Notice that Sage writes field elements with high powers of the generator first, while the basis in use is ordered with low powers first. The computations below illustrate the isomorphism preserving the structure between the finite field itself and its interpretation as a vector space, <nemeth class="inline">⠷⠸⠠⠵⠶⠾⠘⠖</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">V(u + v) == V(u) + V(v)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">two = R(2)
V(two*u) == two*V(u)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
          </section>
          <section class="subsection" id="pDz">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">20.7.5</span> <span class="title">Linear Algebra</span></div>
            <p id="IMJ">Sage has extensive support for linear algebra, well beyond what we have described here, or what we will need for the remaining chapters. Create vector spaces and vectors (with different fields of scalars), and then use tab-completion on these objects to explore the large sets of available commands.</p>
          </section>
        </section>
        <section class="exercises" id="BRR">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">20.8</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="thZ">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ojY">Given two subspaces <i class="one-letter">U</i> and <i class="one-letter">W</i> of a vector space <i class="one-letter">V</i>, their sum <nemeth class="inline">⠠⠥⠬⠠⠺</nemeth> can be defined as the <em class="emphasis">set</em> <nemeth class="inline">⠠⠥⠬⠠⠺⠀⠨⠅⠀⠨⠷⠥⠬⠺⠳⠥⠀⠈⠑⠀⠠⠥⠠⠀⠺⠀⠈⠑⠀⠠⠺⠨⠾</nemeth>, in other words, the set of all possible sums of an element from <i class="one-letter">U</i> and an element from <i class="one-letter">W</i>.</p>
            <p id="Urh">Notice this is not the direct sum of your text, nor the <code class="code-inline tex2jax_ignore">direct_sum()</code> method in Sage. However, you can build this subspace in Sage as follows. Grab the bases of <i class="one-letter">U</i> and <i class="one-letter">W</i> individually, as lists of vectors. Join the two lists together by just using a plus sign between them. Now build the sum subspace by creating a subspace of <i class="one-letter">V</i> spanned by this set, by using the <code class="code-inline tex2jax_ignore">.subspace()</code> method.</p>
            <p id="Ayq">In the vector space (<code class="code-inline tex2jax_ignore">QQ^10</code>) construct two subspaces that you expect to (a) have dimension <nemeth class="inline">⠼⠢</nemeth> or <nemeth class="inline">⠼⠖</nemeth> or so, and (b) have an intersection that is a vector space of dimension <nemeth class="inline">⠼⠆</nemeth> or so. Compare their individual dimensions with the dimensions of the intersection of <i class="one-letter">U</i> and <i class="one-letter">W</i> (<nemeth class="inline">⠠⠥⠨⠩⠠⠺</nemeth>, <code class="code-inline tex2jax_ignore">.intersection()</code> in Sage) and the sum <nemeth class="inline">⠠⠥⠬⠠⠺</nemeth>.</p>
            <p id="gFz">Repeat the experiment with the two original vector spaces having dimension <nemeth class="inline">⠼⠦</nemeth> or so, and with the intersection as small as possible. Form a general conjecture relating these four dimensions based on the results of your two (or more)experiments.</p>
          </article>
          <article class="exercise exercise-like" id="Zpi">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="MMI">We can construct a field in Sage that extends the rationals by adding in a fourth root of two, <nemeth class="inline">⠸⠠⠟⠈⠷⠣⠲⠜⠆⠻⠈⠾</nemeth>, with the command <code class="code-inline tex2jax_ignore">F.&lt;c&gt; = QQ[2^(1/4)]</code>. This is a vector space of dimension <nemeth class="inline">⠼⠲</nemeth> over the rationals, with a basis that is the first four powers of <nemeth class="inline">⠉⠀⠨⠅⠀⠣⠲⠜⠆⠻</nemeth> (starting with the zero power).</p>
            <p id="sTR">The command <code class="code-inline tex2jax_ignore">F.vector_space()</code> will return three items in a triple (so be careful how you handle this output to extract what you need). The first part of the output is a vector space over the rationals that is isomorphic to <code class="code-inline tex2jax_ignore">F</code>. The next is a vector space isomorphism (invertible linear transformation) from the provided vector space to the field, while the third is an isomorphism in the opposite direction. These two isomorphisms can then be used like functions. Notice that this is different behavior than for <code class="code-inline tex2jax_ignore">.vector_space()</code> applied to finite fields. Create non-trivial examples that show that these vector space isomorphisms behave as an isomorphism should. (You will have at least four such examples in a complete solution.)</p>
          </article>
          <article class="exercise exercise-like" id="Fwr">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Zba">Build a finite field <i class="one-letter">F</i> of order <nemeth class="inline">⠏⠘⠝</nemeth> in the usual way. Then construct the (multiplicative) group of all invertible (nonsingular) <nemeth class="inline">⠍⠈⠡⠍</nemeth> matrices over this field with the command <code class="code-inline tex2jax_ignore">G = GL(m, F)</code> (“the general linear group”). What is the order of this group? In other words, find a general expression for the order of this group.</p>
            <p id="Fij">Your answer should be a function of <i class="one-letter">m</i>, <i class="one-letter">p</i> and <i class="one-letter">n</i>. Provide a complete explanation of the logic behind your solution (i.e. something resembling a proof). Also provide tests in Sage that your answer is correct.</p>
            <p id="lps">Hints:  <code class="code-inline tex2jax_ignore">G.order()</code> will help you test and verify your hypotheses. Small examples in Sage (listing all the elements of the group) might aid your intuition—which is why this is a Sage exercise. Small means <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> and <nemeth class="inline">⠼⠒⠈⠡⠒</nemeth> matrices and finite fields with <nemeth class="inline">⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢</nemeth> elements, at most. Results do not really depend on each of <i class="one-letter">p</i> and <i class="one-letter">n</i>, but rather just on <nemeth class="inline">⠏⠘⠝</nemeth>.</p>
            <p id="RwB">Realize this group is interesting because it contains representations of all the invertible (i.e. 1-1 and onto) linear transformations from the (finite) vector space <nemeth class="inline">⠠⠋⠘⠍</nemeth> to itself.</p>
          </article>
          <article class="exercise exercise-like" id="lDA">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="xDK">What happens if we try to do linear algebra over a <em class="emphasis">ring</em> that is not also a <em class="emphasis">field</em>? The object that resembles a vector space, but with this one distinction, is known as a <dfn class="terminology">module</dfn>. You can build one easily with a construction like <code class="code-inline tex2jax_ignore">ZZ^3</code>. Evaluate the following to create a module and a submodule.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M = ZZ^3
u = M([1, 0, 0])
v = M([2, 2, 0])
w = M([0, 0, 4])
N = M.submodule([u, v, w])
</div>
            </article>
            <p id="dKT">Examine the bases and dimensions (aka “rank”) of the module and submodule, and check the equality of the module and submodule. How is this different than the situation for vector spaces? Can you create a third module, <code class="code-inline tex2jax_ignore">P</code>, that is a proper subset of <code class="code-inline tex2jax_ignore">M</code> and properly contains <code class="code-inline tex2jax_ignore">N</code>?</p>
          </article>
          <article class="exercise exercise-like" id="RKJ">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="JSc">A finite field, <i class="one-letter">F</i>, of order <nemeth class="inline">⠼⠢⠘⠒</nemeth> is a vector space of dimension 3 over <nemeth class="inline">⠸⠠⠵⠢</nemeth>. Suppose <i class="one-letter">a</i> is a generator of <i class="one-letter">F</i>. Let <i class="one-letter">M</i> be any <nemeth class="inline">⠼⠒⠈⠡⠒</nemeth> matrix with entries from <nemeth class="inline">⠸⠠⠵⠢</nemeth> (carefule here, the elements are from th field of scalars, not from the vector space). If we convert an element <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠋</nemeth> to a vector (relative to the basis <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠁⠠⠀⠁⠘⠆⠐⠨⠾</nemeth>), then we can multiply it by <i class="one-letter">M</i> (with <i class="one-letter">M</i> on the left) to create another vector, which we can translate to a linear combination of the basis elements, and hence another element of <i class="one-letter">F</i>. This function is a vector space homomorphism, better known as a linear transformation (implemented with a matrix representation relative to the basis <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠁⠠⠀⠁⠘⠆⠐⠨⠾</nemeth>. Notice that each part below becomes less general and more specific.</p>
            <ol class="outerlist">
              <li>a. <p id="UcM">Create a non-invertible matrix <i class="one-letter">R</i> and give examples to show that the mapping described by <i class="one-letter">R</i> is a vector space homomorphism of <i class="one-letter">F</i> into <i class="one-letter">F</i>.</p></li>
              <li>b. <p id="AjV">Create an invertible matrix <i class="one-letter">M</i>. The mapping will now be an invertible homomorphism. Determine the inverse function and give examples to verify its properties.</p></li>
              <li>c. <p id="gre">Since <i class="one-letter">a</i> is a generator of the field, the mapping <nemeth class="inline">⠁⠀⠫⠳⠒⠒⠕⠀⠁⠘⠢</nemeth> can be extended to a vector space homomorphism (i.e. a linear transformation). Find a matrix <i class="one-letter">M</i> which effects this linear transformation, and from this, determine that the homomorphism is invertible.</p></li>
              <li>d. <p id="Myn">None of the previous three parts applies to properties of multiplication in the field. However, the mapping from the third part also preserves multiplication in the field, though a proof of this may not be obvious right now. So we are saying this mapping is a field automorphism, preserving both addition and multiplication. Give a nontrivial example of the multiplication-preserving properties of this mapping. (This is the <dfn class="terminology">Frobenius map</dfn> which will be discussed further in Chapter 21.)</p></li>
            </ol>
          </article>
        </section>
      </section>
      <section class="chapter" id="pNh">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">21</span> <span class="title">Fields</span></div>
        <section class="introduction" id="GZN">
          <p id="Kqf">It is natural to ask whether or not some field <i class="one-letter">F</i> is contained in a larger field. We think of the rational numbers, which reside inside the real numbers, while in turn, the real numbers live inside the complex numbers. We can also study the fields between <nemeth class="inline">⠸⠠⠟</nemeth> and <nemeth class="inline">⠸⠠⠗</nemeth> and inquire as to the nature of these fields.</p>
          <p id="qxo">More specifically if we are given a field <i class="one-letter">F</i> and a polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>, we can ask whether or not we can find a field <i class="one-letter">E</i> containing <i class="one-letter">F</i> such that <nemeth class="inline">⠏⠷⠭⠾</nemeth> factors into linear factors over <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth>. For example, if we consider the polynomial</p>
          <div class="displaymath">
            <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠤⠢⠭⠘⠆⠐⠬⠖</nemeth>
          </div>
          <p data-braille="continuation">in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾</nemeth> factors as <nemeth class="inline">⠷⠭⠘⠆⠐⠤⠆⠾⠷⠭⠘⠆⠐⠤⠒⠾</nemeth>. However, both of these factors are irreducible in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>. If we wish to find a zero of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, we must go to a larger field. Certainly the field of real numbers will work, since</p>
          <div class="displaymath">
            <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠜⠆⠻⠾⠷⠭⠬⠜⠆⠻⠾⠷⠭⠤⠜⠒⠻⠾⠷⠭⠬⠜⠒⠻⠾</nemeth>
          </div>
          <p data-braille="continuation">. It is possible to find a smaller field in which <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a zero, namely</p>
          <div class="displaymath">
            <nemeth>⠸⠠⠟⠷⠜⠆⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth>
          </div>
          <p data-braille="continuation">. We wish to be able to compute and study such fields for arbitrary polynomials over a field <i class="one-letter">F</i>.</p>
        </section>
        <section class="section" id="Qfe">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">21.1</span> <span class="title">Extension Fields</span></div>
          <section class="introduction" id="ngW">
            <p id="WEx">A field <i class="one-letter">E</i> is an <dfn class="terminology">extension field</dfn>  of a field <i class="one-letter">F</i> if <i class="one-letter">F</i> is a subfield of <i class="one-letter">E</i>. The field <i class="one-letter">F</i> is called the <dfn class="terminology">base field</dfn>.  We write <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠑</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="qbC">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="oIb">For example, let</p>
              <div class="displaymath">
                <nemeth>⠠⠋⠀⠨⠅⠀⠸⠠⠟⠷⠜⠆⠻⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">and let <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠸⠠⠟⠷⠜⠆⠻⠬⠜⠒⠻⠾</nemeth> be the smallest field containing both <nemeth class="inline">⠸⠠⠟</nemeth> and <nemeth class="inline">⠜⠆⠻⠬⠜⠒⠻</nemeth>. Both <i class="one-letter">E</i> and <i class="one-letter">F</i> are extension fields of the rational numbers. We claim that <i class="one-letter">E</i> is an extension field of <i class="one-letter">F</i>. To see this, we need only show that <nemeth class="inline">⠜⠆⠻</nemeth> is in <i class="one-letter">E</i>. Since <nemeth class="inline">⠜⠆⠻⠬⠜⠒⠻</nemeth> is in <i class="one-letter">E</i>, <nemeth class="inline">⠼⠂⠸⠌⠷⠜⠆⠻⠬⠜⠒⠻⠾⠀⠨⠅⠀⠜⠒⠻⠤⠜⠆⠻</nemeth> must also be in <i class="one-letter">E</i>. Taking linear combinations of <nemeth class="inline">⠜⠆⠻⠬⠜⠒⠻</nemeth> and <nemeth class="inline">⠜⠒⠻⠤⠜⠆⠻</nemeth>, we find that <nemeth class="inline">⠜⠆⠻</nemeth> and <nemeth class="inline">⠜⠒⠻</nemeth> must both be in <i class="one-letter">E</i>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="WiL">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="UPk">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆⠐⠬⠭⠬⠂⠀⠈⠑⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>. Since neither 0 nor 1 is a root of this polynomial, we know that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible over <nemeth class="inline">⠸⠠⠵⠆</nemeth>. We will construct a field extension of <nemeth class="inline">⠸⠠⠵⠆</nemeth> containing an element <nemeth class="inline">⠨⠁</nemeth> such that <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. By Theorem 17.3.12, the ideal <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> generated by <nemeth class="inline">⠏⠷⠭⠾</nemeth> is maximal; hence, <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> is a field. Let <nemeth class="inline">⠋⠷⠭⠾⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> be an arbitrary element of <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>. By the division algorithm,</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠷⠭⠘⠆⠐⠬⠭⠬⠂⠾⠟⠷⠭⠾⠬⠗⠷⠭⠾</nemeth>
              </div>
              <p data-braille="continuation">, where the degree of <nemeth class="inline">⠗⠷⠭⠾</nemeth> is less than the degree of <nemeth class="inline">⠭⠘⠆⠐⠬⠭⠬⠂</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠬⠨⠨⠷⠭⠘⠆⠐⠬⠭⠬⠂⠨⠨⠾⠀⠨⠅⠀⠗⠷⠭⠾⠬⠨⠨⠷⠭⠘⠆⠐⠬⠭⠬⠂⠨⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. The only possibilities for <nemeth class="inline">⠗⠷⠭⠾</nemeth> are then <nemeth class="inline">⠼⠴</nemeth>, <nemeth class="inline">⠼⠂</nemeth>, <i class="one-letter">x</i>, and <nemeth class="inline">⠼⠂⠬⠭</nemeth>. Consequently, <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠆⠐⠬⠭⠬⠂⠨⠨⠾</nemeth> is a field with four elements and must be a field extension of <nemeth class="inline">⠸⠠⠵⠆</nemeth>, containing a zero <nemeth class="inline">⠨⠁</nemeth> of <nemeth class="inline">⠏⠷⠭⠾</nemeth>. The field <nemeth class="inline">⠸⠠⠵⠆⠷⠨⠁⠾</nemeth> consists of elements</p>
              <div class="displaymath">
                <nemeth>⠼⠴⠬⠴⠨⠁⠀⠀⠨⠅⠀⠼⠴⠀⠂⠬⠴⠨⠁⠀⠀⠨⠅⠀⠼⠂⠀⠴⠬⠂⠨⠁⠀⠀⠨⠅⠀⠨⠁⠀⠂⠬⠂⠨⠁⠀⠀⠨⠅⠀⠼⠂⠬⠨⠁</nemeth>
              </div>
              <p data-braille="continuation">. Notice that <nemeth class="inline">⠨⠁⠘⠆⠐⠬⠨⠁⠬⠂⠀⠨⠅⠀⠼⠴</nemeth>; hence, if we compute <nemeth class="inline">⠷⠼⠂⠬⠨⠁⠾⠘⠆</nemeth>,</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠂⠬⠨⠁⠾⠷⠂⠬⠨⠁⠾⠀⠨⠅⠀⠼⠂⠬⠨⠁⠬⠨⠁⠬⠷⠨⠁⠾⠘⠆⠐⠀⠨⠅⠀⠨⠁</nemeth>
              </div>
              <p data-braille="continuation">. Other calculations are accomplished in a similar manner. We summarize these computations in the following tables, which tell us how to add and multiply elements in <i class="one-letter">E</i>.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="UmH">
              <div class="displaymath">
                <nemeth>⠬⠀⠴⠀⠂⠀⠨⠁⠀⠂⠬⠨⠁⠀⠴⠀⠴⠀⠂⠀⠨⠁⠀⠂⠬⠨⠁⠀⠂⠀⠂⠀⠴⠀⠂⠬⠨⠁⠀⠨⠁⠀⠨⠁⠀⠨⠁⠀⠂⠬⠨⠁⠀⠴⠀⠂⠀⠂⠬⠨⠁⠀⠂⠬⠨⠁⠀⠨⠁⠀⠂⠀⠴</nemeth>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">21.1.3<span class="period">.</span></span><span class="space"> </span>Addition Table for <nemeth class="inline">⠸⠠⠵⠆⠷⠨⠁⠾</nemeth></figcaption>
            </figure>
            <figure class="figure figure-like" data-braille="figure-like" id="AtQ">
              <div class="displaymath">
                <nemeth>⠡⠀⠴⠀⠂⠀⠨⠁⠀⠂⠬⠨⠁⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠂⠀⠨⠁⠀⠂⠬⠨⠁⠀⠨⠁⠀⠴⠀⠨⠁⠀⠂⠬⠨⠁⠀⠂⠀⠂⠬⠨⠁⠀⠴⠀⠂⠬⠨⠁⠀⠂⠀⠨⠁</nemeth>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">21.1.4<span class="period">.</span></span><span class="space"> </span>Multiplication Table for <nemeth class="inline">⠸⠠⠵⠆⠷⠨⠁⠾</nemeth></figcaption>
            </figure>
            <p id="OZY">The following theorem, due to Kronecker, is so important and so basic to our understanding of fields that it is often known as the Fundamental Theorem of Field Theory.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="lrJ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="ldB">Let <i class="one-letter">F</i> be a field and let <nemeth class="inline">⠏⠷⠭⠾</nemeth> be a nonconstant polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Then there exists an extension field <i class="one-letter">E</i> of <i class="one-letter">F</i> and an element <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> such that <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="fCx">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="wHZ">To prove this theorem, we will employ the method that we used to construct Example 21.1.2. Clearly, we can assume that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is an irreducible polynomial. We wish to find an extension field <i class="one-letter">E</i> of <i class="one-letter">F</i> containing an element <nemeth class="inline">⠨⠁</nemeth> such that <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. The ideal <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> generated by <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a maximal ideal in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> by Theorem 17.3.12; hence, <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> is a field. We claim that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> is the desired field.</p>
              <p id="cPi">We first show that <i class="one-letter">E</i> is a field extension of <i class="one-letter">F</i>. We can define a homomorphism of commutative rings by the map <nemeth class="inline">⠨⠓⠒⠀⠠⠋⠀⠫⠕⠀⠠⠋⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>, where <nemeth class="inline">⠓⠷⠁⠾⠀⠨⠅⠀⠁⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> for <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠋</nemeth>. It is easy to check that <nemeth class="inline">⠨⠓</nemeth> is indeed a ring homomorphism. Observe that</p>
              <div class="displaymath">
                <nemeth>⠓⠷⠁⠾⠬⠓⠷⠃⠾⠀⠨⠅⠀⠷⠁⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠾⠬⠷⠃⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠾⠀⠨⠅⠀⠷⠁⠬⠃⠾⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠨⠅⠀⠓⠷⠁⠬⠃⠾</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠓⠷⠁⠾⠓⠷⠃⠾⠀⠨⠅⠀⠷⠁⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠾⠷⠃⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠾⠀⠨⠅⠀⠁⠃⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠨⠅⠀⠓⠷⠁⠃⠾</nemeth>
              </div>
              <p data-braille="continuation">. To prove that <nemeth class="inline">⠨⠓</nemeth> is one-to-one, assume that</p>
              <div class="displaymath">
                <nemeth>⠁⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠨⠅⠀⠓⠷⠁⠾⠀⠨⠅⠀⠓⠷⠃⠾⠀⠨⠅⠀⠃⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then <nemeth class="inline">⠁⠤⠃</nemeth> is a multiple of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, since it lives in the ideal <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>. Since <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a nonconstant polynomial, the only possibility is that <nemeth class="inline">⠁⠤⠃⠀⠨⠅⠀⠼⠴</nemeth>. Consequently, <nemeth class="inline">⠁⠀⠨⠅⠀⠃</nemeth> and <nemeth class="inline">⠨⠓</nemeth> is injective. Since <nemeth class="inline">⠨⠓</nemeth> is one-to-one, we can identify <i class="one-letter">F</i> with the subfield <nemeth class="inline">⠨⠷⠁⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠒⠀⠁⠀⠈⠑⠀⠠⠋⠨⠾</nemeth> of <i class="one-letter">E</i> and view <i class="one-letter">E</i> as an extension field of <i class="one-letter">F</i>.</p>
              <p id="IWr">It remains for us to prove that <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a zero <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth>. Set <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠭⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>. Then <nemeth class="inline">⠨⠁</nemeth> is in <i class="one-letter">E</i>. If <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠨⠁⠾⠀⠀⠨⠅⠀⠁⠴⠬⠁⠂⠷⠭⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠾⠬⠄⠄⠄⠬⠁⠰⠝⠐⠷⠭⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠾⠘⠝⠐⠀⠀⠀⠀⠨⠅⠀⠁⠴⠬⠷⠁⠂⠭⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠾⠬⠄⠄⠄⠬⠷⠁⠰⠝⠐⠭⠘⠝⠐⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠾⠀⠀⠀⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠀⠀⠀⠨⠅⠀⠼⠴⠬⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, we have found an element <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑⠀⠨⠅⠀⠠⠋⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> such that <nemeth class="inline">⠨⠁</nemeth> is a zero of <nemeth class="inline">⠏⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="CpU">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="AWt">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠢⠐⠬⠭⠘⠲⠐⠬⠂⠀⠈⠑⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>. Then <nemeth class="inline">⠏⠷⠭⠾</nemeth> has irreducible factors <nemeth class="inline">⠭⠘⠆⠐⠬⠭⠬⠂</nemeth> and <nemeth class="inline">⠭⠘⠒⠐⠬⠭⠬⠂</nemeth>. For a field extension <i class="one-letter">E</i> of <nemeth class="inline">⠸⠠⠵⠆</nemeth> such that <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a root in <i class="one-letter">E</i>, we can let <i class="one-letter">E</i> be either <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠆⠐⠬⠭⠬⠂⠨⠨⠾</nemeth> or <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠒⠐⠬⠭⠬⠂⠨⠨⠾</nemeth>. We will leave it as an exercise to show that <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠒⠐⠬⠭⠬⠂⠨⠨⠾</nemeth> is a field with <nemeth class="inline">⠼⠆⠘⠒⠐⠀⠨⠅⠀⠼⠦</nemeth> elements.</p>
            </article>
          </section>
          <section class="subsection" id="VUq">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.1.1</span> <span class="title">Algebraic Elements</span></div>
            <p id="lrW">An element <nemeth class="inline">⠨⠁</nemeth> in an extension field <i class="one-letter">E</i> over <i class="one-letter">F</i> is <dfn class="terminology">algebraic</dfn> over <i class="one-letter">F</i> if <nemeth class="inline">⠋⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth> for some nonzero polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>. An element in <i class="one-letter">E</i> that is not algebraic over <i class="one-letter">F</i> is <dfn class="terminology">transcendental</dfn> over <i class="one-letter">F</i>. An extension field <i class="one-letter">E</i> of a field <i class="one-letter">F</i> is an <dfn class="terminology">algebraic extension</dfn>  of <i class="one-letter">F</i> if every element in <i class="one-letter">E</i> is algebraic over <i class="one-letter">F</i>. If <i class="one-letter">E</i> is a field extension of <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> are contained in <i class="one-letter">E</i>, we denote the smallest field containing <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> by <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾</nemeth>.  If <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth> for some <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth>, then <i class="one-letter">E</i> is a <dfn class="terminology">simple extension</dfn>  of <i class="one-letter">F</i>.</p>
            <article class="example example-like" data-braille="example-like" id="RUr">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="hdC">Both <nemeth class="inline">⠜⠆⠻</nemeth> and <i class="one-letter">i</i> are algebraic over <nemeth class="inline">⠸⠠⠟</nemeth> since they are zeros of the polynomials <nemeth class="inline">⠭⠘⠆⠐⠤⠆</nemeth> and <nemeth class="inline">⠭⠘⠆⠐⠬⠂</nemeth>, respectively. Clearly <nemeth class="inline">⠨⠏</nemeth> and <i class="one-letter">e</i> are algebraic over the real numbers; however, it is a nontrivial fact that they are transcendental over <nemeth class="inline">⠸⠠⠟</nemeth>. Numbers in <nemeth class="inline">⠸⠠⠗</nemeth> that are algebraic over <nemeth class="inline">⠸⠠⠟</nemeth> are in fact quite rare. Almost all real numbers are transcendental over <nemeth class="inline">⠸⠠⠟</nemeth>.<a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-7" id="fn-7"><sup> 1 </sup></a>(In many cases we do not know whether or not a particular number is transcendental; for example, it is still not known whether <nemeth class="inline">⠨⠏⠬⠑</nemeth> is transcendental or algebraic.)</p>
              <div class="hidden-content tex2jax_ignore" id="hk-fn-7">
                <div class="fn">The probability that a real number chosen at random from the interval <nemeth class="inline">⠈⠷⠼⠴⠠⠀⠼⠂⠈⠾</nemeth> will be transcendental over the rational numbers is one.</div>
              </div>
            </article>
            <p id="Rzf">A complex number that is algebraic over <nemeth class="inline">⠸⠠⠟</nemeth> is an <dfn class="terminology">algebraic number</dfn>.  A <dfn class="terminology">transcendental number</dfn>  is an element of <nemeth class="inline">⠸⠠⠉</nemeth> that is transcendental over <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="ybA">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.8</span>
                <span class="period">.</span>
              </h6>
              <p id="NkL">We will show that <nemeth class="inline">⠜⠆⠬⠨⠜⠒⠨⠻⠻</nemeth> is algebraic over <nemeth class="inline">⠸⠠⠟</nemeth>. If <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠜⠆⠬⠨⠜⠒⠨⠻⠻</nemeth>, then <nemeth class="inline">⠨⠁⠘⠆⠐⠀⠨⠅⠀⠼⠆⠬⠜⠒⠻</nemeth>. Hence, <nemeth class="inline">⠨⠁⠘⠆⠐⠤⠆⠀⠨⠅⠀⠜⠒⠻</nemeth> and <nemeth class="inline">⠷⠨⠁⠘⠆⠐⠤⠆⠾⠘⠆⠐⠀⠨⠅⠀⠼⠒</nemeth>. Since <nemeth class="inline">⠨⠁⠘⠲⠐⠤⠲⠨⠁⠘⠆⠐⠬⠂⠀⠨⠅⠀⠼⠴</nemeth>, it must be true that <nemeth class="inline">⠨⠁</nemeth> is a zero of the polynomial <nemeth class="inline">⠭⠘⠲⠐⠤⠲⠭⠘⠆⠬⠂⠀⠈⠑⠀⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>.</p>
            </article>
            <p id="xGo">It is very easy to give an example of an extension field <i class="one-letter">E</i> over a field <i class="one-letter">F</i>, where <i class="one-letter">E</i> contains an element transcendental over <i class="one-letter">F</i>. The following theorem characterizes transcendental extensions.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="oHO">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="RkK">Let <i class="one-letter">E</i> be an extension field of <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth>. Then <nemeth class="inline">⠨⠁</nemeth> is transcendental over <i class="one-letter">F</i> if and only if <nemeth class="inline">⠠⠋⠷⠨⠁⠾</nemeth> is isomorphic to <nemeth class="inline">⠠⠋⠷⠭⠾</nemeth>, the field of fractions of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="LJG">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="pdA">Let <nemeth class="inline">⠨⠋⠰⠨⠁⠐⠒⠀⠠⠋⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠑</nemeth> be the evaluation homomorphism for <nemeth class="inline">⠨⠁</nemeth>. Then <nemeth class="inline">⠨⠁</nemeth> is transcendental over <i class="one-letter">F</i> if and only if <nemeth class="inline">⠋⠰⠨⠁⠐⠷⠏⠷⠭⠾⠾⠀⠨⠅⠀⠏⠷⠨⠁⠾⠀⠌⠨⠅⠀⠼⠴</nemeth> for all nonconstant polynomials <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>. This is true if and only if <nemeth class="inline">⠅⠑⠗⠀⠨⠋⠰⠨⠁⠐⠀⠨⠅⠀⠨⠷⠼⠴⠨⠾</nemeth>; that is, it is true exactly when <nemeth class="inline">⠨⠋⠰⠨⠁</nemeth> is one-to-one. Hence, <i class="one-letter">E</i> must contain a copy of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. The smallest field containing <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is the field of fractions <nemeth class="inline">⠠⠋⠷⠭⠾</nemeth>. By Theorem 18.1.4, <i class="one-letter">E</i> must contain a copy of this field.</p>
            </article>
            <p id="dNx">We have a more interesting situation in the case of algebraic extensions.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="UOX">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="xrT">Let <i class="one-letter">E</i> be an extension field of a field <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> with <nemeth class="inline">⠨⠁</nemeth> algebraic over <i class="one-letter">F</i>. Then there is a unique irreducible monic polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> of smallest degree such that <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. If <nemeth class="inline">⠋⠷⠭⠾</nemeth> is another polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> such that <nemeth class="inline">⠋⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾</nemeth> divides <nemeth class="inline">⠋⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="rQP">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="VkJ">Let <nemeth class="inline">⠨⠋⠰⠨⠁⠐⠒⠀⠠⠋⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠑</nemeth> be the evaluation homomorphism. The kernel of <nemeth class="inline">⠨⠋⠰⠨⠁</nemeth> is a principal ideal generated by some <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> with <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠂⠱⠀⠼⠂</nemeth>. We know that such a polynomial exists, since <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is a principal ideal domain and <nemeth class="inline">⠨⠁</nemeth> is algebraic. The ideal <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> consists exactly of those elements of <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> having <nemeth class="inline">⠨⠁</nemeth> as a zero. If <nemeth class="inline">⠋⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠋⠷⠭⠾</nemeth> is not the zero polynomial, then <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> and <nemeth class="inline">⠏⠷⠭⠾</nemeth> divides <nemeth class="inline">⠋⠷⠭⠾</nemeth>. So <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a polynomial of minimal degree having <nemeth class="inline">⠨⠁</nemeth> as a zero. Any other polynomial of the same degree having <nemeth class="inline">⠨⠁</nemeth> as a zero must have the form <nemeth class="inline">⠨⠃⠏⠷⠭⠾</nemeth> for some <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠋</nemeth>.</p>
              <p id="BrS">Suppose now that <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠗⠷⠭⠾⠎⠷⠭⠾</nemeth> is a factorization of <nemeth class="inline">⠏⠷⠭⠾</nemeth> into polynomials of lower degree. Since <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>, <nemeth class="inline">⠗⠷⠨⠁⠾⠎⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>; consequently, either <nemeth class="inline">⠗⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠎⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>, which contradicts the fact that <i class="one-letter">p</i> is of minimal degree. Therefore, <nemeth class="inline">⠏⠷⠭⠾</nemeth> must be irreducible.</p>
            </article>
            <p id="JUG">Let <i class="one-letter">E</i> be an extension field of <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> be algebraic over <i class="one-letter">F</i>. The unique monic polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> of the last theorem is called the <dfn class="terminology">minimal polynomial</dfn> for <nemeth class="inline">⠨⠁</nemeth> over <i class="one-letter">F</i>. The degree of <nemeth class="inline">⠏⠷⠭⠾</nemeth> is the <dfn class="terminology">degree of <nemeth class="inline">⠨⠁</nemeth> over <i class="one-letter">F</i></dfn>.</p>
            <article class="example example-like" data-braille="example-like" id="eiJ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="trU">Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆⠐⠤⠆</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠤⠲⠭⠘⠆⠐⠬⠂</nemeth>. These polynomials are the minimal polynomials of <nemeth class="inline">⠜⠆⠻</nemeth> and <nemeth class="inline">⠜⠆⠬⠨⠜⠒⠨⠻⠻</nemeth>, respectively.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="ZyQ">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.12</span>
                <span class="period">.</span>
              </h6>
              <p id="zhg">Let <i class="one-letter">E</i> be a field extension of <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> be algebraic over <i class="one-letter">F</i>. Then <nemeth class="inline">⠠⠋⠷⠨⠁⠾⠀⠈⠱⠈⠱⠀⠠⠋⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>, where <nemeth class="inline">⠏⠷⠭⠾</nemeth> is the minimal polynomial of <nemeth class="inline">⠨⠁</nemeth> over <i class="one-letter">F</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="hrK">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="hzb">Let <nemeth class="inline">⠨⠋⠰⠨⠁⠐⠒⠀⠠⠋⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠑</nemeth> be the evaluation homomorphism. The kernel of this map is <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth>, where <nemeth class="inline">⠏⠷⠭⠾</nemeth> is the minimal polynomial of <nemeth class="inline">⠨⠁</nemeth>. By the First Isomorphism Theorem for rings, the image of <nemeth class="inline">⠨⠋⠰⠨⠁</nemeth> in <i class="one-letter">E</i> is isomorphic to <nemeth class="inline">⠠⠋⠷⠨⠁⠾</nemeth> since it contains both <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="AWg">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.13</span>
                <span class="period">.</span>
              </h6>
              <p id="dzc">Let <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth> be a simple extension of <i class="one-letter">F</i>, where <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> is algebraic over <i class="one-letter">F</i>. Suppose that the degree of <nemeth class="inline">⠨⠁</nemeth> over <i class="one-letter">F</i> is <i class="one-letter">n</i>. Then every element <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠑</nemeth> can be expressed uniquely in the form</p>
              <div class="displaymath">
                <nemeth>⠨⠃⠀⠨⠅⠀⠃⠴⠬⠃⠂⠨⠁⠬⠄⠄⠄⠬⠃⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂</nemeth>
              </div>
              <p data-braille="continuation">for <nemeth class="inline">⠃⠰⠊⠐⠀⠈⠑⠀⠠⠋</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="XXY">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="NGk">Since <nemeth class="inline">⠋⠰⠨⠁⠐⠷⠠⠋⠈⠷⠭⠈⠾⠾⠀⠈⠱⠈⠱⠀⠠⠋⠷⠨⠁⠾</nemeth>, every element in <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth> must be of the form <nemeth class="inline">⠋⠰⠨⠁⠐⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠋⠷⠨⠁⠾</nemeth>, where <nemeth class="inline">⠋⠷⠨⠁⠾</nemeth> is a polynomial in <nemeth class="inline">⠨⠁</nemeth> with coefficients in <i class="one-letter">F</i>. Let</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠝⠐⠬⠁⠰⠝⠤⠂⠐⠭⠘⠝⠤⠂⠐⠬⠄⠄⠄⠬⠁⠴</nemeth>
              </div>
              <p data-braille="continuation">be the minimal polynomial of <nemeth class="inline">⠨⠁</nemeth>. Then <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>; hence,</p>
              <div class="displaymath">
                <nemeth>⠨⠁⠘⠝⠐⠀⠨⠅⠀⠤⠁⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂⠐⠤⠄⠄⠄⠤⠁⠴</nemeth>
              </div>
              <p data-braille="continuation">. Similarly,</p>
              <div class="displaymath">
                <nemeth>⠨⠁⠘⠝⠬⠂⠀⠀⠨⠅⠀⠨⠁⠨⠁⠘⠝⠐⠀⠀⠀⠀⠨⠅⠀⠤⠁⠰⠝⠤⠂⠐⠨⠁⠘⠝⠐⠤⠁⠰⠝⠤⠆⠐⠨⠁⠘⠝⠤⠂⠐⠤⠄⠄⠄⠤⠁⠴⠨⠁⠀⠀⠀⠀⠨⠅⠀⠤⠁⠰⠝⠤⠂⠐⠷⠤⠁⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂⠐⠤⠄⠄⠄⠤⠁⠴⠾⠤⠁⠰⠝⠤⠆⠐⠨⠁⠘⠝⠤⠂⠐⠤⠄⠄⠄⠤⠁⠴⠨⠁</nemeth>
              </div>
              <p data-braille="continuation">. Continuing in this manner, we can express every monomial <nemeth class="inline">⠨⠁⠘⠍</nemeth>, <nemeth class="inline">⠍⠀⠨⠂⠱⠀⠝</nemeth>, as a linear combination of powers of <nemeth class="inline">⠨⠁</nemeth> that are less than <i class="one-letter">n</i>. Hence, any <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠋⠷⠨⠁⠾</nemeth> can be written as</p>
              <div class="displaymath">
                <nemeth>⠨⠃⠀⠨⠅⠀⠃⠴⠬⠃⠂⠨⠁⠬⠄⠄⠄⠬⠃⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="tNt">To show uniqueness, suppose that</p>
              <div class="displaymath">
                <nemeth>⠨⠃⠀⠨⠅⠀⠃⠴⠬⠃⠂⠨⠁⠬⠄⠄⠄⠬⠃⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂⠐⠀⠨⠅⠀⠉⠴⠬⠉⠂⠨⠁⠬⠄⠄⠄⠬⠉⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂</nemeth>
              </div>
              <p data-braille="continuation">for <nemeth class="inline">⠃⠰⠊</nemeth> and <nemeth class="inline">⠉⠰⠊</nemeth> in <i class="one-letter">F</i>. Then</p>
              <div class="displaymath">
                <nemeth>⠛⠷⠭⠾⠀⠨⠅⠀⠷⠃⠴⠤⠉⠴⠾⠬⠷⠃⠂⠤⠉⠂⠾⠭⠬⠄⠄⠄⠬⠷⠃⠰⠝⠤⠂⠐⠤⠉⠰⠝⠤⠂⠐⠾⠭⠘⠝⠤⠂</nemeth>
              </div>
              <p data-braille="continuation">is in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> and <nemeth class="inline">⠛⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. Since the degree of <nemeth class="inline">⠛⠷⠭⠾</nemeth> is less than the degree of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, the irreducible polynomial of <nemeth class="inline">⠨⠁</nemeth>, <nemeth class="inline">⠛⠷⠭⠾</nemeth> must be the zero polynomial. Consequently,</p>
              <div class="displaymath">
                <nemeth>⠃⠴⠤⠉⠴⠀⠨⠅⠀⠃⠂⠤⠉⠂⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠃⠰⠝⠤⠂⠐⠤⠉⠰⠝⠤⠂⠐⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">, or <nemeth class="inline">⠃⠰⠊⠐⠀⠨⠅⠀⠉⠰⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠂</nemeth>. Therefore, we have shown uniqueness.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="KpS">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.14</span>
                <span class="period">.</span>
              </h6>
              <p id="Zzd">Since <nemeth class="inline">⠭⠘⠆⠐⠬⠂</nemeth> is irreducible over <nemeth class="inline">⠸⠠⠗</nemeth>, <nemeth class="inline">⠨⠨⠷⠭⠘⠆⠐⠬⠂⠨⠨⠾</nemeth> is a maximal ideal in <nemeth class="inline">⠸⠠⠗⠈⠷⠭⠈⠾</nemeth>. So <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠸⠠⠗⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠆⠐⠬⠂⠨⠨⠾</nemeth> is a field extension of <nemeth class="inline">⠸⠠⠗</nemeth> that contains a root of <nemeth class="inline">⠭⠘⠆⠐⠬⠂</nemeth>. Let <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠭⠬⠨⠨⠷⠭⠘⠆⠐⠬⠂⠨⠨⠾</nemeth>. We can identify <i class="one-letter">E</i> with the complex numbers. By Proposition 21.1.12, <i class="one-letter">E</i> is isomorphic to <nemeth class="inline">⠸⠠⠗⠷⠨⠁⠾⠀⠨⠅⠀⠨⠷⠁⠬⠃⠨⠁⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠗⠨⠾</nemeth>. We know that <nemeth class="inline">⠨⠁⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth> in <i class="one-letter">E</i>, since</p>
              <div class="displaymath">
                <nemeth>⠨⠁⠘⠆⠐⠬⠂⠀⠀⠨⠅⠀⠷⠭⠬⠨⠨⠷⠭⠘⠆⠐⠬⠂⠨⠨⠾⠾⠘⠆⠐⠬⠷⠂⠬⠨⠨⠷⠭⠘⠆⠐⠬⠂⠨⠨⠾⠾⠀⠀⠀⠀⠨⠅⠀⠷⠭⠘⠆⠐⠬⠂⠾⠬⠨⠨⠷⠭⠘⠆⠐⠬⠂⠨⠨⠾⠀⠀⠀⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. Hence, we have an isomorphism of <nemeth class="inline">⠸⠠⠗⠷⠨⠁⠾</nemeth> with <nemeth class="inline">⠸⠠⠉</nemeth> defined by the map that takes <nemeth class="inline">⠁⠬⠃⠨⠁</nemeth> to <nemeth class="inline">⠁⠬⠃⠊</nemeth>.</p>
            </article>
            <p id="qbP">Let <i class="one-letter">E</i> be a field extension of a field <i class="one-letter">F</i>. If we regard <i class="one-letter">E</i> as a vector space over <i class="one-letter">F</i>, then we can bring the machinery of linear algebra to bear on the problems that we will encounter in our study of fields. The elements in the field <i class="one-letter">E</i> are vectors; the elements in the field <i class="one-letter">F</i> are scalars. We can think of addition in <i class="one-letter">E</i> as adding vectors. When we multiply an element in <i class="one-letter">E</i> by an element of <i class="one-letter">F</i>, we are multiplying a vector by a scalar. This view of field extensions is especially fruitful if a field extension <i class="one-letter">E</i> of <i class="one-letter">F</i> is a finite dimensional vector space over <i class="one-letter">F</i>, and Theorem 21.1.13 states that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth> is finite dimensional vector space over <i class="one-letter">F</i> with basis <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠨⠁⠠⠀⠨⠁⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠘⠝⠤⠂⠐⠨⠾</nemeth>.</p>
            <p id="WiY">If an extension field <i class="one-letter">E</i> of a field <i class="one-letter">F</i> is a finite dimensional vector space over <i class="one-letter">F</i> of dimension <i class="one-letter">n</i>, then we say that <i class="one-letter">E</i> is a <dfn class="terminology">finite extension of degree <i class="one-letter">n</i> over <i class="one-letter">F</i></dfn>.  We write</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠝</nemeth>
            </div>
            <p data-braille="continuation">. to indicate the dimension of <i class="one-letter">E</i> over <i class="one-letter">F</i>. </p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="hdp">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.15</span>
                <span class="period">.</span>
              </h6>
              <p id="JGl">Every finite extension field <i class="one-letter">E</i> of a field <i class="one-letter">F</i> is an algebraic extension.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Efh">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="ZUC">Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth>. Since <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠝</nemeth>, the elements</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠠⠀⠨⠁⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠘⠝</nemeth>
              </div>
              <p data-braille="continuation">cannot be linearly independent. Hence, there exist <nemeth class="inline">⠁⠰⠊⠐⠀⠈⠑⠀⠠⠋</nemeth>, not all zero, such that</p>
              <div class="displaymath">
                <nemeth>⠁⠰⠝⠐⠨⠁⠘⠝⠐⠬⠁⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂⠐⠬⠄⠄⠄⠬⠁⠂⠨⠁⠬⠁⠴⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠁⠰⠝⠐⠭⠘⠝⠐⠬⠄⠄⠄⠬⠁⠴⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">is a nonzero polynomial with <nemeth class="inline">⠏⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>.</p>
            </article>
            <article class="remark remark-like" data-braille="remark-like" id="CLt">
              <h6 class="heading">
                <span class="type">Remark</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.16</span>
                <span class="period">.</span>
              </h6>
              <p id="eiW">Theorem 21.1.15 says that every finite extension of a field <i class="one-letter">F</i> is an algebraic extension. The converse is false, however. We will leave it as an exercise to show that the set of all elements in <nemeth class="inline">⠸⠠⠗</nemeth> that are algebraic over <nemeth class="inline">⠸⠠⠟</nemeth> forms an infinite field extension of <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
            </article>
            <p id="Cqh">The next theorem is a counting theorem, similar to Lagrange's Theorem in group theory. Theorem 21.1.17 will prove to be an extremely useful tool in our investigation of finite field extensions.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="Nky">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.17</span>
                <span class="period">.</span>
              </h6>
              <p id="pNu">If <i class="one-letter">E</i> is a finite extension of <i class="one-letter">F</i> and <i class="one-letter">K</i> is a finite extension of <i class="one-letter">E</i>, then <i class="one-letter">K</i> is a finite extension of <i class="one-letter">F</i> and</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠠⠅⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠈⠷⠠⠅⠒⠀⠠⠑⠈⠾⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="kmq">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="GbL">Let <nemeth class="inline">⠨⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠨⠾</nemeth> be a basis for <i class="one-letter">E</i> as a vector space over <i class="one-letter">F</i> and <nemeth class="inline">⠨⠷⠨⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠃⠰⠍⠐⠨⠾</nemeth> be a basis for <i class="one-letter">K</i> as a vector space over <i class="one-letter">E</i>. We claim that <nemeth class="inline">⠨⠷⠨⠁⠰⠊⠐⠨⠃⠰⠚⠐⠨⠾</nemeth> is a basis for <i class="one-letter">K</i> over <i class="one-letter">F</i>. We will first show that these vectors span <i class="one-letter">K</i>. Let <nemeth class="inline">⠥⠀⠈⠑⠀⠠⠅</nemeth>. Then <nemeth class="inline">⠥⠀⠨⠅⠀⠐⠨⠠⠎⠩⠚⠀⠨⠅⠀⠼⠂⠣⠍⠻⠃⠰⠚⠐⠨⠃⠰⠚</nemeth> and <nemeth class="inline">⠃⠰⠚⠐⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠁⠰⠊⠚⠐⠨⠁⠰⠊</nemeth>, where <nemeth class="inline">⠃⠰⠚⠐⠀⠈⠑⠀⠠⠑</nemeth> and <nemeth class="inline">⠁⠰⠊⠚⠐⠀⠈⠑⠀⠠⠋</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠥⠀⠨⠅⠀⠐⠨⠠⠎⠩⠚⠀⠨⠅⠀⠼⠂⠣⠍⠻⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠁⠰⠊⠚⠐⠨⠁⠰⠊⠐⠾⠨⠃⠰⠚⠐⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠠⠀⠚⠻⠁⠰⠊⠚⠐⠷⠨⠁⠰⠊⠐⠨⠃⠰⠚⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. So the <nemeth class="inline">⠍⠝</nemeth> vectors <nemeth class="inline">⠨⠁⠰⠊⠐⠨⠃⠰⠚</nemeth> must span <i class="one-letter">K</i> over <i class="one-letter">F</i>.</p>
              <p id="miU">We must show that <nemeth class="inline">⠨⠷⠨⠁⠰⠊⠐⠨⠃⠰⠚⠐⠨⠾</nemeth> are linearly independent. Recall that a set of vectors <nemeth class="inline">⠧⠂⠠⠀⠧⠆⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐</nemeth> in a vector space <i class="one-letter">V</i> are linearly independent if</p>
              <div class="displaymath">
                <nemeth>⠉⠂⠧⠂⠬⠉⠆⠧⠆⠬⠄⠄⠄⠬⠉⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">implies that</p>
              <div class="displaymath">
                <nemeth>⠉⠂⠀⠨⠅⠀⠉⠆⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠉⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. Let</p>
              <div class="displaymath">
                <nemeth>⠥⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠠⠀⠚⠻⠉⠰⠊⠚⠐⠷⠨⠁⠰⠊⠐⠨⠃⠰⠚⠐⠾⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">for <nemeth class="inline">⠉⠰⠊⠚⠐⠀⠈⠑⠀⠠⠋</nemeth>. We need to prove that all of the <nemeth class="inline">⠉⠰⠊⠚</nemeth>'s are zero. We can rewrite <i class="one-letter">u</i> as</p>
              <div class="displaymath">
                <nemeth>⠐⠨⠠⠎⠩⠚⠀⠨⠅⠀⠼⠂⠣⠍⠻⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠉⠰⠊⠚⠐⠨⠁⠰⠊⠐⠾⠨⠃⠰⠚⠐⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠐⠨⠠⠎⠩⠊⠻⠉⠰⠊⠚⠐⠨⠁⠰⠊⠀⠈⠑⠀⠠⠑</nemeth>. Since the <nemeth class="inline">⠨⠃⠰⠚</nemeth>'s are linearly independent over <i class="one-letter">E</i>, it must be the case that</p>
              <div class="displaymath">
                <nemeth>⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠉⠰⠊⠚⠐⠨⠁⠰⠊⠐⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">for all <i class="one-letter">j</i>. However, the <nemeth class="inline">⠨⠁⠰⠚</nemeth> are also linearly independent  over <i class="one-letter">F</i>. Therefore, <nemeth class="inline">⠉⠰⠊⠚⠐⠀⠨⠅⠀⠼⠴</nemeth> for all <i class="one-letter">i</i> and <i class="one-letter">j</i>, which completes the proof.</p>
            </article>
            <p id="ixq">The following corollary is easily proved using mathematical induction.</p>
            <article class="corollary theorem-like" data-braille="theorem-like" id="FFZ">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.18</span>
                <span class="period">.</span>
              </h6>
              <p id="DQZ">If <nemeth class="inline">⠠⠋⠰⠊</nemeth> is a field for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠅</nemeth> and <nemeth class="inline">⠠⠋⠰⠊⠬⠂</nemeth> is a finite extension of <nemeth class="inline">⠠⠋⠰⠊</nemeth>, then <nemeth class="inline">⠠⠋⠰⠅</nemeth> is a finite extension of <nemeth class="inline">⠠⠋⠂</nemeth> and</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠠⠋⠰⠅⠐⠒⠀⠠⠋⠂⠈⠾⠀⠨⠅⠀⠈⠷⠠⠋⠰⠅⠐⠒⠀⠠⠋⠰⠅⠤⠂⠐⠈⠾⠀⠄⠄⠄⠀⠈⠷⠠⠋⠆⠒⠀⠠⠋⠂⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="lNi">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.19</span>
                <span class="period">.</span>
              </h6>
              <p id="jYi">Let <i class="one-letter">E</i> be an extension field of <i class="one-letter">F</i>. If <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> is algebraic over <i class="one-letter">F</i> with minimal polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠋⠷⠨⠁⠾</nemeth> with minimal polynomial <nemeth class="inline">⠟⠷⠭⠾</nemeth>, then <nemeth class="inline">⠙⠑⠛⠀⠟⠷⠭⠾</nemeth> divides <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="FUu">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Sqd">We know that <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠅⠀⠈⠷⠠⠋⠷⠨⠁⠾⠒⠀⠠⠋⠈⠾</nemeth> and <nemeth class="inline">⠙⠑⠛⠀⠟⠷⠭⠾⠀⠨⠅⠀⠈⠷⠠⠋⠷⠨⠃⠾⠒⠀⠠⠋⠈⠾</nemeth>. Since <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠋⠷⠨⠃⠾⠀⠸⠐⠅⠀⠠⠋⠷⠨⠁⠾</nemeth>,</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠠⠋⠷⠨⠁⠾⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠈⠷⠠⠋⠷⠨⠁⠾⠒⠀⠠⠋⠷⠨⠃⠾⠈⠾⠈⠷⠠⠋⠷⠨⠃⠾⠒⠀⠠⠋⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="qxb">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.20</span>
                <span class="period">.</span>
              </h6>
              <p id="FGm">Let us determine an extension field of <nemeth class="inline">⠸⠠⠟</nemeth> containing <nemeth class="inline">⠜⠒⠻⠬⠜⠢⠻</nemeth>. It is easy to determine that the minimal  polynomial of <nemeth class="inline">⠜⠒⠻⠬⠜⠢⠻</nemeth> is <nemeth class="inline">⠭⠘⠲⠐⠤⠂⠖⠭⠘⠆⠬⠲</nemeth>. It follows that</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠸⠠⠟⠷⠜⠒⠻⠬⠜⠢⠻⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠲</nemeth>
              </div>
              <p data-braille="continuation">. We know that <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠒⠻⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>. Hence, <nemeth class="inline">⠜⠒⠻⠬⠜⠢⠻</nemeth> cannot be in <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠾</nemeth>. It follows that <nemeth class="inline">⠜⠢⠻</nemeth> cannot be in <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠾</nemeth> either. Therefore, <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠢⠻⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠀⠨⠅⠀⠷⠸⠠⠟⠷⠜⠒⠻⠾⠾⠷⠜⠢⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠾</nemeth> and <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠒⠻⠠⠀⠜⠢⠻⠠⠀⠜⠒⠻⠜⠢⠻⠀⠨⠅⠀⠜⠂⠢⠻⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠀⠨⠅⠀⠸⠠⠟⠷⠜⠒⠻⠬⠜⠢⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>. This example shows that it is possible that some extension <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾</nemeth> is actually a simple extension of <i class="one-letter">F</i> even though <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="WEk">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.21</span>
                <span class="period">.</span>
              </h6>
              <p id="lNv">Let us compute a basis for <nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠢⠻⠠⠀⠜⠢⠻⠊⠾</nemeth>, where <nemeth class="inline">⠜⠢⠻</nemeth> is the positive square root of <nemeth class="inline">⠼⠢</nemeth> and <nemeth class="inline">⠣⠒⠜⠢⠻</nemeth> is the real cube root of <nemeth class="inline">⠼⠢</nemeth>. We know that <nemeth class="inline">⠜⠢⠻⠊⠀⠌⠈⠑⠀⠸⠠⠟⠷⠣⠒⠜⠢⠻⠾</nemeth>, so</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠸⠠⠟⠷⠣⠒⠜⠢⠻⠠⠀⠜⠢⠻⠊⠾⠒⠀⠸⠠⠟⠷⠣⠒⠜⠢⠻⠾⠈⠾⠀⠨⠅⠀⠼⠆</nemeth>
              </div>
              <p data-braille="continuation">. It is easy to determine that <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠢⠻⠊⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠢⠻⠠⠀⠜⠢⠻⠊⠾</nemeth> over <nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠢⠻⠾</nemeth>. We also know that <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠣⠒⠜⠢⠻⠠⠀⠷⠣⠒⠜⠢⠻⠾⠘⠆⠐⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠢⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>. Hence, a basis for <nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠢⠻⠠⠀⠜⠢⠻⠊⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth> is</p>
              <div class="displaymath">
                <nemeth>⠨⠷⠼⠂⠠⠀⠜⠢⠻⠊⠠⠀⠣⠒⠜⠢⠻⠠⠀⠷⠣⠒⠜⠢⠻⠾⠘⠆⠐⠠⠀⠷⠣⠖⠜⠢⠻⠾⠘⠢⠐⠊⠠⠀⠷⠣⠖⠜⠢⠻⠾⠘⠶⠐⠊⠀⠨⠅⠀⠼⠢⠣⠖⠜⠢⠻⠊⠕⠗⠣⠖⠜⠢⠻⠊⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Notice that <nemeth class="inline">⠣⠖⠜⠢⠻⠊</nemeth> is a zero of <nemeth class="inline">⠭⠘⠖⠐⠬⠢</nemeth>. We can show that this polynomial is irreducible over <nemeth class="inline">⠸⠠⠟</nemeth> using Eisenstein's Criterion, where we let <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠢</nemeth>. Consequently,</p>
              <div class="displaymath">
                <nemeth>⠸⠠⠟⠀⠸⠐⠅⠀⠸⠠⠟⠷⠣⠖⠜⠢⠻⠊⠾⠀⠸⠐⠅⠀⠸⠠⠟⠷⠣⠒⠜⠢⠻⠠⠀⠜⠢⠻⠊⠾</nemeth>
              </div>
              <p data-braille="continuation">. But it must be the case that <nemeth class="inline">⠸⠠⠟⠷⠣⠖⠜⠢⠻⠊⠾⠀⠨⠅⠀⠸⠠⠟⠷⠣⠒⠜⠢⠻⠠⠀⠜⠢⠻⠊⠾</nemeth>, since the degree of both of these extensions is <nemeth class="inline">⠼⠖</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="trH">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.22</span>
                <span class="period">.</span>
              </h6>
              <p id="VUD">Let <i class="one-letter">E</i> be a field extension of <i class="one-letter">F</i>. Then  the following statements are equivalent.</p>
              <ol class="outerlist">
                <li>1. <p id="xyX"><i class="one-letter">E</i> is a finite extension of <i class="one-letter">F</i>.</p></li>
                <li>2. <p id="dGg">There exists a finite number of algebraic elements <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠀⠈⠑⠀⠠⠑</nemeth> such that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾</nemeth>.</p></li>
                <li>3. <p id="JNp">There exists a sequence of fields</p><div class="displaymath"><nemeth>⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾⠀⠸⠨⠂⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠤⠂⠐⠾⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠋⠷⠨⠁⠂⠾⠀⠸⠨⠂⠀⠠⠋</nemeth></div><p data-braille="continuation">, where each field <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠐⠾</nemeth> is algebraic over <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠤⠂⠐⠾</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Qtz">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="yxm">(1) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (2). Let <i class="one-letter">E</i> be a finite algebraic extension of <i class="one-letter">F</i>. Then <i class="one-letter">E</i> is a finite dimensional vector space over <i class="one-letter">F</i> and there exists a basis consisting of elements <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> in <i class="one-letter">E</i> such that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾</nemeth>. Each <nemeth class="inline">⠨⠁⠰⠊</nemeth> is algebraic over <i class="one-letter">F</i> by Theorem 21.1.15.</p>
              <p id="eEv">(2) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (3). Suppose that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾</nemeth>, where every <nemeth class="inline">⠨⠁⠰⠊</nemeth> is algebraic over <i class="one-letter">F</i>. Then</p>
              <div class="displaymath">
                <nemeth>⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾⠀⠸⠨⠂⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠤⠂⠐⠾⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠋⠷⠨⠁⠂⠾⠀⠸⠨⠂⠀⠠⠋</nemeth>
              </div>
              <p data-braille="continuation">, where each field <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠐⠾</nemeth> is algebraic over <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠤⠂⠐⠾</nemeth>.</p>
              <p id="KLE">(3) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (1). Let</p>
              <div class="displaymath">
                <nemeth>⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾⠀⠸⠨⠂⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠤⠂⠐⠾⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠋⠷⠨⠁⠂⠾⠀⠸⠨⠂⠀⠠⠋</nemeth>
              </div>
              <p data-braille="continuation">, where each field <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠐⠾</nemeth> is algebraic over <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠤⠂⠐⠾</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠐⠾⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠤⠂⠐⠾⠷⠨⠁⠰⠊⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">is simple extension and <nemeth class="inline">⠨⠁⠰⠊</nemeth> is algebraic over <nemeth class="inline">⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠤⠂⠐⠾</nemeth>, it follows that</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠐⠾⠒⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠊⠤⠂⠐⠾⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">is finite for each <i class="one-letter">i</i>. Therefore, <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth> is finite.</p>
            </article>
          </section>
          <section class="subsection" id="Cbz">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.1.2</span> <span class="title">Algebraic Closure</span></div>
            <p id="OEz">Given a field <i class="one-letter">F</i>, the question arises as to whether or not we can find a field <i class="one-letter">E</i> such that every polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a root in <i class="one-letter">E</i>. This leads us to the following theorem.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="iSC">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.23</span>
                <span class="period">.</span>
              </h6>
              <p id="CbM">Let <i class="one-letter">E</i> be an extension field of <i class="one-letter">F</i>. The set of elements in <i class="one-letter">E</i> that are algebraic over <i class="one-letter">F</i> form a field.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="wAI">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="qSN">Let <nemeth class="inline">⠨⠁⠠⠀⠨⠃⠀⠈⠑⠀⠠⠑</nemeth> be algebraic over <i class="one-letter">F</i>. Then <nemeth class="inline">⠠⠋⠷⠨⠁⠠⠀⠨⠃⠾</nemeth> is a finite extension of <i class="one-letter">F</i>. Since every element of <nemeth class="inline">⠠⠋⠷⠨⠁⠠⠀⠨⠃⠾</nemeth> is algebraic over <i class="one-letter">F</i>, <nemeth class="inline">⠨⠁⠬⠤⠨⠃</nemeth>, <nemeth class="inline">⠨⠁⠨⠃</nemeth>, and <nemeth class="inline">⠨⠁⠸⠌⠨⠃</nemeth> (<nemeth class="inline">⠨⠃⠀⠌⠨⠅⠀⠼⠴</nemeth>) are all algebraic over <i class="one-letter">F</i>. Consequently, the set of elements in <i class="one-letter">E</i> that are algebraic over <i class="one-letter">F</i> form a field.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="Hvm">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.24</span>
                <span class="period">.</span>
              </h6>
              <p id="Qfr">The set of all algebraic numbers forms a field; that is, the set of all complex numbers that are algebraic over <nemeth class="inline">⠸⠠⠟</nemeth> makes up a field.</p>
            </article>
            <p id="uLI">Let <i class="one-letter">E</i> be a field extension of a field <i class="one-letter">F</i>. We define the <dfn class="terminology">algebraic closure</dfn>  of a field <i class="one-letter">F</i> in <i class="one-letter">E</i> to be the field consisting of all elements in <i class="one-letter">E</i> that are algebraic over <i class="one-letter">F</i>. A field <i class="one-letter">F</i> is <dfn class="terminology">algebraically closed</dfn> if every nonconstant polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> has a root in <i class="one-letter">F</i>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="OZL">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.25</span>
                <span class="period">.</span>
              </h6>
              <p id="iiV">A field <i class="one-letter">F</i> is algebraically closed if and only if every nonconstant polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> factors into linear factors over <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="cHR">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="WZW">Let <i class="one-letter">F</i> be an algebraically closed field. If <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> is a nonconstant polynomial, then <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a zero in <i class="one-letter">F</i>, say <nemeth class="inline">⠨⠁</nemeth>. Therefore, <nemeth class="inline">⠭⠤⠨⠁</nemeth> must be a factor of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and so <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠟⠂⠷⠭⠾</nemeth>, where <nemeth class="inline">⠙⠑⠛⠀⠟⠂⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠏⠷⠭⠾⠤⠂</nemeth>. Continue this process with <nemeth class="inline">⠟⠂⠷⠭⠾</nemeth> to find a factorization</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠷⠭⠤⠨⠃⠾⠟⠆⠷⠭⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠙⠑⠛⠀⠟⠆⠷⠭⠾⠀⠨⠅⠀⠙⠑⠛⠀⠏⠷⠭⠾⠤⠆</nemeth>. The process must eventually stop since the degree of <nemeth class="inline">⠏⠷⠭⠾</nemeth> is finite.</p>
              <p id="Dhf">Conversely, suppose that every nonconstant polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> factors into linear factors. Let <nemeth class="inline">⠁⠭⠤⠃</nemeth> be such a factor. Then <nemeth class="inline">⠏⠷⠃⠸⠌⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. Consequently, <i class="one-letter">F</i> is algebraically closed.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="nCv">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.26</span>
                <span class="period">.</span>
              </h6>
              <p id="wmA">An algebraically closed field <i class="one-letter">F</i> has no proper algebraic extension <i class="one-letter">E</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="mbD">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="joo">Let <i class="one-letter">E</i> be an algebraic extension of <i class="one-letter">F</i>; then <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠑</nemeth>. For <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth>, the minimal polynomial of <nemeth class="inline">⠨⠁</nemeth> is <nemeth class="inline">⠭⠤⠨⠁</nemeth>. Therefore, <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> and <nemeth class="inline">⠠⠋⠀⠨⠅⠀⠠⠑</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="vgU">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.27</span>
                <span class="period">.</span>
              </h6>
              <p id="Oqe">Every field <i class="one-letter">F</i> has a unique algebraic closure.</p>
            </article>
            <p id="aSR">It is a nontrivial fact that every field has a unique algebraic closure. The proof is not extremely difficult, but requires some rather sophisticated set theory. We refer the reader to [3], [4], or [8] for a proof of this result.</p>
            <p id="Haa">We now state the Fundamental Theorem of Algebra, first proven by Gauss at the age of 22 in his doctoral thesis. This theorem states that every polynomial with coefficients in the complex numbers has a root in the complex numbers. The proof of this theorem will be given in Chapter 23.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="bod">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.1.28</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Fundamental Theorem of Algebra.</span>
              </h6>
              <p id="uxn">The field of complex numbers is algebraically closed.</p>
            </article>
          </section>
        </section>
        <section class="section" id="wmn">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">21.2</span> <span class="title">Splitting Fields</span></div>
          <p id="xkP">Let <i class="one-letter">F</i> be a field and <nemeth class="inline">⠏⠷⠭⠾</nemeth> be a nonconstant polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. We already know that we can find a field extension of <i class="one-letter">F</i> that contains a root of <nemeth class="inline">⠏⠷⠭⠾</nemeth>. However, we would like to know whether an extension <i class="one-letter">E</i> of <i class="one-letter">F</i> containing all of the roots of <nemeth class="inline">⠏⠷⠭⠾</nemeth> exists. In other words, can we find a field extension of <i class="one-letter">F</i> such that <nemeth class="inline">⠏⠷⠭⠾</nemeth> factors into a product of linear polynomials? What is the “smallest” extension containing all the roots of <nemeth class="inline">⠏⠷⠭⠾</nemeth>?</p>
          <p id="drY">Let <i class="one-letter">F</i> be a field and <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝</nemeth> be a nonconstant polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. An extension field <i class="one-letter">E</i> of <i class="one-letter">F</i> is a <dfn class="terminology">splitting field</dfn>  of <nemeth class="inline">⠏⠷⠭⠾</nemeth> if there exist elements <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> in <i class="one-letter">E</i> such that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾</nemeth> and</p>
          <div class="displaymath">
            <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠂⠾⠷⠭⠤⠨⠁⠆⠾⠀⠄⠄⠄⠀⠷⠭⠤⠨⠁⠰⠝⠐⠾</nemeth>
          </div>
          <p data-braille="continuation">. A polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> <dfn class="terminology">splits</dfn> in <i class="one-letter">E</i> if it is the product of linear factors in <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="ixd">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">21.2.1</span>
              <span class="period">.</span>
            </h6>
            <p id="RUE">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠬⠆⠭⠘⠆⠐⠤⠦</nemeth> be in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>. Then <nemeth class="inline">⠏⠷⠭⠾</nemeth> has irreducible factors <nemeth class="inline">⠭⠘⠆⠐⠤⠆</nemeth> and <nemeth class="inline">⠭⠘⠆⠐⠬⠲</nemeth>. Therefore, the field <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠊⠾</nemeth> is a splitting field for <nemeth class="inline">⠏⠷⠭⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="OEm">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">21.2.2</span>
              <span class="period">.</span>
            </h6>
            <p id="ybN">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠤⠒</nemeth> be in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>. Then <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a root in the field <nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠒⠻⠾</nemeth>. However, this field is not a splitting field for <nemeth class="inline">⠏⠷⠭⠾</nemeth> since the complex cube roots of 3,</p>
            <div class="displaymath">
              <nemeth>⠹⠤⠣⠒⠜⠒⠻⠬⠤⠷⠣⠖⠜⠒⠻⠾⠘⠢⠐⠊⠌⠆⠼</nemeth>
            </div>
            <p data-braille="continuation">, are not in <nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠒⠻⠾</nemeth>.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="RyS">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">21.2.3</span>
              <span class="period">.</span>
            </h6>
            <p id="aEw">Let <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> be a nonconstant polynomial. Then there exists a splitting field <i class="one-letter">E</i> for <nemeth class="inline">⠏⠷⠭⠾</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="IPa">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="Pvx">We will use mathematical induction on the degree of <nemeth class="inline">⠏⠷⠭⠾</nemeth>. If <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a linear polynomial and <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋</nemeth>. Assume that the theorem is true for all polynomials of degree <i class="one-letter">k</i> with <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠀⠝</nemeth> and let <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠅⠀⠝</nemeth>. We can assume that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible; otherwise, by our induction hypothesis, we are done. By Theorem 21.1.5, there exists a field <i class="one-letter">K</i> such that <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a zero <nemeth class="inline">⠨⠁⠂</nemeth> in <i class="one-letter">K</i>. Hence, <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠂⠾⠟⠷⠭⠾</nemeth>, where <nemeth class="inline">⠟⠷⠭⠾⠀⠈⠑⠀⠠⠅⠈⠷⠭⠈⠾</nemeth>. Since <nemeth class="inline">⠙⠑⠛⠀⠟⠷⠭⠾⠀⠨⠅⠀⠝⠤⠂</nemeth>, there exists a splitting field <nemeth class="inline">⠠⠑⠀⠸⠨⠂⠀⠠⠅</nemeth> of <nemeth class="inline">⠟⠷⠭⠾</nemeth> that contains the zeros <nemeth class="inline">⠨⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> of <nemeth class="inline">⠏⠷⠭⠾</nemeth> by our induction hypothesis. Consequently,</p>
            <div class="displaymath">
              <nemeth>⠠⠑⠀⠨⠅⠀⠠⠅⠷⠨⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾⠀⠨⠅⠀⠠⠋⠷⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">is a splitting field of <nemeth class="inline">⠏⠷⠭⠾</nemeth>.</p>
          </article>
          <p id="Jzh">The question of uniqueness now arises for splitting fields. This question is answered in the affirmative. Given two splitting fields <i class="one-letter">K</i> and <i class="one-letter">L</i> of a polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>, there exists a field isomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠅⠀⠫⠕⠀⠠⠇</nemeth> that preserves <i class="one-letter">F</i>. In order to prove this result, we must first prove a lemma.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="dNk">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">21.2.4</span>
              <span class="period">.</span>
            </h6>
            <p id="fop">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠑⠀⠫⠕⠀⠠⠋</nemeth> be an isomorphism of fields. Let <i class="one-letter">K</i> be an extension field of <i class="one-letter">E</i> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠅</nemeth> be algebraic over <i class="one-letter">E</i> with minimal polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth>. Suppose that <i class="one-letter">L</i> is an extension field of <i class="one-letter">F</i> such that <nemeth class="inline">⠨⠃</nemeth> is root of the polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> obtained from <nemeth class="inline">⠏⠷⠭⠾</nemeth> under the image of <nemeth class="inline">⠨⠋</nemeth>. Then <nemeth class="inline">⠨⠋</nemeth> extends to a unique isomorphism <nemeth class="inline">⠐⠨⠋⠣⠱⠻⠒⠀⠠⠑⠷⠨⠁⠾⠀⠫⠕⠀⠠⠋⠷⠨⠃⠾</nemeth> such that <nemeth class="inline">⠐⠋⠣⠱⠻⠷⠨⠁⠾⠀⠨⠅⠀⠨⠃</nemeth> and <nemeth class="inline">⠐⠨⠋⠣⠱⠻</nemeth> agrees with <nemeth class="inline">⠨⠋</nemeth> on <i class="one-letter">E</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="NyT">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="vCG">If <nemeth class="inline">⠏⠷⠭⠾</nemeth> has degree <i class="one-letter">n</i>, then by Theorem 21.1.13 we can write any element in <nemeth class="inline">⠠⠑⠷⠨⠁⠾</nemeth> as a linear combination of <nemeth class="inline">⠼⠂⠠⠀⠨⠁⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠘⠝⠤⠂</nemeth>. Therefore, the isomorphism that we are seeking must be</p>
            <div class="displaymath">
              <nemeth>⠐⠋⠣⠱⠻⠷⠁⠴⠬⠁⠂⠨⠁⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂⠐⠾⠀⠨⠅⠀⠋⠷⠁⠴⠾⠬⠋⠷⠁⠂⠾⠨⠃⠬⠄⠄⠄⠬⠋⠷⠁⠰⠝⠤⠂⠐⠾⠨⠃⠘⠝⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">, where</p>
            <div class="displaymath">
              <nemeth>⠁⠴⠬⠁⠂⠨⠁⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">is an element in <nemeth class="inline">⠠⠑⠷⠨⠁⠾</nemeth>. The fact that <nemeth class="inline">⠐⠨⠋⠣⠱⠻</nemeth> is an isomorphism could be checked by direct computation; however, it is easier to observe that <nemeth class="inline">⠐⠨⠋⠣⠱⠻</nemeth> is a composition of maps that we already know to be isomorphisms.</p>
            <p id="bJP">We can extend <nemeth class="inline">⠨⠋</nemeth> to be an isomorphism from <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth> to <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, which we will also denote by <nemeth class="inline">⠨⠋</nemeth>, by letting</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠾⠀⠨⠅⠀⠋⠷⠁⠴⠾⠬⠋⠷⠁⠂⠾⠭⠬⠄⠄⠄⠬⠋⠷⠁⠰⠝⠐⠾⠭⠘⠝</nemeth>
            </div>
            <p data-braille="continuation">. This extension agrees with the original isomorphism <nemeth class="inline">⠨⠋⠒⠀⠠⠑⠀⠫⠕⠀⠠⠋</nemeth>, since constant polynomials get mapped to constant polynomials. By assumption, <nemeth class="inline">⠋⠷⠏⠷⠭⠾⠾⠀⠨⠅⠀⠟⠷⠭⠾</nemeth>; hence, <nemeth class="inline">⠨⠋</nemeth> maps <nemeth class="inline">⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> onto <nemeth class="inline">⠨⠨⠷⠟⠷⠭⠾⠨⠨⠾</nemeth>. Consequently, we have an isomorphism <nemeth class="inline">⠨⠓⠒⠀⠠⠑⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠫⠕⠀⠠⠋⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠟⠷⠭⠾⠨⠨⠾</nemeth>. By Proposition 21.1.12, we have isomorphisms <nemeth class="inline">⠨⠎⠒⠀⠠⠑⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠫⠕⠀⠠⠑⠷⠨⠁⠾</nemeth> and <nemeth class="inline">⠨⠞⠒⠀⠠⠋⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠟⠷⠭⠾⠨⠨⠾⠀⠫⠕⠀⠠⠋⠷⠨⠃⠾</nemeth>, defined by evaluation at <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth>, respectively. Therefore, <nemeth class="inline">⠐⠨⠋⠣⠱⠻⠀⠨⠅⠀⠨⠞⠨⠓⠨⠎⠘⠤⠼⠂</nemeth> is the required isomorphism (see Figure 21.2.5).</p>
            <figure class="figure figure-like" data-braille="figure-like" id="figure-splitting-fields-1">
              <div class="displaymath">
                <nemeth>⠠⠑⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾⠀⠐⠀⠫⠕⠀⠣⠨⠓⠻⠀⠠⠋⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠟⠷⠭⠾⠨⠨⠾⠀⠀⠫⠩⠒⠒⠕⠀⠨⠎⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠨⠞⠀⠀⠀⠠⠑⠷⠨⠁⠾⠀⠐⠀⠫⠕⠀⠣⠐⠨⠋⠣⠱⠻⠻⠀⠠⠋⠷⠨⠃⠾⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠠⠑⠀⠐⠀⠫⠕⠀⠣⠨⠋⠻⠀⠠⠋</nemeth>
              </div>
              <figcaption>
                <span class="type">Figure</span>
                <span class="space"> </span>
                <span class="codenumber">21.2.5<span class="period">.</span></span>
                <span class="space"> </span>
              </figcaption>
            </figure>
            <p id="HQY">We leave the proof of uniqueness as a exercise.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="xGb">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">21.2.6</span>
              <span class="period">.</span>
            </h6>
            <p id="GLF">Let <nemeth class="inline">⠨⠋⠒⠀⠠⠑⠀⠫⠕⠀⠠⠋</nemeth> be an isomorphism of fields and let <nemeth class="inline">⠏⠷⠭⠾</nemeth> be a nonconstant polynomial in <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth> the corresponding polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> under the isomorphism. If <i class="one-letter">K</i> is a splitting field of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <i class="one-letter">L</i> is a splitting field of <nemeth class="inline">⠟⠷⠭⠾</nemeth>, then <nemeth class="inline">⠨⠋</nemeth> extends to an isomorphism <nemeth class="inline">⠨⠓⠒⠀⠠⠅⠀⠫⠕⠀⠠⠇</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="oWj">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="nYh">We will use mathematical induction on the degree of <nemeth class="inline">⠏⠷⠭⠾</nemeth>. We can assume that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible over <i class="one-letter">E</i>. Therefore, <nemeth class="inline">⠟⠷⠭⠾</nemeth> is also irreducible over <i class="one-letter">F</i>. If <nemeth class="inline">⠙⠑⠛⠀⠏⠷⠭⠾⠀⠨⠅⠀⠼⠂</nemeth>, then by the definition of a splitting field, <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠠⠑</nemeth> and <nemeth class="inline">⠠⠇⠀⠨⠅⠀⠠⠋</nemeth> and there is nothing to prove.</p>
            <p id="Ufq">Assume that the theorem holds for all polynomials of degree less than <i class="one-letter">n</i>. Since <i class="one-letter">K</i> is a splitting field of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, all of the roots of <nemeth class="inline">⠏⠷⠭⠾</nemeth> are in <i class="one-letter">K</i>. Choose one of these roots, say <nemeth class="inline">⠨⠁</nemeth>, such that <nemeth class="inline">⠠⠑⠀⠸⠐⠅⠀⠠⠑⠷⠨⠁⠾⠀⠸⠐⠅⠀⠠⠅</nemeth>. Similarly, we can find a root <nemeth class="inline">⠨⠃</nemeth> of <nemeth class="inline">⠟⠷⠭⠾</nemeth> in <i class="one-letter">L</i> such that <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠋⠷⠨⠃⠾⠀⠸⠐⠅⠀⠠⠇</nemeth>. By Lemma 21.2.4, there exists an isomorphism <nemeth class="inline">⠐⠨⠋⠣⠱⠻⠒⠀⠠⠑⠷⠨⠁⠾⠀⠫⠕⠀⠠⠋⠷⠨⠃⠾</nemeth> such that <nemeth class="inline">⠐⠋⠣⠱⠻⠷⠨⠁⠾⠀⠨⠅⠀⠨⠃</nemeth> and <nemeth class="inline">⠐⠨⠋⠣⠱⠻</nemeth> agrees with <nemeth class="inline">⠨⠋</nemeth> on <i class="one-letter">E</i>  (see Figure 21.2.7).</p>
            <figure class="figure figure-like" data-braille="figure-like" id="figure-splitting-fields-2">
              <div class="displaymath">
                <nemeth>⠠⠅⠀⠐⠀⠫⠕⠀⠣⠨⠓⠻⠀⠠⠇⠀⠀⠫⠩⠒⠒⠕⠀⠨⠎⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠨⠞⠀⠀⠀⠠⠑⠷⠨⠁⠾⠀⠐⠀⠫⠕⠀⠣⠐⠨⠋⠣⠱⠻⠻⠀⠠⠋⠷⠨⠃⠾⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠠⠑⠀⠐⠀⠫⠕⠀⠣⠨⠋⠻⠀⠠⠋</nemeth>
              </div>
              <figcaption>
                <span class="type">Figure</span>
                <span class="space"> </span>
                <span class="codenumber">21.2.7<span class="period">.</span></span>
                <span class="space"> </span>
              </figcaption>
            </figure>
            <p id="Amz">Now write <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠃⠾⠛⠷⠭⠾</nemeth>, where the degrees of <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> are less than the degrees of <nemeth class="inline">⠏⠷⠭⠾</nemeth> and <nemeth class="inline">⠟⠷⠭⠾</nemeth>, respectively. The field extension <i class="one-letter">K</i> is a splitting field for <nemeth class="inline">⠋⠷⠭⠾</nemeth> over <nemeth class="inline">⠠⠑⠷⠨⠁⠾</nemeth>, and <i class="one-letter">L</i> is a splitting field for <nemeth class="inline">⠛⠷⠭⠾</nemeth> over <nemeth class="inline">⠠⠋⠷⠨⠃⠾</nemeth>. By our induction hypothesis there exists an isomorphism <nemeth class="inline">⠨⠓⠒⠀⠠⠅⠀⠫⠕⠀⠠⠇</nemeth> such that <nemeth class="inline">⠨⠓</nemeth> agrees with <nemeth class="inline">⠐⠨⠋⠣⠱⠻</nemeth> on <nemeth class="inline">⠠⠑⠷⠨⠁⠾</nemeth>. Hence, there exists an isomorphism <nemeth class="inline">⠨⠓⠒⠀⠠⠅⠀⠫⠕⠀⠠⠇</nemeth> such that <nemeth class="inline">⠨⠓</nemeth> agrees with <nemeth class="inline">⠨⠋</nemeth> on <i class="one-letter">E</i>.</p>
          </article>
          <article class="corollary theorem-like" data-braille="theorem-like" id="JUt">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">21.2.8</span>
              <span class="period">.</span>
            </h6>
            <p id="ctJ">Let <nemeth class="inline">⠏⠷⠭⠾</nemeth> be a polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Then there exists a splitting field <i class="one-letter">K</i> of <nemeth class="inline">⠏⠷⠭⠾</nemeth> that is unique up to isomorphism.</p>
          </article>
        </section>
        <section class="section" id="ctw">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">21.3</span> <span class="title">Geometric Constructions</span></div>
          <section class="introduction" id="Tof">
            <p id="vhh">In ancient Greece, three classic problems were posed. These problems are geometric in nature and involve straightedge-and-compass constructions from what is now high school geometry; that is, we are allowed to use only a straightedge and compass to solve them. The problems can be stated as follows.</p>
            <ol class="outerlist">
              <li>1. <p id="pUy">Given an arbitrary angle, can one trisect the angle into three equal subangles using only a straightedge and compass?</p></li>
              <li>2. <p id="WbH">Given an arbitrary circle, can one construct a square with the same area using only a straightedge and compass?</p></li>
              <li>3. <p id="CiQ">Given a cube, can one construct the edge of another cube having twice the volume of the original? Again, we are only allowed to use a straightedge and compass to do the construction.</p></li>
            </ol>
            <p data-braille="continuation">After puzzling mathematicians for over two thousand years, each of these constructions was finally shown to be impossible. We will use the theory of fields to provide a proof that the solutions do not exist. It is quite remarkable that the long-sought solution to each of these three geometric problems came from abstract algebra.</p>
            <p id="boq">First, let us determine more specifically what we mean by a straightedge and compass, and also examine the nature of these problems in a bit more depth. To begin with, <em class="emphasis">a straightedge is not a ruler</em>. We cannot measure arbitrary lengths with a straightedge. It is merely a tool for drawing a line through two points. The statement that the trisection of an arbitrary angle is impossible means that there is at least one angle that is impossible to trisect with a straightedge-and-compass construction. Certainly it is possible to trisect an angle in special cases. We can construct a <nemeth class="inline">⠼⠒⠴⠘⠘⠨⠡</nemeth> angle; hence, it is possible to trisect a <nemeth class="inline">⠼⠔⠴⠘⠘⠨⠡</nemeth> angle. However, we will show that it is impossible to construct a <nemeth class="inline">⠼⠆⠴⠘⠘⠨⠡</nemeth> angle. Therefore, we cannot trisect a <nemeth class="inline">⠼⠖⠴⠘⠘⠨⠡</nemeth> angle.</p>
          </section>
          <section class="subsection" id="iiI">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.3.1</span> <span class="title">Constructible Numbers</span></div>
            <p id="nhj">A real number <nemeth class="inline">⠨⠁</nemeth> is <dfn class="terminology">constructible</dfn>  if we can construct a line segment of length <nemeth class="inline">⠳⠨⠁⠳</nemeth> in a finite number of steps from a segment of unit length by using a straightedge and compass.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="TJE">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.3.1</span>
                <span class="period">.</span>
              </h6>
              <p id="mSO">The set of all constructible real numbers forms a subfield <i class="one-letter">F</i> of the field of real numbers.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Vds">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="gtI">Let <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> be constructible numbers. We must show that <nemeth class="inline">⠨⠁⠬⠨⠃</nemeth>, <nemeth class="inline">⠨⠁⠤⠨⠃</nemeth>, <nemeth class="inline">⠨⠁⠨⠃</nemeth>, and <nemeth class="inline">⠨⠁⠸⠌⠨⠃</nemeth> (<nemeth class="inline">⠨⠃⠀⠌⠨⠅⠀⠼⠴</nemeth>) are also constructible numbers. We can assume that both <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> are positive with <nemeth class="inline">⠨⠁⠀⠨⠂⠀⠨⠃</nemeth>. It is quite obvious how to construct <nemeth class="inline">⠨⠁⠬⠨⠃</nemeth> and <nemeth class="inline">⠨⠁⠤⠨⠃</nemeth>. To find a line segment with length <nemeth class="inline">⠨⠁⠨⠃</nemeth>, we assume that <nemeth class="inline">⠨⠃⠀⠨⠂⠀⠼⠂</nemeth> and construct the triangle in Figure 21.3.2 such that triangles <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth> and <nemeth class="inline">⠫⠞⠠⠁⠠⠙⠠⠑</nemeth> are similar. Since <nemeth class="inline">⠨⠁⠸⠌⠂⠀⠨⠅⠀⠭⠸⠌⠨⠃</nemeth>, the line segment <i class="one-letter">x</i> has length <nemeth class="inline">⠨⠁⠨⠃</nemeth>. A similar construction can be made if <nemeth class="inline">⠨⠃⠀⠐⠅⠀⠼⠂</nemeth>. We will leave it as an exercise to show that the same triangle can be used to construct <nemeth class="inline">⠨⠁⠸⠌⠨⠃</nemeth> for <nemeth class="inline">⠨⠃⠀⠌⠨⠅⠀⠼⠴</nemeth>.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="rRc">
              <div data-braille="image">
                <p>Image: A triangle ADE with B on the line segment AD and C on the line segment AE such that BC is parallel to DE.  The length of AB is 1, the length of AD is beta, the length of AC is alpha and the length of AE is x.</p>
                <p>ID: fields-multiply</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">21.3.2<span class="period">.</span></span><span class="space"> </span>Construction of products</figcaption>
            </figure>
            <article class="lemma theorem-like" data-braille="theorem-like" id="fXW">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">21.3.3</span>
                <span class="period">.</span>
              </h6>
              <p id="Lvy">If <nemeth class="inline">⠨⠁</nemeth> is a constructible number, then <nemeth class="inline">⠜⠨⠁⠻</nemeth> is a constructible number.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="tGc">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="MAR">In Figure 21.3.4 the triangles <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠙</nemeth>, <nemeth class="inline">⠫⠞⠠⠃⠠⠉⠠⠙</nemeth>, and <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth> are similar; hence, <nemeth class="inline">⠼⠂⠸⠌⠭⠀⠨⠅⠀⠭⠸⠌⠨⠁</nemeth>, or <nemeth class="inline">⠭⠘⠆⠐⠀⠨⠅⠀⠨⠁</nemeth>.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="XYl">
              <div data-braille="image">
                <p>Image: A semi-circle with AC on the diameter and B on the arc of the circle.  D is on eht line segment AC such that BD is perpendicular to AC.  The length of AD is 1, the length of DC is alpha, and the length of BD is x. Triangles ABC, ADB, and BDC arre similar right triangle.</p>
                <p>ID: fields-root</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">21.3.4<span class="period">.</span></span><span class="space"> </span>Construction of roots</figcaption>
            </figure>
            <p id="Tos">By Theorem 21.3.1, we can locate in the plane any point <nemeth class="inline">⠠⠏⠀⠨⠅⠀⠷⠏⠠⠀⠟⠾</nemeth> that has rational coordinates <i class="one-letter">p</i> and <i class="one-letter">q</i>. We need to know what other points can be constructed with a compass and straightedge from points with rational coordinates.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="Mff">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">21.3.5</span>
                <span class="period">.</span>
              </h6>
              <p id="rCH">Let <i class="one-letter">F</i> be a subfield of <nemeth class="inline">⠸⠠⠗</nemeth>.</p>
              <ol class="outerlist">
                <li>1. <p id="ipZ">If a line contains two points in <i class="one-letter">F</i>, then it has the equation <nemeth class="inline">⠁⠭⠬⠃⠽⠬⠉⠀⠨⠅⠀⠼⠴</nemeth>, where <i class="one-letter">a</i>, <i class="one-letter">b</i>, and <i class="one-letter">c</i> are in <i class="one-letter">F</i>.</p></li>
                <li>2. <p id="Oxi">If a circle has a center at a point with coordinates in <i class="one-letter">F</i> and a radius that is also in <i class="one-letter">F</i>, then it has the equation <nemeth class="inline">⠭⠘⠆⠐⠬⠽⠘⠆⠐⠬⠙⠭⠬⠑⠽⠬⠋⠀⠨⠅⠀⠼⠴</nemeth>, where <i class="one-letter">d</i>, <i class="one-letter">e</i>, and <i class="one-letter">f</i> are in <i class="one-letter">F</i>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZNl">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="sIa">Let <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾</nemeth> and <nemeth class="inline">⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> be points on a line whose coordinates are in <i class="one-letter">F</i>. If <nemeth class="inline">⠭⠂⠀⠨⠅⠀⠭⠆</nemeth>, then the equation of the line through the two points is <nemeth class="inline">⠭⠤⠭⠂⠀⠨⠅⠀⠼⠴</nemeth>, which has the form <nemeth class="inline">⠁⠭⠬⠃⠽⠬⠉⠀⠨⠅⠀⠼⠴</nemeth>. If <nemeth class="inline">⠭⠂⠀⠌⠨⠅⠀⠭⠆</nemeth>, then the equation of the line through the two points is given by</p>
              <div class="displaymath">
                <nemeth>⠽⠤⠽⠂⠀⠨⠅⠀⠷⠹⠽⠆⠤⠽⠂⠌⠭⠆⠤⠭⠂⠼⠾⠷⠭⠤⠭⠂⠾</nemeth>
              </div>
              <p data-braille="continuation">, which can also be put into the proper form.</p>
              <p id="YPj">To prove the second part of the lemma, suppose that <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾</nemeth> is the center of a circle of radius <i class="one-letter">r</i>. Then the circle has the equation</p>
              <div class="displaymath">
                <nemeth>⠷⠭⠤⠭⠂⠾⠘⠆⠐⠬⠷⠽⠤⠽⠂⠾⠘⠆⠐⠤⠗⠘⠆⠐⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. This equation can easily be put into the appropriate form.</p>
            </article>
            <p id="zvB">Starting with a field of constructible numbers <i class="one-letter">F</i>, we have three possible ways of constructing additional points in <nemeth class="inline">⠸⠠⠗</nemeth> with a compass and straightedge.</p>
            <ol class="outerlist">
              <li>1. <p id="uEr">To find possible new points in <nemeth class="inline">⠸⠠⠗</nemeth>, we can take the intersection of two lines, each of which passes through two known points with coordinates in <i class="one-letter">F</i>.</p></li>
              <li>2. <p id="aLA">The intersection of a line that passes through two points that have coordinates in <i class="one-letter">F</i> and a circle whose center has coordinates in <i class="one-letter">F</i> with radius of a length in <i class="one-letter">F</i> will give new points in <nemeth class="inline">⠸⠠⠗</nemeth>.</p></li>
              <li>3. <p id="GSJ">We can obtain new points in <nemeth class="inline">⠸⠠⠗</nemeth> by intersecting two circles whose centers have coordinates in <i class="one-letter">F</i> and whose radii are of lengths in <i class="one-letter">F</i>.</p></li>
            </ol>
            <p data-braille="continuation">The first case gives no new points in <nemeth class="inline">⠸⠠⠗</nemeth>, since the solution of two equations of the form <nemeth class="inline">⠁⠭⠬⠃⠽⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> having coefficients in <i class="one-letter">F</i> will always be in <i class="one-letter">F</i>. The third case can be reduced to the second case. Let</p>
            <div class="displaymath">
              <nemeth>⠭⠘⠆⠐⠬⠽⠘⠆⠐⠬⠙⠂⠭⠬⠑⠂⠽⠬⠋⠂⠀⠨⠅⠀⠼⠴⠀⠭⠘⠆⠐⠬⠽⠘⠆⠐⠬⠙⠆⠭⠬⠑⠆⠽⠬⠋⠆⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation"> be the equations of two circles, where <nemeth class="inline">⠙⠰⠊</nemeth>, <nemeth class="inline">⠑⠰⠊</nemeth>, and <nemeth class="inline">⠋⠰⠊</nemeth> are in <i class="one-letter">F</i> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆</nemeth>. These circles have the same intersection as the circle</p>
            <div class="displaymath">
              <nemeth>⠭⠘⠆⠐⠬⠽⠘⠆⠐⠬⠙⠂⠭⠬⠑⠂⠭⠬⠋⠂⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">and the line</p>
            <div class="displaymath">
              <nemeth>⠷⠙⠂⠤⠙⠆⠾⠭⠬⠃⠷⠑⠆⠤⠑⠂⠾⠽⠬⠷⠋⠆⠤⠋⠂⠾⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. The last equation is that of the chord passing through the intersection points of the two circles. Hence, the intersection of two circles can be reduced to the case of an intersection of a line with a circle.</p>
            <p id="fCK">Considering the case of the intersection of a line and a circle, we must determine the nature of the solutions of the equations</p>
            <div class="displaymath">
              <nemeth>⠁⠭⠬⠃⠽⠬⠉⠀⠀⠨⠅⠀⠼⠴⠀⠭⠘⠆⠐⠬⠽⠘⠆⠐⠬⠙⠭⠬⠑⠽⠬⠋⠀⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. If we eliminate <i class="one-letter">y</i> from these equations, we obtain an equation of the form <nemeth class="inline">⠠⠁⠭⠘⠆⠐⠬⠠⠃⠭⠬⠠⠉⠀⠨⠅⠀⠼⠴</nemeth>, where <i class="one-letter">A</i>, <i class="one-letter">B</i>, and <i class="one-letter">C</i> are in <i class="one-letter">F</i>. The <i class="one-letter">x</i> coordinate of the intersection points is given by</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠨⠅⠀⠹⠤⠠⠃⠬⠤⠜⠠⠃⠘⠆⠐⠤⠲⠠⠁⠠⠉⠻⠌⠆⠠⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">and is in <nemeth class="inline">⠠⠋⠷⠜⠨⠁⠻⠾</nemeth>, where <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠠⠃⠘⠆⠐⠤⠲⠠⠁⠠⠉⠀⠨⠂⠀⠼⠴</nemeth>. We have proven the following lemma.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="smo">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">21.3.6</span>
                <span class="period">.</span>
              </h6>
              <p id="XJQ">Let <i class="one-letter">F</i> be a field of constructible numbers. Then the points determined by the intersections of lines and circles in <i class="one-letter">F</i> lie in the field <nemeth class="inline">⠠⠋⠷⠜⠨⠁⠻⠾</nemeth> for some <nemeth class="inline">⠨⠁</nemeth> in <i class="one-letter">F</i>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="zQN">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">21.3.7</span>
                <span class="period">.</span>
              </h6>
              <p id="SZX">A real number <nemeth class="inline">⠨⠁</nemeth> is a constructible number if and only if there exists a  sequence of fields</p>
              <div class="displaymath">
                <nemeth>⠸⠠⠟⠀⠨⠅⠀⠠⠋⠴⠀⠸⠐⠅⠀⠠⠋⠂⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠋⠰⠅</nemeth>
              </div>
              <p data-braille="continuation">such that <nemeth class="inline">⠠⠋⠰⠊⠐⠀⠨⠅⠀⠠⠋⠰⠊⠤⠂⠐⠷⠜⠨⠁⠰⠊⠐⠻⠾</nemeth> with <nemeth class="inline">⠨⠁⠰⠊⠐⠀⠈⠑⠀⠠⠋⠰⠊</nemeth> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋⠰⠅</nemeth>. In particular, there exists an integer <nemeth class="inline">⠅⠀⠨⠂⠀⠼⠴</nemeth> such that <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠨⠁⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠆⠘⠅</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="BkB">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="EWs">The existence of the <nemeth class="inline">⠠⠋⠰⠊</nemeth>'s and the <nemeth class="inline">⠨⠁⠰⠊</nemeth>'s is a direct consequence of Lemma 21.3.6 and of the fact that</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠠⠋⠰⠅⠐⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠈⠷⠠⠋⠰⠅⠐⠒⠀⠠⠋⠰⠅⠤⠂⠐⠈⠾⠈⠷⠠⠋⠰⠅⠤⠂⠐⠒⠀⠠⠋⠰⠅⠤⠆⠐⠈⠾⠀⠄⠄⠄⠀⠈⠷⠠⠋⠂⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠆⠘⠅</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="Ytx">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">21.3.8</span>
                <span class="period">.</span>
              </h6>
              <p id="IAS">The field of all constructible numbers is an algebraic extension of <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
            </article>
            <p id="LJT">As we can see by the field of constructible numbers, not every algebraic extension of a field is a finite extension.</p>
          </section>
          <section class="subsection" id="OpR">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.3.2</span> <span class="title">Doubling the Cube and Squaring the Circle</span></div>
            <p id="Efu">We are now ready to investigate the classical problems of doubling the cube and squaring the circle. We can use the field of constructible numbers to show exactly when a particular geometric construction can be accomplished.</p>
            <article class="paragraphs" id="XJD">
              <h5 class="heading">
                <span class="title">Doubling the cube is impossible.</span>
              </h5>
              <p id="kmD">Given the edge of the cube, it is impossible to construct with a straightedge and compass the edge of the cube that has twice the volume of the original cube. Let the original cube have an edge of length <nemeth class="inline">⠼⠂</nemeth> and, therefore, a volume of <nemeth class="inline">⠼⠂</nemeth>. If we could construct a cube having a volume of <nemeth class="inline">⠼⠆</nemeth>, then this new cube would have an edge of length <nemeth class="inline">⠣⠒⠜⠆⠻</nemeth>. However, <nemeth class="inline">⠣⠒⠜⠆⠻</nemeth> is a zero of the irreducible polynomial <nemeth class="inline">⠭⠘⠒⠐⠤⠆</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>; hence,</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠸⠠⠟⠷⠣⠒⠜⠆⠻⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠒</nemeth>
              </div>
              <p data-braille="continuation">This is impossible, since <nemeth class="inline">⠼⠒</nemeth> is not a power of <nemeth class="inline">⠼⠆</nemeth>.</p>
            </article>
            <article class="paragraphs" id="DQM">
              <h5 class="heading">
                <span class="title">Squaring the circle.</span>
              </h5>
              <p id="QtM">Suppose that we have a circle of radius <nemeth class="inline">⠼⠂</nemeth>. The area of the circle is <nemeth class="inline">⠨⠏</nemeth>; therefore, we must be able to construct a square with side <nemeth class="inline">⠜⠨⠏⠻</nemeth>. This is impossible since <nemeth class="inline">⠨⠏</nemeth> and consequently <nemeth class="inline">⠜⠨⠏⠻</nemeth> are both transcendental. Therefore, using a straightedge and compass, it is not possible to construct a square with the same area as the circle.</p>
            </article>
          </section>
          <section class="subsection" id="uxa">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.3.3</span> <span class="title">Trisecting an Angle</span></div>
            <p id="wAV"><em class="emphasis">Trisecting an arbitrary angle is impossible</em>. We will show that it is impossible to construct a <nemeth class="inline">⠼⠆⠴⠘⠘⠨⠡</nemeth> angle. Consequently, a <nemeth class="inline">⠼⠖⠴⠘⠘⠨⠡</nemeth> angle cannot be trisected. We first need to calculate the triple-angle formula for the cosine:</p>
            <div class="displaymath">
              <nemeth>⠉⠕⠎⠀⠼⠒⠨⠹⠀⠀⠨⠅⠀⠉⠕⠎⠀⠷⠼⠆⠨⠹⠬⠨⠹⠾⠀⠀⠀⠀⠨⠅⠀⠉⠕⠎⠀⠼⠆⠨⠹⠉⠕⠎⠀⠨⠹⠤⠎⠊⠝⠀⠼⠆⠨⠹⠎⠊⠝⠀⠨⠹⠀⠀⠀⠀⠨⠅⠀⠷⠼⠆⠉⠕⠎⠘⠆⠀⠨⠹⠤⠂⠾⠉⠕⠎⠀⠨⠹⠤⠆⠎⠊⠝⠘⠆⠀⠨⠹⠉⠕⠎⠀⠨⠹⠀⠀⠀⠀⠨⠅⠀⠷⠼⠆⠉⠕⠎⠘⠆⠀⠨⠹⠤⠂⠾⠉⠕⠎⠀⠨⠹⠤⠆⠷⠂⠤⠉⠕⠎⠘⠆⠀⠨⠹⠾⠉⠕⠎⠀⠨⠹⠀⠀⠀⠀⠨⠅⠀⠼⠲⠉⠕⠎⠘⠒⠀⠨⠹⠤⠒⠉⠕⠎⠀⠨⠹</nemeth>
            </div>
            <p data-braille="continuation">. The angle <nemeth class="inline">⠨⠹</nemeth> can be constructed if and only if <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠉⠕⠎⠀⠨⠹</nemeth> is constructible. Let <nemeth class="inline">⠨⠹⠀⠨⠅⠀⠼⠆⠴⠘⠘⠨⠡</nemeth>. Then <nemeth class="inline">⠉⠕⠎⠀⠼⠒⠨⠹⠀⠨⠅⠀⠉⠕⠎⠀⠼⠖⠴⠘⠘⠨⠡⠐⠀⠨⠅⠀⠼⠂⠸⠌⠆</nemeth>. By the triple-angle formula for the cosine,</p>
            <div class="displaymath">
              <nemeth>⠼⠲⠨⠁⠘⠒⠐⠤⠒⠨⠁⠀⠨⠅⠀⠹⠂⠌⠆⠼</nemeth>
            </div>
            <p data-braille="continuation">. Therefore, <nemeth class="inline">⠨⠁</nemeth> is a zero of <nemeth class="inline">⠼⠦⠭⠘⠒⠤⠖⠭⠤⠂</nemeth>. This polynomial has no factors in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾</nemeth>, and hence is irreducible over <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>. Thus, <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠨⠁⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠒</nemeth>. Consequently, <nemeth class="inline">⠨⠁</nemeth> cannot be a constructible number.</p>
            <article class="paragraphs" id="jXV">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="cIe">Extensions of the field of rational numbers are a central object of study in number theory, so with Sage's roots in this discipline, it is no surprise that there is extensive support for fields and for extensions of the rationals. Sage also contains an implementation of the entire field of algebraic numbers, with exact representations.</p>
            </article>
          </section>
          <section class="subsection" id="aEj">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.3.4</span> <span class="title">Historical Note</span></div>
            <p id="IPn">Algebraic number theory uses the tools of algebra to solve problems in number theory. Modern algebraic number theory began with Pierre de Fermat  (1601–1665). Certainly we can find many positive integers that satisfy the equation <nemeth class="inline">⠭⠘⠆⠐⠬⠽⠘⠆⠐⠀⠨⠅⠀⠵⠘⠆</nemeth>; Fermat conjectured that the equation <nemeth class="inline">⠭⠘⠝⠐⠬⠽⠘⠝⠐⠀⠨⠅⠀⠵⠘⠝</nemeth> has no positive integer solutions for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>. He stated in the margin of his copy of the Latin translation of Diophantus' <span class="booktitle">Arithmetica</span> that he had found a marvelous proof of this theorem, but that the margin of the book was too narrow to contain it. Building on work of other mathematicians, it was Andrew Wiles who finally succeeded in proving Fermat's Last Theorem in the 1990s. Wiles's achievement was reported on the front page of the <span class="booktitle">New York Times</span>.</p>
            <p id="oWw">Attempts to prove Fermat's Last Theorem have led to important contributions to algebraic number theory by such notable mathematicians as Leonhard Euler  (1707–1783). Significant advances in the understanding of Fermat's Last Theorem were made by Ernst Kummer  (1810–1893). Kummer's student, Leopold Kronecker  (1823–1891), became one of the leading algebraists of the nineteenth century. Kronecker's theory of ideals and his study of algebraic number theory added much to the understanding of fields.</p>
            <p id="VdF">David Hilbert  (1862–1943) and Hermann Minkowski  (1864–1909) were among the mathematicians who led the way in this subject at the beginning of the twentieth century. Hilbert and Minkowski were both mathematicians at Göttingen University in Germany. Göttingen was truly one the most important centers of mathematical research during the last two centuries. The large number of exceptional mathematicians who studied there included Gauss, Dirichlet, Riemann, Dedekind, Noether, and Weyl.</p>
            <p id="BkO">André Weil  answered questions in number theory using algebraic geometry, a field of mathematics that studies geometry by studying commutative rings. From about 1955 to 1970, Alexander Grothendieck  dominated the field of algebraic geometry. Pierre Deligne,  a student of Grothendieck, solved several of Weil's number-theoretic conjectures. One of the most recent contributions to algebra and number theory is Gerd Falting's  proof of the Mordell-Weil conjecture.  This conjecture of Mordell and Weil essentially says that certain polynomials <nemeth class="inline">⠏⠷⠭⠠⠀⠽⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠠⠀⠽⠈⠾</nemeth> have only a finite number of integral solutions.</p>
          </section>
        </section>
        <section class="reading-questions" id="Pop">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">21.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="ZTY">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="eDR">What does it mean for an extension field <i class="one-letter">E</i> of a field <i class="one-letter">F</i> to be a simple extension of <i class="one-letter">F</i>?</p>
          </article>
          <article class="exercise exercise-like" id="Gbh">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="KLa">What is the definition of a minimal polynomial of an element <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth>, where <i class="one-letter">E</i> is an extension of <i class="one-letter">F</i>, and <nemeth class="inline">⠨⠁</nemeth> is algebraic over <i class="one-letter">F</i>?</p>
          </article>
          <article class="exercise exercise-like" id="miq">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="qSj">Describe how linear algebra enters into this chapter. What critical result relies on a proof that is almost entirely linear algebra?</p>
          </article>
          <article class="exercise exercise-like" id="Spz">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="WZs">What is the definition of an algebraically closed field?</p>
          </article>
          <article class="exercise exercise-like" id="ywI">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="DgB">What is a splitting field of a polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>?</p>
          </article>
        </section>
        <section class="exercises" id="Lvl">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">21.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="kHP">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="nCI">Show that each of the following numbers is algebraic over <nemeth class="inline">⠸⠠⠟</nemeth> by finding the minimal polynomial of the number over <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="mZS"><nemeth class="inline">⠜⠂⠸⠌⠒⠬⠨⠜⠶⠨⠻⠻</nemeth></p></li>
              <li>b. <p id="Thb"><nemeth class="inline">⠜⠒⠻⠬⠣⠒⠜⠢⠻</nemeth></p></li>
              <li>c. <p id="zok"><nemeth class="inline">⠜⠒⠻⠬⠜⠆⠻⠊</nemeth></p></li>
              <li>d. <p id="fvt"><nemeth class="inline">⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹</nemeth> for <nemeth class="inline">⠨⠹⠀⠨⠅⠀⠼⠆⠨⠏⠸⠌⠝</nemeth> with <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth></p></li>
              <li>e. <p id="LCC"><nemeth class="inline">⠜⠨⠣⠒⠜⠆⠨⠻⠤⠊⠻</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ypV"><span class="type">Hint</span>:<p id="Tvw">(a) <nemeth class="inline">⠭⠘⠲⠐⠤⠷⠆⠸⠌⠒⠾⠭⠘⠆⠤⠖⠆⠸⠌⠔</nemeth>; (c) <nemeth class="inline">⠭⠘⠲⠐⠤⠆⠭⠘⠆⠬⠆⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="QOY">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="TJR">Find a basis for each of the following field extensions. What is the degree of each extension?</p>
            <ol class="outerlist">
              <li>a. <p id="wtE"><nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠖⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>b. <p id="cAN"><nemeth class="inline">⠸⠠⠟⠷⠣⠒⠜⠆⠻⠠⠀⠣⠒⠜⠒⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>c. <p id="IHW"><nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠊⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>d. <p id="oPf"><nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠠⠀⠜⠶⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>e. <p id="UWo"><nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠣⠒⠜⠆⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>f. <p id="Bdx"><nemeth class="inline">⠸⠠⠟⠷⠜⠦⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth></p></li>
              <li>g. <p id="hkG"><nemeth class="inline">⠸⠠⠟⠷⠊⠠⠀⠜⠆⠻⠬⠊⠠⠀⠜⠒⠻⠬⠊⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>h. <p id="NrP"><nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠬⠜⠢⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟⠷⠜⠢⠻⠾</nemeth></p></li>
              <li>i. <p id="tyY"><nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠜⠖⠻⠬⠜⠂⠴⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠬⠜⠢⠻⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="KEn"><span class="type">Hint</span>:<p id="zCF">(a) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠆⠻⠠⠀⠜⠒⠻⠠⠀⠜⠖⠻⠨⠾</nemeth>; (c) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠊⠠⠀⠜⠆⠻⠠⠀⠜⠆⠻⠊⠨⠾</nemeth>; (e) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠘⠂⠸⠌⠖⠐⠠⠀⠼⠆⠘⠂⠸⠌⠒⠐⠠⠀⠼⠆⠘⠂⠸⠌⠆⠐⠠⠀⠼⠆⠘⠆⠸⠌⠒⠐⠠⠀⠼⠆⠘⠢⠸⠌⠖⠐⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="wWh">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="zRa">Find the splitting field for each of the following polynomials.</p>
            <ol class="outerlist">
              <li>a. <p id="CSK"><nemeth class="inline">⠭⠘⠲⠐⠤⠂⠴⠭⠘⠆⠬⠆⠂</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>b. <p id="iZT"><nemeth class="inline">⠭⠘⠲⠐⠬⠂</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>c. <p id="Phc"><nemeth class="inline">⠭⠘⠒⠐⠬⠆⠭⠬⠆</nemeth> over <nemeth class="inline">⠸⠠⠵⠒</nemeth></p></li>
              <li>d. <p id="vol"><nemeth class="inline">⠭⠘⠒⠐⠤⠒</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="WSF"><span class="type">Hint</span>:<p id="fJO">(a) <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ddq">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="fYj">Consider the field extension <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠒⠻⠠⠀⠊⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="zYe">Find a basis for the field extension <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠒⠻⠠⠀⠊⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>. Conclude that <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠣⠲⠜⠒⠻⠠⠀⠊⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠦</nemeth>.</p></li>
              <li>b. <p id="gfn">Find all subfields <i class="one-letter">F</i> of <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠒⠻⠠⠀⠊⠾</nemeth> such that <nemeth class="inline">⠈⠷⠠⠋⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠆</nemeth>.</p></li>
              <li>c. <p id="Mmw">Find all subfields <i class="one-letter">F</i> of <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠒⠻⠠⠀⠊⠾</nemeth> such that <nemeth class="inline">⠈⠷⠠⠋⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠲</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Jkz">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Mfs">Show that <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠒⠐⠬⠭⠬⠂⠨⠨⠾</nemeth> is a field with eight elements. Construct a multiplication table for the multiplicative group of the field.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Pog"><span class="type">Hint</span>:<p id="LQX">Use the fact that the elements of <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠒⠐⠬⠭⠬⠂⠨⠨⠾</nemeth> are 0, 1, <nemeth class="inline">⠨⠁</nemeth>, <nemeth class="inline">⠼⠂⠬⠨⠁</nemeth>, <nemeth class="inline">⠨⠁⠘⠆</nemeth>, <nemeth class="inline">⠼⠂⠬⠨⠁⠘⠆</nemeth>, <nemeth class="inline">⠨⠁⠬⠨⠁⠘⠆</nemeth>, <nemeth class="inline">⠼⠂⠬⠨⠁⠬⠨⠁⠘⠆</nemeth> and the fact that <nemeth class="inline">⠨⠁⠘⠒⠐⠬⠨⠁⠬⠂⠀⠨⠅⠀⠼⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="prI">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="smB">Show that the regular <nemeth class="inline">⠼⠔</nemeth>-gon is not constructible with a straightedge and compass, but that the regular <nemeth class="inline">⠼⠆⠴</nemeth>-gon is constructible.</p>
          </article>
          <article class="exercise exercise-like" id="VyR">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="YtK">Prove that the cosine of one degree (<nemeth class="inline">⠉⠕⠎⠀⠼⠂⠘⠘⠨⠡</nemeth>) is algebraic over <nemeth class="inline">⠸⠠⠟</nemeth> but not constructible.</p>
          </article>
          <article class="exercise exercise-like" id="BGa">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="EAT">Can a cube be constructed with three times the volume of a given cube?</p>
            <div class="solutions">
              <div class="hint solution-like" id="nQQ"><span class="type">Hint</span>:<p id="rYg">False.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="hNj">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="kIc">Prove that <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠣⠲⠜⠒⠻⠠⠀⠣⠦⠜⠒⠻⠠⠀⠄⠄⠄⠾</nemeth> is an algebraic extension of <nemeth class="inline">⠸⠠⠟</nemeth> but not a finite extension.</p>
          </article>
          <article class="exercise exercise-like" id="NUs">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="QPl">Prove or disprove: <nemeth class="inline">⠨⠏</nemeth> is algebraic over <nemeth class="inline">⠸⠠⠟⠷⠨⠏⠘⠒⠐⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ubB">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="wWu">Let <nemeth class="inline">⠏⠷⠭⠾</nemeth> be a nonconstant polynomial of degree <i class="one-letter">n</i> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Prove that there exists a splitting field <i class="one-letter">E</i> for <nemeth class="inline">⠏⠷⠭⠾</nemeth> such that <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠐⠅⠱⠀⠝⠯</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="aiK">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="ddD">Prove or disprove: <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾⠀⠈⠱⠈⠱⠀⠸⠠⠟⠷⠜⠒⠻⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="GpT">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="JkM">Prove that the fields <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠒⠻⠾</nemeth> and <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠒⠻⠊⠾</nemeth> are isomorphic but not equal.</p>
          </article>
          <article class="exercise exercise-like" id="mxc">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="prV">Let <i class="one-letter">K</i> be an algebraic extension of <i class="one-letter">E</i>, and <i class="one-letter">E</i> an algebraic extension of <i class="one-letter">F</i>. Prove that <i class="one-letter">K</i> is algebraic over <i class="one-letter">F</i>. [<em class="emphasis">Caution</em>: Do not assume that the extensions are finite.]</p>
            <div class="solutions">
              <div class="hint solution-like" id="EPb"><span class="type">Hint</span>:<p id="Yfp">Suppose that <i class="one-letter">E</i> is algebraic over <i class="one-letter">F</i> and <i class="one-letter">K</i> is algebraic over <i class="one-letter">E</i>. Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠅</nemeth>. It suffices to show that <nemeth class="inline">⠨⠁</nemeth> is algebraic over some finite extension of <i class="one-letter">F</i>. Since <nemeth class="inline">⠨⠁</nemeth> is algebraic over <i class="one-letter">E</i>, it must be the zero of some polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠨⠃⠴⠬⠨⠃⠂⠭⠬⠄⠄⠄⠬⠨⠃⠰⠝⠐⠭⠘⠝</nemeth> in <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth>. Hence <nemeth class="inline">⠨⠁</nemeth> is algebraic over <nemeth class="inline">⠠⠋⠷⠨⠃⠴⠠⠀⠄⠄⠄⠀⠠⠀⠨⠃⠰⠝⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="SEl">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="Vze">Prove or disprove: <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠒⠐⠤⠆⠨⠨⠾</nemeth> is a field.</p>
          </article>
          <article class="exercise exercise-like" id="yLu">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="BGn">Let <i class="one-letter">F</i> be a field of characteristic <i class="one-letter">p</i>. Prove that <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠏⠐⠤⠁</nemeth> either is irreducible over <i class="one-letter">F</i> or splits in <i class="one-letter">F</i>.</p>
          </article>
          <article class="exercise exercise-like" id="eSD">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="hNw">Let <i class="one-letter">E</i> be the algebraic closure of a field <i class="one-letter">F</i>. Prove that every polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> splits in <i class="one-letter">E</i>.</p>
          </article>
          <article class="exercise exercise-like" id="KZM">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="NUF">If every irreducible polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> is linear, show that <i class="one-letter">F</i> is an algebraically closed field.</p>
          </article>
          <article class="exercise exercise-like" id="rgV">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="ubO">Prove that if <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> are constructible numbers such that <nemeth class="inline">⠨⠃⠀⠌⠨⠅⠀⠼⠴</nemeth>, then so is <nemeth class="inline">⠨⠁⠸⠌⠨⠃</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Xoe">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="aiX">Show that the set of all elements in <nemeth class="inline">⠸⠠⠗</nemeth> that are algebraic over <nemeth class="inline">⠸⠠⠟</nemeth> form a field extension of <nemeth class="inline">⠸⠠⠟</nemeth> that is not finite.</p>
          </article>
          <article class="exercise exercise-like" id="Dvn">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="Gqg">Let <i class="one-letter">E</i> be an algebraic extension of a field <i class="one-letter">F</i>, and let <nemeth class="inline">⠨⠎</nemeth> be an automorphism of <i class="one-letter">E</i> leaving <i class="one-letter">F</i> fixed. Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth>. Show that <nemeth class="inline">⠨⠎</nemeth> induces a permutation of the set of all zeros of the minimal polynomial of <nemeth class="inline">⠨⠁</nemeth> that are in <i class="one-letter">E</i>.</p>
          </article>
          <article class="exercise exercise-like" id="jCw">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="mxp">Show that <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾⠀⠨⠅⠀⠸⠠⠟⠷⠜⠒⠻⠬⠜⠶⠻⠾</nemeth>. Extend your proof to show that <nemeth class="inline">⠸⠠⠟⠷⠜⠁⠻⠠⠀⠜⠃⠻⠾⠀⠨⠅⠀⠸⠠⠟⠷⠜⠁⠻⠬⠜⠃⠻⠾</nemeth>, where <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ibE"><span class="type">Hint</span>:<p id="Emy">Since <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠒⠻⠠⠀⠜⠶⠻⠠⠀⠜⠆⠂⠻⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>, <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾⠀⠸⠨⠂⠀⠸⠠⠟⠷⠜⠒⠻⠬⠜⠶⠻⠾</nemeth>. Since <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠲</nemeth>, <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠜⠒⠻⠬⠜⠶⠻⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠆</nemeth> or 4. Since the degree of the minimal polynomial of <nemeth class="inline">⠜⠒⠻⠬⠜⠶⠻</nemeth> is 4, <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾⠀⠨⠅⠀⠸⠠⠟⠷⠜⠒⠻⠬⠜⠶⠻⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="PJF">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="SEy">Let <i class="one-letter">E</i> be a finite extension of a field <i class="one-letter">F</i>. If <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠼⠆</nemeth>, show that <i class="one-letter">E</i> is a splitting field of <i class="one-letter">F</i> for some polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="vQO">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="yLH">Prove or disprove: Given a polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠖⠈⠷⠭⠈⠾</nemeth>, it is possible to construct a ring <i class="one-letter">R</i> such that <nemeth class="inline">⠏⠷⠭⠾</nemeth> has a root in <i class="one-letter">R</i>.</p>
          </article>
          <article class="exercise exercise-like" id="bXX">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="eSQ">Let <i class="one-letter">E</i> be a field extension of <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth>. Determine <nemeth class="inline">⠈⠷⠠⠋⠷⠨⠁⠾⠒⠀⠠⠋⠷⠨⠁⠘⠒⠐⠾⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Ifg">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="KZZ">Let <nemeth class="inline">⠨⠁⠠⠀⠨⠃</nemeth> be transcendental over <nemeth class="inline">⠸⠠⠟</nemeth>. Prove that either <nemeth class="inline">⠨⠁⠨⠃</nemeth> or <nemeth class="inline">⠨⠁⠬⠨⠃</nemeth> is also transcendental.</p>
          </article>
          <article class="exercise exercise-like" id="omp">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="rhi">Let <i class="one-letter">E</i> be an extension field of <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> be transcendental over <i class="one-letter">F</i>. Prove that every element in <nemeth class="inline">⠠⠋⠷⠨⠁⠾</nemeth> that is not in <i class="one-letter">F</i> is also transcendental over <i class="one-letter">F</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="SSG"><span class="type">Hint</span>:<p id="ktH">Let <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠋⠷⠨⠁⠾</nemeth> not in <i class="one-letter">F</i>. Then <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠏⠷⠨⠁⠾⠸⠌⠟⠷⠨⠁⠾</nemeth>, where <i class="one-letter">p</i> and <i class="one-letter">q</i> are polynomials in <nemeth class="inline">⠨⠁</nemeth> with <nemeth class="inline">⠟⠷⠨⠁⠾⠀⠌⠨⠅⠀⠼⠴</nemeth> and coefficients in <i class="one-letter">F</i>. If <nemeth class="inline">⠨⠃</nemeth> is algebraic over <i class="one-letter">F</i>, then there exists a polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> such that <nemeth class="inline">⠋⠷⠨⠃⠾⠀⠨⠅⠀⠼⠴</nemeth>. Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝</nemeth>. Then</p><div class="displaymath"><nemeth>⠼⠴⠀⠨⠅⠀⠋⠷⠨⠃⠾⠀⠨⠅⠀⠋⠷⠹⠏⠷⠨⠁⠾⠌⠟⠷⠨⠁⠾⠼⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠷⠹⠏⠷⠨⠁⠾⠌⠟⠷⠨⠁⠾⠼⠾⠬⠄⠄⠄⠬⠁⠰⠝⠐⠷⠹⠏⠷⠨⠁⠾⠌⠟⠷⠨⠁⠾⠼⠾⠘⠝</nemeth></div><p data-braille="continuation">. Now multiply both sides by <nemeth class="inline">⠟⠷⠨⠁⠾⠘⠝</nemeth> to show that there is a polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> that has <nemeth class="inline">⠨⠁</nemeth> as a zero.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Uty">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="Xor">Let <nemeth class="inline">⠨⠁</nemeth> be a root of an irreducible monic polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>, with <nemeth class="inline">⠙⠑⠛⠀⠏⠀⠨⠅⠀⠝</nemeth>. Prove that <nemeth class="inline">⠈⠷⠠⠋⠷⠨⠁⠾⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠝</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="fgY"><span class="type">Hint</span>:<p id="QAQ">See the comments following Theorem 21.1.13.</p></div>
            </div>
          </article>
        </section>
        <section class="references" id="veH">
          <div class="none"><span class="type">References</span> <span class="codenumber">21.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="blQ"><div class="bibitem">[1]</div>  <div class="bibentry"> Dean, R. A. <i>Elements of Abstract Algebra</i> . Wiley, New York, 1966.</div></article>
          <article class="bib" id="HsZ"><div class="bibitem">[2]</div>  <div class="bibentry"> Dudley, U. <i>A Budget of Trisections</i>. Springer-Verlag, New York, 1987. An interesting and entertaining account of how not to  trisect an angle.</div></article>
          <article class="bib" id="nAi"><div class="bibitem">[3]</div>  <div class="bibentry"> Fraleigh, J. B. <i>A First Course in Abstract Algebra</i>. 7th ed. Pearson, Upper Saddle River, NJ, 2003.</div></article>
          <article class="bib" id="THr"><div class="bibitem">[4]</div>  <div class="bibentry"> Kaplansky, I. <i>Fields and Rings</i>, 2nd ed. University of Chicago Press, Chicago, 1972.</div></article>
          <article class="bib" id="zOA"><div class="bibitem">[5]</div>  <div class="bibentry"> Klein, F. <i>Famous Problems of Elementary Geometry</i>. Chelsea, New York, 1955.</div></article>
          <article class="bib" id="fVJ"><div class="bibitem">[6]</div>  <div class="bibentry"> Martin, G. <i>Geometric Constructions</i>. Springer, New York, 1998.</div></article>
          <article class="bib" id="McS"><div class="bibitem">[7]</div>  <div class="bibentry"> H. Pollard and H. G. Diamond. <i>Theory of Algebraic Numbers</i>, Dover, Mineola, NY, 2010.</div></article>
          <article class="bib" id="skb"><div class="bibitem">[8]</div>  <div class="bibentry"> Walker, E. A. <i>Introduction to Abstract Algebra</i>. Random House,  New York, 1987. This work contains a proof showing that every field has an algebraic closure.</div></article>
        </section>
        <section class="section" id="IAF">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">21.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="zvo">
            <p id="Hvz">In Sage, and other places, an extension of the rationals is called a “number field.” They are one of Sage's most mature features.</p>
          </section>
          <section class="subsection" id="GLs">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.7.1</span> <span class="title">Number Fields</span></div>
            <p id="hrX">There are several ways to create a number field. We are familiar with the syntax where we adjoin an irrational number that we can write with traditional combinations of arithmetic and roots.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M.&lt;a&gt; = QQ[sqrt(2)+sqrt(3)]; M
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in a with defining polynomial x^4 - 10*x^2 + 1
with a = 3.146264369941973?
</div>
            </article>
            <p id="Nzg">We can also specify the element we want to adjoin as the root of a monic irreducible polynomial. One approach is to construct the polynomial ring first so that the polynomial has the location of its coefficients specified properly.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;y&gt; = QQ[]
p = y^3 - 1/4*y^2 - 1/16*y + 1/4
p.is_irreducible()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N.&lt;b&gt; = NumberField(p, 'b'); N
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in b with
defining polynomial y^3 - 1/4*y^2 - 1/16*y + 1/4
</div>
            </article>
            <p id="tGp">Rather than building the whole polynomial ring, we can simply introduce a variable as the generator of a polynomial ring and then create polynomials from this variable. This spares us naming the polynomial ring. Notice in the example that both instances of <code class="code-inline tex2jax_ignore">z</code> are necessary.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">z = polygen(QQ, 'z')
q = z^3 - 1/4*z^2 - 1/16*z + 1/4
q.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in z over Rational Field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P.&lt;c&gt; = NumberField(q, 'c'); P
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in c with
defining polynomial z^3 - 1/4*z^2 - 1/16*z + 1/4
</div>
            </article>
            <p id="ZNy">We can recover the polynomial used to create a number field, even if we constructed it by giving an expression for an irrational element. In this case, the polynomial is the minimal polynomial of the element.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M.polynomial()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">x^4 - 10*x^2 + 1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N.polynomial()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">y^3 - 1/4*y^2 - 1/16*y + 1/4
</div>
            </article>
            <p id="FUH">For any element of a number field, Sage will obligingly compute its minimal polynomial.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">element = -b^2 + 1/3*b + 4
element.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in b with
defining polynomial y^3 - 1/4*y^2 - 1/16*y + 1/4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r = element.minpoly('t'); r
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">t^3 - 571/48*t^2 + 108389/2304*t - 13345/216
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in t over Rational Field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r.subs(t=element)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <p id="mbQ">Substituting <code class="code-inline tex2jax_ignore">element</code> back into the alleged minimal polynomial and getting back zero is not convincing evidence that it is the <em class="emphasis">minimal</em> polynomial, but it is heartening.</p>
          </section>
          <section class="subsection" id="mSB">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.7.2</span> <span class="title">Relative and Absolute Number Fields</span></div>
            <p id="SiZ">With Sage we can adjoin several elements at once and we can build nested towers of number fields. Sage uses the term “absolute” to refer to a number field viewed as an extension of the rationals themselves, and the term “relative” to refer to a number field constructed, or viewed, as an extension of another (nontrivial) number field.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.&lt;a,b&gt; = QQ[sqrt(2), sqrt(3)]
A
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in sqrt2 with defining polynomial x^2 - 2 over
its base field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">B = A.base_field(); B
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in sqrt3 with defining polynomial x^2 - 3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.is_relative()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">B.is_relative()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="yqi">The number field <code class="code-inline tex2jax_ignore">A</code> has been constructed mathematically as what we would write as <nemeth class="inline">⠸⠠⠟⠀⠸⠐⠅⠀⠸⠠⠟⠈⠷⠜⠒⠻⠈⠾⠀⠸⠐⠅⠀⠸⠠⠟⠈⠷⠜⠒⠻⠠⠀⠜⠆⠻⠈⠾</nemeth>. Notice the slight difference in ordering of the elements we are adjoining, and notice how the number fields use slightly fancier internal names (<code class="code-inline tex2jax_ignore">sqrt2</code>, <code class="code-inline tex2jax_ignore">sqrt3</code>) for the new elements.</p>
            <p id="exr">We can “flatten” a relative field to view it as an absolute field, which may have been our intention from the start. Here we create a new number field from <code class="code-inline tex2jax_ignore">A</code> that makes it a pure absolute number field.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">C.&lt;c&gt; = A.absolute_field()
C
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in c with defining polynomial x^4 - 10*x^2 + 1
</div>
            </article>
            <p id="KEA">Once we construct an absolute number field this way, we can recover isomorphisms to and from the absolute field. Recall that our tower was built with generators <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code>, while the flattened tower is generated by <code class="code-inline tex2jax_ignore">c</code>. The <code class="code-inline tex2jax_ignore">.structure()</code> method returns a pair of functions, with the absolute number field as the domain and codomain (in that order).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromC, toC = C.structure()
fromC(c)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">sqrt2 - sqrt3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">toC(a)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1/2*c^3 - 9/2*c
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">toC(b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1/2*c^3 - 11/2*c
</div>
            </article>
            <p id="qLJ">This tells us that the single generator of the flattened tower, <code class="code-inline tex2jax_ignore">c</code>, is equal to <nemeth class="inline">⠜⠆⠻⠤⠜⠒⠻</nemeth>, and further, each of <nemeth class="inline">⠜⠆⠻</nemeth> and <nemeth class="inline">⠜⠒⠻</nemeth> can be expressed as polynomial functions of <code class="code-inline tex2jax_ignore">c</code>. With these connections, you might want to compute the final two expressions in <code class="code-inline tex2jax_ignore">c</code> by hand, and appreciate the work Sage does to determine these for us. This computation is an example of the conclusion of the upcoming Theorem 23.1.13.</p>
            <p id="WSS">Many number field methods have both relative and absolute versions, and we will also find it more convenient to work in a tower or a flattened version, thus the isomorphisms between the two can be invaluable for translating both questions and answers.</p>
            <p id="Dab">As a vector space over <nemeth class="inline">⠸⠠⠟</nemeth>, or over another number field, number fields that are finite extensions have a dimension, called the degree. These are easy to get from Sage, though for a relative field, we need to be more precise about which degree we desire.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">B.degree()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.absolute_degree()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.relative_degree()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
          </section>
          <section class="subsection" id="SZK">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.7.3</span> <span class="title">Splitting Fields</span></div>
            <p id="jhk">Here is a concrete example of how to use Sage to construct a splitting field of a polynomial. Consider <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠬⠭⠘⠆⠐⠤⠂</nemeth>. We first build a number field with a single root, and then factor the polynomial over this new, larger, field.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x = polygen(QQ, 'x')
p = x^4 + x^2 - 1
p.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in x over Rational Field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p.is_irreducible()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M.&lt;a&gt; = NumberField(p, 'a')
y = polygen(M, 'y')
p = p.subs(x = y)
p
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">y^4 + y^2 - 1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in y over Number Field in a with
defining polynomial x^4 + x^2 - 1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(y - a) * (y + a) * (y^2 + a^2 + 1)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a^2 + 1 in QQ
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="vvC">So our polynomial factors partially into two linear factors and a quadratic factor. But notice that the quadratic factor has a coefficient that is irrational, <nemeth class="inline">⠁⠘⠆⠐⠬⠂</nemeth>, so the quadratic factor properly belongs in the polynomial ring over <code class="code-inline tex2jax_ignore">M</code> and not over <code class="code-inline tex2jax_ignore">QQ</code>.</p>
            <p id="bCL">We build an extension containing a root of the quadratic factor, called <code class="code-inline tex2jax_ignore">q</code> here. Then, rather than using the <code class="code-inline tex2jax_ignore">polygen()</code> function, we build an entire polynomial ring <code class="code-inline tex2jax_ignore">R</code> over <code class="code-inline tex2jax_ignore">N</code> with the indeterminate <code class="code-inline tex2jax_ignore">z</code>. The reason for doing this is we can illustrate how we “upgrade” the polynomial <code class="code-inline tex2jax_ignore">p</code> with the syntax <code class="code-inline tex2jax_ignore">R(p)</code> to go from having coefficients in <code class="code-inline tex2jax_ignore">M</code> to having coefficients in <code class="code-inline tex2jax_ignore">N</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">q = y^2 + a^2 + 1
N.&lt;b&gt; = NumberField(q, 'b')
R.&lt;z&gt; = N[]
s = R(p)
s
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">z^4 + z^2 - 1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">s.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Univariate Polynomial Ring in z over Number Field in b with
defining polynomial y^2 + a^2 + 1 over its base field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">s.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(z + b) * (z + a) * (z - a) * (z - b)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a in N, b in N
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(True, True)
</div>
            </article>
            <p id="HJU">So we have a field, <code class="code-inline tex2jax_ignore">N</code>, where our polynomial factors into linear factors with coefficients from the field. We can get another factorization by converting <code class="code-inline tex2jax_ignore">N</code> to an absolute number field and factoring there. We need to recreate the polynomial over <code class="code-inline tex2jax_ignore">N</code>, since a substitution will carry coefficients from the wrong ring.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P.&lt;c&gt; = N.absolute_field()
w = polygen(P, 'w')
p = w^4 + w^2- 1
p.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(w - 7/18966*c^7 + 110/9483*c^5 +  923/9483*c^3 +  3001/6322*c) *
(w - 7/37932*c^7 +  55/9483*c^5 + 923/18966*c^3 - 3321/12644*c) *
(w + 7/37932*c^7 -  55/9483*c^5 - 923/18966*c^3 + 3321/12644*c) *
(w + 7/18966*c^7 - 110/9483*c^5 -  923/9483*c^3 -  3001/6322*c)
</div>
            </article>
            <p id="nRd">This is an interesting alternative, in that the roots of the polynomial are expressions in terms of the <em class="emphasis">single</em> generator <code class="code-inline tex2jax_ignore">c</code>. Since the roots involve a seventh power of <code class="code-inline tex2jax_ignore">c</code>, we might suspect (but not be certain) that the minimal polynomial of <code class="code-inline tex2jax_ignore">c</code> has degree <nemeth class="inline">⠼⠦</nemeth> and that <code class="code-inline tex2jax_ignore">P</code> is a degree <nemeth class="inline">⠼⠦</nemeth> extension of the rationals. Indeed <code class="code-inline tex2jax_ignore">P</code> (or <code class="code-inline tex2jax_ignore">N</code>) is a splitting field for <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠬⠭⠘⠆⠐⠤⠂</nemeth>. The roots are not really as bad as they appear — lets convert them back to the relative number field.</p>
            <p id="TYm">First we want to rewrite a single factor (the first) in the form <nemeth class="inline">⠷⠺⠤⠗⠾</nemeth> to identify the root with the correct signs.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(w -  7/18966*c^7 + 110/9483*c^5 + 923/9483*c^3 + 3001/6322*c) =
(w - (7/18966*c^7 - 110/9483*c^5 - 923/9483*c^3 - 3001/6322*c))
</div>
            </article>
            <p id="Afv">With the conversion isomorphisms, we can recognize the roots for what they are.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromP, toP = P.structure()
fromP(7/18966*c^7 - 110/9483*c^5 - 923/9483*c^3 - 3001/6322*c)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-b
</div>
            </article>
            <p id="gmE">So the rather complicated expression in <code class="code-inline tex2jax_ignore">c</code> is just the negative of the root we adjoined in the second step of constructing the tower of number fields. It would be a good exercise to see what happens to the other three roots (being careful to get the signs right on each root).</p>
            <p id="MtN">This is a good opportunity to illustrate Theorem 21.1.17.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M.degree()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N.relative_degree()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P.degree()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M.degree()*N.relative_degree() == P.degree()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
          </section>
          <section class="subsection" id="zgT">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.7.4</span> <span class="title">Algebraic Numbers</span></div>
            <p id="sAW">Corollary 21.1.24 says that the set of <em class="emphasis">all</em> algebraic numbers forms a field. This field is implemented in Sage as <code class="code-inline tex2jax_ignore">QQbar</code>. This allows for finding roots of polynomials as exact quantities which display as inexact numbers.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x = polygen(QQ, 'x')
p = x^4 + x^2 - 1
r = p.roots(ring=QQbar); r
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(-0.7861513777574233?,  1), (0.7861513777574233?,  1),
 (-1.272019649514069?*I, 1), (1.272019649514069?*I, 1)]
</div>
            </article>
            <p id="YIf">So we asked for the roots of a polynomial over the rationals, but requested any root that may lie outside the rationals and within the field of algebraic numbers. Since the field of algebraic numbers contains all such roots, we get a full four roots of the fourth-degree polynomial. These roots are computed to lie within an interval and the question mark indicates that the preceding digits are accurate. (The integers paired with each root are the multiplicities of that root. Use the keyword <code class="code-inline tex2jax_ignore">multiplicities=False</code> to turn them off.) Let us take a look under the hood and see how Sage manages the field of algebraic numbers.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r1 = r[0][0]; r1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-0.7861513777574233?
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r1.as_number_field_element()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(Number Field in a with defining polynomial y^4 - y^2 - 1,
 a^3 - a,
 Ring morphism:
   From: Number Field in a with defining polynomial y^4 - y^2 - 1
   To:   Algebraic Real Field
   Defn: a |--&gt; -1.272019649514069?)
</div>
            </article>
            <p id="EPo">Three items are associated with this initial root. First is a number field, with generator <code class="code-inline tex2jax_ignore">a</code> and a defining polynomial similar to the polynomial we are finding the roots of, but not identical. Second is an expression in the generator <code class="code-inline tex2jax_ignore">a</code>, which is the actual root. You might evaluate this expression with the numerical approximation of <code class="code-inline tex2jax_ignore">a</code>, coming next, to verify this is a root. Finally, there is a ring homomorphism from the number field to the “Algebraic Real Field”, <code class="code-inline tex2jax_ignore">AA</code>, the subfield of <code class="code-inline tex2jax_ignore">QQbar</code> with just real elements, which associates the generator <code class="code-inline tex2jax_ignore">a</code> with the number <code class="code-inline tex2jax_ignore">-1.272019649514069?</code>. Let us verify, in two ways, that the root given is really a root.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r1^4 + r1^2 - 1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N, rexact, homomorphism = r1.as_number_field_element()
(rexact)^4 + rexact^2 - 1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <p id="kWx">Now that we have enough theory to understand the field of algebraic numbers, and a natural way to represent them exactly, you might consider the operations in the field. If we take two algebraic numbers and add them together, we get another algebraic number (Corollary 21.1.24). So what is the resulting minimal polynomial? How is it computed in Sage? You could read the source code if you wanted the answer.</p>
          </section>
          <section class="subsection" id="foc">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">21.7.5</span> <span class="title">Geometric Constructions</span></div>
            <p id="RdG">Sage can do a lot of things, but it is not yet able to lay out lines with a straightedge and compass. However, we can very quickly determine that trisecting a <nemeth class="inline">⠼⠖⠴</nemeth> degree angle is impossible. We adjoin the cosine of a <nemeth class="inline">⠼⠆⠴</nemeth> degree angle (in radians) to the rationals, determine the degree of the extension, and check that it is not an integer power of <nemeth class="inline">⠼⠆</nemeth>. In one line. Sweet.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">log(QQ[cos(pi/9)].degree(), 2) in ZZ
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="rCu">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">21.8</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="gHQ">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="DvA">Create the polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠢⠐⠬⠆⠭⠘⠲⠐⠬⠂</nemeth> over <nemeth class="inline">⠸⠠⠵⠒</nemeth>. Verify that it does not have any linear factors by evaluating <nemeth class="inline">⠏⠷⠭⠾</nemeth> with each element of <nemeth class="inline">⠸⠠⠵⠒</nemeth>, and then check that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible.</p>
            <p id="jCJ">Create a finite field of order <nemeth class="inline">⠼⠒⠘⠢</nemeth> with the <code class="code-inline tex2jax_ignore">FiniteField()</code> command, but include the <code class="code-inline tex2jax_ignore">modulus</code> keyword set to the polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> to override the default choice.</p>
            <p id="PJS">Recreate <nemeth class="inline">⠏⠷⠭⠾</nemeth> as a polynomial over this field. Check each of the <nemeth class="inline">⠼⠒⠘⠢⠐⠀⠨⠅⠀⠼⠆⠲⠒</nemeth> elements of the field to see if they are roots of the polynomial and list all of the elements which are roots. Finally, request that Sage give a factorization of <nemeth class="inline">⠏⠷⠭⠾</nemeth> over the field, and comment on the relationship between your list of roots and your factorization.</p>
          </article>
          <article class="exercise exercise-like" id="MOZ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="vRb">This problem continues the previous one. Build the ring of polynomials over <nemeth class="inline">⠸⠠⠵⠒</nemeth> and within this ring use <nemeth class="inline">⠏⠷⠭⠾</nemeth> to generate a principal ideal. Finally construct the quotient of the polynomial ring by the ideal. Since the polynomial is irreducible, this quotient ring is a field, and by Proposition 21.1.12 this quotient ring is isomorphic to the number field in the previous problem.</p>
            <p id="bYk">Borrowing from your results in the previous question, construct five roots of the polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> within this quotient ring, but now as expressions in the generator of the quotient ring (which is technically a coset). Use Sage to verify that they are indeed roots. This demonstrates using a quotient ring to create a splitting field for an irreducible polynomial over a finite field.</p>
          </article>
          <article class="exercise exercise-like" id="sWi">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Ift">The subsection Algebraic Elements relies on techniques from linear algebra and contains Theorem 21.1.15: every finite extension is an algebraic extension. This exercise will help you understand this proof.</p>
            <p id="omC">The polynomial <nemeth class="inline">⠗⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠬⠆⠭⠬⠆</nemeth> is irreducible over the rationals (Eisenstein's criterion with prime <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠆</nemeth>). Create a number field that contains a root of <nemeth class="inline">⠗⠷⠭⠾</nemeth>. By Theorem 21.1.15, and the remark following, every element of this finite field extension is an algebraic number, and hence satisfies some polynomial over the base field (it is this polynomial that Sage will produce with the <code class="code-inline tex2jax_ignore">.minpoly()</code> method). This exercise will show how we can use just linear algebra to determine this minimal polynomial.</p>
            <p id="UtL">Suppose that <code class="code-inline tex2jax_ignore">a</code> is the generator of the number field you just created with <nemeth class="inline">⠗⠷⠭⠾</nemeth>. Then we will determine the minimal polynomial of <code class="code-inline tex2jax_ignore">t = 3a + 1</code> using just linear algebra. According to the proof, the first five powers of <code class="code-inline tex2jax_ignore">t</code> (start counting from zero) will be linearly dependent. (Why?) So a nontrivial relation of linear dependence on these powers will provide the coefficients of a polynomial with <code class="code-inline tex2jax_ignore">t</code> as a root. Compute these five powers, then construct the correct linear system to determine the coefficients of the minimal polynomial, solve the system, and suitably interpret its solutions.</p>
            <p id="AAU">Hints: The <code class="code-inline tex2jax_ignore">vector()</code> and <code class="code-inline tex2jax_ignore">matrix()</code> commands will create vectors and matrices, and the <code class="code-inline tex2jax_ignore">.solve_right()</code> method for matrices can be used to find solutions. Given an element of the number field, which will necessarily be a polynomial in the generator <code class="code-inline tex2jax_ignore">a</code>, the <code class="code-inline tex2jax_ignore">.vector()</code> method of the element will provide the coefficients of this polynomial in a list.</p>
          </article>
          <article class="exercise exercise-like" id="Zdr">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="gId">Construct the splitting field of <nemeth class="inline">⠎⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠬⠭⠘⠆⠐⠬⠂</nemeth> and find a factorization of <nemeth class="inline">⠎⠷⠭⠾</nemeth> over this field into linear factors.</p>
          </article>
          <article class="exercise exercise-like" id="FkA">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="MPm">Form the number field, <i class="one-letter">K</i>, which contains a root of the irreducible polynomial <nemeth class="inline">⠟⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠬⠒⠭⠘⠆⠐⠬⠒⠭⠤⠆</nemeth>. Name your root <code class="code-inline tex2jax_ignore">a</code>. Verify that <nemeth class="inline">⠟⠷⠭⠾</nemeth> factors, but does not split, over <i class="one-letter">K</i>. With <i class="one-letter">K</i> now as the base field, form an extension of <i class="one-letter">K</i> where the quadratic factor of <nemeth class="inline">⠟⠷⠭⠾</nemeth> has a root. Name this root <code class="code-inline tex2jax_ignore">b</code>, and call this second extension of the tower <i class="one-letter">L</i>.</p>
            <p id="sWv">Use <code class="code-inline tex2jax_ignore">M.&lt;c&gt; = L.absolute_field()</code> to form the flattened tower that is the absolute number field <code class="code-inline tex2jax_ignore">M</code>. Find the defining polynomial of <code class="code-inline tex2jax_ignore">M</code> with the <code class="code-inline tex2jax_ignore">.polynomial()</code> method. From this polynomial, which must have the generator <code class="code-inline tex2jax_ignore">c</code> as a root, you should be able to use elementary algebra to write the generator as a fairly simple expression.</p>
            <p id="ZdE"><i class="one-letter">M</i> should be the splitting field of <nemeth class="inline">⠟⠷⠭⠾</nemeth>. To see this, start over, and build from scratch a new number field, <i class="one-letter">P</i>, using the simple expression for <code class="code-inline tex2jax_ignore">c</code> that you just found. Use <code class="code-inline tex2jax_ignore">d</code> as the name of the root used to construct <code class="code-inline tex2jax_ignore">P</code>. Since <code class="code-inline tex2jax_ignore">d</code> is a root of the simple minimal polynomial for <code class="code-inline tex2jax_ignore">c</code>, you should be able to write an expression for <code class="code-inline tex2jax_ignore">d</code> that a pre-calculus student would recognize.</p>
            <p id="FkN">Now factor the original polynomial <nemeth class="inline">⠟⠷⠭⠾</nemeth> (with rational coefficients) over <i class="one-letter">P</i>, to see the polynomial split (as expected). Using this factorization, and your simple expression for <code class="code-inline tex2jax_ignore">d</code> write simplified expressions for the three roots of <nemeth class="inline">⠟⠷⠭⠾</nemeth>. See if you can convert between the two versions of the roots “by hand”, and without using the isomorphisms provided by the <code class="code-inline tex2jax_ignore">.structure()</code> method on <code class="code-inline tex2jax_ignore">M</code>.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="Gnc">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">22</span> <span class="title">Finite Fields</span></div>
        <section class="introduction" id="YFb">
          <p id="xpc">Finite fields appear in many applications of algebra, including coding theory and cryptography. We already know one finite field, <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>, where <i class="one-letter">p</i> is prime. In this chapter we will show that a unique finite field of order <nemeth class="inline">⠏⠘⠝</nemeth> exists for every prime <i class="one-letter">p</i>, where <i class="one-letter">n</i> is a positive integer. Finite fields are also called Galois fields in honor of Évariste Galois, who was one of the first mathematicians to investigate them.</p>
        </section>
        <section class="section" id="jzF">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">22.1</span> <span class="title">Structure of a Finite Field</span></div>
          <p id="Gnp">Recall that a field <i class="one-letter">F</i> has <dfn class="terminology">characteristic</dfn> <i class="one-letter">p</i> if <i class="one-letter">p</i> is the smallest positive integer such that for every nonzero element <nemeth class="inline">⠨⠁</nemeth> in <i class="one-letter">F</i>, we have <nemeth class="inline">⠏⠨⠁⠀⠨⠅⠀⠼⠴</nemeth>. If no such integer exists, then <i class="one-letter">F</i> has characteristic <nemeth class="inline">⠼⠴</nemeth>. From Theorem 16.2.8 we know that <i class="one-letter">p</i> must be prime. Suppose that <i class="one-letter">F</i> is a finite field with <i class="one-letter">n</i> elements. Then <nemeth class="inline">⠝⠨⠁⠀⠨⠅⠀⠼⠴</nemeth> for all <nemeth class="inline">⠨⠁</nemeth> in <i class="one-letter">F</i>. Consequently, the characteristic of <i class="one-letter">F</i> must be <i class="one-letter">p</i>, where <i class="one-letter">p</i> is a prime dividing <i class="one-letter">n</i>. This discussion is summarized in the following proposition.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="Plp">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.1</span>
              <span class="period">.</span>
            </h6>
            <p id="WXf">If <i class="one-letter">F</i> is a finite field, then the characteristic of <i class="one-letter">F</i> is <i class="one-letter">p</i>, where <i class="one-letter">p</i> is prime.</p>
          </article>
          <p id="muy">Throughout this chapter we will assume that <i class="one-letter">p</i> is a prime number unless otherwise stated.</p>
          <article class="proposition theorem-like" data-braille="theorem-like" id="vsy">
            <h6 class="heading">
              <span class="type">Proposition</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="Deo">If <i class="one-letter">F</i> is a finite field of characteristic <i class="one-letter">p</i>, then the order of <i class="one-letter">F</i> is <nemeth class="inline">⠏⠘⠝</nemeth> for some <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="BRE">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="fGX">Let <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠠⠋</nemeth> be the ring homomorphism defined by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠝⠡⠂</nemeth>. Since the characteristic of <i class="one-letter">F</i> is <i class="one-letter">p</i>, the kernel of <nemeth class="inline">⠨⠋</nemeth> must be <nemeth class="inline">⠏⠸⠠⠵</nemeth> and the image of <nemeth class="inline">⠨⠋</nemeth> must be a subfield of <i class="one-letter">F</i> isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>. We will denote this subfield by <i class="one-letter">K</i>. Since <i class="one-letter">F</i> is a finite field, it must be a finite extension of <i class="one-letter">K</i> and, therefore, an algebraic extension of <i class="one-letter">K</i>. Suppose that <nemeth class="inline">⠈⠷⠠⠋⠒⠀⠠⠅⠈⠾⠀⠨⠅⠀⠝</nemeth> is the dimension of <i class="one-letter">F</i>, where <i class="one-letter">F</i> is a <i class="one-letter">K</i> vector space. There must exist elements <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠀⠈⠑⠀⠠⠋</nemeth> such that any element <nemeth class="inline">⠨⠁</nemeth> in <i class="one-letter">F</i> can be written uniquely in the form</p>
            <div class="displaymath">
              <nemeth>⠨⠁⠀⠨⠅⠀⠁⠂⠨⠁⠂⠬⠄⠄⠄⠬⠁⠰⠝⠐⠨⠁⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">, where the <nemeth class="inline">⠁⠰⠊</nemeth>'s are in <i class="one-letter">K</i>. Since there are <i class="one-letter">p</i> elements in <i class="one-letter">K</i>, there are <nemeth class="inline">⠏⠘⠝</nemeth> possible linear combinations of the <nemeth class="inline">⠨⠁⠰⠊</nemeth>'s. Therefore, the order of <i class="one-letter">F</i> must be <nemeth class="inline">⠏⠘⠝</nemeth>.</p>
          </article>
          <article class="lemma theorem-like" data-braille="theorem-like" id="bzH">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.3</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Freshman's Dream.</span>
            </h6>
            <p id="PsG">Let <i class="one-letter">p</i> be prime and <i class="one-letter">D</i> be an integral domain of characteristic <i class="one-letter">p</i>. Then</p>
            <div class="displaymath">
              <nemeth>⠁⠘⠏⠘⠘⠝⠐⠬⠃⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠷⠁⠬⠃⠾⠘⠏⠘⠘⠝</nemeth>
            </div>
            <p data-braille="continuation">for all positive integers <i class="one-letter">n</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="hYN">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="LOg">We will prove this lemma using mathematical induction on <i class="one-letter">n</i>. We can use the binomial formula (see Chapter 2, Example 2.1.4) to verify the case for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>; that is,</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠾⠘⠏⠐⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠏⠻⠏⠀⠅⠁⠘⠅⠐⠃⠘⠏⠤⠅</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠼⠴⠀⠐⠅⠀⠅⠀⠐⠅⠀⠏</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠏⠀⠅⠀⠨⠅⠀⠹⠏⠯⠌⠅⠖⠀⠷⠏⠤⠅⠾⠯⠼</nemeth>
            </div>
            <p data-braille="continuation">must be divisible by <i class="one-letter">p</i>, since <i class="one-letter">p</i> cannot divide <nemeth class="inline">⠅⠖⠀⠷⠏⠤⠅⠾⠯</nemeth>. Note that <i class="one-letter">D</i> is an integral domain of characteristic <i class="one-letter">p</i>, so all but the first and last terms in the sum must be zero. Therefore, <nemeth class="inline">⠷⠁⠬⠃⠾⠘⠏⠐⠀⠨⠅⠀⠁⠘⠏⠐⠬⠃⠘⠏</nemeth>.</p>
            <p id="rVp">Now suppose that the result holds for all <i class="one-letter">k</i>, where <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠱⠀⠝</nemeth>. By the induction hypothesis,</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠾⠘⠏⠘⠘⠝⠬⠂⠐⠀⠨⠅⠀⠷⠷⠁⠬⠃⠾⠘⠏⠐⠾⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠷⠁⠘⠏⠐⠬⠃⠘⠏⠐⠾⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠷⠁⠘⠏⠐⠾⠘⠏⠘⠘⠝⠐⠬⠷⠃⠘⠏⠐⠾⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠁⠘⠏⠘⠘⠝⠬⠂⠐⠬⠃⠘⠏⠘⠘⠝⠬⠂</nemeth>
            </div>
            <p data-braille="continuation">. Therefore, the lemma is true for <nemeth class="inline">⠝⠬⠂</nemeth> and the proof is complete.</p>
          </article>
          <p id="SBH">Let <i class="one-letter">F</i> be a field. A polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> of degree <i class="one-letter">n</i> is <dfn class="terminology">separable</dfn>  if it has <i class="one-letter">n</i> distinct roots in the splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth>; that is, <nemeth class="inline">⠋⠷⠭⠾</nemeth> is separable when it factors into distinct linear factors over the splitting field of <i class="one-letter">f</i>. An extension <i class="one-letter">E</i> of <i class="one-letter">F</i> is a <dfn class="terminology">separable extension</dfn> of <i class="one-letter">F</i> if every element in <i class="one-letter">E</i> is the root of a separable polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p>
          <article class="example example-like" data-braille="example-like" id="Acr">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="Ucz">The polynomial <nemeth class="inline">⠭⠘⠆⠐⠤⠆</nemeth> is separable over <nemeth class="inline">⠸⠠⠟</nemeth> since it factors as <nemeth class="inline">⠷⠭⠤⠜⠆⠻⠾⠷⠭⠬⠜⠆⠻⠾</nemeth>. In fact, <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth> is a separable extension of <nemeth class="inline">⠸⠠⠟</nemeth>. Let <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠁⠬⠃⠜⠆⠻</nemeth> be any element in <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth>. If <nemeth class="inline">⠃⠀⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠨⠁</nemeth> is a root of <nemeth class="inline">⠭⠤⠁</nemeth>. If <nemeth class="inline">⠃⠀⠌⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠨⠁</nemeth> is the root  of the separable polynomial</p>
            <div class="displaymath">
              <nemeth>⠭⠘⠆⠐⠤⠆⠁⠭⠬⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠀⠨⠅⠀⠷⠭⠤⠷⠁⠬⠃⠜⠆⠻⠾⠾⠷⠭⠤⠷⠁⠤⠃⠜⠆⠻⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="yIQ">Fortunately, we have an easy test to  determine the separability of any polynomial. Let</p>
          <div class="displaymath">
            <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝</nemeth>
          </div>
          <p data-braille="continuation">be any polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Define the <dfn class="terminology">derivative</dfn>  of <nemeth class="inline">⠋⠷⠭⠾</nemeth> to be</p>
          <div class="displaymath">
            <nemeth>⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠁⠂⠬⠆⠁⠆⠭⠬⠄⠄⠄⠬⠝⠁⠰⠝⠐⠭⠘⠝⠤⠂</nemeth>
          </div>
          <p data-braille="continuation">.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="HGQ">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.5</span>
              <span class="period">.</span>
            </h6>
            <p id="vzP">Let <i class="one-letter">F</i> be a field and <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>. Then <nemeth class="inline">⠋⠷⠭⠾</nemeth> is separable if and only if <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾</nemeth> are relatively prime.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="OfW">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="Ycy">Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> be separable. Then <nemeth class="inline">⠋⠷⠭⠾</nemeth> factors over some extension field of <i class="one-letter">F</i> as <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠂⠾⠷⠭⠤⠨⠁⠆⠾⠀⠄⠄⠄⠀⠷⠭⠤⠨⠁⠰⠝⠐⠾</nemeth>, where <nemeth class="inline">⠨⠁⠰⠊⠐⠀⠌⠨⠅⠀⠨⠁⠰⠚</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth>. Taking the derivative of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, we see that</p>
            <div class="displaymath">
              <nemeth>⠋⠘⠄⠐⠷⠭⠾⠀⠀⠨⠅⠀⠷⠭⠤⠨⠁⠆⠾⠀⠄⠄⠄⠀⠷⠭⠤⠨⠁⠰⠝⠐⠾⠀⠀⠀⠬⠷⠭⠤⠨⠁⠂⠾⠷⠭⠤⠨⠁⠒⠾⠀⠄⠄⠄⠀⠷⠭⠤⠨⠁⠰⠝⠐⠾⠀⠀⠀⠬⠄⠄⠄⠬⠷⠭⠤⠨⠁⠂⠾⠀⠄⠄⠄⠀⠷⠭⠤⠨⠁⠰⠝⠤⠂⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">. Hence, <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾</nemeth> can have no common factors.</p>
            <p id="EjH">To prove the converse, we will show that the contrapositive of the statement is true. Suppose that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠾⠘⠅⠐⠛⠷⠭⠾</nemeth>, where <nemeth class="inline">⠅⠀⠨⠂⠀⠼⠂</nemeth>. Differentiating, we have</p>
            <div class="displaymath">
              <nemeth>⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠅⠷⠭⠤⠨⠁⠾⠘⠅⠤⠂⠐⠛⠷⠭⠾⠬⠷⠭⠤⠨⠁⠾⠘⠅⠐⠛⠘⠄⠐⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">. Therefore, <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾</nemeth> have a common factor.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="WPO">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.6</span>
              <span class="period">.</span>
            </h6>
            <p id="mgd">For every prime <i class="one-letter">p</i> and every positive integer <i class="one-letter">n</i>, there exists a finite field <i class="one-letter">F</i> with <nemeth class="inline">⠏⠘⠝</nemeth> elements. Furthermore, any field of order <nemeth class="inline">⠏⠘⠝</nemeth> is isomorphic to the splitting field of <nemeth class="inline">⠭⠘⠏⠘⠘⠝⠐⠤⠭</nemeth> over <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="RaC">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="kqQ">Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠏⠘⠘⠝⠐⠤⠭</nemeth> and let <i class="one-letter">F</i> be the splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. Then by Lemma 22.1.5, <nemeth class="inline">⠋⠷⠭⠾</nemeth> has <nemeth class="inline">⠏⠘⠝</nemeth> distinct zeros in <i class="one-letter">F</i>, since <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠏⠘⠝⠐⠭⠘⠏⠘⠘⠝⠘⠤⠂⠐⠤⠂⠀⠨⠅⠀⠤⠼⠂</nemeth> is relatively prime to <nemeth class="inline">⠋⠷⠭⠾</nemeth>. We claim that the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth> form a subfield of <i class="one-letter">F</i>. Certainly 0 and 1 are zeros of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. If <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> are zeros of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, then <nemeth class="inline">⠨⠁⠬⠨⠃</nemeth> and <nemeth class="inline">⠨⠁⠨⠃</nemeth> are also zeros of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, since <nemeth class="inline">⠨⠁⠘⠏⠘⠘⠝⠐⠬⠨⠃⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠷⠨⠁⠬⠨⠃⠾⠘⠏⠘⠘⠝</nemeth> and <nemeth class="inline">⠨⠁⠘⠏⠘⠘⠝⠐⠨⠃⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠷⠨⠁⠨⠃⠾⠘⠏⠘⠘⠝</nemeth>. We also need to show that the additive inverse and the multiplicative inverse of each root of <nemeth class="inline">⠋⠷⠭⠾</nemeth> are roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. For any zero <nemeth class="inline">⠨⠁</nemeth> of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, we know that <nemeth class="inline">⠤⠨⠁</nemeth> is also a zero of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, since</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠤⠨⠁⠾⠀⠨⠅⠀⠷⠤⠨⠁⠾⠘⠏⠘⠘⠝⠐⠤⠷⠤⠨⠁⠾⠀⠨⠅⠀⠤⠨⠁⠘⠏⠘⠘⠝⠐⠬⠨⠁⠀⠨⠅⠀⠤⠷⠨⠁⠘⠏⠘⠘⠝⠘⠐⠤⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">, provided <i class="one-letter">p</i> is odd. If <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠆</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠤⠨⠁⠾⠀⠨⠅⠀⠷⠤⠨⠁⠾⠘⠆⠘⠘⠝⠐⠤⠷⠤⠨⠁⠾⠀⠨⠅⠀⠨⠁⠬⠨⠁⠀⠨⠅⠀⠼⠴</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠨⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠷⠨⠁⠘⠤⠼⠂⠐⠾⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠷⠨⠁⠘⠏⠘⠘⠝⠘⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠁⠘⠤⠼⠂</nemeth>. Since the zeros of <nemeth class="inline">⠋⠷⠭⠾</nemeth> form a subfield of <i class="one-letter">F</i> and <nemeth class="inline">⠋⠷⠭⠾</nemeth> splits in this subfield, the subfield must be all of <i class="one-letter">F</i>.</p>
            <p id="QxZ">Let <i class="one-letter">E</i> be any other field of order <nemeth class="inline">⠏⠘⠝</nemeth>. To show that <i class="one-letter">E</i> is isomorphic to <i class="one-letter">F</i>, we must show that every element in <i class="one-letter">E</i> is a root of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. Certainly 0 is a root of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. Let <nemeth class="inline">⠨⠁</nemeth> be a nonzero element of <i class="one-letter">E</i>. The order of the multiplicative group of nonzero elements of <i class="one-letter">E</i> is <nemeth class="inline">⠏⠘⠝⠐⠤⠂</nemeth>; hence, <nemeth class="inline">⠨⠁⠘⠏⠘⠘⠝⠘⠤⠂⠐⠀⠨⠅⠀⠼⠂</nemeth> or <nemeth class="inline">⠨⠁⠘⠏⠘⠘⠝⠐⠤⠨⠁⠀⠨⠅⠀⠼⠴</nemeth>. Since <i class="one-letter">E</i> contains <nemeth class="inline">⠏⠘⠝</nemeth> elements, <i class="one-letter">E</i> must be a splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth>; however, by Corollary 21.2.8, the splitting field of any polynomial is unique up to isomorphism.</p>
          </article>
          <p id="ePZ">The unique finite field with <nemeth class="inline">⠏⠘⠝</nemeth> elements is called the <dfn class="terminology">Galois field</dfn>  of order <nemeth class="inline">⠏⠘⠝</nemeth>. We will denote this field by <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth>. </p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="CWX">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="Snm">Every subfield of the Galois field <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth> has <nemeth class="inline">⠏⠘⠍</nemeth> elements, where <i class="one-letter">m</i> divides <i class="one-letter">n</i>. Conversely, if <nemeth class="inline">⠍⠳⠝</nemeth> for <nemeth class="inline">⠍⠀⠨⠂⠀⠼⠴</nemeth>, then there exists a unique subfield of <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth> isomorphic to <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠍⠐⠾</nemeth>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="xhL">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="wFi">Let <i class="one-letter">F</i> be a subfield of <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth>. Then <i class="one-letter">F</i> must be a field extension of <i class="one-letter">K</i> that contains <nemeth class="inline">⠏⠘⠍</nemeth> elements, where <i class="one-letter">K</i> is isomorphic to <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>. Then <nemeth class="inline">⠍⠳⠝</nemeth>, since <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠅⠈⠾⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠈⠷⠠⠋⠒⠀⠠⠅⠈⠾</nemeth>.</p>
            <p id="cMr">To prove the converse, suppose that <nemeth class="inline">⠍⠳⠝</nemeth> for some <nemeth class="inline">⠍⠀⠨⠂⠀⠼⠴</nemeth>. Then <nemeth class="inline">⠏⠘⠍⠐⠤⠂</nemeth> divides <nemeth class="inline">⠏⠘⠝⠐⠤⠂</nemeth>. Consequently, <nemeth class="inline">⠭⠘⠏⠘⠘⠍⠘⠤⠂⠐⠤⠂</nemeth> divides <nemeth class="inline">⠭⠘⠏⠘⠘⠝⠘⠤⠂⠐⠤⠂</nemeth>. Therefore, <nemeth class="inline">⠭⠘⠏⠘⠘⠍⠐⠤⠭</nemeth> must divide <nemeth class="inline">⠭⠘⠏⠘⠘⠝⠐⠤⠭</nemeth>, and every zero of <nemeth class="inline">⠭⠘⠏⠘⠘⠍⠐⠤⠭</nemeth> is also a zero of <nemeth class="inline">⠭⠘⠏⠘⠘⠝⠐⠤⠭</nemeth>. Thus, <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth> contains, as a subfield, a splitting field of <nemeth class="inline">⠭⠘⠏⠘⠘⠍⠐⠤⠭</nemeth>, which must be isomorphic to <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠍⠐⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="gjA">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.8</span>
              <span class="period">.</span>
            </h6>
            <p id="AjI">The lattice of subfields of <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠆⠲⠐⠾</nemeth> is given in Figure 22.1.9.</p>
          </article>
          <figure class="figure figure-like" data-braille="figure-like" id="rer">
            <div data-braille="image">
              <p>Image: A lattice of field inclusions with the top level a Galois field of p^24 elements.  The second level has Galois fields of p^8 and p^12 elements which are included in the top level.  The third level has Galois fields of p^4 (included in the fields of p^8 and p^12 elements) and p^6 elements (included in the field of p^12 elements).  The fourth level has Galois fields of p^2 (included in the fields of p^4 and p^16 elements) and p^3 elements (included in the field of p^6 elements). The bottom level a Galois field of p elements (included in the fields of p^2 and p^3 elements).</p>
              <p>ID: finite-subfield-lattice</p>
            </div>
            <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">22.1.9<span class="period">.</span></span><span class="space"> </span>Subfields of <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠆⠲⠐⠾</nemeth></figcaption>
          </figure>
          <p id="KXi">With each field <i class="one-letter">F</i> we have a multiplicative group of nonzero elements of <i class="one-letter">F</i> which we will denote by <nemeth class="inline">⠠⠋⠘⠈⠼</nemeth>.  The multiplicative group of any finite field is cyclic. This result follows from the more general result that we will prove in the next theorem.</p>
          <article class="theorem theorem-like" data-braille="theorem-like" id="jeg">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.10</span>
              <span class="period">.</span>
            </h6>
            <p id="yuv">If <i class="one-letter">G</i> is a finite subgroup of <nemeth class="inline">⠠⠋⠘⠈⠼</nemeth>, the multiplicative group of nonzero elements of a field <i class="one-letter">F</i>, then <i class="one-letter">G</i> is cyclic.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="doU">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="ITA">Let <i class="one-letter">G</i> be a finite subgroup of <nemeth class="inline">⠠⠋⠘⠈⠼</nemeth> of order <i class="one-letter">n</i>. By the Fundamental Theorem of Finite Abelian Groups (Theorem 13.1.4),</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠈⠱⠈⠱⠀⠸⠠⠵⠰⠏⠂⠰⠘⠑⠂⠐⠈⠡⠄⠄⠄⠈⠡⠸⠠⠵⠰⠏⠰⠰⠅⠰⠘⠑⠰⠘⠰⠅</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠝⠀⠨⠅⠀⠏⠂⠘⠑⠂⠐⠀⠄⠄⠄⠀⠏⠰⠅⠘⠑⠘⠰⠅⠘</nemeth> and the  <nemeth class="inline">⠏⠂⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠅⠐</nemeth> are (not necessarily distinct) primes. Let <i class="one-letter">m</i> be the least common multiple of <nemeth class="inline">⠏⠂⠘⠑⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠅⠘⠑⠘⠰⠅⠘</nemeth>. Then <i class="one-letter">G</i> contains an element of order <i class="one-letter">m</i>. Since every <nemeth class="inline">⠨⠁</nemeth> in <i class="one-letter">G</i> satisfies <nemeth class="inline">⠭⠘⠗⠐⠤⠂</nemeth> for some <i class="one-letter">r</i> dividing <i class="one-letter">m</i>, <nemeth class="inline">⠨⠁</nemeth> must also be a root of <nemeth class="inline">⠭⠘⠍⠐⠤⠂</nemeth>. Since <nemeth class="inline">⠭⠘⠍⠐⠤⠂</nemeth> has at most <i class="one-letter">m</i> roots in <i class="one-letter">F</i>, <nemeth class="inline">⠝⠀⠐⠅⠱⠀⠍</nemeth>. On the other hand, we know that <nemeth class="inline">⠍⠀⠐⠅⠱⠀⠳⠠⠛⠳</nemeth>; therefore, <nemeth class="inline">⠍⠀⠨⠅⠀⠝</nemeth>. Thus, <i class="one-letter">G</i> contains an element of order <i class="one-letter">n</i> and must be cyclic.</p>
          </article>
          <article class="corollary theorem-like" data-braille="theorem-like" id="nNZ">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.11</span>
              <span class="period">.</span>
            </h6>
            <p id="HOh">The multiplicative group of all nonzero elements of a finite field is cyclic.</p>
          </article>
          <article class="corollary theorem-like" data-braille="theorem-like" id="TVi">
            <h6 class="heading">
              <span class="type">Corollary</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.12</span>
              <span class="period">.</span>
            </h6>
            <p id="nVq">Every finite extension <i class="one-letter">E</i> of a finite field <i class="one-letter">F</i> is a simple extension of <i class="one-letter">F</i>.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="auo">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="paJ">Let <nemeth class="inline">⠨⠁</nemeth> be a generator for the cyclic group <nemeth class="inline">⠠⠑⠘⠈⠼</nemeth> of nonzero elements of <i class="one-letter">E</i>. Then <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="MqJ">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">22.1.13</span>
              <span class="period">.</span>
            </h6>
            <p id="gqR">The finite field <nemeth class="inline">⠠⠛⠠⠋⠷⠼⠆⠘⠲⠐⠾</nemeth> is isomorphic to the field <nemeth class="inline">⠸⠠⠵⠆⠸⠌⠨⠨⠷⠂⠬⠭⠬⠭⠘⠲⠐⠨⠨⠾</nemeth>. Therefore, the elements of  <nemeth class="inline">⠠⠛⠠⠋⠷⠼⠆⠘⠲⠐⠾</nemeth> can be taken to be</p>
            <div class="displaymath">
              <nemeth>⠨⠷⠁⠴⠬⠁⠂⠨⠁⠬⠁⠆⠨⠁⠘⠆⠐⠬⠁⠒⠨⠁⠘⠒⠐⠒⠀⠁⠰⠊⠐⠀⠈⠑⠀⠸⠠⠵⠆⠁⠝⠙⠼⠂⠬⠨⠁⠬⠨⠁⠘⠲⠐⠀⠨⠅⠀⠼⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Remembering that <nemeth class="inline">⠼⠂⠬⠨⠁⠬⠨⠁⠘⠲⠐⠀⠨⠅⠀⠼⠴</nemeth>, we add and multiply elements of <nemeth class="inline">⠠⠛⠠⠋⠷⠼⠆⠘⠲⠐⠾</nemeth> exactly as we add and multiply polynomials. The multiplicative group of <nemeth class="inline">⠠⠛⠠⠋⠷⠼⠆⠘⠲⠐⠾</nemeth> is isomorphic to <nemeth class="inline">⠸⠠⠵⠂⠢</nemeth> with generator <nemeth class="inline">⠨⠁</nemeth>:</p>
            <div class="displaymath">
              <nemeth>⠀⠀⠨⠁⠘⠂⠐⠀⠨⠅⠀⠨⠁⠀⠀⠀⠨⠁⠘⠖⠐⠀⠨⠅⠀⠨⠁⠘⠆⠐⠬⠨⠁⠘⠒⠐⠀⠀⠀⠨⠁⠘⠂⠂⠐⠀⠨⠅⠀⠨⠁⠬⠨⠁⠘⠆⠐⠬⠨⠁⠘⠒⠐⠀⠀⠀⠀⠀⠨⠁⠘⠆⠐⠀⠨⠅⠀⠨⠁⠘⠆⠐⠀⠀⠀⠨⠁⠘⠶⠐⠀⠨⠅⠀⠼⠂⠬⠨⠁⠬⠨⠁⠘⠒⠐⠀⠀⠀⠨⠁⠘⠂⠆⠐⠀⠨⠅⠀⠼⠂⠬⠨⠁⠬⠨⠁⠘⠆⠐⠬⠨⠁⠘⠒⠐⠀⠀⠀⠀⠀⠨⠁⠘⠒⠐⠀⠨⠅⠀⠨⠁⠘⠒⠐⠀⠀⠀⠨⠁⠘⠦⠐⠀⠨⠅⠀⠼⠂⠬⠨⠁⠘⠆⠐⠀⠀⠀⠨⠁⠘⠂⠒⠐⠀⠨⠅⠀⠼⠂⠬⠨⠁⠘⠆⠐⠬⠨⠁⠘⠒⠐⠀⠀⠀⠀⠀⠨⠁⠘⠲⠐⠀⠨⠅⠀⠼⠂⠬⠨⠁⠀⠀⠀⠨⠁⠘⠔⠐⠀⠨⠅⠀⠨⠁⠬⠨⠁⠘⠒⠐⠀⠀⠀⠨⠁⠘⠂⠲⠐⠀⠨⠅⠀⠼⠂⠬⠨⠁⠘⠒⠐⠀⠀⠀⠀⠀⠨⠁⠘⠢⠐⠀⠨⠅⠀⠨⠁⠬⠨⠁⠘⠆⠐⠀⠀⠀⠨⠁⠘⠂⠴⠐⠀⠨⠅⠀⠼⠂⠬⠨⠁⠬⠨⠁⠘⠆⠐⠀⠀⠀⠨⠁⠘⠂⠢⠐⠀⠨⠅⠀⠼⠂⠨⠀⠀</nemeth>
            </div>
          </article>
        </section>
        <section class="section" id="PGO">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">22.2</span> <span class="title">Polynomial Codes</span></div>
          <section class="introduction" id="EMk">
            <p id="dwl">With knowledge of polynomial rings and finite fields, it is now possible to derive more sophisticated codes than those of Chapter 8. First let us recall that an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-block code consists of a one-to-one encoding function <nemeth class="inline">⠠⠑⠒⠀⠸⠠⠵⠆⠘⠅⠐⠀⠫⠕⠀⠸⠠⠵⠆⠘⠝</nemeth> and a decoding function <nemeth class="inline">⠠⠙⠒⠀⠸⠠⠵⠆⠘⠝⠐⠀⠫⠕⠀⠸⠠⠵⠆⠘⠅</nemeth>. The code is error-correcting if <i class="one-letter">D</i> is onto. A code is a linear code if it is the null space of a matrix <nemeth class="inline">⠠⠓⠀⠈⠑⠀⠸⠠⠍⠰⠅⠈⠡⠝⠐⠷⠸⠠⠵⠆⠾</nemeth>.</p>
            <p id="JDu">We are interested in a class of codes known as cyclic codes.  Let <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠆⠘⠅⠐⠀⠫⠕⠀⠸⠠⠵⠆⠘⠝</nemeth> be a binary <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-block code. Then <nemeth class="inline">⠨⠋</nemeth> is a <dfn class="terminology">cyclic code</dfn> if for every codeword <nemeth class="inline">⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾</nemeth>, the cyclically shifted <i class="one-letter">n</i>-tuple <nemeth class="inline">⠷⠁⠰⠝⠐⠠⠀⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠤⠂⠐⠾</nemeth> is also a codeword. Cyclic codes are particularly easy to implement on a computer using shift registers [2, 3].</p>
            <article class="example example-like" data-braille="example-like" id="sxS">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Mya">Consider the <nemeth class="inline">⠷⠼⠖⠠⠀⠼⠒⠾</nemeth>-linear codes generated by the two matrices</p>
              <div class="displaymath">
                <nemeth>⠠⠛⠂⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠁⠝⠙⠠⠛⠆⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Messages in the first code are encoded as follows:</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠴⠴⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠴⠴⠴⠴⠴⠴⠾⠀⠀⠀⠀⠀⠷⠂⠴⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠂⠴⠴⠂⠴⠴⠾⠀⠷⠴⠴⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠴⠴⠂⠴⠴⠂⠾⠀⠀⠀⠀⠀⠷⠂⠴⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠂⠴⠂⠂⠴⠂⠾⠀⠷⠴⠂⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠴⠂⠴⠴⠂⠴⠾⠀⠀⠀⠀⠀⠷⠂⠂⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠂⠂⠴⠂⠂⠴⠾⠀⠷⠴⠂⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠴⠂⠂⠴⠂⠂⠾⠀⠀⠀⠀⠀⠷⠂⠂⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠼⠂⠂⠂⠂⠂⠂⠾⠨⠐</nemeth>
              </div>
              <p data-braille="continuation">It is easy to see that the codewords form a cyclic code. In the second code, 3-tuples are encoded in the following manner:</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠴⠴⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠴⠴⠴⠴⠴⠴⠾⠀⠀⠀⠀⠀⠷⠂⠴⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠂⠂⠂⠂⠴⠴⠾⠀⠷⠴⠴⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠴⠴⠂⠂⠂⠂⠾⠀⠀⠀⠀⠀⠷⠂⠴⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠂⠂⠴⠴⠂⠂⠾⠀⠷⠴⠂⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠴⠂⠂⠂⠂⠴⠾⠀⠀⠀⠀⠀⠷⠂⠂⠴⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠂⠴⠴⠴⠂⠴⠾⠀⠷⠴⠂⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠴⠂⠴⠴⠴⠂⠾⠀⠀⠀⠀⠀⠷⠂⠂⠂⠾⠀⠀⠫⠳⠒⠒⠕⠀⠀⠷⠼⠂⠴⠂⠂⠴⠂⠾⠨⠐</nemeth>
              </div>
              <p data-braille="continuation">This code cannot be cyclic, since <nemeth class="inline">⠷⠼⠂⠴⠂⠂⠴⠂⠾</nemeth> is a codeword but <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠂⠂⠾</nemeth> is not a codeword.</p>
            </article>
          </section>
          <section class="subsection" id="mul">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">22.2.1</span> <span class="title">Polynomial Codes</span></div>
            <p id="fVs">We would like to find an easy method of obtaining cyclic linear codes. To accomplish this, we can use our knowledge of finite fields and  polynomial rings over <nemeth class="inline">⠸⠠⠵⠆</nemeth>. Any binary <i class="one-letter">n</i>-tuple can be interpreted as a polynomial in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>. Stated another way, the <i class="one-letter">n</i>-tuple <nemeth class="inline">⠷⠁⠴⠠⠀⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠤⠂⠐⠾</nemeth> corresponds to the polynomial</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠭⠘⠝⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">, where the degree of <nemeth class="inline">⠋⠷⠭⠾</nemeth> is at most <nemeth class="inline">⠝⠤⠂</nemeth>. For example, the polynomial corresponding to the <nemeth class="inline">⠼⠢</nemeth>-tuple <nemeth class="inline">⠷⠼⠂⠴⠴⠂⠂⠾</nemeth> is</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠬⠴⠭⠬⠴⠭⠘⠆⠐⠬⠂⠭⠘⠒⠐⠬⠂⠭⠘⠲⠐⠀⠨⠅⠀⠼⠂⠬⠭⠘⠒⠐⠬⠭⠘⠲</nemeth>
            </div>
            <p data-braille="continuation">. Conversely, with any polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth> with <nemeth class="inline">⠙⠑⠛⠀⠋⠷⠭⠾⠀⠐⠅⠀⠝</nemeth> we can associate a binary <i class="one-letter">n</i>-tuple. The polynomial <nemeth class="inline">⠭⠬⠭⠘⠆⠐⠬⠭⠘⠲</nemeth> corresponds to the <nemeth class="inline">⠼⠢</nemeth>-tuple <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠂⠾</nemeth>.</p>
            <p id="McB">Let us fix a nonconstant polynomial <nemeth class="inline">⠛⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth> of degree <nemeth class="inline">⠝⠤⠅</nemeth>. We can define an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-code <i class="one-letter">C</i> in the following manner. If <nemeth class="inline">⠷⠁⠴⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠤⠂⠐⠾</nemeth> is a <i class="one-letter">k</i>-tuple to be encoded, then <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠅⠤⠂⠐⠭⠘⠅⠤⠂</nemeth> is the corresponding polynomial in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>. To encode <nemeth class="inline">⠋⠷⠭⠾</nemeth>, we multiply by <nemeth class="inline">⠛⠷⠭⠾</nemeth>. The codewords in <i class="one-letter">C</i> are all those polynomials in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth> of degree less than <i class="one-letter">n</i> that are divisible by <nemeth class="inline">⠛⠷⠭⠾</nemeth>. Codes obtained in this manner are called <dfn class="terminology">polynomial codes</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="AxQ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="sFj">If we let <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠼⠂⠬⠭⠘⠒</nemeth>, we can define a <nemeth class="inline">⠷⠼⠖⠠⠀⠼⠒⠾</nemeth>-code <i class="one-letter">C</i> as follows. To encode a <nemeth class="inline">⠼⠒</nemeth>-tuple <nemeth class="inline">⠷⠁⠴⠠⠀⠁⠂⠠⠀⠁⠆⠾</nemeth>, we multiply the corresponding polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠁⠆⠭⠘⠆</nemeth> by <nemeth class="inline">⠼⠂⠬⠭⠘⠒</nemeth>. We are defining a map <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠆⠘⠒⠐⠀⠫⠕⠀⠸⠠⠵⠆⠘⠖</nemeth> by <nemeth class="inline">⠨⠋⠒⠀⠋⠷⠭⠾⠀⠫⠳⠒⠒⠕⠀⠛⠷⠭⠾⠋⠷⠭⠾</nemeth>. It is easy to check that this map is a group homomorphism. In fact, if we regard <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> as a vector space over <nemeth class="inline">⠸⠠⠵⠆</nemeth>, <nemeth class="inline">⠨⠋</nemeth> is a linear transformation of vector spaces (see Exercise 20.5.15, Chapter 20). Let us compute the kernel of <nemeth class="inline">⠨⠋</nemeth>. Observe that <nemeth class="inline">⠋⠷⠁⠴⠠⠀⠁⠂⠠⠀⠁⠆⠾⠀⠨⠅⠀⠷⠼⠴⠴⠴⠴⠴⠴⠾</nemeth> exactly when</p>
              <div class="displaymath">
                <nemeth>⠼⠴⠬⠴⠭⠬⠴⠭⠘⠆⠬⠴⠭⠘⠒⠬⠴⠭⠘⠲⠬⠴⠭⠘⠢⠀⠀⠨⠅⠀⠷⠼⠂⠬⠭⠘⠒⠐⠾⠷⠁⠴⠬⠁⠂⠭⠬⠁⠆⠭⠘⠆⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠁⠆⠭⠘⠆⠐⠬⠁⠴⠭⠘⠒⠐⠬⠁⠂⠭⠘⠲⠐⠬⠁⠆⠭⠘⠢</nemeth>
              </div>
              <p data-braille="continuation">. Since the polynomials over a field form an integral domain, <nemeth class="inline">⠁⠴⠬⠁⠂⠭⠬⠁⠆⠭⠘⠆</nemeth> must be the zero polynomial. Therefore, <nemeth class="inline">⠅⠑⠗⠀⠨⠋⠀⠨⠅⠀⠨⠷⠷⠼⠴⠴⠴⠾⠨⠾</nemeth> and <nemeth class="inline">⠨⠋</nemeth> is one-to-one.</p>
              <p id="YMs">To calculate a generator matrix for <i class="one-letter">C</i>, we merely need to examine the way the polynomials <nemeth class="inline">⠼⠂</nemeth>, <i class="one-letter">x</i>, and <nemeth class="inline">⠭⠘⠆</nemeth> are encoded:</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠂⠬⠭⠘⠒⠐⠾⠡⠂⠀⠀⠨⠅⠀⠼⠂⠬⠭⠘⠒⠐⠀⠷⠂⠬⠭⠘⠒⠐⠾⠭⠀⠀⠨⠅⠀⠭⠬⠭⠘⠲⠐⠀⠷⠂⠬⠭⠘⠒⠐⠾⠭⠘⠆⠀⠀⠨⠅⠀⠭⠘⠆⠐⠬⠭⠘⠢</nemeth>
              </div>
              <p data-braille="continuation">. We obtain the code corresponding to the generator matrix <nemeth class="inline">⠠⠛⠂</nemeth> in Example 22.2.1. The parity-check matrix for this code is</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠀⠴⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Since the smallest weight of any nonzero codeword is <nemeth class="inline">⠼⠆</nemeth>, this code has the ability to detect all single errors.</p>
            </article>
            <p id="sjK">Rings of polynomials have a great deal of structure; therefore, our immediate goal is to establish a link between polynomial codes and ring theory. Recall that <nemeth class="inline">⠭⠘⠝⠐⠤⠂⠀⠨⠅⠀⠷⠭⠤⠂⠾⠷⠭⠘⠝⠤⠂⠐⠬⠄⠄⠄⠬⠭⠬⠂⠾</nemeth>. The factor ring</p>
            <div class="displaymath">
              <nemeth>⠠⠗⠰⠝⠐⠀⠨⠅⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠝⠐⠤⠂⠨⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">can be considered to be the ring of polynomials of the form</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠞⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠞⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠞⠘⠝⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">that satisfy the condition <nemeth class="inline">⠞⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>. It is an easy exercise to show that <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> and <nemeth class="inline">⠠⠗⠰⠝</nemeth> are isomorphic as vector spaces. We will often identify elements in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> with elements in <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠝⠐⠤⠂⠨⠨⠾</nemeth>. In this manner we can interpret a linear code as a subset of <nemeth class="inline">⠸⠠⠵⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠝⠐⠤⠂⠨⠨⠾</nemeth>.</p>
            <p id="YqT">The additional ring structure on polynomial codes is very powerful in describing cyclic codes. A cyclic shift of an <i class="one-letter">n</i>-tuple can be described by polynomial multiplication. If <nemeth class="inline">⠋⠷⠞⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠞⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠞⠘⠝⠤⠂</nemeth> is a code polynomial in <nemeth class="inline">⠠⠗⠰⠝</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠞⠋⠷⠞⠾⠀⠨⠅⠀⠁⠰⠝⠤⠂⠐⠬⠁⠴⠞⠬⠄⠄⠄⠬⠁⠰⠝⠤⠆⠐⠞⠘⠝⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">is the cyclically shifted word obtained from multiplying <nemeth class="inline">⠋⠷⠞⠾</nemeth> by <i class="one-letter">t</i>. The following theorem gives a beautiful classification of cyclic codes in terms of the ideals of <nemeth class="inline">⠠⠗⠰⠝</nemeth>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="bVg">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="eBE">A linear code <i class="one-letter">C</i> in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> is cyclic if and only if it is an ideal in <nemeth class="inline">⠠⠗⠰⠝⠐⠀⠨⠅⠀⠸⠠⠵⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠝⠐⠤⠂⠨⠨⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Jwd">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="VhS">Let <i class="one-letter">C</i> be a linear cyclic code and suppose that <nemeth class="inline">⠋⠷⠞⠾</nemeth> is in <i class="one-letter">C</i>. Then <nemeth class="inline">⠞⠋⠷⠞⠾</nemeth> must also be in <i class="one-letter">C</i>. Consequently, <nemeth class="inline">⠞⠘⠅⠐⠋⠷⠞⠾</nemeth> is in <i class="one-letter">C</i> for all <nemeth class="inline">⠅⠀⠈⠑⠀⠸⠠⠝</nemeth>. Since <i class="one-letter">C</i> is a linear code, any linear combination of the codewords <nemeth class="inline">⠋⠷⠞⠾⠠⠀⠞⠋⠷⠞⠾⠠⠀⠞⠘⠆⠐⠋⠷⠞⠾⠠⠀⠄⠄⠄⠀⠠⠀⠞⠘⠝⠤⠂⠐⠋⠷⠞⠾</nemeth> is also a codeword; therefore, for every polynomial <nemeth class="inline">⠏⠷⠞⠾</nemeth>, <nemeth class="inline">⠏⠷⠞⠾⠋⠷⠞⠾</nemeth> is in <i class="one-letter">C</i>. Hence, <i class="one-letter">C</i> is an ideal.</p>
              <p id="Bpb">Conversely, let <i class="one-letter">C</i> be an ideal in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠝⠐⠬⠂⠨⠨⠾</nemeth>. Suppose that <nemeth class="inline">⠋⠷⠞⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠞⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠞⠘⠝⠤⠂</nemeth> is a codeword in <i class="one-letter">C</i>. Then <nemeth class="inline">⠞⠋⠷⠞⠾</nemeth> is a codeword in <i class="one-letter">C</i>; that is, <nemeth class="inline">⠷⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠤⠂⠐⠠⠀⠁⠴⠾</nemeth> is in <i class="one-letter">C</i>.</p>
            </article>
            <p id="Eyc">Theorem 22.2.3 tells us that knowing the ideals of <nemeth class="inline">⠠⠗⠰⠝</nemeth> is equivalent to knowing the linear cyclic codes in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth>. Fortunately, the ideals in <nemeth class="inline">⠠⠗⠰⠝</nemeth> are easy to describe. The  natural ring homomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠗⠰⠝⠐</nemeth> defined by <nemeth class="inline">⠋⠈⠷⠋⠷⠭⠾⠈⠾⠀⠨⠅⠀⠋⠷⠞⠾</nemeth> is a surjective homomorphism. The kernel of <nemeth class="inline">⠨⠋</nemeth> is the ideal generated by <nemeth class="inline">⠭⠘⠝⠐⠤⠂</nemeth>. By Theorem 16.3.15, every ideal <i class="one-letter">C</i> in <nemeth class="inline">⠠⠗⠰⠝</nemeth> is of the form <nemeth class="inline">⠋⠷⠠⠊⠾</nemeth>, where <i class="one-letter">I</i> is an ideal in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth> that contains <nemeth class="inline">⠨⠨⠷⠭⠘⠝⠐⠤⠂⠨⠨⠾</nemeth>. By Theorem 17.3.10, we know that every ideal <i class="one-letter">I</i> in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth> is a principal ideal, since <nemeth class="inline">⠸⠠⠵⠆</nemeth> is a field. Therefore, <nemeth class="inline">⠠⠊⠀⠨⠅⠀⠨⠨⠷⠛⠷⠭⠾⠨⠨⠾</nemeth> for some unique monic polynomial in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>. Since <nemeth class="inline">⠨⠨⠷⠭⠘⠝⠐⠤⠂⠨⠨⠾</nemeth> is contained in <i class="one-letter">I</i>, it must be the case that <nemeth class="inline">⠛⠷⠭⠾</nemeth> divides <nemeth class="inline">⠭⠘⠝⠐⠤⠂</nemeth>. Consequently, every ideal <i class="one-letter">C</i> in <nemeth class="inline">⠠⠗⠰⠝</nemeth> is of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠉⠀⠨⠅⠀⠨⠨⠷⠛⠷⠞⠾⠨⠨⠾⠀⠨⠅⠀⠨⠷⠋⠷⠞⠾⠛⠷⠞⠾⠒⠀⠋⠷⠞⠾⠀⠈⠑⠀⠠⠗⠰⠝⠐⠁⠝⠙⠛⠷⠭⠾⠳⠷⠭⠘⠝⠐⠤⠂⠾⠊⠝⠸⠠⠵⠆⠈⠷⠭⠈⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. The unique monic polynomial of the smallest degree that generates <i class="one-letter">C</i> is called the <dfn class="terminology">minimal generator polynomial</dfn> of <i class="one-letter">C</i>.</p>
            <article class="example example-like" data-braille="example-like" id="gEZ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="ETB">If we factor <nemeth class="inline">⠭⠘⠶⠐⠤⠂</nemeth> into irreducible components, we have</p>
              <div class="displaymath">
                <nemeth>⠭⠘⠶⠐⠤⠂⠀⠨⠅⠀⠷⠼⠂⠬⠭⠾⠷⠂⠬⠭⠬⠭⠘⠒⠐⠾⠷⠂⠬⠭⠘⠆⠐⠬⠭⠘⠒⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. We see that <nemeth class="inline">⠛⠷⠞⠾⠀⠨⠅⠀⠷⠼⠂⠬⠞⠬⠞⠘⠒⠐⠾</nemeth> generates an ideal <i class="one-letter">C</i> in <nemeth class="inline">⠠⠗⠶</nemeth>. This code is a <nemeth class="inline">⠷⠼⠶⠠⠀⠼⠲⠾</nemeth>-block code. As in Example 22.2.2, it is easy to calculate a generator matrix by examining what <nemeth class="inline">⠛⠷⠞⠾</nemeth> does to the polynomials 1, <i class="one-letter">t</i>, <nemeth class="inline">⠞⠘⠆</nemeth>, and <nemeth class="inline">⠞⠘⠒</nemeth>. A generator matrix for <i class="one-letter">C</i> is</p>
              <div class="displaymath">
                <nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="kFl">In general, we can determine a generator matrix for an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-code <i class="one-letter">C</i> by the manner in which the elements <nemeth class="inline">⠞⠘⠅</nemeth> are encoded. Let <nemeth class="inline">⠭⠘⠝⠐⠤⠂⠀⠨⠅⠀⠛⠷⠭⠾⠓⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>. If <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠛⠴⠬⠛⠂⠭⠬⠄⠄⠄⠬⠛⠰⠝⠤⠅⠐⠭⠘⠝⠤⠅</nemeth> and <nemeth class="inline">⠓⠷⠭⠾⠀⠨⠅⠀⠓⠴⠬⠓⠂⠭⠬⠄⠄⠄⠬⠓⠰⠅⠐⠭⠘⠅</nemeth>, then the <nemeth class="inline">⠝⠈⠡⠅</nemeth> matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠛⠴⠀⠴⠀⠄⠄⠄⠀⠴⠠⠾⠀⠠⠷⠛⠂⠀⠛⠴⠀⠄⠄⠄⠀⠴⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠛⠰⠝⠤⠅⠐⠀⠛⠰⠝⠤⠅⠤⠂⠐⠀⠄⠄⠄⠀⠛⠴⠠⠾⠀⠠⠷⠴⠀⠛⠰⠝⠤⠅⠐⠀⠄⠄⠄⠀⠛⠂⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠴⠀⠴⠀⠄⠄⠄⠀⠛⠰⠝⠤⠅⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">is a generator matrix for the code <i class="one-letter">C</i> with generator polynomial <nemeth class="inline">⠛⠷⠞⠾</nemeth>. The parity-check matrix for <i class="one-letter">C</i> is the <nemeth class="inline">⠷⠝⠤⠅⠾⠈⠡⠝</nemeth> matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠄⠄⠄⠀⠴⠀⠴⠀⠓⠰⠅⠐⠀⠄⠄⠄⠀⠓⠴⠠⠾⠀⠠⠷⠴⠀⠄⠄⠄⠀⠴⠀⠓⠰⠅⠐⠀⠄⠄⠄⠀⠓⠴⠀⠴⠠⠾⠀⠠⠷⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠠⠾⠀⠠⠷⠓⠰⠅⠐⠀⠄⠄⠄⠀⠓⠴⠀⠴⠀⠴⠀⠄⠄⠄⠀⠴⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">. We will leave the details of the proof of the following proposition as an exercise.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="ojy">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="jlx">Let <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠨⠨⠷⠛⠷⠞⠾⠨⠨⠾</nemeth> be a cyclic code in <nemeth class="inline">⠠⠗⠰⠝</nemeth> and suppose that <nemeth class="inline">⠭⠘⠝⠐⠤⠂⠀⠨⠅⠀⠛⠷⠭⠾⠓⠷⠭⠾</nemeth>. Then <i class="one-letter">G</i> and <i class="one-letter">H</i> are generator and parity-check matrices for <i class="one-letter">C</i>, respectively. Furthermore, <nemeth class="inline">⠠⠓⠠⠛⠀⠨⠅⠀⠼⠴</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="MMi">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="laK">In Example 22.2.4,</p>
              <div class="displaymath">
                <nemeth>⠭⠘⠶⠐⠤⠂⠀⠨⠅⠀⠛⠷⠭⠾⠓⠷⠭⠾⠀⠨⠅⠀⠷⠼⠂⠬⠭⠬⠭⠘⠒⠐⠾⠷⠂⠬⠭⠬⠭⠘⠆⠐⠬⠭⠘⠲⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, a parity-check matrix for this code is</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠴⠀⠂⠀⠴⠀⠂⠀⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠀⠴⠀⠂⠀⠂⠀⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠀⠂⠀⠂⠀⠂⠀⠴⠀⠴⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="QMu">To determine the error-detecting and error-correcting capabilities of a cyclic code, we need to know something about determinants. If <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> are elements in a field <i class="one-letter">F</i>, then the <nemeth class="inline">⠝⠈⠡⠝</nemeth> matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠂⠀⠄⠄⠄⠀⠂⠠⠾⠀⠠⠷⠨⠁⠂⠀⠨⠁⠆⠀⠄⠄⠄⠀⠨⠁⠰⠝⠠⠾⠀⠠⠷⠨⠁⠂⠘⠆⠀⠨⠁⠆⠘⠆⠀⠄⠄⠄⠀⠨⠁⠰⠝⠘⠆⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠨⠁⠂⠘⠝⠤⠂⠀⠨⠁⠆⠘⠝⠤⠂⠀⠄⠄⠄⠀⠨⠁⠰⠝⠘⠝⠤⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">is called the <dfn class="terminology">Vandermonde matrix</dfn>.  The determinant of this matrix is called the <dfn class="terminology">Vandermonde determinant</dfn>.  We will need the following lemma in our investigation of cyclic codes.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="UqH">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="bGY">Let <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> be elements in a field <i class="one-letter">F</i> with <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠙⠑⠞⠀⠠⠷⠼⠂⠀⠂⠀⠄⠄⠄⠀⠂⠠⠾⠀⠠⠷⠨⠁⠂⠀⠨⠁⠆⠀⠄⠄⠄⠀⠨⠁⠰⠝⠐⠠⠾⠀⠠⠷⠨⠁⠂⠘⠆⠐⠀⠨⠁⠆⠘⠆⠐⠀⠄⠄⠄⠀⠨⠁⠰⠝⠘⠆⠐⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠨⠁⠂⠘⠝⠤⠂⠐⠀⠨⠁⠆⠘⠝⠤⠂⠐⠀⠄⠄⠄⠀⠨⠁⠰⠝⠘⠝⠤⠂⠐⠠⠾⠀⠨⠅⠀⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠼⠂⠀⠐⠅⠱⠀⠚⠀⠐⠅⠀⠊⠀⠐⠅⠱⠀⠝⠻⠷⠨⠁⠰⠊⠐⠤⠨⠁⠰⠚⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. In particular, if the <nemeth class="inline">⠨⠁⠰⠊</nemeth>'s are distinct, then the determinant is nonzero.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="unf">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="hwk">We will induct on <i class="one-letter">n</i>. If <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠆</nemeth>, then the determinant is <nemeth class="inline">⠨⠁⠆⠤⠨⠁⠂</nemeth>. Let us assume the result for <nemeth class="inline">⠝⠤⠂</nemeth> and consider the polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> defined by</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠙⠑⠞⠀⠠⠷⠼⠂⠀⠂⠀⠄⠄⠄⠀⠂⠀⠂⠠⠾⠀⠠⠷⠨⠁⠂⠀⠨⠁⠆⠀⠄⠄⠄⠀⠨⠁⠰⠝⠤⠂⠐⠀⠭⠠⠾⠀⠠⠷⠨⠁⠂⠘⠆⠐⠀⠨⠁⠆⠘⠆⠐⠀⠄⠄⠄⠀⠨⠁⠰⠝⠤⠂⠘⠆⠐⠀⠭⠘⠆⠐⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠨⠁⠂⠘⠝⠤⠂⠐⠀⠨⠁⠆⠘⠝⠤⠂⠐⠀⠄⠄⠄⠀⠨⠁⠰⠝⠤⠂⠘⠝⠤⠂⠐⠀⠭⠘⠝⠤⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Expanding this determinant by cofactors on the last column, we see that <nemeth class="inline">⠏⠷⠭⠾</nemeth> is a polynomial of at most degree <nemeth class="inline">⠝⠤⠂</nemeth>. Moreover, the roots of <nemeth class="inline">⠏⠷⠭⠾</nemeth> are <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠤⠂⠐</nemeth>, since the substitution of any one of these elements in the last column will produce a column identical to the last column in the matrix. Remember that the determinant of a matrix is zero if it has two identical columns. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠂⠾⠷⠭⠤⠨⠁⠆⠾⠀⠄⠄⠄⠀⠷⠭⠤⠨⠁⠰⠝⠤⠂⠐⠾⠨⠃</nemeth>
              </div>
              <p data-braille="continuation">, where</p>
              <div class="displaymath">
                <nemeth>⠨⠃⠀⠨⠅⠀⠷⠤⠼⠂⠾⠘⠝⠬⠝⠐⠙⠑⠞⠀⠠⠷⠼⠂⠀⠂⠀⠄⠄⠄⠀⠂⠠⠾⠀⠠⠷⠨⠁⠂⠀⠨⠁⠆⠀⠄⠄⠄⠀⠨⠁⠰⠝⠤⠂⠐⠠⠾⠀⠠⠷⠨⠁⠂⠘⠆⠐⠀⠨⠁⠆⠘⠆⠐⠀⠄⠄⠄⠀⠨⠁⠰⠝⠤⠂⠘⠆⠐⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠨⠁⠂⠘⠝⠤⠆⠐⠀⠨⠁⠆⠘⠝⠤⠆⠐⠀⠄⠄⠄⠀⠨⠁⠰⠝⠤⠂⠘⠝⠤⠆⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. By our induction hypothesis,</p>
              <div class="displaymath">
                <nemeth>⠨⠃⠀⠨⠅⠀⠷⠤⠼⠂⠾⠘⠝⠬⠝⠐⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠼⠂⠀⠐⠅⠱⠀⠚⠀⠐⠅⠀⠊⠀⠐⠅⠱⠀⠝⠤⠂⠻⠷⠨⠁⠰⠊⠐⠤⠨⠁⠰⠚⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. If we let <nemeth class="inline">⠭⠀⠨⠅⠀⠨⠁⠰⠝</nemeth>, the result now follows immediately.</p>
            </article>
            <p id="wTD">The following theorem gives us an estimate on the error detection and correction capabilities for a particular generator polynomial.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="Icp">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="KIN">Let <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠨⠨⠷⠛⠷⠞⠾⠨⠨⠾</nemeth> be a cyclic code in <nemeth class="inline">⠠⠗⠰⠝</nemeth> and suppose that <nemeth class="inline">⠨⠕</nemeth> is a primitive <i class="one-letter">n</i>th root of unity over <nemeth class="inline">⠸⠠⠵⠆</nemeth>. If <i class="one-letter">s</i> consecutive powers of <nemeth class="inline">⠨⠕</nemeth> are roots of <nemeth class="inline">⠛⠷⠭⠾</nemeth>, then the minimum distance of <i class="one-letter">C</i> is at least <nemeth class="inline">⠎⠬⠂</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="pDm">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="NDt">Suppose that</p>
              <div class="displaymath">
                <nemeth>⠛⠷⠨⠕⠘⠗⠐⠾⠀⠨⠅⠀⠛⠷⠨⠕⠘⠗⠬⠂⠐⠾⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠛⠷⠨⠕⠘⠗⠬⠎⠤⠂⠐⠾⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> be some polynomial in <i class="one-letter">C</i> with <i class="one-letter">s</i> or fewer nonzero coefficients. We can assume that</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠁⠰⠊⠴⠐⠭⠘⠊⠴⠐⠬⠁⠰⠊⠂⠐⠭⠘⠊⠂⠐⠬⠄⠄⠄⠬⠁⠰⠊⠰⠰⠎⠤⠂⠐⠭⠘⠊⠘⠰⠎⠤⠂</nemeth>
              </div>
              <p data-braille="continuation">be some polynomial in <i class="one-letter">C</i>. It will suffice to show that all of the <nemeth class="inline">⠁⠰⠊</nemeth>'s must be 0. Since</p>
              <div class="displaymath">
                <nemeth>⠛⠷⠨⠕⠘⠗⠐⠾⠀⠨⠅⠀⠛⠷⠨⠕⠘⠗⠬⠂⠐⠾⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠛⠷⠨⠕⠘⠗⠬⠎⠤⠂⠐⠾⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">and <nemeth class="inline">⠛⠷⠭⠾</nemeth> divides <nemeth class="inline">⠋⠷⠭⠾</nemeth>,</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠨⠕⠘⠗⠐⠾⠀⠨⠅⠀⠋⠷⠨⠕⠘⠗⠬⠂⠐⠾⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠋⠷⠨⠕⠘⠗⠬⠎⠤⠂⠐⠾⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. Equivalently, we have the following system of equations:</p>
              <div class="displaymath">
                <nemeth>⠁⠰⠊⠴⠐⠷⠨⠕⠘⠗⠐⠾⠘⠊⠴⠬⠁⠰⠊⠂⠐⠷⠨⠕⠘⠗⠐⠾⠘⠊⠂⠬⠄⠄⠄⠬⠁⠰⠊⠰⠰⠎⠤⠂⠐⠷⠨⠕⠘⠗⠐⠾⠘⠊⠘⠰⠎⠤⠂⠀⠀⠨⠅⠀⠼⠴⠀⠁⠰⠊⠴⠐⠷⠨⠕⠘⠗⠬⠂⠐⠾⠘⠊⠴⠬⠁⠰⠊⠂⠐⠷⠨⠕⠘⠗⠬⠂⠐⠾⠘⠊⠆⠬⠄⠄⠄⠬⠁⠰⠊⠰⠰⠎⠤⠂⠐⠷⠨⠕⠘⠗⠬⠂⠐⠾⠘⠊⠘⠰⠎⠤⠂⠀⠀⠨⠅⠀⠼⠴⠀⠀⠀⠣⠄⠄⠄⠀⠁⠰⠊⠴⠐⠷⠨⠕⠘⠗⠬⠎⠤⠂⠐⠾⠘⠊⠴⠬⠁⠰⠊⠂⠐⠷⠨⠕⠘⠗⠬⠎⠤⠂⠐⠾⠘⠊⠂⠬⠄⠄⠄⠬⠁⠰⠊⠰⠰⠎⠤⠂⠐⠷⠨⠕⠘⠗⠬⠎⠤⠂⠐⠾⠘⠊⠘⠰⠎⠤⠂⠀⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <nemeth class="inline">⠷⠁⠰⠊⠴⠐⠠⠀⠁⠰⠊⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠊⠰⠰⠎⠤⠂⠰⠐⠾</nemeth> is a solution to the homogeneous system of linear equations</p>
              <div class="displaymath">
                <nemeth>⠷⠨⠕⠘⠊⠴⠐⠾⠘⠗⠐⠭⠴⠬⠷⠨⠕⠘⠊⠂⠐⠾⠘⠗⠐⠭⠂⠬⠄⠄⠄⠬⠷⠨⠕⠘⠊⠘⠰⠎⠤⠂⠘⠐⠾⠘⠗⠐⠭⠰⠝⠤⠂⠀⠀⠨⠅⠀⠼⠴⠀⠷⠨⠕⠘⠊⠴⠐⠾⠘⠗⠬⠂⠐⠭⠴⠬⠷⠨⠕⠘⠊⠂⠐⠾⠘⠗⠬⠂⠐⠭⠂⠬⠄⠄⠄⠬⠷⠨⠕⠘⠊⠘⠰⠎⠤⠂⠘⠐⠾⠘⠗⠬⠂⠐⠭⠰⠝⠤⠂⠀⠀⠨⠅⠀⠼⠴⠀⠀⠀⠣⠄⠄⠄⠀⠷⠨⠕⠘⠊⠴⠐⠾⠘⠗⠬⠎⠤⠂⠐⠭⠴⠬⠷⠨⠕⠘⠊⠂⠐⠾⠘⠗⠬⠎⠤⠂⠐⠭⠂⠬⠄⠄⠄⠬⠷⠨⠕⠘⠊⠘⠰⠎⠤⠂⠘⠐⠾⠘⠗⠬⠎⠤⠂⠐⠭⠰⠝⠤⠂⠀⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. However, this system has a unique solution, since the determinant of the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠷⠨⠕⠘⠊⠴⠐⠾⠘⠗⠀⠷⠨⠕⠘⠊⠂⠐⠾⠘⠗⠀⠄⠄⠄⠀⠷⠨⠕⠘⠊⠘⠰⠎⠤⠂⠘⠐⠾⠘⠗⠠⠾⠀⠠⠷⠷⠨⠕⠘⠊⠴⠐⠾⠘⠗⠬⠂⠀⠷⠨⠕⠘⠊⠂⠐⠾⠘⠗⠬⠂⠀⠄⠄⠄⠀⠷⠨⠕⠘⠊⠘⠰⠎⠤⠂⠘⠐⠾⠘⠗⠬⠂⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠷⠨⠕⠘⠊⠴⠐⠾⠘⠗⠬⠎⠤⠂⠀⠷⠨⠕⠘⠊⠂⠐⠾⠘⠗⠬⠎⠤⠂⠀⠄⠄⠄⠀⠷⠨⠕⠘⠊⠘⠰⠎⠤⠂⠘⠐⠾⠘⠗⠬⠎⠤⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">can be shown to be nonzero using Lemma 22.2.7 and the basic properties of determinants (Exercise). Therefore, this solution must be <nemeth class="inline">⠁⠰⠊⠴⠐⠀⠨⠅⠀⠁⠰⠊⠂⠐⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠁⠰⠊⠰⠰⠎⠤⠂⠐⠀⠨⠅⠀⠼⠴</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="SBu">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">22.2.2</span> <span class="title"><abbr class="acronym">BCH</abbr> Codes</span></div>
            <p id="daM">Some of the most important codes, discovered independently by A. Hocquenghem in 1959 and by R. C. Bose and D. V. Ray-Chaudhuri in 1960, are <abbr class="acronym">BCH</abbr> codes. The European and transatlantic communication systems both use <abbr class="acronym">BCH</abbr> codes. Information words to be encoded are of length <nemeth class="inline">⠼⠆⠒⠂</nemeth>, and a polynomial of degree <nemeth class="inline">⠼⠆⠲</nemeth> is used to generate the code. Since <nemeth class="inline">⠼⠆⠒⠂⠬⠆⠲⠀⠨⠅⠀⠼⠆⠢⠢⠀⠨⠅⠀⠼⠆⠘⠦⠐⠤⠂</nemeth>, we are dealing with a <nemeth class="inline">⠷⠼⠆⠢⠢⠠⠀⠼⠆⠒⠂⠾</nemeth>-block code. This <abbr class="acronym">BCH</abbr> code will detect six errors and has a failure rate of <nemeth class="inline">⠼⠂</nemeth> in <nemeth class="inline">⠼⠂⠖</nemeth> million. One advantage of <abbr class="acronym">BCH</abbr> codes is that efficient error correction algorithms exist for them.</p>
            <p id="JhV">The idea behind <abbr class="acronym">BCH</abbr> codes is to choose a generator polynomial of smallest degree that has the largest error detection and error correction  capabilities. Let <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠆⠗⠬⠂</nemeth> for some <nemeth class="inline">⠗⠀⠨⠂⠱⠀⠼⠴</nemeth>. Suppose that <nemeth class="inline">⠨⠕</nemeth> is a primitive <i class="one-letter">n</i>th root of unity over <nemeth class="inline">⠸⠠⠵⠆</nemeth>, and let <nemeth class="inline">⠍⠰⠊⠐⠷⠭⠾</nemeth> be the minimal polynomial over <nemeth class="inline">⠸⠠⠵⠆</nemeth> of <nemeth class="inline">⠨⠕⠘⠊</nemeth>. If</p>
            <div class="displaymath">
              <nemeth>⠛⠷⠭⠾⠀⠨⠅⠀⠇⠉⠍⠈⠷⠍⠂⠷⠭⠾⠠⠀⠍⠆⠷⠭⠾⠠⠀⠄⠄⠄⠀⠠⠀⠍⠰⠆⠗⠐⠷⠭⠾⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">, then the cyclic code <nemeth class="inline">⠨⠨⠷⠛⠷⠞⠾⠨⠨⠾</nemeth> in <nemeth class="inline">⠠⠗⠰⠝</nemeth> is called the <dfn class="terminology"><abbr class="acronym">BCH</abbr> code of length</dfn> <i class="one-letter">n</i> <dfn class="terminology">and distance</dfn> <i class="one-letter">d</i>. By Theorem 22.2.8, the minimum distance of <i class="one-letter">C</i> is at least <i class="one-letter">d</i>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="sTr">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="qPW">Let <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠨⠨⠷⠛⠷⠞⠾⠨⠨⠾</nemeth> be a cyclic code in <nemeth class="inline">⠠⠗⠰⠝</nemeth>. The following statements are equivalent.</p>
              <ol class="outerlist">
                <li>1. <p id="rGU">The code <i class="one-letter">C</i> is a <abbr class="acronym">BCH</abbr> code whose minimum distance is at least <i class="one-letter">d</i>.</p></li>
                <li>2. <p id="XOd">A code polynomial <nemeth class="inline">⠋⠷⠞⠾</nemeth> is in <i class="one-letter">C</i> if and only if <nemeth class="inline">⠋⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠼⠴</nemeth> for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠊⠀⠐⠅⠀⠙</nemeth>.</p></li>
                <li>3. <p id="DVm">The matrix</p><div class="displaymath"><nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠂⠀⠨⠕⠀⠨⠕⠘⠆⠐⠀⠄⠄⠄⠀⠨⠕⠘⠝⠤⠂⠐⠠⠾⠀⠠⠷⠂⠀⠨⠕⠘⠆⠐⠀⠨⠕⠘⠲⠐⠀⠄⠄⠄⠀⠨⠕⠘⠷⠝⠤⠂⠾⠷⠆⠾⠐⠠⠾⠀⠠⠷⠂⠀⠨⠕⠘⠒⠐⠀⠨⠕⠘⠖⠐⠀⠄⠄⠄⠀⠨⠕⠘⠷⠝⠤⠂⠾⠷⠒⠾⠐⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠂⠀⠨⠕⠘⠆⠗⠐⠀⠨⠕⠘⠲⠗⠐⠀⠄⠄⠄⠀⠨⠕⠘⠷⠝⠤⠂⠾⠷⠆⠗⠾⠠⠾</nemeth></div><p data-braille="continuation">is a parity-check matrix for <i class="one-letter">C</i>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="VKv">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="tKC">(1) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (2). If <nemeth class="inline">⠋⠷⠞⠾</nemeth> is in <i class="one-letter">C</i>, then <nemeth class="inline">⠛⠷⠭⠾⠳⠋⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>. Hence, for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠆⠗</nemeth>, <nemeth class="inline">⠋⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠼⠴</nemeth> since <nemeth class="inline">⠛⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠼⠴</nemeth>. Conversely, suppose that <nemeth class="inline">⠋⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠼⠴</nemeth> for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠊⠀⠐⠅⠱⠀⠙</nemeth>. Then <nemeth class="inline">⠋⠷⠭⠾</nemeth> is divisible by each <nemeth class="inline">⠍⠰⠊⠐⠷⠭⠾</nemeth>, since <nemeth class="inline">⠍⠰⠊⠐⠷⠭⠾</nemeth> is the minimal polynomial of <nemeth class="inline">⠨⠕⠘⠊</nemeth>. Therefore, <nemeth class="inline">⠛⠷⠭⠾⠳⠋⠷⠭⠾</nemeth> by the definition of <nemeth class="inline">⠛⠷⠭⠾</nemeth>. Consequently, <nemeth class="inline">⠋⠷⠭⠾</nemeth> is a codeword.</p>
              <p id="ZRL">(2) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (3). Let <nemeth class="inline">⠋⠷⠞⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠞⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠧⠞⠘⠝⠤⠂</nemeth> be in <nemeth class="inline">⠠⠗⠰⠝</nemeth>. The corresponding <i class="one-letter">n</i>-tuple in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> is <nemeth class="inline">⠸⠭⠀⠨⠅⠀⠷⠁⠴⠁⠂⠀⠄⠄⠄⠀⠁⠰⠝⠤⠂⠐⠾⠘⠞</nemeth>. By (2),</p>
              <div class="displaymath">
                <nemeth>⠠⠓⠸⠭⠀⠨⠅⠀⠁⠴⠬⠁⠂⠨⠕⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠨⠕⠘⠝⠤⠂⠐⠀⠁⠴⠬⠁⠂⠨⠕⠘⠆⠐⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠷⠨⠕⠘⠆⠐⠾⠘⠝⠤⠂⠐⠀⠣⠄⠄⠄⠀⠁⠴⠬⠁⠂⠨⠕⠘⠆⠗⠐⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠷⠨⠕⠘⠆⠗⠐⠾⠘⠝⠤⠂⠐⠀⠨⠅⠀⠋⠷⠨⠕⠾⠀⠋⠷⠨⠕⠘⠆⠐⠾⠀⠣⠄⠄⠄⠀⠋⠷⠨⠕⠘⠆⠗⠐⠾⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">exactly when <nemeth class="inline">⠋⠷⠞⠾</nemeth> is in <i class="one-letter">C</i>. Thus, <i class="one-letter">H</i> is a parity-check matrix for <i class="one-letter">C</i>.</p>
              <p id="FYU">(3) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (1). By (3), a code polynomial <nemeth class="inline">⠋⠷⠞⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠞⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠞⠘⠝⠤⠂</nemeth> is in <i class="one-letter">C</i> exactly when <nemeth class="inline">⠋⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠼⠴</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠆⠗</nemeth>. The smallest such polynomial is <nemeth class="inline">⠛⠷⠞⠾⠀⠨⠅⠀⠇⠉⠍⠈⠷⠍⠂⠷⠞⠾⠠⠀⠄⠄⠄⠀⠠⠀⠍⠰⠆⠗⠐⠷⠞⠾⠈⠾</nemeth>. Therefore, <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠨⠨⠷⠛⠷⠞⠾⠨⠨⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="ZaA">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">22.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="RhT">It is easy to verify that <nemeth class="inline">⠭⠘⠂⠢⠐⠤⠂⠀⠈⠑⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth> has a factorization</p>
              <div class="displaymath">
                <nemeth>⠭⠘⠂⠢⠐⠤⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠷⠭⠘⠆⠐⠬⠭⠬⠂⠾⠷⠭⠘⠲⠐⠬⠭⠬⠂⠾⠷⠭⠘⠲⠐⠬⠭⠘⠒⠐⠬⠂⠾⠷⠭⠘⠲⠐⠬⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠭⠬⠂⠾</nemeth>
              </div>
              <p data-braille="continuation">, where each of the factors is an irreducible polynomial. Let <nemeth class="inline">⠨⠕</nemeth> be a root of <nemeth class="inline">⠼⠂⠬⠭⠬⠭⠘⠲</nemeth>. The Galois field <nemeth class="inline">⠠⠛⠠⠋⠷⠼⠆⠘⠲⠐⠾</nemeth> is</p>
              <div class="displaymath">
                <nemeth>⠨⠷⠁⠴⠬⠁⠂⠨⠕⠬⠁⠆⠨⠕⠘⠆⠐⠬⠁⠒⠨⠕⠘⠒⠐⠒⠀⠁⠰⠊⠐⠀⠈⠑⠀⠸⠠⠵⠆⠁⠝⠙⠼⠂⠬⠨⠕⠬⠨⠕⠘⠲⠐⠀⠨⠅⠀⠼⠴⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. By Example 22.1.8, <nemeth class="inline">⠨⠕</nemeth> is a primitive <nemeth class="inline">⠼⠂⠢</nemeth>th root of unity. The minimal polynomial of <nemeth class="inline">⠨⠕</nemeth> is <nemeth class="inline">⠍⠂⠷⠭⠾⠀⠨⠅⠀⠼⠂⠬⠭⠬⠭⠘⠲</nemeth>. It is easy to see that <nemeth class="inline">⠨⠕⠘⠆</nemeth> and <nemeth class="inline">⠨⠕⠘⠲</nemeth> are also roots of <nemeth class="inline">⠍⠂⠷⠭⠾</nemeth>. The minimal polynomial of <nemeth class="inline">⠨⠕⠘⠒</nemeth> is <nemeth class="inline">⠍⠆⠷⠭⠾⠀⠨⠅⠀⠼⠂⠬⠭⠬⠭⠘⠆⠐⠬⠭⠘⠒⠐⠬⠭⠘⠲</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠛⠷⠭⠾⠀⠨⠅⠀⠍⠂⠷⠭⠾⠍⠆⠷⠭⠾⠀⠨⠅⠀⠼⠂⠬⠭⠘⠲⠐⠬⠭⠘⠖⠐⠬⠭⠘⠶⠐⠬⠭⠘⠦</nemeth>
              </div>
              <p data-braille="continuation">has roots <nemeth class="inline">⠨⠕</nemeth>, <nemeth class="inline">⠨⠕⠘⠆</nemeth>, <nemeth class="inline">⠨⠕⠘⠒</nemeth>, <nemeth class="inline">⠨⠕⠘⠲</nemeth>. Since both <nemeth class="inline">⠍⠂⠷⠭⠾</nemeth> and <nemeth class="inline">⠍⠆⠷⠭⠾</nemeth> divide <nemeth class="inline">⠭⠘⠂⠢⠐⠤⠂</nemeth>, the <abbr class="acronym">BCH</abbr> code is a <nemeth class="inline">⠷⠼⠂⠢⠠⠀⠼⠶⠾</nemeth>-code. If <nemeth class="inline">⠭⠘⠂⠢⠐⠤⠂⠀⠨⠅⠀⠛⠷⠭⠾⠓⠷⠭⠾</nemeth>, then <nemeth class="inline">⠓⠷⠭⠾⠀⠨⠅⠀⠼⠂⠬⠭⠘⠲⠐⠬⠭⠘⠖⠐⠬⠭⠘⠶</nemeth>; therefore, a parity-check matrix for this code is</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠴⠀⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="paragraphs" id="Dsw">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="ppe">Finite fields are important in a variety of applied disciplines, such as cryptography and coding theory (see introductions to these topics in other chapters). Sage has excellent support for finite fields allowing for a wide variety of computations.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="RdC">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">22.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="klZ">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="oVS">When is a field extension separable?</p>
          </article>
          <article class="exercise exercise-like" id="Qti">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="Vdb">What are the possible orders for subfields of a finite field?</p>
          </article>
          <article class="exercise exercise-like" id="wAr">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Bkk">What is the structure of the non-zero elements of a finite field?</p>
          </article>
          <article class="exercise exercise-like" id="cHA">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="hrt">Provide a characterization of finite fields using the concept of a splitting field.</p>
          </article>
          <article class="exercise exercise-like" id="IOJ">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="NyC">Why is a theorem in this chapter titled “The Freshman's Dream?”</p>
          </article>
        </section>
        <section class="exercises" id="KWV">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">22.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="loS">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="BYV">Calculate each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="kcv"><nemeth class="inline">⠈⠷⠠⠛⠠⠋⠷⠼⠒⠘⠖⠐⠾⠒⠀⠠⠛⠠⠋⠷⠼⠒⠘⠒⠐⠾⠈⠾</nemeth></p></li>
              <li>b. <p id="QjE"><nemeth class="inline">⠈⠷⠠⠛⠠⠋⠷⠼⠂⠆⠦⠾⠒⠀⠠⠛⠠⠋⠷⠼⠂⠖⠾⠈⠾</nemeth></p></li>
              <li>c. <p id="wqN"><nemeth class="inline">⠈⠷⠠⠛⠠⠋⠷⠼⠖⠆⠢⠾⠒⠀⠠⠛⠠⠋⠷⠼⠆⠢⠾⠈⠾</nemeth></p></li>
              <li>d. <p id="cxW"><nemeth class="inline">⠈⠷⠠⠛⠠⠋⠷⠏⠘⠂⠆⠐⠾⠒⠀⠠⠛⠠⠋⠷⠏⠘⠆⠐⠾⠈⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="mIG"><span class="type">Hint</span>:<p id="Wnl">Make sure that you have a field extension.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Rwb">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="ige">Calculate <nemeth class="inline">⠈⠷⠠⠛⠠⠋⠷⠏⠘⠍⠐⠾⠒⠀⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾⠈⠾</nemeth>, where <nemeth class="inline">⠝⠳⠍</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="xDk">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Onn">What is the lattice of subfields for <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠒⠴⠐⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="dKt">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="uuw">Let <nemeth class="inline">⠨⠁</nemeth> be a zero of <nemeth class="inline">⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂</nemeth> over <nemeth class="inline">⠸⠠⠵⠆</nemeth>. Construct a finite field of order <nemeth class="inline">⠼⠦</nemeth>. Show that <nemeth class="inline">⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂</nemeth> splits in <nemeth class="inline">⠸⠠⠵⠆⠷⠨⠁⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Llq"><span class="type">Hint</span>:<p id="Cuu">There are eight elements in <nemeth class="inline">⠸⠠⠵⠆⠷⠨⠁⠾</nemeth>. Exhibit two more zeros of <nemeth class="inline">⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂</nemeth> other than <nemeth class="inline">⠨⠁</nemeth> in these eight elements.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="JRC">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="aBF">Construct a finite field of order <nemeth class="inline">⠼⠆⠶</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="XzI"><span class="type">Hint</span>:<p id="iBD">Find an irreducible polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠒⠈⠷⠭⠈⠾</nemeth> of degree <nemeth class="inline">⠼⠒</nemeth> and show that <nemeth class="inline">⠸⠠⠵⠒⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> has <nemeth class="inline">⠼⠆⠶</nemeth> elements.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="pYL">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="GIO">Prove or disprove: <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> is cyclic.</p>
          </article>
          <article class="exercise exercise-like" id="WfU">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="mPX">Factor each of the following polynomials in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="IFf"><nemeth class="inline">⠭⠘⠢⠐⠤⠂</nemeth></p></li>
              <li>b. <p id="oMo"><nemeth class="inline">⠭⠘⠖⠐⠬⠭⠘⠢⠐⠬⠭⠘⠲⠐⠬⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠭⠬⠂</nemeth></p></li>
              <li>c. <p id="UTx"><nemeth class="inline">⠭⠘⠔⠐⠤⠂</nemeth></p></li>
              <li>d. <p id="BaG"><nemeth class="inline">⠭⠘⠲⠐⠬⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠭⠬⠂</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="PVj"><span class="type">Hint</span>:<p id="OIM">(a) <nemeth class="inline">⠭⠘⠢⠐⠤⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠷⠭⠘⠲⠐⠬⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠭⠬⠂⠾</nemeth>; (c) <nemeth class="inline">⠭⠘⠔⠐⠤⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠷⠭⠘⠆⠐⠬⠭⠬⠂⠾⠷⠭⠘⠖⠐⠬⠭⠘⠒⠐⠬⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Cnd">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="SXg">Prove or disprove: <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠒⠐⠬⠭⠬⠂⠨⠨⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂⠨⠨⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="cjB"><span class="type">Hint</span>:<p id="uPV">True.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ium">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="zep">Determine the number of cyclic codes of length <i class="one-letter">n</i> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠖⠠⠀⠼⠶⠠⠀⠼⠦⠠⠀⠼⠂⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="OBv">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="fly">Prove that the ideal <nemeth class="inline">⠨⠨⠷⠞⠬⠂⠨⠨⠾</nemeth> in <nemeth class="inline">⠠⠗⠰⠝</nemeth> is the code in <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> consisting of all words of even parity.</p>
          </article>
          <article class="exercise exercise-like" id="uIE">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="LsH">Construct all <abbr class="acronym">BCH</abbr> codes of</p>
            <ol class="outerlist">
              <li>a. <p id="enj">length <nemeth class="inline">⠼⠶</nemeth>.</p></li>
              <li>b. <p id="Kus">length <nemeth class="inline">⠼⠂⠢</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="AMl"><span class="type">Hint</span>:<p id="aXe">(a) Use the fact that <nemeth class="inline">⠭⠘⠶⠐⠤⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠷⠭⠘⠒⠐⠬⠭⠬⠂⠾⠷⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="aPN">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="rzQ">Prove or disprove: There exists a finite field that is algebraically closed.</p>
            <div class="solutions">
              <div class="hint solution-like" id="NaD"><span class="type">Hint</span>:<p id="Hen">False.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GWW">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="XGZ">Let <i class="one-letter">p</i> be prime. Prove that the field of rational functions <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠷⠭⠾</nemeth> is an infinite field of characteristic <i class="one-letter">p</i>.</p>
          </article>
          <article class="exercise exercise-like" id="nef">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="DOi">Let <i class="one-letter">D</i> be an integral domain of characteristic <i class="one-letter">p</i>. Prove that <nemeth class="inline">⠷⠁⠤⠃⠾⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠁⠘⠏⠘⠘⠝⠐⠤⠃⠘⠏⠘⠘⠝</nemeth> for all <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠙</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Tlo">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="jVr">Show that every element in a finite field can be written as the sum of two squares.</p>
          </article>
          <article class="exercise exercise-like" id="zsx">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="QcA">Let <i class="one-letter">E</i> and <i class="one-letter">F</i> be subfields of a finite field <i class="one-letter">K</i>. If <i class="one-letter">E</i> is isomorphic to <i class="one-letter">F</i>, show that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="fzG">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="wjJ">Let <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠑⠀⠸⠐⠅⠀⠠⠅</nemeth> be fields. If <i class="one-letter">K</i> is a separable extension of <i class="one-letter">F</i>, show that <i class="one-letter">K</i> is also separable extension of <i class="one-letter">E</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="xRF"><span class="type">Hint</span>:<p id="nlw">If <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠑⠈⠷⠭⠈⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="LGP">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="cqS">Let <i class="one-letter">E</i> be an extension of a finite field <i class="one-letter">F</i>, where <i class="one-letter">F</i> has <i class="one-letter">q</i> elements. Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> be algebraic over <i class="one-letter">F</i> of degree <i class="one-letter">n</i>. Prove that <nemeth class="inline">⠠⠋⠷⠨⠁⠾</nemeth> has <nemeth class="inline">⠟⠘⠝</nemeth> elements.</p>
            <div class="solutions">
              <div class="hint solution-like" id="KfX"><span class="type">Hint</span>:<p id="TsF">Since <nemeth class="inline">⠨⠁</nemeth> is algebraic over <i class="one-letter">F</i> of degree <i class="one-letter">n</i>, we can write any element <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠋⠷⠨⠁⠾</nemeth> uniquely as <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠁⠴⠬⠁⠂⠨⠁⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂</nemeth> with <nemeth class="inline">⠁⠰⠊⠐⠀⠈⠑⠀⠠⠋</nemeth>. There are <nemeth class="inline">⠟⠘⠝</nemeth> possible <i class="one-letter">n</i>-tuples <nemeth class="inline">⠷⠁⠴⠠⠀⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠤⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="rNY">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="Iyb">Show that every finite extension of a finite field <i class="one-letter">F</i> is simple; that is, if <i class="one-letter">E</i> is a finite extension of a finite field <i class="one-letter">F</i>, prove that there exists an <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> such that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="XVh">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="oFk">Show that for every <i class="one-letter">n</i> there exists an irreducible polynomial of degree <i class="one-letter">n</i> in <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Ecq">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="UMt">Prove that the <dfn class="terminology">Frobenius map</dfn> <nemeth class="inline">⠨⠠⠋⠒⠀⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾⠀⠫⠕⠀⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth> given by <nemeth class="inline">⠨⠠⠋⠒⠀⠨⠁⠀⠫⠳⠒⠒⠕⠀⠨⠁⠘⠏</nemeth> is an automorphism of order <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="kjz">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="ATC">Show that every element in <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth> can be written in the form <nemeth class="inline">⠁⠘⠏</nemeth> for some unique <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="QqI">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="haL">Let <i class="one-letter">E</i> and <i class="one-letter">F</i> be subfields of <nemeth class="inline">⠠⠛⠠⠋⠷⠏⠘⠝⠐⠾</nemeth>. If <nemeth class="inline">⠳⠠⠑⠳⠀⠨⠅⠀⠏⠘⠗</nemeth> and <nemeth class="inline">⠳⠠⠋⠳⠀⠨⠅⠀⠏⠘⠎</nemeth>, what is the order of <nemeth class="inline">⠠⠑⠨⠩⠠⠋</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="wxR">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Wilson's Theorem.</span>
            </h6>
            <p id="NhU">Let <i class="one-letter">p</i> be prime. Prove that <nemeth class="inline">⠷⠏⠤⠂⠾⠖⠀⠀⠸⠇⠀⠤⠼⠂⠷⠍⠕⠙⠀⠏⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="bei"><span class="type">Hint</span>:<p id="zzO">Factor <nemeth class="inline">⠭⠘⠏⠤⠂⠐⠤⠂</nemeth> over <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="cFa">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="tpd">If <nemeth class="inline">⠛⠷⠞⠾</nemeth> is the minimal generator polynomial for a cyclic code <i class="one-letter">C</i> in <nemeth class="inline">⠠⠗⠰⠝</nemeth>, prove that the constant term of <nemeth class="inline">⠛⠷⠭⠾</nemeth> is <nemeth class="inline">⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="IMj">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="Zwm">Often it is conceivable that a burst of errors might occur during transmission, as in the case of a power surge. Such a momentary burst of interference might alter several consecutive bits in a codeword. Cyclic codes permit the detection of such error bursts. Let <i class="one-letter">C</i> be an <nemeth class="inline">⠷⠝⠠⠀⠅⠾</nemeth>-cyclic code. Prove that any error burst up to <nemeth class="inline">⠝⠤⠅</nemeth> digits can be detected.</p>
          </article>
          <article class="exercise exercise-like" id="oTs">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="FDv">Prove that the rings <nemeth class="inline">⠠⠗⠰⠝</nemeth> and <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> are isomorphic as vector spaces.</p>
          </article>
          <article class="exercise exercise-like" id="VaB">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="lKE">Let <i class="one-letter">C</i> be a code in <nemeth class="inline">⠠⠗⠰⠝</nemeth> that is generated by <nemeth class="inline">⠛⠷⠞⠾</nemeth>. If <nemeth class="inline">⠨⠨⠷⠋⠷⠞⠾⠨⠨⠾</nemeth> is another code in <nemeth class="inline">⠠⠗⠰⠝</nemeth>, show that <nemeth class="inline">⠨⠨⠷⠛⠷⠞⠾⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠋⠷⠞⠾⠨⠨⠾</nemeth> if and only if <nemeth class="inline">⠋⠷⠭⠾</nemeth> divides <nemeth class="inline">⠛⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="BhK">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="RRN">Let <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠨⠨⠷⠛⠷⠞⠾⠨⠨⠾</nemeth> be a cyclic code in <nemeth class="inline">⠠⠗⠰⠝</nemeth> and suppose that <nemeth class="inline">⠭⠘⠝⠐⠤⠂⠀⠨⠅⠀⠛⠷⠭⠾⠓⠷⠭⠾</nemeth>, where <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠛⠴⠬⠛⠂⠭⠬⠄⠄⠄⠬⠛⠰⠝⠤⠅⠐⠭⠘⠝⠤⠅</nemeth> and <nemeth class="inline">⠓⠷⠭⠾⠀⠨⠅⠀⠓⠴⠬⠓⠂⠭⠬⠄⠄⠄⠬⠓⠰⠅⠐⠭⠘⠅</nemeth>. Define <i class="one-letter">G</i> to be the <nemeth class="inline">⠝⠈⠡⠅</nemeth> matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠛⠴⠀⠴⠀⠄⠄⠄⠀⠴⠠⠾⠀⠠⠷⠛⠂⠀⠛⠴⠀⠄⠄⠄⠀⠴⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠛⠰⠝⠤⠅⠐⠀⠛⠰⠝⠤⠅⠤⠂⠐⠀⠄⠄⠄⠀⠛⠴⠠⠾⠀⠠⠷⠴⠀⠛⠰⠝⠤⠅⠐⠀⠄⠄⠄⠀⠛⠂⠠⠾⠀⠠⠷⠣⠄⠄⠄⠀⠣⠄⠄⠄⠀⠰⠄⠄⠄⠀⠣⠄⠄⠄⠠⠾⠀⠠⠷⠴⠀⠴⠀⠄⠄⠄⠀⠛⠰⠝⠤⠅⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">and <i class="one-letter">H</i> to be the <nemeth class="inline">⠷⠝⠤⠅⠾⠈⠡⠝</nemeth> matrix</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠠⠷⠼⠴⠀⠄⠄⠄⠀⠴⠀⠴⠀⠓⠰⠅⠐⠀⠄⠄⠄⠀⠓⠴⠠⠾⠀⠠⠷⠴⠀⠄⠄⠄⠀⠴⠀⠓⠰⠅⠐⠀⠄⠄⠄⠀⠓⠴⠀⠴⠠⠾⠀⠠⠷⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠀⠄⠄⠄⠠⠾⠀⠠⠷⠓⠰⠅⠐⠀⠄⠄⠄⠀⠓⠴⠀⠴⠀⠴⠀⠄⠄⠄⠀⠴⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <ol class="outerlist">
              <li>a. <p id="CPT">Prove that <i class="one-letter">G</i> is a generator matrix for <i class="one-letter">C</i>.</p></li>
              <li>b. <p id="iXc">Prove that <i class="one-letter">H</i> is a parity-check matrix for <i class="one-letter">C</i>.</p></li>
              <li>c. <p id="Pel">Show that <nemeth class="inline">⠠⠓⠠⠛⠀⠨⠅⠀⠼⠴</nemeth>.</p></li>
            </ol>
          </article>
        </section>
        <section class="exercises" id="ree">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">22.5</span> <span class="title">Additional Exercises: Error Correction for <abbr class="acronym">BCH</abbr> Codes</span></div>
          <section class="introduction" id="hoT">
            <p id="pKD"><abbr class="acronym">BCH</abbr> codes have very attractive error correction algorithms. Let <i class="one-letter">C</i> be a <abbr class="acronym">BCH</abbr> code in <nemeth class="inline">⠠⠗⠰⠝</nemeth>, and suppose that a code polynomial <nemeth class="inline">⠉⠷⠞⠾⠀⠨⠅⠀⠉⠴⠬⠉⠂⠞⠬⠄⠄⠄⠬⠉⠰⠝⠤⠂⠐⠞⠘⠝⠤⠂</nemeth> is transmitted. Let <nemeth class="inline">⠺⠷⠞⠾⠀⠨⠅⠀⠺⠴⠬⠺⠂⠞⠬⠀⠄⠄⠄⠀⠺⠰⠝⠤⠂⠐⠞⠘⠝⠤⠂</nemeth> be the polynomial in <nemeth class="inline">⠠⠗⠰⠝</nemeth> that is received. If errors have occurred in bits <nemeth class="inline">⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐</nemeth>, then <nemeth class="inline">⠺⠷⠞⠾⠀⠨⠅⠀⠉⠷⠞⠾⠬⠑⠷⠞⠾</nemeth>, where <nemeth class="inline">⠑⠷⠞⠾⠀⠨⠅⠀⠞⠘⠁⠂⠐⠬⠞⠘⠁⠆⠐⠬⠄⠄⠄⠬⠞⠘⠁⠘⠰⠅</nemeth> is the <dfn class="terminology">error polynomial</dfn>.  The decoder must determine the integers <nemeth class="inline">⠁⠰⠊</nemeth> and then recover <nemeth class="inline">⠉⠷⠞⠾</nemeth> from <nemeth class="inline">⠺⠷⠞⠾</nemeth> by flipping the <nemeth class="inline">⠁⠰⠊</nemeth>th bit. From <nemeth class="inline">⠺⠷⠞⠾</nemeth> we can compute <nemeth class="inline">⠺⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠎⠰⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠆⠗</nemeth>, where <nemeth class="inline">⠨⠕</nemeth> is a primitive <i class="one-letter">n</i>th root of unity over <nemeth class="inline">⠸⠠⠵⠆</nemeth>. We say the <dfn class="terminology">syndrome</dfn>  of <nemeth class="inline">⠺⠷⠞⠾</nemeth> is <nemeth class="inline">⠎⠂⠠⠀⠄⠄⠄⠀⠠⠀⠎⠰⠆⠗⠐</nemeth>.</p>
          </section>
          <article class="exercise exercise-like" id="Nwc">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="xYW">Show that <nemeth class="inline">⠺⠷⠞⠾</nemeth> is a code polynomial if and only if <nemeth class="inline">⠎⠰⠊⠐⠀⠨⠅⠀⠼⠴</nemeth> for all <i class="one-letter">i</i>.</p>
          </article>
          <article class="exercise exercise-like" id="tDl">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="egf">Show that</p>
            <div class="displaymath">
              <nemeth>⠎⠰⠊⠐⠀⠨⠅⠀⠺⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠑⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠨⠕⠘⠊⠁⠂⠐⠬⠨⠕⠘⠊⠁⠆⠐⠬⠄⠄⠄⠬⠨⠕⠘⠊⠁⠘⠰⠅</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠆⠗</nemeth>. The <dfn class="terminology">error-locator polynomial</dfn> is defined to be</p>
            <div class="displaymath">
              <nemeth>⠎⠷⠭⠾⠀⠨⠅⠀⠷⠭⠬⠨⠕⠘⠁⠂⠐⠾⠷⠭⠬⠨⠕⠘⠁⠆⠐⠾⠀⠄⠄⠄⠀⠷⠭⠬⠨⠕⠘⠁⠘⠰⠅⠘⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="ZKu">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Kno">Recall the <nemeth class="inline">⠷⠼⠂⠢⠠⠀⠼⠶⠾</nemeth>-block <abbr class="acronym">BCH</abbr> code in Example 22.2.6. By Theorem 8.1.13, this code is capable of correcting two errors. Suppose that these errors occur in bits <nemeth class="inline">⠁⠂</nemeth> and <nemeth class="inline">⠁⠆</nemeth>. The error-locator polynomial is <nemeth class="inline">⠎⠷⠭⠾⠀⠨⠅⠀⠷⠭⠬⠨⠕⠘⠁⠂⠐⠾⠷⠭⠬⠨⠕⠘⠁⠆⠐⠾</nemeth>. Show that</p>
            <div class="displaymath">
              <nemeth>⠎⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆⠐⠬⠎⠂⠭⠬⠷⠎⠂⠘⠆⠐⠬⠹⠎⠒⠌⠎⠂⠼⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="FRD">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="qux">Let <nemeth class="inline">⠺⠷⠞⠾⠀⠨⠅⠀⠼⠂⠬⠞⠘⠆⠐⠬⠞⠘⠲⠐⠬⠞⠘⠢⠐⠬⠞⠘⠶⠐⠬⠞⠘⠂⠆⠐⠬⠞⠘⠂⠒</nemeth>. Determine what the originally transmitted code polynomial was.</p>
          </article>
        </section>
        <section class="references" id="Yrk">
          <div class="none"><span class="type">References</span> <span class="codenumber">22.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="Eyt"><div class="bibitem">[1]</div>  <div class="bibentry"> Childs, L. <i>A Concrete Introduction to Higher Algebra</i>. 2nd ed. Springer-Verlag, New York, 1995.</div></article>
          <article class="bib" id="kFC"><div class="bibitem">[2]</div>  <div class="bibentry"> Gåding, L. and Tambour, T. <i>Algebra for Computer Science</i>. Springer-Verlag, New York, 1988.</div></article>
          <article class="bib" id="QML"><div class="bibitem">[3]</div>  <div class="bibentry"> Lidl, R. and Pilz, G. <i>Applied Abstract Algebra</i>. 2nd ed. Springer, New York, 1998. An excellent presentation of finite fields and their applications.</div></article>
          <article class="bib" id="wTU"><div class="bibitem">[4]</div>  <div class="bibentry"> Mackiw, G. <i>Applications of Abstract Algebra</i>. Wiley, New York, 1985.</div></article>
          <article class="bib" id="dbd"><div class="bibitem">[5]</div>  <div class="bibentry"> Roman, S. <i>Coding and Information Theory</i>. Springer-Verlag, New York, 1992.</div></article>
          <article class="bib" id="Jim"><div class="bibitem">[6]</div>  <div class="bibentry"> van Lint, J. H. <i>Introduction to Coding Theory</i>. Springer, New York, 1999.</div></article>
        </section>
        <section class="section" id="vNX">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">22.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="kTt">
            <p id="VRM">You have noticed in this chapter that finite fields have a great deal of structure. We have also seen finite fields in Sage regularly as examples of rings and fields. Now we can combine the two, mostly using commands we already know, plus a few new ones.</p>
          </section>
          <section class="subsection" id="yID">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">22.7.1</span> <span class="title">Creating Finite Fields</span></div>
            <p id="Vwn">By Theorem 22.1.6 we know that all finite fields of a given order are isomorphic and that possible orders are limited to powers of primes. We can use the <code class="code-inline tex2jax_ignore">FiniteField()</code> command, as before, or a shorter equivalent is <code class="code-inline tex2jax_ignore">GF()</code>. Optionally, we can specify an irreducible polynomial for the contruction of the field. We can view this polynomial as the generator of the principal ideal of a polynomial ring, or we can view it as a “re-writing” rule for powers of the field's generator that allow us to multiply elements and reformulate them as linear combinations of lesser powers.</p>
            <p id="BDw">Absent providing an irreducible polynomial, Sage will use a Conway polynomial. You can determine these with the <code class="code-inline tex2jax_ignore">conway_polynomial()</code> command, or just build a finite field and request the defining polynomial with the <code class="code-inline tex2jax_ignore">.polynomial()</code> method.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;a&gt; = GF(7^15); F
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Finite Field in a of size 7^15
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.polynomial()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a^15 + 5*a^6 + 6*a^5 + 6*a^4 + 4*a^3 + a^2 + 2*a + 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a^15 + 5*a^6 + 6*a^5 + 6*a^4 + 4*a^3 + a^2 + 2*a + 4
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">conway_polynomial(7, 15)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">x^15 + 5*x^6 + 6*x^5 + 6*x^4 + 4*x^3 + x^2 + 2*x + 4
</div>
            </article>
            <p id="hKF">Just to be more readable, we coerce a list of coefficients into the set of polynomials (obtained with the <code class="code-inline tex2jax_ignore">.parent()</code> method on a simple polynomial) to define a polynomial.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">y = polygen(Integers(7), 'y')
P = y.parent()
p = P([4, 5, 2, 6, 3, 3, 6, 2, 1, 1, 2, 5, 6, 3, 5, 1]); p
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">y^15 + 5*y^14 + 3*y^13 + 6*y^12 + 5*y^11 + 2*y^10 + y^9 +
y^8 + 2*y^7 + 6*y^6 + 3*y^5 + 3*y^4 + 6*y^3 + 2*y^2 + 5*y + 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">p.is_irreducible()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">T.&lt;b&gt; = GF(7^15, modulus=p); T
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Finite Field in b of size 7^15
</div>
            </article>
          </section>
          <section class="subsection" id="ePM">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">22.7.2</span> <span class="title">Logarithms in Finite Fields</span></div>
            <p id="NRO">One useful command we have not described is the <code class="code-inline tex2jax_ignore">.log()</code> method for elements of a finite field. Since we now know that the multiplicative group of nonzero elements is cyclic, we can express every element as a power of the generator. The <code class="code-inline tex2jax_ignore">log</code> method will return that power.</p>
            <p id="tYX">Usually we will want to use the generator as the base of a lograithm computation in a finite field. However, other bases may be used, wih the understanding that if the base is not a generator, then the logarithm may not exist (i.e. there may not be a solution to the relevant equation).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F.&lt;a&gt; = GF(5^4)
a^458
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3*a^3 + 2*a^2 + a + 3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(3*a^3 + 2*a^2 + a + 3).log(a)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">458
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">exponent = (3*a^3 + 2*a^2 + a + 3).log(2*a^3 + 4*a^2 + 4*a)
exponent
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">211
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(2*a^3 + 4*a^2 + 4*a)^exponent == 3*a^3 + 2*a^2 + a + 3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(3*a^3 + 2*a^2 + a + 3).log(a^2 + 4*a + 4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
ValueError: No discrete log of 3*a^3 + 2*a^2 + a + 3 found
to base a^2 + 4*a + 4
</div>
            </article>
            <p id="agg">Since we already know many Sage commands, there is not much else worth introducing before we can work profitably with finite fields. The exercises explore the ways we can examine and exploit the structure of finite fields in Sage.</p>
          </section>
        </section>
        <section class="exercises" id="Xln">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">22.8</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="lYM">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="WBG">Create a finite field of order <nemeth class="inline">⠼⠢⠘⠆</nemeth> and then factor <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆⠢⠐⠤⠭</nemeth> over this field. Comment on what is interesting about this result and why it is not a surprise.</p>
          </article>
          <article class="exercise exercise-like" id="SfV">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="CIP">Corollary 22.1.11 says that the nonzero elements of a finite field are a cyclic group under multiplication. The generator used in Sage is also a generator of this multiplicative group. To see this, create a finite field of order <nemeth class="inline">⠼⠆⠘⠶</nemeth>. Create two lists of the elements of the field: first, use the <code class="code-inline tex2jax_ignore">.list()</code> method, then use a list comprehension to generate the proper powers of the generator you specified when you created the field.</p>
            <p id="iPY">The second list should be the whole field, but will be missing zero. Create the zero element of the field (perhaps by coercing <nemeth class="inline">⠼⠴</nemeth> into the field) and <code class="code-inline tex2jax_ignore">.append()</code> it to the list of powers. Apply the <code class="code-inline tex2jax_ignore">sorted()</code> command to each list and then test the lists for equality.</p>
          </article>
          <article class="exercise exercise-like" id="yne">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="OXh">Subfields of a finite field are completely classified by Theorem 22.1.7. It is possible to create two finite fields of the correct orders for the supefield/subfield realtionship to hold, and to translate between one and the other. However, in this exercise we will create a subfield of a finite field from scratch. Since the group of nonzero elements in a finite field is cyclic, the nonzero elements of a subfield will form a subgroup of the cyclic group, and necessarily will be cyclic.</p>
            <p id="veq">Create a finite field of order <nemeth class="inline">⠼⠒⠘⠖</nemeth>. Theory says there is a subfield of order <nemeth class="inline">⠼⠒⠘⠆</nemeth>, since <nemeth class="inline">⠼⠆⠳⠀⠼⠖</nemeth>. Determine a generator of multiplicative order <nemeth class="inline">⠼⠦</nemeth> for the nonzero elements of this subfield, and construct these <nemeth class="inline">⠼⠦</nemeth> elements. Add in the field's zero element to this list. It should be clear that this set of <nemeth class="inline">⠼⠔</nemeth> elements is closed under multiplication. Absent our theorems about finite fields and cyclic groups, the closure under addition is not a given. Write a single statement that checks if this set is also closed under addition, by considering all possible sums of elements from the set.</p>
          </article>
          <article class="exercise exercise-like" id="eun">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="blz">This problem investigates the “separableness” of <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾</nemeth>. You can create this number field quickly with the <code class="code-inline tex2jax_ignore">NumberFieldTower</code> constructor, along with the polynomials <nemeth class="inline">⠭⠘⠆⠐⠤⠒</nemeth> and <nemeth class="inline">⠭⠘⠆⠐⠤⠶</nemeth>. Flatten the tower with the <code class="code-inline tex2jax_ignore">.absolute_field()</code> method and use the <code class="code-inline tex2jax_ignore">.structure()</code> method to retrieve mappings between the tower and the flattened version. Name the tower <code class="code-inline tex2jax_ignore">N</code> and use <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code> as generators. Name the flattened version <code class="code-inline tex2jax_ignore">L</code> with <code class="code-inline tex2jax_ignore">c</code> as a generator.</p>
            <p id="HsI">Create a nontrivial (“random”) element of <code class="code-inline tex2jax_ignore">L</code> using as many powers of <code class="code-inline tex2jax_ignore">c</code> as possible (check the degree of <code class="code-inline tex2jax_ignore">L</code> to see how many linearly independent powers there are). Request from Sage the minimum polynomial of your random element, thus ensuring the element is a root. Construct the minimum polynomial as a polynomial over <code class="code-inline tex2jax_ignore">N</code>, the field tower, and find its factorization. Your factorization should have only linear factors. Each root should be an expression in <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code>, so convert each root into an expression with mathematical notation involving <nemeth class="inline">⠜⠒⠻</nemeth> and <nemeth class="inline">⠜⠶⠻</nemeth>. Use one of the mappings to verify that one of the roots is indeed the original random element.</p>
            <p id="nzR">Create a few more random elements, and find a factorization (in <code class="code-inline tex2jax_ignore">N</code> or in <code class="code-inline tex2jax_ignore">L</code>). For a field to be separable, every element of the field should be a root of <em class="emphasis">some</em> separable polynomial. The minimal polynomial is a good polynomial to test. (Why?) Based on the evidence, does it appear that <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾</nemeth> is a separable extension?</p>
          </article>
          <article class="exercise exercise-like" id="KBw">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="THa">Exercise 22.4.21 describes the Frobenius Map, an automorphism of a finite field. If <code class="code-inline tex2jax_ignore">F</code> is a finite field in Sage, then <code class="code-inline tex2jax_ignore">End(F)</code> will create the automorphism group of F, the set of all bijective mappings between the field and itself.</p>
            <ol class="outerlist">
              <li>a. <p id="nGV">Work Exercise 22.4.21 to gain an understanding of how and why the Frobenius mapping is a field automorphism. (Do not include any of this in your answer to this question, but understand that the following will be much easier if you do this problem first.)</p></li>
              <li>b. <p id="TOe">For some small, but not trivial, finite fields locate the Frobenius map in the automorphism group. Small might mean <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠢⠠⠀⠼⠶</nemeth> and <nemeth class="inline">⠼⠒⠀⠐⠅⠱⠀⠝⠀⠐⠅⠱⠀⠼⠂⠴</nemeth>, with <i class="one-letter">n</i> prime versus composite.</p></li>
              <li>c. <p id="zVn">Once you have located the Frobenius map, describe the other automorphisms. In other words, with a bit of investigation, you should find a description of the automorphisms which will allow you to accurately predict the entire automorphism group for a finite field you have not already explored. (Hint: the automorphism group is a group. What if you “do the operation” between the Frobenius map and itself? Just what is the operation? Try using Sage's multiplicative notation with the elements of the automorphism group.)</p></li>
              <li>d. <p id="gcw">What is the “structure” of the automorphism group? What special status does the Frobenius map have in this group?</p></li>
              <li>e. <p id="MjF">For any field, the subfield known as the fixed field is an important construction, and will be especially important in the next chapter. Given an automorphism <nemeth class="inline">⠨⠞</nemeth> of a field <i class="one-letter">E</i>, the subset, <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠨⠷⠃⠀⠈⠑⠀⠠⠑⠳⠞⠷⠃⠾⠀⠨⠅⠀⠃⠨⠾</nemeth>, can be shown to be a subfield of <i class="one-letter">E</i>. It is known as the <dfn class="terminology">fixed field</dfn> of <nemeth class="inline">⠨⠞</nemeth> in <i class="one-letter">E</i>. For each automorphism of <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠛⠠⠋⠷⠼⠒⠘⠖⠐⠾</nemeth> identify the fixed field of the automorphism. Since we understand the structure of subfields of a finite field, it is enough to just determine the order of the fixed field to be able to identify the subfield precisely.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="qIF">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="zOj">Exercise 22.4.15 suggests that every element of a finite field may be written (expressed) as a sum of squares. This exercise suggests computational experiments which might help you formulate a proof for the exercise.</p>
            <ol class="outerlist">
              <li>a. <p id="sqO">Construct two small, but not too small, finite fields, one with <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠆</nemeth> and the other with an odd prime. Repeat the following for each field, <i class="one-letter">F</i>.</p></li>
              <li>b. <p id="YxX">Choose a “random” element of the field, say <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠋</nemeth>. Construct the sets</p><div class="displaymath"><nemeth>⠀⠀⠨⠷⠭⠘⠆⠐⠳⠀⠭⠀⠈⠑⠀⠠⠋⠨⠾⠀⠀⠀⠨⠷⠁⠤⠭⠘⠆⠐⠳⠀⠭⠀⠈⠑⠀⠠⠋⠨⠾</nemeth></div><p data-braille="continuation">using Sage sets with the <nemeth class="inline">⠠⠎⠑⠞⠷⠾</nemeth> constructor.  (Be careful: <code class="code-inline tex2jax_ignore">set()</code> is a Python command which behaves differently in fundamental ways.)</p></li>
              <li>c. <p id="EFg">Examine the size of the two sets and the size of their intersection (<code class="code-inline tex2jax_ignore">.intersection()</code>). Try different elements for <i class="one-letter">a</i>, perhaps writing a loop to try <em class="emphasis">all</em> possible values. Note that <nemeth class="inline">⠏⠀⠨⠅⠀⠼⠆</nemeth> will behave quite differently.</p></li>
              <li>d. <p id="kMp">Suppose you have an element of the intersection. (You can get one with <code class="code-inline tex2jax_ignore">.an_element()</code>.) How does this lead to the sum of squares proposed in the exercise?</p></li>
              <li>e. <p id="QTy">Can you write a Python function that accepts a finite field whose order is a power of an odd prime and then lists each element as a sum of squares?</p></li>
            </ol>
          </article>
        </section>
      </section>
      <section class="chapter" id="hgP">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">23</span> <span class="title">Galois Theory</span></div>
        <section class="introduction" id="zyO">
          <p id="gbJ">A classic problem of algebra is to find the solutions of a polynomial equation. The solution to the quadratic equation was known in antiquity. Italian mathematicians found general solutions to the general cubic and quartic equations in the sixteenth century; however, attempts to solve the general fifth-degree, or quintic, polynomial were repulsed for the next three hundred years. Certainly, equations such as <nemeth class="inline">⠭⠘⠢⠐⠤⠂⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠭⠘⠖⠐⠤⠭⠘⠒⠐⠤⠖⠀⠨⠅⠀⠼⠴</nemeth> could be solved, but no solution like the quadratic formula was found for the general quintic,</p>
          <div class="displaymath">
            <nemeth>⠁⠭⠘⠢⠐⠬⠃⠭⠘⠲⠐⠬⠉⠭⠘⠒⠐⠬⠙⠭⠘⠆⠐⠬⠑⠭⠬⠋⠀⠨⠅⠀⠼⠴</nemeth>
          </div>
          <p data-braille="continuation">. Finally, at the beginning of the nineteenth century, Ruffini and Abel both found quintics that could not be solved with any formula. It was Galois, however, who provided the full explanation by showing which polynomials could and could not be solved by formulas. He discovered the connection between groups and field extensions. Galois theory demonstrates the strong interdependence of group and field theory, and has had far-reaching implications beyond its original purpose.</p>
          <p id="MiS">In this chapter we will prove the Fundamental Theorem of Galois Theory. This result will be used to establish the insolvability of the quintic and to prove the Fundamental Theorem of Algebra.</p>
        </section>
        <section class="section" id="iWc">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">23.1</span> <span class="title">Field Automorphisms</span></div>
          <section class="introduction" id="fFX">
            <p id="sqb">Our first task is to establish a link between group theory and field theory by examining automorphisms of fields.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="ZgR">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="IEs">The set of all automorphisms of a field <i class="one-letter">F</i> is a group under composition of functions.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ISA">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="vGg">If <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> are automorphisms of <i class="one-letter">F</i>, then so are <nemeth class="inline">⠨⠎⠨⠞</nemeth> and <nemeth class="inline">⠨⠎⠘⠤⠼⠂</nemeth>. The identity is certainly an automorphism; hence, the set of all automorphisms of a field <i class="one-letter">F</i> is indeed a group.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="Foa">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="oLB">Let <i class="one-letter">E</i> be a field extension of <i class="one-letter">F</i>. Then the set of all automorphisms of <i class="one-letter">E</i> that fix <i class="one-letter">F</i> elementwise is a group; that is, the set of all automorphisms <nemeth class="inline">⠨⠎⠒⠀⠠⠑⠀⠫⠕⠀⠠⠑</nemeth> such that <nemeth class="inline">⠎⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁</nemeth> for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth> is a group.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="oZJ">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="bNp">We need only show that the set of automorphisms of <i class="one-letter">E</i> that fix <i class="one-letter">F</i> elementwise is a subgroup of the group of all automorphisms of <i class="one-letter">E</i>. Let <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> be two automorphisms of <i class="one-letter">E</i> such that <nemeth class="inline">⠎⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁</nemeth> and <nemeth class="inline">⠞⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁</nemeth> for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>. Then <nemeth class="inline">⠎⠞⠷⠨⠁⠾⠀⠨⠅⠀⠎⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁</nemeth> and <nemeth class="inline">⠎⠘⠤⠼⠂⠐⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁</nemeth>. Since the identity fixes every element of <i class="one-letter">E</i>, the set of automorphisms of <i class="one-letter">E</i> that leave elements of <i class="one-letter">F</i> fixed is a subgroup of the entire group of automorphisms of <i class="one-letter">E</i>.</p>
            </article>
            <p id="Yxk">Let <i class="one-letter">E</i> be a field extension of <i class="one-letter">F</i>. We will denote the full group of automorphisms of <i class="one-letter">E</i> by <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠑⠾</nemeth>. We define the <dfn class="terminology">Galois group</dfn>  of <i class="one-letter">E</i> over <i class="one-letter">F</i> to be the group of automorphisms of <i class="one-letter">E</i> that fix <i class="one-letter">F</i> elementwise; that is,</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠀⠨⠅⠀⠨⠷⠎⠀⠈⠑⠀⠠⠁⠥⠞⠷⠠⠑⠾⠒⠀⠎⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁⠋⠕⠗⠀⠁⠇⠇⠨⠁⠀⠈⠑⠀⠠⠋⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠋⠷⠭⠾</nemeth> is a polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> and <i class="one-letter">E</i> is the splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth> over <i class="one-letter">F</i>, then we define the Galois group of <nemeth class="inline">⠋⠷⠭⠾</nemeth> to be <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>. </p>
            <article class="example example-like" data-braille="example-like" id="iAD">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="qAO">Complex conjugation, defined by <nemeth class="inline">⠨⠎⠒⠀⠁⠬⠃⠊⠀⠫⠳⠒⠒⠕⠀⠁⠤⠃⠊</nemeth>, is an automorphism of the complex numbers. Since</p>
              <div class="displaymath">
                <nemeth>⠎⠷⠁⠾⠀⠨⠅⠀⠎⠷⠁⠬⠴⠊⠾⠀⠨⠅⠀⠁⠤⠴⠊⠀⠨⠅⠀⠁</nemeth>
              </div>
              <p data-braille="continuation">, the automorphism defined by complex conjugation must be in <nemeth class="inline">⠠⠛⠷⠸⠠⠉⠸⠌⠸⠠⠗⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="OHM">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="WHX">Consider the fields <nemeth class="inline">⠸⠠⠟⠀⠸⠐⠅⠀⠸⠠⠟⠷⠜⠢⠻⠾⠀⠸⠐⠅⠀⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth>. Then for <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠷⠜⠢⠻⠾</nemeth>,</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠷⠁⠬⠃⠜⠒⠻⠾⠀⠨⠅⠀⠁⠤⠃⠜⠒⠻</nemeth>
              </div>
              <p data-braille="continuation">is an automorphism of <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth> leaving <nemeth class="inline">⠸⠠⠟⠷⠜⠢⠻⠾</nemeth> fixed. Similarly,</p>
              <div class="displaymath">
                <nemeth>⠨⠞⠷⠁⠬⠃⠜⠢⠻⠾⠀⠨⠅⠀⠁⠤⠃⠜⠢⠻</nemeth>
              </div>
              <p data-braille="continuation">is an automorphism of <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth> leaving <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠾</nemeth> fixed. The automorphism <nemeth class="inline">⠨⠍⠀⠨⠅⠀⠨⠎⠨⠞</nemeth> moves both <nemeth class="inline">⠜⠒⠻</nemeth> and <nemeth class="inline">⠜⠢⠻</nemeth>. It will soon be clear that <nemeth class="inline">⠨⠷⠊⠙⠠⠀⠨⠎⠠⠀⠨⠞⠠⠀⠨⠍⠨⠾</nemeth> is the Galois group of <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>. The following table shows that this group is isomorphic to <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>.</p>
              <div class="displaymath">
                <nemeth>⠀⠀⠊⠙⠀⠨⠎⠀⠨⠞⠀⠨⠍⠀⠊⠙⠀⠊⠙⠀⠨⠎⠀⠨⠞⠀⠨⠍⠀⠨⠎⠀⠨⠎⠀⠊⠙⠀⠨⠍⠀⠨⠞⠀⠨⠞⠀⠨⠞⠀⠨⠍⠀⠊⠙⠀⠨⠎⠀⠨⠍⠀⠨⠍⠀⠨⠞⠀⠨⠎⠀⠊⠙</nemeth>
              </div>
              <p data-braille="continuation">We may also regard the field <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth> as a vector space over <nemeth class="inline">⠸⠠⠟</nemeth> that has basis <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠒⠻⠠⠀⠜⠢⠻⠠⠀⠜⠂⠢⠻⠨⠾</nemeth>. It is no coincidence that <nemeth class="inline">⠳⠠⠛⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠸⠌⠸⠠⠟⠾⠳⠀⠨⠅⠀⠈⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠒⠀⠸⠠⠟⠾⠈⠾⠀⠀⠨⠅⠀⠼⠲</nemeth>.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="lvj">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="USK">Let <i class="one-letter">E</i> be a field extension of <i class="one-letter">F</i> and <nemeth class="inline">⠋⠷⠭⠾</nemeth> be a polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Then any automorphism in <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> defines a permutation of the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth> that lie in <i class="one-letter">E</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="VgS">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="HUy">Let</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠁⠆⠭⠘⠆⠐⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝</nemeth>
              </div>
              <p data-braille="continuation">and suppose that <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> is a zero of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. Then for <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>,</p>
              <div class="displaymath">
                <nemeth>⠼⠴⠀⠀⠨⠅⠀⠎⠷⠼⠴⠾⠀⠀⠀⠀⠨⠅⠀⠎⠷⠋⠷⠨⠁⠾⠾⠀⠀⠀⠀⠨⠅⠀⠎⠷⠁⠴⠬⠁⠂⠨⠁⠬⠁⠆⠨⠁⠘⠆⠐⠬⠄⠄⠄⠬⠁⠰⠝⠐⠨⠁⠘⠝⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠴⠬⠁⠂⠎⠷⠨⠁⠾⠬⠁⠆⠈⠷⠎⠷⠨⠁⠾⠈⠾⠘⠆⠐⠬⠄⠄⠄⠬⠁⠰⠝⠐⠈⠷⠎⠷⠨⠁⠾⠈⠾⠘⠝⠐⠆</nemeth>
              </div>
              <p data-braille="continuation">therefore, <nemeth class="inline">⠎⠷⠨⠁⠾</nemeth> is also a zero of <nemeth class="inline">⠋⠷⠭⠾</nemeth>.</p>
            </article>
            <p id="EEt">Let <i class="one-letter">E</i> be an algebraic extension of a field <i class="one-letter">F</i>. Two elements <nemeth class="inline">⠨⠁⠠⠀⠨⠃⠀⠈⠑⠀⠠⠑</nemeth> are <dfn class="terminology">conjugate</dfn>  over <i class="one-letter">F</i> if they have the same minimal polynomial. For example, in the field <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth> the elements <nemeth class="inline">⠜⠆⠻</nemeth> and <nemeth class="inline">⠤⠜⠆⠻</nemeth> are conjugate over <nemeth class="inline">⠸⠠⠟</nemeth> since they are both roots of the irreducible polynomial <nemeth class="inline">⠭⠘⠆⠐⠤⠆</nemeth>.</p>
            <p id="kLC">A converse of the last proposition exists. The proof follows directly from Lemma 21.2.4.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="RCs">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="AZT">If <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> are conjugate over <i class="one-letter">F</i>, there exists an isomorphism <nemeth class="inline">⠨⠎⠒⠀⠠⠋⠷⠨⠁⠾⠀⠫⠕⠀⠠⠋⠷⠨⠃⠾</nemeth> such that <nemeth class="inline">⠨⠎</nemeth> is the identity when restricted to <i class="one-letter">F</i>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="gLq">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="XNq">Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> be a polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> and suppose that <i class="one-letter">E</i> is the splitting field for <nemeth class="inline">⠋⠷⠭⠾</nemeth> over <i class="one-letter">F</i>. If <nemeth class="inline">⠋⠷⠭⠾</nemeth> has no repeated roots, then</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠳⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="proof-193">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="p-3711">We will use mathematical induction on <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth>. If <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋</nemeth> and there is nothing to show. If <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠂⠀⠼⠂</nemeth>, let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠏⠷⠭⠾⠟⠷⠭⠾</nemeth>, where <nemeth class="inline">⠏⠷⠭⠾</nemeth> is irreducible of degree <i class="one-letter">d</i>. We may assume that <nemeth class="inline">⠙⠀⠨⠂⠀⠼⠂</nemeth>; otherwise, <nemeth class="inline">⠋⠷⠭⠾</nemeth> splits over <i class="one-letter">F</i> and  <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠼⠂</nemeth>. Let <nemeth class="inline">⠨⠁</nemeth> be a root of <nemeth class="inline">⠏⠷⠭⠾</nemeth>. If <nemeth class="inline">⠨⠋⠒⠀⠠⠋⠷⠨⠁⠾⠀⠫⠕⠀⠠⠑</nemeth> is any injective homomorphism, then <nemeth class="inline">⠋⠷⠨⠁⠾⠀⠨⠅⠀⠨⠃</nemeth> is a root of <nemeth class="inline">⠏⠷⠭⠾</nemeth>, and <nemeth class="inline">⠨⠋⠒⠀⠠⠋⠷⠨⠁⠾⠀⠫⠕⠀⠠⠋⠷⠨⠃⠾</nemeth> is a field automorphism. Since <nemeth class="inline">⠋⠷⠭⠾</nemeth> has no repeated roots, <nemeth class="inline">⠏⠷⠭⠾</nemeth> has exactly <i class="one-letter">d</i> roots <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠑</nemeth>. By Proposition 23.1.5, there are exactly <i class="one-letter">d</i> isomorphisms <nemeth class="inline">⠨⠋⠒⠀⠠⠋⠷⠨⠁⠾⠀⠫⠕⠀⠠⠋⠷⠨⠃⠰⠊⠐⠾</nemeth> that fix <i class="one-letter">F</i>, one for each root <nemeth class="inline">⠨⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠃⠰⠙⠐</nemeth> of <nemeth class="inline">⠏⠷⠭⠾</nemeth> (see Figure 23.1.8).</p>
              <figure class="figure figure-like" data-braille="figure-like" id="figure-galois-group-order">
                <div class="displaymath">
                  <nemeth>⠠⠑⠀⠐⠀⠫⠕⠀⠣⠨⠓⠻⠀⠠⠑⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠠⠋⠷⠨⠁⠾⠀⠐⠀⠫⠕⠀⠣⠨⠋⠻⠀⠠⠋⠷⠨⠃⠾⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠠⠋⠀⠐⠀⠫⠕⠀⠣⠊⠙⠑⠝⠞⠊⠞⠽⠻⠀⠠⠋</nemeth>
                </div>
                <figcaption>
                  <span class="type">Figure</span>
                  <span class="space"> </span>
                  <span class="codenumber">23.1.8<span class="period">.</span></span>
                  <span class="space"> </span>
                </figcaption>
              </figure>
              <p id="p-3713">Since <i class="one-letter">E</i> is a splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth> over <i class="one-letter">F</i>, it is also a splitting field over <nemeth class="inline">⠠⠋⠷⠨⠁⠾</nemeth>. Similarly, <i class="one-letter">E</i> is a splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth> over <nemeth class="inline">⠠⠋⠷⠨⠃⠾</nemeth>.  Since <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠷⠨⠁⠾⠈⠾⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠸⠌⠙</nemeth>, induction shows that each of the <i class="one-letter">d</i> isomorphisms <nemeth class="inline">⠨⠋</nemeth> has exactly <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠸⠌⠙</nemeth> extensions, <nemeth class="inline">⠨⠓⠒⠀⠠⠑⠀⠫⠕⠀⠠⠑</nemeth>, and we have constructed <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth> isomorphisms that fix <i class="one-letter">F</i>. Finally, suppose that <nemeth class="inline">⠨⠎</nemeth> is any automorphism fixing <i class="one-letter">F</i>.  Then <nemeth class="inline">⠨⠎</nemeth> restricted to <nemeth class="inline">⠠⠋⠷⠨⠁⠾</nemeth> is <nemeth class="inline">⠨⠋</nemeth> for some <nemeth class="inline">⠨⠋⠒⠀⠠⠋⠷⠨⠁⠾⠀⠫⠕⠀⠠⠋⠷⠨⠃⠾</nemeth>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="qfc">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="yfn">Let <i class="one-letter">F</i> be a finite field with a finite extension <i class="one-letter">E</i> such that <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠅</nemeth>. Then <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is cyclic of order <i class="one-letter">k</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Smm">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="UiQ">Let <i class="one-letter">p</i> be the characteristic of <i class="one-letter">E</i> and <i class="one-letter">F</i> and assume that the orders of <i class="one-letter">E</i> and <i class="one-letter">F</i> are <nemeth class="inline">⠏⠘⠍</nemeth> and <nemeth class="inline">⠏⠘⠝</nemeth>, respectively. Then <nemeth class="inline">⠝⠅⠀⠨⠅⠀⠍</nemeth>. We can also assume that <i class="one-letter">E</i> is the splitting field of <nemeth class="inline">⠭⠘⠏⠘⠘⠍⠐⠤⠭</nemeth> over a subfield of order <i class="one-letter">p</i>. Therefore, <i class="one-letter">E</i> must also be the splitting field of <nemeth class="inline">⠭⠘⠏⠘⠘⠍⠐⠤⠭</nemeth> over <i class="one-letter">F</i>. Applying Theorem 23.1.7, we find that <nemeth class="inline">⠳⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠳⠀⠨⠅⠀⠅</nemeth>.</p>
              <p id="ApZ">To prove that <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is cyclic, we must find a generator for <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>. Let <nemeth class="inline">⠨⠎⠒⠀⠠⠑⠀⠫⠕⠀⠠⠑</nemeth> be defined by <nemeth class="inline">⠎⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁⠘⠏⠘⠘⠝</nemeth>. We claim that <nemeth class="inline">⠨⠎</nemeth> is the element in <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> that we are seeking. We first need to show that <nemeth class="inline">⠨⠎</nemeth> is in <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠑⠾</nemeth>. If <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> are in <i class="one-letter">E</i>,</p>
              <div class="displaymath">
                <nemeth>⠎⠷⠨⠁⠬⠨⠃⠾⠀⠨⠅⠀⠷⠨⠁⠬⠨⠃⠾⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠨⠁⠘⠏⠘⠘⠝⠐⠬⠨⠃⠘⠏⠘⠘⠝⠐⠀⠨⠅⠀⠎⠷⠨⠁⠾⠬⠎⠷⠨⠃⠾</nemeth>
              </div>
              <p data-braille="continuation">by Lemma 22.1.3. Also, it is easy to show that <nemeth class="inline">⠎⠷⠨⠁⠨⠃⠾⠀⠨⠅⠀⠎⠷⠨⠁⠾⠎⠷⠨⠃⠾</nemeth>. Since <nemeth class="inline">⠨⠎</nemeth> is a nonzero homomorphism of fields, it must be injective. It must also be onto, since <i class="one-letter">E</i> is a finite field. We know that <nemeth class="inline">⠨⠎</nemeth> must be in <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>, since <i class="one-letter">F</i> is the splitting field of <nemeth class="inline">⠭⠘⠏⠘⠘⠝⠐⠤⠭</nemeth> over the base field of order <i class="one-letter">p</i>. This means that <nemeth class="inline">⠨⠎</nemeth> leaves every element in <i class="one-letter">F</i> fixed. Finally, we must show that the order of <nemeth class="inline">⠨⠎</nemeth> is <i class="one-letter">k</i>. By Theorem 23.1.7, we know that</p>
              <div class="displaymath">
                <nemeth>⠎⠘⠅⠐⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁⠘⠏⠘⠘⠝⠅⠐⠀⠨⠅⠀⠨⠁⠘⠏⠘⠘⠍⠐⠀⠨⠅⠀⠨⠁</nemeth>
              </div>
              <p data-braille="continuation">is the identity of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>. However, <nemeth class="inline">⠨⠎⠘⠗</nemeth> cannot be the identity for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠅</nemeth>; otherwise, <nemeth class="inline">⠭⠘⠏⠘⠘⠝⠗⠐⠤⠭</nemeth> would have <nemeth class="inline">⠏⠘⠍</nemeth> roots, which is impossible.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="uOV">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="CPg">We can now confirm that the Galois group of <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth> in Example 23.1.4 is indeed isomorphic to <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>. Certainly the group <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠎⠠⠀⠨⠞⠠⠀⠨⠍⠨⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠸⠌⠸⠠⠟⠾</nemeth>; however, <i class="one-letter">H</i> must be all of <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠸⠌⠸⠠⠟⠾</nemeth>, since</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠓⠳⠀⠨⠅⠀⠈⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠳⠠⠛⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠸⠌⠸⠠⠟⠾⠳⠀⠨⠅⠀⠼⠲</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="aWe">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="iWp">Let us compute the Galois group of</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠬⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠭⠬⠂</nemeth>
              </div>
              <p data-braille="continuation">over <nemeth class="inline">⠸⠠⠟</nemeth>. We know that <nemeth class="inline">⠋⠷⠭⠾</nemeth> is irreducible by Exercise 17.5.20 in Chapter 17. Furthermore, since <nemeth class="inline">⠷⠭⠤⠂⠾⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠢⠐⠤⠂</nemeth>, we can use DeMoivre's Theorem to determine that the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth> are <nemeth class="inline">⠨⠕⠘⠊</nemeth>, where  <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠲</nemeth> and</p>
              <div class="displaymath">
                <nemeth>⠨⠕⠀⠨⠅⠀⠉⠕⠎⠀⠷⠼⠆⠨⠏⠸⠌⠢⠾⠬⠊⠎⠊⠝⠀⠷⠼⠆⠨⠏⠸⠌⠢⠾</nemeth>
              </div>
              <p data-braille="continuation">. Hence, the splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth> must be <nemeth class="inline">⠸⠠⠟⠷⠨⠕⠾</nemeth>. We can define automorphisms <nemeth class="inline">⠨⠎⠰⠊</nemeth> of <nemeth class="inline">⠸⠠⠟⠷⠨⠕⠾</nemeth> by <nemeth class="inline">⠎⠰⠊⠐⠷⠨⠕⠾⠀⠨⠅⠀⠨⠕⠘⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠲</nemeth>. It is easy to check that these are indeed distinct automorphisms in <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠸⠠⠟⠷⠨⠕⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠳⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾⠳⠀⠨⠅⠀⠼⠲</nemeth>
              </div>
              <p data-braille="continuation">, the <nemeth class="inline">⠨⠎⠰⠊</nemeth>'s must be all of <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾</nemeth>. Therefore, <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠲</nemeth> since <nemeth class="inline">⠨⠕</nemeth> is a generator for the Galois group.</p>
            </article>
          </section>
          <section class="subsection" id="NnY">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.1.1</span> <span class="title">Separable Extensions</span></div>
            <p id="fGk">Many of the results that we have just proven depend on the fact that a polynomial <nemeth class="inline">⠋⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> has no repeated roots in its splitting field. It is evident that we need to know exactly when a polynomial factors into distinct linear factors in its splitting field. Let <i class="one-letter">E</i> be the splitting field of a polynomial <nemeth class="inline">⠋⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Suppose that <nemeth class="inline">⠋⠷⠭⠾</nemeth> factors over <i class="one-letter">E</i> as</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠷⠭⠤⠨⠁⠂⠾⠘⠝⠂⠐⠷⠭⠤⠨⠁⠆⠾⠘⠝⠆⠐⠀⠄⠄⠄⠀⠷⠭⠤⠨⠁⠰⠗⠐⠾⠘⠝⠘⠰⠗⠘⠐⠀⠨⠅⠀⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠊⠀⠨⠅⠀⠼⠂⠣⠗⠻⠷⠭⠤⠨⠁⠰⠊⠐⠾⠘⠝⠘⠰⠊⠘</nemeth>
            </div>
            <p data-braille="continuation">. We define the <dfn class="terminology">multiplicity</dfn>  of a root <nemeth class="inline">⠨⠁⠰⠊</nemeth> of <nemeth class="inline">⠋⠷⠭⠾</nemeth> to be <nemeth class="inline">⠝⠰⠊</nemeth>. A root with multiplicity 1 is called a <dfn class="terminology">simple root</dfn>.  Recall that a polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> of degree <i class="one-letter">n</i> is <dfn class="terminology">separable</dfn> if it has <i class="one-letter">n</i> distinct roots in its splitting field <i class="one-letter">E</i>. Equivalently, <nemeth class="inline">⠋⠷⠭⠾</nemeth> is separable if it factors into distinct linear factors over <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth>. An extension <i class="one-letter">E</i> of <i class="one-letter">F</i> is a <dfn class="terminology">separable extension</dfn> of <i class="one-letter">F</i> if every element in <i class="one-letter">E</i> is the root of a separable polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Also recall that <nemeth class="inline">⠋⠷⠭⠾</nemeth> is separable if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠋⠷⠭⠾⠠⠀⠋⠘⠄⠐⠷⠭⠾⠾⠀⠨⠅⠀⠼⠂</nemeth> (Lemma 22.1.5).</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="nFV">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.12</span>
                <span class="period">.</span>
              </h6>
              <p id="hhc">Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> be an irreducible polynomial over <i class="one-letter">F</i>. If the characteristic of <i class="one-letter">F</i> is <nemeth class="inline">⠼⠴</nemeth>, then <nemeth class="inline">⠋⠷⠭⠾</nemeth> is separable. If the characteristic of <i class="one-letter">F</i> is <i class="one-letter">p</i> and <nemeth class="inline">⠋⠷⠭⠾⠀⠌⠨⠅⠀⠛⠷⠭⠘⠏⠐⠾</nemeth> for some <nemeth class="inline">⠛⠷⠭⠾</nemeth> in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, then <nemeth class="inline">⠋⠷⠭⠾</nemeth> is also separable.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Bob">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="gxi">First assume that <nemeth class="inline">⠉⠓⠁⠗⠠⠋⠀⠨⠅⠀⠼⠴</nemeth>. Since <nemeth class="inline">⠙⠑⠛⠀⠋⠘⠄⠐⠷⠭⠾⠀⠐⠅⠀⠙⠑⠛⠀⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠋⠷⠭⠾</nemeth> is irreducible, the only way <nemeth class="inline">⠛⠉⠙⠀⠷⠋⠷⠭⠾⠠⠀⠋⠘⠄⠐⠷⠭⠾⠾⠀⠌⠨⠅⠀⠼⠂</nemeth> is if <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾</nemeth> is the zero polynomial; however, this is impossible in a field of characteristic zero. If <nemeth class="inline">⠉⠓⠁⠗⠠⠋⠀⠨⠅⠀⠏</nemeth>, then <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾</nemeth> can be the zero polynomial if every coefficient of <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾</nemeth> is a multiple of <i class="one-letter">p</i>. This can happen only if we have a polynomial of the form <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠘⠏⠐⠬⠁⠆⠭⠘⠆⠏⠐⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠏</nemeth>.</p>
            </article>
            <p id="LNt">Certainly extensions of a field <i class="one-letter">F</i> of the form <nemeth class="inline">⠠⠋⠷⠨⠁⠾</nemeth> are some of the easiest to study and understand. Given a field extension <i class="one-letter">E</i> of <i class="one-letter">F</i>, the obvious question to ask is when it is possible to find an element <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> such that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth>. In this case, <nemeth class="inline">⠨⠁</nemeth> is called a <dfn class="terminology">primitive element</dfn>.  We already know that primitive elements exist for certain extensions. For example,</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠀⠨⠅⠀⠸⠠⠟⠷⠜⠒⠻⠬⠜⠢⠻⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠟⠷⠣⠒⠜⠢⠻⠠⠀⠜⠢⠻⠊⠾⠀⠨⠅⠀⠸⠠⠟⠷⠣⠖⠜⠢⠻⠊⠾</nemeth>
            </div>
            <p data-braille="continuation">. Corollary 22.1.12 tells us that there exists a primitive element for any finite extension of a finite field. The next theorem tells us that we can often find a primitive element.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="HyM">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">23.1.13</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Primitive Element Theorem.</span>
              </h6>
              <p id="DUz">Let <i class="one-letter">E</i> be a finite separable extension of a field <i class="one-letter">F</i>. Then there exists an <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> such that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="EiH">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="MEr">We already know that there is no problem if <i class="one-letter">F</i> is a finite field. Suppose that <i class="one-letter">E</i> is a finite extension of an infinite field. We will prove the result for <nemeth class="inline">⠠⠋⠷⠨⠁⠠⠀⠨⠃⠾</nemeth>. The general case easily follows when we use mathematical induction. Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> be  the minimal polynomials of <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth>, respectively. Let <i class="one-letter">K</i> be the field in which both <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> split. Suppose that <nemeth class="inline">⠋⠷⠭⠾</nemeth> has zeros <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> in <i class="one-letter">K</i> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> has zeros <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠨⠃⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠃⠰⠍⠐</nemeth> in <i class="one-letter">K</i>. All of these zeros have multiplicity <nemeth class="inline">⠼⠂</nemeth>, since <i class="one-letter">E</i> is separable over <i class="one-letter">F</i>. Since <i class="one-letter">F</i> is infinite, we can find an <i class="one-letter">a</i> in <i class="one-letter">F</i> such that</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠌⠨⠅⠀⠹⠨⠁⠰⠊⠐⠤⠨⠁⠌⠨⠃⠤⠨⠃⠰⠚⠐⠼</nemeth>
              </div>
              <p data-braille="continuation">for all <i class="one-letter">i</i> and <i class="one-letter">j</i> with <nemeth class="inline">⠚⠀⠌⠨⠅⠀⠼⠂</nemeth>. Therefore, <nemeth class="inline">⠁⠷⠨⠃⠤⠨⠃⠰⠚⠐⠾⠀⠌⠨⠅⠀⠨⠁⠰⠊⠐⠤⠨⠁</nemeth>. Let <nemeth class="inline">⠨⠛⠀⠨⠅⠀⠨⠁⠬⠁⠨⠃</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠨⠛⠀⠨⠅⠀⠨⠁⠬⠁⠨⠃⠀⠌⠨⠅⠀⠨⠁⠰⠊⠐⠬⠁⠨⠃⠰⠚⠐⠆</nemeth>
              </div>
              <p data-braille="continuation">hence, <nemeth class="inline">⠨⠛⠤⠁⠨⠃⠰⠚⠐⠀⠌⠨⠅⠀⠨⠁⠰⠊</nemeth> for all <nemeth class="inline">⠊⠠⠀⠚</nemeth> with <nemeth class="inline">⠚⠀⠌⠨⠅⠀⠼⠂</nemeth>. Define <nemeth class="inline">⠓⠷⠭⠾⠀⠈⠑⠀⠠⠋⠷⠨⠛⠾⠈⠷⠭⠈⠾</nemeth> by <nemeth class="inline">⠓⠷⠭⠾⠀⠨⠅⠀⠋⠷⠨⠛⠤⠁⠭⠾</nemeth>. Then <nemeth class="inline">⠓⠷⠨⠃⠾⠀⠨⠅⠀⠋⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. However, <nemeth class="inline">⠓⠷⠨⠃⠰⠚⠐⠾⠀⠌⠨⠅⠀⠼⠴</nemeth> for <nemeth class="inline">⠚⠀⠌⠨⠅⠀⠼⠂</nemeth>. Hence, <nemeth class="inline">⠓⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> have a single common factor in <nemeth class="inline">⠠⠋⠷⠨⠛⠾⠈⠷⠭⠈⠾</nemeth>; that is, the minimal polynomial of <nemeth class="inline">⠨⠃</nemeth> over <nemeth class="inline">⠠⠋⠷⠨⠛⠾</nemeth> must be linear, since <nemeth class="inline">⠨⠃</nemeth> is the only zero common to both <nemeth class="inline">⠛⠷⠭⠾</nemeth> and <nemeth class="inline">⠓⠷⠭⠾</nemeth>. So <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠋⠷⠨⠛⠾</nemeth> and <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠨⠛⠤⠁⠨⠃</nemeth> is in <nemeth class="inline">⠠⠋⠷⠨⠛⠾</nemeth>. Hence, <nemeth class="inline">⠠⠋⠷⠨⠁⠠⠀⠨⠃⠾⠀⠨⠅⠀⠠⠋⠷⠨⠛⠾</nemeth>.</p>
            </article>
          </section>
        </section>
        <section class="section" id="Pdl">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">23.2</span> <span class="title">The Fundamental Theorem</span></div>
          <section class="introduction" id="LNg">
            <p id="QSL">The goal of this section is to prove the Fundamental Theorem of Galois Theory. This theorem explains the connection between the subgroups of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> and the intermediate fields between <i class="one-letter">E</i> and <i class="one-letter">F</i>.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="xJB">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Nol">Let <nemeth class="inline">⠨⠷⠨⠎⠰⠊⠐⠒⠀⠊⠀⠈⠑⠀⠠⠊⠨⠾</nemeth> be a  collection of automorphisms of a field <i class="one-letter">F</i>. Then </p>
              <div class="displaymath">
                <nemeth>⠠⠋⠰⠨⠷⠎⠰⠰⠊⠰⠨⠾⠐⠀⠨⠅⠀⠨⠷⠁⠀⠈⠑⠀⠠⠋⠒⠀⠎⠰⠊⠐⠷⠁⠾⠀⠨⠅⠀⠁⠋⠕⠗⠀⠁⠇⠇⠎⠰⠊⠐⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">is a subfield of <i class="one-letter">F</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="hvk">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="sLA">Let <nemeth class="inline">⠎⠰⠊⠐⠷⠁⠾⠀⠨⠅⠀⠁</nemeth> and <nemeth class="inline">⠎⠰⠊⠐⠷⠃⠾⠀⠨⠅⠀⠃</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠎⠰⠊⠐⠷⠁⠬⠤⠃⠾⠀⠨⠅⠀⠎⠰⠊⠐⠷⠁⠾⠬⠤⠎⠰⠊⠐⠷⠃⠾⠀⠨⠅⠀⠁⠬⠤⠃</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠎⠰⠊⠐⠷⠁⠃⠾⠀⠨⠅⠀⠎⠰⠊⠐⠷⠁⠾⠎⠰⠊⠐⠷⠃⠾⠀⠨⠅⠀⠁⠃</nemeth>
              </div>
              <p data-braille="continuation">. If <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>, then  <nemeth class="inline">⠎⠰⠊⠐⠷⠁⠘⠤⠼⠂⠐⠾⠀⠨⠅⠀⠈⠷⠎⠰⠊⠐⠷⠁⠾⠈⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠘⠤⠼⠂</nemeth>. Finally, <nemeth class="inline">⠎⠰⠊⠐⠷⠼⠴⠾⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠎⠰⠊⠐⠷⠼⠂⠾⠀⠨⠅⠀⠼⠂</nemeth> since <nemeth class="inline">⠨⠎⠰⠊</nemeth> is an automorphism.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="Wml">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="emw">Let <i class="one-letter">F</i> be a field and let <i class="one-letter">G</i> be a subgroup of <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠋⠾</nemeth>. Then </p>
              <div class="displaymath">
                <nemeth>⠠⠋⠰⠠⠛⠐⠀⠨⠅⠀⠨⠷⠨⠁⠀⠈⠑⠀⠠⠋⠒⠀⠎⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁⠋⠕⠗⠀⠁⠇⠇⠎⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">is a subfield of <i class="one-letter">F</i>.</p>
            </article>
            <p id="wZU">The subfield <nemeth class="inline">⠠⠋⠰⠨⠷⠨⠎⠰⠰⠊⠰⠨⠾</nemeth> of <i class="one-letter">F</i> is called the <dfn class="terminology">fixed field</dfn>  of <nemeth class="inline">⠨⠷⠨⠎⠰⠊⠐⠨⠾</nemeth>. The field fixed by a subgroup <i class="one-letter">G</i> of <nemeth class="inline">⠠⠁⠥⠞⠷⠠⠋⠾</nemeth> will be denoted by <nemeth class="inline">⠠⠋⠰⠠⠛</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="Hdn">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="Pdy">Let <nemeth class="inline">⠨⠎⠒⠀⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠀⠫⠕⠀⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth> be the automorphism that maps <nemeth class="inline">⠜⠒⠻</nemeth> to <nemeth class="inline">⠤⠜⠒⠻</nemeth>. Then <nemeth class="inline">⠸⠠⠟⠷⠜⠢⠻⠾</nemeth> is the subfield of <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth> left fixed by <nemeth class="inline">⠨⠎</nemeth>.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="dQK">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="tvu">Let <i class="one-letter">E</i> be a splitting field over <i class="one-letter">F</i> of a separable polynomial. Then <nemeth class="inline">⠠⠑⠰⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠐⠀⠨⠅⠀⠠⠋</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="NCt">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="YSJ">Let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>. Clearly, <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠑⠰⠠⠛⠐⠀⠸⠐⠅⠀⠠⠑</nemeth>. Also, <i class="one-letter">E</i> must be a splitting field of <nemeth class="inline">⠠⠑⠰⠠⠛</nemeth> and <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠀⠨⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠑⠰⠠⠛⠐⠾</nemeth>. By Theorem 23.1.7,</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠛⠳⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠑⠰⠠⠛⠐⠈⠾⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <nemeth class="inline">⠈⠷⠠⠑⠰⠠⠛⠐⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠼⠂</nemeth>. Consequently,  <nemeth class="inline">⠠⠑⠰⠠⠛⠐⠀⠨⠅⠀⠠⠋</nemeth>.</p>
            </article>
            <p id="dhd">A large number of mathematicians first learned Galois theory from Emil Artin's monograph on the subject [1]. The very clever proof of the following lemma is due to Artin.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="JXT">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="ZCD">Let <i class="one-letter">G</i> be a finite group of automorphisms of <i class="one-letter">E</i> and let <nemeth class="inline">⠠⠋⠀⠨⠅⠀⠠⠑⠰⠠⠛</nemeth>. Then <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠐⠅⠱⠀⠳⠠⠛⠳</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="tJC">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="EZS">Let <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠝</nemeth>. We must show that any set of <nemeth class="inline">⠝⠬⠂</nemeth> elements <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠬⠂⠐</nemeth> in <i class="one-letter">E</i> is linearly dependent over <i class="one-letter">F</i>; that is, we need to find elements <nemeth class="inline">⠁⠰⠊⠐⠀⠈⠑⠀⠠⠋</nemeth>, not all zero, such that</p>
              <div class="displaymath">
                <nemeth>⠁⠂⠨⠁⠂⠬⠁⠆⠨⠁⠆⠬⠄⠄⠄⠬⠁⠰⠝⠬⠂⠐⠨⠁⠰⠝⠬⠂⠐⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. Suppose that <nemeth class="inline">⠨⠎⠂⠀⠨⠅⠀⠊⠙⠠⠀⠨⠎⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠎⠰⠝⠐</nemeth> are the automorphisms in <i class="one-letter">G</i>. The homogeneous system of linear equations</p>
              <div class="displaymath">
                <nemeth>⠎⠂⠷⠨⠁⠂⠾⠭⠂⠬⠎⠂⠷⠨⠁⠆⠾⠭⠆⠬⠄⠄⠄⠬⠎⠂⠷⠨⠁⠰⠝⠬⠂⠐⠾⠭⠰⠝⠬⠂⠀⠀⠨⠅⠀⠼⠴⠀⠎⠆⠷⠨⠁⠂⠾⠭⠂⠬⠎⠆⠷⠨⠁⠆⠾⠭⠆⠬⠄⠄⠄⠬⠎⠆⠷⠨⠁⠰⠝⠬⠂⠐⠾⠭⠰⠝⠬⠂⠀⠀⠨⠅⠀⠼⠴⠀⠀⠀⠣⠄⠄⠄⠀⠀⠀⠎⠰⠝⠐⠷⠨⠁⠂⠾⠭⠂⠬⠎⠰⠝⠐⠷⠨⠁⠆⠾⠭⠆⠬⠄⠄⠄⠬⠎⠰⠝⠐⠷⠨⠁⠰⠝⠬⠂⠐⠾⠭⠰⠝⠬⠂⠀⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">has more unknowns than equations. From linear algebra we know that this system has a nontrivial solution, say <nemeth class="inline">⠭⠰⠊⠐⠀⠨⠅⠀⠁⠰⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝⠬⠂</nemeth>. Since <nemeth class="inline">⠨⠎⠂</nemeth> is the identity, the first equation translates to</p>
              <div class="displaymath">
                <nemeth>⠁⠂⠨⠁⠂⠬⠁⠆⠨⠁⠆⠬⠄⠄⠄⠬⠁⠰⠝⠬⠂⠐⠨⠁⠰⠝⠬⠂⠐⠀⠨⠅⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. The problem is that some of the <nemeth class="inline">⠁⠰⠊</nemeth>'s may be in <i class="one-letter">E</i> but not in <i class="one-letter">F</i>. We must show that this is impossible.</p>
              <p id="lhb">Suppose that at least one of the <nemeth class="inline">⠁⠰⠊</nemeth>'s is in <i class="one-letter">E</i> but not in <i class="one-letter">F</i>. By rearranging the <nemeth class="inline">⠨⠁⠰⠊</nemeth>'s we may assume that <nemeth class="inline">⠁⠂</nemeth> is nonzero. Since any nonzero multiple of a solution is also a solution, we can also assume that <nemeth class="inline">⠁⠂⠀⠨⠅⠀⠼⠂</nemeth>. Of all possible solutions fitting this description, we choose the one with the smallest number of nonzero terms. Again, by rearranging <nemeth class="inline">⠨⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠬⠂⠐</nemeth> if necessary, we can assume that <nemeth class="inline">⠁⠆</nemeth> is in <i class="one-letter">E</i> but not in <i class="one-letter">F</i>. Since <i class="one-letter">F</i> is the subfield of <i class="one-letter">E</i> that is fixed elementwise by <i class="one-letter">G</i>, there exists a <nemeth class="inline">⠨⠎⠰⠊</nemeth> in <i class="one-letter">G</i> such that <nemeth class="inline">⠎⠰⠊⠐⠷⠁⠆⠾⠀⠌⠨⠅⠀⠁⠆</nemeth>. Applying <nemeth class="inline">⠨⠎⠰⠊</nemeth> to each equation in the system, we end up with the same homogeneous system, since <i class="one-letter">G</i> is a group. Therefore, <nemeth class="inline">⠭⠂⠀⠨⠅⠀⠎⠰⠊⠐⠷⠁⠂⠾⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠭⠆⠀⠨⠅⠀⠎⠰⠊⠐⠷⠁⠆⠾</nemeth>, <nemeth class="inline">⠄⠄⠄</nemeth>, <nemeth class="inline">⠭⠰⠝⠬⠂⠐⠀⠨⠅⠀⠎⠰⠊⠐⠷⠁⠰⠝⠬⠂⠐⠾</nemeth> is also a solution of the original system. We know that a linear combination of two solutions of a homogeneous system is also a solution; consequently,</p>
              <div class="displaymath">
                <nemeth>⠭⠂⠀⠀⠨⠅⠀⠼⠂⠤⠂⠀⠨⠅⠀⠼⠴⠀⠭⠆⠀⠀⠨⠅⠀⠁⠆⠤⠎⠰⠊⠐⠷⠁⠆⠾⠀⠀⠀⠣⠄⠄⠄⠀⠀⠀⠭⠰⠝⠬⠂⠀⠀⠨⠅⠀⠁⠰⠝⠬⠂⠐⠤⠎⠰⠊⠐⠷⠁⠰⠝⠬⠂⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">must be another solution of the system. This is a nontrivial solution because <nemeth class="inline">⠎⠰⠊⠐⠷⠁⠆⠾⠀⠌⠨⠅⠀⠁⠆</nemeth>, and has fewer nonzero entries than our original solution. This is a contradiction, since the number of nonzero solutions to our original solution was assumed to be minimal. We can therefore conclude that <nemeth class="inline">⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠬⠂⠐⠀⠈⠑⠀⠠⠋</nemeth>.</p>
            </article>
            <p id="Jom">Let <i class="one-letter">E</i> be an algebraic extension of <i class="one-letter">F</i>. If every irreducible polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> with a root in <i class="one-letter">E</i> has all of its roots in <i class="one-letter">E</i>, then <i class="one-letter">E</i> is called a <dfn class="terminology">normal extension</dfn>  of <i class="one-letter">F</i>; that is, every irreducible polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> containing a root in <i class="one-letter">E</i> is the product of linear factors in <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="MSz">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="kbI">Let <i class="one-letter">E</i> be a field extension of <i class="one-letter">F</i>. Then the following statements are equivalent.</p>
              <ol class="outerlist">
                <li>1. <p id="kiM"><i class="one-letter">E</i> is a finite, normal, separable extension of <i class="one-letter">F</i>.</p></li>
                <li>2. <p id="QpV"><i class="one-letter">E</i> is a splitting field over <i class="one-letter">F</i> of a separable polynomial.</p></li>
                <li>3. <p id="wxe"><nemeth class="inline">⠠⠋⠀⠨⠅⠀⠠⠑⠰⠠⠛</nemeth> for some finite group <i class="one-letter">G</i> of automorphisms of <i class="one-letter">E</i>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="kpQ">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Rok">(1) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (2). Let <i class="one-letter">E</i> be a finite, normal, separable extension of <i class="one-letter">F</i>. By the Primitive Element Theorem, we can find an <nemeth class="inline">⠨⠁</nemeth> in <i class="one-letter">E</i> such that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠁⠾</nemeth>. Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> be the minimal polynomial of <nemeth class="inline">⠨⠁</nemeth> over <i class="one-letter">F</i>. The field <i class="one-letter">E</i> must contain all of the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth> since it is a normal extension <i class="one-letter">F</i>; hence, <i class="one-letter">E</i> is a splitting field for <nemeth class="inline">⠋⠷⠭⠾</nemeth>.</p>
              <p id="xvt">(2) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (3). Let <i class="one-letter">E</i> be the splitting field over <i class="one-letter">F</i> of a separable polynomial. By Proposition 23.2.4, <nemeth class="inline">⠠⠑⠰⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠐⠀⠨⠅⠀⠠⠋</nemeth>. Since <nemeth class="inline">⠳⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠳⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth>, this is a finite group.</p>
              <p id="dCC">(3) <nemeth class="inline">⠀⠫⠒⠒⠕⠕⠀</nemeth> (1). Let <nemeth class="inline">⠠⠋⠀⠨⠅⠀⠠⠑⠰⠠⠛</nemeth> for some finite group of automorphisms <i class="one-letter">G</i> of <i class="one-letter">E</i>. Since <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠐⠅⠱⠀⠳⠠⠛⠳</nemeth>, <i class="one-letter">E</i> is a finite extension of <i class="one-letter">F</i>. To show that <i class="one-letter">E</i> is a finite, normal extension of <i class="one-letter">F</i>, let <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> be an irreducible monic polynomial that has a root <nemeth class="inline">⠨⠁</nemeth> in <i class="one-letter">E</i>. We must show that <nemeth class="inline">⠋⠷⠭⠾</nemeth> is the product of distinct linear factors in <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth>. By Proposition 23.1.5, automorphisms in <i class="one-letter">G</i> permute the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth> lying in <i class="one-letter">E</i>. Hence, if we let <i class="one-letter">G</i> act on <nemeth class="inline">⠨⠁</nemeth>, we can obtain distinct roots <nemeth class="inline">⠨⠁⠂⠀⠨⠅⠀⠨⠁⠠⠀⠨⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> in <i class="one-letter">E</i>. Let <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠷⠭⠤⠨⠁⠰⠊⠐⠾</nemeth>. Then <nemeth class="inline">⠛⠷⠭⠾</nemeth> is separable over <i class="one-letter">F</i> and <nemeth class="inline">⠛⠷⠨⠁⠾⠀⠨⠅⠀⠼⠴</nemeth>. Any automorphism <nemeth class="inline">⠨⠎</nemeth> in <i class="one-letter">G</i> permutes the factors of <nemeth class="inline">⠛⠷⠭⠾</nemeth> since it permutes these roots; hence, when <nemeth class="inline">⠨⠎</nemeth> acts on <nemeth class="inline">⠛⠷⠭⠾</nemeth>, it must fix the coefficients of <nemeth class="inline">⠛⠷⠭⠾</nemeth>. Therefore, the coefficients of <nemeth class="inline">⠛⠷⠭⠾</nemeth> must be in <i class="one-letter">F</i>. Since <nemeth class="inline">⠙⠑⠛⠀⠛⠷⠭⠾⠀⠐⠅⠱⠀⠙⠑⠛⠀⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠋⠷⠭⠾</nemeth> is the minimal polynomial of <nemeth class="inline">⠨⠁</nemeth>, <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠛⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="Ctu">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="KtF">Let <i class="one-letter">K</i> be a field extension of <i class="one-letter">F</i> such that <nemeth class="inline">⠠⠋⠀⠨⠅⠀⠠⠅⠰⠠⠛</nemeth> for some finite group of automorphisms <i class="one-letter">G</i> of <i class="one-letter">K</i>. Then <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ytv">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="JJL">Since <nemeth class="inline">⠠⠋⠀⠨⠅⠀⠠⠅⠰⠠⠛</nemeth>, <i class="one-letter">G</i> is a subgroup of <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth>. Hence,</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠠⠅⠒⠀⠠⠋⠈⠾⠀⠐⠅⠱⠀⠳⠠⠛⠳⠀⠐⠅⠱⠀⠳⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾⠳⠀⠨⠅⠀⠈⠷⠠⠅⠒⠀⠠⠋⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">. It follows that <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth>, since they must have the same order.</p>
            </article>
            <p id="pvv">Before we determine the exact correspondence between field extensions and automorphisms of fields, let us return to a familiar example.</p>
            <article class="example example-like" data-braille="example-like" id="nkw">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="vkH">In Example 23.1.4 we examined the automorphisms of <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾</nemeth> fixing <nemeth class="inline">⠸⠠⠟</nemeth>. Figure 23.2.9 compares the lattice of field extensions of <nemeth class="inline">⠸⠠⠟</nemeth> with the lattice of subgroups of <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠸⠌⠸⠠⠟⠾</nemeth>. The Fundamental Theorem of Galois Theory tells us what the relationship is between the two lattices.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="BJN">
              <div data-braille="image">
                <p>Image: The lefthand graph is a lattice of subgroups of the group (identity, sigma, tau, mu).  The righthand graph is a lattice of subfields of the rationals with the square root of three and the square root of five attached. The group (identity, sigma, tau, mu) has subgroups (identity, sigma), (identity, tau), and (identity, mu).  At level three there is the subgroup (identity), which is contained in all subgroups. The field of the rationals with the square root of three and the square root of five attached, has subfields of the rationals with the square root of three attached, the rationals with the square root of five attached, and the rationals with the square root of fifteen attached.  At level three there are the rationals which are contained in all of the fields above.</p>
                <p>ID: galois-root3-root5</p>
              </div>
              <figcaption>
                <span class="type">Figure</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.9<span class="period">.</span></span>
                <span class="space"> </span>
                <nemeth class="inline">⠠⠛⠷⠀⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠢⠻⠾⠸⠌⠸⠠⠟⠾</nemeth>
              </figcaption>
            </figure>
            <p id="VCE">We are now ready to state and prove the Fundamental Theorem of Galois Theory.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="sZI">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.10</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Fundamental Theorem of Galois Theory.</span>
              </h6>
              <p id="QiR">Let <i class="one-letter">F</i> be a finite field or a field of characteristic zero. If <i class="one-letter">E</i> is a finite normal extension of <i class="one-letter">F</i> with Galois group <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>, then the following statements are true.</p>
              <ol class="outerlist">
                <li>1. <p id="cEn">The map <nemeth class="inline">⠠⠅⠀⠫⠳⠒⠒⠕⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth> is a bijection of subfields <i class="one-letter">K</i> of <i class="one-letter">E</i> containing <i class="one-letter">F</i> with the subgroups of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>.</p></li>
                <li>2. <p id="ILw">If <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠅⠀⠸⠐⠅⠀⠠⠑</nemeth>, then</p><div class="displaymath"><nemeth>⠈⠷⠠⠑⠒⠀⠠⠅⠈⠾⠀⠨⠅⠀⠳⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠳⠁⠝⠙⠈⠷⠠⠅⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠈⠷⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠒⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠈⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>3. <p id="oSF"><nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠅⠀⠸⠐⠅⠀⠠⠇⠀⠸⠐⠅⠀⠠⠑</nemeth> if and only if <nemeth class="inline">⠨⠷⠊⠙⠨⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠇⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>.</p></li>
                <li>4. <p id="UZO"><i class="one-letter">K</i> is a normal extension of <i class="one-letter">F</i> if and only if <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth> is a normal subgroup of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>. In this case</p><div class="displaymath"><nemeth>⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾⠀⠈⠱⠈⠱⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠸⠌⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth></div><p data-braille="continuation">.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="QwZ">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="pQU">(1) Suppose that <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠀⠨⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠇⠾⠀⠨⠅⠀⠠⠛</nemeth>. Both <i class="one-letter">K</i> and <i class="one-letter">L</i> are fixed fields of <i class="one-letter">G</i>; hence, <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠠⠇</nemeth> and the map defined by <nemeth class="inline">⠠⠅⠀⠫⠳⠒⠒⠕⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth> is one-to-one. To show that the map is onto, let <i class="one-letter">G</i> be a subgroup of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> and <i class="one-letter">K</i> be the field fixed by <i class="one-letter">G</i>. Then <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠅⠀⠸⠐⠅⠀⠠⠑</nemeth>; consequently, <i class="one-letter">E</i> is a normal extension of <i class="one-letter">K</i>. Thus, <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠀⠨⠅⠀⠠⠛</nemeth> and the map <nemeth class="inline">⠠⠅⠀⠫⠳⠒⠒⠕⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth> is a bijection.</p>
              <p id="VYd">(2) By Theorem Theorem 23.1.7, <nemeth class="inline">⠳⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠳⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠅⠈⠾</nemeth>; therefore,</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠳⠀⠨⠅⠀⠈⠷⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠒⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠈⠾⠡⠳⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠳⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠈⠷⠠⠑⠒⠀⠠⠅⠈⠾⠈⠷⠠⠅⠒⠀⠠⠋⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">. Thus, <nemeth class="inline">⠈⠷⠠⠅⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠈⠷⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠒⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠈⠾</nemeth>.</p>
              <p id="Cfm">Statement (3) is illustrated in Figure 23.2.11. We leave the proof of this property as an exercise.</p>
              <p id="imv">(4) This part takes a little more work. Let <i class="one-letter">K</i> be a normal extension of <i class="one-letter">F</i>. If <nemeth class="inline">⠨⠎</nemeth> is in <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> and <nemeth class="inline">⠨⠞</nemeth> is in <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth>, we need to show that <nemeth class="inline">⠨⠎⠘⠤⠼⠂⠐⠨⠞⠨⠎</nemeth> is in <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth>; that is, we need to show that <nemeth class="inline">⠎⠘⠤⠼⠂⠐⠨⠞⠎⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁</nemeth> for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠅</nemeth>. Suppose that <nemeth class="inline">⠋⠷⠭⠾</nemeth> is the minimal polynomial of <nemeth class="inline">⠨⠁</nemeth> over <i class="one-letter">F</i>. Then <nemeth class="inline">⠎⠷⠨⠁⠾</nemeth> is also a root of <nemeth class="inline">⠋⠷⠭⠾</nemeth> lying in <i class="one-letter">K</i>, since <i class="one-letter">K</i> is a normal extension of <i class="one-letter">F</i>. Hence, <nemeth class="inline">⠞⠷⠎⠷⠨⠁⠾⠾⠀⠨⠅⠀⠎⠷⠨⠁⠾</nemeth> or <nemeth class="inline">⠎⠘⠤⠼⠂⠐⠨⠞⠎⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁</nemeth>.</p>
              <p id="OtE">Conversely, let <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth> be a normal subgroup of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>. We need to show that <nemeth class="inline">⠠⠋⠀⠨⠅⠀⠠⠅⠰⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth>. Let <nemeth class="inline">⠨⠞⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth>. For all <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> there exists a <nemeth class="inline">⠐⠨⠞⠣⠱⠻⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth> such that <nemeth class="inline">⠨⠞⠨⠎⠀⠨⠅⠀⠨⠎⠐⠨⠞⠣⠱⠻</nemeth>. Consequently, for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠅</nemeth></p>
              <div class="displaymath">
                <nemeth>⠞⠷⠎⠷⠨⠁⠾⠾⠀⠨⠅⠀⠎⠷⠐⠞⠣⠱⠻⠷⠨⠁⠾⠾⠀⠨⠅⠀⠎⠷⠨⠁⠾⠆</nemeth>
              </div>
              <p data-braille="continuation">hence, <nemeth class="inline">⠎⠷⠨⠁⠾</nemeth> must be in the fixed field of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth>. Let <nemeth class="inline">⠐⠨⠎⠣⠱⠻</nemeth> be the restriction of <nemeth class="inline">⠨⠎</nemeth> to <i class="one-letter">K</i>. Then <nemeth class="inline">⠐⠨⠎⠣⠱⠻</nemeth> is an automorphism of <i class="one-letter">K</i> fixing <i class="one-letter">F</i>, since <nemeth class="inline">⠎⠷⠨⠁⠾⠀⠈⠑⠀⠠⠅</nemeth> for all <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠅</nemeth>; hence, <nemeth class="inline">⠐⠨⠎⠣⠱⠻⠀⠈⠑⠀⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth>. Next, we will show that the fixed field of <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth> is <i class="one-letter">F</i>. Let <nemeth class="inline">⠨⠃</nemeth> be an element in <i class="one-letter">K</i> that is fixed by all automorphisms in <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth>. In particular, <nemeth class="inline">⠐⠎⠣⠱⠻⠷⠨⠃⠾⠀⠨⠅⠀⠨⠃</nemeth> for all <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>. Therefore, <nemeth class="inline">⠨⠃</nemeth> belongs to the fixed field <i class="one-letter">F</i> of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>.</p>
              <p id="uAN">Finally, we must show that when <i class="one-letter">K</i> is a normal extension of <i class="one-letter">F</i>,</p>
              <div class="displaymath">
                <nemeth>⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾⠀⠈⠱⠈⠱⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠸⠌⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth>
              </div>
              <p data-braille="continuation">. For <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>, let <nemeth class="inline">⠨⠎⠰⠠⠅</nemeth> be the automorphism of <i class="one-letter">K</i> obtained by restricting <nemeth class="inline">⠨⠎</nemeth> to <i class="one-letter">K</i>. Since <i class="one-letter">K</i> is a normal extension, the argument in the preceding paragraph shows that <nemeth class="inline">⠨⠎⠰⠠⠅⠐⠀⠈⠑⠀⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth>. Consequently, we have a map <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠀⠫⠕⠀⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth> defined by <nemeth class="inline">⠨⠎⠀⠫⠳⠒⠒⠕⠀⠨⠎⠰⠠⠅</nemeth>. This map is a group homomorphism since</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠨⠎⠨⠞⠾⠀⠨⠅⠀⠷⠨⠎⠨⠞⠾⠰⠠⠅⠐⠀⠨⠅⠀⠨⠎⠰⠠⠅⠐⠨⠞⠰⠠⠅⠐⠀⠨⠅⠀⠋⠷⠨⠎⠾⠋⠷⠨⠞⠾</nemeth>
              </div>
              <p data-braille="continuation">. The kernel of <nemeth class="inline">⠨⠋</nemeth> is <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth>. By (2),</p>
              <div class="displaymath">
                <nemeth>⠳⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠳⠸⠌⠳⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠳⠀⠨⠅⠀⠈⠷⠠⠅⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠳⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾⠳</nemeth>
              </div>
              <p data-braille="continuation">. Hence, the image of <nemeth class="inline">⠨⠋</nemeth> is <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾</nemeth> and <nemeth class="inline">⠨⠋</nemeth> is onto. Applying the First Isomorphism Theorem, we have</p>
              <div class="displaymath">
                <nemeth>⠠⠛⠷⠠⠅⠸⠌⠠⠋⠾⠀⠈⠱⠈⠱⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠸⠌⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="hQW">
              <div class="displaymath">
                <nemeth>⠠⠑⠀⠐⠀⠫⠕⠀⠣⠻⠀⠨⠷⠊⠙⠨⠾⠀⠀⠫⠣⠒⠒⠕⠀⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠠⠇⠀⠐⠀⠫⠕⠀⠣⠻⠀⠠⠛⠷⠠⠑⠸⠌⠠⠇⠾⠀⠀⠫⠣⠒⠒⠕⠀⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠠⠅⠀⠐⠀⠫⠕⠀⠣⠻⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠀⠀⠫⠣⠒⠒⠕⠀⠀⠀⠀⠀⠫⠩⠒⠒⠕⠀⠀⠀⠀⠠⠋⠀⠐⠀⠫⠕⠀⠣⠻⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">23.2.11<span class="period">.</span></span><span class="space"> </span>Subgroups of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> and subfields of <i class="one-letter">E</i></figcaption>
            </figure>
            <article class="example example-like" data-braille="example-like" id="TrF">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.2.12</span>
                <span class="period">.</span>
              </h6>
              <p id="brQ">In this example we will illustrate the Fundamental Theorem of Galois Theory by determining the lattice of subgroups of the Galois group of <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠤⠆</nemeth>. We will compare this lattice to the lattice of field extensions of <nemeth class="inline">⠸⠠⠟</nemeth> that are contained in the splitting field of <nemeth class="inline">⠭⠘⠲⠐⠤⠆</nemeth>. The splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth> is <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠠⠀⠊⠾</nemeth>. To see this, notice that <nemeth class="inline">⠋⠷⠭⠾</nemeth> factors as <nemeth class="inline">⠷⠭⠘⠆⠐⠬⠜⠆⠻⠾⠷⠭⠘⠆⠐⠤⠜⠆⠻⠾</nemeth>; hence, the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth> are <nemeth class="inline">⠬⠤⠣⠲⠜⠆⠻</nemeth> and <nemeth class="inline">⠬⠤⠣⠲⠜⠆⠻⠊</nemeth>. We first adjoin the root <nemeth class="inline">⠣⠲⠜⠆⠻</nemeth> to <nemeth class="inline">⠸⠠⠟</nemeth> and then adjoin the root <i class="one-letter">i</i> of <nemeth class="inline">⠭⠘⠆⠐⠬⠂</nemeth> to <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠾</nemeth>. The splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth> is then <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠾⠷⠊⠾⠀⠨⠅⠀⠸⠠⠟⠷⠣⠲⠜⠆⠻⠠⠀⠊⠾</nemeth>.</p>
              <p id="HyZ">Since <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠣⠲⠜⠆⠻⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠲</nemeth> and <i class="one-letter">i</i> is not in <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠾</nemeth>, it must be the case that <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠣⠲⠜⠆⠻⠠⠀⠊⠾⠒⠀⠸⠠⠟⠷⠣⠲⠜⠆⠻⠾⠈⠾⠀⠨⠅⠀⠼⠆</nemeth>. Hence, <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠣⠲⠜⠆⠻⠠⠀⠊⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠦</nemeth>. The set</p>
              <div class="displaymath">
                <nemeth>⠨⠷⠼⠂⠠⠀⠣⠲⠜⠆⠻⠠⠀⠷⠣⠲⠜⠆⠻⠾⠘⠆⠐⠠⠀⠷⠣⠲⠜⠆⠻⠾⠘⠒⠐⠠⠀⠊⠠⠀⠊⠣⠲⠜⠆⠻⠠⠀⠊⠷⠣⠲⠜⠆⠻⠾⠘⠆⠐⠠⠀⠊⠷⠣⠲⠜⠆⠻⠾⠘⠒⠐⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">is a basis of <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠠⠀⠊⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>. The lattice of field extensions of <nemeth class="inline">⠸⠠⠟</nemeth> contained in <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠠⠀⠊⠾</nemeth> is illustrated in Figure 23.2.13(a).</p>
              <p id="nGi">The Galois group <i class="one-letter">G</i> of <nemeth class="inline">⠋⠷⠭⠾</nemeth> must be of order <nemeth class="inline">⠼⠦</nemeth>. Let <nemeth class="inline">⠨⠎</nemeth> be the automorphism defined by <nemeth class="inline">⠎⠷⠣⠲⠜⠆⠻⠾⠀⠨⠅⠀⠊⠣⠲⠜⠆⠻</nemeth> and <nemeth class="inline">⠎⠷⠊⠾⠀⠨⠅⠀⠊</nemeth>, and <nemeth class="inline">⠨⠞</nemeth> be the automorphism defined by complex conjugation; that is, <nemeth class="inline">⠞⠷⠊⠾⠀⠨⠅⠀⠤⠊</nemeth>. Then <i class="one-letter">G</i> has an element of order <nemeth class="inline">⠼⠲</nemeth> and an element of order <nemeth class="inline">⠼⠆</nemeth>. It is easy to verify by direct computation that the elements of <i class="one-letter">G</i> are <nemeth class="inline">⠨⠷⠊⠙⠠⠀⠨⠎⠠⠀⠨⠎⠘⠆⠐⠠⠀⠨⠎⠘⠒⠐⠠⠀⠨⠞⠠⠀⠨⠎⠨⠞⠠⠀⠨⠎⠘⠆⠐⠨⠞⠠⠀⠨⠎⠘⠒⠐⠨⠞⠨⠾</nemeth> and that the relations <nemeth class="inline">⠨⠞⠘⠆⠐⠀⠨⠅⠀⠊⠙</nemeth>, <nemeth class="inline">⠨⠎⠘⠲⠐⠀⠨⠅⠀⠊⠙</nemeth>, and <nemeth class="inline">⠨⠞⠨⠎⠨⠞⠀⠨⠅⠀⠨⠎⠘⠤⠼⠂</nemeth> are satisfied; hence, <i class="one-letter">G</i> must be isomorphic to <nemeth class="inline">⠠⠙⠲</nemeth>. The lattice of subgroups of <i class="one-letter">G</i> is illustrated in Figure 23.2.13(b).</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="NYf">
              <div data-braille="image">
                <p>Image: The top diagram is a lattice of fields and the bottom diagram is a lattice of the corresponding groups.   At the top of the field lattice is the rationals with the fourth root of 2 and i attached. On the next level are five subfields: the rationals with the fourth root of 2 attached, the rationals with i times the fourth root of 2 attached, the rationals with the square root of 2 and i attached, the rationals with 1 plus i times the square root of 2 attached, and the rationals with 1 minus i times the square root of 2 attached. On the third level, there is the rationals with the square root of 2 attached, which is a subfield of the rationals with the fourth root of 2 attached, the rationals with i times the fourth root of 2 attached, the rationals with the square root of 2 and i attached. There is the rationals with i attached, which is a subfield of the rationals with the square root of 2 and i attached. There is the rationals with the square root of 2 times i attached, which is a subfield of the rationals with the square root of 2 and i attached, the rationals with 1 plus i times the square root of 2 attached, and the rationals with 1 minus i times the square root of 2 attached. At level four there is the rationals which is a subfield of all of the other fields. In bottom lattice, there is the dihedral group, D4, at the top level. The next level consists of three subgroups: (identity, sigma squared, tau, sigma squared times tau), (identity, sigma, sigma squared, sigma cubed), and (identity, sigma squared, sigma times tau, sigma cubed times tau). The third level consists of five subgroups. (identity, tau) is a subgroup of (identity, sigma squared, tau, sigma squared times tau). (identity, sigma squared times tau) is a subgroup of (identity, sigma squared, tau, sigma squared times tau). (identity, sigma squared) is a subgroup of (identity, sigma squared, tau, sigma squared times tau), (identity, sigma, sigma squared, sigma cubed), and (identity, sigma squared, sigma times tau, sigma cubed times tau). (identity, sigma times tau) is a subgroup of (identity, sigma squared, sigma times tau, sigma cubed times tau). (identity, sigma cubed times tau) is a subgroup of (identity, sigma squared, sigma times tau, sigma cubed times tau). The bottom level has only the subgroup consisting of the identity, which is contained in all the subgroups.</p>
                <p>ID: galois-fourth-root2</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">23.2.13<span class="period">.</span></span><span class="space"> </span>Galois group of <nemeth class="inline">⠭⠘⠲⠐⠤⠆</nemeth></figcaption>
            </figure>
          </section>
          <section class="subsection" id="tvh">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.2.1</span> <span class="title">Historical Note</span></div>
            <p id="rUC">Solutions for the cubic and quartic equations were discovered in the 1500s. Attempts to find solutions for the quintic equations puzzled some of history's best mathematicians. In 1798, P. Ruffini  submitted a paper that claimed no such solution could be found; however, the paper was not well received. In 1826, Niels Henrik Abel  (1802–1829) finally offered the first correct proof that quintics are not always solvable by radicals.</p>
            <p id="YbL">Abel inspired the work of Évariste Galois.  Born in 1811, Galois began to display extraordinary mathematical talent at the age of 14. He applied for entrance to the École Polytechnique several times; however, he had great difficulty meeting the formal entrance requirements, and the examiners failed to recognize his mathematical genius. He was finally accepted at the École Normale in 1829.</p>
            <p id="EiU">Galois worked to develop a theory of solvability for polynomials. In 1829, at the age of 17, Galois presented two papers on the solution of algebraic equations to the Académie des Sciences de Paris. These papers were sent to Cauchy, who subsequently lost them. A third paper was submitted to Fourier, who died before he could read the paper. Another paper was presented, but was not published until 1846.</p>
            <p id="kqd">Galois' democratic sympathies led him into the Revolution of 1830. He was expelled from school and sent to prison for his part in the turmoil. After his release in 1832, he was drawn into a duel possibly over a love affair. Certain that he would be killed, he spent the evening before his death outlining his work and his basic ideas for research in a long letter to his friend Chevalier. He was indeed dead the next day, at the age of 20.</p>
          </section>
        </section>
        <section class="section" id="vku">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">23.3</span> <span class="title">Applications</span></div>
          <section class="subsection" id="ZCq">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.3.1</span> <span class="title">Solvability by Radicals</span></div>
            <p id="Qxm">Throughout this section we shall assume that all fields have characteristic zero to ensure that irreducible polynomials do not have multiple roots. The immediate goal of this section is to determine when the roots of a polynomial <nemeth class="inline">⠋⠷⠭⠾</nemeth> can be computed with a finite number of operations on the coefficients of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. The allowable operations are addition, subtraction, multiplication, division, and the extraction of <i class="one-letter">n</i>th roots. Certainly the solution to the quadratic equation, <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth>, illustrates this process:</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">. The only one of these operations that might demand a larger field is the taking of <i class="one-letter">n</i>th roots. We are led to the following definition.</p>
            <p id="wEv">An extension field <i class="one-letter">E</i> of a field <i class="one-letter">F</i> is an <dfn class="terminology">extension by radicals</dfn>  if there exists a chain of subfields</p>
            <div class="displaymath">
              <nemeth>⠠⠋⠀⠨⠅⠀⠠⠋⠴⠀⠸⠐⠅⠀⠠⠋⠂⠀⠸⠐⠅⠀⠠⠋⠆⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠋⠰⠗⠐⠀⠨⠅⠀⠠⠑</nemeth>
            </div>
            <p data-braille="continuation">such for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠗</nemeth>, we have  <nemeth class="inline">⠠⠋⠰⠊⠐⠀⠨⠅⠀⠠⠋⠰⠊⠤⠂⠐⠷⠨⠁⠰⠊⠐⠾</nemeth> and <nemeth class="inline">⠨⠁⠰⠊⠘⠝⠘⠰⠊⠐⠀⠈⠑⠀⠠⠋⠰⠊⠤⠂</nemeth> for some positive integer <nemeth class="inline">⠝⠰⠊</nemeth>. A polynomial <nemeth class="inline">⠋⠷⠭⠾</nemeth> is <dfn class="terminology">solvable by radicals</dfn>  over <i class="one-letter">F</i> if the splitting field <i class="one-letter">K</i> of <nemeth class="inline">⠋⠷⠭⠾</nemeth> over <i class="one-letter">F</i> is contained in an extension of <i class="one-letter">F</i> by radicals. Our goal is to arrive at criteria that will tell us whether or not a polynomial <nemeth class="inline">⠋⠷⠭⠾</nemeth> is solvable by radicals by examining the Galois group <nemeth class="inline">⠋⠷⠭⠾</nemeth>.</p>
            <p id="cLE">The easiest polynomial to solve by radicals is one of the form <nemeth class="inline">⠭⠘⠝⠐⠤⠁</nemeth>. As we discussed in Chapter 4, the roots of <nemeth class="inline">⠭⠘⠝⠐⠤⠂</nemeth> are called the <dfn class="terminology">nth roots of unity</dfn>.  These roots are a finite subgroup of the splitting field of <nemeth class="inline">⠭⠘⠝⠐⠤⠂</nemeth>. By Corollary 22.1.11, the <i class="one-letter">n</i>th roots of unity form a cyclic group. Any generator of this group is called a <dfn class="terminology">primitive nth root of unity</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="MiF">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.3.1</span>
                <span class="period">.</span>
              </h6>
              <p id="TNr">The polynomial <nemeth class="inline">⠭⠘⠝⠐⠤⠂</nemeth> is solvable by radicals over <nemeth class="inline">⠸⠠⠟</nemeth>. The roots of this polynomial are <nemeth class="inline">⠼⠂⠠⠀⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠝⠤⠂</nemeth>, where</p>
              <div class="displaymath">
                <nemeth>⠨⠕⠀⠨⠅⠀⠉⠕⠎⠀⠷⠹⠆⠨⠏⠌⠝⠼⠾⠬⠊⠎⠊⠝⠀⠷⠹⠆⠨⠏⠌⠝⠼⠾</nemeth>
              </div>
              <p data-braille="continuation">. The splitting field of <nemeth class="inline">⠭⠘⠝⠐⠤⠂</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth> is <nemeth class="inline">⠸⠠⠟⠷⠨⠕⠾</nemeth>.</p>
            </article>
            <p id="ISN">We shall prove that a polynomial is solvable by radicals if its Galois group is solvable. Recall that a subnormal series of a group <i class="one-letter">G</i> is a finite sequence of subgroups</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠠⠓⠰⠝⠐⠀⠸⠨⠂⠀⠠⠓⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠓⠂⠀⠸⠨⠂⠀⠠⠓⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠠⠓⠰⠊</nemeth> is normal in <nemeth class="inline">⠠⠓⠰⠊⠬⠂</nemeth>. A group <i class="one-letter">G</i> is solvable  if it has a subnormal series <nemeth class="inline">⠨⠷⠠⠓⠰⠊⠐⠨⠾</nemeth> such that all of the factor groups <nemeth class="inline">⠠⠓⠰⠊⠬⠂⠐⠸⠌⠠⠓⠰⠊</nemeth> are abelian. For example, if we examine the series <nemeth class="inline">⠨⠷⠊⠙⠨⠾⠀⠸⠐⠅⠀⠠⠁⠒⠀⠸⠐⠅⠀⠠⠎⠒</nemeth>, we see that <nemeth class="inline">⠠⠎⠒</nemeth> is solvable. On the other hand, <nemeth class="inline">⠠⠎⠢</nemeth> is not solvable, by Theorem 10.2.4.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="zUn">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">23.3.2</span>
                <span class="period">.</span>
              </h6>
              <p id="FJM">Let <i class="one-letter">F</i> be a field of characteristic zero and <i class="one-letter">E</i> be the splitting field of <nemeth class="inline">⠭⠘⠝⠐⠤⠁</nemeth> over <i class="one-letter">F</i> with <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠋</nemeth>. Then <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is a solvable group.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZQL">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="aHW">The roots of <nemeth class="inline">⠭⠘⠝⠐⠤⠁</nemeth> are <nemeth class="inline">⠣⠝⠜⠁⠻⠠⠀⠨⠕⠣⠝⠜⠁⠻⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠝⠤⠂⠐⠣⠝⠜⠁⠻</nemeth>, where <nemeth class="inline">⠨⠕</nemeth> is a primitive <i class="one-letter">n</i>th root of unity. Suppose that <i class="one-letter">F</i> contains all of its <i class="one-letter">n</i>th roots of unity. If <nemeth class="inline">⠨⠱</nemeth> is one of the roots of  <nemeth class="inline">⠭⠘⠝⠐⠤⠁</nemeth>, then distinct roots of <nemeth class="inline">⠭⠘⠝⠐⠤⠁</nemeth> are <nemeth class="inline">⠨⠱⠠⠀⠨⠕⠨⠱⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠝⠤⠂⠐⠨⠱</nemeth>, and <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠠⠋⠷⠨⠱⠾</nemeth>. Since <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> permutes the roots <nemeth class="inline">⠭⠘⠝⠐⠤⠁</nemeth>, the elements in  <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> must be determined by their action on these roots. Let <nemeth class="inline">⠨⠎</nemeth>  and <nemeth class="inline">⠨⠞</nemeth> be in <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> and suppose that <nemeth class="inline">⠎⠷⠨⠱⠾⠀⠨⠅⠀⠨⠕⠘⠊⠐⠨⠱</nemeth> and <nemeth class="inline">⠞⠷⠨⠱⠾⠀⠨⠅⠀⠨⠕⠘⠚⠐⠨⠱</nemeth>. If <i class="one-letter">F</i> contains the roots of unity, then</p>
              <div class="displaymath">
                <nemeth>⠎⠞⠷⠨⠱⠾⠀⠨⠅⠀⠎⠷⠨⠕⠘⠚⠐⠨⠱⠾⠀⠨⠅⠀⠨⠕⠘⠚⠐⠎⠷⠨⠱⠾⠀⠨⠅⠀⠨⠕⠘⠊⠬⠚⠐⠨⠱⠀⠨⠅⠀⠨⠕⠘⠊⠐⠞⠷⠨⠱⠾⠀⠨⠅⠀⠞⠷⠨⠕⠘⠊⠐⠨⠱⠾⠀⠨⠅⠀⠞⠎⠷⠨⠱⠾</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <nemeth class="inline">⠨⠎⠨⠞⠀⠨⠅⠀⠨⠞⠨⠎</nemeth> and <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is abelian, and <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> must be solvable.</p>
              <p id="GPf">Now suppose that <i class="one-letter">F</i> does not contain a primitive <i class="one-letter">n</i>th root of unity. Let <nemeth class="inline">⠨⠕</nemeth> be a generator of the cyclic group of the <i class="one-letter">n</i>th roots of unity. Let <nemeth class="inline">⠨⠁</nemeth> be a zero of <nemeth class="inline">⠭⠘⠝⠐⠤⠁</nemeth>. Since <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠕⠨⠁</nemeth> are both in the splitting field of <nemeth class="inline">⠭⠘⠝⠐⠤⠁</nemeth>, <nemeth class="inline">⠨⠕⠀⠨⠅⠀⠷⠨⠕⠨⠁⠾⠸⠌⠨⠁</nemeth> is also in <i class="one-letter">E</i>. Let <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠠⠋⠷⠨⠕⠾</nemeth>. Then <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠅⠀⠸⠐⠅⠀⠠⠑</nemeth>. Since <i class="one-letter">K</i> is the splitting field of <nemeth class="inline">⠭⠘⠝⠐⠤⠂</nemeth>, <i class="one-letter">K</i> is a normal extension of <i class="one-letter">F</i>. Therefore, any automorphism <nemeth class="inline">⠨⠎</nemeth> in <nemeth class="inline">⠠⠛⠷⠠⠋⠷⠨⠕⠾⠸⠌⠠⠋⠾</nemeth> is determined by <nemeth class="inline">⠎⠷⠨⠕⠾</nemeth>. It must be the case that <nemeth class="inline">⠎⠷⠨⠕⠾⠀⠨⠅⠀⠨⠕⠘⠊</nemeth> for some integer <i class="one-letter">i</i> since all of the zeros of <nemeth class="inline">⠭⠘⠝⠐⠤⠂</nemeth> are powers of <nemeth class="inline">⠨⠕</nemeth>. If <nemeth class="inline">⠞⠷⠨⠕⠾⠀⠨⠅⠀⠨⠕⠘⠚</nemeth> is in <nemeth class="inline">⠠⠛⠷⠠⠋⠷⠨⠕⠾⠸⠌⠠⠋⠾</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠎⠞⠷⠨⠕⠾⠀⠨⠅⠀⠎⠷⠨⠕⠘⠚⠐⠾⠀⠨⠅⠀⠈⠷⠎⠷⠨⠕⠾⠈⠾⠘⠚⠐⠀⠨⠅⠀⠨⠕⠘⠊⠚⠐⠀⠨⠅⠀⠈⠷⠞⠷⠨⠕⠾⠈⠾⠘⠊⠐⠀⠨⠅⠀⠞⠷⠨⠕⠘⠊⠐⠾⠀⠨⠅⠀⠞⠎⠷⠨⠕⠾</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <nemeth class="inline">⠠⠛⠷⠠⠋⠷⠨⠕⠾⠸⠌⠠⠋⠾</nemeth> is abelian. By the Fundamental Theorem of Galois Theory the series</p>
              <div class="displaymath">
                <nemeth>⠨⠷⠊⠙⠨⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠷⠨⠕⠾⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>
              </div>
              <p data-braille="continuation">is a normal series. By our previous argument, <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠷⠨⠕⠾⠾</nemeth> is abelian. Since</p>
              <div class="displaymath">
                <nemeth>⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾⠸⠌⠠⠛⠷⠠⠑⠸⠌⠠⠋⠷⠨⠕⠾⠾⠀⠈⠱⠈⠱⠀⠠⠛⠷⠠⠋⠷⠨⠕⠾⠸⠌⠠⠋⠾</nemeth>
              </div>
              <p data-braille="continuation">is also abelian, <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is solvable.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="gbw">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">23.3.3</span>
                <span class="period">.</span>
              </h6>
              <p id="lQV">Let <i class="one-letter">F</i> be a field of characteristic zero and let</p>
              <div class="displaymath">
                <nemeth>⠠⠋⠀⠨⠅⠀⠠⠋⠴⠀⠸⠐⠅⠀⠠⠋⠂⠀⠸⠐⠅⠀⠠⠋⠆⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠋⠰⠗⠐⠀⠨⠅⠀⠠⠑</nemeth>
              </div>
              <p data-braille="continuation">a radical extension of <i class="one-letter">F</i>. Then there exists a normal radical extension</p>
              <div class="displaymath">
                <nemeth>⠠⠋⠀⠨⠅⠀⠠⠅⠴⠀⠸⠐⠅⠀⠠⠅⠂⠀⠸⠐⠅⠀⠠⠅⠆⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠅⠰⠗⠐⠀⠨⠅⠀⠠⠅</nemeth>
              </div>
              <p data-braille="continuation">such that <i class="one-letter">K</i> that contains <i class="one-letter">E</i> and <nemeth class="inline">⠠⠅⠰⠊</nemeth> is a normal extension of <nemeth class="inline">⠠⠅⠰⠊⠤⠂</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="FXU">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="mWo">Since <i class="one-letter">E</i> is a radical extension of <i class="one-letter">F</i>, there exists a chain of subfields</p>
              <div class="displaymath">
                <nemeth>⠠⠋⠀⠨⠅⠀⠠⠋⠴⠀⠸⠐⠅⠀⠠⠋⠂⠀⠸⠐⠅⠀⠠⠋⠆⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠋⠰⠗⠐⠀⠨⠅⠀⠠⠑</nemeth>
              </div>
              <p data-braille="continuation">such for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠗</nemeth>, we have  <nemeth class="inline">⠠⠋⠰⠊⠐⠀⠨⠅⠀⠠⠋⠰⠊⠤⠂⠐⠷⠨⠁⠰⠊⠐⠾</nemeth> and <nemeth class="inline">⠨⠁⠰⠊⠘⠝⠘⠰⠊⠐⠀⠈⠑⠀⠠⠋⠰⠊⠤⠂</nemeth> for some positive integer <nemeth class="inline">⠝⠰⠊</nemeth>. We will build a normal radical extension of <i class="one-letter">F</i>,</p>
              <div class="displaymath">
                <nemeth>⠠⠋⠀⠨⠅⠀⠠⠅⠴⠀⠸⠐⠅⠀⠠⠅⠂⠀⠸⠐⠅⠀⠠⠅⠆⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠅⠰⠗⠐⠀⠨⠅⠀⠠⠅</nemeth>
              </div>
              <p data-braille="continuation">such that <nemeth class="inline">⠠⠅⠀⠨⠂⠱⠀⠠⠑</nemeth>. Define <nemeth class="inline">⠠⠅⠂</nemeth> for be the splitting field of <nemeth class="inline">⠭⠘⠝⠂⠐⠤⠨⠁⠂⠘⠝⠂</nemeth>. The roots of this polynomial are <nemeth class="inline">⠨⠁⠂⠠⠀⠨⠁⠂⠨⠕⠠⠀⠨⠁⠂⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠂⠨⠕⠘⠝⠂⠤⠂</nemeth>, where <nemeth class="inline">⠨⠕</nemeth> is a primitive <nemeth class="inline">⠝⠂</nemeth>th root of unity. If <i class="one-letter">F</i> contains all of its <nemeth class="inline">⠝⠂</nemeth> roots of unity, then <nemeth class="inline">⠠⠅⠂⠀⠨⠅⠀⠠⠋⠷⠨⠁⠰⠯⠐⠾</nemeth>. On the other hand, suppose that <i class="one-letter">F</i> does not contain a primitive <nemeth class="inline">⠝⠂</nemeth>th root of unity. If <nemeth class="inline">⠨⠃</nemeth> is a root of <nemeth class="inline">⠭⠘⠝⠂⠐⠤⠨⠁⠂⠘⠝⠂</nemeth>, then all of the roots of  <nemeth class="inline">⠭⠘⠝⠂⠐⠤⠨⠁⠂⠘⠝⠂</nemeth> must be <nemeth class="inline">⠨⠃⠠⠀⠨⠕⠨⠃⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠝⠂⠤⠂</nemeth>, where  <nemeth class="inline">⠨⠕</nemeth> is a primitive  <nemeth class="inline">⠝⠂</nemeth>th root of unity. In this case, <nemeth class="inline">⠠⠅⠂⠀⠨⠅⠀⠠⠋⠷⠨⠕⠨⠃⠾</nemeth>. Thus, <nemeth class="inline">⠠⠅⠂</nemeth> is a normal radical extension of <i class="one-letter">F</i> containing <nemeth class="inline">⠠⠋⠂</nemeth>. Continuing in this manner, we obtain</p>
              <div class="displaymath">
                <nemeth>⠠⠋⠀⠨⠅⠀⠠⠅⠴⠀⠸⠐⠅⠀⠠⠅⠂⠀⠸⠐⠅⠀⠠⠅⠆⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠅⠰⠗⠐⠀⠨⠅⠀⠠⠅</nemeth>
              </div>
              <p data-braille="continuation">such that <nemeth class="inline">⠠⠅⠰⠊</nemeth> is a normal extension of <nemeth class="inline">⠠⠅⠰⠊⠤⠂</nemeth> and <nemeth class="inline">⠠⠅⠰⠊⠐⠀⠨⠂⠱⠀⠠⠋⠰⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠗</nemeth>.</p>
            </article>
            <p id="oZW">We will now prove the main theorem about solvability by radicals.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="TNe">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">23.3.4</span>
                <span class="period">.</span>
              </h6>
              <p id="wqa">Let <nemeth class="inline">⠋⠷⠭⠾</nemeth> be in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>, where <nemeth class="inline">⠉⠓⠁⠗⠠⠋⠀⠨⠅⠀⠼⠴</nemeth>. If <nemeth class="inline">⠋⠷⠭⠾</nemeth> is solvable by radicals, then the Galois group of <nemeth class="inline">⠋⠷⠭⠾</nemeth> over <i class="one-letter">F</i> is solvable.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="wEi">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Tdx">Since <nemeth class="inline">⠋⠷⠭⠾</nemeth> is solvable by radicals there exists an extension <i class="one-letter">E</i> of <i class="one-letter">F</i> by radicals <nemeth class="inline">⠠⠋⠀⠨⠅⠀⠠⠋⠴⠀⠸⠐⠅⠀⠠⠋⠂⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠋⠰⠝⠐⠀⠨⠅⠀⠠⠑</nemeth>. By  Lemma 23.3.3, we can assume that <i class="one-letter">E</i> is a splitting field <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠠⠋⠰⠊</nemeth> is normal over <nemeth class="inline">⠠⠋⠰⠊⠤⠂</nemeth>. By the Fundamental Theorem of Galois Theory, <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠰⠊⠐⠾</nemeth> is a normal subgroup of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠰⠊⠤⠂⠐⠾</nemeth>. Therefore, we have a subnormal series of subgroups of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>:</p>
              <div class="displaymath">
                <nemeth>⠨⠷⠊⠙⠨⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠰⠝⠤⠂⠐⠾⠀⠸⠐⠅⠀⠄⠄⠄⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠂⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>
              </div>
              <p data-braille="continuation">. Again by the Fundamental Theorem of Galois Theory, we know that</p>
              <div class="displaymath">
                <nemeth>⠠⠛⠷⠠⠑⠸⠌⠠⠋⠰⠊⠤⠂⠐⠾⠸⠌⠠⠛⠷⠠⠑⠸⠌⠠⠋⠰⠊⠐⠾⠀⠈⠱⠈⠱⠀⠠⠛⠷⠠⠋⠰⠊⠐⠸⠌⠠⠋⠰⠊⠤⠂⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. By Lemma 23.3.2, <nemeth class="inline">⠠⠛⠷⠠⠋⠰⠊⠐⠸⠌⠠⠋⠰⠊⠤⠂⠐⠾</nemeth> is solvable; hence, <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is also solvable.</p>
            </article>
            <p id="Vhf">The converse of Theorem 23.3.4 is also true. For a proof, see any of the references at the end of this chapter.</p>
          </section>
          <section class="subsection" id="FJz">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.3.2</span> <span class="title">Insolvability of the Quintic</span></div>
            <p id="Boo">We are now in a position to find a fifth-degree polynomial that is not solvable by radicals. We merely need to find a polynomial whose Galois group is <nemeth class="inline">⠠⠎⠢</nemeth>. We begin by proving a lemma.</p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="spO">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">23.3.5</span>
                <span class="period">.</span>
              </h6>
              <p id="RYe">If <i class="one-letter">p</i> is prime, then any subgroup of <nemeth class="inline">⠠⠎⠰⠏</nemeth> that contains a transposition and a cycle of length <i class="one-letter">p</i> must be all of <nemeth class="inline">⠠⠎⠰⠏</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="mfd">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="zkG">Let <i class="one-letter">G</i> be a subgroup of <nemeth class="inline">⠠⠎⠰⠏</nemeth> that contains a transposition <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> a cycle of length <i class="one-letter">p</i>. We may assume that <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠷⠼⠂⠆⠾</nemeth>. The order of <nemeth class="inline">⠨⠞</nemeth> is <i class="one-letter">p</i> and <nemeth class="inline">⠨⠞⠘⠝</nemeth> must be a cycle of length <i class="one-letter">p</i> for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠝⠀⠐⠅⠀⠏</nemeth>. Therefore, we may assume that <nemeth class="inline">⠨⠍⠀⠨⠅⠀⠨⠞⠘⠝⠐⠀⠨⠅⠀⠷⠼⠂⠆⠊⠒⠀⠄⠄⠄⠀⠊⠰⠏⠐⠾</nemeth> for some <i class="one-letter">n</i>, where <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠝⠀⠐⠅⠀⠏</nemeth> (see Exercise 5.4.13 in Chapter 5). Noting that <nemeth class="inline">⠷⠼⠂⠆⠾⠷⠼⠂⠆⠊⠒⠀⠄⠄⠄⠀⠊⠰⠏⠐⠾⠀⠨⠅⠀⠷⠼⠆⠊⠒⠀⠄⠄⠄⠀⠊⠰⠏⠐⠾</nemeth> and <nemeth class="inline">⠷⠼⠆⠊⠒⠀⠄⠄⠄⠀⠊⠰⠏⠐⠾⠘⠅⠐⠷⠂⠆⠾⠷⠼⠆⠊⠒⠀⠄⠄⠄⠀⠊⠰⠏⠐⠾⠘⠤⠅⠐⠀⠨⠅⠀⠷⠼⠂⠊⠰⠅⠐⠾</nemeth>, we can obtain all the transpositions of the form <nemeth class="inline">⠷⠼⠂⠝⠾</nemeth> for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠝⠀⠐⠅⠀⠏</nemeth>. However, these transpositions generate all transpositions in <nemeth class="inline">⠠⠎⠰⠏</nemeth>, since <nemeth class="inline">⠷⠼⠂⠚⠾⠷⠂⠊⠾⠷⠂⠚⠾⠀⠨⠅⠀⠷⠊⠚⠾</nemeth>. The transpositions generate <nemeth class="inline">⠠⠎⠰⠏</nemeth>.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="hvx">
              <div data-braille="image">
                <p>Image: The graph is one a set of rectangular axes and starts below the horizontal axis, increases to about 68 at x approximately equal to 2, while passing through the horizontal axis at about minus 3.  The graph then decreases to about minus 73 at x equal to about 2.3, while passing through the horizontal axis at about minus 0.2. Finally, the graph increases to 20 at about 3.2, while passing through the horizontal axis at about 3.</p>
                <p>ID: galois-quintic</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">23.3.6<span class="period">.</span></span><span class="space"> </span>The graph of <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠢⠐⠤⠖⠭⠘⠒⠐⠤⠆⠶⠭⠤⠒</nemeth></figcaption>
            </figure>
            <article class="example example-like" data-braille="example-like" id="YwX">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">23.3.7</span>
                <span class="period">.</span>
              </h6>
              <p id="zUA">We will show that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠢⠐⠤⠖⠭⠘⠒⠐⠤⠆⠶⠭⠤⠒⠀⠈⠑⠀⠸⠠⠟⠈⠷⠭⠈⠾</nemeth> is not solvable. We claim that the Galois group of <nemeth class="inline">⠋⠷⠭⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth> is <nemeth class="inline">⠠⠎⠢</nemeth>. By Eisenstein's Criterion, <nemeth class="inline">⠋⠷⠭⠾</nemeth> is irreducible and, therefore, must be separable. The derivative of <nemeth class="inline">⠋⠷⠭⠾</nemeth> is <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠼⠢⠭⠘⠲⠐⠤⠂⠦⠭⠘⠆⠐⠤⠆⠶</nemeth>; hence, setting <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth> and solving, we find that the only real roots of <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾</nemeth> are</p>
              <div class="displaymath">
                <nemeth>⠭⠀⠨⠅⠀⠬⠤⠜⠹⠖⠨⠜⠖⠨⠻⠬⠔⠌⠢⠼⠻</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <nemeth class="inline">⠋⠷⠭⠾</nemeth> can have at most one maximum and one minimum. It is easy to show that <nemeth class="inline">⠋⠷⠭⠾</nemeth> changes sign between <nemeth class="inline">⠤⠼⠒</nemeth> and <nemeth class="inline">⠤⠼⠆</nemeth>, between <nemeth class="inline">⠤⠼⠆</nemeth> and <nemeth class="inline">⠼⠴</nemeth>, and once again between <nemeth class="inline">⠼⠴</nemeth> and <nemeth class="inline">⠼⠲</nemeth> (Figure 23.3.6). Therefore, <nemeth class="inline">⠋⠷⠭⠾</nemeth> has exactly three distinct real roots. The remaining two roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth> must be complex conjugates. Let <i class="one-letter">K</i> be the splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. Since <nemeth class="inline">⠋⠷⠭⠾</nemeth> has five distinct roots in <i class="one-letter">K</i> and every automorphism of <i class="one-letter">K</i> fixing <nemeth class="inline">⠸⠠⠟</nemeth> is determined by the way it permutes the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, we know that <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠸⠠⠟⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠎⠢</nemeth>. Since <i class="one-letter">f</i> is irreducible, there is an element in <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛⠷⠠⠅⠸⠌⠸⠠⠟⠾</nemeth> such that <nemeth class="inline">⠎⠷⠁⠾⠀⠨⠅⠀⠃</nemeth> for two roots <i class="one-letter">a</i> and <i class="one-letter">b</i> of <nemeth class="inline">⠋⠷⠭⠾</nemeth>. The automorphism of <nemeth class="inline">⠸⠠⠉</nemeth> that takes <nemeth class="inline">⠁⠬⠃⠊⠀⠫⠳⠒⠒⠕⠀⠁⠤⠃⠊</nemeth> leaves the real roots fixed and interchanges the complex roots; consequently, <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠸⠠⠟⠾</nemeth> contains a transpostion. If <nemeth class="inline">⠨⠁</nemeth> is one of the real roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, then <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠨⠁⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠢</nemeth> by Exercise 21.5.28. Since <nemeth class="inline">⠸⠠⠟⠷⠨⠁⠾</nemeth> is a subfield of <i class="one-letter">K</i>, it must be the case the <nemeth class="inline">⠈⠷⠠⠅⠒⠀⠸⠠⠟⠈⠾</nemeth> is divisible by 5. Since <nemeth class="inline">⠈⠷⠠⠅⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠳⠠⠛⠷⠠⠅⠸⠌⠸⠠⠟⠾⠳</nemeth> and <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠸⠠⠟⠾⠀⠸⠐⠅⠀⠠⠎⠢</nemeth>, we know that <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠸⠠⠟⠾</nemeth> contains a cycle of length <nemeth class="inline">⠼⠢</nemeth>. By Lemma 23.3.5, <nemeth class="inline">⠠⠎⠢</nemeth> is generated by a transposition and an element of order <nemeth class="inline">⠼⠢</nemeth>; therefore, <nemeth class="inline">⠠⠛⠷⠠⠅⠸⠌⠸⠠⠟⠾</nemeth> must be all of <nemeth class="inline">⠠⠎⠢</nemeth>. By Theorem 10.2.4, <nemeth class="inline">⠠⠎⠢</nemeth> is not solvable. Consequently, <nemeth class="inline">⠋⠷⠭⠾</nemeth> cannot be solved by radicals.</p>
            </article>
          </section>
          <section class="subsection" id="lQI">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.3.3</span> <span class="title">The Fundamental Theorem of Algebra</span></div>
            <p id="NCG">It seems fitting that the last theorem that we will state and prove is the Fundamental Theorem of Algebra. This theorem was first proven by Gauss in his doctoral thesis. Prior to Gauss's proof, mathematicians suspected that there might exist polynomials over the real and complex numbers having no solutions. The Fundamental Theorem of Algebra states that every polynomial over the complex numbers factors into distinct linear factors.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="EEg">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">23.3.8</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Fundamental Theorem of Algebra.</span>
              </h6>
              <p id="cxj">The field of complex numbers is algebraically closed; that is, every polynomial in <nemeth class="inline">⠸⠠⠉⠈⠷⠭⠈⠾</nemeth> has a root in <nemeth class="inline">⠸⠠⠉</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="cLr">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="frP">Suppose that <i class="one-letter">E</i> is a proper finite field extension of the complex numbers. Since any finite extension of a field of characteristic zero is a simple extension, there exists an <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠑</nemeth> such that <nemeth class="inline">⠠⠑⠀⠨⠅⠀⠸⠠⠉⠷⠨⠁⠾</nemeth> with <nemeth class="inline">⠨⠁</nemeth> the root of an irreducible polynomial <nemeth class="inline">⠋⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠉⠈⠷⠭⠈⠾</nemeth>. The splitting field <i class="one-letter">L</i> of <nemeth class="inline">⠋⠷⠭⠾</nemeth> is a finite normal separable extension of <nemeth class="inline">⠸⠠⠉</nemeth> that contains <i class="one-letter">E</i>. We must show that it is impossible for <i class="one-letter">L</i> to be a proper extension of <nemeth class="inline">⠸⠠⠉</nemeth>.</p>
              <p id="LyY">Suppose that <i class="one-letter">L</i> is a proper extension of <nemeth class="inline">⠸⠠⠉</nemeth>. Since <i class="one-letter">L</i> is the splitting field of <nemeth class="inline">⠋⠷⠭⠾⠷⠭⠘⠆⠐⠬⠂⠾</nemeth> over <nemeth class="inline">⠸⠠⠗</nemeth>, <i class="one-letter">L</i> is a finite normal separable extension of <nemeth class="inline">⠸⠠⠗</nemeth>. Let <i class="one-letter">K</i> be the fixed field of a Sylow 2-subgroup <i class="one-letter">G</i> of <nemeth class="inline">⠠⠛⠷⠠⠇⠸⠌⠸⠠⠗⠾</nemeth>. Then <nemeth class="inline">⠠⠇⠀⠸⠨⠂⠀⠠⠅⠀⠸⠨⠂⠀⠸⠠⠗</nemeth> and <nemeth class="inline">⠳⠠⠛⠷⠠⠇⠸⠌⠠⠅⠾⠳⠀⠨⠅⠀⠈⠷⠠⠇⠒⠀⠠⠅⠈⠾</nemeth>. Since <nemeth class="inline">⠈⠷⠠⠇⠒⠀⠸⠠⠗⠈⠾⠀⠨⠅⠀⠈⠷⠠⠇⠒⠀⠠⠅⠈⠾⠈⠷⠠⠅⠒⠀⠸⠠⠗⠈⠾</nemeth>, we know that <nemeth class="inline">⠈⠷⠠⠅⠒⠀⠸⠠⠗⠈⠾</nemeth> must be odd. Consequently, <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠸⠠⠗⠷⠨⠃⠾</nemeth> with <nemeth class="inline">⠨⠃</nemeth> having a minimal polynomial <nemeth class="inline">⠋⠷⠭⠾</nemeth> of odd degree. Therefore, <nemeth class="inline">⠠⠅⠀⠨⠅⠀⠸⠠⠗</nemeth>.</p>
              <p id="rGh">We now know that <nemeth class="inline">⠠⠛⠷⠠⠇⠸⠌⠸⠠⠗⠾</nemeth> must be a 2-group. It follows that <nemeth class="inline">⠠⠛⠷⠠⠇⠸⠌⠸⠠⠉⠾</nemeth> is a <nemeth class="inline">⠼⠆</nemeth>-group. We have assumed that <nemeth class="inline">⠠⠇⠀⠌⠨⠅⠀⠸⠠⠉</nemeth>; therefore, <nemeth class="inline">⠳⠠⠛⠷⠠⠇⠸⠌⠸⠠⠉⠾⠳⠀⠨⠂⠱⠀⠼⠆</nemeth>. By the first Sylow Theorem and the Fundamental Theorem of Galois Theory, there exists a subgroup <i class="one-letter">G</i> of <nemeth class="inline">⠠⠛⠷⠠⠇⠸⠌⠸⠠⠉⠾</nemeth> of index 2 and a field <i class="one-letter">E</i> fixed elementwise by <i class="one-letter">G</i>. Then <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠸⠠⠉⠈⠾⠀⠨⠅⠀⠼⠆</nemeth> and there exists an element <nemeth class="inline">⠨⠛⠀⠈⠑⠀⠠⠑</nemeth> with minimal polynomial <nemeth class="inline">⠭⠘⠆⠐⠬⠃⠭⠬⠉</nemeth> in <nemeth class="inline">⠸⠠⠉⠈⠷⠭⠈⠾</nemeth>. This polynomial has roots <nemeth class="inline">⠷⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠉⠻⠾⠸⠌⠆</nemeth> that are in <nemeth class="inline">⠸⠠⠉</nemeth>, since <nemeth class="inline">⠃⠘⠆⠐⠤⠲⠉</nemeth> is in <nemeth class="inline">⠸⠠⠉</nemeth>. This is impossible; hence, <nemeth class="inline">⠠⠇⠀⠨⠅⠀⠸⠠⠉</nemeth>.</p>
            </article>
            <p id="tJP">Although our proof was strictly algebraic, we were forced to rely on results from calculus. It is necessary to assume the completeness axiom from analysis to show that every polynomial of odd degree has a real root and that every positive real number has a square root. It seems that there is no possible way to avoid this difficulty and formulate a purely algebraic argument. It is somewhat amazing that there are several elegant proofs of the Fundamental Theorem of Algebra that use complex analysis. It is also interesting to note that we can obtain a proof of such an important theorem from two very different fields of mathematics.</p>
            <article class="paragraphs" id="COT">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="ZQY">Fields, field extensions, roots of polynomials, and group theory — Sage has it all, and so it is possible to carefully study very complicated examples from Galois Theory with Sage.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="YIb">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">23.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="vQx">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="MOI">What is the Galois group of a field extension?</p>
          </article>
          <article class="exercise exercise-like" id="bXG">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="sVR">When are two elements of a field extension conjugate? (In other words, what is the definition?)</p>
          </article>
          <article class="exercise exercise-like" id="IeP">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Zda">Summarize the nature and importance of the Fundamental Theorem of Galois Theory. Capture the essence of the result without getting bogged down in too many details.</p>
          </article>
          <article class="exercise exercise-like" id="olY">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="Fkj">Why are “solvable” groups so named? Paraphrasing the relevant theorem would be a good answer.</p>
          </article>
          <article class="exercise exercise-like" id="Uth">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="lrs">Argue the following statement, both pro and con. Which side wins the debate?</p>
            <blockquote class="blockquote" id="AAq">
              <p id="gHz">Everything we have done in this entire course has been in preparation for this chapter.</p>
            </blockquote>
          </article>
        </section>
        <section class="exercises" id="qAB">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">23.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="kLp">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="amx">Compute each of the following Galois groups. Which of these field extensions are normal field extensions? If the extension is not normal, find a normal extension of <nemeth class="inline">⠸⠠⠟</nemeth> in which the extension field is contained.</p>
            <ol class="outerlist">
              <li>a. <p id="BgX"><nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠜⠒⠴⠻⠾⠸⠌⠸⠠⠟⠾</nemeth></p></li>
              <li>b. <p id="hog"><nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠣⠲⠜⠢⠻⠾⠸⠌⠸⠠⠟⠾</nemeth></p></li>
              <li>c. <p id="Nvp"><nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠜⠆⠻⠠⠀⠜⠒⠻⠠⠀⠜⠢⠻⠾⠸⠌⠸⠠⠟⠾</nemeth></p></li>
              <li>d. <p id="tCy"><nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠜⠆⠻⠠⠀⠣⠒⠜⠆⠻⠠⠀⠊⠾⠸⠌⠸⠠⠟⠾</nemeth></p></li>
              <li>e. <p id="ZJH"><nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠜⠖⠻⠠⠀⠊⠾⠸⠌⠸⠠⠟⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="KHN"><span class="type">Hint</span>:<p id="mmu">(a) <nemeth class="inline">⠸⠠⠵⠆</nemeth>; (c) <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="QSy">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="GtG">Determine the separability of each of the following polynomials.</p>
            <ol class="outerlist">
              <li>a. <p id="KAJ"><nemeth class="inline">⠭⠘⠒⠐⠬⠆⠭⠘⠆⠤⠭⠤⠆</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>b. <p id="qHS"><nemeth class="inline">⠭⠘⠲⠐⠬⠆⠭⠘⠆⠬⠂</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth></p></li>
              <li>c. <p id="WPb"><nemeth class="inline">⠭⠘⠲⠐⠬⠭⠘⠆⠐⠬⠂</nemeth> over <nemeth class="inline">⠸⠠⠵⠒</nemeth></p></li>
              <li>d. <p id="CWk"><nemeth class="inline">⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂</nemeth> over <nemeth class="inline">⠸⠠⠵⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="WWf"><span class="type">Hint</span>:<p id="yAM">(a) Separable over <nemeth class="inline">⠸⠠⠟</nemeth> since <nemeth class="inline">⠭⠘⠒⠐⠬⠆⠭⠘⠆⠐⠤⠭⠤⠆⠀⠨⠅⠀⠷⠭⠤⠂⠾⠷⠭⠬⠂⠾⠷⠭⠬⠆⠾</nemeth>; (c) not separable over <nemeth class="inline">⠸⠠⠵⠒</nemeth> since <nemeth class="inline">⠭⠘⠲⠐⠬⠭⠘⠆⠐⠬⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠘⠆⠐⠷⠭⠬⠆⠾⠘⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="wZH">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="mAP">Give the order and describe a generator of the Galois group of <nemeth class="inline">⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾</nemeth> over <nemeth class="inline">⠠⠛⠠⠋⠷⠼⠔⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="jkx"><span class="type">Hint</span>:<p id="eHV">If</p><div class="displaymath"><nemeth>⠈⠷⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾⠒⠀⠠⠛⠠⠋⠷⠼⠔⠾⠈⠾⠀⠨⠅⠀⠈⠷⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾⠒⠀⠠⠛⠠⠋⠷⠼⠒⠾⠈⠾⠸⠌⠈⠷⠠⠛⠠⠋⠷⠼⠔⠾⠒⠀⠠⠛⠠⠋⠷⠼⠒⠾⠈⠾⠀⠨⠅⠀⠼⠖⠸⠌⠆⠀⠨⠅⠀⠼⠒</nemeth></div><p data-braille="continuation">, then <nemeth class="inline">⠠⠛⠷⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾⠸⠌⠠⠛⠠⠋⠷⠼⠔⠾⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠒</nemeth>. A generator for <nemeth class="inline">⠠⠛⠷⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾⠸⠌⠠⠛⠠⠋⠷⠼⠔⠾⠾</nemeth> is <nemeth class="inline">⠨⠎</nemeth>, where <nemeth class="inline">⠎⠰⠒⠰⠘⠖⠐⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁⠘⠒⠘⠘⠖⠐⠀⠨⠅⠀⠨⠁⠘⠶⠆⠔</nemeth> for <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="dgQ">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="SHY">Determine the Galois groups of each of the following polynomials in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>; hence, determine the solvability by radicals of each of the polynomials.</p>
            <ol class="outerlist">
              <li>a. <p id="HGd"><nemeth class="inline">⠭⠘⠢⠐⠤⠂⠆⠭⠘⠆⠬⠆</nemeth></p></li>
              <li>b. <p id="nNm"><nemeth class="inline">⠭⠘⠢⠐⠤⠲⠭⠘⠲⠬⠆⠭⠬⠆</nemeth></p></li>
              <li>c. <p id="TUv"><nemeth class="inline">⠭⠘⠒⠐⠤⠢</nemeth></p></li>
              <li>d. <p id="AbE"><nemeth class="inline">⠭⠘⠲⠐⠤⠭⠘⠆⠐⠤⠖</nemeth></p></li>
              <li>e. <p id="giN"><nemeth class="inline">⠭⠘⠢⠐⠬⠂</nemeth></p></li>
              <li>f. <p id="MpW"><nemeth class="inline">⠷⠭⠘⠆⠐⠤⠆⠾⠷⠭⠘⠆⠐⠬⠆⠾</nemeth></p></li>
              <li>g. <p id="sxf"><nemeth class="inline">⠭⠘⠦⠐⠤⠂</nemeth></p></li>
              <li>h. <p id="YEo"><nemeth class="inline">⠭⠘⠦⠐⠬⠂</nemeth></p></li>
              <li>i. <p id="ELx"><nemeth class="inline">⠭⠘⠲⠐⠤⠒⠭⠘⠆⠤⠂⠴</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="vyP"><span class="type">Hint</span>:<p id="KPe">(a) <nemeth class="inline">⠠⠎⠢</nemeth>; (c) <nemeth class="inline">⠠⠎⠒</nemeth>; (g) see Example 23.1.11.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="JnZ">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="yPh">Find a primitive element in the splitting field of each of the following polynomials in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="Ofj"><nemeth class="inline">⠭⠘⠲⠐⠤⠂</nemeth></p></li>
              <li>b. <p id="ums"><nemeth class="inline">⠭⠘⠲⠐⠤⠦⠭⠘⠆⠬⠂⠢</nemeth></p></li>
              <li>c. <p id="atB"><nemeth class="inline">⠭⠘⠲⠐⠤⠆⠭⠘⠆⠤⠂⠢</nemeth></p></li>
              <li>d. <p id="GAK"><nemeth class="inline">⠭⠘⠒⠐⠤⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="HNh"><span class="type">Hint</span>:<p id="qWn">(a) <nemeth class="inline">⠸⠠⠟⠷⠊⠾</nemeth></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="pvi">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="eWq">Prove that the Galois group of an irreducible quadratic polynomial is isomorphic to <nemeth class="inline">⠸⠠⠵⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="VCr">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="Ldz">Prove that the Galois group of an irreducible cubic polynomial is isomorphic to <nemeth class="inline">⠠⠎⠒</nemeth> or <nemeth class="inline">⠸⠠⠵⠒</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="AiI"><span class="type">Hint</span>:<p id="Xdw">Let <i class="one-letter">E</i> be the splitting field of a cubic polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Show that <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth> is less than or equal to <nemeth class="inline">⠼⠖</nemeth> and is divisible by <nemeth class="inline">⠼⠒</nemeth>. Since <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠎⠒</nemeth> whose order is divisible by <nemeth class="inline">⠼⠒</nemeth>, conclude that this group must be isomorphic to <nemeth class="inline">⠸⠠⠵⠒</nemeth> or <nemeth class="inline">⠠⠎⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="BJA">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="rkI">Let <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠅⠀⠸⠐⠅⠀⠠⠑</nemeth> be fields. If <i class="one-letter">E</i> is a normal extension of <i class="one-letter">F</i>, show that <i class="one-letter">E</i> must also be a normal extension of <i class="one-letter">K</i>.</p>
          </article>
          <article class="exercise exercise-like" id="hQJ">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="XrR">Let <i class="one-letter">G</i> be the Galois group of a polynomial of degree <i class="one-letter">n</i>. Prove that <nemeth class="inline">⠳⠠⠛⠳</nemeth> divides <nemeth class="inline">⠝⠯</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="sEj"><span class="type">Hint</span>:<p id="DkF"><i class="one-letter">G</i> is a subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NXS">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="Dza">Let <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠑</nemeth>. If <nemeth class="inline">⠋⠷⠭⠾</nemeth> is solvable over <i class="one-letter">F</i>, show that <nemeth class="inline">⠋⠷⠭⠾</nemeth> is also solvable over <i class="one-letter">E</i>.</p>
          </article>
          <article class="exercise exercise-like" id="ufb">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="jGj">Construct a polynomial <nemeth class="inline">⠋⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠟⠈⠷⠭⠈⠾</nemeth> of degree <nemeth class="inline">⠼⠶</nemeth> that is not solvable by radicals.</p>
          </article>
          <article class="exercise exercise-like" id="amk">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="PNs">Let <i class="one-letter">p</i> be prime. Prove that there exists a polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠸⠠⠟⠈⠷⠭⠈⠾</nemeth> of degree <i class="one-letter">p</i> with Galois group isomorphic to <nemeth class="inline">⠠⠎⠰⠏</nemeth>. Conclude that for each prime <i class="one-letter">p</i> with <nemeth class="inline">⠏⠀⠨⠂⠱⠀⠼⠢</nemeth> there exists a polynomial of degree <i class="one-letter">p</i> that is not solvable by radicals.</p>
          </article>
          <article class="exercise exercise-like" id="Gtt">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="vUB">Let <i class="one-letter">p</i> be a prime and <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠷⠞⠾</nemeth> be the field of rational functions over <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>. Prove that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠏⠐⠤⠞</nemeth> is an irreducible polynomial in <nemeth class="inline">⠸⠠⠵⠰⠏⠐⠷⠞⠾⠈⠷⠭⠈⠾</nemeth>. Show that <nemeth class="inline">⠋⠷⠭⠾</nemeth> is not separable.</p>
          </article>
          <article class="exercise exercise-like" id="mAC">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="cbK">Let <i class="one-letter">E</i> be an extension field of <i class="one-letter">F</i>. Suppose that <i class="one-letter">K</i> and <i class="one-letter">L</i> are two intermediate fields. If there exists an element <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> such that <nemeth class="inline">⠎⠷⠠⠅⠾⠀⠨⠅⠀⠠⠇</nemeth>, then <i class="one-letter">K</i> and <i class="one-letter">L</i> are said to be <dfn class="terminology">conjugate fields.</dfn> Prove that <i class="one-letter">K</i> and <i class="one-letter">L</i> are conjugate if and only if <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾</nemeth> and <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠇⠾</nemeth> are conjugate subgroups of <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="SHL">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="IiT">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠁⠥⠞⠷⠸⠠⠗⠾</nemeth>. If <i class="one-letter">a</i> is a positive real number, show that <nemeth class="inline">⠎⠷⠁⠾⠀⠨⠂⠀⠼⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="yOU">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="oqc">Let <i class="one-letter">K</i> be the splitting field of <nemeth class="inline">⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂⠀⠈⠑⠀⠸⠠⠵⠆⠈⠷⠭⠈⠾</nemeth>. Prove or disprove that <i class="one-letter">K</i> is an extension by radicals.</p>
            <div class="solutions">
              <div class="hint solution-like" id="pJD"><span class="type">Hint</span>:<p id="jrO">True.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="eWd">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="Uxl">Let <i class="one-letter">F</i> be a field such that <nemeth class="inline">⠉⠓⠁⠗⠷⠠⠋⠾⠀⠌⠨⠅⠀⠼⠆</nemeth>. Prove that the splitting field of <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉</nemeth> is <nemeth class="inline">⠠⠋⠷⠜⠨⠁⠻⠾</nemeth>, where <nemeth class="inline">⠨⠁⠀⠨⠅⠀⠃⠘⠆⠐⠤⠲⠁⠉</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Ldm">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="AEu">Prove or disprove: Two different subgroups of a Galois group will have different fixed fields.</p>
          </article>
          <article class="exercise exercise-like" id="rkv">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="gLD">Let <i class="one-letter">K</i> be the splitting field of a polynomial over <i class="one-letter">F</i>. If <i class="one-letter">E</i> is a field extension of <i class="one-letter">F</i> contained in <i class="one-letter">K</i> and <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾⠀⠨⠅⠀⠼⠆</nemeth>, then <i class="one-letter">E</i> is the splitting field of some polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="XrE">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="MSM">We know that the cyclotomic polynomial</p>
            <div class="displaymath">
              <nemeth>⠨⠠⠋⠰⠏⠐⠷⠭⠾⠀⠨⠅⠀⠹⠭⠘⠏⠐⠤⠂⠌⠭⠤⠂⠼⠀⠨⠅⠀⠭⠘⠏⠤⠂⠐⠬⠭⠘⠏⠤⠆⠐⠬⠄⠄⠄⠬⠭⠬⠂</nemeth>
            </div>
            <p data-braille="continuation">is irreducible over <nemeth class="inline">⠸⠠⠟</nemeth> for every prime <i class="one-letter">p</i>. Let <nemeth class="inline">⠨⠕</nemeth> be a zero of <nemeth class="inline">⠨⠠⠋⠰⠏⠐⠷⠭⠾</nemeth>, and consider the field <nemeth class="inline">⠸⠠⠟⠷⠨⠕⠾</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="LkD">Show that <nemeth class="inline">⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂</nemeth> are distinct zeros of <nemeth class="inline">⠨⠠⠋⠰⠏⠐⠷⠭⠾</nemeth>, and conclude that they are all the zeros of <nemeth class="inline">⠨⠠⠋⠰⠏⠐⠷⠭⠾</nemeth>.</p></li>
              <li>b. <p id="rrM">Show that <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾</nemeth> is abelian of order <nemeth class="inline">⠏⠤⠂</nemeth>.</p></li>
              <li>c. <p id="XyV">Show that the fixed field of <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾</nemeth> is <nemeth class="inline">⠸⠠⠟</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="utw"><span class="type">Hint</span>:<ol class="outerlist"><li>a. <p id="DGe">Clearly <nemeth class="inline">⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂</nemeth> are distinct since <nemeth class="inline">⠨⠕⠀⠌⠨⠅⠀⠼⠂</nemeth> or 0. To show that <nemeth class="inline">⠨⠕⠘⠊</nemeth> is a zero of <nemeth class="inline">⠨⠠⠋⠰⠏</nemeth>, calculate <nemeth class="inline">⠨⠠⠋⠰⠏⠐⠷⠨⠕⠘⠊⠐⠾</nemeth>.</p></li><li>b. <p id="jNn">The conjugates of <nemeth class="inline">⠨⠕</nemeth> are <nemeth class="inline">⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂</nemeth>. Define a map  <nemeth class="inline">⠨⠋⠰⠊⠐⠒⠀⠸⠠⠟⠷⠨⠕⠾⠀⠫⠕⠀⠸⠠⠟⠷⠨⠕⠘⠊⠐⠾</nemeth> by</p><div class="displaymath"><nemeth>⠨⠋⠰⠊⠐⠷⠁⠴⠬⠁⠂⠨⠕⠬⠄⠄⠄⠬⠁⠰⠏⠤⠆⠐⠨⠕⠘⠏⠤⠆⠐⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠨⠕⠘⠊⠐⠬⠄⠄⠄⠬⠉⠰⠏⠤⠆⠐⠷⠨⠕⠘⠊⠐⠾⠘⠏⠤⠆</nemeth></div><p data-braille="continuation">, where <nemeth class="inline">⠁⠰⠊⠐⠀⠈⠑⠀⠸⠠⠟</nemeth>. Prove that <nemeth class="inline">⠨⠋⠰⠊</nemeth> is an isomorphism of fields. Show that <nemeth class="inline">⠨⠋⠆</nemeth> generates <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾</nemeth>.</p></li><li>c. <p id="PUw">Show that <nemeth class="inline">⠨⠷⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂⠐⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠨⠕⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>, and consider which linear combinations of <nemeth class="inline">⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂</nemeth> are left fixed by all elements of <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾</nemeth>.</p></li></ol></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="DyN">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="sZV">Let <i class="one-letter">F</i> be a finite field or a field of characteristic zero. Let <i class="one-letter">E</i> be a finite normal extension of <i class="one-letter">F</i> with Galois group <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>. Prove that <nemeth class="inline">⠠⠋⠀⠸⠐⠅⠀⠠⠅⠀⠸⠐⠅⠀⠠⠇⠀⠸⠐⠅⠀⠠⠑</nemeth> if and only if <nemeth class="inline">⠨⠷⠊⠙⠨⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠇⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠅⠾⠀⠸⠐⠅⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="jFW">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="Zhe">Let <i class="one-letter">F</i> be a field of characteristic zero and let <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> be a separable polynomial of degree <i class="one-letter">n</i>. If <i class="one-letter">E</i> is the splitting field of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, let <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth> be the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth> in <i class="one-letter">E</i>. Let <nemeth class="inline">⠨⠠⠙⠀⠨⠅⠀⠐⠄⡳⠭⠆⠆⠴⠋⠄⠩⠊⠀⠐⠅⠀⠚⠻⠷⠨⠁⠰⠊⠐⠤⠨⠁⠰⠚⠐⠾</nemeth>. We define the <dfn class="terminology">discriminant</dfn> of <nemeth class="inline">⠋⠷⠭⠾</nemeth> to be <nemeth class="inline">⠨⠠⠙⠘⠆</nemeth>. </p>
            <ol class="outerlist">
              <li>a. <p id="oxg">If <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆⠐⠬⠃⠭⠬⠉</nemeth>, show that <nemeth class="inline">⠨⠠⠙⠘⠆⠐⠀⠨⠅⠀⠃⠘⠆⠐⠤⠲⠉</nemeth>.</p></li>
              <li>b. <p id="UEp">If <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠬⠏⠭⠬⠟</nemeth>, show that <nemeth class="inline">⠨⠠⠙⠘⠆⠐⠀⠨⠅⠀⠤⠼⠲⠏⠘⠒⠐⠤⠆⠶⠟⠘⠆</nemeth>.</p></li>
              <li>c. <p id="ALy">Prove that <nemeth class="inline">⠨⠠⠙⠘⠆</nemeth> is in <i class="one-letter">F</i>.</p></li>
              <li>d. <p id="gSH">If <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is a transposition of two roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, show that <nemeth class="inline">⠎⠷⠨⠠⠙⠾⠀⠨⠅⠀⠤⠨⠠⠙</nemeth>.</p></li>
              <li>e. <p id="MZQ">If <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is an even permutation of the roots of <nemeth class="inline">⠋⠷⠭⠾</nemeth>, show that <nemeth class="inline">⠎⠷⠨⠠⠙⠾⠀⠨⠅⠀⠨⠠⠙</nemeth>.</p></li>
              <li>f. <p id="tgZ">Prove that <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is isomorphic to a subgroup of <nemeth class="inline">⠠⠁⠰⠝</nemeth> if and only if <nemeth class="inline">⠨⠠⠙⠀⠈⠑⠀⠠⠋</nemeth>.</p></li>
              <li>g. <p id="Zoi">Determine the Galois groups of <nemeth class="inline">⠭⠘⠒⠐⠬⠆⠭⠤⠲</nemeth> and <nemeth class="inline">⠭⠘⠒⠐⠬⠭⠤⠒</nemeth>.</p></li>
            </ol>
          </article>
        </section>
        <section class="references" id="ppv">
          <div class="none"><span class="type">References</span> <span class="codenumber">23.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="VwE"><div class="bibitem">[1]</div>  <div class="bibentry"> Artin, E. <i>Theory: Lectures Delivered at the University of Notre Dame (Notre Dame Mathematical Lectures, Number 2)</i>. Dover, Mineola, NY, 1997.</div></article>
          <article class="bib" id="BDN"><div class="bibitem">[2]</div>  <div class="bibentry"> Edwards, H. M. <i>Galois Theory</i>. Springer-Verlag, New York, 1984.</div></article>
          <article class="bib" id="hKW"><div class="bibitem">[3]</div>  <div class="bibentry"> Fraleigh, J. B. <i>A First Course in Abstract Algebra</i>. 7th ed. Pearson, Upper Saddle River, NJ, 2003.</div></article>
          <article class="bib" id="NSf"><div class="bibitem">[4]</div>  <div class="bibentry"> Gaal, L. <i>Classical Galois Theory with Examples</i>.  American Mathematical Society, Providence, 1979.</div></article>
          <article class="bib" id="tZo"><div class="bibitem">[5]</div>  <div class="bibentry"> Garling, D. J. H. <i>A Course in Galois Theory</i>. Cambridge University Press, Cambridge, 1986.</div></article>
          <article class="bib" id="agx"><div class="bibitem">[6]</div>  <div class="bibentry"> Kaplansky, I. <i>Fields and Rings</i>. 2nd ed. University of Chicago Press, Chicago, 1972.</div></article>
          <article class="bib" id="GnG"><div class="bibitem">[7]</div>  <div class="bibentry"> Rothman, T. “The Short Life of Évariste Galois,” <i>Scientific American</i>, April 1982, 136–49.</div></article>
        </section>
        <section class="section" id="brD">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">23.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="rUp">
            <p id="ufo">Again, our competence at examining fields with Sage will allow us to study the main concepts of Galois Theory easily. We will thoroughly examine Example 7 carefully using our computational tools.</p>
          </section>
          <section class="subsection" id="RXR">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.7.1</span> <span class="title">Galois Groups</span></div>
            <p id="FYh">We will repeat Example 23.2.12 and analyze carefully the splitting field of the polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠤⠆</nemeth>. We begin with an initial field extension containing at least one root.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x = polygen(QQ, 'x')
N.&lt;a&gt; = NumberField(x^4 - 2); N
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in a with defining polynomial x^4 - 2
</div>
            </article>
            <p id="mfq">The <code class="code-inline tex2jax_ignore">.galois_closure()</code> method will create an extension containing all of the roots of the defining polynomial of a number field.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">L.&lt;b&gt; = N.galois_closure(); L
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in b with defining polynomial x^8 + 28*x^4 + 2500
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">L.degree()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">y = polygen(L, 'y')
(y^4 - 2).factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(y - 1/120*b^5 -  19/60*b) *
(y - 1/240*b^5 + 41/120*b) *
(y + 1/240*b^5 - 41/120*b) *
(y + 1/120*b^5 +  19/60*b)
</div>
            </article>
            <p id="Smz">From the factorization, it is clear that <code class="code-inline tex2jax_ignore">L</code> is the splitting field of the polynomial, even if the factorization is not pretty. It is easy to then obtain the Galois group of this field extension.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = L.galois_group(); G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Galois group of Number Field in b with
defining polynomial x^8 + 28*x^4 + 2500
</div>
            </article>
            <p id="ytI">We can examine this group, and identify it. Notice that since the field is a degree <nemeth class="inline">⠼⠦</nemeth> extension, the group is described as a permutation group on <nemeth class="inline">⠼⠦</nemeth> symbols. (It is just a coincidence that the group has <nemeth class="inline">⠼⠦</nemeth> elements.) With a paucity of nonabelian groups of order <nemeth class="inline">⠼⠦</nemeth>, it is not hard to guess the nature of the group.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,2,8,7)(3,4,6,5),
(1,3)(2,5)(4,7)(6,8), (1,4)(2,3)(5,8)(6,7),
(1,5)(2,6)(3,7)(4,8), (1,6)(2,4)(3,8)(5,7),
(1,7,8,2)(3,5,6,4), (1,8)(2,7)(3,6)(4,5)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.is_isomorphic(DihedralGroup(4))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="eAR">That's it. But maybe not very satisfying. Let us dig deeper for more understanding. We will start over and create the splitting field of <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠤⠆</nemeth> again, but the primary difference is that we will make the roots extremely obvious so we can work more carefully with the Galois group and the fixed fields. Along the way, we will see another example of linear algebra enabling certain computations. The following construction should be familiar by now.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">x = polygen(QQ, 'x')
p = x^4 - 2
N.&lt;a&gt; = NumberField(p); N
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in a with defining polynomial x^4 - 2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">y = polygen(N, 'y')
p = p.subs(x=y)
p.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(y - a) * (y + a) * (y^2 + a^2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">M.&lt;b&gt; = NumberField(y^2 + a^2); M
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in b with defining polynomial y^2 + a^2 over
its base field
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">z = polygen(M, 'z')
(z^4 - 2).factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(z - b) * (z - a) * (z + a) * (z + b)
</div>
            </article>
            <p id="KIa">The important thing to notice here is that we have arranged the splitting field so that the four roots, <code class="code-inline tex2jax_ignore">a, -a, b, -b</code>, are very simple functions of the generators. In more traditional notation, <code class="code-inline tex2jax_ignore">a</code> is <nemeth class="inline">⠼⠆⠘⠹⠂⠌⠲⠼⠐⠀⠨⠅⠀⠣⠲⠜⠆⠻</nemeth>, and <code class="code-inline tex2jax_ignore">b</code> is <nemeth class="inline">⠼⠆⠘⠹⠂⠌⠲⠼⠐⠊⠀⠨⠅⠀⠣⠲⠜⠆⠻⠊</nemeth> (or their negatives).</p>
            <p id="qPj">We will find it easier to compute in the flattened tower, a now familiar construction.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">L.&lt;c&gt; = M.absolute_field(); L
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL, toL = L.structure()
</div>
            </article>
            <p id="WWs">We can return to our original polynomial (over the rationals), and ask for its roots in the flattened tower, custom-designed to contain these roots.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">roots = p.roots(ring=L, multiplicities=False); roots
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1/120*c^5 +  19/60*c,
 1/240*c^5 - 41/120*c,
-1/240*c^5 + 41/120*c,
-1/120*c^5 -  19/60*c]
</div>
            </article>
            <p id="DdB">Hmmm. Do those look right? If you look back at the factorization obtained in the field constructed with the <code class="code-inline tex2jax_ignore">.galois_closure()</code> method, then they look right. But we can do better.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[fromL(r) for r in roots]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[b, a, -a, -b]
</div>
            </article>
            <p id="jkK">Yes, those are the roots.</p>
            <p id="PrT">The <code class="code-inline tex2jax_ignore">End()</code> command will create the group of automorphisms of the field <code class="code-inline tex2jax_ignore">L</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = End(L); G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Automorphism group of Number Field in c with
defining polynomial x^8 + 28*x^4 + 2500
</div>
            </article>
            <p id="vzc">We can check that each of these automorphisms fixes the rational numbers elementwise. If a field homomorphism fixes 1, then it will fix the integers, and thus fix all fractions of integers.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[tau(1) for tau in G]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 1, 1, 1, 1, 1, 1, 1]
</div>
            </article>
            <p id="bGl">So each element of <code class="code-inline tex2jax_ignore">G</code> fixes the rationals elementwise and thus <code class="code-inline tex2jax_ignore">G</code> is the Galois group of the splitting field <code class="code-inline tex2jax_ignore">L</code> over the rationals.</p>
            <p id="HNu">Proposition 23.1.5 is fundamental. It says every automorphism in the Galois group of a field extension creates a permutation of the roots of a polynomial with coefficients in the base field. We have all of those ingredients here. So we will evaluate each automorphism of the Galois group at each of the four roots of our polynomial, which in each case should be another root. (We use the <code class="code-inline tex2jax_ignore">Sequence()</code> constructor just to get nicely-aligned output.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Sequence([[fromL(tau(r)) for r in roots] for tau in G], cr=True)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[
[b, a, -a, -b],
[-b, -a, a, b],
[a, -b, b, -a],
[b, -a, a, -b],
[-a, -b, b, a],
[a, b, -b, -a],
[-b, a, -a, b],
[-a, b, -b, a]
]
</div>
            </article>
            <p id="nUD">Each row of the output is a list of the roots, but permuted, and so corresponds to a permutation of four objects (the roots). For example, the second row shows the second automorphism interchanging <code class="code-inline tex2jax_ignore">a</code> with <code class="code-inline tex2jax_ignore">-a</code>, and <code class="code-inline tex2jax_ignore">b</code> with <code class="code-inline tex2jax_ignore">-b</code>. (Notice that the first row is the result of the identity automorphism, so we can mentally comine the first row with any other row to imagine a “two-row” form of a permutation.) We can number the roots, 1 through 4, and create each permutation as an element of <nemeth class="inline">⠠⠎⠲</nemeth>. It is overkill, but we can then build the permutation group by letting <em class="emphasis">all</em> of these elements generate a group.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S4 = SymmetricGroup(4)
elements = [S4([1, 2, 3, 4]),
            S4([4, 3, 2, 1]),
            S4([2, 4, 1, 3]),
            S4([1, 3, 2, 4]),
            S4([3, 4, 1, 2]),
            S4([2, 1, 4, 3]),
            S4([4, 2, 3, 1]),
            S4([3, 1, 4, 2])]
elements
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,4)(2,3), (1,2,4,3), (2,3), (1,3)(2,4),
 (1,2)(3,4), (1,4), (1,3,4,2)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">P = S4.subgroup(elements)
P.is_isomorphic(DihedralGroup(4))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="UbM">Notice that we now have built an isomorphism from the Galois group to a group of permutations <em class="emphasis">using just four symbols</em>, rather than the eight used previously.</p>
          </section>
          <section class="subsection" id="yfa">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.7.2</span> <span class="title">Fixed Fields</span></div>
            <p id="AiV">In a previous Sage exercise, we computed the fixed fields of single field automorphisms for finite fields. This was “easy” in the sense that we could just test every element of the field to see if it was fixed, since the field was finite. Now we have an infinite field extension. How are we going to determine which elements are fixed by individual automorphisms, or subgroups of automorphisms?</p>
            <p id="gqe">The answer is to use the vector space structure of the flattened tower. As a degree <nemeth class="inline">⠼⠦</nemeth> extension of the rationals, the first <nemeth class="inline">⠼⠦</nemeth> powers of the primitive element <code class="code-inline tex2jax_ignore">c</code> form a basis when the field is viewed as a vector space with the rationals as the scalars. It is sufficient to know how each field automorphism behaves on this basis to fully specify the definition of the automorphism. To wit,</p>
            <div class="displaymath">
              <nemeth>⠞⠷⠭⠾⠀⠀⠨⠅⠀⠞⠷⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠶⠻⠟⠰⠊⠐⠉⠘⠊⠐⠾⠀⠀⠀⠟⠰⠊⠐⠀⠈⠑⠀⠸⠠⠟⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠶⠻⠞⠷⠟⠰⠊⠐⠾⠞⠷⠉⠘⠊⠐⠾⠀⠀⠀⠞⠊⠎⠀⠁⠀⠋⠊⠑⠇⠙⠀⠁⠥⠞⠕⠍⠕⠗⠏⠓⠊⠎⠍⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠊⠀⠨⠅⠀⠼⠴⠣⠶⠻⠟⠰⠊⠐⠞⠷⠉⠘⠊⠐⠾⠀⠀⠀⠗⠁⠞⠊⠕⠝⠁⠇⠎⠀⠁⠗⠑⠀⠋⠊⠭⠑⠙</nemeth>
            </div>
            <p data-braille="continuation">So we can compute the value of a field automorphism at any linear combination of powers of the primitive element as a linear combination of the values of the field automorphism at just the powers of the primitive element. This is known as the “power basis”, which we can obtain simply with the <code class="code-inline tex2jax_ignore">.power_basis()</code> method. We will begin with an example of how we can use this basis. We will illustrate with the fourth automorphism of the Galois group. Notice that the <code class="code-inline tex2jax_ignore">.vector()</code> method is a convenience that strips a linear combination of the powers of <code class="code-inline tex2jax_ignore">c</code> into a vector of just the coefficients.  (Notice too that <nemeth class="inline">⠨⠞</nemeth> is totally defined by the value of <nemeth class="inline">⠞⠷⠉⠾</nemeth>, since as a field automorphism <nemeth class="inline">⠞⠷⠉⠘⠅⠐⠾⠀⠨⠅⠀⠷⠞⠷⠉⠾⠾⠘⠅</nemeth>. However, we still need to work with the entire power basis to exploit the vector space structure.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">basis = L.power_basis(); basis
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, c, c^2, c^3, c^4, c^5, c^6, c^7]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau = G[3]
z = 4 + 5*c+ 6*c^3-7*c^6
tz = tau(4 + 5*c+ 6*c^3-7*c^6); tz
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">11/250*c^7 - 98/25*c^6 + 1/12*c^5 + 779/125*c^3 +
6006/25*c^2 - 11/6*c + 4
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tz.vector()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4, -11/6, 6006/25, 779/125, 0, 1/12, -98/25, 11/250)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau_matrix = column_matrix([tau(be).vector() for be in basis])
tau_matrix
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[  1       0       0        0  -28       0        0          0]
[  0  -11/30       0        0    0  779/15        0          0]
[  0       0  -14/25        0    0       0  -858/25          0]
[  0       0       0  779/750    0       0        0  -4031/375]
[  0       0       0        0   -1       0        0          0]
[  0    1/60       0        0    0   11/30        0          0]
[  0       0   -1/50        0    0       0    14/25          0]
[  0       0       0  11/1500    0       0        0   -779/750]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau_matrix*z.vector()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4, -11/6, 6006/25, 779/125, 0, 1/12, -98/25, 11/250)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau_matrix*(z.vector()) == (tau(z)).vector()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="Mxn">The last line expresses the fact that <code class="code-inline tex2jax_ignore">tau_matrix</code> is a matrix representation of the field automorphism, viewed as a linear transformation of the vector space structure. As a representation of an invertible field homomorphism, the matrix is invertible. As an order <nemeth class="inline">⠼⠆</nemeth> permutation of the roots, the inverse of the matrix is itself. But these facts are just verifications that we have the right thing, we are interested in other properties.</p>
            <p id="sEw">To construct fixed fields, we want to find elements fixed by automorphisms. Continuing with <code class="code-inline tex2jax_ignore">tau</code> from above, we seek elements <code class="code-inline tex2jax_ignore">z</code> (written as vectors) such that <code class="code-inline tex2jax_ignore">tau_matrix*z=z</code>. These are eigenvectors for the eigenvalue <nemeth class="inline">⠼⠂</nemeth>, or elements of the null space of <code class="code-inline tex2jax_ignore">(tau_matrix - I)</code>(null spaces are obtained with <code class="code-inline tex2jax_ignore">.right_kernel()</code> in Sage).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K = (tau_matrix-identity_matrix(8)).right_kernel(); K
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of degree 8 and dimension 4 over Rational Field
Basis matrix:
[    1     0     0     0     0     0     0     0]
[    0     1     0     0     0  1/38     0     0]
[    0     0     1     0     0     0 -1/22     0]
[    0     0     0     1     0     0     0 1/278]
</div>
            </article>
            <p id="YLF">Each row of the basis matrix is a vector representing an element of the field, specifically <code class="code-inline tex2jax_ignore">1</code>, <code class="code-inline tex2jax_ignore">c + (1/38)*c^5</code>, <code class="code-inline tex2jax_ignore">c^2 - (1/22)*c^6</code>, <code class="code-inline tex2jax_ignore">c^3 + (1/278)*c^7</code>. Let's take a closer look at these fixed elements, in terms we recognize.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(1)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(c + (1/38)*c^5)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">60/19*b
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(c^2 - (1/22)*c^6)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">150/11*a^2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(c^3 + (1/278)*c^7)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1500/139*a^2*b
</div>
            </article>
            <p id="ESO">Any element fixed by <code class="code-inline tex2jax_ignore">tau</code> will be a linear combination of these four elements. We can ignore any rational multiples present, the first element is just saying the rationals are fixed, and the last element is just a product of the middle two. So fundamentally <code class="code-inline tex2jax_ignore">tau</code> is fixing rationals, <code class="code-inline tex2jax_ignore">b</code> (which is <nemeth class="inline">⠣⠲⠜⠆⠻⠊</nemeth>) and <code class="code-inline tex2jax_ignore">a^2</code> (which is <nemeth class="inline">⠜⠆⠻</nemeth>). Furthermore, <code class="code-inline tex2jax_ignore">b^2 = -a^2</code> (the check follows), so we can create any fixed element of <code class="code-inline tex2jax_ignore">tau</code> by just adjoining <code class="code-inline tex2jax_ignore">b</code>=<nemeth class="inline">⠣⠲⠜⠆⠻⠊</nemeth> to the rationals. So the elements fixed by <code class="code-inline tex2jax_ignore">tau</code> are <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠊⠾</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a^2 + b^2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
          </section>
          <section class="subsection" id="emj">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.7.3</span> <span class="title">Galois Correspondence</span></div>
            <p id="kZX">The entire subfield structure of our splitting field is determined by the subgroup structure of the Galois group (Theorem 23.2.10), which is isomorphic to a group we know well. What are the subgroups of our Galois group, expressed as permutation groups? (For brevity, we just list the <em class="emphasis">generators</em> of each subgroup.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg = P.subgroups();
[H.gens() for H in sg]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[()],
 [(1,4)(2,3)],
 [(2,3)],
 [(1,4)],
 [(1,2)(3,4)],
 [(1,3)(2,4)],
 [(2,3), (1,4)(2,3)],
 [(1,2,4,3), (1,4)(2,3)],
 [(1,2)(3,4), (1,4)(2,3)],
 [(2,3), (1,2,4,3), (1,4)(2,3)]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[H.order() for H in sg]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 2, 2, 2, 2, 2, 4, 4, 4, 8]
</div>
            </article>
            <p id="Rhg"><code class="code-inline tex2jax_ignore">tau</code> above is the fourth element of the automorphism group, and the fourth permutation in <code class="code-inline tex2jax_ignore">elements</code> is the permutation <code class="code-inline tex2jax_ignore">(2,3)</code>, the generator (of order 2) for the second subgroup. So as the only nontrivial element of this subgroup, we know that the corresponding fixed field is <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠊⠾</nemeth>.</p>
            <p id="xop">Let us analyze another subgroup of order 2, without all the explanation, and starting with the subgroup. The sixth subgroup is generated by the fifth automorphism, so let us determine the elements that are fixed.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau = G[4]
tau_matrix = column_matrix([tau(be).vector() for be in basis])
(tau_matrix-identity_matrix(8)).right_kernel()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of degree 8 and dimension 4 over Rational Field
Basis matrix:
[     1      0      0      0      0      0      0      0]
[     0      1      0      0      0  1/158      0      0]
[     0      0      1      0      0      0   1/78      0]
[     0      0      0      1      0      0      0 13/614]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(1))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(c+(1/158)*c^5))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">120/79*b - 120/79*a
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(c^2+(1/78)*c^6))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-200/39*a*b
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(c^3+(13/614)*c^7))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3000/307*a^2*b + 3000/307*a^3
</div>
            </article>
            <p id="dvy">The first element indicates that the rationals are fixed (we knew that). Scaling the second element gives <code class="code-inline tex2jax_ignore">b - a</code> as a fixed element. Scaling the third and fourth fixed elements, we recognize that they can be obtained from powers of <code class="code-inline tex2jax_ignore">b - a</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(b-a)^2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-2*a*b
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(b-a)^3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2*a^2*b + 2*a^3
</div>
            </article>
            <p id="JCH">So the fixed field of this subgroup can be formed by adjoining <code class="code-inline tex2jax_ignore">b - a</code> to the rationals, which in mathematical notation is <nemeth class="inline">⠣⠲⠜⠆⠻⠊⠤⠣⠲⠜⠆⠻⠀⠨⠅⠀⠷⠼⠂⠤⠊⠾⠣⠲⠜⠆⠻</nemeth>, so the fixed field is <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠊⠤⠣⠲⠜⠆⠻⠾⠀⠨⠅⠀⠸⠠⠟⠷⠷⠼⠂⠤⠊⠾⠣⠲⠜⠆⠻⠾</nemeth>.</p>
            <p id="pJQ">We can create this fixed field, though as created here it is not strictly a subfield of <code class="code-inline tex2jax_ignore">L</code>. We will use an expression for <code class="code-inline tex2jax_ignore">b - a</code> that is a linear combination of powers of <code class="code-inline tex2jax_ignore">c</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">subinfo = L.subfield((79/120)*(c+(1/158)*c^5)); subinfo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(Number Field in c0 with defining polynomial x^4 + 8
 with c0 = 1/240*c^5 + 79/120*c,
 Ring morphism:
   From: Number Field in c0 with defining polynomial x^4 + 8
         with c0 = 1/240*c^5 + 79/120*c
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c0 |--&gt; 1/240*c^5 + 79/120*c)
</div>
            </article>
            <p id="VQZ">The <code class="code-inline tex2jax_ignore">.subfield()</code> method returns a pair. The first item is a new number field, isomorphic to a subfield of <code class="code-inline tex2jax_ignore">L</code>. The second item is an injective mapping from the new number field into <code class="code-inline tex2jax_ignore">L</code>. In this case, the image of the primitive element <code class="code-inline tex2jax_ignore">c0</code> is the element we have specified as the generator of the subfield. The primitive element of the new field will satisfy the defining polynomial <nemeth class="inline">⠭⠘⠲⠐⠬⠦</nemeth> — you can check that <nemeth class="inline">⠷⠼⠂⠤⠊⠾⠣⠲⠜⠆⠻</nemeth> is indeed a root of the polynomial <nemeth class="inline">⠭⠘⠲⠐⠬⠦</nemeth>.</p>
            <p id="BYi">There are five subgroups of order <nemeth class="inline">⠼⠆</nemeth>, we have found fixed fields for two of them. The other three are similar, so it would be a good exercise to work through them. Our automorphism group has three subgroups of order 4, and at least one of each possible type (cyclic versus non-cyclic). Fixed fields of larger subgroups require that we find elements fixed by all of the automorphisms in the subgroup. (We were conveniently ignoring the identity automorphism above.) This will require more computation, but will restrict the possibilities (smaller fields) to where it will be easier to deduce a primitive element for each field.</p>
            <p id="ifr">The seventh subgroup is generated by two elements of order <nemeth class="inline">⠼⠆</nemeth> and is composed entirely of elements of order <nemeth class="inline">⠼⠆</nemeth> (except the identity), so is isomorphic to <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>. The permutations correspond to automorphisms number 0, 1, 3, and 6. To determine the elements fixed by <em class="emphasis">all four</em> automorphisms, we will build the kernel for each one and as we go, we form the <em class="emphasis">intersection</em> of all four kernels. We will work via a loop over the four automorphisms.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">V = QQ^8
for tau in [G[0], G[1], G[3], G[6]]:
  tau_matrix = column_matrix([tau(be).vector() for be in basis])
  K = (tau_matrix-identity_matrix(8)).right_kernel()
  V = V.intersection(K)
V
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of degree 8 and dimension 2 over Rational Field
Basis matrix:
[    1     0     0     0     0     0     0     0]
[    0     0     1     0     0     0 -1/22     0]
</div>
            </article>
            <p id="OmA">Outside of the rationals, there is a single fixed element.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(c^2 - (1/22)*c^6))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">150/11*a^2
</div>
            </article>
            <p id="utJ">Removing a scalar multiple, our primitive element is <code class="code-inline tex2jax_ignore">a^2</code>, which mathematically is <nemeth class="inline">⠜⠆⠻</nemeth>, so the fixed field is <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth>. Again, we can build this fixed field, but ignore the mapping.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F, mapping = L.subfield((11/150)*(c^2 - (1/22)*c^6))
F
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in c0 with defining polynomial x^2 - 2
with c0 = -1/300*c^6 + 11/150*c^2
</div>
            </article>
            <p id="aAS">One more subgroup. The penultimate subgroup has a permutation of order 4 as a generator, so is a cyclic group of order 4. The individual permutations of the subgroup correspond to automorphisms 0, 1, 2, 7.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">V = QQ^8
for tau in [G[0], G[1], G[2], G[7]]:
  tau_matrix = column_matrix([tau(be).vector() for be in basis])
  K = (tau_matrix-identity_matrix(8)).right_kernel()
  V = V.intersection(K)
V
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of degree 8 and dimension 2 over Rational Field
Basis matrix:
[1 0 0 0 0 0 0 0]
[0 0 0 0 1 0 0 0]
</div>
            </article>
            <p id="GIb">So we compute the primitive element.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(c^4))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-24*a^3*b - 14
</div>
            </article>
            <p id="mPk">Since rationals are fixed, we can remove the <nemeth class="inline">⠤⠼⠂⠲</nemeth> and the multiple and take <code class="code-inline tex2jax_ignore">a^3*b</code> as the primitive element. Mathematically, this is <nemeth class="inline">⠼⠆⠊</nemeth>, so we might as well use just <i class="one-letter">i</i> as the primitive element and the fixed field is <nemeth class="inline">⠸⠠⠟⠷⠊⠾</nemeth>. We can then build the fixed field (and ignore the mapping also returned).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">F, mapping = L.subfield((c^4+14)/-48)
F
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Number Field in c0 with defining polynomial x^2 + 1
with c0 = -1/48*c^4 - 7/24
</div>
            </article>
            <p id="SWt">There is one more subgroup of order <nemeth class="inline">⠼⠲</nemeth>, which we will leave as an exercise to analyze. There are also two trivial subgroups (the identity and the full group) which are not very interesting or surprising.</p>
            <p id="zdC">If the above seems like too much work, you can always just have Sage do it all with the <code class="code-inline tex2jax_ignore">.subfields()</code> method.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">L.subfields()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[
(Number Field in c0 with defining polynomial x,
 Ring morphism:
   From: Number Field in c0 with defining polynomial x
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: 0 |--&gt; 0,
 None),
(Number Field in c1 with defining polynomial x^2 + 112*x + 40000,
 Ring morphism:
   From: Number Field in c1 with defining polynomial x^2 + 112*x + 40000
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c1 |--&gt; 4*c^4,
 None),
(Number Field in c2 with defining polynomial x^2 + 512,
 Ring morphism:
   From: Number Field in c2 with defining polynomial x^2 + 512
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c2 |--&gt; 1/25*c^6 + 78/25*c^2,
 None),
(Number Field in c3 with defining polynomial x^2 - 288,
 Ring morphism:
   From: Number Field in c3 with defining polynomial x^2 - 288
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c3 |--&gt; -1/25*c^6 + 22/25*c^2,
 None),
(Number Field in c4 with defining polynomial x^4 + 112*x^2 + 40000,
 Ring morphism:
   From: Number Field in c4 with defining polynomial x^4 + 112*x^2 + 40000
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c4 |--&gt; 2*c^2,
 None),
(Number Field in c5 with defining polynomial x^4 + 648,
 Ring morphism:
   From: Number Field in c5 with defining polynomial x^4 + 648
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c5 |--&gt; 1/80*c^5 + 79/40*c,
 None),
(Number Field in c6 with defining polynomial x^4 + 8,
Ring morphism:
  From: Number Field in c6 with defining polynomial x^4 + 8
  To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
  Defn: c6 |--&gt; -1/80*c^5 + 1/40*c,
  None),
(Number Field in c7 with defining polynomial x^4 - 512,
 Ring morphism:
   From: Number Field in c7 with defining polynomial x^4 - 512
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c7 |--&gt; -1/60*c^5 + 41/30*c,
 None),
(Number Field in c8 with defining polynomial x^4 - 32,
 Ring morphism:
   From: Number Field in c8 with defining polynomial x^4 - 32
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c8 |--&gt; 1/60*c^5 + 19/30*c,
 None),
(Number Field in c9 with defining polynomial x^8 + 28*x^4 + 2500,
 Ring morphism:
   From: Number Field in c9 with defining polynomial x^8 + 28*x^4 + 2500
   To:   Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c9 |--&gt; c,
 Ring morphism:
   From: Number Field in c with defining polynomial x^8 + 28*x^4 + 2500
   To:   Number Field in c9 with defining polynomial x^8 + 28*x^4 + 2500
   Defn: c |--&gt; c9)
]
</div>
            </article>
            <p id="fkL">Ten subfields are described, which is what we would expect, given the 10 subgroups of the Galois group. Each begins with a new number field that is a subfield. Technically, each is not a subset of <code class="code-inline tex2jax_ignore">L</code>, but the second item returned for each subfield is an injective homomorphism, also known generally as an “embedding.” Each embedding describes how a primitive element of the subfield translates to an element of <code class="code-inline tex2jax_ignore">L</code>. Some of these primitive elements could be manipulated (as we have done above) to yield slightly simpler minimal polynomials, but the results are quite impressive nonetheless. Each item in the list has a third component, which is almost always <code class="code-inline tex2jax_ignore">None</code>, except when the subfield is the whole field, and then the third component is an injective homomorphism “in the other direction.”</p>
          </section>
          <section class="subsection" id="Kts">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">23.7.4</span> <span class="title">Normal Extensions</span></div>
            <p id="LrU">Consider the third subgroup in the list above, generated by the permutation <code class="code-inline tex2jax_ignore">(1,4)</code>. As a subgroup of order <nemeth class="inline">⠼⠆</nemeth>, it only has one nontrivial element, which here corresponds to the seventh automorphism. We determine the fixed elements as before.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau = G[6]
tau_matrix = column_matrix([tau(be).vector() for be in basis])
(tau_matrix-identity_matrix(8)).right_kernel()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Vector space of degree 8 and dimension 4 over Rational Field
Basis matrix:
[    1     0     0     0     0     0     0     0]
[    0     1     0     0     0 -1/82     0     0]
[    0     0     1     0     0     0 -1/22     0]
[    0     0     0     1     0     0     0 11/58]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(1))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(c+(-1/82)*c^5))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-120/41*a
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(c^2+(-1/22)*c^6))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">150/11*a^2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">fromL(tau(c^3+(11/58)*c^7))
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3000/29*a^3
</div>
            </article>
            <p id="rzd">As usual, ignoring rational multiples, we see powers of <code class="code-inline tex2jax_ignore">a</code> and recognize that <code class="code-inline tex2jax_ignore">a</code> alone will be a primitive element for the fixed field, which is thus <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠾</nemeth>. Recognize that <code class="code-inline tex2jax_ignore">a</code> was our first root of <nemeth class="inline">⠭⠘⠲⠐⠤⠆</nemeth>, and was used to create the first part of original tower, <code class="code-inline tex2jax_ignore">N</code>. So <code class="code-inline tex2jax_ignore">N</code> is both <nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠾</nemeth> and the fixed field of <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠨⠷⠷⠼⠂⠠⠀⠼⠲⠾⠨⠨⠾</nemeth>.</p>
            <p id="XGm"><nemeth class="inline">⠸⠠⠟⠷⠣⠲⠜⠆⠻⠾</nemeth> contains at least one root of the irreducible <nemeth class="inline">⠭⠘⠲⠐⠤⠆</nemeth>, but not all of the roots (witness the factorization above) and therefore does not qualify as a normal extension. By part (4) of Theorem 23.2.10 the automorphism group of the extension is not normal in the full Galois group.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg[2].is_normal(P)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="DNv">As expected.</p>
          </section>
        </section>
        <section class="exercises" id="WHK">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">23.8</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="PNf">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Fon">In the analysis of Example 23.2.12 with Sage, two subgroups of order <nemeth class="inline">⠼⠆</nemeth> and one subgroup of order <nemeth class="inline">⠼⠲</nemeth> were not analyzed. Determine the fixed fields of these three subgroups.</p>
          </article>
          <article class="exercise exercise-like" id="vUo">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="lvw">Build the splitting field of <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒⠐⠤⠖⠭⠘⠆⠐⠬⠂⠆⠭⠤⠂⠴</nemeth> and then determine the Galois group of <nemeth class="inline">⠏⠷⠭⠾</nemeth> as a concrete group of explicit permutations. Build the lattice of subgroups of the Galois group, again using the same explicit permutations. Using the Fundamental Theorem of Galois Theory, construct the subfields of the splitting field. Include your supporting documentation in your submitted Sage worksheet. Also, submit a written component of this assignment containing a complete layout of the subgroups and subfields, written entirely with mathematical notation and with no Sage commands, designed to illustrate the correspondence between the two. All you need here is the graphical layout, suitably labeled — the Sage worksheet will substantiate your work.</p>
          </article>
          <article class="exercise exercise-like" id="cbx">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="RCF">The polynomial <nemeth class="inline">⠭⠘⠢⠐⠤⠭⠤⠂</nemeth> has all of the symmetric group <nemeth class="inline">⠠⠎⠢</nemeth> as its Galois group. Because <nemeth class="inline">⠠⠎⠢</nemeth> is not solvable, we know this polynomial to be an example of a quintic polynomial that is not solvable by radicals. Unfortunately, asking Sage to compute this Galois group takes far too long. So this exercise will simulate that experience with a slightly smaller example.</p>
            <p id="xJO">Consider the polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠲⠐⠬⠭⠬⠂</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="WtC">Build the splitting field of <nemeth class="inline">⠏⠷⠭⠾</nemeth> one root at a time. Create an extension, factor there, discard linear factors, use the remaining irreducible factor to extend once more. Repeat until <nemeth class="inline">⠏⠷⠭⠾</nemeth> factors completely. Be sure to do a final extension via just a linear factor. This is a little silly, and Sage will seem to ignore your final generator (so you will want to setermine what it is equivalent to in terms of the previous gfenerators). Directions below depend on taking this extra step.</p></li>
              <li>b. <p id="CAL">Factor the original polynomial over the final extension field in the tower. What is boring about this factorization in comparison to some other examples we have done?</p></li>
              <li>c. <p id="iHU">Construct the full tower as an absolute field over <nemeth class="inline">⠸⠠⠟</nemeth>. From the degree of this extension and the degree of the original polynomial, infer the Galois group of the polynomial.</p></li>
              <li>d. <p id="OPd">Using the mappings that allow you to translate between the tower and the absolute field (obtained from the <code class="code-inline tex2jax_ignore">.structure()</code> method), choose one of the roots (any one) and express it in terms of the single generator of the absolute field. Then reverse the procedure and express the single generator of the absolute field in terms of the roots in the tower.</p></li>
              <li>e. <p id="uWm">Compute the group of automorphisms of the absolute field (but don't display the whole group in what you submit). Take all four roots (including your silly one from the last step of the tower construction) and apply each field automorphism to the four roots (creating the guaranteed permutations of the roots). Comment on what you see.</p></li>
              <li>f. <p id="bdv">There is one nontrivial automorphism that has an especially simple form (it is the second one for me) when applied to the generator of the absolute field. What does this automorphism do to the roots of <nemeth class="inline">⠏⠷⠭⠾</nemeth>?</p></li>
              <li>g. <p id="HkE">Consider the extension of <nemeth class="inline">⠸⠠⠟</nemeth> formed by adjoining just one of the roots. This is a subfield of the splitting field of the polynomial, so is the fixed field of a subgroup of the Galois group. Give a simple description of the corresponding subgroup using language we typically only apply to permutation groups.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="IiG">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="dQX">Return to the splitting field of the quintic discussed in the introduction to the previous problem (<nemeth class="inline">⠭⠘⠢⠐⠤⠭⠤⠂</nemeth>). Create the first two intermediate fields by adjoining two roots (one at a time). But instead of factoring at each step to get a new irreducible polynomial, <em class="emphasis">divide</em> by the linear factor you <em class="emphasis">know</em> is a factor. In general, the quotient might factor further, but in this exercise presume it does not. In other words, act as if your quotient by the linear factor is irreducible. If it is not, then the <code class="code-inline tex2jax_ignore">NumberField()</code> command should complain (which it will not).</p>
            <p id="JYg">After adjoining two roots, create the extension producing a third root, and do the division. You should now have a quadratic factor. Assuming the quadratic is irreducible (it is) argue that you have enough evidence to establish the order of the Galois group, and hence can determine <em class="emphasis">exactly</em> which group it is.</p>
            <p id="qfp">You can try to use this quadratic factor to create one more step in the extensions, and you will arrive at the splitting field, as can be seen with logic or division. However, this could take a long time to complete (save your work beforehand!). You can try passing the <code class="code-inline tex2jax_ignore">check=False</code> argument to the <code class="code-inline tex2jax_ignore">NumberField()</code> command — this will bypass checking irreducibility.</p>
          </article>
          <article class="exercise exercise-like" id="opP">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Wmy">Create the finite field of order <nemeth class="inline">⠼⠒⠘⠖</nemeth>, letting Sage supply the default polynomial for its construction. The polynomial <nemeth class="inline">⠭⠘⠖⠐⠬⠭⠘⠆⠐⠬⠆⠭⠬⠂</nemeth> is irreducible over this finite field. Check that this polynomial splits in the finite field, and then use the <code class="code-inline tex2jax_ignore">.roots()</code> method to collect the roots of the polynomial. Get the group of automorphisms of the field with the <code class="code-inline tex2jax_ignore">End()</code> command.</p>
            <p id="CtH">You now have all of the pieces to associate each field automorphism with a permutation of the roots. From this, identify the Galois group and all of its subgroups. For each subgroup, determine the fixed field. You might find the roots easier to work with if you use the <code class="code-inline tex2jax_ignore">.log()</code> method to identify them as powers of the field's multiplicative generator.</p>
            <p id="iAQ">Your Galois group in this example will be abelian. So every subgroup is normal, and hence any extension is also normal. Can you extend this example by choosing a nontrivial intermediate field with a nontrivial irreducible polynomial that has all of its roots in the intermediate field and a nontrivial irreducible polynomial with none of its roots in the intermediate field?</p>
            <p id="OHZ">Your results here are “typical” in the sense that the particular field or irreducible polynomial makes little difference in the qualitative nature of the results.</p>
          </article>
          <article class="exercise exercise-like" id="UwY">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="uPi">The splitting field for the irreducible polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠭⠘⠶⠐⠤⠶⠭⠬⠒</nemeth> has degree 168 (hence this is the order of the Galois group). This polynomial is derived from an “Elkies trinomial curve,” a hyperelliptic curve (below) that produces polynomials with interesting Galois groups:</p>
            <div class="displaymath">
              <nemeth>⠽⠘⠆⠐⠀⠨⠅⠀⠭⠷⠦⠂⠭⠘⠢⠐⠬⠒⠔⠖⠭⠘⠲⠐⠬⠶⠒⠦⠭⠘⠒⠐⠬⠖⠖⠴⠭⠘⠆⠐⠬⠆⠖⠔⠭⠬⠲⠦⠾</nemeth>
            </div>
            <p id="aWr">For <nemeth class="inline">⠏⠷⠭⠾</nemeth> the resulting Galois group is <nemeth class="inline">⠠⠏⠠⠎⠠⠇⠷⠼⠆⠠⠀⠼⠶⠾</nemeth>, a simple group. If <nemeth class="inline">⠠⠎⠠⠇⠷⠼⠆⠠⠀⠼⠶⠾</nemeth> is all <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices over <nemeth class="inline">⠸⠠⠵⠶</nemeth> with determinant 1, then <nemeth class="inline">⠠⠏⠠⠎⠠⠇⠷⠼⠆⠠⠀⠼⠶⠾</nemeth> is the quotient by the subgroup <nemeth class="inline">⠨⠷⠠⠊⠆⠠⠀⠤⠠⠊⠆⠨⠾</nemeth>. It is the second-smallest non-abelian simple group (after <nemeth class="inline">⠠⠁⠢</nemeth>).</p>
            <p id="HdA">See how far you can get in using Sage to build this splitting field. A degree <nemeth class="inline">⠼⠶</nemeth> extension will yield one linear factor, and a subsequent degree <nemeth class="inline">⠼⠖</nemeth> extension will yield two linear factors, leaving a quartic factor. Here is where the computations begin to slow down. If we believe that the splitting field has degree <nemeth class="inline">⠼⠂⠖⠦</nemeth>, then we know that adding a root from this degree 4 factor will get us to the splitting field. Creating this extension may be possible computationally, but verifying that the quartic splits into linear factors here seems to be infeasible.</p>
          </article>
          <article class="exercise exercise-like" id="AEh">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="nkJ">Return to Example 23.2.12, and the complete list of subfields obtainable from the <code class="code-inline tex2jax_ignore">.subfields()</code> method applied to the flattened tower. As mentioned, these are technically not subfields, but do have embeddings into the tower. Given two subfields, their respective primitive elements are embedded into the tower, with an image that is a linear combination of powers of the primitive element for the tower.</p>
            <p id="TrS">If one subfield is contained in the other, then the image of the primitive element for the smaller field should be a linear combination of the (appropriate) powers of the image of the primitive element for the larger field. This is a linear algebra computation that should be possible in the tower, relative to the power basis for the whole tower.</p>
            <p id="zzb">Write a procedure to determine if two subfields are related by one being a subset of the other. Then use this procedure to create the lattice of subfields. The eventual goal would be a graphical display of the lattice, using the existing plotting facilities available for lattices, similar to the top half of Figure 23.2.13. This is a “challenging” exercise, which is code for “it is speculative and has not been tested.”</p>
          </article>
        </section>
      </section>
      <section class="appendix" id="gAi">
        <div class="none"><span class="type">Appendix</span> <span class="codenumber">A</span> <span class="title">GNU Free Documentation License</span></div>
        <section class="introduction" id="GSf">
          <p id="buQ">Version 1.3, 3 November 2008</p>
          <p id="HBZ">Copyright © 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc. &lt;<a class="external" href="http://www.fsf.org/" target="_blank"><code class="code-inline tex2jax_ignore">http://www.fsf.org/</code></a>&gt;</p>
          <p id="nJi">Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p>
        </section>
        <article class="paragraphs" id="sOA">
          <h5 class="heading">
            <span class="title">0. PREAMBLE.</span>
          </h5>
          <p id="zXA">The purpose of this License is to make a manual, textbook, or other functional and useful document “free” in the sense of freedom: to assure everyone the effective freedom to copy and redistribute it, with or without modifying it, either commercially or noncommercially. Secondarily, this License preserves for the author and publisher a way to get credit for their work, while not being considered responsible for modifications made by others.</p>
          <p id="geJ">This License is a kind of “copyleft”, which means that derivative works of the document must themselves be free in the same sense. It complements the GNU General Public License, which is a copyleft license designed for free software.</p>
          <p id="MlS">We have designed this License in order to use it for manuals for free software, because free software needs free documentation: a free program should come with manuals providing the same freedoms that the software does. But this License is not limited to software manuals; it can be used for any textual work, regardless of subject matter or whether it is published as a printed book. We recommend this License principally for works whose purpose is instruction or reference.</p>
        </article>
        <article class="paragraphs" id="YVJ">
          <h5 class="heading">
            <span class="title">1. APPLICABILITY AND DEFINITIONS.</span>
          </h5>
          <p id="stb">This License applies to any manual or other work, in any medium, that contains a notice placed by the copyright holder saying it can be distributed under the terms of this License. Such a notice grants a world-wide, royalty-free license, unlimited in duration, to use that work under the conditions stated herein. The “Document”, below, refers to any such manual or work. Any member of the public is a licensee, and is addressed as “you”. You accept the license if you copy, modify or distribute the work in a way requiring permission under copyright law.</p>
          <p id="YAk">A “Modified Version” of the Document means any work containing the Document or a portion of it, either copied verbatim, or with modifications and/or translated into another language.</p>
          <p id="EHt">A “Secondary Section” is a named appendix or a front-matter section of the Document that deals exclusively with the relationship of the publishers or authors of the Document to the Document's overall subject (or to related matters) and contains nothing that could fall directly within that overall subject. (Thus, if the Document is in part a textbook of mathematics, a Secondary Section may not explain any mathematics.) The relationship could be a matter of historical connection with the subject or with related matters, or of legal, commercial, philosophical, ethical or political position regarding them.</p>
          <p id="kOC">The “Invariant Sections” are certain Secondary Sections whose titles are designated, as being those of Invariant Sections, in the notice that says that the Document is released under this License. If a section does not fit the above definition of Secondary then it is not allowed to be designated as Invariant. The Document may contain zero Invariant Sections. If the Document does not identify any Invariant Sections then there are none.</p>
          <p id="QVL">The “Cover Texts” are certain short passages of text that are listed, as Front-Cover Texts or Back-Cover Texts, in the notice that says that the Document is released under this License. A Front-Cover Text may be at most 5 words, and a Back-Cover Text may be at most 25 words.</p>
          <p id="xcU">A “Transparent” copy of the Document means a machine-readable copy, represented in a format whose specification is available to the general public, that is suitable for revising the document straightforwardly with generic text editors or (for images composed of pixels) generic paint programs or (for drawings) some widely available drawing editor, and that is suitable for input to text formatters or for automatic translation to a variety of formats suitable for input to text formatters. A copy made in an otherwise Transparent file format whose markup, or absence of markup, has been arranged to thwart or discourage subsequent modification by readers is not Transparent. An image format is not Transparent if used for any substantial amount of text. A copy that is not “Transparent” is called “Opaque”.</p>
          <p id="dkd">Examples of suitable formats for Transparent copies include plain ASCII without markup, Texinfo input format, LaTeX input format, SGML or XML using a publicly available DTD, and standard-conforming simple HTML, PostScript or PDF designed for human modification. Examples of transparent image formats include PNG, XCF and JPG. Opaque formats include proprietary formats that can be read and edited only by proprietary word processors, SGML or XML for which the DTD and/or processing tools are not generally available, and the machine-generated HTML, PostScript or PDF produced by some word processors for output purposes only.</p>
          <p id="Jrm">The “Title Page” means, for a printed book, the title page itself, plus such following pages as are needed to hold, legibly, the material this License requires to appear in the title page. For works in formats which do not have any title page as such, “Title Page” means the text near the most prominent appearance of the work's title, preceding the beginning of the body of the text.</p>
          <p id="pyv">The “publisher” means any person or entity that distributes copies of the Document to the public.</p>
          <p id="VFE">A section “Entitled XYZ” means a named subunit of the Document whose title either is precisely XYZ or contains XYZ in parentheses following text that translates XYZ in another language. (Here XYZ stands for a specific section name mentioned below, such as “Acknowledgements”, “Dedications”, “Endorsements”, or “History”.) To “Preserve the Title” of such a section when you modify the Document means that it remains a section “Entitled XYZ” according to this definition.</p>
          <p id="BMN">The Document may include Warranty Disclaimers next to the notice which states that this License applies to the Document. These Warranty Disclaimers are considered to be included by reference in this License, but only as regards disclaiming warranties: any other implication that these Warranty Disclaimers may have is void and has no effect on the meaning of this License.</p>
        </article>
        <article class="paragraphs" id="FcS">
          <h5 class="heading">
            <span class="title">2. VERBATIM COPYING.</span>
          </h5>
          <p id="hTW">You may copy and distribute the Document in any medium, either commercially or noncommercially, provided that this License, the copyright notices, and the license notice saying this License applies to the Document are reproduced in all copies, and that you add no other conditions whatsoever to those of this License. You may not use technical measures to obstruct or control the reading or further copying of the copies you make or distribute. However, you may accept compensation in exchange for copies. If you distribute a large enough number of copies you must also follow the conditions in section 3.</p>
          <p id="Obf">You may also lend copies, under the same conditions stated above, and you may publicly display copies.</p>
        </article>
        <article class="paragraphs" id="lkb">
          <h5 class="heading">
            <span class="title">3. COPYING IN QUANTITY.</span>
          </h5>
          <p id="uio">If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document's license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects.</p>
          <p id="apx">If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages.</p>
          <p id="GwG">If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public.</p>
          <p id="mDP">It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document.</p>
        </article>
        <article class="paragraphs" id="Rrk">
          <h5 class="heading">
            <span class="title">4. MODIFICATIONS.</span>
          </h5>
          <p id="SKY">You may copy and distribute a Modified Version of the Document under the conditions of sections 2 and 3 above, provided that you release the Modified Version under precisely this License, with the Modified Version filling the role of the Document, thus licensing distribution and modification of the Modified Version to whoever possesses a copy of it. In addition, you must do these things in the Modified Version:</p>
          <ol class="outerlist">
            <li>A. <p id="Nrl">Use in the Title Page (and on the covers, if any) a title distinct from that of the Document, and from those of previous versions (which should, if there were any, be listed in the History section of the Document). You may use the same title as a previous version if the original publisher of that version gives permission.</p></li>
            <li>B. <p id="tyu">List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement.</p></li>
            <li>C. <p id="ZFD">State on the Title page the name of the publisher of the Modified Version, as the publisher.</p></li>
            <li>D. <p id="FMM">Preserve all the copyright notices of the Document.</p></li>
            <li>E. <p id="lTV">Add an appropriate copyright notice for your modifications adjacent to the other copyright notices.</p></li>
            <li>F. <p id="Sbe">Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below.</p></li>
            <li>G. <p id="yin">Preserve in that license notice the full lists of Invariant Sections and required Cover Texts given in the Document's license notice.</p></li>
            <li>H. <p id="epw">Include an unaltered copy of this License.</p></li>
            <li>I. <p id="KwF">Preserve the section Entitled “History”, Preserve its Title, and add to it an item stating at least the title, year, new authors, and publisher of the Modified Version as given on the Title Page. If there is no section Entitled “History” in the Document, create one stating the title, year, authors, and publisher of the Document as given on its Title Page, then add an item describing the Modified Version as stated in the previous sentence.</p></li>
            <li>J. <p id="qDO">Preserve the network location, if any, given in the Document for public access to a Transparent copy of the Document, and likewise the network locations given in the Document for previous versions it was based on. These may be placed in the “History” section. You may omit a network location for a work that was published at least four years before the Document itself, or if the original publisher of the version it refers to gives permission.</p></li>
            <li>K. <p id="WKX">For any section Entitled “Acknowledgements” or “Dedications”, Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein.</p></li>
            <li>L. <p id="CSg">Preserve all the Invariant Sections of the Document, unaltered in their text and in their titles. Section numbers or the equivalent are not considered part of the section titles.</p></li>
            <li>M. <p id="iZp">Delete any section Entitled “Endorsements”. Such a section may not be included in the Modified Version.</p></li>
            <li>N. <p id="Pgy">Do not retitle any existing section to be Entitled “Endorsements” or to conflict in title with any Invariant Section.</p></li>
            <li>O. <p id="vnH">Preserve any Warranty Disclaimers.</p></li>
          </ol>
          <p id="ySh">If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version's license notice. These titles must be distinct from any other section titles.</p>
          <p id="eZq">You may add a section Entitled “Endorsements”, provided it contains nothing but endorsements of your Modified Version by various parties — for example, statements of peer review or that the text has been approved by an organization as the authoritative definition of a standard.</p>
          <p id="Lgz">You may add a passage of up to five words as a Front-Cover Text, and a passage of up to 25 words as a Back-Cover Text, to the end of the list of Cover Texts in the Modified Version. Only one passage of Front-Cover Text and one of Back-Cover Text may be added by (or through arrangements made by) any one entity. If the Document already includes a cover text for the same cover, previously added by you or by arrangement made by the same entity you are acting on behalf of, you may not add another; but you may replace the old one, on explicit permission from the previous publisher that added the old one.</p>
          <p id="rnI">The author(s) and publisher(s) of the Document do not by this License give permission to use their names for publicity for or to assert or imply endorsement of any Modified Version.</p>
        </article>
        <article class="paragraphs" id="xyt">
          <h5 class="heading">
            <span class="title">5. COMBINING DOCUMENTS.</span>
          </h5>
          <p id="XuR">You may combine the Document with other documents released under this License, under the terms defined in section 4 above for modified versions, provided that you include in the combination all of the Invariant Sections of all of the original documents, unmodified, and list them all as Invariant Sections of your combined work in its license notice, and that you preserve all their Warranty Disclaimers.</p>
          <p id="DCa">The combined work need only contain one copy of this License, and multiple identical Invariant Sections may be replaced with a single copy. If there are multiple Invariant Sections with the same name but different contents, make the title of each such section unique by adding at the end of it, in parentheses, the name of the original author or publisher of that section if known, or else a unique number. Make the same adjustment to the section titles in the list of Invariant Sections in the license notice of the combined work.</p>
          <p id="jJj">In the combination, you must combine any sections Entitled “History” in the various original documents, forming one section Entitled “History”; likewise combine any sections Entitled “Acknowledgements”, and any sections Entitled “Dedications”. You must delete all sections Entitled “Endorsements”.</p>
        </article>
        <article class="paragraphs" id="dFC">
          <h5 class="heading">
            <span class="title">6. COLLECTIONS OF DOCUMENTS.</span>
          </h5>
          <p id="PQs">You may make a collection consisting of the Document and other documents released under this License, and replace the individual copies of this License in the various documents with a single copy that is included in the collection, provided that you follow the rules of this License for verbatim copying of each of the documents in all other respects.</p>
          <p id="vXB">You may extract a single document from such a collection, and distribute it individually under this License, provided you insert a copy of this License into the extracted document, and follow this License in all other respects regarding verbatim copying of that document.</p>
        </article>
        <article class="paragraphs" id="JML">
          <h5 class="heading">
            <span class="title">7. AGGREGATION WITH INDEPENDENT WORKS.</span>
          </h5>
          <p id="ceK">A compilation of the Document or its derivatives with other separate and independent documents or works, in or on a volume of a storage or distribution medium, is called an “aggregate” if the copyright resulting from the compilation is not used to limit the legal rights of the compilation's users beyond what the individual works permit. When the Document is included in an aggregate, this License does not apply to the other works in the aggregate which are not themselves derivative works of the Document.</p>
          <p id="IlT">If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document's Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate.</p>
        </article>
        <article class="paragraphs" id="pTU">
          <h5 class="heading">
            <span class="title">8. TRANSLATION.</span>
          </h5>
          <p id="otc">Translation is considered a kind of modification, so you may distribute translations of the Document under the terms of section 4. Replacing Invariant Sections with translations requires special permission from their copyright holders, but you may include translations of some or all Invariant Sections in addition to the original versions of these Invariant Sections. You may include a translation of this License, and all the license notices in the Document, and any Warranty Disclaimers, provided that you also include the original English version of this License and the original versions of those notices and disclaimers. In case of a disagreement between the translation and the original version of this License or a notice or disclaimer, the original version will prevail.</p>
          <p id="UAl">If a section in the Document is Entitled “Acknowledgements”, “Dedications”, or “History”, the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title.</p>
        </article>
        <article class="paragraphs" id="Wbd">
          <h5 class="heading">
            <span class="title">9. TERMINATION.</span>
          </h5>
          <p id="AHu">You may not copy, modify, sublicense, or distribute the Document except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, or distribute it is void, and will automatically terminate your rights under this License.</p>
          <p id="MVM">However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p>
          <p id="tcV">Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p>
          <p id="Zke">Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, receipt of a copy of some or all of the same material does not give you any rights to use it.</p>
        </article>
        <article class="paragraphs" id="Cim">
          <h5 class="heading">
            <span class="title">10. FUTURE REVISIONS OF THIS LICENSE.</span>
          </h5>
          <p id="Frn">The Free Software Foundation may publish new, revised versions of the GNU Free Documentation License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. See <a class="external" href="http://www.gnu.org/copyleft/" target="_blank"><code class="code-inline tex2jax_ignore">http://www.gnu.org/copyleft/</code></a>.</p>
          <p id="lyw">Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License “or any later version” applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Document.</p>
        </article>
        <article class="paragraphs" id="ipv">
          <h5 class="heading">
            <span class="title">11. RELICENSING.</span>
          </h5>
          <p id="RFF">“Massive Multiauthor Collaboration Site” (or “MMC Site”) means any World Wide Web server that publishes copyrightable works and also provides prominent facilities for anybody to edit those works. A public wiki that anybody can edit is an example of such a server. A “Massive Multiauthor Collaboration” (or “MMC”) contained in the site means any set of copyrightable works thus published on the MMC site.</p>
          <p id="xMO">“CC-BY-SA” means the Creative Commons Attribution-Share Alike 3.0 license published by Creative Commons Corporation, a not-for-profit corporation with a principal place of business in San Francisco, California, as well as future copyleft versions of that license published by that same organization.</p>
          <p id="dTX">“Incorporate” means to publish or republish a Document, in whole or in part, as part of another Document.</p>
          <p id="Kbg">An MMC is “eligible for relicensing” if it is licensed under this License, and if all works that were first published under this License somewhere other than this MMC, and subsequently incorporated in whole or in part into the MMC, (1) had no cover texts or invariant sections, and (2) were thus incorporated prior to November 1, 2008.</p>
          <p id="qip">The operator of an MMC Site may republish an MMC contained in the site under CC-BY-SA on the same site at any time before August 1, 2009, provided the MMC is eligible for relicensing.</p>
        </article>
        <article class="paragraphs" id="OwE">
          <h5 class="heading">
            <span class="title">ADDENDUM: How to use this License for your documents.</span>
          </h5>
          <p id="Wpy">To use this License in a document you have written, include a copy of the License in the document and put the following copyright and license notices just after the title page:</p>
          <pre class="code-block tex2jax_ignore">Copyright (C)  YEAR  YOUR NAME.
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license is included in the section entitled "GNU
Free Documentation License".
</pre>
          <p id="CwH">If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace the “with… Texts.” line with this:</p>
          <pre class="code-block tex2jax_ignore">with the Invariant Sections being LIST THEIR TITLES, with the
Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.
</pre>
          <p id="iDQ">If you have Invariant Sections without Cover Texts, or some other combination of the three, merge those two alternatives to suit the situation.</p>
          <p id="OKZ">If your document contains nontrivial examples of program code, we recommend releasing these examples in parallel under your choice of free software license, such as the GNU General Public License, to permit their use in free software.</p>
        </article>
      </section>
      <section class="solutions" id="aKW">
        <div class="centerpage">
          <span class="title">Hints and Answers to Selected Exercises</span>
        </div>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">1</span> <span class="title">Preliminaries</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">1.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠨⠷⠼⠆⠨⠾</nemeth>; (b) <nemeth class="inline">⠠⠃⠨⠩⠠⠉⠀⠨⠅⠀⠨⠷⠼⠢⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠠⠁⠈⠡⠠⠃⠀⠨⠅⠀⠨⠷⠷⠁⠠⠀⠼⠂⠾⠠⠀⠷⠁⠠⠀⠼⠆⠾⠠⠀⠷⠁⠠⠀⠼⠒⠾⠠⠀⠷⠃⠠⠀⠼⠂⠾⠠⠀⠷⠃⠠⠀⠼⠆⠾⠠⠀⠷⠃⠠⠀⠼⠒⠾⠠⠀⠷⠉⠠⠀⠼⠂⠾⠠⠀⠷⠉⠠⠀⠼⠆⠾⠠⠀⠷⠉⠠⠀⠼⠒⠾⠨⠾</nemeth>; (d) <nemeth class="inline">⠠⠁⠈⠡⠠⠙⠀⠨⠅⠀⠸⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.6<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth>, then either <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth> or <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠃⠨⠩⠠⠉</nemeth>. Thus, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth> and <nemeth class="inline">⠠⠁⠨⠬⠠⠉</nemeth>. Hence, <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>. Therefore, <nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠸⠐⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>. Conversely, if <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>, then <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth> and <nemeth class="inline">⠠⠁⠨⠬⠠⠉</nemeth>. Thus, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth> or <i class="one-letter">x</i> is in both <i class="one-letter">B</i> and <i class="one-letter">C</i>. So <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth> and therefore <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾⠀⠸⠐⠅⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth>. Hence, <nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.10<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠬⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠨⠩⠠⠃⠘⠄⠐⠾⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠈⠷⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠃⠘⠄⠐⠾⠈⠾⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠠⠁⠨⠬⠠⠃</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.14<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾⠘⠄⠐⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠁⠾⠨⠩⠷⠠⠃⠘⠄⠐⠨⠩⠠⠉⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠘⠄⠐⠾⠨⠩⠷⠠⠁⠨⠩⠠⠉⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠉⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Not a map since <nemeth class="inline">⠋⠷⠆⠸⠌⠒⠾</nemeth> is undefined; (b) this is a map; (c) not a map, since <nemeth class="inline">⠋⠷⠂⠸⠌⠆⠾⠀⠨⠅⠀⠼⠒⠸⠌⠲</nemeth> but <nemeth class="inline">⠋⠷⠆⠸⠌⠲⠾⠀⠨⠅⠀⠼⠒⠸⠌⠦</nemeth>; (d) this is a map.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.18<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <i class="one-letter">f</i> is one-to-one but not onto. <nemeth class="inline">⠋⠷⠸⠠⠗⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠭⠀⠨⠂⠀⠼⠴⠨⠾</nemeth>. (c) <i class="one-letter">f</i> is neither one-to-one nor onto. <nemeth class="inline">⠋⠷⠸⠠⠗⠾⠀⠨⠅⠀⠨⠷⠭⠒⠀⠤⠼⠂⠀⠐⠅⠱⠀⠭⠀⠐⠅⠱⠀⠼⠂⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.20<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠝⠬⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.22<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Let <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠁</nemeth>. Then <nemeth class="inline">⠛⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠽⠾⠀⠨⠅⠀⠛⠷⠋⠷⠽⠾⠾</nemeth>. Thus, <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠋⠷⠽⠾</nemeth> and <nemeth class="inline">⠭⠀⠨⠅⠀⠽</nemeth>, so <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one. (b) Let <nemeth class="inline">⠉⠀⠈⠑⠀⠠⠉</nemeth>, then <nemeth class="inline">⠉⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾</nemeth> for some <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth>. Since <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠃</nemeth>, <i class="one-letter">g</i> is onto.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.23<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠭⠾⠀⠨⠅⠀⠷⠭⠬⠂⠾⠸⠌⠷⠭⠤⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.24<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Let <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾</nemeth>. Then there exists an <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠂⠨⠬⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Hence, <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾</nemeth> or <nemeth class="inline">⠋⠷⠠⠁⠆⠾</nemeth>. Therefore, <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>. Consequently, <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾⠀⠸⠐⠅⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>. Conversely, if <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>, then <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾</nemeth> or <nemeth class="inline">⠋⠷⠠⠁⠆⠾</nemeth>. Hence, there exists an <i class="one-letter">x</i> in <nemeth class="inline">⠠⠁⠂</nemeth> or <nemeth class="inline">⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Thus, there exists an <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠂⠨⠬⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Therefore, <nemeth class="inline">⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾⠀⠸⠐⠅⠀⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾</nemeth>, and <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾⠀⠨⠅⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.25<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) The relation fails to be symmetric. (b) The relation is not reflexive, since <nemeth class="inline">⠼⠴</nemeth> is not equivalent to itself. (c) The relation is not transitive.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">1.4.28<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠸⠠⠝⠨⠬⠨⠷⠜⠆⠻⠨⠾</nemeth> and define <nemeth class="inline">⠭⠈⠱⠽</nemeth> if <nemeth class="inline">⠭⠬⠽⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">2</span> <span class="title">The Integers</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">2.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The base case, <nemeth class="inline">⠠⠎⠷⠼⠂⠾⠒⠀⠈⠷⠼⠂⠷⠂⠬⠂⠾⠷⠆⠷⠂⠾⠬⠂⠾⠈⠾⠸⠌⠖⠀⠨⠅⠀⠼⠂⠀⠨⠅⠀⠼⠂⠘⠆</nemeth> is true. Assume that <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠼⠂⠘⠆⠐⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠅⠘⠆⠐⠀⠨⠅⠀⠈⠷⠅⠷⠅⠬⠂⠾⠷⠆⠅⠬⠂⠾⠈⠾⠸⠌⠖</nemeth> is true. Then</p><div class="displaymath"><nemeth>⠼⠂⠘⠆⠐⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠅⠘⠆⠐⠬⠷⠅⠬⠂⠾⠘⠆⠀⠀⠨⠅⠀⠈⠷⠅⠷⠅⠬⠂⠾⠷⠆⠅⠬⠂⠾⠈⠾⠸⠌⠖⠬⠷⠅⠬⠂⠾⠘⠆⠐⠀⠀⠀⠀⠨⠅⠀⠈⠷⠷⠅⠬⠂⠾⠷⠷⠅⠬⠂⠾⠬⠂⠾⠷⠆⠷⠅⠬⠂⠾⠬⠂⠾⠈⠾⠸⠌⠖</nemeth></div><p data-braille="continuation">, and so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Thus, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The base case, <nemeth class="inline">⠠⠎⠷⠼⠲⠾⠒⠀⠼⠲⠖⠀⠀⠨⠅⠀⠼⠆⠲⠀⠨⠂⠀⠼⠂⠖⠀⠨⠅⠀⠼⠆⠘⠲</nemeth> is true. Assume <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠅⠖⠀⠀⠨⠂⠀⠼⠆⠘⠅</nemeth> is true. Then <nemeth class="inline">⠷⠅⠬⠂⠾⠖⠀⠀⠨⠅⠀⠅⠖⠀⠷⠅⠬⠂⠾⠀⠨⠂⠀⠼⠆⠘⠅⠐⠡⠆⠀⠨⠅⠀⠼⠆⠘⠅⠬⠂</nemeth>, so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Thus, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Follow the proof in Example 2.1.4.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.11<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The base case, <nemeth class="inline">⠠⠎⠷⠼⠴⠾⠒⠀⠷⠼⠂⠬⠭⠾⠘⠴⠐⠤⠂⠀⠨⠅⠀⠼⠴⠀⠨⠂⠱⠀⠼⠴⠀⠨⠅⠀⠼⠴⠡⠭</nemeth> is true. Assume <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠷⠼⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠨⠂⠱⠀⠅⠭</nemeth> is true. Then</p><div class="displaymath"><nemeth>⠷⠼⠂⠬⠭⠾⠘⠅⠬⠂⠐⠤⠂⠀⠀⠨⠅⠀⠷⠼⠂⠬⠭⠾⠷⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠀⠀⠀⠨⠅⠀⠷⠼⠂⠬⠭⠾⠘⠅⠐⠬⠭⠷⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠀⠀⠀⠨⠂⠱⠀⠅⠭⠬⠭⠷⠂⠬⠭⠾⠘⠅⠐⠀⠀⠀⠀⠨⠂⠱⠀⠅⠭⠬⠭⠀⠀⠀⠀⠨⠅⠀⠷⠅⠬⠂⠾⠭</nemeth></div><p data-braille="continuation">, so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Therefore, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.17<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Fibonacci Numbers.</span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>For (a) and (b) use mathematical induction. (c) Show that <nemeth class="inline">⠋⠂⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠋⠆⠀⠨⠅⠀⠼⠂</nemeth>, and <nemeth class="inline">⠋⠰⠝⠬⠆⠐⠀⠨⠅⠀⠋⠰⠝⠬⠂⠐⠬⠋⠰⠝</nemeth>. (d) Use part (c). (e) Use part (b) and Exercise 2.4.16.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.19<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Use the Fundamental Theorem of Arithmetic.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.23<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Use the Principle of Well-Ordering and the division algorithm.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.27<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Since <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>, there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>. Thus, <nemeth class="inline">⠁⠉⠗⠬⠃⠉⠎⠀⠨⠅⠀⠉</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">2.4.29<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Every prime must be of the form <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠖⠝⠬⠂</nemeth>, or <nemeth class="inline">⠼⠖⠝⠬⠢</nemeth>. Suppose there are only finitely many primes of the form <nemeth class="inline">⠼⠖⠅⠬⠢</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">3</span> <span class="title">Groups</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">3.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠒⠬⠶⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠲⠠⠀⠼⠒⠠⠀⠼⠂⠴⠠⠀⠄⠄⠄⠨⠾</nemeth>; (c) <nemeth class="inline">⠼⠂⠦⠬⠆⠖⠸⠠⠵</nemeth>; (e) <nemeth class="inline">⠼⠢⠬⠖⠸⠠⠵</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Not a group; (c) a group.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.6<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<div class="displaymath"><nemeth>⠡⠀⠂⠀⠢⠀⠶⠀⠂⠂⠀⠂⠀⠂⠀⠢⠀⠶⠀⠂⠂⠀⠢⠀⠢⠀⠂⠀⠂⠂⠀⠶⠀⠶⠀⠶⠀⠂⠂⠀⠂⠀⠢⠀⠂⠂⠀⠂⠂⠀⠶⠀⠢⠀⠂</nemeth></div></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Pick two matrices. Almost any pair will work.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.15<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>There is a nonabelian group containing six elements.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.16<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Look at the symmetry group of an equilateral triangle or a square.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The are five different groups of order 8.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.18<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let</p><div class="displaymath"><nemeth>⠨⠎⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠄⠄⠄⠀⠝⠠⠾⠀⠠⠷⠁⠂⠀⠁⠆⠀⠄⠄⠄⠀⠁⠰⠝⠠⠾</nemeth></div><p data-braille="continuation">be in <nemeth class="inline">⠠⠎⠰⠝</nemeth>. All of the <nemeth class="inline">⠁⠰⠊</nemeth>s must be distinct. There are <i class="one-letter">n</i> ways to choose <nemeth class="inline">⠁⠂</nemeth>, <nemeth class="inline">⠝⠤⠂</nemeth> ways to choose <nemeth class="inline">⠁⠆⠠⠀⠄⠄⠄</nemeth>, 2 ways to choose <nemeth class="inline">⠁⠰⠝⠤⠂</nemeth>, and only one way to choose <nemeth class="inline">⠁⠰⠝</nemeth>. Therefore, we can form <nemeth class="inline">⠨⠎</nemeth> in <nemeth class="inline">⠝⠷⠝⠤⠂⠾⠀⠄⠄⠄⠀⠼⠆⠡⠂⠀⠨⠅⠀⠝⠯</nemeth> ways.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.25<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<div class="displaymath"><nemeth>⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠘⠝⠀⠀⠨⠅⠀⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠀⠄⠄⠄⠀⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠀⠄⠄⠄⠀⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠁⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠁⠃⠘⠝⠐⠁⠘⠤⠼⠂</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.31<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Since <nemeth class="inline">⠁⠃⠁⠃⠀⠨⠅⠀⠷⠁⠃⠾⠘⠆⠐⠀⠨⠅⠀⠑⠀⠨⠅⠀⠁⠘⠆⠐⠃⠘⠆⠐⠀⠨⠅⠀⠁⠁⠃⠃</nemeth>, we know that <nemeth class="inline">⠃⠁⠀⠨⠅⠀⠁⠃</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.35<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠠⠓⠂⠀⠨⠅⠀⠨⠷⠊⠙⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠆⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠗⠂⠠⠀⠨⠗⠆⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠒⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠂⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠲⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠆⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠢⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠎⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.41<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The identity of <i class="one-letter">G</i> is <nemeth class="inline">⠼⠂⠀⠨⠅⠀⠼⠂⠬⠴⠜⠆⠻</nemeth>. Since <nemeth class="inline">⠷⠁⠬⠃⠜⠆⠻⠾⠷⠉⠬⠙⠜⠆⠻⠾⠀⠨⠅⠀⠷⠁⠉⠬⠆⠃⠙⠾⠬⠷⠁⠙⠬⠃⠉⠾⠜⠆⠻</nemeth>, <i class="one-letter">G</i> is closed under multiplication. Finally, <nemeth class="inline">⠷⠁⠬⠃⠜⠆⠻⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠸⠌⠷⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠾⠤⠃⠜⠆⠻⠸⠌⠷⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.46<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Look at <nemeth class="inline">⠠⠎⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">3.5.49<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠃⠁⠀⠨⠅⠀⠁⠘⠲⠐⠃⠀⠨⠅⠀⠁⠘⠒⠐⠁⠃⠀⠨⠅⠀⠁⠃</nemeth></p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">4</span> <span class="title">Cyclic Groups</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">4.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) False; (c) false; (e) true.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠂⠆</nemeth>; (c) infinite; (e) <nemeth class="inline">⠼⠂⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠶⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠶⠠⠀⠼⠴⠠⠀⠼⠶⠠⠀⠼⠂⠲⠠⠀⠄⠄⠄⠨⠾</nemeth>; (b) <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠠⠀⠼⠂⠆⠠⠀⠼⠂⠢⠠⠀⠼⠂⠦⠠⠀⠼⠆⠂⠨⠾</nemeth>; (c) <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠖⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠲⠠⠀⠼⠦⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠴⠨⠾</nemeth>; (g) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠶⠠⠀⠼⠔⠨⠾</nemeth>; (j) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠤⠼⠂⠠⠀⠊⠠⠀⠤⠊⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a)</p><div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾</nemeth></div><p data-braille="continuation">.</p><p>(c)</p><div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠤⠼⠂⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.10<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠴</nemeth>; (b) <nemeth class="inline">⠼⠂⠠⠀⠤⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.11<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠆⠠⠀⠼⠆⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.15<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠤⠼⠒⠬⠒⠊</nemeth>; (c) <nemeth class="inline">⠼⠲⠒⠤⠂⠦⠊</nemeth>; (e) <i class="one-letter">i</i></p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.16<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠜⠒⠻⠬⠊</nemeth>; (c) <nemeth class="inline">⠤⠼⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠜⠆⠻⠉⠊⠎⠷⠼⠶⠨⠏⠸⠌⠲⠾</nemeth>; (c) <nemeth class="inline">⠼⠆⠜⠆⠻⠉⠊⠎⠷⠨⠏⠸⠌⠲⠾</nemeth>; (e) <nemeth class="inline">⠼⠒⠉⠊⠎⠷⠼⠒⠨⠏⠸⠌⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.18<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠷⠼⠂⠤⠊⠾⠸⠌⠆</nemeth>; (c) <nemeth class="inline">⠼⠂⠖⠷⠊⠤⠜⠒⠻⠾</nemeth>; (e) <nemeth class="inline">⠤⠼⠂⠸⠌⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.22<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠆⠔⠆</nemeth>; (c) <nemeth class="inline">⠼⠂⠢⠆⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.27<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠳⠨⠨⠷⠛⠨⠨⠾⠨⠩⠨⠨⠷⠓⠨⠨⠾⠳⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.31<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The identity element in any group has finite order. Let <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠛</nemeth> have orders <i class="one-letter">m</i> and <i class="one-letter">n</i>, respectively. Since <nemeth class="inline">⠷⠛⠘⠤⠼⠂⠐⠾⠘⠍⠐⠀⠨⠅⠀⠑</nemeth> and <nemeth class="inline">⠷⠛⠓⠾⠘⠍⠝⠐⠀⠨⠅⠀⠑</nemeth>, the elements of finite order in <i class="one-letter">G</i> form a subgroup of <i class="one-letter">G</i>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">4.5.37<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <i class="one-letter">g</i> is an element distinct from the identity in <i class="one-letter">G</i>, <i class="one-letter">g</i> must generate <i class="one-letter">G</i>; otherwise, <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth> is a nontrivial proper subgroup of <i class="one-letter">G</i>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">5</span> <span class="title">Permutation Groups</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">5.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠷⠼⠂⠆⠲⠢⠒⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠒⠾⠷⠆⠢⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠷⠼⠂⠒⠢⠾⠷⠆⠲⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠲⠾⠷⠆⠒⠾</nemeth>; (e) <nemeth class="inline">⠷⠼⠂⠒⠆⠲⠾</nemeth>; (g) <nemeth class="inline">⠷⠼⠂⠒⠲⠾⠷⠆⠢⠾</nemeth>; (n) <nemeth class="inline">⠷⠼⠂⠶⠒⠢⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠷⠼⠂⠖⠾⠷⠂⠢⠾⠷⠂⠒⠾⠷⠂⠲⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠖⠾⠷⠂⠲⠾⠷⠂⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠰⠝⠐⠠⠀⠁⠰⠝⠤⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠁⠆⠾</nemeth></p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠨⠷⠷⠼⠂⠒⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠠⠀⠷⠼⠂⠒⠆⠾⠠⠀⠷⠼⠂⠒⠲⠾⠠⠀⠷⠼⠂⠒⠆⠲⠾⠠⠀⠷⠼⠂⠒⠲⠆⠾⠨⠾</nemeth> is not a subgroup.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠷⠼⠂⠆⠒⠲⠢⠾⠷⠖⠶⠦⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.11<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Permutations of the form</p><div class="displaymath"><nemeth>⠷⠼⠂⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠾⠷⠁⠒⠠⠀⠁⠲⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠁⠒⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠁⠒⠠⠀⠁⠲⠠⠀⠁⠢⠾</nemeth></div><p data-braille="continuation">are possible for <nemeth class="inline">⠠⠁⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Calculate <nemeth class="inline">⠷⠼⠂⠆⠒⠾⠷⠂⠆⠾</nemeth> and <nemeth class="inline">⠷⠼⠂⠆⠾⠷⠂⠆⠒⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.25<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Consider the cases <nemeth class="inline">⠷⠁⠃⠾⠷⠃⠉⠾</nemeth> and <nemeth class="inline">⠷⠁⠃⠾⠷⠉⠙⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">5.4.30<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>For (a), show that <nemeth class="inline">⠎⠨⠞⠎⠘⠤⠼⠂⠐⠷⠎⠷⠁⠰⠊⠐⠾⠾⠀⠨⠅⠀⠎⠷⠁⠰⠊⠬⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">6</span> <span class="title">Cosets and Lagrange's Theorem</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">6.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The order of <i class="one-letter">g</i> and the order <i class="one-letter">h</i> must both divide the order of <i class="one-letter">G</i>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The possible orders must divide <nemeth class="inline">⠼⠖⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>This is true for every proper nontrivial subgroup.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>False.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠨⠨⠷⠼⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠂⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠆⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠒⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠲⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠢⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, <nemeth class="inline">⠼⠖⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>, and <nemeth class="inline">⠼⠶⠬⠨⠨⠷⠦⠨⠨⠾</nemeth>; (c) <nemeth class="inline">⠼⠒⠸⠠⠵</nemeth>, <nemeth class="inline">⠼⠂⠬⠒⠸⠠⠵</nemeth>, and <nemeth class="inline">⠼⠆⠬⠒⠸⠠⠵</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠼⠲⠘⠋⠷⠼⠂⠢⠾⠐⠀⠸⠇⠀⠼⠲⠘⠦⠐⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠂⠢⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.12<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠛⠂⠀⠈⠑⠀⠛⠠⠓</nemeth>. Show that <nemeth class="inline">⠛⠂⠀⠈⠑⠀⠠⠓⠛</nemeth> and thus <nemeth class="inline">⠛⠠⠓⠀⠸⠐⠅⠀⠠⠓⠛</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.19<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Show that <nemeth class="inline">⠛⠷⠠⠓⠨⠩⠠⠅⠾⠀⠨⠅⠀⠛⠠⠓⠨⠩⠛⠠⠅</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">6.5.22<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠋⠷⠍⠝⠾⠀⠨⠅⠀⠋⠷⠍⠾⠋⠷⠝⠾</nemeth> (Exercise 2.4.26 in Chapter 2).</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">7</span> <span class="title">Introduction to Cryptography</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">7.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">7.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><code class="code-inline tex2jax_ignore">LAORYHAPDWK</code></p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">7.4.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Hint: <code class="code-inline tex2jax_ignore">V = E</code>, <code class="code-inline tex2jax_ignore">E = X</code> (also used for spaces and punctuation), <code class="code-inline tex2jax_ignore">K = R</code>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">7.4.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠼⠆⠖⠖⠀⠤⠼⠂</nemeth></p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">7.4.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠆⠶⠔⠂</nemeth>; (c) <nemeth class="inline">⠼⠂⠂⠆⠂⠒⠢⠆⠢⠴⠒⠆⠲⠲⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">7.4.9<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠒⠂</nemeth> (c) <nemeth class="inline">⠼⠂⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">7.4.10<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠂⠡⠲⠂</nemeth>; (c) <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠦⠶⠶⠔⠡⠲⠒⠆⠶</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">8</span> <span class="title">Algebraic Coding Theory</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">8.6</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>This cannot be a group code since <nemeth class="inline">⠷⠼⠴⠴⠴⠴⠾⠀⠌⠈⠑⠀⠠⠉</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠆</nemeth>; (c) <nemeth class="inline">⠼⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠒</nemeth>; (c) <nemeth class="inline">⠼⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.6<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠙⠰⠍⠊⠝⠐⠀⠨⠅⠀⠼⠆</nemeth>; (c) <nemeth class="inline">⠙⠰⠍⠊⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<ol class="outerlist"><li>a. <p id="TMr"><nemeth class="inline">⠷⠼⠴⠴⠴⠴⠴⠾⠠⠀⠷⠼⠴⠴⠂⠴⠂⠾⠠⠀⠷⠼⠂⠴⠴⠂⠂⠾⠠⠀⠷⠼⠂⠴⠂⠂⠴⠾</nemeth></p><div class="displaymath"><nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾</nemeth></div></li><li>b. <p id="zTA"><nemeth class="inline">⠷⠼⠴⠴⠴⠴⠴⠴⠾⠠⠀⠷⠼⠴⠂⠴⠂⠂⠂⠾⠠⠀⠷⠼⠂⠴⠂⠂⠴⠂⠾⠠⠀⠷⠼⠂⠂⠂⠴⠂⠴⠾</nemeth></p><div class="displaymath"><nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾</nemeth></div></li></ol></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.9<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Multiple errors occur in one of the received words.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.11<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) A canonical parity-check matrix with standard generator matrix</p><div class="displaymath"><nemeth>⠠⠛⠀⠨⠅⠀⠼⠂⠀⠂⠀⠴⠀⠴⠀⠂</nemeth></div><p data-braille="continuation">.</p><p>(c) A canonical parity-check matrix with standard generator matrix</p><div class="displaymath"><nemeth>⠠⠛⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.12<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) All possible syndromes occur.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.15<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <i class="one-letter">C</i>, <nemeth class="inline">⠷⠼⠂⠴⠴⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠂⠴⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠴⠂⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠴⠴⠂⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠂⠂⠴⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠂⠂⠴⠴⠾⠬⠠⠉</nemeth>, <nemeth class="inline">⠷⠼⠴⠂⠴⠂⠴⠾⠬⠠⠉</nemeth>. A decoding table does not exist for <i class="one-letter">C</i> since this is only a single error-detecting code.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.19<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠸⠭⠀⠈⠑⠀⠠⠉</nemeth> have odd weight and define a map from the set of odd codewords to the set of even codewords by <nemeth class="inline">⠸⠽⠀⠫⠳⠒⠒⠕⠀⠸⠭⠬⠸⠽</nemeth>. Show that this map is a bijection.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">8.6.23<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>For <nemeth class="inline">⠼⠆⠴</nemeth> information positions, at least 6 check bits are needed to ensure an error-correcting code.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">9</span> <span class="title">Isomorphisms</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">9.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Every infinite cyclic group is isomorphic to <nemeth class="inline">⠸⠠⠵</nemeth> by Theorem 9.1.7.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Define <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠉⠘⠈⠼⠐⠀⠫⠕⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> by</p><div class="displaymath"><nemeth>⠨⠋⠷⠁⠬⠃⠊⠾⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠤⠃⠀⠁⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>False.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.6<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Define a map from <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> into the <i class="one-letter">n</i>th roots of unity by <nemeth class="inline">⠅⠀⠫⠳⠒⠒⠕⠀⠉⠊⠎⠷⠼⠆⠅⠨⠏⠸⠌⠝⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Assume that <nemeth class="inline">⠸⠠⠟</nemeth> is cyclic and try to find a generator.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.11<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>There are two nonabelian and three abelian groups that are not isomorphic.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.16<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠂⠆</nemeth>; (c) <nemeth class="inline">⠼⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.19<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Draw the picture.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.20<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>True.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.25<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>True.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.27<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <i class="one-letter">a</i> be a generator for <i class="one-letter">G</i>. If <nemeth class="inline">⠨⠋⠒⠀⠠⠛⠀⠫⠕⠀⠠⠓</nemeth> is an isomorphism, show that <nemeth class="inline">⠋⠷⠁⠾</nemeth> is a generator for <i class="one-letter">H</i>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.38<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Any automorphism of <nemeth class="inline">⠸⠠⠵⠖</nemeth> must send 1 to another generator of <nemeth class="inline">⠸⠠⠵⠖</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">9.4.45<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>To show that <nemeth class="inline">⠨⠋</nemeth> is one-to-one, let <nemeth class="inline">⠛⠂⠀⠨⠅⠀⠓⠂⠅⠂</nemeth> and <nemeth class="inline">⠛⠆⠀⠨⠅⠀⠓⠆⠅⠆</nemeth> and consider <nemeth class="inline">⠋⠷⠛⠂⠾⠀⠨⠅⠀⠋⠷⠛⠆⠾</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">10</span> <span class="title">Normal Subgroups and Factor Groups</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">10.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">10.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a)</p><div class="displaymath"><nemeth>⠀⠀⠠⠁⠲⠀⠷⠂⠆⠾⠠⠁⠲⠀⠠⠁⠲⠀⠠⠁⠲⠀⠷⠂⠆⠾⠠⠁⠲⠀⠷⠂⠆⠾⠠⠁⠲⠀⠷⠂⠆⠾⠠⠁⠲⠀⠠⠁⠲</nemeth></div><p>(c) <nemeth class="inline">⠠⠙⠲</nemeth> is not normal in <nemeth class="inline">⠠⠎⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">10.4.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> is a generator for <i class="one-letter">G</i>, then <nemeth class="inline">⠁⠠⠓</nemeth> is a generator for <nemeth class="inline">⠠⠛⠸⠌⠠⠓</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">10.4.11<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>For any <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, show that the map <nemeth class="inline">⠊⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> defined by <nemeth class="inline">⠊⠰⠛⠐⠒⠀⠭⠀⠫⠳⠒⠒⠕⠀⠛⠭⠛⠘⠤⠼⠂</nemeth> is an isomorphism of <i class="one-letter">G</i> with itself. Then consider <nemeth class="inline">⠊⠰⠛⠐⠷⠠⠓⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">10.4.12<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Suppose that <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth> is normal in <i class="one-letter">G</i> and let <i class="one-letter">y</i> be an arbitrary element of <i class="one-letter">G</i>. If <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠉⠷⠛⠾</nemeth>, we must show that <nemeth class="inline">⠽⠭⠽⠘⠤⠼⠂</nemeth> is also in <nemeth class="inline">⠠⠉⠷⠛⠾</nemeth>. Show that <nemeth class="inline">⠷⠽⠭⠽⠘⠤⠼⠂⠐⠾⠛⠀⠨⠅⠀⠛⠷⠽⠭⠽⠘⠤⠼⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">10.4.14<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Let <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth> and <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠛⠄</nemeth>. If <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂</nemeth>, then</p><div class="displaymath"><nemeth>⠛⠓⠛⠘⠤⠼⠂⠀⠀⠨⠅⠀⠛⠁⠃⠁⠘⠤⠼⠂⠐⠃⠘⠤⠼⠂⠐⠛⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠷⠛⠁⠛⠘⠤⠼⠂⠐⠾⠷⠛⠃⠛⠘⠤⠼⠂⠐⠾⠷⠛⠁⠘⠤⠼⠂⠐⠛⠘⠤⠼⠂⠐⠾⠷⠛⠃⠘⠤⠼⠂⠐⠛⠘⠤⠼⠂⠐⠾⠀⠀⠀⠀⠨⠅⠀⠷⠛⠁⠛⠘⠤⠼⠂⠐⠾⠷⠛⠃⠛⠘⠤⠼⠂⠐⠾⠷⠛⠁⠛⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠷⠛⠃⠛⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂</nemeth></div><p data-braille="continuation">. We also need to show that if <nemeth class="inline">⠓⠀⠨⠅⠀⠓⠂⠀⠄⠄⠄⠀⠓⠰⠝⠐</nemeth> with <nemeth class="inline">⠓⠰⠊⠐⠀⠨⠅⠀⠁⠰⠊⠐⠃⠰⠊⠐⠁⠰⠊⠘⠤⠼⠂⠐⠃⠰⠊⠘⠤⠼⠂</nemeth>, then <nemeth class="inline">⠛⠓⠛⠘⠤⠼⠂</nemeth> is a product of elements of the same type. However, <nemeth class="inline">⠛⠓⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠛⠓⠂⠀⠄⠄⠄⠀⠓⠰⠝⠐⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠛⠓⠂⠛⠘⠤⠼⠂⠐⠾⠷⠛⠓⠆⠛⠘⠤⠼⠂⠐⠾⠀⠄⠄⠄⠀⠷⠛⠓⠰⠝⠐⠛⠘⠤⠼⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">11</span> <span class="title">Homomorphisms</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">11.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">11.4.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) is a homomorphism with kernel <nemeth class="inline">⠨⠷⠼⠂⠨⠾</nemeth>; (c) is not a homomorphism.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">11.4.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Since <nemeth class="inline">⠋⠷⠍⠬⠝⠾⠀⠨⠅⠀⠼⠶⠷⠍⠬⠝⠾⠀⠨⠅⠀⠼⠶⠍⠬⠶⠝⠀⠨⠅⠀⠋⠷⠍⠾⠬⠋⠷⠝⠾</nemeth>, <nemeth class="inline">⠨⠋</nemeth> is a homomorphism.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">11.4.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>For any homomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠵⠆⠲⠀⠫⠕⠀⠸⠠⠵⠂⠦</nemeth>, the kernel of <nemeth class="inline">⠨⠋</nemeth> must be a subgroup of <nemeth class="inline">⠸⠠⠵⠆⠲</nemeth> and the image of <nemeth class="inline">⠨⠋</nemeth> must be a subgroup of <nemeth class="inline">⠸⠠⠵⠂⠦</nemeth>. Now use the fact that a generator must map to a generator.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">11.4.9<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>. Then <nemeth class="inline">⠋⠷⠁⠾⠋⠷⠃⠾⠀⠨⠅⠀⠋⠷⠁⠃⠾⠀⠨⠅⠀⠋⠷⠃⠁⠾⠀⠨⠅⠀⠋⠷⠃⠾⠋⠷⠁⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">11.4.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Find a counterexample.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">12</span> <span class="title">Matrix Groups and Symmetry</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">12.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">12.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<div class="displaymath"><nemeth>⠹⠂⠌⠆⠼⠈⠷⠳⠳⠸⠭⠬⠸⠽⠳⠳⠘⠆⠐⠬⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠨⠨⠷⠭⠬⠽⠠⠀⠭⠬⠽⠨⠨⠾⠤⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠹⠂⠌⠆⠼⠈⠷⠳⠳⠸⠭⠳⠳⠘⠆⠐⠬⠆⠨⠨⠷⠭⠠⠀⠽⠨⠨⠾⠬⠳⠳⠸⠽⠳⠳⠘⠆⠐⠤⠳⠳⠸⠭⠳⠳⠘⠆⠐⠤⠳⠳⠸⠽⠳⠳⠘⠆⠐⠈⠾⠀⠀⠀⠀⠨⠅⠀⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">12.4.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) is in <nemeth class="inline">⠠⠎⠠⠕⠷⠼⠆⠾</nemeth>; (c) is not in <nemeth class="inline">⠠⠕⠷⠼⠒⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">12.4.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠨⠨⠷⠸⠭⠠⠀⠸⠽⠨⠨⠾⠀⠨⠅⠀⠨⠨⠷⠸⠽⠠⠀⠸⠭⠨⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">12.4.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Use the unimodular matrix</p><div class="displaymath"><nemeth>⠠⠷⠼⠢⠀⠆⠠⠾⠀⠠⠷⠆⠀⠂⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">12.4.10<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Show that the kernel of the map <nemeth class="inline">⠙⠑⠞⠒⠀⠠⠕⠷⠝⠾⠀⠫⠕⠀⠸⠠⠗⠘⠈⠼</nemeth> is <nemeth class="inline">⠠⠎⠠⠕⠷⠝⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">12.4.13<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>True.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">12.4.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠏⠐⠖⠍</nemeth></p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">13</span> <span class="title">The Structure of  Groups</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">13.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">13.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>There are three possible groups.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">13.4.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠨⠷⠼⠴⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠖⠨⠨⠾⠀⠸⠐⠅⠀⠨⠨⠷⠒⠨⠨⠾⠀⠸⠐⠅⠀⠸⠠⠵⠂⠆</nemeth>; (e) <nemeth class="inline">⠨⠷⠷⠼⠂⠾⠨⠾⠈⠡⠨⠷⠴⠨⠾⠀⠸⠐⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾⠈⠡⠨⠷⠴⠨⠾⠀⠸⠐⠅⠀⠠⠎⠒⠈⠡⠨⠷⠴⠨⠾⠀⠸⠐⠅⠀⠠⠎⠒⠈⠡⠨⠨⠷⠆⠨⠨⠾⠀⠸⠐⠅⠀⠠⠎⠒⠈⠡⠸⠠⠵⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">13.4.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Use the Fundamental Theorem of Finitely Generated Abelian Groups.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">13.4.12<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <i class="one-letter">N</i> and <nemeth class="inline">⠠⠛⠸⠌⠠⠝</nemeth> are solvable, then they have solvable series</p><div class="displaymath"><nemeth>⠠⠝⠀⠨⠅⠀⠠⠝⠰⠝⠐⠀⠸⠨⠂⠀⠠⠝⠰⠝⠤⠂⠐⠀⠸⠨⠂⠀⠄⠄⠄⠀⠸⠨⠂⠀⠠⠝⠂⠀⠸⠨⠂⠀⠠⠝⠴⠀⠨⠅⠀⠨⠷⠑⠨⠾⠀⠠⠛⠸⠌⠠⠝⠀⠨⠅⠀⠠⠛⠰⠝⠐⠸⠌⠠⠝⠀⠸⠨⠂⠀⠠⠛⠰⠝⠤⠂⠐⠸⠌⠠⠝⠀⠸⠨⠂⠀⠀⠄⠄⠄⠀⠠⠛⠂⠸⠌⠠⠝⠀⠸⠨⠂⠀⠠⠛⠴⠸⠌⠠⠝⠀⠨⠅⠀⠨⠷⠠⠝⠨⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">13.4.16<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Use the fact that <nemeth class="inline">⠠⠙⠰⠝</nemeth> has a cyclic subgroup of index <nemeth class="inline">⠼⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">13.4.21<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠠⠛⠸⠌⠠⠛⠄</nemeth> is abelian.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">14</span> <span class="title">Group Actions</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">14.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Example 14.1.1: <nemeth class="inline">⠼⠴</nemeth>, <nemeth class="inline">⠸⠠⠗⠘⠆⠐⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠴⠨⠾</nemeth>. Example 14.1.2: <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠠⠭⠰⠷⠂⠾⠐⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠭⠰⠷⠂⠆⠾⠐⠀⠨⠅⠀⠨⠷⠼⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠭⠰⠷⠂⠒⠾⠐⠀⠨⠅⠀⠨⠷⠼⠆⠨⠾</nemeth>, <nemeth class="inline">⠠⠭⠰⠷⠆⠒⠾⠐⠀⠨⠅⠀⠨⠷⠼⠂⠨⠾</nemeth>, <nemeth class="inline">⠠⠭⠰⠷⠂⠆⠒⠾⠐⠀⠨⠅⠀⠠⠭⠰⠷⠂⠒⠆⠾⠐⠀⠨⠅⠀⠸⠴</nemeth>. <nemeth class="inline">⠠⠛⠂⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠆⠒⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠛⠆⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠒⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠛⠒⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠾⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠈⠠⠕⠂⠀⠨⠅⠀⠈⠠⠕⠆⠀⠨⠅⠀⠈⠠⠕⠒⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.6<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The conjugacy classes for <nemeth class="inline">⠠⠎⠲</nemeth> are</p><div class="displaymath"><nemeth>⠈⠠⠕⠰⠷⠂⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠨⠾⠠⠀⠈⠠⠕⠰⠷⠂⠆⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠷⠼⠂⠲⠾⠠⠀⠷⠼⠆⠒⠾⠠⠀⠷⠼⠆⠲⠾⠠⠀⠷⠼⠒⠲⠾⠨⠾⠠⠀⠈⠠⠕⠰⠷⠂⠆⠾⠷⠒⠲⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠾⠷⠒⠲⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠠⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾⠨⠾⠠⠀⠈⠠⠕⠰⠷⠂⠆⠒⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠠⠀⠷⠼⠂⠆⠲⠾⠠⠀⠷⠼⠂⠲⠆⠾⠠⠀⠷⠼⠂⠒⠲⠾⠠⠀⠷⠼⠂⠲⠒⠾⠠⠀⠷⠼⠆⠒⠲⠾⠠⠀⠷⠼⠆⠲⠒⠾⠨⠾⠠⠀⠈⠠⠕⠰⠷⠂⠆⠒⠲⠾⠐⠀⠨⠅⠀⠨⠷⠷⠼⠂⠆⠒⠲⠾⠠⠀⠷⠼⠂⠆⠲⠒⠾⠠⠀⠷⠼⠂⠒⠆⠲⠾⠠⠀⠷⠼⠂⠒⠲⠆⠾⠠⠀⠷⠼⠂⠲⠆⠒⠾⠠⠀⠷⠼⠂⠲⠒⠆⠾⠨⠾</nemeth></div><p data-braille="continuation">. The class equation is <nemeth class="inline">⠼⠂⠬⠒⠬⠖⠬⠖⠬⠦⠀⠨⠅⠀⠼⠆⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠷⠼⠒⠘⠲⠐⠬⠒⠘⠂⠐⠬⠒⠘⠆⠐⠬⠒⠘⠂⠐⠬⠒⠘⠆⠐⠬⠒⠘⠆⠐⠬⠒⠘⠒⠐⠬⠒⠘⠒⠐⠾⠸⠌⠦⠀⠨⠅⠀⠼⠆⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.11<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The group of rigid motions of the cube can be described by the allowable permutations of the six faces and is isomorphic to <nemeth class="inline">⠠⠎⠲</nemeth>. There are the identity cycle, 6 permutations with the structure <nemeth class="inline">⠷⠁⠃⠉⠙⠾</nemeth> that correspond to the quarter turns, 3 permutations with the structure <nemeth class="inline">⠷⠁⠃⠾⠷⠉⠙⠾</nemeth> that correspond to the half turns, 6 permutations with the structure <nemeth class="inline">⠷⠁⠃⠾⠷⠉⠙⠾⠷⠑⠋⠾</nemeth> that correspond to rotating the cube about the centers of opposite edges, and 8 permutations with the structure <nemeth class="inline">⠷⠁⠃⠉⠾⠷⠙⠑⠋⠾</nemeth> that correspond to rotating the cube about opposite vertices.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.15<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠷⠼⠂⠡⠆⠘⠖⠐⠬⠒⠡⠆⠘⠲⠐⠬⠲⠡⠆⠘⠒⠐⠬⠆⠡⠆⠘⠆⠐⠬⠆⠡⠆⠘⠂⠐⠾⠸⠌⠂⠆⠀⠨⠅⠀⠼⠂⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠷⠼⠂⠡⠆⠘⠦⠐⠬⠒⠡⠆⠘⠖⠐⠬⠆⠡⠆⠘⠲⠐⠾⠸⠌⠖⠀⠨⠅⠀⠼⠦⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">14.5.22<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Use the fact that <nemeth class="inline">⠭⠀⠈⠑⠀⠛⠠⠉⠷⠁⠾⠛⠘⠤⠼⠂</nemeth> if and only if <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠭⠛⠀⠈⠑⠀⠠⠉⠷⠁⠾</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">15</span> <span class="title">The Sylow Theorems</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">15.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">15.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠼⠂⠦⠀⠨⠅⠀⠼⠆⠡⠒⠘⠆</nemeth>, then the order of a Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroup is <nemeth class="inline">⠼⠆</nemeth>, and the order of a Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroup is <nemeth class="inline">⠼⠔</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">15.4.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The four Sylow <nemeth class="inline">⠼⠒</nemeth>-subgroups of <nemeth class="inline">⠠⠎⠲</nemeth> are <nemeth class="inline">⠠⠏⠂⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠒⠾⠠⠀⠷⠼⠂⠒⠆⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠏⠆⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠆⠲⠾⠠⠀⠷⠼⠂⠲⠆⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠏⠒⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠂⠒⠲⠾⠠⠀⠷⠼⠂⠲⠒⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠏⠲⠀⠨⠅⠀⠨⠷⠷⠼⠂⠾⠠⠀⠷⠼⠆⠒⠲⠾⠠⠀⠷⠼⠆⠲⠒⠾⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">15.4.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Since <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠼⠔⠖⠀⠨⠅⠀⠼⠆⠘⠢⠐⠡⠒</nemeth>, <i class="one-letter">G</i> has either one or three Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups by the Third Sylow Theorem. If there is only one subgroup, we are done. If there are three Sylow <nemeth class="inline">⠼⠆</nemeth>-subgroups, let <i class="one-letter">H</i> and <i class="one-letter">K</i> be two of them. Therefore, <nemeth class="inline">⠳⠠⠓⠨⠩⠠⠅⠳⠀⠨⠂⠱⠀⠼⠂⠖</nemeth>; otherwise, <nemeth class="inline">⠠⠓⠠⠅</nemeth> would have <nemeth class="inline">⠷⠼⠒⠆⠡⠒⠆⠾⠸⠌⠦⠀⠨⠅⠀⠼⠂⠆⠦</nemeth> elements, which is impossible. Thus, <nemeth class="inline">⠠⠓⠨⠩⠠⠅</nemeth> is normal in both <i class="one-letter">H</i> and <i class="one-letter">K</i> since it has index <nemeth class="inline">⠼⠆</nemeth> in both groups.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">15.4.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Show that <i class="one-letter">G</i> has a normal Sylow <i class="one-letter">p</i>-subgroup of order <nemeth class="inline">⠏⠘⠆</nemeth> and a normal Sylow <i class="one-letter">q</i>-subgroup of order <nemeth class="inline">⠟⠘⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">15.4.10<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>False.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">15.4.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <i class="one-letter">G</i> is abelian, then <i class="one-letter">G</i> is cyclic, since <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠼⠒⠡⠢⠡⠂⠶</nemeth>. Now look at Example 15.2.6.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">15.4.23<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Define a mapping between the right cosets of <nemeth class="inline">⠠⠝⠷⠠⠓⠾</nemeth> in <i class="one-letter">G</i> and the conjugates of <i class="one-letter">H</i> in <i class="one-letter">G</i> by <nemeth class="inline">⠠⠝⠷⠠⠓⠾⠛⠀⠫⠳⠒⠒⠕⠀⠛⠘⠤⠼⠂⠐⠠⠓⠛</nemeth>. Prove that this map is a bijection.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">15.4.26<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠁⠠⠛⠘⠄⠐⠠⠀⠃⠠⠛⠘⠄⠐⠀⠈⠑⠀⠠⠛⠸⠌⠠⠛⠄</nemeth>. Then <nemeth class="inline">⠷⠁⠠⠛⠘⠄⠐⠾⠷⠃⠠⠛⠘⠄⠐⠾⠀⠨⠅⠀⠁⠃⠠⠛⠘⠄⠐⠀⠨⠅⠀⠁⠃⠷⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂⠐⠃⠁⠾⠠⠛⠘⠄⠐⠀⠨⠅⠀⠷⠁⠃⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂⠐⠾⠃⠁⠠⠛⠘⠄⠐⠀⠨⠅⠀⠃⠁⠠⠛⠄</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">16</span> <span class="title">Rings</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">16.7</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠶⠸⠠⠵</nemeth> is a ring but not a field; (c) <nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠾</nemeth> is a field; (f) <i class="one-letter">R</i> is not a ring.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠶⠠⠀⠼⠔⠨⠾</nemeth>; (c) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠖⠨⠾</nemeth>; (e)</p><div class="displaymath"><nemeth>⠨⠷⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠂⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠂⠀⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠂⠀⠂⠠⠾⠠⠨⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠔⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠖⠠⠀⠼⠂⠆⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠠⠀⠼⠂⠆⠠⠀⠼⠂⠢⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠴⠠⠀⠼⠂⠆⠠⠀⠼⠂⠲⠠⠀⠼⠂⠖⠨⠾</nemeth>; (c) there are no nontrivial ideals.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Assume there is an isomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠉⠀⠫⠕⠀⠸⠠⠗</nemeth> with <nemeth class="inline">⠋⠷⠊⠾⠀⠨⠅⠀⠁</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>False. Assume there is an isomorphism <nemeth class="inline">⠨⠋⠒⠀⠸⠠⠟⠷⠜⠆⠻⠾⠀⠫⠕⠀⠸⠠⠟⠷⠜⠒⠻⠾</nemeth> such that <nemeth class="inline">⠋⠷⠜⠆⠻⠾⠀⠨⠅⠀⠁</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.13<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠭⠀⠸⠇⠀⠼⠂⠶⠷⠍⠕⠙⠀⠢⠢⠾</nemeth>; (c) <nemeth class="inline">⠭⠀⠸⠇⠀⠼⠆⠂⠲⠷⠍⠕⠙⠀⠆⠶⠶⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.16<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <nemeth class="inline">⠠⠊⠀⠌⠨⠅⠀⠨⠷⠼⠴⠨⠾</nemeth>, show that <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠊</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.18<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠋⠷⠁⠾⠋⠷⠃⠾⠀⠨⠅⠀⠋⠷⠁⠃⠾⠀⠨⠅⠀⠋⠷⠃⠁⠾⠀⠨⠅⠀⠋⠷⠃⠾⠋⠷⠁⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.26<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth> with <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>. Then the principal ideal generated by <i class="one-letter">a</i> is <i class="one-letter">R</i>. Thus, there exists a <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠗</nemeth> such that <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.28<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Compute <nemeth class="inline">⠷⠁⠬⠃⠾⠘⠆</nemeth> and <nemeth class="inline">⠷⠤⠁⠃⠾⠘⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.33<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠁⠸⠌⠃⠠⠀⠉⠸⠌⠙⠀⠈⠑⠀⠸⠠⠵⠰⠷⠏⠾⠐</nemeth>. Then <nemeth class="inline">⠁⠸⠌⠃⠬⠉⠸⠌⠙⠀⠨⠅⠀⠷⠁⠙⠬⠃⠉⠾⠸⠌⠃⠙</nemeth> and <nemeth class="inline">⠷⠁⠸⠌⠃⠾⠡⠷⠉⠸⠌⠙⠾⠀⠨⠅⠀⠷⠁⠉⠾⠸⠌⠷⠃⠙⠾</nemeth> are both in <nemeth class="inline">⠸⠠⠵⠰⠷⠏⠾</nemeth>, since <nemeth class="inline">⠛⠉⠙⠀⠷⠃⠙⠠⠀⠏⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">16.7.37<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Suppose that <nemeth class="inline">⠭⠘⠆⠐⠀⠨⠅⠀⠭</nemeth> and <nemeth class="inline">⠭⠀⠌⠨⠅⠀⠼⠴</nemeth>. Since <i class="one-letter">R</i> is an integral domain, <nemeth class="inline">⠭⠀⠨⠅⠀⠼⠂</nemeth>. To find a nontrivial idempotent, look in <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">17</span> <span class="title">Polynomials</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">17.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠔⠭⠘⠆⠬⠆⠭⠬⠢</nemeth>; (b) <nemeth class="inline">⠼⠦⠭⠘⠲⠬⠶⠭⠘⠒⠬⠆⠭⠘⠆⠬⠶⠭</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠢⠭⠘⠒⠐⠬⠖⠭⠘⠆⠐⠤⠒⠭⠬⠲⠀⠨⠅⠀⠷⠼⠢⠭⠘⠆⠐⠬⠆⠭⠬⠂⠾⠷⠭⠤⠆⠾⠬⠖</nemeth>; (c) <nemeth class="inline">⠼⠲⠭⠘⠢⠐⠤⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠲⠀⠨⠅⠀⠷⠼⠲⠭⠘⠆⠐⠬⠲⠾⠷⠭⠘⠒⠐⠬⠒⠾⠬⠲⠭⠘⠆⠐⠬⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) No zeros in <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth>; (c) <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Look at <nemeth class="inline">⠷⠼⠆⠭⠬⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Reducible; (c) irreducible.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.10<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>One factorization is <nemeth class="inline">⠭⠘⠆⠐⠬⠭⠬⠦⠀⠨⠅⠀⠷⠭⠬⠆⠾⠷⠭⠬⠔⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.13<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The integers <nemeth class="inline">⠸⠠⠵</nemeth> do not form a field.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.14<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>False.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.16<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠨⠋⠒⠀⠠⠗⠀⠫⠕⠀⠠⠎</nemeth> be an isomorphism. Define <nemeth class="inline">⠐⠨⠋⠣⠱⠻⠒⠀⠠⠗⠈⠷⠭⠈⠾⠀⠫⠕⠀⠠⠎⠈⠷⠭⠈⠾</nemeth> by <nemeth class="inline">⠐⠋⠣⠱⠻⠷⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝⠐⠾⠀⠨⠅⠀⠋⠷⠁⠴⠾⠬⠋⠷⠁⠂⠾⠭⠬⠄⠄⠄⠬⠋⠷⠁⠰⠝⠐⠾⠭⠘⠝</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.20<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Cyclotomic Polynomials.</span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The polynomial</p><div class="displaymath"><nemeth>⠨⠠⠋⠰⠝⠐⠷⠭⠾⠀⠨⠅⠀⠹⠭⠘⠝⠐⠤⠂⠌⠭⠤⠂⠼⠀⠨⠅⠀⠭⠘⠝⠤⠂⠐⠬⠭⠘⠝⠤⠆⠐⠬⠄⠄⠄⠬⠭⠬⠂</nemeth></div><p data-braille="continuation">is called the <dfn class="terminology">cyclotomic polynomial.</dfn> Show that <nemeth class="inline">⠨⠠⠋⠰⠏⠐⠷⠭⠾</nemeth> is irreducible over <nemeth class="inline">⠸⠠⠟</nemeth> for any prime <i class="one-letter">p</i>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">17.5.26<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Find a nontrivial proper ideal in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">18</span> <span class="title">Integral Domains</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">18.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">18.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Note that <nemeth class="inline">⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠼⠂⠸⠌⠷⠁⠬⠃⠜⠒⠻⠊⠾⠀⠨⠅⠀⠷⠁⠤⠃⠜⠒⠻⠊⠾⠸⠌⠷⠁⠘⠆⠐⠬⠒⠃⠘⠆⠐⠾</nemeth> is in <nemeth class="inline">⠸⠠⠵⠈⠷⠜⠒⠻⠊⠈⠾</nemeth> if and only if <nemeth class="inline">⠁⠘⠆⠐⠬⠒⠃⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth>. The only integer solutions to the equation are <nemeth class="inline">⠁⠀⠨⠅⠀⠬⠤⠼⠂⠠⠀⠃⠀⠨⠅⠀⠼⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">18.4.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠼⠢⠀⠨⠅⠀⠤⠊⠷⠂⠬⠆⠊⠾⠷⠆⠬⠊⠾</nemeth>; (c) <nemeth class="inline">⠼⠖⠬⠦⠊⠀⠨⠅⠀⠤⠊⠷⠂⠬⠊⠾⠘⠆⠐⠷⠆⠬⠊⠾⠘⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">18.4.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>True.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">18.4.9<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠉⠬⠙⠊⠀⠌⠨⠅⠀⠼⠴</nemeth> be in <nemeth class="inline">⠸⠠⠵⠈⠷⠊⠈⠾</nemeth>. Prove that <nemeth class="inline">⠵⠸⠌⠺⠀⠈⠑⠀⠸⠠⠟⠷⠊⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">18.4.15<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠁⠀⠨⠅⠀⠥⠃</nemeth> with <i class="one-letter">u</i> a unit. Then <nemeth class="inline">⠝⠷⠃⠾⠀⠐⠅⠱⠀⠝⠷⠥⠃⠾⠀⠐⠅⠱⠀⠝⠷⠁⠾</nemeth>. Similarly, <nemeth class="inline">⠝⠷⠁⠾⠀⠐⠅⠱⠀⠝⠷⠃⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">18.4.16<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Show that 21 can be factored in two different ways.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">19</span> <span class="title">Lattices and Boolean Algebras</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">19.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<div class="sidebyside"><div class="sbsrow" style="margin-left:30%;margin-right:30%;"><div class="sbspanel" style="width:100%;justify-content:flex-start;"><div data-braille="image"><p>Image: A graph with 30 at the top level which is connected to 10 and 15 at the second level.  The third level has 2, which is connected to 30 and 10, and 5, which is connected to 10 and 15, and 3 which is connected to 15.  The bottom level is 1 which is connected to 2, 3, and 5.</p><p>ID: hint-divisors-30</p></div></div></div></div></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>What are the atoms of <i class="one-letter">B</i>?</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>False.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.6<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠷⠁⠈⠬⠃⠈⠬⠁⠘⠄⠐⠾⠈⠩⠁</nemeth></p><div class="sidebyside"><div class="sbsrow" style="margin-left:25%;margin-right:25%;"><div class="sbspanel" style="width:100%;justify-content:flex-start;"><div data-braille="image"><p>Image: A graph from left to right which splits into three paths, a b, and b' and then rejoins into a single path and goes through a.</p><p>ID: hint-switching-circuit-part-a</p></div></div></div></div><p>(c) <nemeth class="inline">⠁⠈⠬⠷⠁⠈⠩⠃⠾</nemeth></p><div class="sidebyside"><div class="sbsrow" style="margin-left:25%;margin-right:25%;"><div class="sbspanel" style="width:100%;justify-content:flex-start;"><div data-braille="image"><p>Image: A graph from left to right which splits into two paths and then rejoins.  The top path is a then b.  The bottom path is a.</p><p>ID: hint-switching-circuit-part-c</p></div></div></div></div></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Not equivalent.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.10<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠁⠘⠄⠐⠈⠩⠈⠷⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠃⠈⠾⠀⠨⠅⠀⠁⠈⠩⠷⠁⠈⠬⠃⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.14<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠠⠊⠠⠀⠠⠚</nemeth> be ideals in <i class="one-letter">R</i>. We need to show that <nemeth class="inline">⠠⠊⠬⠠⠚⠀⠨⠅⠀⠨⠷⠗⠬⠎⠒⠀⠗⠀⠈⠑⠀⠠⠊⠁⠝⠙⠎⠀⠈⠑⠀⠠⠚⠨⠾</nemeth> is the smallest ideal in <i class="one-letter">R</i> containing both <i class="one-letter">I</i> and <i class="one-letter">J</i>. If <nemeth class="inline">⠗⠂⠠⠀⠗⠆⠀⠈⠑⠀⠠⠊</nemeth> and <nemeth class="inline">⠎⠂⠠⠀⠎⠆⠀⠈⠑⠀⠠⠚</nemeth>, then <nemeth class="inline">⠷⠗⠂⠬⠎⠂⠾⠬⠷⠗⠆⠬⠎⠆⠾⠀⠨⠅⠀⠷⠗⠂⠬⠗⠆⠾⠬⠷⠎⠂⠬⠎⠆⠾</nemeth> is in <nemeth class="inline">⠠⠊⠬⠠⠚</nemeth>. For <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠗</nemeth>, <nemeth class="inline">⠁⠷⠗⠂⠬⠎⠂⠾⠀⠨⠅⠀⠁⠗⠂⠬⠁⠎⠂⠀⠈⠑⠀⠠⠊⠬⠠⠚</nemeth>; hence, <nemeth class="inline">⠠⠊⠬⠠⠚</nemeth> is an ideal in <i class="one-letter">R</i>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.18<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) No.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">19.5.20<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠷⠀⠫⠒⠒⠕⠕⠀⠾</nemeth>. <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠀⠫⠒⠒⠕⠕⠀⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠀⠨⠅⠀⠷⠁⠈⠩⠁⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠁⠾⠀⠨⠅⠀⠠⠕⠈⠬⠠⠕⠀⠨⠅⠀⠠⠕</nemeth>. <nemeth class="inline">⠷⠀⠫⠪⠪⠒⠒⠀⠾</nemeth>. <nemeth class="inline">⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠀⠨⠅⠀⠠⠕⠀⠫⠒⠒⠕⠕⠀⠁⠈⠬⠃⠀⠨⠅⠀⠷⠁⠈⠬⠁⠾⠈⠬⠃⠀⠨⠅⠀⠁⠈⠬⠷⠁⠈⠬⠃⠾⠀⠨⠅⠀⠁⠈⠬⠈⠷⠠⠊⠈⠩⠷⠁⠈⠬⠃⠾⠈⠾⠀⠨⠅⠀⠁⠈⠬⠈⠷⠷⠁⠈⠬⠁⠘⠄⠐⠾⠈⠩⠷⠁⠈⠬⠃⠾⠈⠾⠀⠨⠅⠀⠈⠷⠁⠈⠬⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠾⠈⠬⠈⠷⠁⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠈⠾⠀⠨⠅⠀⠁⠈⠬⠈⠷⠷⠁⠈⠩⠃⠘⠄⠐⠾⠈⠬⠷⠁⠘⠄⠐⠈⠩⠃⠾⠈⠾⠀⠨⠅⠀⠁⠈⠬⠴⠀⠨⠅⠀⠁</nemeth>. A symmetric argument shows that <nemeth class="inline">⠁⠈⠬⠃⠀⠨⠅⠀⠃</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">20</span> <span class="title">Vector Spaces</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">20.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">20.5.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><nemeth class="inline">⠸⠠⠟⠷⠜⠆⠻⠠⠀⠜⠒⠻⠾</nemeth> has basis <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠆⠻⠠⠀⠜⠒⠻⠠⠀⠜⠖⠻⠨⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">20.5.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>The set <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠭⠠⠀⠭⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠭⠘⠝⠤⠂⠐⠨⠾</nemeth> is a basis for <nemeth class="inline">⠠⠏⠰⠝</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">20.5.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Subspace of dimension <nemeth class="inline">⠼⠆</nemeth> with basis <nemeth class="inline">⠨⠷⠷⠼⠂⠠⠀⠼⠴⠠⠀⠤⠼⠒⠾⠠⠀⠷⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠾⠨⠾</nemeth>; (d) not a subspace</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">20.5.10<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Since <nemeth class="inline">⠼⠴⠀⠨⠅⠀⠁⠼⠴⠀⠨⠅⠀⠁⠷⠤⠧⠬⠧⠾⠀⠨⠅⠀⠁⠷⠤⠧⠾⠬⠁⠧</nemeth>, it follows that <nemeth class="inline">⠤⠁⠧⠀⠨⠅⠀⠁⠷⠤⠧⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">20.5.12<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠧⠴⠀⠨⠅⠀⠼⠴⠠⠀⠧⠂⠠⠀⠄⠄⠄⠀⠠⠀⠧⠰⠝⠐⠀⠈⠑⠀⠠⠧</nemeth> and <nemeth class="inline">⠨⠁⠴⠀⠌⠨⠅⠀⠼⠴⠠⠀⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐⠀⠈⠑⠀⠠⠋</nemeth>. Then <nemeth class="inline">⠨⠁⠴⠧⠴⠬⠄⠄⠄⠬⠨⠁⠰⠝⠐⠧⠰⠝⠐⠀⠨⠅⠀⠼⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">20.5.15<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Linear Transformations.</span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Let <nemeth class="inline">⠥⠠⠀⠧⠀⠈⠑⠀⠅⠑⠗⠀⠷⠠⠞⠾</nemeth> and <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠋</nemeth>. Then</p><div class="displaymath"><nemeth>⠠⠞⠷⠥⠬⠧⠾⠀⠨⠅⠀⠠⠞⠷⠥⠾⠬⠠⠞⠷⠧⠾⠀⠨⠅⠀⠼⠴⠀⠠⠞⠷⠨⠁⠧⠾⠀⠨⠅⠀⠨⠁⠠⠞⠷⠧⠾⠀⠨⠅⠀⠨⠁⠐⠴⠀⠨⠅⠀⠼⠴</nemeth></div><p data-braille="continuation">. Hence, <nemeth class="inline">⠥⠬⠧⠠⠀⠨⠁⠧⠀⠈⠑⠀⠅⠑⠗⠀⠷⠠⠞⠾</nemeth>, and <nemeth class="inline">⠅⠑⠗⠀⠷⠠⠞⠾</nemeth> is a subspace of <i class="one-letter">V</i>.</p><p>(c) The statement that <nemeth class="inline">⠠⠞⠷⠥⠾⠀⠨⠅⠀⠠⠞⠷⠧⠾</nemeth> is equivalent to <nemeth class="inline">⠠⠞⠷⠥⠤⠧⠾⠀⠨⠅⠀⠠⠞⠷⠥⠾⠤⠠⠞⠷⠧⠾⠀⠨⠅⠀⠼⠴</nemeth>, which is true if and only if <nemeth class="inline">⠥⠤⠧⠀⠨⠅⠀⠼⠴</nemeth> or <nemeth class="inline">⠥⠀⠨⠅⠀⠧</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">20.5.17<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Direct Sums.</span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Let <nemeth class="inline">⠥⠠⠀⠥⠘⠄⠐⠀⠈⠑⠀⠠⠥</nemeth> and <nemeth class="inline">⠧⠠⠀⠧⠘⠄⠐⠀⠈⠑⠀⠠⠧</nemeth>. Then</p><div class="displaymath"><nemeth>⠷⠥⠬⠧⠾⠬⠷⠥⠘⠄⠐⠬⠧⠘⠄⠐⠾⠀⠀⠨⠅⠀⠷⠥⠬⠥⠘⠄⠐⠾⠬⠷⠧⠬⠧⠘⠄⠐⠾⠀⠈⠑⠀⠠⠥⠬⠠⠧⠀⠨⠁⠷⠥⠬⠧⠾⠀⠀⠨⠅⠀⠨⠁⠥⠬⠨⠁⠧⠀⠈⠑⠀⠠⠥⠬⠠⠧</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">21</span> <span class="title">Fields</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">21.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠭⠘⠲⠐⠤⠷⠆⠸⠌⠒⠾⠭⠘⠆⠤⠖⠆⠸⠌⠔</nemeth>; (c) <nemeth class="inline">⠭⠘⠲⠐⠤⠆⠭⠘⠆⠬⠆⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠆⠻⠠⠀⠜⠒⠻⠠⠀⠜⠖⠻⠨⠾</nemeth>; (c) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠊⠠⠀⠜⠆⠻⠠⠀⠜⠆⠻⠊⠨⠾</nemeth>; (e) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠘⠂⠸⠌⠖⠐⠠⠀⠼⠆⠘⠂⠸⠌⠒⠐⠠⠀⠼⠆⠘⠂⠸⠌⠆⠐⠠⠀⠼⠆⠘⠆⠸⠌⠒⠐⠠⠀⠼⠆⠘⠢⠸⠌⠖⠐⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Use the fact that the elements of <nemeth class="inline">⠸⠠⠵⠆⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠭⠘⠒⠐⠬⠭⠬⠂⠨⠨⠾</nemeth> are 0, 1, <nemeth class="inline">⠨⠁</nemeth>, <nemeth class="inline">⠼⠂⠬⠨⠁</nemeth>, <nemeth class="inline">⠨⠁⠘⠆</nemeth>, <nemeth class="inline">⠼⠂⠬⠨⠁⠘⠆</nemeth>, <nemeth class="inline">⠨⠁⠬⠨⠁⠘⠆</nemeth>, <nemeth class="inline">⠼⠂⠬⠨⠁⠬⠨⠁⠘⠆</nemeth> and the fact that <nemeth class="inline">⠨⠁⠘⠒⠐⠬⠨⠁⠬⠂⠀⠨⠅⠀⠼⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>False.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.14<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Suppose that <i class="one-letter">E</i> is algebraic over <i class="one-letter">F</i> and <i class="one-letter">K</i> is algebraic over <i class="one-letter">E</i>. Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠅</nemeth>. It suffices to show that <nemeth class="inline">⠨⠁</nemeth> is algebraic over some finite extension of <i class="one-letter">F</i>. Since <nemeth class="inline">⠨⠁</nemeth> is algebraic over <i class="one-letter">E</i>, it must be the zero of some polynomial <nemeth class="inline">⠏⠷⠭⠾⠀⠨⠅⠀⠨⠃⠴⠬⠨⠃⠂⠭⠬⠄⠄⠄⠬⠨⠃⠰⠝⠐⠭⠘⠝</nemeth> in <nemeth class="inline">⠠⠑⠈⠷⠭⠈⠾</nemeth>. Hence <nemeth class="inline">⠨⠁</nemeth> is algebraic over <nemeth class="inline">⠠⠋⠷⠨⠃⠴⠠⠀⠄⠄⠄⠀⠠⠀⠨⠃⠰⠝⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.22<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Since <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠜⠒⠻⠠⠀⠜⠶⠻⠠⠀⠜⠆⠂⠻⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>, <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾⠀⠸⠨⠂⠀⠸⠠⠟⠷⠜⠒⠻⠬⠜⠶⠻⠾</nemeth>. Since <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠲</nemeth>, <nemeth class="inline">⠈⠷⠸⠠⠟⠷⠜⠒⠻⠬⠜⠶⠻⠾⠒⠀⠸⠠⠟⠈⠾⠀⠨⠅⠀⠼⠆</nemeth> or 4. Since the degree of the minimal polynomial of <nemeth class="inline">⠜⠒⠻⠬⠜⠶⠻</nemeth> is 4, <nemeth class="inline">⠸⠠⠟⠷⠜⠒⠻⠠⠀⠜⠶⠻⠾⠀⠨⠅⠀⠸⠠⠟⠷⠜⠒⠻⠬⠜⠶⠻⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.27<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠋⠷⠨⠁⠾</nemeth> not in <i class="one-letter">F</i>. Then <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠏⠷⠨⠁⠾⠸⠌⠟⠷⠨⠁⠾</nemeth>, where <i class="one-letter">p</i> and <i class="one-letter">q</i> are polynomials in <nemeth class="inline">⠨⠁</nemeth> with <nemeth class="inline">⠟⠷⠨⠁⠾⠀⠌⠨⠅⠀⠼⠴</nemeth> and coefficients in <i class="one-letter">F</i>. If <nemeth class="inline">⠨⠃</nemeth> is algebraic over <i class="one-letter">F</i>, then there exists a polynomial <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth> such that <nemeth class="inline">⠋⠷⠨⠃⠾⠀⠨⠅⠀⠼⠴</nemeth>. Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠭⠬⠄⠄⠄⠬⠁⠰⠝⠐⠭⠘⠝</nemeth>. Then</p><div class="displaymath"><nemeth>⠼⠴⠀⠨⠅⠀⠋⠷⠨⠃⠾⠀⠨⠅⠀⠋⠷⠹⠏⠷⠨⠁⠾⠌⠟⠷⠨⠁⠾⠼⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠷⠹⠏⠷⠨⠁⠾⠌⠟⠷⠨⠁⠾⠼⠾⠬⠄⠄⠄⠬⠁⠰⠝⠐⠷⠹⠏⠷⠨⠁⠾⠌⠟⠷⠨⠁⠾⠼⠾⠘⠝</nemeth></div><p data-braille="continuation">. Now multiply both sides by <nemeth class="inline">⠟⠷⠨⠁⠾⠘⠝</nemeth> to show that there is a polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth> that has <nemeth class="inline">⠨⠁</nemeth> as a zero.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">21.5.28<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>See the comments following Theorem 21.1.13.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">22</span> <span class="title">Finite Fields</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">22.4</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Make sure that you have a field extension.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>There are eight elements in <nemeth class="inline">⠸⠠⠵⠆⠷⠨⠁⠾</nemeth>. Exhibit two more zeros of <nemeth class="inline">⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂</nemeth> other than <nemeth class="inline">⠨⠁</nemeth> in these eight elements.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Find an irreducible polynomial <nemeth class="inline">⠏⠷⠭⠾</nemeth> in <nemeth class="inline">⠸⠠⠵⠒⠈⠷⠭⠈⠾</nemeth> of degree <nemeth class="inline">⠼⠒</nemeth> and show that <nemeth class="inline">⠸⠠⠵⠒⠈⠷⠭⠈⠾⠸⠌⠨⠨⠷⠏⠷⠭⠾⠨⠨⠾</nemeth> has <nemeth class="inline">⠼⠆⠶</nemeth> elements.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠭⠘⠢⠐⠤⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠷⠭⠘⠲⠐⠬⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠭⠬⠂⠾</nemeth>; (c) <nemeth class="inline">⠭⠘⠔⠐⠤⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠷⠭⠘⠆⠐⠬⠭⠬⠂⠾⠷⠭⠘⠖⠐⠬⠭⠘⠒⠐⠬⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.8<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>True.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.11<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Use the fact that <nemeth class="inline">⠭⠘⠶⠐⠤⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠷⠭⠘⠒⠐⠬⠭⠬⠂⠾⠷⠭⠘⠒⠐⠬⠭⠘⠆⠐⠬⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.12<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>False.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.17<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠋⠈⠷⠭⠈⠾</nemeth>, then <nemeth class="inline">⠏⠷⠭⠾⠀⠈⠑⠀⠠⠑⠈⠷⠭⠈⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.18<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Since <nemeth class="inline">⠨⠁</nemeth> is algebraic over <i class="one-letter">F</i> of degree <i class="one-letter">n</i>, we can write any element <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠋⠷⠨⠁⠾</nemeth> uniquely as <nemeth class="inline">⠨⠃⠀⠨⠅⠀⠁⠴⠬⠁⠂⠨⠁⠬⠄⠄⠄⠬⠁⠰⠝⠤⠂⠐⠨⠁⠘⠝⠤⠂</nemeth> with <nemeth class="inline">⠁⠰⠊⠐⠀⠈⠑⠀⠠⠋</nemeth>. There are <nemeth class="inline">⠟⠘⠝</nemeth> possible <i class="one-letter">n</i>-tuples <nemeth class="inline">⠷⠁⠴⠠⠀⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠤⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">22.4.24<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Wilson's Theorem.</span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Factor <nemeth class="inline">⠭⠘⠏⠤⠂⠐⠤⠂</nemeth> over <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth>.</p></div>
            </div>
          </article>
        </section>
        <section class="chapter">
          <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">23</span> <span class="title">Galois Theory</span></div>
        </section>
        <section class="exercises">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">23.5</span> <span class="title">Exercises</span></div>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.1<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠸⠠⠵⠆</nemeth>; (c) <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.2<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) Separable over <nemeth class="inline">⠸⠠⠟</nemeth> since <nemeth class="inline">⠭⠘⠒⠐⠬⠆⠭⠘⠆⠐⠤⠭⠤⠆⠀⠨⠅⠀⠷⠭⠤⠂⠾⠷⠭⠬⠂⠾⠷⠭⠬⠆⠾</nemeth>; (c) not separable over <nemeth class="inline">⠸⠠⠵⠒</nemeth> since <nemeth class="inline">⠭⠘⠲⠐⠬⠭⠘⠆⠐⠬⠂⠀⠨⠅⠀⠷⠭⠬⠂⠾⠘⠆⠐⠷⠭⠬⠆⠾⠘⠆</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.3<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>If</p><div class="displaymath"><nemeth>⠈⠷⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾⠒⠀⠠⠛⠠⠋⠷⠼⠔⠾⠈⠾⠀⠨⠅⠀⠈⠷⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾⠒⠀⠠⠛⠠⠋⠷⠼⠒⠾⠈⠾⠸⠌⠈⠷⠠⠛⠠⠋⠷⠼⠔⠾⠒⠀⠠⠛⠠⠋⠷⠼⠒⠾⠈⠾⠀⠨⠅⠀⠼⠖⠸⠌⠆⠀⠨⠅⠀⠼⠒</nemeth></div><p data-braille="continuation">, then <nemeth class="inline">⠠⠛⠷⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾⠸⠌⠠⠛⠠⠋⠷⠼⠔⠾⠾⠀⠈⠱⠈⠱⠀⠸⠠⠵⠒</nemeth>. A generator for <nemeth class="inline">⠠⠛⠷⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾⠸⠌⠠⠛⠠⠋⠷⠼⠔⠾⠾</nemeth> is <nemeth class="inline">⠨⠎</nemeth>, where <nemeth class="inline">⠎⠰⠒⠰⠘⠖⠐⠷⠨⠁⠾⠀⠨⠅⠀⠨⠁⠘⠒⠘⠘⠖⠐⠀⠨⠅⠀⠨⠁⠘⠶⠆⠔</nemeth> for <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠛⠠⠋⠷⠼⠶⠆⠔⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.4<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠠⠎⠢</nemeth>; (c) <nemeth class="inline">⠠⠎⠒</nemeth>; (g) see Example 23.1.11.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.5<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>(a) <nemeth class="inline">⠸⠠⠟⠷⠊⠾</nemeth></p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.7<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>Let <i class="one-letter">E</i> be the splitting field of a cubic polynomial in <nemeth class="inline">⠠⠋⠈⠷⠭⠈⠾</nemeth>. Show that <nemeth class="inline">⠈⠷⠠⠑⠒⠀⠠⠋⠈⠾</nemeth> is less than or equal to <nemeth class="inline">⠼⠖</nemeth> and is divisible by <nemeth class="inline">⠼⠒</nemeth>. Since <nemeth class="inline">⠠⠛⠷⠠⠑⠸⠌⠠⠋⠾</nemeth> is a subgroup of <nemeth class="inline">⠠⠎⠒</nemeth> whose order is divisible by <nemeth class="inline">⠼⠒</nemeth>, conclude that this group must be isomorphic to <nemeth class="inline">⠸⠠⠵⠒</nemeth> or <nemeth class="inline">⠠⠎⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.9<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p><i class="one-letter">G</i> is a subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.16<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<p>True.</p></div>
            </div>
          </article>
          <article class="exercise-like">
            <h6 class="heading">
              <span class="codenumber">23.5.20<span class="period">.</span></span>
            </h6>
            <div class="solutions">
              <div class="hint solution-like"><span class="type">Hint</span>:<ol class="outerlist"><li>a. <p id="DGe">Clearly <nemeth class="inline">⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂</nemeth> are distinct since <nemeth class="inline">⠨⠕⠀⠌⠨⠅⠀⠼⠂</nemeth> or 0. To show that <nemeth class="inline">⠨⠕⠘⠊</nemeth> is a zero of <nemeth class="inline">⠨⠠⠋⠰⠏</nemeth>, calculate <nemeth class="inline">⠨⠠⠋⠰⠏⠐⠷⠨⠕⠘⠊⠐⠾</nemeth>.</p></li><li>b. <p id="jNn">The conjugates of <nemeth class="inline">⠨⠕</nemeth> are <nemeth class="inline">⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂</nemeth>. Define a map  <nemeth class="inline">⠨⠋⠰⠊⠐⠒⠀⠸⠠⠟⠷⠨⠕⠾⠀⠫⠕⠀⠸⠠⠟⠷⠨⠕⠘⠊⠐⠾</nemeth> by</p><div class="displaymath"><nemeth>⠨⠋⠰⠊⠐⠷⠁⠴⠬⠁⠂⠨⠕⠬⠄⠄⠄⠬⠁⠰⠏⠤⠆⠐⠨⠕⠘⠏⠤⠆⠐⠾⠀⠨⠅⠀⠁⠴⠬⠁⠂⠨⠕⠘⠊⠐⠬⠄⠄⠄⠬⠉⠰⠏⠤⠆⠐⠷⠨⠕⠘⠊⠐⠾⠘⠏⠤⠆</nemeth></div><p data-braille="continuation">, where <nemeth class="inline">⠁⠰⠊⠐⠀⠈⠑⠀⠸⠠⠟</nemeth>. Prove that <nemeth class="inline">⠨⠋⠰⠊</nemeth> is an isomorphism of fields. Show that <nemeth class="inline">⠨⠋⠆</nemeth> generates <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾</nemeth>.</p></li><li>c. <p id="PUw">Show that <nemeth class="inline">⠨⠷⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂⠐⠨⠾</nemeth> is a basis for <nemeth class="inline">⠸⠠⠟⠷⠨⠕⠾</nemeth> over <nemeth class="inline">⠸⠠⠟</nemeth>, and consider which linear combinations of <nemeth class="inline">⠨⠕⠠⠀⠨⠕⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠨⠕⠘⠏⠤⠂</nemeth> are left fixed by all elements of <nemeth class="inline">⠠⠛⠷⠸⠠⠟⠷⠨⠕⠾⠸⠌⠸⠠⠟⠾</nemeth>.</p></li></ol></div>
            </div>
          </article>
        </section>
      </section>
      <section class="appendix" id="MHr">
        <div class="none"><span class="type">Appendix</span> <span class="codenumber">C</span> <span class="title">Notation</span></div>
        <section class="introduction" id="mZo">
          <p id="TQr">The following table defines the notation used in this book. Page numbers or references refer to the first appearance of each symbol.</p>
        </section>
        <table class="notation-list">
          <tr>
            <th>Symbol</th>
            <th>Description</th>
            <th>Location</th>
          </tr>
          <tr>
            <td>\(a \in A\)</td>
            <td><i class="one-letter">a</i> is in the set <i class="one-letter">A</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\({\mathbb N}\)</td>
            <td>the natural numbers</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\({\mathbb Z}\)</td>
            <td>the integers</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\({\mathbb Q}\)</td>
            <td>the rational numbers</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\({\mathbb R}\)</td>
            <td>the real numbers</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\({\mathbb C}\)</td>
            <td>the complex numbers</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(A \subset B\)</td>
            <td><i class="one-letter">A</i> is a subset of <i class="one-letter">B</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\emptyset\)</td>
            <td>the empty set</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(A \cup B\)</td>
            <td>the union of sets <i class="one-letter">A</i> and <i class="one-letter">B</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(A \cap B\)</td>
            <td>the intersection of sets <i class="one-letter">A</i> and <i class="one-letter">B</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(A'\)</td>
            <td>complement of the set <i class="one-letter">A</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(A \setminus B\)</td>
            <td>difference between sets <i class="one-letter">A</i> and <i class="one-letter">B</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(A \times B\)</td>
            <td>Cartesian product of sets <i class="one-letter">A</i> and <i class="one-letter">B</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(A^n\)</td>
            <td><nemeth class="inline">⠠⠁⠈⠡⠄⠄⠄⠈⠡⠠⠁</nemeth> (<i class="one-letter">n</i> times)</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(id\)</td>
            <td>identity mapping</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(f^{-1}\)</td>
            <td>inverse of the function <i class="one-letter">f</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(a \equiv b \pmod{n}\)</td>
            <td><i class="one-letter">a</i> is congruent to <i class="one-letter">b</i> modulo <i class="one-letter">n</i></td>
            <td>Example 1.2.30</td>
          </tr>
          <tr>
            <td>\(n!\)</td>
            <td><i class="one-letter">n</i> factorial</td>
            <td>Example 2.1.4</td>
          </tr>
          <tr>
            <td>\(\binom{n}{k}\)</td>
            <td>binomial coefficient <nemeth class="inline">⠝⠖⠀⠸⠌⠷⠅⠖⠀⠷⠝⠤⠅⠾⠯⠾</nemeth></td>
            <td>Example 2.1.4</td>
          </tr>
          <tr>
            <td>\(a \mid b\)</td>
            <td><i class="one-letter">a</i> divides <i class="one-letter">b</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\gcd(a, b)\)</td>
            <td>greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\mathcal P(X)\)</td>
            <td>power set of <i class="one-letter">X</i></td>
            <td>Exercise 2.4.12</td>
          </tr>
          <tr>
            <td>\(\lcm(m,n)\)</td>
            <td>the least common multiple of <i class="one-letter">m</i> and <i class="one-letter">n</i></td>
            <td>Exercise 2.4.23</td>
          </tr>
          <tr>
            <td>\(\mathbb Z_n\)</td>
            <td>the integers modulo <i class="one-letter">n</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(U(n)\)</td>
            <td>group of units in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth></td>
            <td>Example 3.2.4</td>
          </tr>
          <tr>
            <td>\(\mathbb M_n(\mathbb R)\)</td>
            <td>the <nemeth class="inline">⠝⠈⠡⠝</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠗</nemeth></td>
            <td>Example 3.2.7</td>
          </tr>
          <tr>
            <td>\(\det A\)</td>
            <td>the determinant of <i class="one-letter">A</i></td>
            <td>Example 3.2.7</td>
          </tr>
          <tr>
            <td>\(GL_n(\mathbb R)\)</td>
            <td>the general linear group</td>
            <td>Example 3.2.7</td>
          </tr>
          <tr>
            <td>\(Q_8\)</td>
            <td>the group of quaternions</td>
            <td>Example 3.2.8</td>
          </tr>
          <tr>
            <td>\(\mathbb C^*\)</td>
            <td>the multiplicative group of complex numbers</td>
            <td>Example 3.2.9</td>
          </tr>
          <tr>
            <td>\(|G|\)</td>
            <td>the order of a group</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\mathbb R^*\)</td>
            <td>the multiplicative group of real numbers</td>
            <td>Example 3.3.1</td>
          </tr>
          <tr>
            <td>\(\mathbb Q^*\)</td>
            <td>the multiplicative group of rational numbers</td>
            <td>Example 3.3.1</td>
          </tr>
          <tr>
            <td>\(SL_n(\mathbb R)\)</td>
            <td>the special linear group</td>
            <td>Example 3.3.3</td>
          </tr>
          <tr>
            <td>\(Z(G)\)</td>
            <td>the center of a group</td>
            <td>Exercise 3.5.48</td>
          </tr>
          <tr>
            <td>\(\langle a \rangle\)</td>
            <td>cyclic group generated by <i class="one-letter">a</i></td>
            <td>Theorem 4.1.3</td>
          </tr>
          <tr>
            <td>\(|a|\)</td>
            <td>the order of an element <i class="one-letter">a</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\cis \theta\)</td>
            <td>
              <nemeth class="inline">⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹</nemeth>
            </td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\mathbb T\)</td>
            <td>the circle group</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(S_n\)</td>
            <td>the symmetric group on <i class="one-letter">n</i> letters</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\((a_1, a_2, \ldots, a_k )\)</td>
            <td>cycle of length <i class="one-letter">k</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(A_n\)</td>
            <td>the alternating group on <i class="one-letter">n</i> letters</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(D_n\)</td>
            <td>the dihedral group</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\([G:H]\)</td>
            <td>index of a subgroup <i class="one-letter">H</i> in a group <i class="one-letter">G</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\mathcal L_H\)</td>
            <td>the set of left cosets of a subgroup <i class="one-letter">H</i> in a group <i class="one-letter">G</i></td>
            <td>Theorem 6.1.8</td>
          </tr>
          <tr>
            <td>\(\mathcal R_H\)</td>
            <td>the set of right cosets of a subgroup <i class="one-letter">H</i> in a group <i class="one-letter">G</i></td>
            <td>Theorem 6.1.8</td>
          </tr>
          <tr>
            <td>\(a \notdivide b\)</td>
            <td><i class="one-letter">a</i> does not divide <i class="one-letter">b</i></td>
            <td>Theorem 6.3.3</td>
          </tr>
          <tr>
            <td>\(d(\mathbf x, \mathbf y)\)</td>
            <td>Hamming distance between <nemeth class="inline">⠸⠭</nemeth> and <nemeth class="inline">⠸⠽</nemeth></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(d_{\min}\)</td>
            <td>the minimum distance of a code</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(w(\mathbf x)\)</td>
            <td>the weight of <nemeth class="inline">⠸⠭</nemeth></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\mathbb M_{m \times n}(\mathbf Z_2)\)</td>
            <td>the set of <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrices with entries in <nemeth class="inline">⠸⠠⠵⠆</nemeth></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\Null(H)\)</td>
            <td>null space of a matrix <i class="one-letter">H</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\delta_{ij}\)</td>
            <td>Kronecker delta</td>
            <td>Lemma 8.3.5</td>
          </tr>
          <tr>
            <td>\(G \cong H\)</td>
            <td><i class="one-letter">G</i> is isomorphic to a group <i class="one-letter">H</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\aut(G)\)</td>
            <td>automorphism group of a group <i class="one-letter">G</i></td>
            <td>Exercise 9.4.37</td>
          </tr>
          <tr>
            <td>\(i_g\)</td>
            <td>
              <nemeth class="inline">⠊⠰⠛⠐⠷⠭⠾⠀⠨⠅⠀⠛⠭⠛⠘⠤⠼⠂</nemeth>
            </td>
            <td>Exercise 9.4.41</td>
          </tr>
          <tr>
            <td>\(\inn(G)\)</td>
            <td>inner automorphism group of a group <i class="one-letter">G</i></td>
            <td>Exercise 9.4.41</td>
          </tr>
          <tr>
            <td>\(\rho_g\)</td>
            <td>right regular representation</td>
            <td>Exercise 9.4.44</td>
          </tr>
          <tr>
            <td>\(G/N\)</td>
            <td>factor group of <i class="one-letter">G</i> mod <i class="one-letter">N</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(G'\)</td>
            <td>commutator subgroup of <i class="one-letter">G</i></td>
            <td>Exercise 10.4.14</td>
          </tr>
          <tr>
            <td>\(\ker \phi\)</td>
            <td>kernel of <nemeth class="inline">⠨⠋</nemeth></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\((a_{ij})\)</td>
            <td>matrix</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(O(n)\)</td>
            <td>orthogonal group</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\| {\mathbf x} \|\)</td>
            <td>length of a vector <nemeth class="inline">⠸⠭</nemeth></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(SO(n)\)</td>
            <td>special orthogonal group</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(E(n)\)</td>
            <td>Euclidean group</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\({\mathcal O}_x\)</td>
            <td>orbit of <i class="one-letter">x</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(X_g\)</td>
            <td>fixed point set of <i class="one-letter">g</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(G_x\)</td>
            <td>isotropy subgroup of <i class="one-letter">x</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(N(H)\)</td>
            <td>normalizer of s subgroup <i class="one-letter">H</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\mathbb H\)</td>
            <td>the ring of quaternions</td>
            <td>Example 16.1.7</td>
          </tr>
          <tr>
            <td>\(\mathbb Z[i]\)</td>
            <td>the Gaussian integers</td>
            <td>Example 16.2.1</td>
          </tr>
          <tr>
            <td>\(\chr R\)</td>
            <td>characteristic of a ring <i class="one-letter">R</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\mathbb Z_{(p)}\)</td>
            <td>ring of integers localized at <i class="one-letter">p</i></td>
            <td>Exercise 16.7.33</td>
          </tr>
          <tr>
            <td>\(\deg f(x)\)</td>
            <td>degree of a polynomial</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(R[x]\)</td>
            <td>ring of polynomials over a ring <i class="one-letter">R</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(R[x_1, x_2, \ldots, x_n]\)</td>
            <td>ring of polynomials in <i class="one-letter">n</i> indeterminants</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\phi_\alpha\)</td>
            <td>evaluation homomorphism at <nemeth class="inline">⠨⠁</nemeth></td>
            <td>Theorem 17.1.5</td>
          </tr>
          <tr>
            <td>\(\mathbb Q(x)\)</td>
            <td>field of rational functions over <nemeth class="inline">⠸⠠⠟</nemeth></td>
            <td>Example 18.1.5</td>
          </tr>
          <tr>
            <td>\(\nu(a)\)</td>
            <td>Euclidean valuation of <i class="one-letter">a</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(F(x)\)</td>
            <td>field of rational functions in <i class="one-letter">x</i></td>
            <td>Item 18.4.7.a</td>
          </tr>
          <tr>
            <td>\(F(x_1, \dots, x_n)\)</td>
            <td>field of rational functions in <nemeth class="inline">⠭⠂⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐</nemeth></td>
            <td>Item 18.4.7.b</td>
          </tr>
          <tr>
            <td>\(a \preceq b\)</td>
            <td><i class="one-letter">a</i> is less than <i class="one-letter">b</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(a \vee b\)</td>
            <td>join of <i class="one-letter">a</i> and <i class="one-letter">b</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(a \wedge b\)</td>
            <td>meet of <i class="one-letter">a</i> and <i class="one-letter">b</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(I\)</td>
            <td>largest element in a lattice</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(O\)</td>
            <td>smallest element in a lattice</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(a'\)</td>
            <td>complement of <i class="one-letter">a</i> in a lattice</td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\dim V\)</td>
            <td>dimension of a vector space <i class="one-letter">V</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(U \oplus V\)</td>
            <td>direct sum of vector spaces <i class="one-letter">U</i> and <i class="one-letter">V</i></td>
            <td>Item 20.5.17.b</td>
          </tr>
          <tr>
            <td>\(\Hom(V, W)\)</td>
            <td>set of all linear transformations from <i class="one-letter">U</i> into <i class="one-letter">V</i></td>
            <td>Item 20.5.18.a</td>
          </tr>
          <tr>
            <td>\(V^*\)</td>
            <td>dual of a vector space <i class="one-letter">V</i></td>
            <td>Item 20.5.18.b</td>
          </tr>
          <tr>
            <td>\(F( \alpha_1, \ldots, \alpha_n)\)</td>
            <td>smallest field containing <i class="one-letter">F</i> and <nemeth class="inline">⠨⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠁⠰⠝⠐</nemeth></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\([E:F]\)</td>
            <td>dimension of a field extension of <i class="one-letter">E</i> over <i class="one-letter">F</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(\gf(p^n)\)</td>
            <td>Galois field of order <nemeth class="inline">⠏⠘⠝</nemeth></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(F^*\)</td>
            <td>multiplicative group of a field <i class="one-letter">F</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(G(E/F)\)</td>
            <td>Galois group of <i class="one-letter">E</i> over <i class="one-letter">F</i></td>
            <td>Paragraph</td>
          </tr>
          <tr>
            <td>\(F_{\{\sigma_i \}}\)</td>
            <td>field fixed by the automorphism <nemeth class="inline">⠨⠎⠰⠊</nemeth></td>
            <td>Proposition 23.2.1</td>
          </tr>
          <tr>
            <td>\(F_G\)</td>
            <td>field fixed by the automorphism group <i class="one-letter">G</i></td>
            <td>Corollary 23.2.2</td>
          </tr>
          <tr>
            <td>\(\Delta^2\)</td>
            <td>discriminant of a polynomial</td>
            <td>Exercise 23.5.22</td>
          </tr>
        </table>
      </section>
      <section class="index" id="index-1">
        <div class="centerpage">
          <span class="title">Index</span>
        </div>
        <div class="indexletter" id="indexletter-a">
          <div class="indexitem">Abel, Niels Henrik<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Abelian group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Ackermann's function<span class="indexknowl">, Exercise</span></div>
          <div class="indexitem">Adleman, L.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Algebraic closure<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Algebraic extension<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Algebraic number<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Algorithm</div>
          <div class="subindexitem">division<span class="indexknowl">, Theorem</span></div>
          <div class="subindexitem">Euclidean<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Ascending chain condition<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Associate elements<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Atom<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Automorphism</div>
          <div class="subindexitem">inner<span class="indexknowl">, Exercise</span></div>
        </div>
        <div class="indexletter" id="indexletter-b">
          <div class="indexitem">Basis of a lattice<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Bieberbach, L.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Binary operation<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Binary symmetric channel<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Boole, George<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Boolean algebra</div>
          <div class="subindexitem">atom in a<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">finite<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">isomorphism<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Boolean function<span class="indexknowl">, Paragraph Exercise</span></div>
          <div class="indexitem">Burnside's Counting Theorem<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Burnside, William<span class="indexknowl">, Paragraph Paragraph Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-c">
          <div class="indexitem">Cancellation law</div>
          <div class="subindexitem">for groups<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">for integral domains<span class="indexknowl">, Proposition</span></div>
          <div class="indexitem">Cardano, Gerolamo<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Carmichael numbers<span class="indexknowl">, Exercise</span></div>
          <div class="indexitem">Cauchy's Theorem<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Cauchy, Augustin-Louis<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Cayley table<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Cayley's Theorem<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Cayley, Arthur<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Centralizer</div>
          <div class="subindexitem">of a subgroup<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Characteristic of a ring<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Chinese Remainder Theorem</div>
          <div class="subindexitem">for integers<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Cipher<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Ciphertext<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Circuit</div>
          <div class="subindexitem">parallel<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">series<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">series-parallel<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Class equation<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Code</div>
          <div class="subindexitem">
            <abbr class="acronym">BCH</abbr>
            <span class="indexknowl">, Paragraph</span>
          </div>
          <div class="subindexitem">cyclic<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">group<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">linear<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">minimum distance of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">polynomial<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Commutative diagrams<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Commutative rings<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Composite integer<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Composition series<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Congruence modulo <i class="one-letter">n</i><span class="indexknowl">, Example</span></div>
          <div class="indexitem">Conjugacy classes<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Conjugate elements<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Conjugate, complex<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Conjugation<span class="indexknowl">, Example</span></div>
          <div class="indexitem">Constructible number<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Correspondence Theorem</div>
          <div class="subindexitem">for groups<span class="indexknowl">, Theorem</span></div>
          <div class="subindexitem">for rings<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Coset</div>
          <div class="subindexitem">leader<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">left<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">representative<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">right<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Coset decoding<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Cryptanalysis<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Cryptosystem</div>
          <div class="subindexitem">affine<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">monoalphabetic<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">polyalphabetic<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">private key<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">public key<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">
            <abbr class="acronym">RSA</abbr>
            <span class="indexknowl">, Paragraph</span>
          </div>
          <div class="subindexitem">single key<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Cycle</div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">disjoint<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-d">
          <div class="indexitem">De Morgan's laws</div>
          <div class="subindexitem">for Boolean algebras<span class="indexknowl">, Item</span></div>
          <div class="subindexitem">for sets<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">De Morgan, Augustus<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Decoding table<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Deligne, Pierre<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">DeMoivre's Theorem<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Derivative<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Determinant, Vandermonde<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Dickson, L. E.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Diffie, W.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Direct product of groups</div>
          <div class="subindexitem">external<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">internal<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Discriminant</div>
          <div class="subindexitem">of the cubic equation<span class="indexknowl">, Exercise</span></div>
          <div class="subindexitem">of the quadratic equation<span class="indexknowl">, Exercise</span></div>
          <div class="indexitem">Division algorithm</div>
          <div class="subindexitem">for integers<span class="indexknowl">, Theorem</span></div>
          <div class="subindexitem">for polynomials<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Division ring<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Domain</div>
          <div class="subindexitem">Euclidean<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">principal ideal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">unique factorization<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Doubling the cube<span class="indexknowl">, Paragraphs</span></div>
        </div>
        <div class="indexletter" id="indexletter-e">
          <div class="indexitem">Eisenstein's Criterion<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Element</div>
          <div class="subindexitem">associate<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">identity<span class="indexknowl">, Item</span></div>
          <div class="subindexitem">inverse<span class="indexknowl">, Item</span></div>
          <div class="subindexitem">irreducible<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">order of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">prime<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">primitive<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">transcendental<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Equivalence class<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Equivalence relation<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Euclidean algorithm<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Euclidean domain<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Euclidean group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Euclidean inner product<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Euclidean valuation<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Euler <nemeth class="inline">⠨⠋</nemeth>-function<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Euler, Leonhard<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Extension</div>
          <div class="subindexitem">algebraic<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">field<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">finite<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">normal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">radical<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">separable<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="subindexitem">simple<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">External direct product<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-f">
          <div class="indexitem">Faltings, Gerd<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Feit, W.<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Fermat's factorizationalgorithm<span class="indexknowl">, Exercise</span></div>
          <div class="indexitem">Fermat's Little Theorem<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Fermat, Pierre de<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Ferrari, Ludovico<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Ferro, Scipione del<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Field<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">algebraically closed<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">base<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">extension<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">fixed<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">Galois<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">of fractions<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">of quotients<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">splitting<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Finitely generated group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Fior, Antonio<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">First Isomorphism Theorem</div>
          <div class="subindexitem">for groups<span class="indexknowl">, Theorem</span></div>
          <div class="subindexitem">for rings<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Fixed point set<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Freshman's Dream<span class="indexknowl">, Lemma</span></div>
          <div class="indexitem">Function</div>
          <div class="subindexitem">bijective<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">Boolean<span class="indexknowl">, Paragraph Exercise</span></div>
          <div class="subindexitem">composition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">domain of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">identity<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">injective<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">invertible<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">one-to-one<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">onto<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">range of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">surjective<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">switching<span class="indexknowl">, Paragraph Exercise</span></div>
          <div class="indexitem">Fundamental Theorem</div>
          <div class="subindexitem">of Algebra<span class="indexknowl">, Theorem Theorem</span></div>
          <div class="subindexitem">of Arithmetic<span class="indexknowl">, Theorem</span></div>
          <div class="subindexitem">of Finite Abelian Groups<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Fundamental Theorem of Galois Theory<span class="indexknowl">, Theorem</span></div>
        </div>
        <div class="indexletter" id="indexletter-g">
          <div class="indexitem"><i class="one-letter">G</i>-equivalent<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem"><i class="one-letter">G</i>-set<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Galois field<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Galois group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Galois, Évariste<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Gauss's Lemma<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Gauss, Karl Friedrich<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Gaussian integers<span class="indexknowl">, Example</span></div>
          <div class="indexitem">Generator of a cyclic subgroup<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Generators for a group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Glide reflection<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Gorenstein, Daniel<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Greatest common divisor</div>
          <div class="subindexitem">of two integers<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">of two polynomials<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Greatest lower bound<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Greiss, R.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Grothendieck, Alexander<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Group</div>
          <div class="subindexitem">abelian<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">action<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">alternating<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">center of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">circle<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">commutative<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">cyclic<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">dihedral<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">Euclidean<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">factor<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">finite<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">finitely generated<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">Galois<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">general linear<span class="indexknowl">, Example Paragraph</span></div>
          <div class="subindexitem">generators of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">homomorphism of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">infinite<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">isomorphic<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">isomorphism of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">nonabelian<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">noncommutative<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">of units<span class="indexknowl">, Example</span></div>
          <div class="subindexitem">order of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">orthogonal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem"><i class="one-letter">p</i>-group<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="subindexitem">permutation<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">point<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">quaternion<span class="indexknowl">, Example</span></div>
          <div class="subindexitem">quotient<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">simple<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="subindexitem">solvable<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">space<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">special linear<span class="indexknowl">, Example Paragraph</span></div>
          <div class="subindexitem">special orthogonal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">symmetric<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">symmetry<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Gödel, Kurt<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-h">
          <div class="indexitem">Hamming distance<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Hamming, R.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Hellman, M.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Hilbert, David<span class="indexknowl">, Paragraph Paragraph Paragraph Paragraph</span></div>
          <div class="indexitem">Homomorphic image<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Homomorphism</div>
          <div class="subindexitem">canonical<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="subindexitem">evaluation<span class="indexknowl">, Example Paragraph</span></div>
          <div class="subindexitem">kernel of a group<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">kernel of a ring<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">natural<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="subindexitem">of groups<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">ring<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-i">
          <div class="indexitem">Ideal</div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">maximal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">one-sided<span class="indexknowl">, Remark</span></div>
          <div class="subindexitem">prime<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">principal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">trivial<span class="indexknowl">, Example</span></div>
          <div class="subindexitem">two-sided<span class="indexknowl">, Remark</span></div>
          <div class="indexitem">Indeterminate<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Index of a subgroup<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Induction</div>
          <div class="subindexitem">first principle of<span class="indexknowl">, Principle</span></div>
          <div class="subindexitem">second principle of<span class="indexknowl">, Principle</span></div>
          <div class="indexitem">Infimum<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Inner product<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Integral domain<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Internal direct product<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">International standard book number<span class="indexknowl">, Exercise</span></div>
          <div class="indexitem">Irreducible element<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Irreducible polynomial<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Isometry<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Isomorphism</div>
          <div class="subindexitem">of Boolean algebras<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">of groups<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">ring<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-j">
          <div class="indexitem">Join<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Jordan, C.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Jordan-Hölder Theorem<span class="indexknowl">, Theorem</span></div>
        </div>
        <div class="indexletter" id="indexletter-k">
          <div class="indexitem">Kernel</div>
          <div class="subindexitem">of a group homomorphism<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">of a ring homomorphism<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Key</div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">private<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">public<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">single<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Klein, Felix<span class="indexknowl">, Paragraph Paragraph Paragraph</span></div>
          <div class="indexitem">Kronecker delta<span class="indexknowl">, Lemma Paragraph</span></div>
          <div class="indexitem">Kronecker, Leopold<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Kummer, Ernst<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-l">
          <div class="indexitem">Lagrange's Theorem<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Lagrange, Joseph-Louis<span class="indexknowl">, Paragraph Paragraph Paragraph</span></div>
          <div class="indexitem">Laplace, Pierre-Simon<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Lattice</div>
          <div class="subindexitem">completed<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">distributive<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Lattice of points<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Lattices, Principle of Duality for<span class="indexknowl">, Axiom</span></div>
          <div class="indexitem">Least upper bound<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Left regular representation<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Lie, Sophus<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Linear combination<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Linear dependence<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Linear independence<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Linear map<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Linear transformation</div>
          <div class="subindexitem">definition of<span class="indexknowl">, Example Paragraph</span></div>
          <div class="indexitem">Lower bound<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-m">
          <div class="indexitem">Mapping<span class="indexknowl">. <span class="see"><em>See</em> Function</span></span></div>
          <div class="indexitem">Matrix</div>
          <div class="subindexitem">distance-preserving<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">generator<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">inner product-preserving<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">invertible<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">length-preserving<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">nonsingular<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">null space of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">orthogonal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">parity-check<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">similar<span class="indexknowl">, Example</span></div>
          <div class="subindexitem">unimodular<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Matrix, Vandermonde<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Maximal ideal<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Maximum-likelihood decoding<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Meet<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Minimal generator polynomial<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Minimal polynomial<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Minkowski, Hermann<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Monic polynomial<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Mordell-Weil conjecture<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Multiplicity of a root<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-n">
          <div class="indexitem">Noether, A. Emmy<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Noether, Max<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Normal extension<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Normal series of a group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Normal subgroup<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Normalizer<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem"><i class="one-letter">n</i>th root of unity<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Null space</div>
          <div class="subindexitem">of a matrix<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-o">
          <div class="indexitem">Odd Order Theorem<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Orbit<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Orthogonal group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Orthogonal matrix<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Orthonormal set<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-p">
          <div class="indexitem">Partial order<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Partially ordered set<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Partitions<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Permutation</div>
          <div class="subindexitem">cycle structure of<span class="indexknowl">, Exercise</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Example Paragraph</span></div>
          <div class="subindexitem">even<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">odd<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Permutation group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Plaintext<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Polynomial</div>
          <div class="subindexitem">code<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">content of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">degree of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">error<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">error-locator<span class="indexknowl">, Exercise</span></div>
          <div class="subindexitem">greatest common divisor of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">irreducible<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">leading coefficient of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">minimal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">minimal generator<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">monic<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">primitive<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">root of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">separable<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">zero of<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Polynomial separable<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Polynomial!in <i class="one-letter">n</i> indeterminates<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Poset</div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">largest element in<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">smallest element in<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Power set<span class="indexknowl">, Example</span></div>
          <div class="indexitem">Prime element<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Prime ideal<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Prime integer<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Primitive element<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Primitive Element Theorem<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Primitive <i class="one-letter">n</i>th root of unity<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Primitive polynomial<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Principal ideal<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Principal ideal domain (<abbr class="acronym">PID</abbr>)<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Principal series<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Pseudoprime<span class="indexknowl">, Exercise</span></div>
        </div>
        <div class="indexletter" id="indexletter-q">
          <div class="indexitem">Quaternions<span class="indexknowl">, Example Example</span></div>
        </div>
        <div class="indexletter" id="indexletter-r">
          <div class="indexitem">Resolvent cubic equation<span class="indexknowl">, Exercise</span></div>
          <div class="indexitem">Rigid motion<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Ring</div>
          <div class="subindexitem">characteristic of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">commutative<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">division<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">factor<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">homomorphism<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">isomorphism<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">Noetherian<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">quotient<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">with identity<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">with unity<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Rivest, R.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem"><abbr class="acronym">RSA</abbr> cryptosystem<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Ruffini, P.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Russell, Bertrand<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-s">
          <div class="indexitem">Scalar product<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Second Isomorphism Theorem</div>
          <div class="subindexitem">for groups<span class="indexknowl">, Theorem</span></div>
          <div class="subindexitem">for rings<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Shamir, A.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Shannon, C.<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Sieve of Eratosthenes<span class="indexknowl">, Exercise</span></div>
          <div class="indexitem">Simple extension<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Simple group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Simple root<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Solvability by radicals<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Spanning set<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Splitting field<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Squaring the circle is impossible<span class="indexknowl">, Paragraphs</span></div>
          <div class="indexitem">Standard decoding<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Subgroup</div>
          <div class="subindexitem">centralizer<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">commutator<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">cyclic<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">index of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">isotropy<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">normal<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">normalizer of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">proper<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">stabilizer<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">Sylow<i class="one-letter">p</i>-subgroup<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">translation<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">trivial<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Subgroup!<i class="one-letter">p</i>-subgroup<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Subnormal series of a group<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Subring<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Supremum<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Switch</div>
          <div class="subindexitem">closed<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">open<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Switching function<span class="indexknowl">, Paragraph Exercise</span></div>
          <div class="indexitem">Sylow <i class="one-letter">p</i>-subgroup<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Sylow, Ludvig<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Syndrome of a code<span class="indexknowl">, Paragraph Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-t">
          <div class="indexitem">Tartaglia<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Third Isomorphism Theorem</div>
          <div class="subindexitem">for groups<span class="indexknowl">, Theorem</span></div>
          <div class="subindexitem">for rings<span class="indexknowl">, Theorem</span></div>
          <div class="indexitem">Thompson, J.<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Transcendental element<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Transcendental number<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Transposition<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Trisection of an angle<span class="indexknowl">, Subsection</span></div>
        </div>
        <div class="indexletter" id="indexletter-u">
          <div class="indexitem">Unique factorization domain (<abbr class="acronym">UFD</abbr>)<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Unit<span class="indexknowl">, Paragraph Paragraph</span></div>
          <div class="indexitem">Universal Product Code<span class="indexknowl">, Exercise</span></div>
          <div class="indexitem">Upper bound<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-v">
          <div class="indexitem">Vandermonde determinant<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Vandermonde matrix<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Vector space</div>
          <div class="subindexitem">basis of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">definition of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">dimension of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">subspace of<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-w">
          <div class="indexitem">Weight of a codeword<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Weil, André<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Well-defined map<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Well-ordered set<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Whitehead, Alfred North<span class="indexknowl">, Paragraph</span></div>
        </div>
        <div class="indexletter" id="indexletter-z">
          <div class="indexitem">Zero</div>
          <div class="subindexitem">multiplicity of<span class="indexknowl">, Paragraph</span></div>
          <div class="subindexitem">of a polynomial<span class="indexknowl">, Paragraph</span></div>
          <div class="indexitem">Zero divisor<span class="indexknowl">, Paragraph</span></div>
        </div>
      </section>
      <section class="colophon" id="colophon-2">
        <div class="centerpage">
          <span class="title">Colophon</span>
        </div>
        <p id="uSi">This book was authored and produced with <a class="external" href="https://pretextbook.org" target="_blank">PreTeXt</a>.</p>
      </section>
    </section>
  </body>
</html>