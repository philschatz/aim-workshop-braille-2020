           ,ab/ract ,algebra
          ,!ory & ,applica;ns
          ,?omas ;,w4 ,judson
    ,de"p;t ( ,ma!matics & ,/ati/ics
   ,/eph5 ;,f4 ,au/9 ,/ate ,univ}s;y
            ,augu/ #b1 #bjbj


















                                      #a
                ,3t5ts 

  ,colophon ''''''''''''''''''''''''' #a
  ,ac"kl$ge;ts '''''''''''''''''''''' #b
  ,preface '''''''''''''''''''''''''' #d
  ,*apt} #a ,prelim9>ies '''''''''''' #h
      ,sec;n #a4a ,a ,%ort ,note
        on ,pro(s ''''''''''''''''''' #h
        ,subsec;n #a4a4a ,"s
          ,cau;ns & ,su7es;ns '''''' #ab
      ,sec;n #a4b ,sets &
        ,equival;e ,rela;ns '''''''' #ae
        ,subsec;n #a4b4a ,set ,!ory  #ae
        ,subsec;n #a4b4b ,c>tesian
          ,products & ,mapp+s '''''' #bb
        ,subsec;n #a4b4c
          ,equival;e ,rela;ns & 
          ,"pi;ns '''''''''''''''''' #cf
      ,sec;n #a4f ,sage '''''''''''' #fj
        ,subsec;n #a4f4a ,execut+
          ,sage ,comm&s '''''''''''' #fa
        ,subsec;n #a4f4b ,imm ,help  #ff
        ,subsec;n #a4f4c ,annotat+
          ,yr ,"w '''''''''''''''''' #fi
        ,subsec;n #a4f4d ,li/s   #gj  #b
        ,subsec;n #a4f4e ,li/s ( 
          ,9teg}s '''''''''''''''''' #ge
        ,subsec;n #a4f4f ,sav+ &
          ,%>+ ,yr ,"w ''''''''''''' #gg
  ,*apt} #b ,! ,9teg}s ''''''''''''' #hj
      ,sec;n #b4a ,ma!matical 
        ,9duc;n '''''''''''''''''''' #hj
      ,sec;n #b4b ,! ,divi.n 
        ,algori?m '''''''''''''''''' #hg
        ,subsec;n #b4b4a ,!
          ,euclid1n ,algori?m '''''' #ib
        ,subsec;n #b4b4b ,prime 
          ,numb}s '''''''''''''''''' #id
        ,subsec;n #b4b4c
          ,hi/orical ,note ''''''''' #ih
      ,sec;n #b4g ,sage ''''''''''' #aab
        ,subsec;n #b4g4a ,divi.n 
          ,algori?m ''''''''''''''' #aac
        ,subsec;n #b4g4b ,grte/
          ,common ,divisor '''''''' #aaf
        ,subsec;n #b4g4c ,primes &
          ,factor+ '''''''''''''''' #aah
  ,*apt} #c ,gr|ps '''''''''''''''' #abh
      ,sec;n #c4a ,9teg}
        ,equival;e ,classes &         #c
        ,symmetries ''''''''''''''' #abh
        ,subsec;n #c4a4a ,!
          ,9teg}s mod .2;n '''''''' #abi
        ,subsec;n #c4a4b 
          ,symmetries ''''''''''''' #acd
      ,sec;n #c4b ,def9i;ns & 
        ,examples ''''''''''''''''' #ach
        ,subsec;n #c4b4a ,basic
          ,prop}ties ( ,gr|ps ''''' #adf
        ,subsec;n #c4b4b
          ,hi/orical ,note '''''''' #aec
      ,sec;n #c4c ,subgr|ps ''''''' #aed
        ,subsec;n #c4c4a ,def9i;ns
          & ,examples ''''''''''''' #aed
        ,subsec;n #c4c4b ,"s
          ,subgr|p ,!orems '''''''' #aei
      ,sec;n #c4h ,sage ''''''''''' #ahb
        ,subsec;n #c4h4a ,9teg}s
          mod ;n '''''''''''''''''' #ahc
        ,subsec;n #c4h4b ,gr|ps ( 
          symmetries '''''''''''''' #ahi
        ,subsec;n #c4h4c 
          ,quat}nions ''''''''''''' #aif
        ,subsec;n #c4h4d ,subgr|ps  #bja
  ,*apt} #d ,cyclic ,gr|ps '''' #bjg  #d
      ,sec;n #d4a ,cyclic ,subgr|ps #bjg
        ,subsec;n #d4a4a ,subgr|ps
          ( ,cyclic ,gr|ps '''''''' #bac
      ,sec;n #d4b ,multiplicative
        ,gr|p ( ,complex ,numb}s '' #bah
        ,subsec;n #d4b4a ,!
          ,circle ,gr|p & ! ,roots
          ( ,un;y ''''''''''''''''' #bbe
      ,sec;n #d4c ,! ,me?od (
        ,rep1t$ ,squ>es ''''''''''' #bbh
      ,sec;n #d4h ,sage ''''''''''' #bdi
        ,subsec;n #d4h4a ,9f9ite
          ,cyclic ,gr|ps '''''''''' #bdi
        ,subsec;n #d4h4b ,additive
          ,cyclic ,gr|ps '''''''''' #bea
        ,subsec;n #d4h4c ,ab/ract
          ,multiplicative ,cyclic 
          ,gr|ps '''''''''''''''''' #bfb
        ,subsec;n #d4h4d ,cyclic
          ,p}muta;n ,gr|ps '''''''' #bfh
        ,subsec;n #d4h4e ,cayley 
          ,tables ''''''''''''''''' #bgb
        ,subsec;n #d4h4f ,complex
          ,roots ( ,un;y '''''''''' #bgd
  ,*apt} #e ,p}muta;n ,gr|ps '' #bhe  #e
      ,sec;n #e4a ,def9i;ns & 
        ,nota;n ''''''''''''''''''' #bhf
        ,subsec;n #e4a4a ,cycle 
          ,nota;n ''''''''''''''''' #bhi
        ,subsec;n #e4a4b 
          ,transposi;ns ''''''''''' #bie
        ,subsec;n #e4a4c ,!
          ,alt}nat+ ,gr|ps '''''''' #cjj
        ,subsec;n #e4a4d
          ,hi/orical ,note '''''''' #cjb
      ,sec;n #e4b ,dih$ral ,gr|ps   #cjc
        ,subsec;n #e4b4a ,! ,mo;n
          ,gr|p ( a ,cube ''''''''' #cji
      ,sec;n #e4e ,sage ''''''''''' #cbe
        ,subsec;n #e4e4a ,p}muta;n
          ,gr|ps & ,ele;ts '''''''' #cbf
        ,subsec;n #e4e4b
          ,prop}ties ( ,p}muta;n 
          ,ele;ts ''''''''''''''''' #ccg
        ,subsec;n #e4e4c ,mo;n
          ,gr|p ( a ,cube ''''''''' #cdf



                                      #f
               ,colophon

  ~1,$i;n ,annual ,$i;n #bjbj
  ~1,website ab/ract4pugets.d4$u
  ~c#aiig,-#bjbj ,?omas ;,w4 ,judson1
,rob}t ,a4 ,beez}
  ,p}mis.n is grant$ to copy1 4tribute
&_/or modify ? docu;t "u ! t}ms ( !
,,gnu ,free ,docu;ta;n ,lic5se1 ,v}.n
#a4b or any lat} v}.n publi%$ by ! ,free
,s(tw>e ,f.da;n2 ) no ,9v>iant ,sec;ns1
no ,front-,cov} ,texts1 & no ,back-,cov}
,texts4  ,a copy ( ! lic5se is 9clud$ 9
! app5dix 5titl$ 8,,gnu ,free ,docu;ta;n
,lic5se40









                                      #a
              ,ac"kl$ge;ts

  ,i wd l to ac"kl$ge ! foll{+ review}s
= _! help;l com;ts & su7es;ns4

_4
    ,david ,&}son1 ,univ}s;y ( ,t5;see1
  ,knoxville
_4
    ,rob}t ,beez}1 ,univ}s;y ( ,puget
  ,s.d
_4
    ,myron ,hood1 ,cali=nia ,polyte*nic
  ,/ate ,univ}s;y
_4
    ,h}b}t ,kasube1 ,bradley ,univ}s;y
_4
    ,john ,kurtzke1 ,univ}s;y ( ,portl&
_4
    ,9essa ,levi1 ,univ}s;y ( ,l|isville
_4
    ,ge(frey ,mason1 ,univ}s;y (
  ,cali=nia1 ,santa ,cruz
_4
    ,bruce ,m}icle1 ,mankato ,/ate    #b
  ,univ}s;y
_4
    ,kimmo ,ros5?al1 ,union ,college
_4
    ,m>k ,teply1 ,univ}s;y ( ,wiscons9

  ,i wd al l to ?ank ,/eve ,quigley1
,m>nie ,pommett1 ,ca?ie ,gri691 ,kelle
,k>%ick1 & ! re/ ( ! /aff at ,,pws
,publi%+ = _! guid.e "?|t ? project4 ,x
has be5 a pl1sure to "w ) !m4
  ,rob}t ,beez} 5c|rag$ me to make
.7,ab/ract ,algebra3 ,!ory &
,applica;ns.' available z an op5 s|rce
textbook1 a deci.n t ,i h n"e regrett$4
,) 8 assi/.e1 ! book has be5 rewritt5 9
,pre,te,xt "< pretextbook4org">1 mak+ x
possible to qkly |tput pr9t1 web1 ,,pdf
v}.ns & m f ! same s|rce4 ,! op5 s|rce
v}.n ( ? book has rcvd support f !
,na;nal ,sci;e ,f.da;n "<,aw>ds
_?,,due-#ajbjieg1 _?,,due,-#afbebbc1 &
_?,,due,-#ahbacbi">4

                                      #c
                ,preface

  ,? text is 9t5d$ = a "o or two-seme/}
"ugraduate c|rse 9 ab/ract algebra4
,tradi;nally1 ~! c|rses h cov}$ !
!oretical aspects ( gr|ps1 r+s1 &
fields4 ,h{"e1 ) ! develop;t ( comput+ 9
! la/ s"eal decades1 applica;ns t 9volve
ab/ract algebra & 4crete ma!matics h
2come 9cr1s+ly important1 & _m sci;e1
5g9e}+1 & comput} sci;e /ud5ts >e n{
elect+ to m9or 9 ma!matics4 ,?|< !ory /
o3upies a c5tral role 9 ! subject (
ab/ract algebra & no /ud5t %d g "? s* a
c|rse )|t a gd no;n ( :at a pro( is1 !
import.e ( applica;ns s* z cod+ !ory &
cryptography has gr{n significantly4
  ,until rec5tly mo/ ab/ract algebra
texts 9clud$ few if any applica;ns4
,h{"e1 "o ( ! major problems 9 t1*+ an
ab/ract algebra c|rse is t = _m /ud5ts x
is _! f/ 5c.t} ) an 5viron;t t requires
!m to d rigor|s pro(s4 ,s* /ud5ts (t5
f9d x h>d to see ! use ( le>n+ to prove
!orems & proposi;ns2 appli$ examples  #d
help ! 9/ructor provide motiva;n4
  ,? text 3ta9s m mat}ial ?an c possibly
2 cov}$ 9 a s+le seme/}4 ,c}ta9ly "! is
adequate mat}ial = a two-seme/} c|rse1 &
p}h m2 h{"e1 = a "o-seme/} c|rse x wd 2
q easy to omit select$ *apt}s & / h a
use;l text4 ,! ord} ( pres5ta;n ( topics
is /&>d3 gr|ps1 !n r+s1 & f9ally fields4
,emphasis c 2 plac$ ei on !ory or on
applica;ns4 ,a typical "o-seme/} c|rse
mi<t cov} gr|ps & r+s :ile briefly t|*+
on field !ory1 us+ ,*apt}s #a "? #f1 #i1
#aj1 #aa1 #ac "<! f/ "p">1 #af1 #ag1 #ah
"<! f/ "p">1 #bj1 & #ba4 ,"ps ( ~!
*apt}s cd 2 delet$ & applica;ns
sub/itut$ ac to ! 9t}e/s ( ! /ud5ts & !
9/ructor4 ,a two-seme/} c|rse emphasiz+
!ory mi<t cov} ,*apt}s #a "? #f1 #i1
#aj1 #aa1 #ac "? #ah1 #bj1 #ba1 #bb "<!
f/ "p">1 & #bc4 ,on ! o!r h&1 if
applica;ns >e to 2 emphasiz$1 ! c|rse
mi<t cov} ,*apt}s #a "? #ad1 & #af "?
#bb4 ,9 an appli$ c|rse1 "s ( ! m
!oretical results cd 2 assum$ or omitt$4
,a *apt} dep5d5cy *>t appe>s 2l4      #e
"<,a brok5 l9e 9dicates a "pial
dep5d5cy4">
  ,?|< "! >e no specific pr}equisites =
a c|rse 9 ab/ract algebra1 /ud5ts :o h
_h o!r hi<}-level c|rses 9 ma!matics w
g5}ally 2 m prep>$ ?an ~? :o h n1 2c !y
w possess a bit m ma!matical
sophi/ica;n4 ,o3a.nally1 we % assume "s
basic l9e> algebra2 t is1 we % take =
grant$ an ele;t>y k ( matrices &
det}m9ants4 ,? %d pres5t no grt problem1
s9ce mo/ /ud5ts tak+ a c|rse 9 ab/ract
algebra h be5 9troduc$ to matrices &
det}m9ants else": 9 _! c>e}1 if !y h n
alr tak5 a sophomore or junior-level
c|rse 9 l9e> algebra4
  ,ex}cise sec;ns >e ! he>t ( any
ma!matics text4 ,an ex}cise set appe>s
at ! 5d ( ea* *apt}4 ,! nature ( !
ex}cises ranges ov} s"eal categories2
computa;nal1 3ceptual1 & !oretical
problems >e 9clud$4 ,a sec;n pres5t+
h9ts & solu;ns to _m ( ! ex}cises appe>s
at ! 5d ( ! text4 ,(t5 9 ! solu;ns a
pro( is only sket*$1 & x is up to !   #f
/ud5t to provide ! details4 ,! ex}cises
range 9 di6iculty f v easy to v *all5g+4
,_m ( ! m sub/antial problems require
c>e;l ?"|1 s ! /ud5t %d n 2 4c|rag$ if !
solu;n is n =?com+ af a few m9utes ( "w4
  ,"! >e addi;nal ex}cises or comput}
projects at ! 5ds ( _m ( ! *apt}s4 ,!
comput} projects usually require a k (
programm+4 ,all ( ~! ex}cises & projects
>e m sub/antial 9 nature & all{ !
explora;n ( new results & !ory4
  ,sage "<sagema?4org"> is a free1 op5
s|rce1 s(tw>e sy/em = adv.ed ma!matics1
: is id1l = assi/+ ) a /udy ( ab/ract
algebra4 ,sage c 2 us$ ei on yr {n
comput}1 a local s}v}1 or on ,co,calc "<
cocalc4com">4 ,rob}t ,beez} has writt5 a
compreh5sive 9troduc;n to ,sage & a
selec;n ( relevant ex}cises t appe> at !
5d ( ea* *apt}1 9clud+ live ,sage cells
9 ! web v}.n ( ! book4 ,all ( ! ,sage
code has be5 subject to automat$ te/s (
a3uracy1 us+ ! mo/ rec5t v}.n available
at ? "t3 ,sage,ma? ,v}.n #i4a "<rel1s$
#bjbj-#je-#bj">4                      #g
         ,*apt} #a ,prelim9>ies

  ,a c}ta9 am.t ( ma!matical matur;y is
nec to f9d & /udy applica;ns ( ab/ract
algebra4 ,a basic k ( set !ory1
ma!matical 9duc;n1 equival;e rela;ns1 &
matrices is a m/4 ,ev5 m important is !
abil;y to r1d & "u/& ma!matical pro(s4
,9 ? *apt} we w |tl9e ! backgr.d ne$$ =
a c|rse 9 ab/ract algebra4

    ,sec;n #a4a ,a ,%ort ,note on ,pro(s
  ,ab/ract ma!matics is di6}5t f o!r
sci;es4 ,9 laboratory sci;es s* z
*emi/ry & physics1 sci5ti/s p}=m
exp}i;ts to 4cov} new pr9ciples & v}ify
!ories4 ,al? ma!matics is (t5 motivat$
by physical exp}i;ta;n or by comput}
simula;ns1 x is made rigor|s "? ! use (
logical >gu;ts4 ,9 /udy+ ab/ract
ma!matics1 we take :at is call$ an
axiomatic approa*2 t is1 we take a
collec;n ( objects _% `,s _: & assume "s
rules ab _! /ructure4 ,~! rules >e call$
~1axioms~'4 ,us+ ! axioms =           #h
_% `,s _:1 we wi% to d}ive o!r 9=ma;n ab
_% `,s _: by us+ logical >gu;ts4 ,we
require t |r axioms 2 3si/5t2 t is1 !y
%d n 3tradict "o ano!r4 ,we al dem& t "!
n 2 too _m axioms4 ,if a sy/em ( axioms
is too re/rictive1 "! w 2 few examples (
! ma!matical /ructure4
  ,a ~1/ate;t 9 logic or ma!matics is an
ass};n t is ei true or false4 ,3sid} !
foll{+ examples3

_4
    _% #3+56-13+8_/2 _:4
_4
    ,all cats >e black4
_4
    _% #2+3 .k #5 _:4
_4
    _% #2x .k #6 _: exactly :5 _% x .k
  #4 _:4
_4
    ,if _% ax~2"+bx+c .k #0 _: & _% a
  /.k #0 _:1 !n
  _% x .k ?-b+->b~2"-4ac}/2a# _:
  4                                   #i
_4
    _% x~3"-4x~2+5x-6 _:4

,all b ! f/  & la/ examples >e /ate;ts1
& m/ 2 ei true or false4
  ,a ~1ma!matical ~1pro( is no?+ m ?an a
3v9c+ >gu;t ab ! a3uracy ( a /ate;t4 ,s*
an >gu;t %d 3ta9 5 detail to 3v9ce !
audi;e2 = 9/.e1 we c see t ! /ate;t
8_% #2x .k #6 _: exactly :5 _% x .k
#4 _:0 is false by evaluat+ _% #2*4 _: &
not+ t _% #6 /.k #8 _:1 an >gu;t t wd
satisfy any"o4 ,( c|rse1 audi;es may v>y
widely3 pro(s c 2 address$ to ano!r
/ud5t1 to a pr(essor1 or to ! r1d} ( a
text4 ,if m detail ?an ne$$ is pres5t$ 9
! pro(1 !n ! explana;n w 2 ei l;g-w9d$
or poorly writt54 ,if too m* detail is
omitt$1 !n ! pro( may n 2 3v9c+4 ,ag x
is important to keep ! audi;e 9 m9d4
,hi< s*ool /ud5ts require m* m detail
?an d graduate /ud5ts4 ,a gd rule ( ?umb
= an >gu;t 9 an 9troductory ab/ract
algebra c|rse is t x %d 2 writt5 to
3v9ce "o's pe}s1 :e!r ~? pe}s 2 o!r  #aj
/ud5ts or o!r r1d}s ( ! text4
  ,let u exam9e di6}5t types ( /ate;ts4
,a /ate;t cd 2 z simple z 8_% #10_/5 .k
#2 _:20 h{"e1 ma!maticians >e usually
9t}e/$ 9 m complex /ate;ts s* z 8,if
.2;p1 !n .2;q10 ": .2;p & .2;q >e bo?
/ate;ts4 ,if c}ta9 /ate;ts >e "kn or
assum$ to 2 true1 we wi% to "k :at we c
say ab o!r /ate;ts4 ,"h .2;p is call$ !
~1hypo!sis & .2;q is "kn z ! ~13clu.n~'4
,3sid} ! foll{+ /ate;t3 ,if
_% ax~2"+bx+c .k #0 _: & _% a /.k #0 _:1
!n
_% x .k ?-b+->b~2"-4ac}/2a# _:
4 ,! hypo!sis is _% ax~2"+bx+c .k #0 _:
& _% a /.k #0 _:2 ! 3clu.n is
_% x .k ?-b+->b~2"-4ac}/2a# _:
4 ,notice t !  /ate;t says no?+ ab :e!r
or n ! hypo!sis is true4 ,h{"e1 if ?
5tire /ate;t is true & we c %{ t
_% ax~2"+bx+c .k #0 _: ) _% a /.k #0 _:
is true1 !n ! 3clu.n .1m/ 2 true4 ,a
pro( ( ? /ate;t mi<t simply 2 a s}ies (
equa;ns3
_%                                   #aa
4
  ,if we c prove a /ate;t true1 !n t
/ate;t is call$ a ~1proposi;n~'4 ,a
proposi;n ( major import.e is call$ a
~1!orem~'4 ,"s"ts 9/1d ( prov+ a !orem
or proposi;n all at once1 we br1k ! pro(
d{n 9to modules2 t is1 we prove s"eal
support+ proposi;ns1 : >e call$
~1lemmas~'1 & use ! results ( ~!
proposi;ns to prove ! ma9 result4 ,if we
c prove a proposi;n or a !orem1 we w
(t51 ) v ll ef=t1 2 able to d}ive o!r
relat$ proposi;ns call$ ~1coroll>ies~'4

      ,subsec;n #a4a4a ,"s ,cau;ns &
      ,su7es;ns
  ,"! >e s"eal di6}5t /rategies = prov+
proposi;ns4 ,9 addi;n to us+ di6}5t
me?ods ( pro(1 /ud5ts (t5 make "s common
mi/akes :5 !y >e f/ le>n+ h{ to prove
!orems4 ,to aid /ud5ts :o >e /udy+
ab/ract ma!matics = ! f/ "t1 we li/ "h
"s ( ! di6iculties t !y may 5c.t} & "s (
! /rategies ( pro( available to !m4 ,x
is a gd idea to keep ref}r+ back to  #ab
? li/ z a rem9d}4 "<,o!r te*niques (
pro( w 2come app>5t "?|t ? *apt} & !
rema9d} ( ! text4">

_4
    ,a !orem _c 2 prov$ by example2
  h{"e1 ! /&>d way to %{ t a /ate;t is n
  a !orem is to provide a c.t}example4
_4
    ,quantifi}s >e important4 ,~ws &
  phrases s* z .1only.'1 .1= .1all.'1
  .1= .1e.'1 & .1= .1"s possess di6}5t
  m1n+s4
_4
    ,n"e assume any hypo!sis t is n
  explicitly /at$ 9 ! !orem4 .7,y _c
  take ?+s = grant$4.'
_4
    ,suppose y wi% to %{ t an object
  .1exi/s & is .1unique.'4 ,f/ %{ t "!
  actually is s* an object4 ,to %{ t x
  is unique1 assume t "! >e two s*
  objects1 say .2;r & .2;s1 & !n %{ t
  _% r .k s _:4
_4                                   #ac
    ,"s"ts x is easi} to prove !
  3trapositive ( a /ate;t4 ,prov+ !
  /ate;t 8,if .2;p1 !n .2;q0 is exactly
  ! same z prov+ ! /ate;t 8,if n .2;q1
  !n n .2;p40
_4
    ,al? x is usually bett} to f9d a
  direct pro( ( a !orem1 ? task c "s"ts
  2 di6icult4 ,x may 2 easi} to assume t
  ! !orem t y >e try+ to prove is false1
  & to hope t 9 ! c|rse ( yr >gu;t y >e
  =c$ to make "s /ate;t t _c possibly 2
  true4

,rememb} t "o ( ! ma9 objectives ( hi<}
ma!matics is prov+ !orems4 ,!orems >e
tools t make new & productive applica;ns
( ma!matics possible4 ,we use examples
to give 9si<t  9to exi/+ !orems & to
fo/} 9tui;ns z to :at new !orems mi<t 2
true4 ,applica;ns1 examples1 & pro(s >e
ti<tly 9t}connect$",-m* m s ?an !y may
seem at f/ appe>.e4

    ,sec;n #a4b ,sets & ,equival;e   #ad
    ,rela;ns

      ,subsec;n #a4b4a ,set ,!ory
  ,a ~1set is a well-def9$ collec;n (
objects2 t is1 x is def9$ 9 s* a mann} t
we c det}m9e = any giv5 object .2;x :e!r
or n .2;x 2l;gs to ! set4 ,! objects t
2l;g to a set >e call$ xs ~1ele;ts or
~1memb}s~'4 ,we w d5ote sets by capital
lrs1 s* z .2,a or .2;,x2 if .2a is an
ele;t ( ! set .2,a1 we write _% a `e
,a _:4
  ,a set is usually specifi$ ei by li/+
all ( xs ele;ts 9side a pair ( braces or
by /at+ ! prop}ty t det}m9es :e!r or n
an object .2;x 2l;gs to ! set4 ,we mi<t
write
_% ,x .k .(x1, x2, ''' , x;n".) _:
= a set 3ta9+ ele;ts _% x1, x2, ''' ,
x;n" _: or
_% ,x .k .(x3 xsatisfies`,p.) _:
if ea* .2;x 9 .2;,x satisfies a c}ta9
prop}ty _% `,p _:4 ,= example1 if .2;,e
is ! set ( ev5 positive 9teg}s1 we c
describe .2;,e by writ+ ei           #ae
_% ,e .k .(#2, #4, #6, '''.)or,e .k .(x3
xis an even integer andx .1 #0.) _:
4 ,we write _% #2 `e ,e _: :5 we want to
say t #b is 9 ! set .2;,e1 & _% -#3 /`e
,e _: to say t _% -#3 _: is n 9 ! set
.2;,e4
  ,"s ( ! m important sets t we w 3sid}
>e ! foll{+3
_%
4
  ,we c f9d v>i|s rela;ns 2t sets z well
z p}=m op}a;ns on sets4 ,a set .2,a is a
~1subset ( .2;,b1 writt5 _% ,a _"k ,b _:
or _% ,b _.1 ,a _:1 if e ele;t ( .2,a is
al an ele;t ( .2;,b4  ,= example1
_% .(#4, #5, #8.) _"k .(#2, #3, #4, #5,
#6, #7, #8, #9.) _:
&
_% _,n _"k _,z _"k _,q _"k _,r _"k
_,c _:
4 ,trivially1 e set is a subset ( xf4 ,a
set .2;,b is a ~1prop} ~1subset ( a set
.2,a if _% ,b _"k ,a _: b _% ,b /.k
,a _:4 ,if .2,a is n a subset ( .2;,b1
we write _% ,a /_"k ,b _:2 =         #af
example1 _% .(#4, #7, #9.) /_"k .(#2,
#4, #5, #8, #9.) _:4 ,two sets >e
~1equal~'1 writt5 _% ,a .k ,b _:1 if we
c %{ t _% ,a _"k ,b _: & _% ,b _"k
,a _:4
  ,x is 3v5i5t to h a set ) no ele;ts 9
x4 ,? set is call$ ! ~1empty ~1set & is
d5ot$ by _% _0 _:4 ,note t ! empty set
is a subset ( e set4
  ,to 3/ruct new sets | ( old sets1 we c
p}=m c}ta9 op}a;ns3 ! ~1union
_% ,a.+,b _: ( two sets .2,a & .2;,b is
def9$ z
_% ,a.+,b .k .(x3 x `e ,aorx `e ,b.)2 _:
! ~19t}sec;n ( .2,a & .2;,b  is def9$ by
_% ,a.%,b .k .(x3 x `e ,aandx `e ,b.) _:
4  ,if _% ,a .k .(#1, #3, #5.) _: &
_% ,b .k .(#1, #2, #3, #9.) _:1 !n
_% ,a.+,b .k .(#1, #2, #3, #5,
#9.)and,a.%,b .k .(#1, #3.) _:
4 ,we c 3sid} ! union & ! 9t}sec;n ( m
?an two sets4 ,9 ? case we write
_% ".+%i .k #1<n},a;i" .k
,a1.+'''.+,a;n _:
&                                    #ag
_% ".%%i .k #1<n},a;i" .k
,a1.%'''.%,a;n _:
= ! union & 9t}sec;n1 respectively1 ( !
sets _% ,a1, ''' , ,a;n" _:4
  ,:5 two sets h no ele;ts 9 common1 !y
>e sd to 2 ~14jo9t~'2 = example1 if
.2;,e is ! set ( ev5 9teg}s & .2,o is !
set ( odd 9teg}s1 !n .2;,e & .2,o >e
4jo9t4 ,two sets .2,a & .2;,b >e 4jo9t
exactly :5 _% ,a.%,b .k _0 _:4
  ,"s"ts we w "w )9 "o fix$ set .2;,u1
call$ ! ~1univ}sal ~1set~'4 ,= any set
_% ,a _"k ,u _:1 we def9e ! ~1comple;t (
.2,a1 d5ot$ by _% ,a' _:1 to 2 ! set
_% ,a~'" .k .(x3 x `e ,uandx /`e ,a.) _:
4
  ,we def9e ! ~1di6};e ( two sets .2,a &
.2;,b to 2
_% ,a'\x2216',b .k ,a.%,b~'" .k .(x3 x
`e ,aandx /`e ,b.) _:
4
7777777777777777777777777777777777777777
,example  #a4b4a 4
  ,let _% _,r _: 2 ! univ}sal set &
suppose t                            #ah
_% ,a .k .(x `e _,r3 #0 "k x "k:
#3.)and,b .k .(x `e _,r3 #2 "k: x "k
#4.) _:
4 ,!n
_%
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #a4b4b 4
  ,let .2,a1 .2;,b1 & .2;,c 2 sets4 ,!n

#a4
    _% ,a.+,a .k ,a _:1 _% ,a.%,a .k
  ,a _:1 & _% ,a'\x2216',a .k _0 _:2
#b4
    _% ,a.+_0 .k ,a _: & _% ,a.%_0 .k
  _0 _:2
#c4
    _% ,a.+(,b.+,c) .k (,a.+,b).+,c _: &
  _% ,a.%(,b.%,c) .k (,a.%,b).%,c _:2
#d4
    _% ,a.+,b .k ,b.+,a _: & _% ,a.%,b
  .k ,b.%,a _:2
#e4                                  #ai
    _% ,a.+(,b.%,c) .k
  (,a.+,b).%(,a.+,c) _:2
#f4
    _% ,a.%(,b.+,c) .k
  (,a.%,b).+(,a.%,c) _:4

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,we w prove "<#a"> & "<#c"> & l1ve !
rema9+ results to 2 prov5 9 ! ex}cises4
  "<#a"> ,obs}ve t
_%
&
_%
4 ,al1 _% ,a'\x2216',a .k ,a.%,a~'" .k
_0 _:4
  "<#c"> ,= sets .2,a1 .2;,b1 & .2;,c1
_%
4 ,a simil> >gu;t proves t
_% ,a.%(,b.%,c) .k (,a.%,b).%,c _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

                                     #bj
7777777777777777777777777777777777777777
,!orem  #a4b4c 4  ,de ,morgan's ,laws4
  ,let .2,a & .2;,b 2 sets4 ,!n

#a4
    _% (,a.+,b)~'" .k ,a~'".%,b' _:2
#b4
    _% (,a.%,b)~'" .k ,a~'".+,b' _:4

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  "<#a"> ,if _% ,a.+,b .k _0 _:1 !n !
!orem foll{s immly s9ce bo? .2,a & .2;,b
>e ! empty set4 ,o!rwise1 we m/ %{ t
_% (,a.+,b)~'" _"k ,a'.%,b' _: &
_% (,a.+,b)~'" _.1 ,a'.%,b' _:4 ,let
_% x `e (,a.+,b)' _:4 ,!n _% x /`e
,a.+,b _:4 ,s .2;x is nei 9 .2,a nor 9
.2;,b1 by ! def9i;n ( ! union ( sets4
,by ! def9i;n ( ! comple;t1 _% x `e
,a' _: & _% x `e ,b' _:4 ,"!=e1 _% x `e
,a'.%,b' _: & we h _% (,a.+,b)~'" _"k
,a'.%,b' _:4                         #ba
  ,to %{ ! rev}se 9clu.n1 suppose t _% x
`e ,a'.%,b' _:4 ,!n _% x `e ,a' _: &
_% x `e ,b' _:1 & s _% x /`e ,a _: &
_% x /`e ,b _:4 ,?us _% x /`e ,a.+,b _:
& s _% x `e (,a.+,b)' _:4 ,h;e1
_% (,a.+,b)~'" _.1 ,a'.%,b' _: & s
_% (,a.+,b)~'" .k ,a~'".%,b' _:4
  ,! pro( ( "<#b"> is left z an ex}cise4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4d 4
  ,o!r rela;ns 2t sets (t5 hold true4 ,=
example1
_% (,a'\x2216',b).%(,b'\x2216',a) .k
_0 _:
4 ,to see t ? is true1 obs}ve t
_%
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #a4b4b ,c>tesian
      ,products & ,mapp+s
  ,giv5 sets .2,a & .2;,b1 we c def9e a
new set _% ,a`*,b _:1 call$ !        #bb
~1,c>tesian ~1product ( .2,a & .2;,b1 z
a set ( ord}$ pairs4 ,t is1
_% ,a`*,b .k .((a, b)3 a `e ,aandb `e
,b.) _:
4
7777777777777777777777777777777777777777
,example  #a4b4e 4
  ,if _% ,a .k .(x, y.) _:1 _% ,b .k
.(#1, #2, #3.) _:1 & _% ,c .k _0 _:1 !n
_% ,a`*,b _: is ! set
_% .((x, #1), (x, #2), (x, #3), (y, #1),
(y, #2), (y, #3).) _:
&
_% ,a`*,c .k _0 _:
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we def9e ! ~7,c>tesian product (~'
.2;n ~1sets to 2
_% ,a1`*'''`*,a;n" .k .((a1, ''' ,
a;n")3 a;i" `e ,a;i"fori .k #1, ''' ,
n.) _:
4 ,if _% ,a .k ,a1 .k ,a2 .k ''' .k
,a;n _:1 we (t5 write _% ,a~n _: =
_% ,a`*'''`*,a _: "<": .2,a wd 2     #bc
writt5 .2;n "ts">4  ,= example1 ! set
_% _,r~3 _: 3si/s ( all ( #c-tuples (
r1l numb}s4
  ,subsets ( _% ,a`*,b _: >e call$
~1rela;ns~'4 ,we w def9e a  ~1mapp+ or
~1func;n _% f _"k ,a`*,b _: f a set .2,a
to a set .2;,b to 2 ! special type (
rela;n ": ea* ele;t _% a `e ,a _: has a
unique ele;t _% b `e ,b _: s* t _% (a,
b) `e f _:4 ,ano!r way ( say+ ? is t = e
ele;t 9 .2,a1 .2;f assigns a unique
ele;t 9 .2;,b4 ,we usually write _% f3
,a $o ,b _: or _% ,a" $o <f},b _:4 ,9/1d
( writ+ d{n ord}$ pairs  _% (a, b) `e
,a`*,b _:1 we write _% f(a) .k b _: or
_% f3 a $|33o b _:4 ,! set  .2,a is
call$ ! ~1doma9 ( .2;f &
_% f(,a) .k .(f(a)3 a `e ,a.) _"k ,b _:
is call$ ! ~1range  or ~1image ( .2;f4
,we c ?9k ( ! ele;ts 9 ! func;n's doma9
z 9put values & ! ele;ts 9 ! func;n's
range z |tput values4
7777777777777777777777777777777777777777
,example  #a4b4f 4
  ,suppose _% ,a .k .(#1, #2,        #bd
#3.) _: & _% ,b .k .(a, b, c.) _:4 ,9
,figure #a4b4g we def9e rela;ns .2;f &
.2;g f .2,a to .2;,b4 ,! rela;n .2;f is
a mapp+1 b .2;g is n 2c _% #1 `e ,a _:
is n assign$ to a unique ele;t 9 .2;,b2
t is1 _% g(#1) .k a _: & _% g(#1) .k
b _:4
7777777777777777777777777777777777777777
  ,image3 ,two sets ( ovals1 ,a & ;,b1
relat+ #a1 #b1 #c to a1 ;b1 ;c4  ,! f/
mapp+1 ;f1 s5ds #a to ;b & #b & #c to
;c4  ,! second rela;n1 ;g1 s5ds #a to a
& ;b1 #b to ;c1 & #c to a
  ,,id3 sets-mapp+s
,figure  #a4b4g 4  ,mapp+s & rela;ns
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,giv5 a func;n _% f3 ,a $o ,b _:1 x is
(t5 possible to write a li/ describ+ :at
! func;n does to ea* specific ele;t 9 !
doma94 ,h{"e1 n all func;ns c 2 describ$
9 ? mann}4 ,= example1 ! func;n _% f3
_,r $o _,r _: t s5ds ea* r1l numb}   #be
to xs cube is a mapp+ t m/ 2 describ$ by
writ+ _% f(x) .k x~3 _: or _% f3 x $|33o
x~3 _:4
  ,3sid} ! rela;n _% f3 _,q $o _,z _:
giv5 by _% f(p_/q) .k p _:4 ,we "k t
_% #1_/2 .k #2_/4 _:1 b is _% f(1_/2) .k
#1 _: or _% #2 _:;8 ,? rela;n _c 2 a
mapp+ 2c x is n well-def9$4 ,a rela;n is
~1well-def9$  if ea* ele;t 9 ! doma9 is
assign$ to a .1unique ele;t 9 ! range4
  ,if _% f3 ,a $o ,b _: is a map & !
image ( .2;f is .2;,b1 i4e41 _% f(,a) .k
,b _:1 !n .2;f is sd to 2 ~1onto  or
~1surjective~'4  ,9 o!r ~ws1 if "! exi/s
an _% a `e ,a _: = ea* _% b `e ,b _: s*
t _% f(a) .k b _:1 !n .2;f is onto4 ,a
map is ~1"o-to-"o or ~19jective if _% a1
/.k a2 _: implies _% f(a1) /.k f(a2) _:4
,equival5tly1 a func;n is "o-to-"o if
_% f(a1) .k f(a2) _: implies _% a1 .k
a2 _:4 ,a map t is bo? "o-to-"o & onto
is call$ ~1bijective~'4
7777777777777777777777777777777777777777
,example  #a4b4h 4
  ,let _% f3 _,z $o _,q _: 2 def9$   #bf
by _% f(n) .k n_/1 _:4 ,!n .2;f is
"o-to-"o b n onto4 ,def9e _% g3 _,q $o
_,z _: by _% g(p_/q) .k p _: ":
_% p_/q _: is a ra;nal numb} express$ 9
xs l{e/ t}ms ) a positive d5om9ator4 ,!
func;n .2;g is onto b n "o-to-"o4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,giv5 two func;ns1 we c 3/ruct a new
func;n by us+ ! range ( ! f/ func;n z !
doma9 ( ! second func;n4 ,let _% f3 ,a
$o ,b _: & _% g3 ,b $o ,c _: 2 mapp+s4
,def9e a new map1 ! ~1composi;n ( .2;f &
.2;g f .2,a to .2;,c1 by _% (g~.*f)(x)
.k g(f(x)) _:4
7777777777777777777777777777777777777777
  ,image3 ,two sets ( ovals1 ,a & ;,b1
relat+ #a1 #b1 #c to a1 ;b1 ;c & a1 ;b1
;c to ;,,,x1 ;y1 ;z4,'  ,! f/ mapp+1 ;f1
s5ds #a to ;b1 #b  #b to ;c1 & #c to a4
,! second rela;n1 ;g1 s5ds a & ;b to ;,z
& ;c to ;,x4  ,! bottom map1 ;g circle
;f1 s5ds #a & #c to ;,z & #b to ;,x4
  ,,id3 sets-composi;n
,figure  #a4b4i 4  ,composi;n (      #bg
maps
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4aj 4
  ,3sid} ! func;ns _% f3 ,a $o ,b _: &
_% g3 ,b $o ,c _: t >e def9$ 9
,figure #a4b4i "<top">4 ,! composi;n (
~! func;ns1 _% g~.*f3 ,a $o ,c _:1 is
def9$ 9 ,figure #a4b4i "<bottom">4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4aa 4
  ,let _% f(x) .k x~2 _: & _% g(x) .k
#2x+5 _:4 ,!n
_% (f~.*g)(x) .k f(g(x)) .k (#2x+5)~2"
.k #4x~2"+20x+25 _:
&
_% (g~.*f)(x) .k g(f(x)) .k #2x~2"+5 _:
4 ,9 g5}al1 ord} makes a di6};e2 t is1 9
mo/ cases _% f~.*g /.k g~.*f _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

                                     #bh
7777777777777777777777777777777777777777
,example  #a4b4ab 4
  ,"s"ts x is ! case t _% f~.*g .k
g~.*f _:4 ,let _% f(x) .k x~3 _: &
_% g(x) .k <3>x} _:4 ,!n
_% (f~.*g)(x) .k f(g(x)) .k f(<3>x}) .k
(<3>x})~3" .k x _:
&
_% (g~.*f)(x) .k g(f(x)) .k g(x~3") .k
<3>x~3"} .k x _:
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4ac 4
  ,giv5 a _% #2`*2 _: matrix
_% ,a .k ,(a b,) ,(c d,) _:
1 we c def9e a map _% ,t;,a"3 _,r~2" $o
_,r~2 _: by
_% ,t;,a"(x, y) .k (ax+by, cx+dy) _:
= _% (x, y) _: 9 _% _,r~2 _:4 ,? is
actually matrix multiplica;n2 t is1
_% ,(a b,) ,(c d,)x y .k ax+by cx+dy _:
4 ,maps f _% _,r~n _: to _% _,r~m _:
giv5 by matrices >e call$ ~1l9e>     #bi
~1maps or ~1l9e> ~1trans=ma;ns~'4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4ad 4
  ,suppose t _% ,s .k .(#1, #2, #3.) _:4
,def9e a map _% .p3 ,s $o ,s _: by
_% p(#1) .k #2, p(#2) .k #1, p(#3) .k
#3 _:
4 ,? is a bijective map4 ,an alt}native
way to  write _% .p _: is
_% ,(#1 2 3,) ,(p(#1) p(#2) p(#3),) .k
,(#1 2 3,) ,(2 1 3,) _:
4 ,= any set .2;,s1 a "o-to-"o & onto
mapp+ _% .p3 ,s $o ,s _: is call$ a
~1p}muta;n ( .2;,s4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #a4b4ae 4
  ,let _% f3 ,a $o ,b _:1 _% g3 ,b $o
,c _:1 & _% h3 ,c $o ,d _:4 ,!n

#a4
    ,! composi;n ( mapp+s is         #cj
  associative2 t is1 _% (h~.*g)~.*f .k
  h~.*(g~.*f) _:2
#b4
    ,if .2;f & .2;g >e bo? "o-to-"o1 !n
  ! mapp+ _% g~.*f _: is "o-to-"o2
#c4
    ,if .2;f & .2;g >e bo? onto1 !n !
  mapp+ _% g~.*f _: is onto2
#d4
    ,if .2;f & .2;g >e bijective1 !n s
  is _% g~.*f _:4

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,we w prove "<#a"> & "<#c">4 ,"p
"<#b"> is left z an ex}cise4 ,"p "<#d">
foll{s directly f "<#b"> & "<#c">4
  "<#a"> ,we m/ %{ t
_% h~.*(g~.*f) .k (h~.*g)~.*f _:
4 ,= _% a `e ,a _: we h
_%
4
  "<#c"> ,assume t .2;f & .2;g >e    #ca
bo? onto func;ns4 ,giv5 _% c `e ,c _:1
we m/ %{ t "! exi/s an _% a `e ,a _: s*
t _% (g~.*f)(a) .k g(f(a)) .k c _:4
,h{"e1 s9ce .2;g is onto1 "! is an ele;t
_% b `e ,b _: s* t _% g(b) .k c _:4
,simil>ly1 "! is an _% a `e ,a _: s* t
_% f(a) .k b _:4 ,acly1
_% (g~.*f)(a) .k g(f(a)) .k g(b) .k c _:
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,if .2;,s is any set1 we w use
_% id;,s _: or _% id _: to d5ote !
~1id5t;y ~1mapp+  f .2;,s to xf4 ,def9e
? map by _% id(s) .k s _: = all _% s `e
,s _:4 ,a map _% g3 ,b $o ,a _: is an
~19v}se ~1mapp+ ( _% f3 ,a $o ,b _: if
_% g~.*f .k id;,a _: & _% f~.*g .k
id;,b _:2 9 o!r ~ws1 ! 9v}se func;n ( a
func;n simply 8undoes0 ! func;n4 ,a map
is sd to 2 ~19v}tible if x has an 9v}se4
,we usually write _% f~-#1 _: = ! 9v}se
( .2;f4
7777777777777777777777777777777777777777
,example  #a4b4af 4                  #cb
  ,! func;n _% f(x) .k x~3 _: has 9v}se
_% f~-#1"(x) .k <3>x} _: by
,example #a4b4ab4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4ag 4
  ,! natural log>i?m & ! expon5tial
func;ns1 _% f(x) .k ln x _: &
_% f~-#1"(x) .k e~x _:1 >e 9v}ses ( ea*
o!r provid$ t we >e c>e;l ab *oos+
doma9s4 ,obs}ve t
_% f(f~-#1"(x)) .k f(e~x") .k ln e~x" .k
x _:
&
_% f~-#1"(f(x)) .k f~-#1"(ln x) .k e~ln
x" .k x _:
:5"e composi;n makes s5se4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4ah 4
  ,suppose t
_% ,a .k ,(#3 1,) ,(5 2,) _:
4 ,!n .2,a def9es a map f            #cc
_% _,r~2 _: to _% _,r~2 _: by
_% ,t;,a"(x, y) .k (#3x+y, #5x+2y) _:
4 ,we c f9d an 9v}se map ( _% ,t;,a _:
by simply 9v}t+ ! matrix .2,a2 t is1
_% ,t;,a~-#1" .k ,t;,a;~-#1 _:4 ,9 ?
example1
_% ,a~-#1" .k ,(#2 -#1,) ,(-#5 3,)2 _:
h;e1 ! 9v}se map is giv5 by
_% ,t;,a~-#1"(x, y) .k (#2x-y,
-#5x+3y) _:
4 ,x is easy to *eck t
_% ,t;,a~-#1"~.*,t;,a"(x, y) .k
,t;,a"~.*,t;,a~-#1"(x, y) .k (x, y) _:
4 ,n e map has an 9v}se4 ,if we 3sid} !
map
_% ,t;,b"(x, y) .k (#3x, #0) _:
giv5 by ! matrix
_% ,b .k ,(#3 0,) ,(0 0,) _:
1 !n an 9v}se map wd h to 2 ( ! =m
_% ,t;,b~-#1"(x, y) .k (ax+by, cx+dy) _:
&
_% (x, y) .k ,t;,b"~.*,t;,b~-#1"(x, y)
.k (#3ax+3by, #0) _:
= all .2;x & .2;y4 ,cle>ly ? is
impossible 2c .2;y mi<t n 2          #cd
_% #0 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4ai 4
  ,giv5 ! p}muta;n
_% .p .k ,(#1 2 3,) ,(2 3 1,) _:
on _% ,s .k .(#1, #2, #3.) _:1 x is easy
to see t ! p}muta;n def9$ by
_% .p~-#1" .k ,(#1 2 3,) ,(3 1 2,) _:
is ! 9v}se ( _% .p _:4 ,9 fact1 any
bijective mapp+ possesses an 9v}se1 z we
w see 9 ! next !orem4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #a4b4bj 4
  ,a mapp+ is 9v}tible if & only if x is
bo? "o-to-"o & onto4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,suppose f/ t _% f3 ,a $o ,b _: is
9v}tible ) 9v}se _% g3 ,b $o ,a _:4  #ce
,!n _% g~.*f .k id;,a _: is ! id5t;y
map2 t is1 _% g(f(a)) .k a _:4 ,if
_% a1, a2 `e ,a _: ) _% f(a1) .k
f(a2) _:1 !n _% a1 .k g(f(a1)) .k
g(f(a2)) .k a2 _:4 ,3sequ5tly1 .2;f is
"o-to-"o4 ,n{ suppose t _% b `e ,b _:4
,to %{ t .2;f is onto1 x is nec to f9d
an _% a `e ,a _: s* t _% f(a) .k b _:1 b
_% f(g(b)) .k b _: ) _% g(b) `e ,a _:4
,let _% a .k g(b) _:4
  ,3v}sely1 let .2;f 2 bijective & let
_% b `e ,b _:4 ,s9ce .2;f is onto1 "!
exi/s an _% a `e ,a _: s* t _% f(a) .k
b _:4 ,2c .2;f is "o-to-"o1 .2a m/ 2
unique4 ,def9e .2;g by lett+ _% g(b) .k
a _:4 ,we h n{ 3/ruct$ ! 9v}se ( .2;f4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #a4b4c ,equival;e
      ,rela;ns & ,"pi;ns
  ,a funda;tal no;n 9 ma!matics is t (
equal;y4 ,we c g5}alize equal;y )
equival;e rela;ns & equival;e classes4
,an ~1equival;e ~1rela;n  on a set .2;,x
is a rela;n _% ,r _"k ,x`*,x _: s*   #cf
t

_4
    _% (x, x) `e ,r _: = all _% x `e
  ,x _: "<~1reflexive ~1prop}ty~'">2
_4
    _% (x, y) `e ,r _: implies _% (y, x)
  `e ,r _: "<~1symmetric ~1prop}ty~'">2
_4
    _% (x, y) _: & _% (y, z) `e ,r _:
  imply _% (x, z) `e ,r _:
  "<~1transitive ~1prop}ty~'">4

,giv5 an equival;e rela;n .2;,r on a set
.2;,x1 we usually write _% x`:y _: 9/1d
( _% (x, y) `e ,r _:4 ,if ! equival;e
rela;n alr has an associat$ nota;n s* z
_%  .k  _:1 _%  _l  _:1 or _%  `:`:  _:1
we w use t nota;n4
7777777777777777777777777777777777777777
,example  #a4b4ba 4
  ,let .2;p1 .2;q1 .2;r1 & .2;s 2
9teg}s1 ": .2;q & .2;s >e nonz}o4 ,def9e
_% p_/q`:r_/s _: if _% ps .k qr _:4
,cle>ly _% `: _: is reflexive &      #cg
symmetric4 ,to %{ t x is al transitive1
suppose t _% p_/q`:r_/s _: &
_% r_/s`:t_/u _:1 ) .2;q1 .2;s1 & .2;u
all nonz}o4 ,!n _% ps .k qr _: & _% ru
.k st _:4 ,"!=e1
_% psu .k qru .k qst _:
4 ,s9ce _% s /.k #0 _:1 _% pu .k qt _:4
,3sequ5tly1 _% p_/q`:t_/u _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4bb 4
  ,suppose t .2;f & .2;g >e di6}5tiable
func;ns on _% _,r _:4 ,we c def9e an
equival;e rela;n on s* func;ns by lett+
_% f(x)`:g(x) _: if _% f~'"(x) .k
g~'"(x) _:4 ,x is cle> t _% `: _: is bo?
reflexive & symmetric4 ,to demon/rate
transitiv;y1 suppose t _% f(x)`:g(x) _:
& _% g(x)`:h(x) _:4 ,f calculus we "k t
_% f(x)-g(x) .k c1 _: & _% g(x)-h(x) .k
c2 _:1 ": _% c1 _: & _% c2 _: >e bo?
3/ants4 ,h;e1
_% f(x)-h(x) .k (f(x)-g(x))+(g(x)-h(x))
.k c1+c2 _:                          #ch
& _% f~'"(x)-h~'"(x) .k #0 _:4 ,"!=e1
_% f(x)`:h(x) _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4bc 4
  ,= _% (x1, y1) _: & _% (x2, y2) _: 9
_% _,r~2 _:1 def9e _% (x1, y1)`:(x2,
y2) _: if _% x1~2"+y1~2" .k
x2~2"+y2~2 _:4 ,!n _% `: _: is an
equival;e rela;n on _% _,r~2 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4bd 4
  ,let .2,a & .2;,b 2 _% #2`*2 _:
matrices ) 5tries 9 ! r1l numb}s4 ,we c
def9e an equival;e rela;n on ! set (
_% #2`*2 _: matrices1 by say+
_% ,a`:,b _: if "! exi/s an 9v}tible
matrix .2;,p s* t _% ,p,a,p~-#1" .k
,b _:4 ,= example1 if
_% ,a .k ,(#1 2,) ,(-#1 1,)and,b .k
,(-#18 33,) ,(-#11 20,) _:
1 !n _% ,a`:,b _: s9ce               #ci
_% ,p,a,p~-#1" .k ,b _: =
_% ,p .k ,(#2 5,) ,(1 3,) _:
4 ,let .2,i 2 ! _% #2`*2 _: id5t;y
matrix2 t is1
_% ,i .k ,(#1 0,) ,(0 1,) _:
4 ,!n _% ,i,a,i~-#1" .k ,i,a,i .k ,a _:2
"!=e1 ! rela;n is reflexive4 ,to %{
symmetry1 suppose t _% ,a`:,b _:4 ,!n "!
exi/s an 9v}tible matrix .2;,p s* t
_% ,p,a,p~-#1" .k ,b _:4 ,s
_% ,a .k ,p~-#1",b,p .k
,p~-#1",b(,p~-#1")~-#1 _:
4 ,f9ally1 suppose t _% ,a`:,b _: &
_% ,b`:,c _:4 ,!n "! exi/ 9v}tible
matrices .2;,p & .2;,q s* t
_% ,p,a,p~-#1" .k ,b _: &
_% ,q,b,q~-#1" .k ,c _:4 ,s9ce
_% ,c .k ,q,b,q~-#1" .k
,q,p,a,p~-#1",q~-#1" .k
(,q,p),a(,q,p)~-#1 _:
1 ! rela;n is transitive4 ,two matrices
t >e equival5t 9 ? mann} >e sd to 2
~1simil>~'4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                     #dj
  ,a ~1"pi;n  _% `,p _: ( a set .2;,x is
a collec;n ( nonempty sets _% ,x1, ,x2,
''' _: s* t _% ,x;i".%,x;j" .k _0 _: =
_% i /.k j _: & _% ".+%k},x;k" .k ,x _:4
,let _% `: _: 2 an equival;e rela;n on a
set .2;,x & let _% x `e ,x _:4 ,!n
_% `(x`) .k .(y `e ,x3 y`:x.) _: is
call$ ! ~1equival;e ~1class  ( .2;x4 ,we
w see t an equival;e rela;n gives rise
to a "pi;n via equival;e classes4 ,al1
:5"e a "pi;n ( a set exi/s1 "! is "s
natural "uly+ equival;e rela;n1 z !
foll{+ !orem demon/rates4
7777777777777777777777777777777777777777
,!orem  #a4b4be 4
  ,giv5 an equival;e rela;n _% `: _: on
a set .2;,x1 ! equival;e classes ( .2;,x
=m a "pi;n ( .2;,x4 ,3v}sely1 if _% `,p
.k .(,x;i".) _: is a "pi;n ( a set
.2;,x1 !n "! is an equival;e rela;n on
.2;,x ) equival;e classes _% ,x;i _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4                              #da
  ,suppose "! exi/s an equival;e rela;n
_% `: _: on ! set .2;,x4 ,= any _% x `e
,x _:1 ! reflexive prop}ty %{s t _% x `e
`(x`) _: & s _% `(x`) _: is nonempty4
,cle>ly _% ,x .k ".+%x `e ,x}`(x`) _:4
,n{ let _% x, y `e ,x _:4 ,we ne$ to %{
t ei _% `(x`) .k `(y`) _: or
_% `(x`).%`(y`) .k _0 _:4 ,suppose t !
9t}sec;n ( _% `(x`) _: & _% `(y`) _: is
n empty & t _% z `e `(x`).%`(y`) _:4 ,!n
_% z`:x _: & _% z`:y _:4 ,by symmetry &
transitiv;y _% x`:y _:2 h;e1 _% `(x`)
_"k `(y`) _:4 ,simil>ly1 _% `(y`) _"k
`(x`) _: & s _% `(x`) .k `(y`) _:4
,"!=e1 any two equival;e classes >e ei
4jo9t or exactly ! same4
  ,3v}sely1 suppose t _% `,p .k
.(,x;i".) _: is a "pi;n ( a set .2;,x4
,let two ele;ts 2 equival5t if !y >e 9 !
same "pi;n4 ,cle>ly1 ! rela;n is
reflexive4 ,if .2;x is 9 ! same "pi;n z
.2;y1 !n .2;y is 9 ! same "pi;n z .2;x1
s _% x`:y _: implies _% y`:x _:4
,f9ally1 if .2;x is 9 ! same "pi;n z
.2;y & .2;y is 9 ! same "pi;n z      #db
.2;z1 !n .2;x m/ 2 9 ! same "pi;n z
.2;z1 & transitiv;y holds4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,coroll>y  #a4b4bf 4
  ,two equival;e classes ( an equival;e
rela;n >e ei 4jo9t or equal4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,let u exam9e "s ( ! "pi;ns giv5 by !
equival;e classes 9 ! la/ set (
examples4
7777777777777777777777777777777777777777
,example  #a4b4bg 4
  ,9 ! equival;e rela;n 9
,example #a4b4ba1 two pairs ( 9teg}s1
_% (p, q) _: & _% (r, s) _:1 >e 9 ! same
equival;e class :5 !y r$uce to ! same
frac;n 9 xs l{e/ t}ms4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4bh 4
  ,9 ! equival;e rela;n 9            #dc
,example #a4b4bb1 two func;ns _% f(x) _:
& _% g(x) _: >e 9 ! same "pi;n :5 !y
di6} by a 3/ant4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4bi 4
  ,we def9$ an equival;e class on
_% _,r~2 _: by _% (x1, y1)`:(x2, y2) _:
if _% x1~2"+y1~2" .k x2~2"+y2~2 _:4 ,two
pairs ( r1l numb}s >e 9 ! same "pi;n :5
!y lie on ! same circle ab ! orig94
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #a4b4cj 4
  ,let .2;r & .2;s 2 two 9teg}s &
suppose t _% n `e _,n _:4 ,we say t .2;r
is ~13gru5t to .2;s ~1modulo .2;n1 or
.2;r is 3gru5t to .2;s mod .2;n1 if
_% r-s _: is ev5ly divisible by .2;n2 t
is1 _% r-s .k nk _:  = "s _% k `e
_,z _:4 ,9 ? case we write _% r _l s(mod
n) _:4  ,= example1 _% #41 _l #17(mod
8) _: s9ce _% #41-17 .k #24 _: is    #dd
divisible by _% #8 _:4 ,we claim t
3gru;e modulo .2;n =ms an equival;e
rela;n ( _% _,z _:4 ,c}ta9ly any 9teg}
.2;r is equival5t to xf s9ce _% r-r .k
#0 _: is divisible by .2;n4 ,we w n{ %{
t ! rela;n is symmetric4 ,if _% r _l
s(mod n) _:1 !n _% r-s .k -(s-r) _: is
divisible by .2;n4 ,s _% s-r _: is
divisible by .2;n & _% s _l r(mod n) _:4
,n{ suppose t _% r _l s(mod n) _: & _% s
_l t(mod n) _:4 ,!n "! exi/ 9teg}s .2;k
& .2;l s* t _% r-s .k kn _: & _% s-t .k
ln _:4 ,to %{ transitiv;y1 x is nec to
prove t _% r-t _: is divisible by .2;n4
,h{"e1
_% r-t .k r-s+s-t .k kn+ln .k (k+l)n _:
1 & s _% r-t _: is divisible by .2;n4
  ,if we 3sid} ! equival;e rela;n
e/abli%$ by ! 9teg}s modulo _% #3 _:1 !n
_%
4 ,notice t _% `(#0`).+`(1`).+`(2`) .k
_,z _: & al t ! sets >e 4jo9t4 ,! sets
_% `(#0`) _:1 _% `(#1`) _:1 &
_% `(#2`) _: =m a "pi;n ( ! 9teg}s4
  ,! 9teg}s modulo .2;n >e a v       #de
important example 9 ! /udy ( ab/ract
algebra & w 2come q use;l 9 |r 9ve/iga;n
( v>i|s algebraic /ructures s* z gr|ps &
r+s4 ,9 |r 4cus.n ( ! 9teg}s modulo .2;n
we h actually assum$ a result "kn z !
divi.n algori?m1 : w 2 /at$ & prov$ 9
,*apt} #b4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

,r1d+ ,"qs #a4c ,r1d+ ,"qs #a 4
  ,:at d rela;ns & mapp+s h 9 common8
#b 4
  ,:at makes rela;ns & mapp+s di6}5t8
#c 4
  ,/ate c>e;lly ! ?ree def9+ prop}ties (
an equival;e rela;n4 ,9 o!r ~ws1 d n j
.1"n ! prop}ties1 give _! def9i;ns4
#d 4
  ,:at is ! big d1l ab equival;e
rela;ns8 "<,h9t3 ,"pi;ns4">
#e 4
  ,describe a g5}al te*nique = prov+ t
two sets >e equal4
,ex}cises #a4d ,ex}cises #a 4
  ,suppose t                         #df
_%
4 ,describe ea* ( ! foll{+ sets4

a4
    _% ,a.%,b _:
;b4
    _% ,b.%,c _:
;c4
    _% ,a.+,b _:
;d4
    _% ,a.%(,b.+,c) _:

,h9t3
  "<a"> _% ,a.%,b .k .(#2.) _:2 "<;b">
_% ,b.%,c .k .(#5.) _:4
#b 4
  ,if _% ,a .k .(a, b, c.) _:1 _% ,b .k
.(#1, #2, #3.) _:1 _% ,c .k .(x.) _:1 &
_% ,d .k _0 _:1 li/ all ( ! ele;ts 9 ea*
( ! foll{+ sets4

a4
    _% ,a`*,b _:
;b4
    _% ,b`*,a _:                     #dg
;c4
    _% ,a`*,b`*,c _:
;d4
    _% ,a`*,d _:

,h9t3
  "<a"> _% ,a`*,b .k .((a, #1), (a, #2),
(a, #3), (b, #1), (b, #2), (b, #3), (c,
#1), (c, #2), (c, #3).) _:2 "<;d">
_% ,a`*,d .k _0 _:4
#c 4
  ,f9d an example ( two nonempty sets
.2,a & .2;,b = : _% ,a`*,b .k ,b`*,a _:
is true4
#d 4
  ,prove _% ,a.+_0 .k ,a _: & _% ,a.%_0
.k _0 _:4
#e 4
  ,prove _% ,a.+,b .k ,b.+,a _: &
_% ,a.%,b .k ,b.%,a _:4
#f 4
  ,prove _% ,a.+(,b.%,c) .k
(,a.+,b).%(,a.+,c) _:4
,h9t3
  ,if _% x `e ,a.+(,b.%,c) _:1 !n    #dh
ei _% x `e ,a _: or _% x `e ,b.%,c _:4
,?us1 _% x `e ,a.+,b _: & _% ,a.+,c _:4
,h;e1 _% x `e (,a.+,b).%(,a.+,c) _:4
,"!=e1 _% ,a.+(,b.%,c) _"k
(,a.+,b).%(,a.+,c) _:4 ,3v}sely1 if _% x
`e (,a.+,b).%(,a.+,c) _:1 !n _% x `e
,a.+,b _: & _% ,a.+,c _:4 ,?us1 _% x `e
,a _: or .2;x is 9 bo? .2;,b & .2;,c4 ,s
_% x `e ,a.+(,b.%,c) _: & "!=e
_% (,a.+,b).%(,a.+,c) _"k
,a.+(,b.%,c) _:4 ,h;e1 _% ,a.+(,b.%,c)
.k (,a.+,b).%(,a.+,c) _:4
#g 4
  ,prove _% ,a.%(,b.+,c) .k
(,a.%,b).+(,a.%,c) _:4
#h 4
  ,prove _% ,a _"k ,b _: if & only if
_% ,a.%,b .k ,a _:4
#i 4
  ,prove _% (,a.%,b)~'" .k
,a~'".+,b' _:4
#aj 4
  ,prove _% ,a.+,b .k
(,a.%,b).+(,a'\x2216',b).+(,b'\x2216',a-
) _:4                                #di
,h9t3
  _% (,a.%,b).+(,a'\x2216',b).+(,b'\x22-
16',a) .k
(,a.%,b).+(,a.%,b~'").+(,b.%,a~'") .k
`(,a.%(,b.+,b~'")`).+(,b.%,a~'") .k
,a.+(,b.%,a~'") .k (,a.+,b).%(,a.+,a~'")
.k ,a.+,b _:4
#aa 4
  ,prove _% (,a.+,b)`*,c .k
(,a`*,c).+(,b`*,c) _:4
#ab 4
  ,prove _% (,a.%,b)'\x2216',b .k _0 _:4
#ac 4
  ,prove _% (,a.+,b)'\x2216',b .k
,a'\x2216',b _:4
#ad 4
  ,prove _% ,a'\x2216'(,b.+,c) .k
(,a'\x2216',b).%(,a'\x2216',c) _:4
,h9t3
  _% ,a'\x2216'(,b.+,c) .k
,a.%(,b.+,c)~'" .k
(,a.%,a).%(,b~'".%,c~'") .k
(,a.%,b~'").%(,a.%,c~'") .k
(,a'\x2216',b).%(,a'\x2216',c) _:4
#ae 4                                #ej
  ,prove _% ,a.%(,b'\x2216',c) .k
(,a.%,b)'\x2216'(,a.%,c) _:4
#af 4
  ,prove
_% (,a'\x2216',b).+(,b'\x2216',a) .k
(,a.+,b)'\x2216'(,a.%,b) _:4
#ag 4
  ,: ( ! foll{+ rela;ns _% f3 _,q $o
_,q _: def9e a mapp+8 ,9 ea* case1
supply a r1son :y .2;f is or is n a
mapp+4

a4
    _% f(p_/q) .k ?p+1/p-2# _:
;b4
    _% f(p_/q) .k ?3p/3q# _:
;c4
    _% f(p_/q) .k ?p+q/q~2"# _:
;d4
    _% f(p_/q) .k ?3p~2"/7q~2"#-?p/q# _:

,h9t3
  "<a"> ,n a map s9ce _% f(2_/3) _: is
undef9$2 "<;b"> ? is a map2 "<;c"> n a
map1 s9ce _% f(1_/2) .k #3_/4 _: b   #ea
_% f(2_/4) .k #3_/8 _:2 "<;d"> ? is a
map4
#ah 4
  ,det}m9e : ( ! foll{+ func;ns >e
"o-to-"o & : >e onto4 ,if ! func;n is n
onto1 det}m9e xs range4

a4
    _% f3 _,r $o _,r _: def9$ by _% f(x)
  .k e~x _:
;b4
    _% f3 _,z $o _,z _: def9$ by _% f(n)
  .k n~2"+3 _:
;c4
    _% f3 _,r $o _,r _: def9$ by _% f(x)
  .k sin x _:
;d4
    _% f3 _,z $o _,z _: def9$ by _% f(x)
  .k x~2 _:

,h9t3
  "<a"> .2;f is "o-to-"o b n onto4
_% f(_,r) .k .(x `e _,r3 x .1 #0.) _:4
"<;c"> .2;f is nei "o-to-"o nor onto4
_% f(_,r) .k .(x3 -#1 "k: x "k:      #eb
#1.) _:4
#ai 4
  ,let _% f3 ,a $o ,b _: & _% g3 ,b $o
,c _: 2 9v}tible mapp+s2 t is1 mapp+s s*
t _% f~-#1 _: & _% g~-#1 _: exi/4 ,%{ t
_% (g~.*f)~-#1" .k f~-#1"~.*g~-#1 _:4
#bj 4

a4
    ,def9e a func;n _% f3 _,n $o _,n _:
  t is "o-to-"o b n onto4
;b4
    ,def9e a func;n _% f3 _,n $o _,n _:
  t is onto b n "o-to-"o4

,h9t3
  "<a"> _% f(n) .k n+1 _:4
#ba 4
  ,prove ! rela;n def9$ on _% _,r~2 _:
by _% (x1, y1)`:(x2, y2) _: if
_% x1~2"+y1~2" .k x2~2"+y2~2 _: is an
equival;e rela;n4
#bb 4
  ,let _% f3 ,a $o ,b _: & _% g3 ,b $o
,c _: 2 maps4                        #ec
a4
    ,if .2;f & .2;g >e bo? "o-to-"o
  func;ns1 %{ t _% g~.*f _: is "o-to-"o4
;b4
    ,if _% g~.*f _: is onto1 %{ t .2;g
  is onto4
;c4
    ,if _% g~.*f _: is "o-to-"o1 %{ t
  .2;f is "o-to-"o4
;d4
    ,if _% g~.*f _: is "o-to-"o & .2;f
  is onto1 %{ t .2;g is "o-to-"o4
;e4
    ,if _% g~.*f _: is onto & .2;g is
  "o-to-"o1 %{ t .2;f is onto4

,h9t3
  "<a"> ,let _% x, y `e ,a _:4 ,!n
_% g(f(x)) .k (g~.*f)(x) .k (g~.*f)(y)
.k g(f(y)) _:4 ,?us1 _% f(x) .k f(y) _:
& _% x .k y _:1 s _% g~.*f _: is
"o-to-"o4 "<;b"> ,let _% c `e ,c _:1 !n
_% c .k (g~.*f)(x) .k g(f(x)) _: = "s
_% x `e ,a _:4 ,s9ce _% f(x) `e ,b _:1
.2;g is onto4                        #ed
#bc 4
  ,def9e a func;n on ! r1l numb}s by
_% f(x) .k ?x+1/x-1# _:
4 ,:at >e ! doma9 & range ( .2;f8 ,:at
is ! 9v}se ( .2;f8 ,compute
_% f~.*f~-#1 _: & _% f~-#1"~.*f _:4
,h9t3
  _% f~-#1"(x) .k (x+1)_/(x-1) _:4
#bd 4
  ,let _% f3 ,x $o ,y _: 2 a map )
_% ,a1, ,a2 _"k ,x _: & _% ,b1, ,b2 _"k
,y _:4

a4
    ,prove _% f(,a1.+,a2) .k
  f(,a1).+f(,a2) _:4
;b4
    ,prove _% f(,a1.%,a2) _"k
  f(,a1).%f(,a2) _:4 ,give an example 9
  : equal;y fails4
;c4
    ,prove _% f~-#1"(,b1.+,b2) .k
  f~-#1"(,b1).+f~-#1"(,b2) _:1 ":
  _% f~-#1"(,b) .k .(x `e ,x3 f(x) `e
  ,b.) _:                            #ee
  4
;d4
    ,prove _% f~-#1"(,b1.%,b2) .k
  f~-#1"(,b1).%f~-#1"(,b2) _:4
;e4
    ,prove _% f~-#1"(,y'\x2216',b1) .k
  ,x'\x2216'f~-#1"(,b1) _:4

,h9t3
  "<a"> ,let _% y `e f(,a1.+,a2) _:4 ,!n
"! exi/s an _% x `e ,a1.+,a2 _: s* t
_% f(x) .k y _:4 ,h;e1 _% y `e f(,a1) _:
or _% f(,a2) _:4 ,"!=e1 _% y `e
f(,a1).+f(,a2) _:4 ,3sequ5tly1
_% f(,a1.+,a2) _"k f(,a1).+f(,a2) _:4
,3v}sely1 if _% y `e f(,a1).+f(,a2) _:1
!n _% y `e f(,a1) _: or _% f(,a2) _:4
,h;e1 "! exi/s an .2;x 9 _% ,a1 _: or
_% ,a2 _: s* t _% f(x) .k y _:4 ,?us1 "!
exi/s an _% x `e ,a1.+,a2 _: s* t
_% f(x) .k y _:4 ,"!=e1
_% f(,a1).+f(,a2) _"k f(,a1.+,a2) _:1 &
_% f(,a1.+,a2) .k f(,a1).+f(,a2) _:4
#be 4
  ,det}m9e :e!r or n ! foll{+        #ef
rela;ns >e equival;e rela;ns on ! giv5
set4 ,if ! rela;n is an equival;e
rela;n1 describe ! "pi;n giv5 by x4 ,if
! rela;n is n an equival;e rela;n1 /ate
:y x fails to 2 "o4

a4
    _% x`:y _: 9 _% _,r _: if _% x .1:
  y _:
;b4
    _% m`:n _: 9 _% _,z _: if _% mn .1
  #0 _:
;c4
    _% x`:y _: 9 _% _,r _: if _% |x-y|
  "k: #4 _:
;d4
    _% m`:n _: 9 _% _,z _: if _% m _l
  n(mod #6) _:

,h9t3
  "<a"> ,! rela;n fails to 2 symmetric4
"<;b"> ,! rela;n is n reflexive1 s9ce
_% #0 _: is n equival5t to xf4 "<;c"> ,!
rela;n is n transitive4
#bf 4                                #eg
  ,def9e a rela;n _% `: _: on
_% _,r~2 _: by /at+ t _% (a, b)`:(c,
d) _: if & only if _% a~2"+b~2" "k:
c~2"+d~2 _:4 ,%{ t _% `: _: is reflexive
& transitive b n symmetric4
#bg 4
  ,%{ t an _% m`*n _: matrix gives rise
to a well-def9$ map f _% _,r~n _: to
_% _,r~m _:4
#bh 4
  ,f9d ! }ror 9 ! foll{+ >gu;t by
provid+ a c.t}example4 8,! reflexive
prop}ty is r$undant 9 ! axioms = an
equival;e rela;n4 ,if _% x`:y _:1 !n
_% y`:x _: by ! symmetric prop}ty4 ,us+
! transitive prop}ty1 we c d$uce t
_% x`:x _:40
,h9t3
  ,let _% ,x .k _,n.+.(>2}.) _: & def9e
_% x`:y _: if _% x+y `e _,n _:4
#bi 4  ,projective ,r1l ,l9e4
  ,def9e a rela;n on
_% _,r~2"'\x2216'.((#0, #0).) _: by
lett+ _% (x1, y1)`:(x2, y2) _: if "!
exi/s a nonz}o r1l numb} _% .l _:    #eh
s* t _% (x1, y1) .k (.lx2, .ly2) _:4
,prove t _% `: _: def9es an equival;e
rela;n on _% _,r~2"'\x2216'(#0, #0) _:4
,:at >e ! correspond+ equival;e classes8
,? equival;e rela;n def9es ! projective
l9e1 d5ot$ by _% _,p(_,r) _:1 : is v
important 9 geometry4
,ref};es #a4e ,ref};es & ,su7e/$ ,r1d+s
.<#a.>    ,>t91 ;,m4 ,algebra "<,classic
,v}.n">4 #bnd $4 ,pe>son1 ,upp} ,saddle
,riv}1 ,,nj1 #bjah4 .<#b.>    ,*ilds1
;,l4 ,a ,3crete ,9troduc;n to ,hi<}
,algebra4 #bnd $4 ,spr+}-,v}lag1 ,new
,york1 #aiie4 .<#c.>    ,dummit1 ;,d4 &
,foote1 ;,r4 ,ab/ract ,algebra4 #crd $4
,wiley1 ,new ,york1 #bjjc4 .<#d.>
,ehrli*1 ;,g4 ,funda;tal ,3cepts (
,algebra4 ,,pws-,,k5t1 ,bo/on1 #aiia4
.<#e.>    ,fralei<1 ;,,,j4 ;b4 a,' ,f/
,c|rse 9 ,ab/ract ,algebra4 #gth $4
,pe>son1 ,upp} ,saddle ,riv}1 ,,nj1
#bjjc4 .<#f.>    ,gallian1 ;,j4 ,a4
,3tempor>y ,ab/ract ,algebra4 #gth $4
,brooks_/,cole1 ,belmont1 ,,ca1 #bjji4
.<#g.>    ,halmos1 ;,p4 ,naive ,set  #ei
,!ory4  ,spr+}1 ,new ,york1 #aiia4 ,"o (
! be/ ref};es = set !ory4 .<#h.>
,h}/e91 ,i4 ;,n4 ,ab/ract ,algebra4 #crd
$4 ,wiley1 ,new ,york1 #aiif4 .<#i.>
,hung}=d1 ;,t4 ;,w4 ,algebra4 ,spr+}1
,new ,york1 #aigd4 ,"o ( ! /&>d graduate
algebra texts4 .<#aj.>    ,lang1 ;,s4
,algebra4 #crd $4 ,spr+}1 ,new ,york1
#bjjb4 ,ano!r /&>d graduate text4
.<#aa.>    ,lidl1 ;,r4 & ,pilz1 ;,g4
,appli$ ,ab/ract ,algebra4 #bnd $4
,spr+}1 ,new ,york1 #aiih4 .<#ab.>
,mackiw1 ;,g4 ,applica;ns ( ,ab/ract
,algebra4 ,wiley1 ,new ,york1 #aihe4
.<#ac.>    ,nickelson1 ;,w4 ;,k4
,9troduc;n to ,ab/ract ,algebra4 #crd $4
,wiley1 ,new ,york1 #bjjf4 .<#ad.>
,sol{1 ;,d4 ,h{ to ,r1d & ,d ,pro(s4
#eth $4 ,wiley1 ,new ,york1 #bjji4
.<#ae.>    van d} ,wa}d51 ;,,,b4 ;l4 a,'
,hi/ory ( ,algebra4 ,spr+}-,v}lag1 ,new
,york1 #aihe4 ,an a3.t ( ! hi/orical
develop;t ( algebra4

    ,sec;n #a4f ,sage                #fj
  ,sage is a p{};l sy/em = /udy+ &
explor+ _m di6}5t >1s ( ma!matics4 ,9 ?
textbook1 y w /udy a v>iety ( algebraic
/ructures1 s* z gr|ps1 r+s & fields4
,sage does an excell5t job ( imple;t+ _m
f1tures ( ~! objects z we w see 9 !
*apt}s ah1d4 ,b "h & n{1 9 ? 9itial
*apt}1 we w 3c5trate on a few g5}al ways
( gett+ ! mo/ | ( "w+ ) ,sage4
  ,y may use ,sage s"eal di6}5t ways4 ,x
may 2 us$ z a comm&-l9e program :5
9/all$ on yr {n comput}4 ,or x mi<t 2 a
web applica;n s* z ! ,sage,ma?,cl|d4 ,|r
writ+ w assume t y >e r1d+ ? z a "w%eet
)9 ! ,sage ,notebook "<a web br{s}
9t}face">1 or ? is a sec;n ( ! 5tire
book pres5t$ z web pages1 & y >e employ+
! ,sage ,cell ,s}v} via ~? pages4 ,af !
f/ few *apt}s ! explana;ns %d "w equally
well = :at"e vehicle y use to execute
,sage comm&s4

      ,subsec;n #a4f4a ,execut+ ,sage
      ,comm&s
  ,mo/ ( yr 9t}ac;n w 2 by typ+      #fa
comm&s 9to a .1compute .1cell.'4 ,if y
>e r1d+ ? 9 ! ,sage ,notebook or z a
webpage v}.n ( ! book1 !n y w see a
compute cell j 2l ? p>agraph4 ,click
once 9side ! compute cell & if y >e 9 !
,sage ,notebook1 y w get a m 4t9ctive
bord} >.d x1 a bl9k+ cursor 9side1 plus
a cute ll 8evaluate0 l9k 2l4
7777777777777777777777777777777777777777
,sage
  ,9put3
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,at ! cursor1 type #b"6#b & !n click
on ! evaluate l9k4 ,did a #d appe> 2l !
cell8 ,if s1 y h su3ess;lly s5t a comm&
(f = ,sage to evaluate & y h rcvd back !
"<correct"> answ}4
  ,"h is ano!r compute cell4 ,try
evaluat+ ! comm& factorial"<#cjj"> "h4
7777777777777777777777777777777777777777
,sage
  ,9put3
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                     #fb
  ,hmmmmm4 ,t is q a big 9teg}6 ,if y
see sla%es at ! 5d ( ea* l9e1 ? m1ns !
result is 3t9u$ onto ! next l9e1 s9ce "!
>e #fae total digits 9 ! result4
  ,to make new compute cells 9 ! ,sage
,notebook "<only">1 hov} yr m|se j abv
ano!r compute cell1 or j 2l "s |tput f a
compute cell4 ,:5 y see a sk9ny blue b>
acr ! wid? ( yr "w%eet1 click & y w op5
up a new compute cell1 r1dy = 9put4
,note t yr "w%eet w rememb} any
calcula;ns y make1 9 ! ord} y make !m1
no matt} ": y put ! cells1 s x is be/ to
/ay organiz$ & add new cells at !
bottom4
  ,try plac+ yr cursor j 2l ! mon/r|s
value ( _% #300& _: t y h4 ,click on !
blue b> & try ano!r factorial computa;n
9 ! new compute cell4
  ,ea* compute cell w %{ |tput due to
only ! v la/ comm& 9 ! cell4 ,try to
pr$ict ! foll{+ |tput 2f evaluat+ !
cell4
7777777777777777777777777777777777777777
,sage                                #fc
  ,9put3
a = 10 b = _6 b = b _- 10 a = a + 20 a
  ,|tput3
30
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! foll{+ compute cell w n pr9t any?+
s9ce ! "o comm& does n cr1te |tput4 ,b x
w h an e6ect1 z y c see :5 y execute !
subsequ5t cell4 ,notice h{ ? uses !
value ( ;b f abv4 ,execute ? compute
cell .1once.'4 ,exactly once4 ,ev5 if x
.1appe>s to d no?+4 ,if y execute ! cell
twice1 yr cr$it c>d may 2 *>g$ twice4
7777777777777777777777777777777777777777
,sage
  ,9put3
b = b + 50
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,n{ execute ? cell1 : w produce "s
|tput4
7777777777777777777777777777777777777777
,sage
  ,9put3                             #fd
b + 20
  ,|tput3
66
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,s ;b came 9to exi/;e z #f4 ,we
subtract$ _% #10 _: immly afw4 ,!n a
subsequ5t cell add$ #ej4 ,? assumes y
execut$ ? cell .1exactly once6 ,9 ! la/
cell we cr1te b"6#bj "<b d n save x"> &
x is ? value "<_% #66 _:"> t is |tput1
:ile ;b is / _% #46 _:4
  ,y c comb9e s"eal comm&s on "o l9e ) a
semi-colon4 ,? is a grt way to get
multiple |tputs f a compute cell4 ,!
syntax = build+ a matrix %d 2 "s:at
obvi|s :5 y see ! |tput1 b if n1 x is n
"picul>ly important to "u/& n{4
7777777777777777777777777777777777777777
,sage
  ,9put3
_a = matrix([[3, 1], [5,2]]); _a
  ,|tput3
[3 1] [5 2]
                                     #fe
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
print(_a); print(); print(_a.inverse())
  ,|tput3
[3 1] [5 2] <_>blankline> [ _2 -1] [-5
3]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #a4f4b ,imm ,help
  ,"s comm&s 9 ,sage >e 8func;ns10 an
example is factorial"<"> abv4 ,o!r
comm&s >e 8me?ods0 ( an object & >e l
"*i/ics ( objects1 an example is
49v}se"<"> z a me?od ( a matrix4 ,once y
"k h{ to cr1te an object "<s* z a
matrix">1 !n x is easy to see all !
available me?ods4 ,write ! "n ( !
object1 place a p}iod "<8dot0"> & hit !
,,tab key4 ,if y h ,a def9$ f abv1 !n !
compute cell 2l is r1dy to g1 click 9to
x & !n hit ,,tab "<n 8evaluate06">4 ,y
%d get a l;g li/ ( possible me?ods4  #ff
7777777777777777777777777777777777777777
,sage
  ,9put3
_a.
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,to get "s help on h{ to use a me?od )
an object1 write xs "n af a dot "<) no
p>5!ses"> & !n use a "q-m>k & hit ,,tab4
"<,hit ! escape key 8,,esc0 to remove !
li/1 or click on ! text = a me?od4">
7777777777777777777777777777777777777777
,sage
  ,9put3
_a.inverse?
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,) "o m "q-m>k & a ,,tab y c see !
actual comput} 9/ruc;ns t 7 programm$
9to ,sage to make ! me?od "w1 once y
scoll d{n pa/ ! docu;ta;n delimit$ by !
triple quotes "< 000">3
7777777777777777777777777777777777777777
,sage
  ,9put3                             #fg
_a.inverse??
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,x is wor?:ile to see :at ,sage does
:5 "! is an }ror4 ,y w probably see a
lot ( ~! at f/1 & 9itially !y w 2 a bit
9timidat+4 ,b ) "t1 y w le>n h{ to use
!m e6ectively & y w al 2come m pr(ici5t
) ,sage & see !m less (t54 ,execute !
compute cell 2l1 x asks = ! 9v}se ( a
matrix t has no 9v}se4 ,!n r}1d !
com;t>y4
7777777777777777777777777777777777777777
,sage
  ,9put3
_b = matrix([[2, 20], [5, 50]])
_b.inverse()
  ,|tput3
_traceback (most recent call last): ...
_zero_division_error: matrix must be
nonsingular
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,click j to ! left ( ! }ror message to
exp& x fully "<ano!r click hides x   #fh
totally1 & a ?ird click br+s back !
a2reviat$ =m">4 ,r1d ! bottom ( an }ror
message f/1 x is yr be/ explana;n4 ,"h a
,z}o,divi.n,}ror is n #ajj.0 a3urate1 b
is close4 ,! matrix is n 9v}tible1 n
4simil> to h{ we _c divide scal>s by
z}o4 ,! rema9d} ( ! message 2g9s at !
top %{+ 7 ! }ror f/ happ5$ 9 yr code &
!n ! v>i|s places ": 9t}m$iate func;ns 7
call$1 until ! actual piece ( ,sage ": !
problem o3urr$4 ,"s"ts ? 9=ma;n w give y
"s clues1 "s"ts x is totally
undeciph}able4 ,s d n let x sc>e y if x
seems my/}i|s1 b d rememb} to alw r1d !
la/ l9e f/1 !n g back & r1d ! f/ few
l9es = "s?+ t looks l yr code4

      ,subsec;n #a4f4c ,annotat+ ,yr ,"w
  ,x is easy to com;t on yr "w :5 y use
! ,sage ,notebook4 "<,! foll{+ only
applies if y >e r1d+ ? )9 a ,sage
,notebook4 ,if y >e n1 !n p}h y c g op5
up a "w%eet 9 ! ,sage ,notebook &
exp}i;t "!4"> ,y c op5 up a small
~w-processor by hov}+ yr m|se until  #fi
y get a sk9ny blue b> ag1 b n{ :5 y
click1 al hold ! ,,%ift key at ! same
"t4 ,exp}i;t ) fonts1 colors1 bullet
li/s1 etc & !n click ! 8,save *anges0
button to exit4 ,d|ble-click on yr text
if y ne$ to g back & $it x lat}4
  ,op5 ! ~w-processor ag to cr1te a new
bit ( text "<maybe next to ! empty
compute cell j 2l">4 ,type all ( !
foll{+ .1exactly1
  Pythagorean Theorem: $c^2=a^2+b^2$
& save yr *anges4 ,! symbols 2t ! doll>
signs >e writt5 ac to ! ma!matical
typesett+ language "kn z ;,t e,x ",-
cruise ! 9t}net to le>n m ab ? v popul>
tool4 "<,well1 x is extremely popul>
am;g ma!maticians & physical sci5ti/s4">
7777777777777777777777777777777777777777
,sage
  ,9put3
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #a4f4d ,li/s
  ,m* ( |r 9t}ac;n ) sets w 2 "? ,sage
li/s4 ,~! >e n r1lly sets ",- !y     #gj
all{ duplicates1 & ord} matt}s4 ,b !y >e
s close to sets1 & s easy & p{};l to use
t we w use !m regul>ly4 ,we w use a fun
made-up li/ = practice1 ! quote m>ks m1n
! items >e j text1 ) no special
ma!matical m1n+4 ,execute ~! compute
cells z we "w "? !m4
7777777777777777777777777777777777777777
,sage
  ,9put3
zoo = ['snake', 'parrot', 'elephant',
'baboon', 'beetle'] zoo
  ,|tput3
['snake', 'parrot', 'elephant',
'baboon', 'beetle']
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,s ! squ>e brackets def9e ! b.d>ies (
|r li/1 commas sep>ate items1 & we c
give ! li/ a "n4 ,to "w ) j "o ele;t ( !
li/1 we use ! "n & a pair ( brackets )
an 9dex4 ,notice t li/s h 9dices t .72g9
c.t+ at.' .1z}o.'4 ,? w seem odd at f/ &
w seem v natural lat}4
                                     #ga
7777777777777777777777777777777777777777
,sage
  ,9put3
zoo[2]
  ,|tput3
'elephant'
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we c add a new cr1ture to ! zoo1 x is
jo9$ up at ! f> "r 5d4
7777777777777777777777777777777777777777
,sage
  ,9put3
zoo.append('ostrich'); zoo
  ,|tput3
['snake', 'parrot', 'elephant',
'baboon', 'beetle', 'ostrich']
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we c remove a cr1ture4
7777777777777777777777777777777777777777
,sage
  ,9put3
zoo.remove('parrot') zoo
  ,|tput3                            #gb
['snake', 'elephant', 'baboon',
'beetle', 'ostrich']
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we c extract a subli/4 ,"h we />t )
ele;t #a "<! elephant"> & g all ! way up
to1 .1b .1n .19clud+.'1 ele;t #c "<!
beetle">4 ,ag a bit odd1 b x w feel
natural lat}4 ,= n{1 notice t we >e
extract+ two ele;ts ( ! li/s1 exactly
_% #3-1 .k #2 _: ele;ts4
7777777777777777777777777777777777777777
,sage
  ,9put3
mammals = zoo[1:3] mammals
  ,|tput3
['elephant', 'baboon']
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,(t5 we w want to see if two li/s >e
equal4 ,to d t we w ne$ to sort a li/
f/4 ,a func;n cr1tes a new1 sort$ li/1
l1v+ ! orig9al al"o4 ,s we ne$ to save !
new "o ) a new "n4
                                     #gc
7777777777777777777777777777777777777777
,sage
  ,9put3
newzoo = sorted(zoo) newzoo
  ,|tput3
['baboon', 'beetle', 'elephant',
'ostrich', 'snake']
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
zoo.sort() zoo
  ,|tput3
['baboon', 'beetle', 'elephant',
'ostrich', 'snake']
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,notice t if y run ? la/ compute cell
yr zoo has *ang$ & "s comm&s abv w n
necess>ily execute ! same way4 ,if y
want to exp}i;t1 g all ! way back to !
f/ cr1;n ( ! zoo & />t execut+ cells ag
f "! ) a fre% zoo4
  ,a 3/ruc;n call$ a ~1li/           #gd
~1compreh5.n is especially p{};l1
especially s9ce x alm exactly mirrors
nota;n we use to describe sets4 ,suppose
we want to =m ! plural ( ! "ns ( !
cr1tures 9 |r zoo4 ,we build a new li/1
bas$ on all ( ! ele;ts ( |r old li/4
7777777777777777777777777777777777777777
,sage
  ,9put3
plurality__zoo = [animal+'s' for animal
in zoo] plurality__zoo
  ,|tput3
['baboons', 'beetles', 'elephants',
'ostrichs', 'snakes']
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,alm l x says3 we add an 8;s0 to ea*
animal "n1 = ea* animal 9 ! zoo1 & place
!m 9 a new li/4 ,p}fect4 "<,except =
gett+ ! plural ( 8o/ri*0 wr;g4">

      ,subsec;n #a4f4e ,li/s ( ,9teg}s
  ,"o f9al type ( li/1 ) numb}s ? "t4 ,!
srange"<"> func;n w cr1te li/s ( 9teg}s4
"<,! 8;s0 9 ! "n /&s = 8,sage0 & s   #ge
w produce 9teg}s t ,sage "u/&s be/4 ,_m
e>ly di6iculties ) ,sage & gr|p !ory c 2
alleviat$ by us+ only ? comm& to cr1te
li/s ( 9teg}s4"> ,9 xs simple/ =m an
9voca;n l srange"<#ab"> w cr1te a li/ (
#ab 9teg}s1 .7/>t+ at z}o.' & "w+ up to1
.1b .1n .19clud+.'1 #ab4 ,does ? s.d
famili>8
7777777777777777777777777777777777777777
,sage
  ,9put3
dozen = srange(12); dozen
  ,|tput3
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,"h >e two o!r =ms1 t y %d 2 able to
"u/& by /udy+ ! examples4
7777777777777777777777777777777777777777
,sage
  ,9put3
teens = srange(13, 20); teens
  ,|tput3
[13, 14, 15, 16, 17, 18, 19]
                                     #gf
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
decades = srange(1900, 2000, 10);
decades
  ,|tput3
[1900, 1910, 1920, 1930, 1940, 1950,
1960, 1970, 1980, 1990]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #a4f4f ,sav+ & ,%>+ ,yr
      ,"w
  ,"! is a 8,save0 button 9 ! upp}-"r
corn} ( ! ,sage ,notebook4 ,? w save a
curr5t copy ( yr "w%eet t y c retrieve
yr "w f )9 yr notebook ag lat}1 ?|< y h
to re-execute all ! cells :5 y re-op5 !
"w%eet4
  ,"! is al a 8,file0 drop-d{n li/1 on !
left1 j abv yr v top compute cell "<n 2
3fus$ ) yr br{s}'s ,file m5u item6">4 ,y
w see a *oice "h label$ 8,save "w%eet to
a file4440 ,:5 y d ?1 y >e cr1t+ a   #gg
copy ( yr "w%eet 9 ! sws =mat "<%ort =
8,sage ,"w,%eet0">4 ,y c email ? file1
or po/ x on a website1 = o!r ,sage us}s
& !y c use ! 8,upload0 l9k on ! homepage
( _! notebook to 9corporate a copy ( yr
"w%eet 9to _! notebook4
  ,"! >e o!r ways to %>e "w%eets t y c
exp}i;t )1 b ? gives y "o way to %>e any
"w%eet ) anybody alm any":4
  ,we h cov}$ a lot "h 9 ? sec;n1 s come
back lat} to pick up tidbits y mi<t h
miss$4 ,"! >e al _m m f1tures 9 ! ,sage
,notebook t we h n cov}$4
,ex}cises #a4g ,sage ,ex}cises #a 4
  ,? ex}cise is j ab mak+ sure y "k h{
to use ,sage4 ,y may 2 us+ ! ,sage
,notebook s}v} ! onl9e ,co,calc s}vice
"? yr web br{s}4 ,9 ei ev5t1 cr1te a new
"w%eet4 ,d "s non-trivial computa;n1
maybe a pretty plot or "s grue"s
num}ical computa;n to an 9sane preci.n4
,cr1te an 9t}e/+ li/ & exp}i;t ) x "s4
,maybe 9clude "s nicely =matt$ text or
;,t e,x us+ ! 9clud$ m9i-~w-processor (
! ,sage ,notebook "<hov} until a     #gh
blue b> appe>s 2t cells & !n
%ift-click"> or cr1te com;t>y 9 cells )9
,co,calc us+ ! ~1magics .0html or .0md
on a l9e ( _! {n foll{$ by text 9 ,,html
or ,m>kd{n syntax "<respectively">4
  ,use :at"e me*anism yr 9/ructor has 9
place = submitt+ yr "w4 ,or save yr
"w%eet & !n trade ) a classmate4
















                                     #gi
          ,*apt} #b ,! ,9teg}s

  ,! 9teg}s >e ! build+ blocks (
ma!matics4 ,9 ? *apt} we w 9ve/igate !
funda;tal prop}ties ( ! 9teg}s1 9clud+
ma!matical 9duc;n1 ! divi.n algori?m1 &
! ,funda;tal ,!orem ( ,>i?metic4

    ,sec;n #b4a ,ma!matical ,9duc;n
  ,suppose we wi% to %{ t
_% #1+2+'''+n .k ?n(n+1)/2# _:
= any natural numb} .2;n4 ,? =mula is
easily  v}ifi$ = small numb}s s* z _% n
.k #1 _:1 _% #2 _:1 _% #3 _:1 or
_% #4 _:1 b x is impossible to v}ify =
all natural numb}s on a case-by-case
basis4 ,to prove ! =mula true 9 g5}al1 a
m g5}ic me?od is requir$4
  ,suppose we h v}ifi$ ! equa;n = ! f/
.2;n cases4 ,we w attempt to %{ t we c
g5}ate ! =mula = ! _% (n+1) _:? case f ?
k4 ,! =mula is true = _% n .k #1 _: s9ce
_% #1 .k ?1(1+1)/2# _:
4 ,if we h v}ifi$ ! f/ .2;n cases1 !n
_%                                   #hj
4 ,? is exactly ! =mula = ! _% (n+1) _:?
case4
  ,? me?od ( pro( is "kn z ~1ma!matical
~19duc;n~'4 ,9/1d ( attempt+ to v}ify a
/ate;t ab "s subset .2;,s ( ! positive
9teg}s _% _,n _: on a case-by-case
basis1 an impossible task if .2;,s is an
9f9ite set1 we give a specific pro( = !
smalle/ 9teg} 2+ 3sid}$1 foll{$ by a
g5}ic >gu;t %{+ t if ! /ate;t holds = a
giv5 case1 !n x m/ al hold = ! next case
9 ! sequ;e4 ,we summ>ize ma!matical
9duc;n 9 ! foll{+ axiom4
7777777777777777777777777777777777777777
,pr9ciple  #b4a4a 4  ,f/ ,pr9ciple (
,ma!matical ,9duc;n4
  ,let _% ,s(n) _: 2 a /ate;t ab 9teg}s
= _% n `e _,n _: & suppose _% ,s(n0) _:
is true = "s 9teg} _% n0 _:4 ,if = all
9teg}s .2;k ) _% k .1: n0 _:1
_% ,s(k) _: implies t _% ,s(k+1) _: is
true1 !n _% ,s(n) _: is true = all
9teg}s .2;n grt} ?an or equal to
_% n0 _:4
                                     #ha
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #b4a4b 4
  ,= all 9teg}s _% n .1: #3 _:1 _% #2~n"
.1 n+4 _:4 ,s9ce
_% #8 .k #2~3" .1 #3+4 .k #7 _:
1 ! /ate;t is true = _% n0 .k #3 _:4
,assume t _% #2~k" .1 k+4 _: = _% k .1:
#3 _:4 ,!n _% #2~k+1" .k #2*2~k" .1
#2(k+4) _:4 ,b
_% #2(k+4) .k #2k+8 .1 k+5 .k (k+1)+4 _:
s9ce .2;k is positive4 ,h;e1 by 9duc;n1
! /ate;t holds = all 9teg}s _% n .1:
#3 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #b4a4c 4
  ,e 9teg} _% #10~n+1"+3*10~n+5 _: is
divisible by _% #9 _: = _% n `e _,n _:4
,= _% n .k #1 _:1
_% #10~1+1"+3*10+5 .k #135 .k #9*15 _:
is divisible by _% #9 _:4 ,suppose t
_% #10~k+1"+3*10~k+5 _: is           #hb
divisible by _% #9 _: = _% k .1: #1 _:4
,!n
_%
is divisible by _% #9 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #b4a4d 4
  ,we w prove ! b9omial !orem us+
ma!matical 9duc;n2 t is1
_% (a+b)~n" .k ".,s%k .k #0<n}n
ka~k"b~n-k _:
1 ": .2a & .2;b >e r1l numb}s1 _% n `e
_,n _:1 &
_% n k .k ?n&/k6 (n-k)&# _:
is ! b9omial coe6ici5t4  ,we f/ %{ t
_% n+1 k .k n k+n k-1 _:
4 ,? result foll{s f
_%
4 ,if _% n .k #1 _:1 ! b9omial !orem is
easy to v}ify4 ,n{ assume t ! result is
true = .2;n grt} ?an or equal to
_% #1 _:4 ,!n
_%
4                                    #hc
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we h an equival5t /ate;t ( !
,pr9ciple ( ,ma!matical ,9duc;n t is (t5
v use;l4
7777777777777777777777777777777777777777
,pr9ciple  #b4a4e 4  ,second ,pr9ciple (
,ma!matical ,9duc;n4
  ,let _% ,s(n) _: 2 a /ate;t ab 9teg}s
= _% n `e _,n _: & suppose _% ,s(n0) _:
is true = "s 9teg} _% n0 _:4 ,if
_% ,s(n0), ,s(n0+1), ''' , ,s(k) _:
imply t _% ,s(k+1) _: = _% k .1: n0 _:1
!n ! /ate;t _% ,s(n) _: is true = all
9teg}s _% n .1: n0 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,a nonempty subset .2;,s ( _% _,z _:
is ~1well-ord}$  if .2;,s 3ta9s a l1/
ele;t4 ,notice t ! set _% _,z _: is n
well-ord}$ s9ce x does n 3ta9 a smalle/
ele;t4 ,h{"e1 ! natural numb}s >e
well-ord}$4
7777777777777777777777777777777777777777
,pr9ciple  #b4a4f 4  ,pr9ciple (     #hd
,well-,ord}+4
  ,e nonempty subset ( ! natural numb}s
is well-ord}$4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! ,pr9ciple ( ,well-,ord}+ is
equival5t to ! ,pr9ciple ( ,ma!matical
,9duc;n4
7777777777777777777777777777777777777777
,lemma  #b4a4g 4
  ,! ,pr9ciple ( ,ma!matical ,9duc;n
implies t _% #1 _: is ! l1/ positive
natural numb}4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,s .k .(n `e _,n3 n .1:
#1.) _:4 ,!n _% #1 `e ,s _:4 ,assume t
_% n `e ,s _:4 ,s9ce _% #0 "k #1 _:1 x
m/ 2 ! case t _% n .k n+0 "k n+1 _:4
,"!=e1 _% #1 "k: n "k n+1 _:4
,3sequ5tly1 if _% n `e ,s _:1 !n
_% n+1 _: m/ al 2 9 .2;,s1 & by !
,pr9ciple ( ,ma!matical ,9duc;n1 &   #he
_% ,s .k _,n _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #b4a4h 4
  ,! ,pr9ciple ( ,ma!matical ,9duc;n
implies ! ,pr9ciple ( ,well-,ord}+4 ,t
is1 e nonempty subset ( _% _,n _: 3ta9s
a l1/ ele;t4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,we m/ %{ t if .2;,s is a nonempty
subset ( ! natural numb}s1 !n .2;,s
3ta9s a l1/ ele;t4 ,if .2;,s 3ta9s #a1
!n ! !orem is true by ,lemma #b4a4g4
,assume t if .2;,s 3ta9s an 9teg} .2;k
s* t _% #1 "k: k "k: n _:1 !n .2;,s
3ta9s a l1/ ele;t4 ,we w %{ t if a set
.2;,s 3ta9s an 9teg} less ?an or equal
to _% n+1 _:1 !n .2;,s has a l1/ ele;t4
,if .2;,s does n 3ta9 an 9teg} less ?an
_% n+1 _:1 !n _% n+1 _: is ! smalle/
9teg} 9 .2;,s4 ,o!rwise1 s9ce .2;,s  #hf
is nonempty1 .2;,s m/ 3ta9 an 9teg} less
?an or equal to .2;n4 ,9 ? case1 by
9duc;n1 .2;,s 3ta9s a l1/ ele;t4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,9duc;n c al 2 v use;l 9 =mulat+
def9i;ns4 ,= 9/.e1 "! >e two ways to
def9e _% n& _:1 ! factorial ( a positive
9teg} .2;n4

_4
    ,! .1explicit def9i;n3 _% n6  .k
  #1*2*3 ''' (n-1)*n _:4
_4
    ,! .19ductive or .1recursive
  def9i;n3 _% #16  .k #1 _: & _% n6  .k
  n(n-1)& _: = _% n .1 #1 _:4

,e gd ma!matician or comput} sci5ti/ "ks
t look+ at problems recursively1 z
oppos$ to explicitly1 (t5 results 9
bett} "u/&+ ( complex issues4

    ,sec;n #b4b ,! ,divi.n ,algori?m
  ,an applica;n ( ! ,pr9ciple (      #hg
,well-,ord}+ t we w use (t5 is ! divi.n
algori?m4
7777777777777777777777777777777777777777
,!orem  #b4b4a 4  ,divi.n ,algori?m4
  ,let .2a & .2;b 2 9teg}s1 ) _% b .1
#0 _:4 ,!n "! exi/ unique 9teg}s .2;q &
.2;r s* t
_% a .k bq+r _:
": _% #0 "k: r "k b _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,? is a p}fect example ( !
exi/;e-&-unique;s type ( pro(4 ,we m/ f/
prove t ! numb}s .2;q & .2;r actually
exi/4 ,!n we m/ %{ t if _% q' _: &
_% r' _: >e two o!r s* numb}s1 !n _% q
.k q' _: & _% r .k r' _:4
  .7,exi/;e ( ;q & ;r4.' ,let
_% ,s .k .(a-bk3 k `e _,zanda-bk .1:
#0.) _:
4 ,if _% #0 `e ,s _:1 !n .2;b divides
.2a1 &  we c let _% q .k a_/b _: & _% r
.k #0 _:4 ,if _% #0 /`e ,s _:1 we c  #hh
use ! ,well-,ord}+ ,pr9ciple4 ,we m/ f/
%{ t .2;,s is nonempty4 ,if _% a .1
#0 _:1 !n _% a-b*0 `e ,s _:4 ,if _% a "k
#0 _:1 !n _% a-b(#2a) .k a(1-2b) `e
,s _:4 ,9 ei case _% ,s /.k _0 _:4 ,by !
,well-,ord}+ ,pr9ciple1 .2;,s m/ h a
smalle/ memb}1 say _% r .k a-bq _:4
,"!=e1 _% a .k bq+r _:1 _% r .1: #0 _:4
,we n{ %{ t _% r "k b _:4 ,suppose t
_% r .1 b _:4 ,!n
_% a-b(q+1) .k a-bq-b .k r-b .1 #0 _:
4 ,9 ? case we wd h _% a-b(q+1) _: 9 !
set .2;,s4 ,b !n _% a-b(q+1) "k a-bq _:1
: wd 3tradict ! fact t _% r .k a-bq _:
is ! smalle/ memb}  ( .2;,s4 ,s _% r "k:
b _:4 ,s9ce _% #0 /`e ,s _:1 _% r /.k
b _: & s _% r "k b _:4
  .7,unique;s ( ;q & ;r4.' ,suppose "!
exi/ 9teg}s .2;r1 _% r' _:1 .2;q1 &
_% q' _: s* t
_% a .k bq+r, #0 "k: r "k banda .k
bq~'"+r~'", #0 "k: r~'" "k b _:
4 ,!n _% bq+r .k bq~'"+r' _:4 ,assume t
_% r~'" .1: r _:4 ,f ! la/ equa;n we h
_% b(q-q~'") .k r~'"-r _:2 "!=e1     #hi
.2;b m/ divide _% r~'"-r _: & _% #0 "k:
r~'"-r "k: r~'" "k b _:4 ,? is possible
only if _% r~'"-r .k #0 _:4 ,h;e1 _% r
.k r' _: &  _% q .k q' _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,let .2a & .2;b 2 9teg}s4 ,if _% b .k
ak _: = "s 9teg} .2;k1 we write
_% a|b _:4 ,an 9teg} .2;d is call$ a
~1common ~1divisor ( .2a & .2;b if
_% d|a _: & _% d|b _:4 ,! ~7grte/ common
divisor~' ( 9teg}s .2a & .2;b is a
positive 9teg} .2;d s* t .2;d is a
common divisor ( .2a & .2;b & if
_% d' _: is any o!r common divisor ( .2a
& .2;b1 !n _% d~'"|d _:4  ,we write _% d
.k gcd (a, b) _:2 = example1 _% gcd
(#24, #36) .k #12 _: & _% gcd (#120,
#102) .k #6 _:4 ,we say t two 9teg}s .2a
& .2;b >e ~1relatively ~1prime if _% gcd
(a, b) .k #1 _:4
7777777777777777777777777777777777777777
,!orem  #b4b4b 4
  ,let .2a & .2;b 2 nonz}o 9teg}s4 ,!n
"! exi/ 9teg}s .2;r & .2;s s* t      #ij
_% gcd (a, b) .k ar+bs _:
4 ,fur!rmore1 ! grte/ common divisor (
.2a & .2;b is unique4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,let
_% ,s .k .(am+bn3 m, n `e _,zandam+bn .1
#0.) _:
4 ,cle>ly1 ! set .2;,s is nonempty2 h;e1
by ! ,well-,ord}+ ,pr9ciple .2;,s m/ h a
smalle/ memb}1 say _% d .k ar+bs _:4 ,we
claim t _% d .k gcd (a, b) _:4 ,write
_% a .k dq+r' _: ": _% #0 "k: r~'" "k
d _:4 ,if _% r~'" .1 #0 _:1 !n
_%
1 : is 9 .2;,s4 ,b ? wd 3tradict ! fact
t .2;d is ! smalle/ memb} ( .2;,s4 ,h;e1
_% r~'" .k #0 _: & .2;d divides .2a4 ,a
simil> >gu;t %{s t .2;d divides .2;b4
,"!=e1 .2;d is a common divisor ( .2a &
.2;b4
  ,suppose t _% d' _: is ano!r common
divisor ( .2a & .2;b1 & we want to   #ia
%{ t _% d~'"|d _:4 ,if we let _% a .k
d~'"h _: & _% b .k d~'"k _:1 !n
_% d .k ar+bs .k d~'"hr+d~'"ks .k
d~'"(hr+ks) _:
4 ,s _% d' _: m/ divide .2;d4 ,h;e1 .2;d
m/ 2 ! unique grte/ common divisor ( .2a
& .2;b4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,coroll>y  #b4b4c 4
  ,let .2a & .2;b 2 two 9teg}s t >e
relatively prime4 ,!n "! exi/ 9teg}s
.2;r & .2;s s* t _% ar+bs .k #1 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #b4b4a ,! ,euclid1n
      ,algori?m
  ,am;g o!r ?+s1 ,!orem #b4b4b all{s u
to compute ! grte/ common divisor ( two
9teg}s4
7777777777777777777777777777777777777777
,example  #b4b4d 4
  ,let u compute ! grte/ common divisor
( _% #945 _: & _% #2415 _:4 ,f/      #ib
obs}ve t
_%
4 ,rev}s+ |r /eps1 _% #105 _: divides
_% #420 _:1 _% #105 _: divides
_% #525 _:1 _% #105 _: divides
_% #945 _:1 & _% #105 _: divides
_% #2415 _:4 ,h;e1 _% #105 _: divides
bo? _% #945 _: & _% #2415 _:4 ,if .2;d 7
ano!r common divisor ( _% #945 _: &
_% #2415 _:1 !n .2;d wd al h to divide
_% #105 _:4 ,"!=e1 _% gcd (#945, #2415)
.k #105 _:4
  ,if we "w backw>d "? ! abv sequ;e (
equa;ns1 we c al obta9 numb}s .2;r &
.2;s s* t _% #945r+2415s .k #105 _:4
,obs}ve t
_%
4 ,s _% r .k -#5 _: & _% s .k #2 _:4
,notice t .2;r & .2;s >e n unique1 s9ce
_% r .k #41 _: & _% s .k -#16 _: wd al
"w4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,to compute _% gcd (a, b) .k d _:1 we
>e us+ rep1t$ divi.ns to obta9 a     #ic
decr1s+ sequ;e ( positive 9teg}s _% r1
.1 r2 .1 ''' .1 r;n" .k d _:2 t is1
_%
4 ,to f9d .2;r & .2;s s* t _% ar+bs .k
d _:1 we 2g9 ) ? la/ equa;n & sub/itute
results obta9$ f ! previ|s equa;ns3
_%
4 ,! algori?m t we h j us$ to f9d !
grte/ common divisor .2;d ( two 9teg}s
.2a & .2;b & to write .2;d z ! l9e>
comb9a;n ( .2a & .2;b is "kn z !
~1,euclid1n ~1algori?m~'4

      ,subsec;n #b4b4b ,prime ,numb}s
  ,let .2;p 2 an 9teg} s* t _% p .1
#1 _:4 ,we say t .2;p is a ~1prime
~1numb}~'1  or simply .2;p is ~1prime~'1
if ! only positive numb}s t divide .2;p
>e _% #1 _: & .2;p xf4 ,an 9teg} _% n .1
#1 _: t is n prime is sd to 2
~1composite~'4
7777777777777777777777777777777777777777
,lemma  #b4b4e 4  ,euclid4
  ,let .2a & .2;b 2 9teg}s & .2;p 2 a
prime numb}4 ,if _% p|ab _:1 !n ei   #id
_% p|a _: or _% p|b _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,suppose t .2;p does n divide .2a4 ,we
m/ %{ t _% p|b _:4 ,s9ce _% gcd (a, p)
.k #1 _:1 "! exi/ 9teg}s .2;r & .2;s s*
t _% ar+ps .k #1 _:4 ,s
_% b .k b(ar+ps) .k (ab)r+p(bs) _:
4 ,s9ce .2;p divides bo? _% ab _: & xf1
.2;p m/ divide _% b .k (ab)r+p(bs) _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #b4b4f 4  ,euclid4
  ,"! exi/ an 9f9ite numb} ( primes4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,we w prove ? !orem by 3tradic;n4
,suppose t "! >e only a f9ite numb} (
primes1 say _% p1, p2, ''' , p;n" _:4
,let _% ,p .k p1p2 ''' p;n"+1 _:4    #ie
,!n .2;,p m/ 2 divisible by "s _% p;i _:
= _% #1 "k: i "k: n _:4 ,9 ? case1
_% p;i _: m/ divide _% ,p-p1p2 ''' p;n"
.k #1 _:1 : is a 3tradic;n4 ,h;e1 ei
.2;,p is prime or "! exi/s an addi;nal
prime numb} _% p /.k p;i _: t divides
.2;,p4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #b4b4g 4  ,funda;tal ,!orem (
,>i?metic4
  ,let .2;n 2 an 9teg} s* t _% n .1
#1 _:4 ,!n
_% n .k p1p2 ''' p;k" _:
1 ": _% p1, ''' , p;k" _: >e  primes "<n
necess>ily 4t9ct">4 ,fur!rmore1 ?
factoriza;n is unique2 t is1 if
_% n .k q1q2 ''' q;l" _:
1 !n _% k .k l _: & ! _% q;i _:'s >e j !
_% p;i _:'s re>rang$4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4                              #if
  .1,unique;s4  ,to %{ unique;s we w use
9duc;n on .2;n4 ,! !orem is c}ta9ly true
= _% n .k #2 _: s9ce 9 ? case .2;n is
prime4 ,n{ assume t ! result holds = all
9teg}s .2;m s* t _% #1 "k: m "k n _:1 &
_% n .k p1p2 ''' p;k" .k q1q2 '''
q;l" _:
1 ": _% p1 "k: p2 "k: ''' "k: p;k _: &
_% q1 "k: q2 "k: ''' "k: q;l _:4 ,by
,lemma #b4b4e1 _% p1|q;i _: = "s _% i .k
#1, ''' , l _: & _% q1|p;j _: = "s _% j
.k #1, ''' , k _:4 ,s9ce all ( !
_% p;i _:'s & _% q;i _:'s >e prime1
_% p1 .k q;i _: &  _% q1 .k p;j _:4
,h;e1 _% p1 .k q1 _: s9ce _% p1 "k: p;j"
.k q1 "k: q;i" .k p1 _:4 ,by ! 9duc;n
hypo!sis1
_% n~'" .k p2 ''' p;k" .k q2 ''' q;l" _:
has a unique factoriza;n4 ,h;e1 _% k .k
l _: & _% q;i" .k p;i _: = _% i .k #1,
''' , k _:4
  .1,exi/;e4 ,to %{ exi/;e1 suppose t "!
is "s 9teg} t _c 2 writt5 z ! product (
primes4 ,let .2;,s 2 ! set ( all s*
numb}s4 ,by ! ,pr9ciple (            #ig
,well-,ord}+1 .2;,s has a smalle/ numb}1
say .2a4 ,if ! only positive factors (
.2a >e .2a & _% #1 _:1 !n .2a is prime1
: is a 3tradic;n4 ,h;e1 _% a .k a1a2 _:
": _% #1 "k a1 "k a _: & _% #1 "k a2 "k
a _:4 ,nei _% a1 `e ,s _: nor _% a2 `e
,s _:1 s9ce .2a is ! smalle/ ele;t 9
.2;,s4 ,s
_%
4 ,"!=e1
_% a .k a1a2 .k p1 ''' p;r"q1 '''
q;s" _:
4 ,s _% a /`e ,s _:1 : is a 3tradic;n4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #b4b4c ,hi/orical ,note
  ,prime numb}s 7 f/ /udi$ by ! anci5t
,greeks4 ,two important results f
antiqu;y >e ,euclid's pro( t an 9f9ite
numb} ( primes exi/ & ! ,sieve (
,}atos!nes1 a me?od ( comput+ all ( !
prime numb}s less ?an a fix$ positive
9teg} .2;n4 ,"o problem 9 numb} !ory is
to f9d a func;n .2;f s* t _% f(n) _: is
prime = ea* 9teg} .2;n4 ,pi}re       #ih
,f}mat "<#afja8,-#affe"> 3jectur$ t
_% #2~2~~n"+1 _: 0 prime = all .2;n1 b
lat} x 0 %{n by ,leonh>d ,eul}
"<#agjg,-#aghc"> t
_% #2~2~~5"+1 .k #4,294,967,297 _:
is a composite numb}4 ,"o ( ! _m unprov5
3jectures ab prime numb}s is ,goldba*'s
,3jecture4 ,9 a lr to ,eul} 9 #agdb1
,*ri/ian ,goldba* /at$ ! 3jecture t e
ev5 9teg} ) ! excep;n ( _% #2 _: seem$
to 2 ! sum ( two primes3 _% #4 .k
#2+2 _:1 _% #6 .k #3+3 _:1 _% #8 .k
#3+5 _:1 _% ''' _:4 ,al? ! 3jecture has
be5 v}ifi$ = ! numb}s up "?
_% #4`*10~18 _:1 x has yet to 2 prov5 9
g5}al4 ,s9ce prime numb}s play an
important role 9 public key
cryptography1 "! is curr5tly a grt d1l (
9t}e/ 9 det}m9+ :e!r or n a l>ge numb}
is prime4
7777777777777777777777777777777777777777
,sage4
  ,sage's orig9al purpose 0 to support
rese>* 9 numb} !ory1 s x is p}fect = !
types ( computa;ns ) ! 9teg}s t we   #ii
h 9 ? *apt}4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

,r1d+ ,"qs #b4c ,r1d+ ,"qs #a 4
  ,use ,sage to express _% #123456792 _:
z a product ( prime numb}s4
#b 4
  ,f9d ! grte/ common divisor (
_% #84 _: & _% #52 _:4
#c 4
  ,f9d 9teg}s .2;r & .2;s s t
_% r(#84)+s(#52) .k gcd (#84, #52) _:4
#d 4
  ,expla9 ! use ( ! t}m 89duc;n
hypo!sis40
#e 4
  ,:at is ,goldba*'s ,3jecture8 ,& :y is
x call$ a 83jecture08
,ex}cises #b4d ,ex}cises #a 4
  ,prove t
_% #1~2"+2~2"+'''+n~2" .k
?n(n+1)(2n+1)/6# _:
= _% n `e _,n _:4
,h9t3
  ,! base case1 _% ,s(#1)3          #ajj
`(#1(1+1)(2(1)+1)`)_/6 .k #1 .k #1~2 _:
is true4 ,assume t _% ,s(k)3
#1~2"+2~2"+'''+k~2" .k
`(k(k+1)(2k+1)`)_/6 _: is true4 ,!n
_%
1 & s _% ,s(k+1) _: is true4 ,?us1
_% ,s(n) _: is true = all positive
9teg}s .2;n4
#b 4
  ,prove t
_% #1~3"+2~3"+'''+n~3" .k
?n~2"(n+1)~2"/4# _:
= _% n `e _,n _:4
#c 4
  ,prove t _% n6  .1 #2~n _: = _% n .1:
#4 _:4
,h9t3
  ,! base case1 _% ,s(#4)3 #46  .k #24
.1 #16 .k #2~4 _: is true4 ,assume
_% ,s(k)3 k6  .1 #2~k _: is true4 ,!n
_% (k+1)6  .k k6 (k+1) .1 #2~k"*2 .k
#2~k+1 _:1 s _% ,s(k+1) _: is true4
,?us1 _% ,s(n) _: is true = all positive
9teg}s .2;n4
#d 4                                #aja
  ,prove t
_% x+4x+7x+'''+(3n-2)x .k
?n(3n-1)x/2# _:
= _% n `e _,n _:4
#e 4
  ,prove t _% #10~n+1"+10~n"+1 _: is
divisible by _% #3 _: = _% n `e _,n _:4
#f 4
  ,prove t _% #4*10~2n+9*10~2n-1+5 _: is
divisible by _% #99 _: = _% n `e _,n _:4
#g 4
  ,%{ t
_% <n>a1a2 ''' a;n"} "k: ?1/n#".,s%k .k
#1<n}a;k _:
4
#h 4
  ,prove ! ,leibniz rule =
_% f~(n)"(x) _:1 ": _% f~(n) _: is !
.2n? d}ivative ( .2;f2 t is1 %{ t
_% (fg)~(n)"(x) .k ".,s%k .k #0<n}n
kf~(k)"(x)g~(n-k)"(x) _:
4
,h9t3
  ,foll{ ! pro( 9 ,example #b4a4d4
#i 4                                #ajb
  ,use 9duc;n to prove t
_% #1+2+2~2"+'''+2~n" .k #2~n+1"-1 _: =
_% n `e _,n _:4
#aj 4
  ,prove t
_% ?1/2#+?1/6#+'''+?1/n(n+1)# .k
?n/n+1# _:
= _% n `e _,n _:4
#aa 4
  ,if .2;x is a nonnegative r1l numb}1
!n %{ t _% (#1+x)~n"-1 .1: nx _: = _% n
.k #0, #1, #2, ''' _:4
,h9t3
  ,! base case1 _% ,s(#0)3 (#1+x)~0"-1
.k #0 .1: #0 .k #0*x _: is true4 ,assume
_% ,s(k)3 (#1+x)~k"-1 .1: kx _: is true4
,!n
_%
1 s _% ,s(k+1) _: is true4 ,"!=e1
_% ,s(n) _: is true = all positive
9teg}s .2;n4
#ab 4  ,p{} ,sets4
  ,let .2;,x 2 a set4 ,def9e ! ~1p{}
~1set ( .2;,x1 d5ot$ _% `,p(,x) _:1 to 2
! set ( all subsets  ( .2;,x4  ,=   #ajc
example1
_% `,p(.(a, b.)) .k .(_0, .(a.), .(b.),
.(a, b.).) _:
4 ,= e positive 9teg} .2;n1 %{ t a set )
exactly .2;n ele;ts has a p{} set )
exactly _% #2~n _: ele;ts4
#ac 4
  ,prove t ! two pr9ciples ( ma!matical
9duc;n /at$ 9 ,sec;n #b4a >e equival5t4
#ad 4
  ,%{ t ! ,pr9ciple ( ,well-,ord}+ = !
natural numb}s implies t #a is ! smalle/
natural numb}4 ,use ? result to %{ t !
,pr9ciple ( ,well-,ord}+ implies !
,pr9ciple ( ,ma!matical ,9duc;n2 t is1
%{ t if _% ,s _"k _,n _: s* t _% #1 `e
,s _: & _% n+1 `e ,s _: :5"e _% n `e
,s _:1 !n _% ,s .k _,n _:4
#ae 4
  ,= ea* ( ! foll{+ pairs ( numb}s .2a &
.2;b1 calculate _% gcd (a, b) _: & f9d
9teg}s .2;r & .2;s s* t _% gcd (a, b) .k
ra+sb _:4

a4                                  #ajd
    _% #14 _: & _% #39 _:
;b4
    _% #234 _: & _% #165 _:
;c4
    _% #1739 _: & _% #9923 _:
;d4
    _% #471 _: & _% #562 _:
;e4
    _% #23771 _: & _% #19945 _:
;f4
    _% -#4357 _: & _% #3754 _:

#af 4
  ,let .2a & .2;b 2 nonz}o 9teg}s4 ,if
"! exi/ 9teg}s .2;r & .2;s s* t _% ar+bs
.k #1 _:1 %{ t .2a & .2;b >e relatively
prime4
#ag 4  ,fibona3i ,numb}s4
  ,! ,fibona3i numb}s >e
_% #1, #1, #2, #3, #5, #8, #13, #21,
''' _:
4 ,we c def9e !m 9ductively by _% f1 .k
#1 _:1 _% f2 .k #1 _:1 & _% f;n+2" .k
f;n+1"+f;n _: = _% n `e _,n _:4
                                    #aje
a4
    ,prove t _% f;n" "k #2~n _:4
;b4
    ,prove t _% f;n+1"f;n-1" .k
  f;n~2"+(-#1)~n _:1 _% n .1: #2 _:4
;c4
    ,prove t _% f;n" .k
  `((#1+>5})~n"-(1->5})~n"`)_/2~n">5} _-
  :4
;d4
    ,%{ t _% "lim%n $o ,=} f;n"_/f;n+1"
  .k (>5}-1)_/2 _:4
;e4
    ,prove t _% f;n _: & _% f;n+1 _: >e
  relatively prime4

,h9t3
  ,= "<a"> & "<;b"> use ma!matical
9duc;n4 "<;c"> ,%{ t _% f1 .k #1 _:1
_% f2 .k #1 _:1 & _% f;n+2" .k
f;n+1"+f;n _:4 "<;d"> ,use "p "<;c">4
"<;e"> ,use "p "<;b"> &
,ex}cise #b4d4af4
#ah 4
  ,let .2a & .2;b 2 9teg}s s* t     #ajf
_% gcd (a, b) .k #1 _:4 ,let .2;r & .2;s
2 9teg}s s* t _% ar+bs .k #1 _:4 ,prove
t
_% gcd (a, s) .k gcd (r, b) .k gcd (r,
s) .k #1 _:
4
#ai 4
  ,let _% x, y `e _,n _: 2 relatively
prime4 ,if _% xy _: is a p}fect squ>e1
prove t .2;x & .2;y m/ bo? 2 p}fect
squ>es4
,h9t3
  ,use ! ,funda;tal ,!orem ( ,>i?metic4
#bj 4
  ,us+ ! divi.n algori?m1 %{ t e p}fect
squ>e is ( ! =m _% #4k _: or _% #4k+1 _:
= "s nonnegative 9teg} .2;k4
#ba 4
  ,suppose t _% a, b, r, s _: >e
pairwise relatively prime & t
_%
4 ,prove t .2a1 .2;r1 & .2;s >e odd &
.2;b is ev54
#bb 4
  ,let _% n `e _,n _:4 ,use !       #ajg
divi.n algori?m to prove t e 9teg} is
3gru5t mod .2;n to precisely "o ( !
9teg}s _% #0, #1, ''' , n-1 _:4 ,3clude
t if .2;r is an 9teg}1 !n "! is exactly
"o .2;s 9 _% _,z _: s* t _% #0 "k: s "k
n _: & _% `(r`) .k `(s`) _:4 ,h;e1 !
9teg}s >e 9de$ "pi;n$ by 3gru;e mod
.2;n4
#bc 4
  ,def9e ! ~7l1/ common multiple~' ( two
nonz}o 9teg}s .2a & .2;b1 d5ot$ by
_% lcm(a, b) _:1 to 2 ! nonnegative
9teg} .2;m s* t bo? .2a & .2;b divide
.2;m1 & if .2a & .2;b divide any o!r
9teg} .2;n1 !n .2;m al divides .2;n4
,prove "! exi/s a unique l1/ common
multiple = any two 9teg}s .2a & .2;b4
,h9t3
  ,use ! ,pr9ciple ( ,well-,ord}+ & !
divi.n algori?m4
#bd 4
  ,if _% d .k gcd (a, b) _: & _% m .k
lcm(a, b) _:1 prove t _% dm .k |ab| _:4
#be 4
  ,%{ t _% lcm(a, b) .k ab _: if &  #ajh
only if _% gcd (a, b) .k #1 _:4
#bf 4
  ,prove t _% gcd (a, c) .k gcd (b, c)
.k #1 _: if & only if _% gcd (ab, c) .k
#1 _: = 9teg}s .2a1 .2;b1 & .2;c4
#bg 4
  ,let _% a, b, c `e _,z _:4 ,prove t if
_% gcd (a, b) .k #1 _: & _% a|bc _:1 !n
_% a|c _:4
,h9t3
  ,s9ce _% gcd (a, b) .k #1 _:1 "! exi/
9teg}s .2;r & .2;s s* t _% ar+bs .k
#1 _:4 ,?us1 _% acr+bcs .k c _:4
#bh 4
  ,let _% p .1: #2 _:4 ,prove t if
_% #2~p"-1 _: is prime1 !n .2;p m/ al 2
prime4
#bi 4
  ,prove t "! >e an 9f9ite numb} (
primes ( ! =m _% #6n+5 _:4
,h9t3
  ,e prime m/ 2 ( ! =m _% #2 _:1
_% #3 _:1 _% #6n+1 _:1 or _% #6n+5 _:4
,suppose "! >e only f9itely _m primes (
! =m _% #6k+5 _:4                   #aji
#cj 4
  ,prove t "! >e an 9f9ite numb} (
primes ( ! =m _% #4n-1 _:4
#ca 4
  ,us+ ! fact t _% #2 _: is prime1 %{ t
"! d n exi/ 9teg}s .2;p & .2;q s* t
_% p~2" .k #2q~2 _:4 ,demon/rate t "!=e
_% >2} _: _c 2 a ra;nal numb}4
,ex}cises #b4e ,programm+ ,ex}cises #a 4
 ,! ,sieve ( ,}atos!nes4
  ,"o me?od ( comput+ all ( ! prime
numb}s less ?an a c}ta9 fix$ positive
9teg} .2;,n is to li/ all ( ! numb}s
.2;n s* t _% #1 "k n "k ,n _:4 ,2g9 by
elim9at+ all ( ! multiples ( _% #2 _:4
,next elim9ate all ( ! multiples (
_% #3 _:4 ,n{ elim9ate all ( ! multiples
( _% #5 _:4 ,notice t _% #4 _: has alr
be5 cross$ |4 ,3t9ue 9 ? mann}1 notic+ t
we d n h to g all ! way to .2;,n2 x
su6ices to /op at _% >,n} _:4 ,us+ ?
me?od1 compute all ( ! prime numb}s less
?an _% ,n .k #250 _:4 ,we c al use ?
me?od to f9d all ( ! 9teg}s t >e
relatively prime to an 9teg}        #aaj
.2;,n4 ,simply elim9ate ! prime factors
( .2;,n & all ( _! multiples4 ,us+ ?
me?od1 f9d all ( ! numb}s t >e
relatively prime to _% ,n .k #120 _:4
,us+ ! ,sieve ( ,}atos!nes1 write a
program t w compute all ( ! primes less
?an an 9teg} .2;,n4
#b 4
  ,let _% _,n~0" .k _,n.+.(0.) _:4
,ack}mann's func;n is ! func;n _% ,a3
_,n~0"`*_,n~0" $o _,n~0 _: def9$ by !
equa;ns
_%
4 ,use ? def9i;n to compute _% ,a(#3,
#1) _:4 ,write a program to evaluate
,ack}mann's func;n4 ,modify !  program
to c.t ! numb} ( /ate;ts execut$ 9 !
program :5 ,ack}mann's func;n is
evaluat$4 ,h{ _m /ate;ts >e execut$ 9 !
evalua;n ( _% ,a(#4, #1) _:;8 ,:at ab
_% ,a(#5, #1) _:;8
#c 4
  ,write a comput} program t w imple;t !
,euclid1n algori?m4 ,! program %d a3ept
two positive 9teg}s .2a & .2;b z    #aaa
9put & %d |tput _% gcd (a, b) _: z well
z 9teg}s .2;r & .2;s s* t
_% gcd (a, b) .k ra+sb _:
4
,ref};es #b4f ,ref};es & ,su7e/$ ,r1d+s
.<#a.>    ,brook%e>1 ;,j4 ;,g4 ,!ory (
,computa;n3 ,=mal ,languages1 ,automata1
& ,complex;y4  ,b5jam9_/,cumm+s1 ,r$wood
,c;y1 ,,ca1 #aihi4 ,%{s ! rela;n%ips ( !
!oretical aspects ( comput} sci;e to set
!ory & ! 9teg}s4 .<#b.>    ,h>dy1 ;,g4
;,h4 & ,w"r1 ;,e4 ;,m4 ,an ,9troduc;n to
! ,!ory ( ,numb}s4  #fth $4 ,ox=d
,univ}s;y ,press1 ,new ,york1 #bjjh4
.<#c.>    ,niv51 ,i4 & ,zuck}man1 ;,h4
;,s4 ,an ,9troduc;n to ! ,!ory (
,numb}s4  #eth $4 ,wiley1 ,new ,york1
#aiia4 .<#d.>    ,v&5 ,eynd51 ;,c4
,ele;t>y ,numb} ,!ory4 #bnd $4  ,wavel&
,press1 ,l;g ,grove ,,il1 #bjja4

    ,sec;n #b4g ,sage
  ,_m prop}ties ( ! algebraic objects we
w /udy c 2 det}m9$ f prop}ties (
associat$ 9teg}s4 ,& ,sage has _m   #aab
p{};l func;ns = analyz+ 9teg}s4

      ,subsec;n #b4g4a ,divi.n ,algori?m
  ,! code a .0 ;b w return ! rema9d} ~u
divi.n ( .2a by .2;b4 ,9 o!r ~ws1 !
result is ! unique 9teg} .2;r s* t
"<#a"> _% #0 "k: r "k b _:1 & "<#b">
_% a .k bq+r _: = "s 9teg} .2;q "<!
quoti5t">1 z gu>ante$ by ! ,divi.n
,algori?m "<,!orem #b4b4a">4 ,!n
_% (a-r)_/b _: w equal .2;q4 ,= example1
7777777777777777777777777777777777777777
,sage
  ,9put3
r = 14 % _3 r
  ,|tput3
_2
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
q = (14 _- r)/3 q
  ,|tput3
_4                                  #aac
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,x is al possible to get bo? ! quoti5t
& rema9d} at ! same "t ) ! 4quo.-rem"<">
me?od "<quoti5t & rema9d}">4
7777777777777777777777777777777777777777
,sage
  ,9put3
a = 14 b = _3 a.quo__rem(b)
  ,|tput3
(4, 2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,a rema9d} ( z}o 9dicates divisibil;y4
,s "<a .0 ;b"> "7"7 #j w return ,true if
.2;b divides .2a1 & w o!rwise return
,false4
7777777777777777777777777777777777777777
,sage
  ,9put3
(20 % 5) == _0
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #aad
7777777777777777777777777777777777777777
,sage
  ,9put3
(17 % 4) == _0
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! 4divides"<"> me?od is ano!r op;n4
7777777777777777777777777777777777777777
,sage
  ,9put3
c = _5 c.divides(20)
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
d = _4 d.divides(17)
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #aae
      ,subsec;n #b4g4b ,grte/ ,common
      ,divisor
  ,! grte/ common divisor ( .2a & .2;b
is obta9$ ) ! comm& gcd"<a1 ;b">1 ": 9
|r f/ uses1 .2a & .2;b >e 9teg}s4 ,lat}1
.2a & .2;b c 2 o!r objects ) a no;n (
divisibil;y & 8grt;s10 s* z polynomials4
,= example1
7777777777777777777777777777777777777777
,sage
  ,9put3
gcd(2776, 2452)
  ,|tput3
_4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we c use ! gcd comm& to det}m9e if a
pair ( 9teg}s >e relatively prime4
7777777777777777777777777777777777777777
,sage
  ,9put3
a = 31049 b = 2105 gcd(a, b) == _1
  ,|tput3
_true
                                    #aaf
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
a = 3563 b = 2947 gcd(a, b) == _1
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! comm& xgcd"<a;1b">"<8e,xt5d$
,,gcd0"> returns a triple ": ! f/ ele;t
is ! grte/ common divisor ( .2a & .2;b
"<z ) ! gcd"<a;1b"> comm& abv">1 b !
next two ele;ts >e values ( .2;r & .2;s
s* t _% ra+sb .k gcd (a, b) _:4
7777777777777777777777777777777777777777
,sage
  ,9put3
xgcd(633,331)
  ,|tput3
(1, -137, 262)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,por;ns ( ! triple c 2 extract$   #aag
us+ .< .>"<89dex+0"> to a3ess ! 5tries (
! triple1 />t+ ) ! f/ z numb} #j4 ,=
example1 ! foll{+ %d alw return ! result
,true1 ev5 if y *ange ! values ( a & ;b4
,try *ang+ ! values ( a & ;b 2l1 to see
t ! result is alw ,true4
7777777777777777777777777777777777777777
,sage
  ,9put3
a = 633 b = 331 extended = xgcd(a, b) g
= extended[0] r = extended[1] s =
extended[2] g == r*a + s*b
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,/udy+ ? block ( code w g a l;g way
t{>ds help+ y get ! mo/ | ( ,sage's
|tput4 ,note t "7 is h{ a value is
.1assign$ to a v>iable1 :ile z 9 ! la/
l9e1 "7"7 is h{ we comp>e two items =
.1equal;y.'4

      ,subsec;n #b4g4c ,primes &
      ,factor+                      #aah
  ,! me?od 4is.-prime"<"> w det}m9e if
an 9teg} is prime or n4
7777777777777777777777777777777777777777
,sage
  ,9put3
a = 117371 a.is__prime()
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b = 14547073 b.is__prime()
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b == 1597 * 9109
  ,|tput3
_true
                                    #aai
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! comm& r&om.-prime"<a1 pro("7,true">
w g5}ate a r&om prime numb} 2t _% #2 _:
& .2a4 ,exp}i;t by execut+ ! foll{+ two
compute cells s"eal "ts4 "<,replac+
pro("7,true by pro("7,false w spe$ up !
se>*1 b "! w 2 a v1 v1 v small
probabil;y ! result w n 2 prime4">
7777777777777777777777777777777777777777
,sage
  ,9put3
a = random__prime(10^21, proof=_true) a
  ,|tput3
424729101793542195193
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
a.is__prime()
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #abj
  ,! comm& prime.-range"<a1 ;b"> returns
an ord}$ li/ ( all ! primes f .2a to
_% b-1 _:1 9clusive4 ,= example1
7777777777777777777777777777777777777777
,sage
  ,9put3
prime__range(500, 550)
  ,|tput3
[503, 509, 521, 523, 541, 547]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! comm&s next.-prime"<a"> &
previ|s.-prime"<a"> >e o!r ways to get a
s+le prime numb} ( a desir$ size4 ,give
!m a try 2l if y h an empty compute cell
"! "<z y w if y >e r1d+ 9 ! ,sage
,notebook1 or >e r1d+ ! onl9e v}.n">4
"<,! ha% symbol1 _?1 is us$ to 9dicate a
8com;t0 l9e1 : w n 2 evaluat$ by ,sage4
,s }ase ? l9e1 or />t on ! "o 2l x4">
7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)                          #aba
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,9 addi;n to *eck+ if 9teg}s >e prime
or n1 or g5}at+ prime numb}s1 ,sage c al
decompose any 9teg} 9to xs prime
factors1 z describ$ by ! ,funda;tal
,!orem ( ,>i?metic "<,!orem #b4b4g">4
7777777777777777777777777777777777777777
,sage
  ,9put3
a = 2600 a.factor()
  ,|tput3
2^3 * 5^2 * 13
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,s _% #2600 .k #2~3"`*5~2"`*13 _: & ?
is ! unique way to write _% #2600 _: z a
product ( prime numb}s "<o!r ?an
re>rang+ ! ord} ( ! primes !mvs 9 !
product">4
  ,:ile ,sage w pr9t a factoriza;n
nicely1 x is c>ri$ 9t}nally z a li/ (
pairs ( 9teg}s1 ) ea* pair 2+ a base "<a
prime numb}"> & an expon5t "<a positive
9teg}">4 ,/udy ! foll{+ c>e;lly1 z  #abb
x is ano!r gd ex}cise 9 "w+ ) ,sage
|tput 9 ! =m ( li/s4
7777777777777777777777777777777777777777
,sage
  ,9put3
a = 2600 factored = a.factor()
first__term = factored[0] first__term
  ,|tput3
(2, 3)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
second__term = factored[1] second__term
  ,|tput3
(5, 2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
third__term = factored[2] third__term
  ,|tput3
(13, 1)                             #abc
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
first__prime = first__term[0]
first__prime
  ,|tput3
_2
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
first__exponent = first__term[1]
first__exponent
  ,|tput3
_3
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! next compute cell rev1ls ! 9t}nal
v}.n ( ! factoriza;n by ask+ = ! actual
li/4 ,& we %{ h{ y cd det}m9e exactly h{
_m t}ms ! factoriza;n has by us+ ! l5g?
comm&1 l5"<">4                      #abd
7777777777777777777777777777777777777777
,sage
  ,9put3
list(factored)
  ,|tput3
[(2, 3), (5, 2), (13, 1)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
len(factored)
  ,|tput3
_3
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,c y extract ! next two primes1 & _!
expon5ts1 f a8
7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #abe
,ex}cises #b4h ,sage ,ex}cises
  ,~! ex}cises >e ab 9ve/igat+ basic
prop}ties ( ! 9teg}s1 "s?+ we w
frequ5tly d :5 9ve/igat+ gr|ps4 ,sage
"w%eets h ext5sive capabilities = mak+
new cells ) c>e;lly =matt$ text1 9clude
support = ;,l a,t e,x syntax to express
ma!matics4 ,s :5 a "q asks = explana;n
or com;t>y1 make a new cell &
communicate cle>ly ) yr audi;e4
#a 4
  ,use ! next.-prime"<"> comm& to 3/ruct
two di6}5t #h-digit prime numb}s & save
!m 9 v>iables "nd a & ;b4
#b 4
  ,use ! 4is.-prime"<"> me?od to v}ify t
yr primes a & ;b >e r1lly prime4
#c 4
  ,v}ify t _% #1 _: is ! grte/ common
divisor ( yr two primes f ! previ|s
ex}cises4
#d 4
  ,f9d two 9teg}s t make a 8l9e>
comb9a;n0 ( yr two primes equal to
_% #1 _:4 ,9clude a v}ifica;n ( yr  #abf
result4
#e 4
  ,det}m9e a factoriza;n 9to p{}s (
primes = _% c .k #4598037234 _:4
#f 4
  ,write a compute cell t def9es ! same
value ( ;c ag1 & !n def9es a c&idate
divisor ( ;c "nd ;d4 ,! ?ird l9e ( !
cell %d return ,true if & only if ;d is
a divisor ( ;c4 ,illu/rate ! use ( yr
cell by te/+ yr code ) _% d .k #7 _: & 9
a new copy ( ! cell1 te/+ yr code ) _% d
.k #11 _:4











                                    #abg
            ,*apt} #c ,gr|ps

  ,we 2g9 |r /udy ( algebraic /ructures
by 9ve/igat+ sets associat$ ) s+le
op}a;ns t satisfy c}ta9 r1sonable
axioms2 t is1 we want to def9e an op}a;n
on a set 9 a way t w g5}alize s* famili>
/ructures z ! 9teg}s _% _,z _: tgr ) !
s+le op}a;n ( addi;n1 or 9v}tible
_% #2`*2 _: matrices tgr ) ! s+le op}a;n
( matrix multiplica;n4 ,! 9teg}s & !
_% #2`*2 _: matrices1 tgr ) _!
respective s+le op}a;ns1 >e examples (
algebraic /ructures "kn z gr|ps4
  ,! !ory ( gr|ps o3upies a c5tral
posi;n 9 ma!matics4 ,mod}n gr|p !ory
>ose f an attempt to f9d ! roots ( a
polynomial 9 t}ms ( xs coe6ici5ts4
,gr|ps n{ play a c5tral role 9 s* >1s z
cod+ !ory1 c.t+1 & ! /udy ( symmetries2
_m >1s ( biology1 *emi/ry1 & physics h
b5efit$ f gr|p !ory4

    ,sec;n #c4a ,9teg} ,equival;e
    ,classes & ,symmetries          #abh
  ,let u n{ 9ve/igate "s ma!matical
/ructures t c 2 view$ z sets ) s+le
op}a;ns4

      ,subsec;n #c4a4a ,! ,9teg}s mod
      .2;n
  ,! 9teg}s mod .2;n h 2come 9disp5sable
9 ! !ory & applica;ns ( algebra4 ,9
ma!matics !y >e us$ 9 cryptography1 cod+
!ory1 & ! detec;n ( }rors 9 id5tifica;n
codes4
  ,we h alr se5 t two 9teg}s .2a & .2;b
>e equival5t mod .2;n if .2;n divides
_% a-b _:4 ,! 9teg}s mod .2;n al "pi;n
_% _,z _: 9to .2;n di6}5t equival;e
classes2 we w d5ote ! set ( ~! equival;e
classes by _% _,z;n _:4  ,3sid} ! 9teg}s
modulo _% #12 _: & ! correspond+ "pi;n (
! 9teg}s3
_%
4 ,:5 no 3fu.n c >ise1 we w use _% #0,
#1, ''' , #11 _: to 9dicate ! equival;e
classes  _% `(#0`), `(#1`), ''' ,
`(#11`) _: respectively4 ,we c d
>i?metic on _% _,z;n _:4 ,= two     #abi
9teg}s .2a & .2;b1 def9e addi;n modulo
.2;n to 2 _% (a+b)(mod n) _:2 t is1 !
rema9d} :5 _% a+b _: is divid$ by .2;n4
,simil>ly1 multiplica;n modulo .2;n is
def9$ z _% (ab)(mod n) _:1 ! rema9d} :5
_% ab _: is divid$ by .2;n4
7777777777777777777777777777777777777777
,example  #c4a4a 4
  ,! foll{+ examples illu/rate 9teg}
>i?metic modulo .2;n3
_%
4 ,9 "picul>1 notice t x is possible t !
product ( two nonz}o numb}s modulo .2;n
c 2 equival5t to _% #0 _: modulo .2;n4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4a4b 4
  ,mo/1 b n all1 ( ! usual laws (
>i?metic hold = addi;n & multiplica;n 9
_% _,z;n _:4 ,= 9/.e1 x is n necess>ily
true t "! is a multiplicative 9v}se4
,3sid} ! multiplica;n table = _% _,z8 _:
9 ,figure #c4a4c4 ,notice t _% #2 _:1
_% #4 _:1 & _% #6 _: d n h          #acj
multiplicative 9v}ses2 t is1 = _% n .k
#2 _:1 _% #4 _:1 or _% #6 _:1 "! is no
9teg} .2;k s* t _% kn _l #1(mod 8) _:4
7777777777777777777777777777777777777777
_%
,figure  #c4a4c 4  ,multiplica;n table =
_% _,z8 _:
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #c4a4d 4
  ,let _% _,z;n _: 2 ! set ( equival;e
classes ( ! 9teg}s mod .2;n & _% a, b, c
`e _,z;n" _:4

#a4
    ,addi;n & multiplica;n >e
  commutative3
  _%
  4
#b4
    ,addi;n & multiplica;n >e
  associative3                      #aca
  _%
  4
#c4
    ,"! >e bo? additive & multiplicative
  id5tities3
  _%
  4
#d4
    ,multiplica;n 4tributes ov} addi;n3
  _% a(b+c) _l ab+ac(mod n) _:
  4
#e4
    ,= e 9teg} .2a "! is an additive
  9v}se _% -a _:3
  _% a+(-a) _l #0(mod n) _:
  4
#f4
    ,let .2a 2 a nonz}o 9teg}4 ,!n
  _% gcd (a, n) .k #1 _: if & only if "!
  exi/s a multiplicative 9v}se .2;b =
  _% a(mod n) _:2 t is1 a nonz}o 9teg}
  .2;b s* t
  _% ab _l #1(mod n) _:
  4
                                    #acb
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,we w prove "<#a"> & "<#f"> & l1ve !
rema9+ prop}ties to 2 prov5 9 !
ex}cises4
  "<#a"> ,addi;n & multiplica;n >e
commutative modulo .2;n s9ce ! rema9d} (
_% a+b _: divid$ by .2;n is ! same z !
rema9d} ( _% b+a _: divid$ by .2;n4
  "<#f"> ,suppose t _% gcd (a, n) .k
#1 _:4 ,!n "! exi/ 9teg}s .2;r & .2;s s*
t _% ar+ns .k #1 _:4 ,s9ce _% ns .k
#1-ar _:1 x m/ 2 ! case t _% ar _l
#1(mod n) _:4 ,lett+ .2;b 2 ! equival;e
class ( .2;r1 _% ab _l #1(mod n) _:4
  ,3v}sely1 suppose t "! exi/s an 9teg}
.2;b s* t _% ab _l #1(mod n) _:4 ,!n
.2;n divides _% ab-1 _:1 s "! is an
9teg} .2;k s* t _% ab-nk .k #1 _:4 ,let
_% d .k gcd (a, n) _:4 ,s9ce .2;d
divides _% ab-nk _:1 .2;d m/ al divide
_% #1 _:2 h;e1 _% d .k #1 _:4
                                    #acc
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #c4a4b ,symmetries
7777777777777777777777777777777777777777
  ,image3 ,! f|r symmetries ot a
rectangle3 "<#a"> s5d+ rectangle ,,abcd
to rectangle ,,abcd1 "<#b"> s5d+
rectangle ,,abcd to rectangle ,,cdab1
"<#c"> s5d+ rectangle ,,abcd to
rectangle ,,badc1 & "<#d"> s5d+
rectangle ,,abcd to rectangle ,,dcba4
  ,,id3 gr|ps-rectangle
,figure  #c4a4e 4  ,rigid mo;ns ( a
rectangle
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,a ~1symmetry ( a geometric figure is
a re>range;t ( ! figure pres}v+ !
>range;t ( xs sides & v}tices z well z
xs 4t.es & angles4 ,a map f ! plane to
xf pres}v+ ! symmetry ( an object is
call$ a ~1rigid ~1mo;n~'4  ,= example1
if we look at ! rectangle 9
,figure #c4a4e1 x is easy to see t a
rota;n ( _% #180~~.* _: or          #acd
_% #360~~.* _: returns a rectangle 9 !
plane ) ! same ori5ta;n z ! orig9al
rectangle & ! same rela;n%ip am;g !
v}tices4 ,a reflec;n ( ! rectangle acr
ei ! v}tical axis or ! horizontal axis c
al 2 se5 to 2 a symmetry4 ,h{"e1 a
_% #90~~.* _: rota;n 9 ei direc;n _c 2 a
symmetry un.s ! rectangle is a squ>e4
7777777777777777777777777777777777777777
  ,image3 ,! six symmetries ( a
triangle3 "<#a"> triangle ,,abc to
triangle ,,,abc1 "<#b"> abc,' to ,,,cab1
"<#c"> abc,' to ,,,bca1 "<#d"> abc,' to
,,,acb1 "<#e"> abc,' to ,,cba1 & "<#f">
,,abc to ,,bac
  ,,id3 gr|ps-s#c-symmetry
,figure  #c4a4f 4  ,symmetries ( a
triangle
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,let u f9d ! symmetries ( ! equilat}al
triangle _% $t,a,b,c _:4 ,to f9d a
symmetry ( _% $t,a,b,c _:1 we m/ f/
exam9e ! p}muta;ns ( ! v}tices .2,a1
.2;,b1 & .2;,c & !n ask if a        #ace
p}muta;n ext5ds to a symmetry ( !
triangle4 ,recall t a ~1p}muta;n ( a set
.2;,s is a "o-to-"o & onto map _% .p3 ,s
$o ,s _:4 ,! ?ree v}tices h _% #36  .k
#6 _: p}muta;ns1 s ! triangle has at mo/
six symmetries4 ,to see t "! >e six
p}muta;ns1 obs}ve "! >e ?ree di6}5t
possibilities = ! f/ v}tex1 & two = !
second1 & ! rema9+ v}tex is det}m9$ by !
place;t ( ! f/ two4 ,s we h _% #3*2*1 .k
#36  .k #6 _: di6}5t >range;ts4 ,to
d5ote ! p}muta;n ( ! v}tices ( an
equilat}al triangle t s5ds .2,a to
.2;,b1 .2;,b to .2;,c1 & .2;,c to .2,a1
we write ! >ray
_% ,(,a ,b ,c,) ,(,b ,c ,a,) _:
4 ,notice t ? "picul> p}muta;n
corresponds to ! rigid mo;n ( rotat+ !
triangle by _% #120~~.* _: 9 a clockwise
direc;n4 ,9 fact1 e p}muta;n gives rise
to a symmetry ( ! triangle4 ,all ( ~!
symmetries >e %{n 9 ,figure #c4a4f4
  ,a natural "q to ask is :at happ5s if
"o mo;n ( ! triangle _% $t,a,b,c _: is
foll{$ by ano!r4 ,: symmetry is     #acf
_% .m1.r1 _:2 t is1 :at happ5s :5 we d !
p}muta;n _% .r1 _: & !n ! p}muta;n
_% .m1 _:;8 .7,rememb} t we >e compos+
func;ns "h4 ,al? we usually multiply
left to "r1 we compose func;ns "r to
left4.' ,we h
_%
4 ,? is ! same symmetry z _% .m2 _:4
,suppose we d ~! mo;ns 9 ! opposite
ord}1 _% .r1 _: !n _% .m1 _:4 ,x is easy
to det}m9e t ? is ! same z ! symmetry
_% .m3 _:2 h;e1 _% .r1.m1 /.k .m1.r1 _:4
,a multiplica;n table = ! symmetries (
an equilat}al triangle _% $t,a,b,c _: is
giv5 9 ,figure #c4a4g4
  ,notice t 9 ! multiplica;n table = !
symmetries ( an equilat}al triangle1 = e
mo;n ( ! triangle _% .a _: "! is ano!r
mo;n _% .b _: s* t _% .a.b .k id _:2 t
is1 = e mo;n "! is ano!r mo;n t takes !
triangle back to xs orig9al ori5ta;n4
7777777777777777777777777777777777777777
_%
,figure  #c4a4g 4  ,symmetries ( an
equilat}al triangle                 #acg
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

    ,sec;n #c4b ,def9i;ns & ,examples
  ,! 9teg}s mod .2;n & ! symmetries ( a
triangle or a rectangle >e examples (
gr|ps4 ,a ~1b9>y ~1op}a;n  or ~7law (
composi;n~' on a set .2;,g is a func;n
_% ,g`*,g $o ,g _: t assigns to ea* pair
_% (a, b) `e ,g`*,g _: a unique ele;t
_% a~.*b _:1 or _% ab _: 9 .2;,g1 call$
! composi;n ( .2a & .2;b4 ,a ~1gr|p
_% (,g, ~.*) _: is a set .2;,g tgr ) a
law ( composi;n _% (a, b) $|33o a~.*b _:
t satisfies ! foll{+ axioms4

_4
    ,! law ( composi;n is
  ~1associative~'4 ,t is1
  _% (a~.*b)~.*c .k a~.*(b~.*c) _:
  = _% a, b, c `e ,g _:4
_4
    ,"! exi/s an ele;t _% e `e ,g _:1
  call$ ! ~1id5t;y ~1ele;t~'1  s* t =
  any ele;t _% a `e ,g _:
  _% e~.*a .k a~.*e .k a _:         #ach
  4
_4
    ,= ea* ele;t _% a `e ,g _:1 "! exi/s
  an ~19v}se ~1ele;t  9 ;,g1 d5ot$ by
  _% a~-#1 _:1 s* t
  _% a~.*a~-#1" .k a~-#1"~.*a .k e _:
  4

  ,a gr|p .2;,g ) ! prop}ty t _% a~.*b
.k b~.*a _: = all _% a, b `e ,g _: is
call$ ~1abelian  or ~1commutative~'4
,gr|ps n satisfy+ ? prop}ty >e sd to 2
~1nonabelian  or ~1noncommutative~'4
7777777777777777777777777777777777777777
,example  #c4b4a 4
  ,! 9teg}s _% _,z .k .( ''' , -#1, #0,
#1, #2, '''.) _: =m a gr|p "u ! op}a;n (
addi;n4 ,! b9>y op}a;n on two 9teg}s
_% m, n `e _,z _: is j _! sum4 ,s9ce !
9teg}s "u addi;n alr h a well-e/abli%$
nota;n1 we w use ! op}ator _% + _: 9/1d
( _% ~.* _:2 t is1 we % write _% m+n _:
9/1d ( _% m~.*n _:4 ,! id5t;y is
_% #0 _:1 & ! 9v}se ( _% n `e _,z _: is
writt5 z _% -n _: 9/1d (            #aci
_% n~-#1 _:4 ,notice t ! set ( 9teg}s "u
addi;n h ! addi;nal prop}ty t _% m+n .k
n+m _: & "!=e =m an abelian gr|p4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,mo/ ( ! "t we w write _% ab _: 9/1d (
_% a~.*b _:2 h{"e1 if ! gr|p alr has a
natural op}a;n s* z addi;n 9 ! 9teg}s1
we w use t op}a;n4 ,t is1 if we >e add+
two 9teg}s1 we / write _% m+n _:1
_% -n _: = ! 9v}se1 & #j = ! id5t;y z
usual4 ,we al write _% m-n _: 9/1d (
_% m+(-n) _:4
  ,x is (t5 3v5i5t to describe a gr|p 9
t}ms ( an addi;n or multiplica;n table4
,s* a table is call$ a ~1,cayley
~1table~'4
7777777777777777777777777777777777777777
,example  #c4b4b 4
  ,! 9teg}s mod .2;n =m a gr|p "u addi;n
modulo .2;n4 ,3sid} _% _,z5 _:1 3si/+ (
! equival;e classes ( ! 9teg}s _% #0 _:1
_% #1 _:1 _% #2 _:1 _% #3 _:1 &
_% #4 _:4 ,we def9e ! gr|p op}a;n on
_% _,z5 _: by modul> addi;n4 ,we    #adj
write ! b9>y op}a;n on ! gr|p
additively2 t is1 we write _% m+n _:4 ,!
ele;t #j is ! id5t;y ( ! gr|p & ea*
ele;t 9 _% _,z5 _: has an 9v}se4 ,=
9/.e1 _% #2+3 .k #3+2 .k #0 _:4
,figure #c4b4c is a ,cayley table =
_% _,z5 _:4 ,by ,proposi;n #c4a4d1
_% _,z;n" .k .(#0, #1, ''' , n-1.) _: is
a gr|p "u ! b9>y op}a;n ( addi;n mod
.2;n4
7777777777777777777777777777777777777777
_%
,figure  #c4b4c 4  ,cayley table =
_% (_,z5, +) _:
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4b4d 4
  ,n e set ) a b9>y op}a;n is a gr|p4 ,=
example1 if we let modul> multiplica;n 2
! b9>y op}a;n on _% _,z;n _:1 !n
_% _,z;n _: fails to 2 a gr|p4 ,! ele;t
#a acts z a gr|p id5t;y s9ce        #ada
_% #1*k .k k*1 .k k _: = any _% k `e
_,z;n _:2 h{"e1 a multiplicative 9v}se =
_% #0 _: does n exi/ s9ce _% #0*k .k k*0
.k #0 _: = e .2;k 9 _% _,z;n _:4 ,ev5 if
we 3sid} ! set
_% _,z;n"'\x2216'.(0.) _:1 we / may n h
a gr|p4 ,= 9/.e1 let _% #2 `e _,z6 _:4
,!n #b has no multiplicative 9v}se s9ce
_%
4 ,by ,proposi;n #c4a4d1 e nonz}o .2;k
does h an 9v}se 9 _% _,z;n _: if .2;k is
relatively prime to .2;n4 ,d5ote ! set (
all s* nonz}o ele;ts 9 _% _,z;n _: by
_% ,u(n) _:4  ,!n _% ,u(n) _: is a gr|p
call$ ! ~7gr|p ( units~'  ( _% _,z;n _:4
,figure #c4b4e is a ,cayley table = !
gr|p _% ,u(#8) _:4
7777777777777777777777777777777777777777
_%
,figure  #c4b4e 4  ,multiplica;n table =
_% ,u(#8) _:
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #adb
7777777777777777777777777777777777777777
,example  #c4b4f 4
  ,! symmetries ( an equilat}al triangle
describ$ 9 ,sec;n #c4a =m a nonabelian
gr|p4 ,z we obs}v$1 x is n necess>ily
true t _% .a.b .k .b.a _: = two
symmetries _% .a _: & _% .b _:4 ,us+
,figure #c4a4g1 : is a ,cayley table = ?
gr|p1 we c easily *eck t ! symmetries (
an equilat}al triangle >e 9de$ a gr|p4
,we w d5ote ? gr|p by ei _% ,s3 _: or
_% ,d3 _:1 = r1sons t w 2 expla9$ lat}4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4b4g 4
  ,we use  _% _,m2(_,r) _: to d5ote !
set ( all _% #2`*2 _: matrices4 ,let
_% ,g,l2(_,r) _: 2 ! subset (
_% _,m2(_,r) _: 3si/+ ( 9v}tible
matrices2 t is1 a matrix
_% ,a .k ,(a b,) ,(c d,) _:
is 9  _% ,g,l2(_,r) _: if "! exi/s a
matrix _% ,a~-#1 _: s* t _% ,a,a~-#1" .k
,a~-#1",a .k ,i _:1 ": .2,i is !    #adc
_% #2`*2 _: id5t;y matrix4 ,= .2,a to h
an 9v}se is equival5t to requir+ t !
det}m9ant ( .2,a 2 nonz}o2 t is1 _% det
,a .k ad-bc /.k #0 _:4  ,! set (
9v}tible matrices =ms a gr|p call$ !
~1g5}al ~1l9e> ~1gr|p~'4  ,! id5t;y ( !
gr|p is ! id5t;y matrix
_% ,i .k ,(#1 0,) ,(0 1,) _:
4 ,! 9v}se ( _% ,a `e ,g,l2(_,r) _: is
_% ,a~-#1" .k ?1/ad-bc#,(d -b,) ,(-c
a,) _:
4 ,! product ( two 9v}tible matrices is
ag 9v}tible4 ,matrix multiplica;n is
associative1 satisfy+ ! o!r gr|p axiom4
,= matrices x is n true 9 g5}al t
_% ,a,b .k ,b,a _:2 h;e1
_% ,g,l2(_,r) _: is ano!r example ( a
nonabelian gr|p4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4b4h 4
  ,let
_%
1 ": _% i~2" .k -#1 _:4 ,!n !       #add
rela;ns _% ,i~2" .k ,j~2" .k ,k~2" .k
-#1 _:1 _% ,i,j .k ,k _:1 _% ,j,k .k
,i _:1 _% ,k,i .k ,j _:1 _% ,j,i .k
-,k _:1 _% ,k,j .k -,i _:1 & _% ,i,k .k
-,j _: hold4 ,! set  _% ,q8 .k .(+-#1,
+-,i, +-,j, +-,k.) _: is a gr|p call$ !
~1quat}nion ~1gr|p~'4  ,notice t
_% ,q8 _: is noncommutative4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4b4i 4
  ,let _% _,c~`# _: 2 ! set ( nonz}o
complex numb}s4  ,"u ! op}a;n (
multiplica;n _% _,c~`# _: =ms a gr|p4 ,!
id5t;y is _% #1 _:4 ,if _% z .k a+bi _:
is a nonz}o complex numb}1 !n
_% z~-#1" .k ?a-bi/a~2"+b~2"# _:
is ! 9v}se ( .2;z4 ,x is easy to see t !
rema9+ gr|p axioms hold4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,a gr|p is ~1f9ite~'1  or has ~1f9ite
~1ord}~'1 if x 3ta9s a f9ite numb} (
ele;ts2 o!rwise1 ! gr|p is sd to 2  #ade
~19f9ite or to h ~19f9ite ~1ord}~'4  ,!
~1ord}  ( a f9ite gr|p is ! numb} (
ele;ts t x 3ta9s4 ,if .2;,g is a gr|p
3ta9+ .2;n ele;ts1 we write _% |,g| .k
n _:4  ,! gr|p _% _,z5 _: is a f9ite
gr|p ( ord} _% #5 _:2 ! 9teg}s _% _,z _:
=m an 9f9ite gr|p "u addi;n1 & we "s"ts
write _% |_,z| .k ,= _:4

      ,subsec;n #c4b4a ,basic ,prop}ties
      ( ,gr|ps
7777777777777777777777777777777777777777
,proposi;n  #c4b4aj 4
  ,! id5t;y ele;t 9 a gr|p .2;,g is
unique2 t is1 "! exi/s only "o ele;t
_% e `e ,g _: s* t _% eg .k ge .k g _: =
all _% g `e ,g _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,suppose t .2;e & _% e' _: >e bo?
id5tities 9 .2;,g4 ,!n _% eg .k ge .k
g _: & _% e~'"g .k ge~'" .k g _: = all
_% g `e ,g _:4 ,we ne$ to %{ t      #adf
_% e .k e' _:4 ,if we ?9k ( .2;e z !
id5t;y1 !n _% ee~'" .k e' _:2 b if
_% e' _: is ! id5t;y1 !n _% ee~'" .k
e _:4 ,comb9+ ~! two equa;ns1 we h _% e
.k ee~'" .k e' _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,9v}ses 9 a gr|p >e al unique4 ,if
_% g' _: & _% g'' _: >e bo? 9v}ses ( an
ele;t .2;g 9 a gr|p .2;,g1 !n _% gg~'"
.k g~'"g .k e _: & _% gg~''" .k g~''"g
.k e _:4 ,we want to %{ t _% g~'" .k
g'' _:1 b _% g~'" .k g~'"e .k
g~'"(gg~''") .k (g~'"g)g~''" .k eg~''"
.k g'' _:4 ,we summ>ize ? fact 9 !
foll{+ proposi;n4
7777777777777777777777777777777777777777
,proposi;n  #c4b4aa 4
  ,if .2;g is any ele;t 9 a gr|p .2;,g1
!n ! 9v}se ( .2;g1 d5ot$ by _% g~-#1 _:1
is unique4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #c4b4ab 4               #adg
  ,let .2;,g 2 a gr|p4 ,if _% a, b `e
,g _:1 !n _% (ab)~-#1" .k
b~-#1"a~-#1 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,let _% a, b `e ,g _:4 ,!n
_% abb~-#1"a~-#1" .k aea~-#1" .k aa~-#1"
.k e _:4 ,simil>ly1 _% b~-#1"a~-#1"ab .k
e _:4 ,b by ! previ|s proposi;n1 9v}ses
>e unique2 h;e1 _% (ab)~-#1" .k
b~-#1"a~-#1 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #c4b4ac 4
  ,let .2;,g 2 a gr|p4 ,= any _% a `e
,g _:1 _% (a~-#1")~-#1" .k a _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,obs}ve t _% a~-#1"(a~-#1")~-#1" .k
e _:4 ,3sequ5tly1 multiply+ bo?     #adh
sides ( ? equa;n by .2a1 we h
_% (a~-#1")~-#1" .k e(a~-#1")~-#1" .k
aa~-#1"(a~-#1")~-#1" .k ae .k a _:
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,x makes s5se to write equa;ns ) gr|p
ele;ts & gr|p op}a;ns4 ,if .2a & .2;b >e
two ele;ts 9 a gr|p .2;,g1 does "! exi/
an ele;t _% x `e ,g _: s* t _% ax .k
b _:;8 ,if s* an .2;x does exi/1 is x
unique8 ,! foll{+ proposi;n answ}s bo? (
~! "qs positively4
7777777777777777777777777777777777777777
,proposi;n  #c4b4ad 4
  ,let .2;,g 2 a gr|p & .2a & .2;b 2 any
two ele;ts 9 .2;,g4 ,!n ! equa;ns _% ax
.k b _: & _% xa .k b _: h unique solu;ns
9 .2;,g4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,suppose t _% ax .k b _:4 ,we m/ %{ t
s* an .2;x exi/s4 ,we c multiply    #adi
bo? sides ( _% ax .k b _: by _% a~-#1 _:
to f9d _% x .k ex .k a~-#1"ax .k
a~-#1"b _:4
  ,to %{ unique;s1 suppose t _% x1 _: &
_% x2 _: >e bo? solu;ns ( _% ax .k b _:2
!n _% ax1 .k b .k ax2 _:4 ,s _% x1 .k
a~-#1"ax1 .k a~-#1"ax2 .k x2 _:4 ,! pro(
= ! exi/;e & unique;s ( ! solu;n ( _% xa
.k b _: is simil>4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #c4b4ae 4
  ,if .2;,g is a gr|p & _% a, b, c `e
,g _:1 !n _% ba .k ca _: implies _% b .k
c _: & _% ab .k ac _: implies _% b .k
c _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,? proposi;n tells u t ! ~7"r & left
c.ella;n laws~' >e true 9 gr|ps4 ,we
l1ve ! pro( z an ex}cise4
  ,we c use expon5tial nota;n = gr|ps j
z we d 9 ord9>y algebra4 ,if .2;,g is a
gr|p & _% g `e ,g _:1 !n we def9e   #aej
_% g~0" .k e _:4 ,= _% n `e _,n _:1 we
def9e
_% g~n" .k ""g*g '''
g%'\x23df'}%ntimes} _:
&
_% g~-n" .k ""g~-#1"*g~-#1" '''
g~-#1"%'\x23df'}%ntimes} _:
4
7777777777777777777777777777777777777777
,!orem  #c4b4af 4
  ,9 a gr|p1 ! usual laws ( expon5ts
hold2 t is1 = all _% g, h `e ,g _:1

#a4
    _% g~m"g~n" .k g~m+n _: = all _% m,
  n `e _,z _:2
#b4
    _% (g~m")~n" .k g~mn _: = all _% m,
  n `e _,z _:2
#c4
    _% (gh)~n" .k (h~-#1"g~-#1")~-n _: =
  all _% n `e _,z _:4 ,fur!rmore1 if
  .2;,g is abelian1 !n _% (gh)~n" .k
  g~n"h~n _:4
                                    #aea
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we w l1ve ! pro( ( ? !orem z an
ex}cise4 ,notice t _% (gh)~n" /.k
g~n"h~n _: 9 g5}al1 s9ce ! gr|p may n 2
abelian4 ,if ! gr|p is _% _,z _: or
_% _,z;n _:1 we write ! gr|p op}a;n
additively & ! expon5tial op}a;n
multiplicatively2 t is1 we write
_% ng _: 9/1d ( _% g~n _:4 ,! laws (
expon5ts n{ 2come

#a4
    _% mg+ng .k (m+n)g _: = all _% m, n
  `e _,z _:2
#b4
    _% m(ng) .k (mn)g _: = all _% m, n
  `e _,z _:2
#c4
    _% m(g+h) .k mg+mh _: = all _% n `e
  _,z _:4

  ,x is important to r1lize t ! la/
/ate;t c 2 made only 2c _% _,z _: &
_% _,z;n _: >e commutative gr|ps4   #aeb
      ,subsec;n #c4b4b ,hi/orical ,note
  ,al? ! f/ cle> axiomatic def9i;n ( a
gr|p 0 n giv5 until ! late #ahjjs1
gr|p-!oretic me?ods _h be5 employ$ 2f ?
"t 9 ! develop;t ( _m >1s ( ma!matics1
9clud+ geometry & ! !ory ( algebraic
equa;ns4
  ,joseph-,l|is ,lagrange  us$
gr|p-!oretic me?ods 9 a #aggj,-#agga
memoir to /udy me?ods ( solv+ polynomial
equa;ns4 ,lat}1 ,~/ev>i/e ,galois
"<#ahaa,-#ahcb"> su3e$$ 9 develop+ !
ma!matics nec to det}m9e exactly :
polynomial equa;ns cd 2 solv$ 9 t}ms ( !
coe6ici5ts ( ! polynomial4 ,galois'
prim>y tool 0 gr|p !ory4
  ,! /udy ( geometry 0 revolu;niz$ 9
#ahgb :5 ,felix ,kle9  propos$ t
geometric spaces %d 2 /udi$ by exam9+ ~?
prop}ties t >e 9v>iant "u a trans=ma;n (
! space4 ,sophus ,lie1  a 3tempor>y (
,kle91 us$ gr|p !ory to /udy solu;ns (
"pial di6}5tial equa;ns4 ,"o ( ! f/
mod}n tr1t;ts ( gr|p !ory appe>$ 9
,william ,burnside's  .7,! ,!ory (  #aec
,gr|ps ( ,f9ite ,ord}.' .<#a.>1 f/
publi%$ 9 #ahig4

    ,sec;n #c4c ,subgr|ps

      ,subsec;n #c4c4a ,def9i;ns &
      ,examples
  ,"s"ts we wi% to 9ve/igate small}
gr|ps sitt+ 9side a l>g} gr|p4 ,! set (
ev5 9teg}s _% #2_,z .k .( ''' , -#2, #0,
#2, #4, '''.) _: is a gr|p "u ! op}a;n (
addi;n4 ,? small} gr|p sits naturally
9side ( ! gr|p ( 9teg}s "u addi;n4 ,we
def9e a ~1subgr|p .2;,h ( a gr|p .2;,g
to 2 a subset .2;,h ( .2;,g s* t :5 !
gr|p op}a;n ( .2;,g is re/rict$ to
.2;,h1 .2;,h is a gr|p 9 xs {n "r4
,obs}ve t e gr|p .2;,g ) at l1/ two
ele;ts w alw h at l1/ two subgr|ps1 !
subgr|p 3si/+ ( ! id5t;y ele;t al"o & !
5tire gr|p xf4 ,! subgr|p _% ,h .k
.(e.) _: ( a gr|p .2;,g is call$ !
~1trivial ~1subgr|p~'4  ,a subgr|p t is
a prop} subset ( .2;,g is call$ a
~1prop} ~1subgr|p~'4  ,9 _m ( !     #aed
examples t we h 9ve/igat$ up to ? po9t1
"! exi/ o!r subgr|ps 2ss ! trivial &
improp} subgr|ps4
7777777777777777777777777777777777777777
,example  #c4c4a 4
  ,3sid} ! set ( nonz}o r1l numb}s1
_% _,r~`# _:1 ) ! gr|p op}a;n (
multiplica;n4  ,! id5t;y ( ? gr|p is
_% #1 _: & ! 9v}se ( any ele;t _% a `e
_,r~`# _: is j _% #1_/a _:4 ,we w %{ t
_% _,q~`#" .k .(p_/q3 pandqare nonzero
integers.) _:
is a subgr|p ( _% _,r~`# _:4  ,! id5t;y
( _% _,r~`# _: is _% #1 _:2 h{"e1  _% #1
.k #1_/1 _: is ! quoti5t ( two nonz}o
9teg}s4 ,h;e1 ! id5t;y ( _% _,r~`# _: is
9 _% _,q~`# _:4 ,giv5 two ele;ts 9
_% _,q~`# _:1 say _% p_/q _: &
_% r_/s _:1 _! product _% pr_/qs _: is
al 9 _% _,q~`# _:4 ,! 9v}se ( any ele;t
_% p_/q `e _,q~`# _: is ag 9
_% _,q~`# _: s9ce _% (p_/q)~-#1" .k
q_/p _:4 ,s9ce multiplica;n 9
_% _,r~`# _: is associative1
multiplica;n 9 _% _,q~`# _: is      #aee
associative4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4c4b 4
  ,recall t _% _,c~`# _: is !
multiplicative gr|p ( nonz}o complex
numb}s4 ,let _% ,h .k .(#1, -#1, i,
-i.) _:4 ,!n .2;,h is a subgr|p (
_% _,c~`# _:4 ,x is q easy to v}ify t
.2;,h is a gr|p "u multiplica;n & t
_% ,h _"k _,c~`# _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4c4c 4
  ,let _% ,s,l2(_,r) _: 2 ! subset (
_% ,g,l2(_,r) _: 3si/+ ( matrices (
det}m9ant "o2 t is1 a matrix
_% ,a .k ,(a b,) ,(c d,) _:
is 9 _% ,s,l2(_,r) _: exactly :5
_% ad-bc .k #1 _:4 ,to %{ t
_% ,s,l2(_,r) _: is a subgr|p ( ! g5}al
l9e> gr|p1 we m/ %{ t x is a gr|p "u
matrix multiplica;n4 ,!             #aef
_% #2`*2 _: id5t;y matrix is 9
_% ,s,l2(_,r) _:1 z is ! 9v}se ( !
matrix .2,a3
_% ,a~-#1" .k ,(d -b,) ,(-c a,) _:
4 ,x rema9s to %{ t multiplica;n is
clos$2 t is1 t ! product ( two matrices
( det}m9ant "o al has det}m9ant "o4 ,we
w l1ve ? task z an ex}cise4 ,! gr|p
_% ,s,l2(_,r) _: is call$ ! ~1special
~1l9e> ~1gr|p~'4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4c4d 4
  ,x is important to r1lize t a subset
.2;,h ( a gr|p .2;,g c 2 a gr|p )|t 2+ a
subgr|p ( .2;,g4 ,= .2;,h to 2 a subgr|p
( .2;,g1 x m/ 9h}it ! b9>y op}a;n (
.2;,g4 ,! set ( all _% #2`*2 _:
matrices1 _% _,m2(_,r) _:1 =ms a gr|p "u
! op}a;n ( addi;n4 ,! _% #2`*2 _: g5}al
l9e> gr|p is a subset ( _% _,m2(_,r) _:
& is a gr|p "u matrix multiplica;n1 b x
is n a subgr|p ( _% _,m2(_,r) _:4 ,if we
add two 9v}tible matrices1 we d n   #aeg
necess>ily obta9 ano!r 9v}tible matrix4
,obs}ve t
_% ,(#1 0,) ,(0 1,)+,(-#1 0,) ,(0 -#1,)
.k ,(#0 0,) ,(0 0,) _:
1 b ! z}o matrix is n 9
_% ,g,l2(_,r) _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #c4c4e 4
  ,"o way ( tell+ :e!r or n two gr|ps >e
! same is by exam9+ _! subgr|ps4 ,o!r
?an ! trivial subgr|p & ! gr|p xf1 !
gr|p _% _,z4 _: has a s+le subgr|p 3si/+
( ! ele;ts _% #0 _: & _% #2 _:4 ,f !
gr|p _% _,z2 _:1 we c =m ano!r gr|p (
f|r ele;ts z foll{s4 ,z a set ? gr|p is
_% _,z2`*_,z2 _:4 ,we p}=m ! gr|p op}a;n
coord9atewise2 t is1 _% (a, b)+(c, d) .k
(a+c, b+d) _:4 ,figure #c4c4f is an
addi;n table = _% _,z2`*_,z2 _:4 ,s9ce
"! >e ?ree nontrivial prop} subgr|ps (
_% _,z2`*_,z2 _:1 _% ,h1 .k .((#0, #0),
(#0, #1).) _:1 _% ,h2 .k .((#0, #0),
(#1, #0).) _:1 & _% ,h3 .k .((#0,   #aeh
#0), (#1, #1).) _:1 _% _,z4 _: &
_% _,z2`*_,z2 _: m/ 2 di6}5t gr|ps4
7777777777777777777777777777777777777777
_%
,figure  #c4c4f 4  ,addi;n table =
_% _,z2`*_,z2 _:
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #c4c4b ,"s ,subgr|p
      ,!orems
  ,let u exam9e "s crit}ia = det}m9+
exactly :5 a subset ( a gr|p is a
subgr|p4
7777777777777777777777777777777777777777
,proposi;n  #c4c4g 4
  ,a subset .2;,h ( .2;,g is a subgr|p
if & only if x satisfies ! foll{+
3di;ns4

#a4
    ,! id5t;y .2;e ( .2;,g is 9 .2;,h4
#b4
    ,if _% h1, h2 `e ,h _:1 !n      #aei
  _% h1h2 `e ,h _:4
#c4
    ,if _% h `e ,h _:1 !n _% h~-#1" `e
  ,h _:4

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,f/ suppose t .2;,h is a subgr|p (
.2;,g4 ,we m/ %{ t ! ?ree 3di;ns hold4
,s9ce .2;,h is a gr|p1 x m/ h an id5t;y
_% e;,h _:4 ,we m/ %{ t _% e;,h" .k
e _:1 ": .2;e is ! id5t;y ( .2;,g4 ,we
"k t _% e;,h"e;,h" .k e;,h _: & t
_% ee;,h" .k e;,h"e .k e;,h _:2 h;e1
_% ee;,h" .k e;,h"e;,h _:4 ,by "r-h&
c.ella;n1 _% e .k e;,h _:4 ,! second
3di;n holds s9ce a subgr|p .2;,h is a
gr|p4 ,to prove ! ?ird 3di;n1 let _% h
`e ,h _:4 ,s9ce .2;,h is a gr|p1 "! is
an ele;t _% h~'" `e ,h _: s* t _% hh~'"
.k h~'"h .k e _:4 ,by ! unique;s ( !
9v}se 9 .2;,g1 _% h~'" .k h~-#1 _:4
  ,3v}sely1 if ! ?ree 3di;ns hold1  #afj
we m/ %{ t .2;,h is a gr|p "u ! same
op}a;n z .2;,g2 h{"e1 ~! 3di;ns plus !
associativ;y ( ! b9>y op}a;n >e exactly
! axioms /at$ 9 ! def9i;n ( a gr|p4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #c4c4h 4
  ,let .2;,h 2 a subset ( a gr|p .2;,g4
,!n .2;,h is a subgr|p ( .2;,g if & only
if _% ,h /.k _0 _:1 & :5"e _% g, h `e
,h _: !n _% gh~-#1 _: is 9 .2;,h4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,f/ assume t .2;,h is a subgr|p (
.2;,g4 ,we wi% to %{ t _% gh~-#1 `e
,h _: :5"e .2;g & .2;h >e 9 .2;,h4 ,s9ce
.2;h is 9 .2;,h1 xs 9v}se _% h~-#1 _: m/
al 2 9 .2;,h4 ,2c ( ! closure ( ! gr|p
op}a;n1 _% gh~-#1 `e ,h _:4
  ,3v}sely1 suppose t _% ,h _"k ,g _: s*
t _% ,h /.k _0 _: & _% gh~-#1 `e ,h _:
:5"e _% g, h `e ,h _:4 ,if _% g `e  #afa
,h _:1 !n _% gg~-#1" .k e _: is 9 .2;,h4
,if _% g `e ,h _:1 !n _% eg~-#1" .k
g~-#1 _: is al 9 .2;,h4 ,n{ let _% h1,
h2 `e ,h _:4 ,we m/ %{ t _! product is
al 9 .2;,h4 ,h{"e1 _% h1(h2~-#1")~-#1"
.k h1h2 `e ,h _:4 ,h;e1 .2;,h is a
subgr|p ( .2;,g4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage4
  ,! f/ half ( ? text is ab gr|p !ory4
,sage 9cludes ,gr|ps1 ,algori?ms &
,programm+ "< ,,gap">1 a program design$
prim>ly = j gr|p !ory1 & 9 3t9u|s
develop;t s9ce #aihf4 ,_m ( ,sage's
computa;ns = gr|ps ultimately >e p}=m$
by ,,gap4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

,r1d+ ,"qs #c4d ,r1d+ ,"qs #a 4
  ,9 ! gr|p _% _,z8 _: compute1 "<a">
_% #6+7 _:1 & "<;b"> _% #2~-#1 _:4
#b 4
  ,9 ! gr|p _% ,u(#16) _: compute1  #afb
"<a"> _% #5*7 _:1 & "<;b"> _% #3~-#1 _:4
#c 4
  ,/ate ! def9i;n ( a gr|p4
#d 4
  ,expla9 a s+le me?od t w decide if a
subset ( a gr|p is xf a subgr|p4
#e 4
  ,expla9 ! orig9 ( ! t}m 8abelian0 = a
commutative gr|p4
#f 4
  ,give an example ( a gr|p y h se5 9 yr
previ|s ma!matical exp}i;e1 b t is n an
example 9 ? *apt}4
,ex}cises #c4e ,ex}cises #a 4
  ,f9d all _% x `e _,z _: satisfy+ ea* (
! foll{+ equa;ns4

a4
    _% #3x _l #2(mod 7) _:
;b4
    _% #5x+1 _l #13(mod 23) _:
;c4
    _% #5x+1 _l #13(mod 26) _:
;d4
    _% #9x _l #3(mod 5) _:          #afc
;e4
    _% #5x _l #1(mod 6) _:
;f4
    _% #3x _l #1(mod 6) _:

,h9t3
  "<a"> _% #3+7_,z .k .( ''' , -#4, #3,
#10, '''.) _:2 "<;c"> _% #18+26_,z _:2
"<;e"> _% #5+6_,z _:4
#b 4
  ,: ( ! foll{+ multiplica;n tables
def9$ on ! set _% ,g .k .(a, b, c,
d.) _: =m a gr|p8 ,support yr answ} 9
ea* case4

a4
  _%
;b4
  _%
;c4
  _%
;d4
  _%

,h9t3                               #afd
  "<a"> ,n a gr|p2 "<;c"> a gr|p4
#c 4
  ,write | ,cayley tables = gr|ps =m$ by
! symmetries ( a rectangle & = _% (_,z4,
+) _:4 ,h{ _m ele;ts >e 9 ea* gr|p8 ,>e
! gr|ps ! same8 ,:y or :y n8
#d 4
  ,describe ! symmetries ( a rhombus &
prove t ! set ( symmetries =ms a gr|p4
,give ,cayley tables = bo? ! symmetries
( a rectangle & ! symmetries ( a
rhombus4 ,>e ! symmetries ( a rectangle
& ~? ( a rhombus ! same8
#e 4
  ,describe ! symmetries ( a squ>e &
prove t ! set ( symmetries is a gr|p4
,give a ,cayley table = ! symmetries4
,h{ _m ways c ! v}tices ( a squ>e 2
p}mut$8 ,is ea* p}muta;n necess>ily a
symmetry ( ! squ>e8 ,! symmetry gr|p ( !
squ>e is d5ot$ by _% ,d4 _:4
#f 4
  ,give a multiplica;n table = ! gr|p
_% ,u(#12) _:4
,h9t3                               #afe
_%
#g 4
  ,let _% ,s .k _,r'\x2216'.(-#1.) _: &
def9e a b9>y op}a;n on .2;,s by _% a`#b
.k a+b+ab _:4 ,prove t _% (,s, `#) _: is
an abelian gr|p4
#h 4
  ,give an example ( two ele;ts .2,a &
.2;,b 9 _% ,g,l2(_,r) _: ) _% ,a,b /.k
,b,a _:4
,h9t3
  ,pick two matrices4 ,alm any pair w
"w4
#i 4
  ,prove t ! product ( two matrices 9
_% ,s,l2(_,r) _: has det}m9ant "o4
#aj 4
  ,prove t ! set ( matrices ( ! =m
_% ,(#1 x y,) ,(0 1 z,) ,(0 0 1,) _:
is a gr|p "u matrix multiplica;n4 ,?
gr|p1 "kn z ! ~1,heis5b}g ~1gr|p~'1 is
important 9 quantum physics4 ,matrix
multiplica;n 9 ! ,heis5b}g gr|p is def9$
by
_% ,(#1 x y,) ,(0 1 z,) ,(0 0       #aff
1,),(1 x~'" y~'",) ,(0 1 z~'",) ,(0 0
1,) .k ,(#1 x+x~'" y+y~'"+xz~'",) ,(0 1
z+z~'",) ,(0 0 1,) _:
4
#aa 4
  ,prove t _% det (,a,b) .k det (,a)det
(,b) _: 9 _% ,g,l2(_,r) _:4 ,use ?
result to %{ t ! b9>y op}a;n 9 ! gr|p
_% ,g,l2(_,r) _: is clos$2 t is1 if .2,a
& .2;,b >e 9 _% ,g,l2(_,r) _:1 !n
_% ,a,b `e ,g,l2(_,r) _:4
#ab 4
  ,let _% _,z2~n" .k .((a1, a2, ''' ,
a;n")3 a;i" `e _,z2.) _:4 ,def9e a b9>y
op}a;n on _% _,z2~n _: by
_% (a1, a2, ''' , a;n")+(b1, b2, ''' ,
b;n") .k (a1+b1, a2+b2, ''' ,
a;n"+b;n") _:
4 ,prove t _% _,z2~n _: is a gr|p "u ?
op}a;n4 ,? gr|p is important 9 algebraic
cod+ !ory4
#ac 4
  ,%{ t _% _,r~`#" .k
_,r'\x2216'.(0.) _: is a gr|p "u !
op}a;n ( multiplica;n4              #afg
#ad 4
  ,giv5 ! gr|ps _% _,r~`# _: &
_% _,z _:1 let _% ,g .k _,r~`#"`*_,z _:4
,def9e a b9>y op}a;n _% ~.* _: on .2;,g
by _% (a, m)~.*(b, n) .k (ab, m+n) _:4
,%{ t .2;,g is a gr|p "u ? op}a;n4
#ae 4
  ,prove or 4prove t e gr|p 3ta9+ six
ele;ts is abelian4
,h9t3
  ,"! is a nonabelian gr|p 3ta9+ six
ele;ts4
#af 4
  ,give a specific example ( "s gr|p
.2;,g & ele;ts _% g, h `e ,g _: ":
_% (gh)~n" /.k g~n"h~n _:4
,h9t3
  ,look at ! symmetry gr|p ( an
equilat}al triangle or a squ>e4
#ag 4
  ,give an example ( ?ree di6}5t gr|ps )
ei<t ele;ts4 ,:y >e ! gr|ps di6}5t8
,h9t3
  ,! >e five di6}5t gr|ps ( ord} #h4
#ah 4                               #afh
  ,%{ t "! >e _% n& _: p}muta;ns ( a set
3ta9+ .2;n items4
,h9t3
  ,let
_% .s .k ,(#1 2 ''' n,) ,(a1 a2 '''
a;n,) _:
2 9 _% ,s;n _:4 ,all ( ! _% a;i _:s m/ 2
4t9ct4 ,"! >e .2;n ways to *oose
_% a1 _:1 _% n-1 _: ways to *oose _% a2,
''' _:1 #b ways to *oose _% a;n-1 _:1 &
only "o way to *oose _% a;n _:4 ,"!=e1
we c =m _% .s _: 9 _% n(n-1) ''' #2*1 .k
n& _: ways4
#ai 4
  ,%{ t
_% #0+a _l a+0 _l a(mod n) _:
= all _% a `e _,z;n _:4
#bj 4
  ,prove t "! is a multiplicative id5t;y
= ! 9teg}s modulo .2;n3
_% a*1 _l a(mod n) _:
4
#ba 4
  ,= ea* _% a `e _,z;n _: f9d an ele;t
_% b `e _,z;n _: s* t               #afi
_% a+b _l b+a _l #0(mod n) _:
4
#bb 4
  ,%{ t addi;n & multiplica;n mod .2;n
>e well def9$ op}a;ns4 ,t is1 %{ t !
op}a;ns d n dep5d on ! *oice ( !
repres5tative f ! equival;e classes mod
.2;n4
#bc 4
  ,%{ t addi;n & multiplica;n mod .2;n
>e associative op}a;ns4
#bd 4
  ,%{ t multiplica;n 4tributes ov}
addi;n modulo .2;n3
_% a(b+c) _l ab+ac(mod n) _:
4
#be 4
  ,let .2a & .2;b 2 ele;ts 9 a gr|p
.2;,g4 ,prove t _% ab~n"a~-#1" .k
(aba~-#1")~n _: = _% n `e _,z _:4
,h9t3
_%
4
#bf 4
  ,let _% ,u(n) _: 2 ! gr|p (       #agj
units 9 _% _,z;n _:4 ,if _% n .1 #2 _:1
prove t "! is an ele;t _% k `e ,u(n) _:
s* t _% k~2" .k #1 _: & _% k /.k #1 _:4
#bg 4
  ,prove t ! 9v}se ( _% g1g2 ''' g;n" _:
is _% g;n~-#1"g;n-1~-#1" ''' g1~-#1 _:4
#bh 4
  ,prove ! rema9d} ( ,proposi;n #c4b4ad3
if .2;,g is a gr|p & _% a, b `e ,g _:1
!n ! equa;n _% xa .k b _: has a unique
solu;n 9 .2;,g4
#bi 4
  ,prove ,!orem #c4b4af4
#cj 4
  ,prove ! "r & left c.ella;n laws = a
gr|p .2;,g2 t is1 %{ t 9 ! gr|p .2;,g1
_% ba .k ca _: implies _% b .k c _: &
_% ab .k ac _: implies _% b .k c _: =
ele;ts _% a, b, c `e ,g _:4
#ca 4
  ,%{ t if _% a~2" .k e _: = all ele;ts
.2a 9 a gr|p .2;,g1 !n .2;,g m/ 2
abelian4
,h9t3
  ,s9ce _% abab .k (ab)~2" .k e .k  #aga
a~2"b~2" .k aabb _:1 we "k t _% ba .k
ab _:4
#cb 4
  ,%{ t if .2;,g is a f9ite gr|p ( ev5
ord}1 !n "! is an _% a `e ,g _: s* t .2a
is n ! id5t;y & _% a~2" .k e _:4
#cc 4
  ,let .2;,g 2 a gr|p & suppose t
_% (ab)~2" .k a~2"b~2 _: = all .2a &
.2;b 9 .2;,g4 ,prove t .2;,g is an
abelian gr|p4
#cd 4
  ,f9d all ! subgr|ps (
_% _,z3`*_,z3 _:4 ,use ? 9=ma;n to %{ t
_% _,z3`*_,z3 _: is n ! same gr|p z
_% _,z9 _:4 "<,see ,example #c4c4e = a
%ort descrip;n ( ! product ( gr|ps4">
#ce 4
  ,f9d all ! subgr|ps ( ! symmetry gr|p
( an equilat}al triangle4
,h9t3
  _% ,h1 .k .(id.) _:1 _% ,h2 .k .(id,
.r1, .r2.) _:1 _% ,h3 .k .(id, .m1.) _:1
_% ,h4 .k .(id, .m2.) _:1 _% ,h5 .k
.(id, .m3.) _:1 _% ,s3 _:4          #agb
#cf 4
  ,compute ! subgr|ps ( ! symmetry gr|p
( a squ>e4
#cg 4
  ,let _% ,h .k .(#2~k"3 k `e _,z.) _:4
,%{ t .2;,h is a subgr|p ( _% _,q~`# _:4
#ch 4
  ,let _% n .k #0, #1, #2, ''' _: &
_% n_,z .k .(nk3 k `e _,z.) _:4 ,prove t
_% n_,z _: is a subgr|p ( _% _,z _:4 ,%{
t ~! subgr|ps >e ! only subgr|ps (
_% _,z _:4
#ci 4
  ,let _% _,t .k .(z `e _,c~`#"3 |z| .k
#1.) _:4 ,prove t _% _,t _: is a subgr|p
( _% _,c~`# _:4
#dj 4
  ,let .2;,g 3si/ ( ! _% #2`*2 _:
matrices ( ! =m
_% ,(cos .? -sin .?,) ,(sin .? cos
.?,) _:
1 ": _% .? `e _,r _:4 ,prove t .2;,g is
a subgr|p ( _% ,s,l2(_,r) _:4
#da 4
  ,prove t                          #agc
_% ,g .k .(a+b>2}3 a, b `e
_,qandaandbare not both zero.) _:
is a subgr|p ( _% _,r~`# _: "u ! gr|p
op}a;n ( multiplica;n4
,h9t3
  ,! id5t;y ( .2;,g is _% #1 .k
#1+0>2} _:4 ,s9ce _% (a+b>2})(c+d>2}) .k
(ac+2bd)+(ad+bc)>2} _:1 .2;,g is clos$
"u multiplica;n4 ,f9ally1
_% (a+b>2})~-#1" .k
a_/(a~2"-2b~2")-b>2}_/(a~2"-2b~2") _:4
#db 4
  ,let .2;,g 2 ! gr|p ( _% #2`*2 _:
matrices "u addi;n &
_% ,h .k .(,(a b,) ,(c d,)3 a+d .k
#0.) _:
4 ,prove t .2;,h is a subgr|p ( .2;,g4
#dc 4
  ,prove or 4prove3 _% ,s,l2(_,z) _:1 !
set ( _% #2`*2 _: matrices ) 9teg}
5tries & det}m9ant "o1 is a subgr|p (
_% ,s,l2(_,r) _:4
#dd 4
  ,li/ ! subgr|ps ( ! quat}nion gr|p1
_% ,q8 _:4                          #agd
#de 4
  ,prove t ! 9t}sec;n ( two subgr|ps ( a
gr|p .2;,g is al a subgr|p ( .2;,g4
#df 4
  ,prove or 4prove3 ,if .2;,h & .2;,k >e
subgr|ps ( a gr|p .2;,g1 !n _% ,h.+,k _:
is a subgr|p ( .2;,g4
,h9t3
  ,look at _% ,s3 _:4
#dg 4
  ,prove or 4prove3 ,if .2;,h & .2;,k >e
subgr|ps ( a gr|p .2;,g1 !n _% ,h,k .k
.(hk3 h `e ,handk `e ,k.) _: is a
subgr|p ( .2;,g4 ,:at if .2;,g is
abelian8
#dh 4
  ,let .2;,g 2 a gr|p & _% g `e ,g _:4
,%{ t
_% ,z(,g) .k .(x `e ,g3 gx .k xgfor allg
`e ,g.) _:
is a subgr|p ( .2;,g4 ,? subgr|p is
call$ ! ~1c5t} ( .2;,g4
#di 4
  ,let .2a & .2;b 2 ele;ts ( a gr|p
.2;,g4 ,if _% a~4"b .k ba _: &      #age
_% a~3" .k e _:1 prove t _% ab .k ba _:4
,h9t3
  _% ba .k a~4"b .k a~3"ab .k ab _:
#ej 4
  ,give an example ( an 9f9ite gr|p 9 :
e nontrivial subgr|p is 9f9ite4
#ea 4
  ,if _% xy .k x~-#1"y~-#1 _: = all .2;x
& .2;y 9 .2;,g1 prove t .2;,g m/ 2
abelian4
#eb 4
  ,prove or 4prove3 ,e prop} subgr|p ( a
nonabelian gr|p is nonabelian4
#ec 4
  ,let .2;,h 2 a subgr|p ( .2;,g &
_% ,c(,h) .k .(g `e ,g3 gh .k hgfor allh
`e ,h.) _:
4 ,prove _% ,c(,h) _: is a subgr|p (
.2;,g4 ,? subgr|p is call$ ! ~1c5traliz}
( .2;,h 9 .2;,g4
#ed 4
  ,let .2;,h 2 a subgr|p ( .2;,g4 ,if
_% g `e ,g _:1 %{ t _% g,hg~-#1" .k
.(ghg~-#1"3 h `e ,h.) _: is al a subgr|p
( .2;,g4                            #agf
,ex}cises #c4f ,addi;nal ,ex}cises3
,detect+ ,}rors #a 4  ,,upc ,symbols4
  ,univ}sal ,product ,code  "< ,,upc">
symbols >e f.d on mo/ products 9 groc}y
& retail /ores4 ,! ,,upc symbol is a
#ab-digit code id5tify+ ! manufactur} (
a product & ! product xf
"<,figure #c4f4a">4 ,! f/ #aa digits
3ta9 9=ma;n ab ! product2 ! twelf? digit
is us$ = }ror detec;n4 ,if _% d1d2 '''
d12 _: is a valid ,,upc numb}1 !n
_% #3*d1+1*d2+3*d3+'''+3*d11+1*d12 _l
#0(mod 10) _:
4

a4
    ,%{ t ! ,,upc numb}
  #j-#ejjjj-#cjjdb-#f1 : appe>s 9
  ,figure #c4f4a1 is a valid ,,upc
  numb}4
;b4
    ,%{ t ! numb} #j-#ejjjj-#cjjdc-#f is
  n a valid ,,upc numb}4
;c4
    ,write a =mula to calculate !   #agg
  *eck digit1 _% d12 _:1 9 ! ,,upc
  numb}4
;d4
    ,! ,,upc }ror detec;n s*eme c detect
  mo/ transposi;n }rors2 t is1 x c
  det}m9e if two digits h be5 9t}*ang$4
  ,%{ t ! transposi;n }ror
  #j-#jejjj-#cjjdb-#f is n detect$4 ,f9d
  a transposi;n }ror t is detect$4 ,c y
  f9d a g5}al rule = ! types (
  transposi;n }rors t c 2 detect$8
;e4
    ,write a program t w det}m9e :e!r or
  n a ,,upc numb} is valid4

7777777777777777777777777777777777777777
  ,image3 ,! v}tical l9es ( a ,,upc b>
scan code = #j-#jejjj-#cjjdb-#f
  ,,id3 image-#e
,figure  #c4f4a 4  ,a ,,upc code
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

#b 4
  ,x is (t5 use;l to use an 9n} product
nota;n = ? type ( }ror detec;n      #agh
s*eme2 h;e1 we w use ! no;n
_% (d1, d2, ''' , d;k")*(w1, w2, ''' ,
w;k") _l #0(mod n) _:
to m1n
_% d1w1+d2w2+'''+d;k"w;k" _l #0(mod
n) _:
4
  ,suppose t _% (d1, d2, ''' ,
d;k")*(w1, w2, ''' , w;k") _l #0(mod
n) _: is an }ror detec;n s*eme = !
.2;k-digit id5tifica;n numb} _% d1d2 '''
d;k" _:1 ": _% #0 "k: d;i" "k n _:4
,prove t all s+le-digit }rors >e detect$
if & only if _% gcd (w;i", n) .k #1 _: =
_% #1 "k: i "k: k _:4
#c 4
  ,let _% (d1, d2, ''' , d;k")*(w1, w2,
''' , w;k") _l #0(mod n) _: 2 an }ror
detec;n s*eme = ! .2;k-digit id5tifica;n
numb} _% d1d2 ''' d;k" _:1 ": _% #0 "k:
d;i" "k n _:4 ,prove t all transposi;n
}rors ( two digits _% d;i _: & _% d;j _:
>e detect$ if & only if _% gcd
(w;i"-w;j", n) .k #1 _: = .2i & .2;j 2t
_% #1 _: & .2;k4                    #agi
#d 4  ,,isbn ,codes4
  ,e book has an ,9t}na;nal ,/&>d ,book
,numb} "< ,,isbn"> code4 ,? is a
#aj-digit code 9dicat+ ! book's publi%}
& title4 ,! t5? digit is a *eck digit
satisfy+
_% (d1, d2, ''' , d10)*(#10, #9, ''' ,
#1) _l #0(mod 11) _:
4 ,"o problem is t _% d10 _: mi<t h to 2
a #aj to make ! 9n} product z}o2 9 ?
case1 #aa digits wd 2  ne$$ to make ?
s*eme "w4 ,"!=e1 ! "* ;,x is us$ = !
elev5? digit4 ,s ,,isbn
#c-#edj-#ifjce-;,x is a valid ,,isbn
code4

a4
    ,is ,,isbn #j-#ecd-#iaejj-#j a valid
  ,,isbn code8 ,:at ab ,,isbn
  #j-#ecd-#iagjj-#j & ,,isbn
  #j-#ecd-#aiejj-#j8
;b4
    ,does ? me?od detect all s+le-digit
  }rors8 ,:at ab all transposi;n }rors8
;c4                                 #ahj
    ,h{ _m di6}5t ,,isbn codes >e "!8
;d4
    ,write a comput} program t w
  calculate ! *eck digit = ! f/ n9e
  digits ( an ,,isbn code4
;e4
    ,a publi%} has h|ses 9 ,g}_m & !
  ,unit$ ,/ates4 ,xs ,g}man prefix is
  #c-#edj4 ,if xs ,unit$ ,/ates prefix w
  2 #j- abc1 f9d abc s* t ! re/ ( !
  ,,isbn code w 2 ! same = a book pr9t$
  9 ,g}_m & 9 ! ,unit$ ,/ates4 ,"u !
  ,,isbn cod+ me?od ! f/ digit id5tifies
  ! language2 ,g}man is #c & ,5gli% is
  #j4 ,! next gr|p ( numb}s id5tifies !
  publi%}1 & ! la/ gr|p id5tifies !
  specific book4

,ref};es #c4g ,ref};es & ,su7e/$ ,r1d+s
.<#a.>   ,burnside1 ;,w4 ,!ory ( ,gr|ps
( ,f9ite ,ord}4 #bnd $4 ,cambridge
,univ}s;y ,press1 ,cambridge1 #aiaa2
,dov}1 ,new ,york1 #aiec4  ,a classic4
,al available at books4google4com4
.<#b.>   ,gallian1 ;,j4 ,a4 &       #aha
,w9t}s1 ;,s4 8,modul> ,>i?metic 9 !
,m>ketplace10 ,! ,am}ican ,ma!matical
,mon?ly ~1#ie "<#aihh">3 #edh,-#ea4
.<#c.>   ,gallian1 ;,j4 ,a4 ,3tempor>y
,ab/ract ,algebra4 #gth $4
,brooks_/,cole1 ,belmont1 ,,ca1 #bjji4
.<#d.>   ,hall1 ;,m4 ,!ory ( ,gr|ps4
#bnd $4 ,am}ican ,ma!matical ,society1
,provid;e1 #aiei4 .<#e.>   ,kuro%1 ,a4
;,e4 ,! ,!ory ( ,gr|ps1 vols4 ,i & ,,ii4
,am}ican ,ma!matical ,society1
,provid;e1 #aigi4 .<#f.>   ,rotman1 ;,j4
;,j4 ,an ,9troduc;n to ! ,!ory ( ,gr|ps4
#dth $4 ,spr+}1 ,new ,york1 #aiie4

    ,sec;n #c4h ,sage
  ,_m ( ! gr|ps 4cuss$ 9 ? *apt} >e
available = /udy 9 ,sage4 ,x is
important to "u/& t sets t =m algebraic
objects "<gr|ps 9 ? *apt}"> >e call$
8p>5ts0 9 ,sage1 & ele;ts ( ~! objects
>e call$1 well1 8ele;ts40 ,s e ele;t
2l;gs to a p>5t "<9 o!r ~ws1 is 3ta9$ 9
"s set">4 ,we c ask ab prop}ties ( p>5ts
"<f9ite8 ord}8 abelian8">1 & we c   #ahb
ask ab prop}ties ( 9dividual ele;ts
"<id5t;y8 9v}se8">4 ,9 ! foll{+ we w %{
y h{ to cr1te "s ( ~! common gr|ps & 2g9
to explore _! prop}ties ) ,sage4

      ,subsec;n #c4h4a ,9teg}s mod ;n
7777777777777777777777777777777777777777
,sage
  ,9put3
_z8 = _integers(8) _z8
  ,|tput3
_ring of integers modulo _8
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_z8.list()
  ,|tput3
[0, 1, 2, 3, 4, 5, 6, 7]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3                            #ahc
a = _z8.an__element(); a
  ,|tput3
_0
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
a.parent()
  ,|tput3
_ring of integers modulo _8
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we wd l to "w ) ele;ts ( ,z#h4 ,if y
7 to type a #f 9to a compute cell "r n{1
:at wd y m1n8 ,! 9teg} _% #6 _:1 !
ra;nal numb} _% ?6/1# _:1 ! r1l numb}
_% #6.00000 _:1 or ! complex numb}
_% #6.00000+0.00000i _:;8 ,or p}h y
r1lly d want ! 9teg} _% #6 _: mod
_% #8 _:;8 ,sage r1lly has no idea :at y
m1n or want4 ,to make ? cle>1 y c
8co}ce0 #f 9to ,z#h ) ! syntax
,z#h"<#f">4 ,)|t ?1 ,sage w tr1t a 9put
numb} l #f z an 9teg}1 ! simple/    #ahd
possible 9t}preta;n 9 "s s5se4 ,/udy !
foll{+ c>e;lly1 ": we f/ "w ) 8normal0
9teg}s & !n ) 9teg}s mod #h4
7777777777777777777777777777777777777777
,sage
  ,9put3
a = _6 a
  ,|tput3
_6
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
a.parent()
  ,|tput3
_integer _ring
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b = _7 c = a + b; c
  ,|tput3
13                                  #ahe
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
d = _z8(6) d
  ,|tput3
_6
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
d.parent()
  ,|tput3
_ring of integers modulo _8
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
e = _z8(7) f = d+e; f
  ,|tput3
_5
                                    #ahf
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
g = _z8(85); g
  ,|tput3
_5
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
f == g
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,z#h is a bit unusual z a f/ example1
s9ce x has two op}a;ns def9$1 bo? addi;n
& multiplica;n1 ) addi;n =m+ a gr|p1 &
multiplica;n n =m+ a gr|p4 ,/1 we c "w )
! additive por;n1 "h =m+ ! ,cayley table
= ! addi;n4
                                    #ahg
7777777777777777777777777777777777777777
,sage
  ,9put3
_z8.addition__table(names='elements')
  ,|tput3
+  _0 _1 _2 _3 _4 _5 _6 _7
+---------------- 0_\ _0 _1 _2 _3 _4 _5
_6 _7 1_\ _1 _2 _3 _4 _5 _6 _7 _0 2_\ _2
_3 _4 _5 _6 _7 _0 _1 3_\ _3 _4 _5 _6 _7
_0 _1 _2 4_\ _4 _5 _6 _7 _0 _1 _2 _3 5_\
_5 _6 _7 _0 _1 _2 _3 _4 6_\ _6 _7 _0 _1
_2 _3 _4 _5 7_\ _7 _0 _1 _2 _3 _4 _5 _6
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,:5 .2;n is a prime numb}1 !
multipicative /ructure "<exclud+ z}o">1
w al =m a gr|p4
  ,! 9teg}s mod .2;n >e v important1 s
,sage imple;ts bo? addi;n & multiplica;n
tgr4 ,gr|ps ( symmetries >e a bett}
example ( h{ ,sage imple;ts gr|ps1 s9ce
"! is j "o op}a;n pres5t4
7777777777777777777777777777777777777777
,sage
  ,9put3                            #ahh
# _practice area (not linked for _sage
_cell use)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #c4h4b ,gr|ps (
      symmetries
  ,! symmetries ( "s geometric %apes >e
alr def9$ 9 ,sage1 albeit ) di6}5t "ns4
,!y >e imple;t$ z 8p}muta;n gr|ps0 : we
w 2g9 to /udy c>e;lly 9 ,*apt} #e4
  ,sage uses 9teg}s to label v}tices1
/>t+ ! c.t at #a1 9/1d ( lrs4 ,ele;ts by
default >e pr9t$ us+ 8cycle nota;n0 : we
w see describ$ c>e;lly 9 ,*apt} #e4 ,"h
is an example1 ) bo? ! ma!matics &
,sage4 ,= ! ,sage "p1 we cr1te ! gr|p (
symmetries & !n cr1te ! symmetry
_% .r2 _: ) co}cion1 foll{$ by |tputt+ !
ele;t 9 cycle nota;n4 ,!n we cr1te j !
.1bottom .1r{ ( ! nota;n we >e us+ =
p}muta;ns4
_% .r2 .k ,(,a ,b ,c,) ,(,c ,a ,b,) .k
,(#1 2 3,) ,(3 1 2,) _:
7777777777777777777777777777777777777777
,sage                               #ahi
  ,9put3
triangle = _symmetric_group(3) rho2 =
triangle([3,1,2]) rho2
  ,|tput3
(1,3,2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
[rho2(x) for x in triangle.domain()]
  ,|tput3
[3, 1, 2]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! f9al li/ compreh5.n des}ves com;t4
,! 4doma9"<"> me?od gives a li/ ( !
symbols us$ = ! p}muta;n gr|p triangle &
!n rho#b is employ$ ) syntax l x is a
func;n "<x .1is a func;n"> to cr1te !
images t wd o3upy ! bottom r{4
  ,) a d|ble li/ compreh5.n we c li/ all
six ele;ts ( ! gr|p 9 ! 8bottom r{0
=mat4 ,a gd ex}cise wd 2 to pair up ea*
ele;t ) xs "n z giv5 9              #aij
,figure #c4a4f4
7777777777777777777777777777777777777777
,sage
  ,9put3
[[a(x) for x in triangle.domain()] for a
in triangle]
  ,|tput3
[[1, 2, 3], [3, 1, 2], [2, 3, 1], [1, 3,
2], [3, 2, 1], [2, 1, 3]]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,di6}5t books1 di6}5t au?ors1 di6}5t
s(tw>e all h di6}5t id1s ab ! ord} 9 :
to write multiplica;n ( func;ns4 ,?
textbook builds on ! idea ( composi;n (
func;ns1 s t _% fg _: is ! composi;n
_% (fg)(x) .k f(g(x)) _: & x is natural
to apply .2;g f/4 ,sage takes ! opposite
view & s9ce we write _% fg _:1 ,sage w
"u/& t we want to d .2;f f/4 ,nei
approa* is wr;g1 & nei is necess>ily
sup}ior1 !y >e j di6}5t & "! >e gd
>gu;ts = ei "o4 ,:5 y 3sult o!r books t
"w ) p}muta;n gr|ps1 y want to f/
det}m9e : approa* x takes4 "<,2     #aia
aw>e t ? 4cus.n ( ,sage func;n composi;n
is limit$ to p}muta;ns only",-8regul>0
func;ns 9 ,sage compose 9 ! ord} y mi<t
2 famili> ) f a calculus c|rse4">
  ,! transla;n "h 2t ! text & ,sage w 2
wor?:ile practice4 ,"h we w reprise !
4cus.n at ! 5d ( ,sec;n #c4a1 b rev}se !
ord} on ea* product to compute
,sage-/yle & exactly mirror :at ! text
does4
7777777777777777777777777777777777777777
,sage
  ,9put3
mu1 = triangle([1,3,2]) mu2 =
triangle([3,2,1]) mu3 =
triangle([2,1,3]) rho1 =
triangle([2,3,1]) product = rho1*mu1
product == mu2
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3                            #aib
[product(x) for x in triangle.domain()]
  ,|tput3
[3, 2, 1]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
rho1*mu1 == mu1*rho1
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
mu1*rho1 == mu3
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,n{ t we "u/& t ,sage does
multiplica;n 9 rev}se1 we c compute !
,cayley table = ? gr|p4 ,default 2havior
is to j "n ele;ts ( a gr|p z lrs1   #aic
a1         ;b1 ;c1 _% ''' _: 9 ! same
ord} t ! 4li/"<"> comm& wd produce !
ele;ts ( ! gr|p4 ,b y c al pr9t ! ele;ts
9 ! table z !mvs "<t uses cycle nota;n
"h">1 or y c give ! ele;ts "ns4 ,we w
use ;u z %orth& = _% .m _: & ;r z %orth&
= _% .r _:4
7777777777777777777777777777777777777777
,sage
  ,9put3
triangle.cayley__table()
  ,|tput3
*  a b c d e f  +------------ a_\ a b c
d e f b_\ b a d c f e c_\ c e a f b d
d_\ d f b e a c e_\ e c f a d b f_\ f d
e b c a
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
triangle.cayley__table(names='elements')
  ,|tput3
*       ()   (2,3)   (1,2) (1,2,3)
(1,3,2)   (1,3)                     #aid
+---------------------------------------
----------      ()_\      ()   (2,3)
(1,2) (1,2,3) (1,3,2)   (1,3)   (2,3)_\
 (2,3)      () (1,2,3)   (1,2)   (1,3)
(1,3,2)   (1,2)_\   (1,2) (1,3,2)
()   (1,3)   (2,3) (1,2,3) (1,2,3)_\
(1,2,3)   (1,3)   (2,3) (1,3,2)      ()
 (1,2) (1,3,2)_\ (1,3,2)   (1,2)   (1,3)
     () (1,2,3)   (2,3)   (1,3)_\
(1,3) (1,2,3) (1,3,2)   (2,3)   (1,2)
  ()
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
triangle.cayley__table(names=['id','u3'-
,'r1','r2','u1','u2'])
  ,|tput3
*  id u3 r1 r2 u1 u2
+------------------ id_\ id u3 r1 r2 u1
u2 u3_\ u3 id r2 r1 u2 u1 r1_\ r1 u1 id
u2 u3 r2 r2_\ r2 u2 u3 u1 id r1 u1_\ u1
r1 u2 id r2 u3 u2_\ u2 r2 u1 u3 r1 id
                                    #aie
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,y %d v}ify t ! table abv is correct1
j l ,table #c4b is correct4 ,rememb} t !
3v5;n is to multiply a r{ label "ts a
column label1 9 t ord}4 ,h{"e1 to d a
*eck acr ! two tables1 y w ne$ to recall
! di6};e 9 ord}+ 2t yr textbook & ,sage4
7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #c4h4c ,quat}nions
  ,sage imple;ts ! quat}nions1 b !
ele;ts >e n matrices1 b r >e p}muta;ns4
,despite appe>.es ! /ructure is
id5tical4 ,x %d n matt} : v}.n y h 9 m9d
"<matrices or p}muta;ns"> if y build !
,cayley table & use ! default 2havior (
us+ lrs to "n ! ele;ts4 ,z p}muta;ns1 or
z lrs1 c y id5tify _% -#1 _:1 .2,i1
.2;,j & .2;,k8                      #aif
7777777777777777777777777777777777777777
,sage
  ,9put3
_q = _quaternion_group() [[a(x) for x in
_q.domain()] for a in _q]
  ,|tput3
[[1, 2, 3, 4, 5, 6, 7, 8], [3, 4, 1, 2,
7, 8, 5, 6],  [4, 1, 2, 3, 8, 5, 6, 7],
[2, 3, 4, 1, 6, 7, 8, 5],  [7, 6, 5, 8,
1, 4, 3, 2], [5, 8, 7, 6, 3, 2, 1, 4],
[8, 7, 6, 5, 2, 1, 4, 3], [6, 5, 8, 7,
4, 3, 2, 1]]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_q.cayley__table()
  ,|tput3
*  a b c d e f g h  +----------------
a_\ a b c d e f g h b_\ b c d a h e f g
c_\ c d a b g h e f d_\ d a b c f g h e
e_\ e f g h c d a b f_\ f g h e b c d a
g_\ g h e f a b c d h_\ h e f g d a b c
                                    #aig
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,x %d 2 fairly obvi|s t a is ! id5t;y
ele;t ( ! gr|p "<_% #1 _:">1 ei f xs
2havior 9 ! table1 or f xs 8bottom r{0
repres5ta;n z ! f/ ele;t ( ! li/ abv4 ,&
if y pref}1 y c ask ,sage = a li/ ( xs
|tputs :5 view$ z a func;n4
7777777777777777777777777777777777777777
,sage
  ,9put3
id = _q.identity() [id(x) for x in
_q.domain()]
  ,|tput3
[1, 2, 3, 4, 5, 6, 7, 8]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,n{ _% -#1 _: %d h ! prop}ty t
_% -#1*-#1 .k #1 _:4 ,we see t ! id5t;y
ele;t a is on ! diagonal ( ! ,cayley
table only :5 we compute d"9d4 ,we c
v}ify ? easily1 borr{+ ! f|r? 8bottom
r{0 ele;t f ! li/ abv4 ,) ? 9=ma;n1 once
we locate .2,i1 we c easily compute
_% -,i _:1 & s on4                  #aih
7777777777777777777777777777777777777777
,sage
  ,9put3
minus__one = _q([3, 4, 1, 2, 7, 8, 5,
6]) minus__one*minus__one ==
_q.identity()
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,see if y c pair up ! lrs ) all ei<t
ele;ts ( ! quat}nions4 ,2 a bit c>e;l )
yr "ns1 ! symbol ,i is us$ by ,sage = !
imag9>y numb} _% i .k >-1} _: "<: we w
use 2l">1 b ,sage w sil5tly let y r$ef9e
x to 2 any?+ y l4 ,same goes = us+
l{}-case i 9 ,sage4 ,s call yr ele;ts (
! quat}nions "s?+ l ,,,qi1 qj1 ;qk,' to
avoid 3fu.n4
  ,z we 2g9 to "w ) gr|ps x is 9/ructive
to "w ) ! actual ele;ts4 ,b _m prop}ties
( gr|ps >e totally 9dep5d5t ( ! ord} we
use = multiplica;n1 or ! "ns or
repres5ta;ns we use = ! ele;ts4 ,"h >e
facts ab ! quat}nions we c compute  #aii
)|t any k ( j h{ ! ele;ts >e writt5 or
multipli$4
7777777777777777777777777777777777777777
,sage
  ,9put3
_q.is__finite()
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_q.order()
  ,|tput3
_8
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_q.is__abelian()
  ,|tput3
_false
                                    #bjj
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #c4h4d ,subgr|ps
  ,! be/ te*niques = cr1t+ subgr|ps w
come 9 future *apt}s1 b we c cr1te "s
gr|ps t >e naturally subgr|ps ( o!r
gr|ps4
  ,ele;ts ( ! quat}nions 7 repres5t$ by
c}ta9 p}muta;ns ( ! 9teg}s #a "? #h4 ,we
c al build ! gr|p ( .1all p}muta;ns ( ~!
ei<t 9teg}s4 ,x gets pretty big1 s d n
li/ x un.s y want a lot ( |tput6 "<,i
d>e y4">
7777777777777777777777777777777777777777
,sage
  ,9put3
_s8 = _symmetric_group(8) a =
_s8.random__element() [a(x) for x   #bja
in _s8.domain()]     # random
  ,|tput3
[5, 2, 6, 4, 1, 8, 3, 7]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_s8.order()
  ,|tput3
40320
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! quat}nions1 ;,q1 is a subgr|p ( !
full gr|p ( all p}muta;ns1 ! symmetric
gr|p _% ,s8 _: or ,s#h1 & ,sage reg>ds ?
z a prop}ty ( ;,q4
7777777777777777777777777777777777777777
,sage
  ,9put3
_q.is__subgroup(_s8)
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #bjb
  ,9 ,sage ! complex numb}s >e "kn by !
"n ,,cc4 ,we c cr1te a li/ ( ! ele;ts 9
! subgr|p describ$ 9 ,example #c4b4i4
,!n we c v}ify t ? set is a subgr|p by
exam9+ ! ,cayley table1 us+ multiplica;n
z ! op}a;n4
7777777777777777777777777777777777777777
,sage
  ,9put3
_h = [_>cc(1), _>cc(-1), _>cc(i),
_>cc(-i)]
_>cc._<multiplication__table(elements=_-
h,                         names=['1',
'-1', 'i', '-i'])
  ,|tput3
*   _1 -1  i -i   +------------  1_\  _1
-1  i -i -1_\ -1  _1 -i  i  i_\  i -i -1
 _1 -i_\ -i  i  _1 -1
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)                          #bjc
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

,ex}cises #c4i ,sage ,ex}cises
  ,~! ex}cises >e ab 2com+ com=table "w+
) gr|ps 9 ,sage4 ,sage "w%eets h
ext5sive capabilities = mak+ new cells )
c>e;lly =matt$ text1 9clude support =
;,l a,t e,x syntax to express ma!matics4
,s :5 a "q asks = explana;n or com;t>y1
make a new cell & communicate cle>ly )
yr audi;e4
#a 4
  ,cr1te ! gr|ps
,cyclic,p}muta;n,gr|p"<#h"> &
,dih$ral,gr|p"<#d"> & "n ~! gr|ps ;,c &
;,d1 respectively4 ,we w "u/& ~!
3/ruc;ns bett} %ortly1 b = n{ j "u/& t
bo? objects y cr1te >e actually gr|ps4
#b 4
  ,*eck t ;,c & ;,d h ! same size by us+
! 4ord}"<"> me?od4 ,det}m9e : gr|p is
abelian1 & : is n1 by us+ !
4is.-abelian"<"> me?od4
#c 4
  ,use ! 4cayley.-table"<"> me?od   #bjd
to cr1te ! ,cayley table = ea* gr|p4
#d 4
  ,write a nicely =matt$ 4cus.n id5tify+
di6};es 2t ! two gr|ps t >e 4c}nible 9
prop}ties ( _! ,cayley tables4 ,9 o!r
~ws1 :at is .1di6}5t ab ~! two gr|ps t y
c 8see0 9 ! ,cayley tables8 "<,9 ! ,sage
notebook1 a ,%ift-click on a blue b> w
br+ up a m9i-~w-processor1 & y c use use
doll> signs to emb$ ma!matics =matt$ us+
;,t e,x syntax4">
#e 4
  ,= ;,c locate ! "o subgr|p ( ord}
_% #4 _:4 ,! gr|p ;,d has ?ree subgr|ps
( ord} _% #4 _:4 ,select "o ( ! ?ree
subgr|ps ( ;,d t has a di6}5t /ructure
?an ! subgr|p y obta9$ f ;,c4
  ,! 4subgr|ps"<"> me?od w give y a li/
( all ( ! subgr|ps to help y get />t$4
,a ,cayley table w help y tell ! di6};e
2t ! two subgr|ps4 ,:at prop}ties ( ~!
tables did y use to det}m9e ! di6};e 9 !
/ructure ( ! subgr|ps8
#f 4
  ,! 4subgr|p"<elt.-li/"> me?od (   #bje
a gr|p w cr1te ! smalle/ subgr|p 3ta9+ !
specifi$ ele;ts ( ! gr|p1 :5 giv5 !
ele;ts z a li/ elt.-li/4 ,use ? comm& to
4cov} ! %orte/ li/ ( ele;ts nec to
recr1te ! subgr|ps y f.d 9 ! previ|s
ex}cise4 ,! equal;y comp>ison1 "7"71 c 2
us$ to te/ if two subgr|ps >e equal4

















                                    #bjf
        ,*apt} #d ,cyclic ,gr|ps

  ,! gr|ps _% _,z _: & _% _,z;n _:1 : >e
am;g ! mo/ famili> & easily "u/ood
gr|ps1 >e bo? examples ( :at >e call$
cyclic gr|ps4 ,9 ? *apt} we w /udy !
prop}ties ( cyclic gr|ps & cyclic
subgr|ps1 : play a funda;tal "p 9 !
classifica;n ( all abelian gr|ps4

    ,sec;n #d4a ,cyclic ,subgr|ps
  ,(t5 a subgr|p w dep5d 5tirely on a
s+le ele;t ( ! gr|p2 t is1 "k+ t "picul>
ele;t w all{ u to compute any o!r ele;t
9 ! subgr|p4
7777777777777777777777777777777777777777
,example  #d4a4a 4
  ,suppose t we 3sid} _% #3 `e _,z _: &
look at all multiples "<bo? positive &
negative"> ( _% #3 _:4 ,z a set1 ? is
_% #3_,z .k .( ''' , -#3, #0, #3, #6,
'''.) _:
4 ,x is easy to see t _% #3_,z _: is a
subgr|p ( ! 9teg}s4 ,? subgr|p is
completely det}m9$ by ! ele;t       #bjg
_% #3 _: s9ce we c obta9 all ( ! o!r
ele;ts ( ! gr|p by tak+ multiples (
_% #3 _:4 ,e ele;t 9 ! subgr|p is
8g5}at$0 by _% #3 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #d4a4b 4
  ,if _% ,h .k .(#2~n"3 n `e _,z.) _:1
!n .2;,h is a subgr|p ( ! multiplicative
gr|p ( nonz}o ra;nal numb}s1
_% _,q~`# _:4 ,if _% a .k #2~m _: & _% b
.k #2~n _: >e 9 .2;,h1 !n _% ab~-#1" .k
#2~m"2~-n" .k #2~m-n _: is al 9 .2;,h4
,by ,proposi;n #c4c4h1 .2;,h is a
subgr|p ( _% _,q~`# _: det}m9$ by !
ele;t _% #2 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #d4a4c 4
  ,let .2;,g 2 a gr|p & .2a 2 any ele;t
9 .2;,g4 ,!n ! set
_% ..(a..) .k .(a~k"3 k `e _,z.) _:
is a subgr|p ( .2;,g4 ,fur!rmore1   #bjh
_% ..(a..) _: is ! smalle/ subgr|p (
.2;,g t 3ta9s .2a4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,! id5t;y is 9 _% ..(a..) _: s9ce
_% a~0" .k e _:4 ,if .2;g & .2;h >e any
two ele;ts 9 _% ..(a..) _:1 !n by !
def9i;n ( _% ..(a..) _: we c write _% g
.k a~m _: & _% h .k a~n _: = "s 9teg}s
.2;m & .2;n4 ,s _% gh .k a~m"a~n" .k
a~m+n _: is ag 9 _% ..(a..) _:4 ,f9ally1
if _% g .k a~n _: 9 _% ..(a..) _:1 !n !
9v}se _% g~-#1" .k a~-n _: is al 9
_% ..(a..) _:4 ,cle>ly1 any subgr|p
.2;,h ( .2;,g 3ta9+ .2a m/ 3ta9 all !
p{}s ( .2a by closure2 h;e1 .2;,h 3ta9s
_% ..(a..) _:4 ,"!=e1 _% ..(a..) _: is !
smalle/ subgr|p ( .2;,g 3ta9+ .2a4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,rem>k  #d4a4d 4
  ,if we >e us+ ! 8"60 nota;n1 z 9  #bji
! case ( ! 9teg}s "u addi;n1 we write
_% ..(a..) .k .(na3 n `e _,z.) _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,= _% a `e ,g _:1 we call
_% ..(a..) _: ! ~1cyclic ~1subgr|p
g5}at$ by .2a4 ,if .2;,g 3ta9s "s ele;t
.2a s* t _% ,g .k ..(a..) _:1 !n .2;,g
is a ~1cyclic ~1gr|p~'4  ,9 ? case .2a
is a ~1g5}ator ( .2;,g4 ,if .2a is an
ele;t ( a gr|p .2;,g1 we def9e ! ~1ord}
( .2a to 2 ! smalle/ positive 9teg} .2;n
s* t _% a~n" .k e _:1 & we write _% |a|
.k n _:4  ,if "! is no s* 9teg} .2;n1 we
say t ! ord} ( .2a is 9f9ite & write
_% |a| .k ,= _: to d5ote ! ord} ( .2a4
7777777777777777777777777777777777777777
,example  #d4a4e 4
  ,notice t a cyclic gr|p c h m ?an a
s+le g5}ator4 ,bo? _% #1 _: & _% #5 _:
g5}ate _% _,z6 _:2 h;e1 _% _,z6 _: is a
cyclic gr|p4 ,n e ele;t 9 a cyclic gr|p
is necess>ily a g5}ator ( ! gr|p4 ,!
ord} ( _% #2 `e _,z6 _: is _% #3 _:4 ,!
cyclic subgr|p g5}at$ by _% #2 _:   #baj
is _% ..(#2..) .k .(#0, #2, #4.) _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! gr|ps _% _,z _: & _% _,z;n _: >e
cyclic gr|ps4 ,! ele;ts _% #1 _: &
_% -#1 _: >e g5}ators = _% _,z _:4 ,we c
c}ta9ly g5}ate _% _,z;n _: ) #a al? "!
may 2 o!r g5}ators ( _% _,z;n _:1 z 9 !
case ( _% _,z6 _:4
7777777777777777777777777777777777777777
,example  #d4a4f 4
  ,! gr|p ( units1 _% ,u(#9) _:1 9
_% _,z9 _: is a cyclic gr|p4 ,z a set1
_% ,u(#9) _: is _% .(#1, #2, #4, #5, #7,
#8.) _:4 ,! ele;t #b is a g5}ator =
_% ,u(#9) _: s9ce
_%
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #d4a4g 4
  ,n e gr|p is a cyclic gr|p4 ,3sid} !
symmetry gr|p ( an equilat}al triangle
_% ,s3 _:4 ,! multiplica;n table =  #baa
? gr|p is ,figure #c4a4g4 ,! subgr|ps (
_% ,s3 _: >e %{n 9 ,figure #d4a4h4
,notice t e subgr|p is cyclic2 h{"e1 no
s+le ele;t g5}ates ! 5tire gr|p4
7777777777777777777777777777777777777777
  ,image3 ,! lattice ( subgr|ps =
;,s-#c3 ! top is ;,s-#c1 ! second l9e is
! id5t;y1 rho-#a1 rho-#b2 ! id5t;y1
mu-#a2 ! id5t;y1 mu-#b2 ! id5t;y1 mu-#c1
& ! bottom is ! id5t;y subgr|p4
  ,,id3 cyclic-s#c-subgr|ps
,figure  #d4a4h 4  ,subgr|ps ( _% ,s3 _:
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #d4a4i 4
  ,e cyclic gr|p is abelian4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,let .2;,g 2 a cyclic gr|p & _% a `e
,g _: 2 a g5}ator = .2;,g4 ,if      #bab
.2;g & .2;h >e 9 .2;,g1 !n !y c 2 writt5
z p{}s ( .2a1 say _% g .k a~r _: & _% h
.k a~s _:4 ,s9ce
_% gh .k a~r"a~s" .k a~r+s" .k a~s+r" .k
a~s"a~r" .k hg _:
1 .2;,g is abelian4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #d4a4a ,subgr|ps (
      ,cyclic ,gr|ps
  ,we c ask "s 9t}e/+ "qs ab cyclic
subgr|ps ( a gr|p & subgr|ps ( a cyclic
gr|p4 ,if .2;,g is a gr|p1 : subgr|ps (
.2;,g >e cyclic8 ,if .2;,g is a cyclic
gr|p1 :at type ( subgr|ps does .2;,g
possess8
7777777777777777777777777777777777777777
,!orem  #d4a4aj 4
  ,e subgr|p ( a cyclic gr|p is cyclic4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,! ma9 tools us$ 9 ? pro( >e ! divi.n
algori?m & ! ,pr9ciple (            #bac
,well-,ord}+4 ,let .2;,g 2 a cyclic gr|p
g5}at$ by .2a & suppose t .2;,h is a
subgr|p ( .2;,g4 ,if _% ,h .k .(e.) _:1
!n trivially .2;,h is cyclic4 ,suppose t
.2;,h 3ta9s "s o!r ele;t .2;g 4t9ct f !
id5t;y4 ,!n .2;g c 2 writt5 z _% a~n _:
= "s 9teg} .2;n4 ,s9ce .2;,h is a
subgr|p1 _% g~-#1" .k a~-n _: m/ al 2 9
.2;,h4 ,s9ce ei .2;n or _% -n _: is
positive1 we c assume t .2;,h 3ta9s
positive p{}s ( .2a & _% n .1 #0 _:4
,let .2;m 2 ! smalle/ natural numb} s* t
_% a~m" `e ,h _:4 ,s* an .2;m exi/s by !
,pr9ciple ( ,well-,ord}+4
  ,we claim t _% h .k a~m _: is a
g5}ator = .2;,h4 ,we m/ %{ t e _% h~'"
`e ,h _: c 2 writt5 z a p{} ( .2;h4
,s9ce _% h~'" `e ,h _: & .2;,h is a
subgr|p ( .2;,g1 _% h~'" .k a~k _: = "s
9teg} .2;k4 ,us+ ! divi.n algori?m1 we c
f9d numb}s .2;q & .2;r s* t _% k .k
mq+r _: ": _% #0 "k: r "k m _:2 h;e1
_% a~k" .k a~mq+r" .k (a~m")~q"a~r" .k
h~q"a~r _:
4 ,s _% a~r" .k a~k"h~-q _:4 ,s9ce  #bad
_% a~k _: & _% h~-q _: >e 9 .2;,h1
_% a~r _: m/ al 2 9 .2;,h4 ,h{"e1 .2;m 0
! smalle/ positive numb} s* t _% a~m _:
0 9 .2;,h2 3sequ5tly1 _% r .k #0 _: & s
_% k .k mq _:4 ,"!=e1
_% h~'" .k a~k" .k a~mq" .k h~q _:
& .2;,h is g5}at$ by .2;h4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,coroll>y  #d4a4aa 4
  ,! subgr|ps ( _% _,z _: >e exactly
_% n_,z _: = _% n .k #0, #1, #2, ''' _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #d4a4ab 4
  ,let .2;,g 2 a cyclic gr|p ( ord} .2;n
& suppose t .2a is a g5}ator = .2;,g4
,!n _% a~k" .k e _: if & only if .2;n
divides .2;k4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4                             #bae
  ,f/ suppose t _% a~k" .k e _:4 ,by !
divi.n algori?m1 _% k .k nq+r _: ":
_% #0 "k: r "k n _:2 h;e1
_% e .k a~k" .k a~nq+r" .k a~nq"a~r" .k
ea~r" .k a~r _:
4 ,s9ce ! smalle/ positive 9teg} .2;m s*
t _% a~m" .k e _: is .2;n1 _% r .k
#0 _:4
  ,3v}sely1 if .2;n divides .2;k1 !n
_% k .k ns _: = "s 9teg} .2;s4
,3sequ5tly1
_% a~k" .k a~ns" .k (a~n")~s" .k e~s" .k
e _:
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #d4a4ac 4
  ,let .2;,g 2 a cyclic gr|p ( ord} .2;n
& suppose t _% a `e ,g _: is a g5}ator (
! gr|p4 ,if _% b .k a~k _:1 !n ! ord} (
.2;b is _% n_/d _:1 ": _% d .k gcd (k,
n) _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #baf
7777777777777777777777777777777777777777
,pro( 4
  ,we wi% to f9d ! smalle/ 9teg} .2;m s*
t _% e .k b~m" .k a~km _:4 ,by
,proposi;n #d4a4ab1 ? is ! smalle/ 9teg}
.2;m s* t .2;n divides _% km _: or1
equival5tly1 _% n_/d _: divides
_% m(k_/d) _:4 ,s9ce .2;d is ! grte/
common divisor ( .2;n & .2;k1 _% n_/d _:
& _% k_/d _: >e relatively prime4 ,h;e1
= _% n_/d _: to divide _% m(k_/d) _: x
m/ divide .2;m4 ,! smalle/ s* .2;m is
_% n_/d _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,coroll>y  #d4a4ad 4
  ,! g5}ators ( _% _,z;n _: >e ! 9teg}s
.2;r s* t _% #1 "k: r "k n _: & _% gcd
(r, n) .k #1 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #d4a4ae 4
  ,let u exam9e ! gr|p              #bag
_% _,z16 _:4 ,! numb}s _% #1 _:1
_% #3 _:1 _% #5 _:1 _% #7 _:1 _% #9 _:1
_% #11 _:1 _% #13 _:1 & _% #15 _: >e !
ele;ts ( _% _,z16 _: t >e relatively
prime to _% #16 _:4 ,ea* ( ~! ele;ts
g5}ates _% _,z16 _:4 ,= example1
_%
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

    ,sec;n #d4b ,multiplicative ,gr|p (
    ,complex ,numb}s
  ,! ~1complex ~1numb}s >e def9$ z
_% _,c .k .(a+bi3 a, b `e _,r.) _:
1 ": _% i~2" .k -#1 _:4 ,if _% z .k
a+bi _:1 !n .2a is ! ~1r1l ~1"p ( .2;z &
.2;b is ! ~1imag9>y ~1"p ( .2;z4
  ,to add two complex numb}s _% z .k
a+bi _: & _% w .k c+di _:1 we j add !
correspond+ r1l & imag9>y "ps3
_% z+w .k (a+bi)+(c+di) .k
(a+c)+(b+d)i _:
4 ,rememb}+ t _% i~2" .k -#1 _:1 we
multiply complex numb}s j l polynomials4
,! product ( .2;z & .2;w is         #bah
_% (a+bi)(c+di) .k ac+bdi~2"+adi+bci .k
(ac-bd)+(ad+bc)i _:
4
  ,e nonz}o complex numb} _% z .k
a+bi _: has a multiplicative 9v}se2 t
is1 "! exi/s a _% z~-#1" `e _,c~`# _: s*
t _% zz~-#1" .k z~-#1"z .k #1 _:4 ,if
_% z .k a+bi _:1 !n
_% z~-#1" .k ?a-bi/a~2"+b~2"# _:
4 ,! ~1complex ~13jugate  ( a complex
numb} _% z .k a+bi _: is def9$ to 2
_% "z<:} .k a-bi _:4 ,! ~1absolute
~1value or ~1modulus (  _% z .k a+bi _:
is _% |z| .k >a~2"+b~2"} _:4
7777777777777777777777777777777777777777
,example  #d4b4a 4
  ,let _% z .k #2+3i _: & _% w .k
#1-2i _:4 ,!n
_% z+w .k (#2+3i)+(1-2i) .k #3+i _:
&
_% zw .k (#2+3i)(1-2i) .k #8-i _:
4 ,al1
_%
4
                                    #bai
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
  ,image3 ,! complex plane ": !
horizontal axis is ! ;x-axis or r1l axis
& ! v}ticle axis is ! ;y-axis or imag9>y
axis4 ,! po9t z#a "7 #b "6 #c;i is 9 !
upp} "r quadrant1 ! po9t z#b "7 #a- #b;i
9 ! l{} "r quadrant1 & z#c "7 -#c "6
#b;i 9 ! upp} "r quadrant4
  ,,id3 cyclic-complex-rectangul>
,figure  #d4b4b 4  ,rectangul>
coord9ates ( a complex numb}
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,"! >e s"eal ways ( graphically
repres5t+ complex numb}s4 ,we c repres5t
a complex numb} _% z .k a+bi _: z an
ord}$ pair on ! _% xy _: plane ": .2a is
! .2;x "<or r1l"> coord9ate & .2;b is !
.2;y "<or imag9>y"> coord9ate4 ,? is
call$ ! ~1rectangul> or ~1,c>tesian
repres5ta;n4 ,! rectangul> repres5ta;ns
( _% z1 .k #2+3i _:1 _% z2 .k #1-2i _:1
& _% z3 .k -#3+2i _: >e depict$ 9   #bbj
,figure #d4b4b4
7777777777777777777777777777777777777777
  ,image3 ,! complex plane ": !
horizontal axis is ! ;x-axis or r1l axis
& ! v}ticle axis is ! ;y-axis or imag9>y
axis4  ,! po9t a "6 bi is 9 ! upp} "r
quadrant4  ,! po9t is al det}m9$ by a
ray t at an angle ( !ta c.t}clockwise f
! horizontal axis hav+ a l5g? ( ;r4
  ,,id3 cyclic-complex-pol>
,figure  #d4b4c 4  ,pol> coord9ates ( a
complex numb}
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,nonz}o complex numb}s c al 2
repres5t$ us+ ~1pol> ~1coord9ates~'4 ,to
specify any nonz}o po9t on ! plane1 x
su6ices to give an angle _% .? _: f !
positive .2;x axis 9 ! c.t}clockwise
direc;n & a 4t.e .2;r f ! orig91 z 9
,figure #d4b4c4 ,we c see t
_% z .k a+bi .k r(cos .?+isin .?) _:
4 ,h;e1
_% r .k |z| .k >a~2"+b~2"} _:
&                                   #bba
_%
4 ,we "s"ts a2reviate _% r(cos .?+isin
.?) _: z _% rcis.? _:4  ,to assure t !
repres5ta;n ( .2;z is  well-def9$1 we al
require t _% #0~~.*" "k: .? "k
#360~~.* _:4 ,if ! m1sure;t is 9
radians1 !n _% #0 "k: .? "k #2.p _:4
7777777777777777777777777777777777777777
,example  #d4b4d 4
  ,suppose t _% z .k #2cis#60~~.* _:4
,!n
_% a .k #2cos #60~~.*" .k #1 _:
&
_% b .k #2sin #60~~.*" .k >3} _:
4 ,h;e1 ! rectangul> repres5ta;n is _% z
.k #1+>3}i _:4
  ,3v}sely1 if we >e giv5 a rectangul>
repres5ta;n ( a complex numb}1 x is (t5
use;l to "k ! numb}'s pol> repres5ta;n4
,if _% z .k #3>2}-3>2}i _:1 !n
_% r .k >a~2"+b~2"} .k >36} .k #6 _:
&
_% .? .k arctan (?b/a#) .k arctan (-#1)
.k #315~~.* _:
1 s _% #3>2}-3>2}i .k               #bbb
#6cis#315~~.* _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! pol> repres5ta;n ( a complex numb}
makes x easy to f9d products & p{}s (
complex numb}s4 ,! pro( ( ! foll{+
proposi;n is /rai<t=w>d & is left z an
ex}cise4
7777777777777777777777777777777777777777
,proposi;n  #d4b4e 4
  ,let _% z .k rcis.? _: & _% w .k
scis.f _: 2 two nonz}o complex numb}s4
,!n
_% zw .k rscis(.?+.f) _:
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #d4b4f 4
  ,if _% z .k #3cis(.p_/3) _: & _% w .k
#2cis(.p_/6) _:1 !n _% zw .k
#6cis(.p_/2) .k #6i _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

                                    #bbc
7777777777777777777777777777777777777777
,!orem  #d4b4g 4  ,de,moivre4
  ,let _% z .k rcis.? _: 2 a nonz}o
complex numb}4 ,!n
_% `(rcis.?`)~n" .k r~n"cis(n.?) _:
= _% n .k #1, #2, ''' _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,we w use 9duc;n on .2;n4 ,= _% n .k
#1 _: ! !orem is trivial4 ,assume t !
!orem is true = all .2;k s* t _% #1 "k:
k "k: n _:4 ,!n
_%
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #d4b4h 4
  ,suppose t _% z .k #1+i _: & we wi% to
compute _% z~10 _:4 ,r ?an comput+
_% (#1+i)~10 _: directly1 x is m* easi}
to swit* to pol> coord9ates & calculate
_% z~10 _: us+ ,de,moivre's         #bbd
,!orem3
_%
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #d4b4a ,! ,circle ,gr|p
      & ! ,roots ( ,un;y
  ,! multiplicative gr|p ( ! complex
numb}s1 _% _,c~`# _:1 possesses "s
9t}e/+ subgr|ps4 ,":as _% _,q~`# _: &
_% _,r~`# _: h no 9t}e/+ subgr|ps (
f9ite ord}1 _% _,c~`# _: has _m4 ,we f/
3sid} ! ~1circle ~1gr|p~'1
_% _,t .k .(z `e _,c3 |z| .k #1.) _:
4 ,! foll{+ proposi;n is a direct result
( ,proposi;n #d4b4e4
7777777777777777777777777777777777777777
,proposi;n  #d4b4i 4
  ,! circle gr|p is a subgr|p (
_% _,c~`# _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,al? ! circle gr|p has 9f9ite ord}1 x
has _m 9t}e/+ f9ite subgr|ps4 ,suppose t
_% ,h .k .(#1, -#1, i, -i.) _:4     #bbe
,!n .2;,h is a subgr|p ( ! circle gr|p4
,al1 _% #1 _:1 _% -#1 _:1 .2i1 &
_% -i _: >e exactly ~? complex numb}s t
satisfy ! equa;n _% z~4" .k #1 _:4 ,!
complex numb}s satisfy+ ! equa;n _% z~n"
.k #1 _: >e call$ ! .2n~1? ~1roots ~1(
~1un;y~'4
7777777777777777777777777777777777777777
,!orem  #d4b4aj 4
  ,if _% z~n" .k #1 _:1 !n ! .2n? roots
( un;y >e
_% z .k cis(?2k.p/n#) _:
1 ": _% k .k #0, #1, ''' , n-1 _:4
,fur!rmore1 ! .2n? roots ( un;y =m a
cyclic subgr|p ( _% _,t _: ( ord} .2;n
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,by ,de,moivre's ,!orem1
_% z~n" .k cis(n?2k.p/n#) .k cis(#2k.p)
.k #1 _:
4 ,! .2;z's >e 4t9ct s9ce ! numb}s
_% #2k.p_/n _: >e all 4t9ct & >e grt}
?an or equal to #j b less ?an       #bbf
_% #2.p _:4 ,! fact t ~! >e all ( !
roots ( ! equa;n _% z~n" .k #1 _: foll{s
f f  1 : /ates t a polynomial ( degree
.2;n c h at mo/ .2;n roots4 ,we w l1ve !
pro( t ! .2n? roots ( un;y =m a cyclic
subgr|p ( _% _,t _: z an ex}cise4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,a g5}ator = ! gr|p ( ! .2n? roots (
un;y is call$ a ~1primitive .2n~1?
~1root ~1( ~1un;y~'4
7777777777777777777777777777777777777777
,example  #d4b4aa 4
  ,! #hth roots ( un;y c 2 repres5t$ z
ei<t equally spac$ po9ts on ! unit
circle "<,figure #d4b4ab">4 ,! primitive
#hth roots ( un;y >e
_%
4
7777777777777777777777777777777777777777
  ,image3 ,! #h roots ( un;y >e spac$
ev5ly >.d ! unit circle 2g9n+ ) #a on !
positive horizontal axis & foll{$ by
omega1 i1 ! cube ( omega1 -#a1 omega to
! fif? p{}1 -i1 & omega to ! sev5?  #bbg
p{}4
  ,,id3 cyclic-roots-un;y
,figure  #d4b4ab 4  #hth roots ( un;y
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

    ,sec;n #d4c ,! ,me?od ( ,rep1t$
    ,squ>es
  ,comput+ l>ge p{}s c 2 v "t-3sum+4 ,j
z any"o c compute _% #2~2 _: or
_% #2~8 _:1 "ey"o "ks h{ to compute
_% #2~2~~1,000,000 _:
4 ,h{"e1 s* numb}s >e s l>ge t we d n
want to attempt ! calcula;ns2 moreov}1
pa/ a c}ta9 po9t ! computa;ns wd n 2
f1sible ev5 if we _h e comput} 9 ! _w at
|r 4posal4 ,ev5 writ+ d{n ! decimal
repres5ta;n ( a v l>ge numb} may n 2
r1sonable4 ,x cd 2 ?|s&s or ev5 millions
( digits l;g4 ,h{"e1 if we cd compute
"s?+ l
_% #2~37,398,332"(mod 46,389) _:
1 we cd v easily write ! result d{n s9ce
x wd 2 a numb} 2t _% #0 _: &        #bbh
_% #46,388 _:4 ,if we want to compute
p{}s modulo .2;n qkly & e6ici5tly1 we w
h to 2 cl"e4  #a
,! results 9 ? sec;n >e ne$$ only 9
  ,! f/ ?+ to notice is t any numb} .2a
c 2 writt5 z ! sum ( 4t9ct p{}s (
_% #2 _:2 t is1 we c write
_% a .k #2~k1"+2~k2"+'''+2~k~;n _:
1 ": _% k1 "k k2 "k ''' "k k;n _:4 ,? is
j ! b9>y repres5ta;n ( .2a4 ,= example1
! b9>y repres5ta;n ( #eg is #aaajja1
s9ce we c write _% #57 .k
#2~0"+2~3"+2~4"+2~5 _:4
  ,! laws ( expon5ts / "w 9 _% _,z;n _:2
t is1 if _% b _l a~x"(mod n) _: & _% c
_l a~y"(mod n) _:1 !n _% bc _l
a~x+y"(mod n) _:4 ,we c compute
_% a~2~~k"(mod n) _: 9 .2;k
multiplica;ns by comput+
_%
4 ,ea* /ep 9volves squ>+ ! answ} obta9$
9 ! previ|s /ep1 divid+ by .2;n1 & tak+
! rema9d}4
7777777777777777777777777777777777777777
,example  #d4c4a 4                  #bbi
  ,we w compute _% #271~321"(mod
481) _:4 ,notice t
_% #321 .k #2~0"+2~6"+2~8"2 _:
h;e1 comput+ _% #271~321"(mod 481) _: is
! same z comput+
_% #271~2~~0~+2~~6~+2~~8" _l
#271~2~~0"*271~2~~6"*271~2~~8"(mod
481) _:
4 ,s x w su6ice to compute
_% #271~2~~i"(mod 481) _: ": _% i .k #0,
#6, #8 _:4 ,x is v easy to see t
_% #271~2~~1" .k #73,441 _l #329(mod
481) _:
4 ,we c squ>e ? result to obta9 a value
= _% #271~2~~2"(mod 481) _:3
_%
4 ,we >e us+ ! fact t _% (a~2~~n~")~2"
_l a~2*2~~n" _l a~2~~n+1"(mod n) _:4
,3t9u+1 we c calculate
_% #271~2~~6" _l #419(mod 481) _:
&
_% #271~2~~8" _l #16(mod 481) _:
4 ,"!=e1
_%
4                                   #bcj
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! me?od ( rep1t$ squ>es w prove to 2
a v use;l tool :5 we explore ,,rsa
cryptography 9  4 ,to 5code & decode
messages 9 a r1sonable mann} "u ? s*eme1
x is nec to 2 able to qkly compute l>ge
p{}s ( 9teg}s mod .2;n4
7777777777777777777777777777777777777777
,sage4
  ,sage support = cyclic gr|ps is a ll
spotty ",- b we c / make e6ective use (
,sage & p}h ? situa;n cd *ange soon4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

,r1d+ ,"qs #d4d ,r1d+ ,"qs #a 4
  ,:at is ! ord} ( ! ele;t _% #3 _: 9
_% ,u(#20) _:;8
#b 4
  ,:at is ! ord} ( ! ele;t _% #5 _: 9
_% ,u(#23) _:;8
#c 4
  ,f9d ?ree g5}ators ( _% _,z8 _:4
#d 4
  ,f9d ?ree g5}ators ( !            #bca
_% #5~th _: roots ( un;y4
#e 4
  ,%{ h{ to compute _% #15~40"(mod
23) _: e6ici5tly by h&4 ,*eck yr answ} )
,sage4
,ex}cises #d4e ,ex}cises #a 4
  ,prove or 4prove ea* ( ! foll{+
/ate;ts4

a4
    ,all ( ! g5}ators ( _% _,z60 _: >e
  prime4
;b4
    _% ,u(#8) _: is cyclic4
;c4
    _% _,q _: is cyclic4
;d4
    ,if e prop} subgr|p ( a gr|p .2;,g
  is cyclic1 !n .2;,g is a cyclic gr|p4
;e4
    ,a gr|p ) a f9ite numb} ( subgr|ps
  is f9ite4

,h9t3
  "<a"> ,false2 "<;c"> false2       #bcb
"<;e"> true4
#b 4
  ,f9d ! ord} ( ea* ( ! foll{+ ele;ts4

a4
    _% #5 `e _,z12 _:
;b4
    _% >3} `e _,r _:
;c4
    _% >3} `e _,r~`# _:
;d4
    _% -i `e _,c~`# _:
;e4
    _% #72 `e _,z240 _:
;f4
    _% #312 `e _,z471 _:

,h9t3
  "<a"> _% #12 _:2 "<;c"> 9f9ite2 "<;e">
_% #10 _:4
#c 4
  ,li/ all ( ! ele;ts 9 ea* ( ! foll{+
subgr|ps4

a4                                  #bcc
    ,! subgr|p ( _% _,z _: g5}at$ by
  _% #7 _:
;b4
    ,! subgr|p ( _% _,z24 _: g5}at$ by
  _% #15 _:
;c4
    ,all subgr|ps ( _% _,z12 _:
;d4
    ,all subgr|ps ( _% _,z60 _:
;e4
    ,all subgr|ps ( _% _,z13 _:
;f4
    ,all subgr|ps ( _% _,z48 _:
;g4
    ,! subgr|p g5}at$ by #c 9
  _% ,u(#20) _:
;h4
    ,! subgr|p g5}at$ by #e 9
  _% ,u(#18) _:
i4
    ,! subgr|p ( _% _,r~`# _: g5}at$ by
  _% #7 _:
;j4
    ,! subgr|p ( _% _,c~`# _: g5}at$ by
  .2i ": _% i~2" .k -#1 _:          #bcd
;k4
    ,! subgr|p ( _% _,c~`# _: g5}at$ by
  _% #2i _:
;l4
    ,! subgr|p ( _% _,c~`# _: g5}at$ by
  _% (#1+i)_/>2} _:
;m4
    ,! subgr|p ( _% _,c~`# _: g5}at$ by
  _% (#1+>3}i)_/2 _:

,h9t3
  "<a"> _% #7_,z .k .( ''' , -#7, #0,
#7, #14, '''.) _:2 "<;b"> _% .(#0, #3,
#6, #9, #12, #15, #18, #21.) _:2 "<;c">
_% .(#0.) _:1 _% .(#0, #6.) _:1 _% .(#0,
#4, #8.) _:1 _% .(#0, #3, #6, #9.) _:1
_% .(#0, #2, #4, #6, #8, #10.) _:2
"<;g"> _% .(#1, #3, #7, #9.) _:2 "<;j">
_% .(#1, -#1, i, -i.) _:4
#d 4
  ,f9d ! subgr|ps ( _% ,g,l2(_,r) _:
g5}at$ by ea* ( ! foll{+ matrices4

a4
    _% ,(#0 1,) ,(-#1 0,) _:        #bce
;b4
    _% ,(#0 1_/3,) ,(3 0,) _:
;c4
    _% ,(#1 -#1,) ,(1 0,) _:
;d4
    _% ,(#1 -#1,) ,(0 1,) _:
;e4
    _% ,(#1 -#1,) ,(-#1 0,) _:
;f4
    _% ,(>3}_/2 1_/2,) ,(-#1_/2
  >3}_/2,) _:

,h9t3
  "<a">
_% ,(#1 0,) ,(0 1,), ,(-#1 0,) ,(0
-#1,), ,(#0 -#1,) ,(1 0,), ,(#0 1,)
,(-#1 0,) _:
4
  "<;c">
_% ,(#1 0,) ,(0 1,), ,(#1 -#1,) ,(1 0,),
,(-#1 1,) ,(-#1 0,), ,(#0 1,) ,(-#1 1,),
,(#0 -#1,) ,(1 -#1,), ,(-#1 0,) ,(0
-#1,) _:
4
#e 4                                #bcf
  ,f9d ! ord} ( e ele;t 9 _% _,z18 _:4
#f 4
  ,f9d ! ord} ( e ele;t 9 ! symmetry
gr|p ( ! squ>e1 _% ,d4 _:4
#g 4
  ,:at >e all ( ! cyclic subgr|ps ( !
quat}nion gr|p1 _% ,q8 _:;8
#h 4
  ,li/ all ( ! cyclic subgr|ps (
_% ,u(#30) _:4
#i 4
  ,li/ e g5}ator ( ea* subgr|p ( ord} #h
9 _% _,z32 _:4
#aj 4
  ,f9d all ele;ts ( f9ite ord} 9 ea* ( !
foll{+ gr|ps4 ,"h ! 8_% `# _:0 9dicates
! set ) z}o remov$4

a4
    _% _,z _:
;b4
    _% _,q~`# _:
;c4
    _% _,r~`# _:
                                    #bcg
,h9t3
  "<a"> _% #0 _:2 "<;b"> _% #1, -#1 _:4
#aa 4
  ,if _% a~24" .k e _: 9 a gr|p .2;,g1
:at >e ! possible ord}s ( .2a8
,h9t3
  _% #1, #2, #3, #4, #6, #8, #12,
#24 _:4
#ab 4
  ,f9d a cyclic gr|p ) exactly "o
g5}ator4 ,c y f9d cyclic gr|ps ) exactly
two g5}ators8 ,f|r g5}ators8 ,h{ ab .2;n
g5}ators8
#ac 4
  ,= _% n "k: #20 _:1 : gr|ps
_% ,u(n) _: >e cyclic8 ,make a 3jecture
z to :at is true 9 g5}al4 ,c y prove yr
3jecture8
#ad 4
  ,let
_% ,a .k ,(#0 1,) ,(-#1 0,)and,b .k ,(#0
-#1,) ,(1 -#1,) _:
2 ele;ts 9 _% ,g,l2(_,r) _:4 ,%{ t .2,a
& .2;,b h f9ite ord}s b _% ,a,b _: does
n4                                  #bch
#ae 4
  ,evaluate ea* ( ! foll{+4

a4
    _% (#3-2i)+(5i-6) _:
;b4
    _% (#4-5i)-"(4i-4)<:} _:
;c4
    _% (#5-4i)(7+2i) _:
;d4
    _% (#9-i)"(9-i)<:} _:
;e4
    _% i~45 _:
;f4
    _% (#1+i)+"(1+i)<:} _:

,h9t3
  "<a"> _% -#3+3i _:2 "<;c">
_% #43-18i _:2 "<;e"> .2i
#af 4
  ,3v}t ! foll{+ complex numb}s to ! =m
_% a+bi _:4

a4
    _% #2cis(.p_/6) _:              #bci
;b4
    _% #5cis(#9.p_/4) _:
;c4
    _% #3cis(.p) _:
;d4
    _% cis(#7.p_/4)_/2 _:

,h9t3
  "<a"> _% >3}+i _:2 "<;c"> _% -#3 _:4
#ag 4
  ,*ange ! foll{+ complex numb}s to pol>
repres5ta;n4

a4
    _% #1-i _:
;b4
    _% -#5 _:
;c4
    _% #2+2i _:
;d4
    _% >3}+i _:
;e4
    _% -#3i _:
;f4
    _% #2i+2>3} _:                  #bdj
,h9t3
  "<a"> _% >2}cis(#7.p_/4) _:2 "<;c">
_% #2>2}cis(.p_/4) _:2 "<;e">
_% #3cis(#3.p_/2) _:4
#ah 4
  ,calculate ea* ( ! foll{+ expres.ns4

a4
    _% (#1+i)~-#1 _:
;b4
    _% (#1-i)~6 _:
;c4
    _% (>3}+i)~5 _:
;d4
    _% (-i)~10 _:
;e4
    _% ((#1-i)_/2)~4 _:
;f4
    _% (->2}->2}i)~12 _:
;g4
    _% (-#2+2i)~-#5 _:

,h9t3
  "<a"> _% (#1-i)_/2 _:2 "<;c">
_% #16(i->3}) _:2 "<;e">            #bda
_% -#1_/4 _:4
#ai 4
  ,prove ea* ( ! foll{+ /ate;ts4

a4
    _% |z| .k |"z<:}| _:
;b4
    _% z"z<:} .k |z|~2 _:
;c4
    _% z~-#1" .k "z<:}_/|z|~2 _:
;d4
    _% |z+w| "k: |z|+|w| _:
;e4
    _% |z-w| .1: ||z|-|w|| _:
;f4
    _% |zw| .k |z||w| _:

#bj 4
  ,li/ & graph ! #fth roots ( un;y4 ,:at
>e ! g5}ators ( ? gr|p8 ,:at >e !
primitive #fth roots ( un;y8
#ba 4
  ,li/ & graph ! #eth roots ( un;y4 ,:at
>e ! g5}ators ( ? gr|p8 ,:at >e !
primitive #eth roots ( un;y8        #bdb
#bb 4
  ,calculate ea* ( ! foll{+4

a4
    _% #292~3171"(mod 582) _:
;b4
    _% #2557~341"(mod 5681) _:
;c4
    _% #2071~9521"(mod 4724) _:
;d4
    _% #971~321"(mod 765) _:

,h9t3
  "<a"> _% #292 _:2 "<;c"> _% #1523 _:4
#bc 4
  ,let _% a, b `e ,g _:4 ,prove ! foll{+
/ate;ts4

a4
    ,! ord} ( .2a is ! same z ! ord} (
  _% a~-#1 _:4
;b4
    ,= all _% g `e ,g _:1 _% |a| .k
  |g~-#1"ag| _:4
;c4                                 #bdc
    ,! ord} ( _% ab _: is ! same z !
  ord} ( _% ba _:4

#bd 4
  ,let .2;p & .2;q 2 4t9ct primes4 ,h{
_m g5}ators does _% _,z;pq _: h8
#be 4
  ,let .2;p 2 prime & .2;r 2 a positive
9teg}4 ,h{ _m g5}ators does
_% _,z;p;~r _: h8
#bf 4
  ,prove t _% _,z;p _: has no nontrivial
subgr|ps if .2;p is prime4
#bg 4
  ,if .2;g & .2;h h ord}s _% #15 _: &
_% #16 _: respectively 9 a gr|p .2;,g1
:at is ! ord} ( _% ..(g..).%..(h..) _:;8
,h9t3
  _% |..(g..).%..(h..)| .k #1 _:4
#bh 4
  ,let .2a 2 an ele;t 9 a gr|p .2;,g4
,:at is a g5}ator = ! subgr|p
_% ..(a~m"..).%..(a~n"..) _:;8
#bi 4
  ,prove t _% _,z;n _: has an ev5   #bdd
numb} ( g5}ators = _% n .1 #2 _:4
#cj 4
  ,suppose t .2;,g is a gr|p & let .2a1
_% b `e ,g _:4 ,prove t if _% |a| .k
m _: & _% |b| .k n _: ) _% gcd (m, n) .k
#1 _:1 !n _% ..(a..).%..(b..) .k
.(e.) _:4
#ca 4
  ,let .2;,g 2 an abelian gr|p4 ,%{ t !
ele;ts ( f9ite ord} 9 .2;,g =m a
subgr|p4 ,? subgr|p is call$ ! ~1tor.n
~1subgr|p ( .2;,g4
,h9t3
  ,! id5t;y ele;t 9 any gr|p has f9ite
ord}4 ,let _% g, h `e ,g _: h ord}s .2;m
& .2;n1 respectively4 ,s9ce
_% (g~-#1")~m" .k e _: & _% (gh)~mn" .k
e _:1 ! ele;ts ( f9ite ord} 9 .2;,g =m a
subgr|p ( .2;,g4
#cb 4
  ,let .2;,g 2 a f9ite cyclic gr|p (
ord} .2;n g5}at$ by .2;x4 ,%{ t if _% y
.k x~k _: ": _% gcd (k, n) .k #1 _:1 !n
.2;y m/ 2 a g5}ator ( .2;,g4
#cc 4                               #bde
  ,if .2;,g is an abelian gr|p t 3ta9s a
pair ( cyclic subgr|ps ( ord} _% #2 _:1
%{ t .2;,g m/ 3ta9 a subgr|p ( ord}
_% #4 _:4 ,does ? subgr|p h to 2 cyclic8
#cd 4
  ,let .2;,g 2 an abelian gr|p ( ord}
_% pq _: ": _% gcd (p, q) .k #1 _:4 ,if
.2;,g 3ta9s ele;ts .2a & .2;b ( ord}
.2;p & .2;q respectively1 !n %{ t .2;,g
is cyclic4
#ce 4
  ,prove t ! subgr|ps ( _% _,z _: >e
exactly _% n_,z _: = _% n .k #0, #1, #2,
''' _:4
#cf 4
  ,prove t ! g5}ators ( _% _,z;n _: >e !
9teg}s .2;r s* t _% #1 "k: r "k n _: &
_% gcd (r, n) .k #1 _:4
#cg 4
  ,prove t if .2;,g has no prop}
nontrivial subgr|ps1 !n .2;,g is a
cyclic gr|p4
,h9t3
  ,if .2;g is an ele;t 4t9ct f ! id5t;y
9 .2;,g1 .2;g m/ g5}ate .2;,g2      #bdf
o!rwise1 _% ..(g..) _: is a nontrivial
prop} subgr|p ( .2;,g4
#ch 4
  ,prove t ! ord} ( an ele;t 9 a cyclic
gr|p .2;,g m/ divide ! ord} ( ! gr|p4
#ci 4
  ,prove t if .2;,g is a cyclic gr|p (
ord} .2;m & _% d|m _:1 !n .2;,g m/ h a
subgr|p ( ord} .2;d4
#dj 4
  ,= :at 9teg}s .2;n is _% -#1 _: an
.2n? root ( un;y8
#da 4
  ,if _% z .k r(cos .?+isin .?) _: &
_% w .k s(cos .f+isin .f) _: >e two
nonz}o complex numb}s1 %{ t
_% zw .k rs`(cos (.?+.f)+isin
(.?+.f)`) _:
4
#db 4
  ,prove t ! circle gr|p is a subgr|p (
_% _,c~`# _:4
#dc 4
  ,prove t ! .2n? roots ( un;y =m a
cyclic subgr|p ( _% _,t _: ( ord}   #bdg
.2;n4
#dd 4
  ,let _% .a `e _,t _:4 ,prove t
_% .a~m" .k #1 _: & _% .a~n" .k #1 _: if
& only if _% .a~d" .k #1 _: = _% d .k
gcd (m, n) _:4
#de 4
  ,let _% z `e _,c~`# _:4 ,if _% |z| /.k
#1 _:1 prove t ! ord} ( .2;z is 9f9ite4
#df 4
  ,let _% z .k cos .?+isin .? _: 2 9
_% _,t _: ": _% .? `e _,q _:4 ,prove t !
ord} ( .2;z is 9f9ite4
,ex}cises #d4f ,programm+ ,ex}cises #a 4
  ,write a comput} program t w write any
decimal numb} z ! sum ( 4t9ct p{}s (
_% #2 _:4 ,:at is ! l>ge/ 9teg} t yr
program w h&le8
#b 4
  ,write a comput} program to calculate
_% a~x"(mod n) _: by ! me?od ( rep1t$
squ>es4 ,:at >e ! l>ge/ values ( .2;n &
.2;x t yr program w a3ept8
,ref};es #d4g ,ref};es & ,su7e/$ ,r1d+s
.<#a.>   ,koblitz1 ;,n4 ,a ,c|rse   #bdh
9 ,numb} ,!ory & ,cryptography4 #bnd $4
,spr+}1 ,new ,york1 #aiid4 .<#b.>
,pom}.e1 ;,c4 8,cryptology &
,computa;nal ,numb} ,!ory",-,an
,9troduc;n10 9 ,cryptology &
,computa;nal ,numb} ,!ory1 ,pom}.e1
;,c41 $4 ,proce$+s ( ,symposia 9 ,appli$
,ma!matics1 vol4 #db1 ,am}ican
,ma!matical ,society1 ,provid;e1 ,,ri1
#aiij4 ,? book gives an excell5t a3.t (
h{ ! me?od ( rep1t$ squ>es is us$ 9
cryptography4

    ,sec;n #d4h ,sage
  ,cyclic gr|ps >e v important1 s x is
no surprise t !y appe> 9 _m di6}5t =ms 9
,sage4 ,ea* is sli<tly di6}5t1 & no "o
imple;ta;n is id1l = an 9troduc;n1 b tgr
!y c illu/rate mo/ ( ! important id1s4
,"h is a guide to ! v>i|s ways to
3/ruct1 & /udy1 a cyclic gr|p 9 ,sage4

      ,subsec;n #d4h4a ,9f9ite ,cyclic
      ,gr|ps
  ,9 ,sage1 ! 9teg}s _% _,z _: >e   #bdi
3/ruct$ ) ,,zz4 ,to build ! 9f9ite
cyclic gr|p s* z _% #3_,z _: f
,example #d4a4a1 simply use #c"9,,zz4 ,z
an 9f9ite set1 "! is n a :ole lot y c d
) ?4 ,y c te/ if 9teg}s >e 9 ? set1 or
n4 ,y c al recall ! g5}ator ) ! 4g5"<">
comm&4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g = 3*_>zz -12 in _g
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
37 in _g
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage                               #bej
  ,9put3
_g.gen()
  ,|tput3
_3
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #d4h4b ,additive ,cyclic
      ,gr|ps
  ,! additive cyclic gr|p _% _,z;n _: c
2 built z a special case ( a m g5}al
,sage 3/ruc;n4 ,f/ we build _% _,z14 _:
& capture xs g5}ator4 ,"?|t1 pay close
att5;n to ! use ( p>5!ses & squ>e
brackets = :5 y exp}i;t on yr {n4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g = _additive_abelian_group([14])
_g.order()
  ,|tput3
14
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage                               #bea
  ,9put3
_g.list()
  ,|tput3
[(0), (1), (2), (3), (4), (5), (6), (7),
 (8), (9), (10), (11), (12), (13)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
a = _g.gen(0) a
  ,|tput3
(1)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,y c compute 9 ? gr|p1 by us+ !
g5}ator1 or by us+ new ele;ts =m$ by
co}c+ 9teg}s 9to ! gr|p1 or by tak+ !
result ( op}a;ns on o!r ele;ts4 ,& we c
compute ! ord} ( ele;ts 9 ? gr|p4
,notice t we c p}=m rep1t$ addi;ns ) !
%ortcut ( tak+ 9teg} multiples ( an
ele;t4
7777777777777777777777777777777777777777
,sage                               #beb
  ,9put3
a + a
  ,|tput3
(2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
a + a + a + a
  ,|tput3
(4)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
4*a
  ,|tput3
(4)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3                            #bec
37*a
  ,|tput3
(9)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we c cr1te1 & !n compute )1 new
ele;ts ( ! gr|p by co}c+ an 9teg} "<9 a
li/ ( l5g? _% #1 _:"> 9to ! gr|p4 ,y may
get a ,depreca;n,w>n+ ! f/ "t y use ?
syntax if y >e us+ an old v}.n ( ,sage4
,! my/}i|s w>n+ c 2 safely ignor$4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g([2])
  ,|tput3
(2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b = _g([2]); b
  ,|tput3
(2)                                 #bed
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b + b
  ,|tput3
(4)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
2*b == 4*a
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
7*b
  ,|tput3
(0)
                                    #bee
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
c = a _- 6*b; c
  ,|tput3
(3)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
c + c + c + c
  ,|tput3
(12)
                                    #bef
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
c.order()
  ,|tput3
14
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,x is possible to cr1te cyclic
subgr|ps1 f an ele;t designat$ to 2 !
new g5}ator4 ,un=tunately1 to d ?
requires ! 4submodule"<"> me?od "<: %d 2
re"nd 9 ,sage">4
7777777777777777777777777777777777777777
,sage
  ,9put3
_h = _g.submodule([b]); _h
  ,|tput3
_additive abelian group isomorphic to
_z/7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

                                    #beg
7777777777777777777777777777777777777777
,sage
  ,9put3
_h.list()
  ,|tput3
[(0), (2), (4), (6), (8), (10), (12)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_h.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
e = _h.gen(0); e
  ,|tput3
(2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

                                    #beh
7777777777777777777777777777777777777777
,sage
  ,9put3
3*e
  ,|tput3
(6)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
e.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! cyclic subgr|p ;,h j cr1t$ has m
?an "o g5}ator4 ,we c te/ ? by build+ a
new subgr|p & comp>+ ! two subgr|ps4
7777777777777777777777777777777777777777
,sage
  ,9put3
f = 12*a; f
  ,|tput3
(12)                                #bei
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
f.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_k = _g.submodule([f]); _k
  ,|tput3
_additive abelian group isomorphic to
_z/7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_k.order()
  ,|tput3
_7                                  #bfj
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_k.list()
  ,|tput3
[(0), (2), (4), (6), (8), (10), (12)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_k.gen(0)
  ,|tput3
(2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_h == _k
  ,|tput3
_true
                                    #bfa
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,c}ta9ly ! li/ ( ele;ts1 & ! common
g5}ator ( "<#b"> l1d u to 2live t ;,h &
;,k >e ! same1 b ! comp>ison 9 ! la/ l9e
l1ves no d|bt4
  ,results 9 ? sec;n1 especially
,!orem #d4a4ac & ,coroll>y #d4a4ad1 c 2
9ve/igat$ by cr1t+ g5}ators ( subgr|ps f
a g5}ator ( "o additive cyclic gr|p1
cr1t+ ! subgr|ps1 & comput+ ! ord}s (
bo? ele;ts & ord}s ( gr|ps4

      ,subsec;n #d4h4c ,ab/ract
      ,multiplicative ,cyclic ,gr|ps
  ,we c cr1te an ab/ract cyclic gr|p 9 !
/yle ( ,!orem #d4a4c1 ,!orem #d4a4i1 &
,!orem #d4a4aj4 ,9 ! syntax 2l a is a "n
= ! g5}ator1 & #ad is ! ord} ( ! ele;t4
,notice t ! nota;n is n{ multiplicative1
s we multiply ele;ts1 & rep1t$ products
c 2 writt5 z p{}s4
7777777777777777777777777777777777777777
,sage
  ,9put3                            #bfb
_g.<a> = _abelian_group([14]) _g.order()
  ,|tput3
14
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_g.list()
  ,|tput3
(1, a, a^2, a^3, a^4, a^5, a^6, a^7,
a^8, a^9, a^10, a^11, a^12, a^13)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
a.order()
  ,|tput3
14
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,computa;ns 9 ! gr|p >e simil> to 2f1
only ) di6}5t nota;n4 ,n{ products1 )
rep1t$ products writt5 z            #bfc
expon5tia;n4
7777777777777777777777777777777777777777
,sage
  ,9put3
b = a^2 b.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b*b*b
  ,|tput3
a^6
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
c = a^7 c.order()
  ,|tput3
_2
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #bfd
7777777777777777777777777777777777777777
,sage
  ,9put3
c^2
  ,|tput3
_1
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b*c
  ,|tput3
a^9
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b^37*c^42
  ,|tput3
a^4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,subgr|ps c 2 =m$ ) a             #bfe
4subgr|p"<"> comm&4 ,b d n try to li/ !
3t5ts ( a subgr|p1 x'll look /rangely
unfamili>4 ,al1 comp>ison ( subgr|ps is
n imple;t$4
7777777777777777777777777777777777777777
,sage
  ,9put3
_h = _g.subgroup([a^2]) _h.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_k = _g.subgroup([a^12]) _k.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_l = _g.subgroup([a^4]) _h == _l
  ,|tput3                           #bff
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,"o advantage ( ? imple;ta;n is !
possibil;y to cr1te all possible
subgr|ps4 ,"h we cr1te ! li/ ( subgr|ps1
extract "o 9 "picul> "<! ?ird">1 & *eck
xs ord}4
7777777777777777777777777777777777777777
,sage
  ,9put3
allsg = _g.subgroups(); allsg
  ,|tput3
[_multiplicative _abelian subgroup
isomorphic to _c2 x _c7 generated by
_[a_],  _multiplicative _abelian
subgroup isomorphic to _c7 generated by
_[a^2_],  _multiplicative _abelian
subgroup isomorphic to _c2 generated by
_[a^7_],  _trivial _abelian subgroup]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3                            #bfg
sub = allsg[2] sub.order()
  ,|tput3
_2
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #d4h4d ,cyclic ,p}muta;n
      ,gr|ps
  ,we w le>n m ab p}muta;n gr|ps 9 !
next *apt}4 ,b we w m5;n "h t x is easy
to cr1te cyclic gr|ps z p}muta;n gr|ps1
& a v>iety ( me?ods >e available = "w+ )
!m1 ev5 if ! actual ele;ts get a bit
cumb}"s to "w )4 ,z 2f1 notice t !
nota;n & syntax is multiplicative4
7777777777777777777777777777777777777777
,sage
  ,9put3
_>g=c_<yclic_permutation_group(14) a =
_g.gen(0); a
  ,|tput3
(1,2,3,4,5,6,7,8,9,10,11,12,13,14)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage                               #bfh
  ,9put3
b = a^2 b = a^2; b
  ,|tput3
(1,3,5,7,9,11,13)(2,4,6,8,10,12,14)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
a*a*b*b*b
  ,|tput3
(1,9,3,11,5,13,7)(2,10,4,12,6,14,8)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3                            #bfi
c = a^37*b^26; c
  ,|tput3
(1,6,11,2,7,12,3,8,13,4,9,14,5,10)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
c.order()
  ,|tput3
14
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we c cr1te subgr|ps1 *eck _! ord}s1 &
li/ _! ele;ts4
7777777777777777777777777777777777777777
,sage
  ,9put3
_h = _g.subgroup([a^2]) _h.order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage                               #bgj
  ,9put3
_h.gen(0)
  ,|tput3
(1,3,5,7,9,11,13)(2,4,6,8,10,12,14)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_h.list()
  ,|tput3
[(),
(1,3,5,7,9,11,13)(2,4,6,8,10,12,14),
(1,5,9,13,3,7,11)(2,6,10,14,4,8,12),
(1,7,13,5,11,3,9)(2,8,14,6,12,4,10),
(1,9,3,11,5,13,7)(2,10,4,12,6,14,8),
(1,11,7,3,13,9,5)(2,12,8,4,14,10,6),
(1,13,11,9,7,5,3)(2,14,12,10,8,6,4)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,x cd help to visualize ? gr|p1 & !
subgr|p1 z rota;ns ( a regul>
_% #12 _:-gon ) ! v}tices label$ ) !
9teg}s _% #1 _: "? _% #12 _:4 ,? is n !
full gr|p ( symmetries1 s9ce x      #bga
does n 9clude reflec;ns1 j ! _% #12 _:
rota;ns4

      ,subsec;n #d4h4e ,cayley ,tables
  ,z gr|ps1 ea* ( ! examples abv "<gr|ps
& subgr|ps"> h ,cayley tables imple;t$4
,s9ce ! gr|ps >e cyclic1 & _! subgr|ps
>e "!=e cyclic1 ! ,cayley tables %d h a
simil> 8cyclic0 patt}n4 ,note t ! lrs
us$ 9 ! default table >e g5}ic1 & >e n
relat$ to ! lrs us$ abv = specific
ele;ts ",- !y j mat* up ) ! gr|p ele;ts
9 ! ord} giv5 by 4li/"<">4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g.<a> = _abelian_group([14])
_g.cayley__table()
  ,|tput3
*  a b c d e f g h i j k l m n
+---------------------------- a_\ a b c
d e f g h i j k l m n b_\ b c d e f g h
i j k l m n a c_\ c d e f g h i j k l m
n a b d_\ d e f g h i j k l m n a b c
e_\ e f g h i j k l m n a b c d     #bgb
f_\ f g h i j k l m n a b c d e g_\ g h
i j k l m n a b c d e f h_\ h i j k l m
n a b c d e f g i_\ i j k l m n a b c d
e f g h j_\ j k l m n a b c d e f g h i
k_\ k l m n a b c d e f g h i j l_\ l m
n a b c d e f g h i j k m_\ m n a b c d
e f g h i j k l n_\ n a b c d e f g h i
j k l m
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,if ! r1l "ns ( ! ele;ts >e n too
complicat$1 ! table cd 2 m 9=mative us+
~! "ns4
7777777777777777777777777777777777777777
,sage
  ,9put3
_k.<b> = _abelian_group([10])
_k.cayley__table(names='elements')
  ,|tput3
*    _1   b b^2 b^3 b^4 b^5 b^6 b^7 b^8
b^9
+---------------------------------------
--   1_\   _1   b b^2 b^3 b^4 b^5 b^6
b^7 b^8 b^9   b_\   b b^2 b^3 b^4 b^5
b^6 b^7 b^8 b^9   _1 b^2_\ b^2 b^3  #bgc
b^4 b^5 b^6 b^7 b^8 b^9   _1   b b^3_\
b^3 b^4 b^5 b^6 b^7 b^8 b^9   _1   b b^2
b^4_\ b^4 b^5 b^6 b^7 b^8 b^9   _1   b
b^2 b^3 b^5_\ b^5 b^6 b^7 b^8 b^9   _1
b b^2 b^3 b^4 b^6_\ b^6 b^7 b^8 b^9   _1
  b b^2 b^3 b^4 b^5 b^7_\ b^7 b^8 b^9
_1   b b^2 b^3 b^4 b^5 b^6 b^8_\ b^8 b^9
  _1   b b^2 b^3 b^4 b^5 b^6 b^7 b^9_\
b^9   _1   b b^2 b^3 b^4 b^5 b^6 b^7 b^8
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #d4h4f ,complex ,roots (
      ,un;y
  ,! f9ite cyclic subgr|ps ( _% _,t _:1
g5}at$ by a primitive .2n? root ( un;y
>e imple;t$ z a m g5}al 3/ruc;n 9 ,sage1
"kn z a cyclotomic field4 ,if y 3c5trate
on j ! multiplica;n ( p{}s ( a g5}ator
"<& ignore ! 9f9itely _m o!r ele;ts"> !n
? is a f9ite cyclic gr|p4 ,s9ce ? is n
imple;t$ directly 9 ,sage z a gr|p1 .1p}
.1se.'1 x is a bit h>d} to 3/ruct ?+s l
subgr|ps1 b x is an excell5t ex}cise to
try4 ,x is a nice example s9ce ! complex
numb}s >e a 3crete & famili>        #bgd
3/ruc;n4 ,"h >e a few sample calcula;ns
to provide y ) "s exploratory tools4
,see ! notes foll{+ ! computa;ns4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g = _cyclotomic_field(14) w =
_g.gen(0); w
  ,|tput3
zeta14
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
wc = _>cdf(_<w) wc.abs()
  ,|tput3
1.0
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
wc.arg()/_n(2*pi/14)
  ,|tput3                           #bge
1.0
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
b = w^2 b.multiplicative__order()
  ,|tput3
_7
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
bc = _>cdf(_<b); bc
  ,|tput3
0.62348980185... + 0.781831482468...*_i
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
bc.abs()
  ,|tput3
1.0                                 #bgf
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
bc.arg()/_n(2*pi/14)
  ,|tput3
2.0
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sg = [b^i for i in range(7)]; sg
  ,|tput3
[1, zeta14^2, zeta14^4, zeta14^5 _-
zeta14^4 + zeta14^3 _- zeta14^2 + zeta14
_- 1, -zeta14, -zeta14^3, -zeta14^5]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
c = sg[3]; d = sg[5] c*d
  ,|tput3                           #bgg
zeta14^2
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
c = sg[3]; d = sg[6] c*d in sg
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
c*d == sg[2]
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sg[5]*sg[6] == sg[4]
  ,|tput3
_true                               #bgh
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_g.multiplication__table(elements=sg)
  ,|tput3
*  a b c d e f g  +-------------- a_\ a
b c d e f g b_\ b c d e f g a c_\ c d e
f g a b d_\ d e f g a b c e_\ e f g a b
c d f_\ f g a b c d e g_\ g a b c d e f
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,notes3

#a4
    zeta#ad is ! "n ( ! g5}ator us$ = !
  cyclotomic field1 x is a primitive
  root ( un;y "<a _% #14 _:? root ( un;y
  9 ? case">4 ,we h captur$ x z ;w4
#b4
    ,! syntax ,,cdf"<w"> w 3v}t !
  complex numb} ;w 9to ! m famili> =m )
  r1l & imag9>y "ps4
#c4                                 #bgi
    ,! me?od 4abs"<"> w return ! modulus
  ( a complex numb}1 .2;r z describ$ 9 !
  text4 ,= ele;ts ( _% _,c~`# _: ? %d
  alw equal _% #1 _:4
#d4
    ,! me?od 4>g"<"> w return ! >gu;t (
  a complex numb}1 _% .? _: z describ$ 9
  ! text4 ,e ele;t ( ! cyclic gr|p 9 ?
  example %d h an >gu;t t is an 9teg}
  multiple ( _% ?2.p/14# _:4 ,! ,n"<">
  syntax 3v}ts ! symbolic value ( pi to
  a num}ical approxima;n4
#e4
    sg is a li/ ( ele;ts t =m a cyclic
  subgr|p ( ord} #g1 compos$ ( ! f/ #g
  p{}s ( ;b "7 w`5#b4 ,s1 = example1 !
  la/ comp>ison multiplies ! fif? p{} (
  ;b ) ! six? p{} ( ;b1 : wd 2 ! elev5?
  p{} ( ;b4 ,b s9ce ;b has ord} #g1 ?
  r$uces to ! f|r? p{}4
#f4
    ,if y "k a subset ( an 9f9ite gr|p
  =ms a subgr|p1 !n y c produce xs
  ,cayley table by specify+ ! li/ (
  ele;ts y want to use4 ,"h we ask  #bhj
  = a multiplica;n table1 s9ce t is !
  relevant op}a;n4

,ex}cises #d4i ,sage ,ex}cises
  ,? gr|p ( ex}cises is ab ! gr|p (
units mod .2;n1 _% ,u(n) _:1 : is "s"ts
cyclic1 "s"ts n4 ,"! >e "s comm&s 9
,sage t w answ} "s ( ~! "qs v qkly1 b
9/1d ( us+ ~? n{1 j use ! basic
te*niques describ$4 ,! idea "h is to j
"w ) ele;ts1 & li/s ( ele;ts1 to 4c}n !
subgr|p /ructure ( ~! gr|ps4
  ,sage "w%eets h ext5sive capabilities
= mak+ new cells ) c>e;lly =matt$ text1
9clude support = ;,l a,t e,x syntax to
express ma!matics4 ,s :5 a "q asks =
explana;n or com;t>y1 make a new cell &
communicate cle>ly ) yr audi;e4 ,3t9ue ?
practice 9 subsequ5t ex}cise sets4
#a 4
  ,execute ! /ate;t ;,r "7
,9teg}s"<#dj"> to cr1te ! set
.<#j1a1b14441ci.>,this is a gr|p "u
addi;n mod _% #40 _:1 : we w ignore4
,9/1d we >e 9t}e/$ 9 ! subset (     #bha
ele;ts : h an 9v}se "u .1multiplica;n
mod _% #40 _:4 ,det}m9e h{ big ? subgr|p
is by execut+ ! comm&
,r4unit.-gr|p.-ord}"<">1 & !n obta9 a
li/ ( ~! ele;ts )
,r4li/.-(.-ele;ts.-(.-multiplicative.-g-
r|p"<">4
#b 4
  ,y c cr1te ele;ts ( ? gr|p by co}c+
regul> 9teg}s 9to ;,u1 s* z ) ! /ate;t a
"7 ,u"<#g">4 "<,don't 3fuse ? ) |r
ma!matical nota;n _% ,u(#40) _:4"> ,? w
tell ,sage t y want to view _% #7 _: z
an ele;t ( .2;,u1 subject to !
correspond+ op}a;ns4 ,det}m9e ! ele;ts (
! cyclic subgr|p ( .2;,u g5}at$ by
_% #7 _: ) a li/ compreh5.n z foll{s3
7777777777777777777777777777777777777777
,sage
  ,9put3
_r = _integers(40) a = _r(7) [a^i for i
in srange(16)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,:at is ! ord} ( _% #7 _: 9       #bhb
_% ,u(#40) _:;8
#c 4
  ,! gr|p _% ,u(#49) _: is cyclic4 ,us+
only ! ,sage comm&s describ$ previ|sly1
use ,sage to f9d a g5}ator = ? gr|p4 ,n{
us+ .1only !orems ab ! /ructure ( cyclic
gr|ps1 describe ea* ( ! subgr|ps (
_% ,u(#49) _: by specify+ xs ord} & by
giv+ an explicit g5}ator4 ,d n rep1t any
( ! subgr|ps ",- 9 o!r ~ws1 pres5t ea*
subgr|p .1exactly once4 ,y c use ,sage
to *eck yr "w on ! subgr|ps1 b yr answ}
ab ! subgr|ps %d rely only on !orems & 2
a nicely writt5 p>agraph ) a table1 etc4
#d 4
  ,! gr|p _% ,u(#35) _: is n cyclic4
,ag1 us+ only ! ,sage comm&s describ$
previ|sly1 use computa;ns to provide
irrefutable evid;e ( ?4 ,h{ _m ( !
_% #16 _: di6}5t subgr|ps (
_% ,u(#35) _: c y li/8
#e 4
  ,ag1 us+ only ! ,sage comm&s describ$
previ|sly1 explore ! /ructure (
_% ,u(n) _: = v>i|s values ( .2;n   #bhc
& see if y c =mulate an 9t}e/+ 3jecture
ab "s basic prop}ty ( ? gr|p4 "<,yes1 ?
is a .1v op5-5d$ "q1 b ? is ultimately !
r1l p{} ( explor+ ma!matics ) ,sage4">




















                                    #bhd
       ,*apt} #e ,p}muta;n ,gr|ps

  ,p}muta;n gr|ps >e c5tral to ! /udy (
geometric symmetries & to ,galois !ory1
! /udy ( f9d+ solu;ns ( polynomial
equa;ns4 ,!y al provide abundant
examples ( nonabelian gr|ps4
  ,let u recall = a mo;t ! symmetries (
! equilat}al triangle _% $t,a,b,c _: f
,*apt} #c4 ,! symmetries actually 3si/ (
p}muta;ns ( ! ?ree v}tices1 ": a
~1p}muta;n ( ! set _% ,s .k .(,a, ,b,
,c.) _: is a "o-to-"o & onto map _% .p3
,s $o ,s _:4 ,! ?ree v}tices h ! foll{+
six p}muta;ns4
_%
  ,we h us$ ! >ray
_% ,(,a ,b ,c,) ,(,b ,c ,a,) _:
to d5ote ! p}muta;n t s5ds .2,a to
.2;,b1 .2;,b to .2;,c1 & .2;,c to .2,a4
,t is1
_%
4 ,! symmetries ( a triangle =m a gr|p4
,9 ? *apt} we w /udy gr|ps ( ? type4
                                    #bhe
    ,sec;n #e4a ,def9i;ns & ,nota;n
  ,9 g5}al1 ! p}muta;ns ( a set .2;,x =m
a gr|p _% ,s;,x _:4 ,if .2;,x is a f9ite
set1 we c assume _% ,x .k .(#1, #2, '''
, n.) _:4 ,9 ? case we write _% ,s;n _:
9/1d ( _% ,s;,x _:4  ,! foll{+ !orem
says t _% ,s;n _: is a gr|p4 ,we call ?
gr|p ! ~1symmetric ~1gr|p  on .2;n lrs4
7777777777777777777777777777777777777777
,!orem  #e4a4a 4
  ,! symmetric gr|p on .2;n lrs1
_% ,s;n _:1 is a gr|p ) _% n& _: ele;ts1
": ! b9>y op}a;n is ! composi;n ( maps4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,! id5t;y ( _% ,s;n _: is j ! id5t;y
map t s5ds _% #1 _: to _% #1 _:1
_% #2 _: to _% #2 _:1 _% ''' _:1 .2;n to
.2;n4 ,if _% f3 ,s;n" $o ,s;n" _: is a
p}muta;n1 !n _% f~-#1 _: exi/s1 s9ce
.2;f is "o-to-"o & onto2 h;e1 e p}muta;n
has an 9v}se4 ,composi;n ( maps is
associative1 : makes ! gr|p op}a;n  #bhf
associative4 ,we l1ve ! pro( t
_% |,s;n"| .k n& _: z an ex}cise4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,a subgr|p ( _% ,s;n _: is call$ a
~1p}muta;n ~1gr|p~'4
7777777777777777777777777777777777777777
,example  #e4a4b 4
  ,3sid} ! subgr|p .2;,g ( _% ,s5 _:
3si/+ ( ! id5t;y p}muta;n _% id _: & !
p}muta;ns
_%
4 ,! foll{+ table tells u h{ to multiply
ele;ts 9 ! p}muta;n gr|p .2;,g4
_%
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,rem>k  #e4a4c 4
  ,?|< x is natural to multiply ele;ts 9
a gr|p f left to "r1 func;ns >e compos$
f "r to left4 ,let _% .s _: & _% .t _: 2
p}muta;ns on a set .2;,x4 ,to compose
_% .s _: & _% .t _: z func;ns1 we
calculate _% (s~.*t)(x) .k          #bhg
s(t(x)) _:4 ,t is1 we d _% .t _: f/1 !n
_% .s _:4 ,"! >e s"eal ways to approa* ?
9consi/5cy4 .7,we w adopt ! 3v5;n (
multiply+ p}muta;ns "r to left4 ,to
compute.' _% .s.t _:.21 .1d _% .t _:
.7f/ & !n.' _% .s _:.24 ,t is1 by
_% .st(x) _: we m1n _% s(t(x)) _:4
"<,ano!r way ( solv+ ? problem wd 2 to
write func;ns on ! "r2 t is1 9/1d (
writ+ _% s(x) _:1 we cd write
_% (x).s _:4 ,we cd al multiply
p}muta;ns left to "r to agree ) ! usual
way ( multiply+ ele;ts 9 a gr|p4
,c}ta9ly all ( ~! me?ods h be5 us$4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #e4a4d 4
  ,p}muta;n multiplica;n is n usually
commutative4 ,let
_%
4 ,!n
_% .s.t .k ,(#1 2 3 4,) ,(1 4 3 2,) _:
1 b
_% .t.s .k ,(#1 2 3 4,) ,(3 2 1     #bhh
4,) _:
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #e4a4a ,cycle ,nota;n
  ,! nota;n t we h us$ to repres5t
p}muta;ns up to ? po9t is cumb}"s1 to
say ! l1/4 ,to "w e6ectively ) p}muta;n
gr|ps1 we ne$ a m /r1ml9$ me?od ( writ+
d{n & manipulat+ p}muta;ns4
  ,a p}muta;n _% .s `e ,s;,x _: is a
~7cycle ( l5g?~' .2;k if "! exi/ ele;ts
_% a1, a2, ''' , a;k" `e ,x _: s* t
_%
& _% s(x) .k x _: = all o!r ele;ts _% x
`e ,x _:4 ,we w write _% (a1, a2, ''' ,
a;k") _: to d5ote ! cycle _% .s _:4
,cycles >e ! build+ blocks ( all
p}muta;ns4
7777777777777777777777777777777777777777
,example  #e4a4e 4
  ,! p}muta;n
_% .s .k ,(#1 2 3 4 5 6 7,) ,(6 3 5 1 4
2 7,) .k (#162354) _:
is a cycle ( l5g? _% #6 _:1 ":as    #bhi
_% .t .k ,(#1 2 3 4 5 6,) ,(1 4 2 3 5
6,) .k (#243) _:
is a cycle ( l5g? _% #3 _:4
  ,n e p}muta;n is a cycle4 ,3sid} !
p}muta;n
_% ,(#1 2 3 4 5 6,) ,(2 4 1 3 6 5,) .k
(#1243)(56) _:
4 ,? p}muta;n actually 3ta9s a cycle (
l5g? #b & a cycle ( l5g? _% #4 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #e4a4f 4
  ,x is v easy to compute products (
cycles4 ,suppose t
_% .s .k (#1352)and.t .k (#256) _:
4 ,if we ?9k ( _% .s _: z
_% #1 $|33o #3, #3 $|33o #5, #5 $|33o
#2, #2 $|33o #1 _:
1 & _% .t _: z
_% #2 $|33o #5, #5 $|33o #6, #6 $|33o
#2 _:
1 !n = _% .s.t _: rememb}+ t we apply
_% .t _: f/ & !n _% .s _:1 x m/ 2 ! case
t                                   #bij
_% #1 $|33o #3, #3 $|33o #5, #5 $|33o
#6, #6 $|33o #2 $|33o #1 _:
1 or _% .s.t .k (#1356) _:4 ,if _% .m .k
(#1634) _:1 !n _% .s.m .k
(#1652)(34) _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,two cycles 9 _% ,s;,x _:1 _% .s .k
(a1, a2, ''' , a;k") _: & _% .t .k (b1,
b2, ''' , b;l") _:1 >e ~14jo9t  if
_% a;i" /.k b;j _: = all .2i & .2;j4
7777777777777777777777777777777777777777
,example  #e4a4g 4
  ,! cycles _% (#135) _: & _% (#27) _:
>e 4jo9t2 h{"e1 ! cycles _% (#135) _: &
_% (#347) _: >e n4 ,calculat+ _!
products1 we f9d t
_%
4 ,! product ( two cycles t >e n 4jo9t
may r$uce to "s?+ less complicat$2 !
product ( 4jo9t cycles _c 2 simplifi$4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #e4a4h 4                #bia
  ,let _% .s _: & _% .t _: 2 two 4jo9t
cycles 9 _% ,s;,x _:4 ,!n _% .s.t .k
.t.s _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,let _% .s .k (a1, a2, ''' , a;k") _:
& _% .t .k (b1, b2, ''' , b;l") _:4 ,we
m/ %{ t _% st(x) .k ts(x) _: = all _% x
`e ,x _:4 ,if .2;x is nei 9 _% .(a1, a2,
''' , a;k".) _: nor _% .(b1, b2, ''' ,
b;l".) _:1 !n bo? _% .s _: & _% .t _:
fix .2;x4 ,t is1 _% s(x) .k x _: &
_% t(x) .k x _:4 ,h;e1
_% st(x) .k s(t(x)) .k s(x) .k x .k t(x)
.k t(s(x)) .k ts(x) _:
4 .7,d n =get t we >e multiply+
p}muta;ns "r to left1 : is ! opposite (
! ord} 9 : we usually multiply gr|p
ele;ts4.' ,n{ suppose t _% x `e .(a1,
a2, ''' , a;k".) _:4 ,!n _% s(a;i") .k
a;(imod k)+1 _:2 t is1
_%
4 ,h{"e1 _% t(a;i") .k a;i _: s9ce  #bib
_% .s _: & _% .t _: >e 4jo9t4 ,"!=e1
_%
4 ,simil>ly1 if _% x `e .(b1, b2, ''' ,
b;l".) _:1 !n _% .s _: & _% .t _: al
commute4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #e4a4i 4
  ,e p}muta;n 9 _% ,s;n _: c 2 writt5 z
! product ( 4jo9t cycles4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,we c assume t _% ,x .k .(#1, #2, '''
, n.) _:4 ,if _% .s `e ,s;n _: & we
def9e _% ,x1 _: to 2 _% .(s(#1),
s~2"(#1), '''.) _:1 !n ! set _% ,x1 _:
is f9ite s9ce .2;,x is f9ite4 ,n{ let
.2i 2 ! f/ 9teg} 9 .2;,x t is n 9
_% ,x1 _: & def9e _% ,x2 _: by
_% .(s(i), s~2"(i), '''.) _:4 ,ag1
_% ,x2 _: is a f9ite set4 ,3t9u+ 9 ?
mann}1 we c def9e f9ite 4jo9t sets  #bic
_% ,x3, ,x4, ''' _:4 ,s9ce .2;,x is a
f9ite set1 we >e gu>ante$ t ? process w
5d & "! w 2 only a f9ite numb} ( ~!
sets1 say .2;r4 ,if _% .s;i _: is !
cycle def9$ by
_%
1 !n _% .s .k .s1.s2 ''' .s;r" _:4 ,s9ce
! sets _% ,x1, ,x2, ''' , ,x;r" _: >e
4jo9t1 ! cycles _% .s1, .s2, ''' ,
.s;r" _: m/ al 2 4jo9t4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #e4a4aj 4
  ,let
_%
4 ,us+ cycle nota;n1 we c write
_%
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,rem>k  #e4a4aa 4
  ,f ? po9t =w>d we w f9d x 3v5i5t to
use cycle nota;n to repres5t        #bid
p}muta;ns4 ,:5 us+ cycle nota;n1 we (t5
d5ote ! id5t;y p}muta;n by _% (#1) _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #e4a4b ,transposi;ns
  ,! simple/ p}muta;n is a cycle ( l5g?
_% #2 _:4 ,s* cycles >e call$
~1transposi;ns~'4  ,s9ce
_% (a1, a2, ''' , a;n") .k
(a1a;n")(a1a;n-1") ''' (a1a3)(a1a2) _:
1 any cycle c 2 writt5 z ! product (
transposi;ns1 l1d+ to ! foll{+
proposi;n4
7777777777777777777777777777777777777777
,proposi;n  #e4a4ab 4
  ,any p}muta;n ( a f9ite set 3ta9+ at
l1/ two ele;ts c 2 writt5 z ! product (
transposi;ns4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #e4a4ac 4
  ,3sid} ! p}muta;n
_% (#16)(253) .k (#16)(23)(25) .k
(#16)(45)(23)(45)(25) _:            #bie
4 ,z we c see1 "! is no unique way to
repres5t p}muta;n z ! product (
transposi;ns4 ,= 9/.e1 we c write !
id5t;y p}muta;n z _% (#12)(12) _:1 z
_% (#13)(24)(13)(24) _:1 & 9 _m o!r
ways4 ,h{"e1 z x turns |1 no p}muta;n c
2 writt5 z ! product ( bo? an ev5 numb}
( transposi;ns & an odd numb} (
transposi;ns4 ,= 9/.e1 we cd repres5t !
p}muta;n _% (#16) _: by
_% (#23)(16)(23) _:
or by
_% (#35)(16)(13)(16)(13)(35)(56) _:
1 b _% (#16) _: w alw 2 ! product ( an
odd numb} ( transposi;ns4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,lemma  #e4a4ad 4
  ,if ! id5t;y is writt5 z ! product (
.2;r transposi;ns1
_% id .k .t1.t2 ''' .t;r" _:
1 !n .2;r is an ev5 numb}4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #bif
7777777777777777777777777777777777777777
,pro( 4
  ,we w employ 9duc;n  on .2;r4 ,a
transposi;n _c 2 ! id5t;y2 h;e1 _% r .1
#1 _:4 ,if _% r .k #2 _:1 !n we >e d"o4
,suppose t _% r .1 #2 _:4 ,9 ? case !
product ( ! la/ two transposi;ns1
_% .t;r-1".t;r _:1 m/ 2 "o ( ! foll{+
cases3
_%
1 ": .2a1 .2;b1 .2;c1 & .2;d >e 4t9ct4
  ,! f/ equa;n simply says t a
transposi;n is xs {n 9v}se4 ,if ? case
o3urs1 delete _% .t;r-1".t;r _: f !
product to obta9
_% id .k .t1.t2 ''' .t;r-3".t;r-2" _:
4 ,by 9duc;n _% r-2 _: is ev52 h;e1 .2;r
m/ 2 ev54
  ,9 ea* ( ! o!r ?ree cases1 we c
replace _% .t;r-1".t;r _: ) ! "r-h& side
( ! correspond+ equa;n to obta9 a new
product ( .2;r transposi;ns = ! id5t;y4
,9 ? new product ! la/ o3urr;e ( .2a w 2
9 ! next-to-!-la/ transposi;n4 ,we c
3t9ue ? process )                   #big
_% .t;r-2".t;r-1 _: to obta9 ei a
product ( _% r-2 _: transposi;ns or a
new product ( .2;r transposi;ns ": ! la/
o3urr;e ( .2a is 9 _% .t;r-2 _:4 ,if !
id5t;y is ! product ( _% r-2 _:
transposi;ns1 !n ag we >e d"o1 by |r
9duc;n hypo!sis2 o!rwise1 we w rep1t !
proc$ure ) _% .t;r-3".t;r-2 _:4
  ,at "s po9t ei we w h two adjac5t1
id5tical transposi;ns c.el+ ea* o!r | or
.2a w 2 %u6l$ s t x w appe> only 9 ! f/
transposi;n4 ,h{"e1 ! latt} case _c
o3ur1 2c ! id5t;y wd n fix .2a 9 ? 9/.e4
,"!=e1 ! id5t;y p}muta;n m/ 2 ! product
( _% r-2 _: transposi;ns &1 ag by |r
9duc;n hypo!sis1 we >e d"o4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #e4a4ae 4
  ,if a p}muta;n _% .s _: c 2 express$ z
! product ( an ev5 numb} ( transposi;ns1
!n any o!r product ( transposi;ns equal+
_% .s _: m/ al 3ta9 an ev5 numb} (
transposi;ns4 ,simil>ly1 if         #bih
_% .s _: c 2 express$ z ! product ( an
odd numb} ( transposi;ns1 !n any o!r
product ( transposi;ns equal+ _% .s _:
m/ al 3ta9 an odd numb} ( transposi;ns4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,suppose t
_% .s .k .s1.s2 ''' .s;m" .k .t1.t2 '''
.t;n" _:
1 ": .2;m is ev54 ,we m/ %{ t .2;n is al
an ev5 numb}4 ,! 9v}se ( _% .s _: is
_% .s;m" ''' .s1 _:4 ,s9ce
_% id .k .s.s;m" ''' .s1 .k .t1 '''
.t;n".s;m" ''' .s1 _:
1 .2;n m/ 2 ev5 by ,lemma #e4a4ad4 ,!
pro( = ! case 9 : _% .s _: c 2 express$
z an odd numb} ( transposi;ns is left z
an ex}cise4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,9 li<t ( ,!orem #e4a4ae1 we def9e a
p}muta;n to 2 ~1ev5  if x c 2 express$ z
an ev5 numb} ( transposi;ns &       #bii
~1odd  if x c 2 express$ z an odd numb}
( transposi;ns4

      ,subsec;n #e4a4c ,! ,alt}nat+
      ,gr|ps
  ,"o ( ! mo/ important subgr|ps (
_% ,s;n _: is ! set ( all ev5 p}muta;ns1
_% ,a;n _:4  ,! gr|p _% ,a;n _: is call$
! ~7alt}nat+ gr|p on~' .2;n ~1lrs~'4
7777777777777777777777777777777777777777
,!orem  #e4a4af 4
  ,! set _% ,a;n _: is a subgr|p (
_% ,s;n _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,s9ce ! product ( two ev5 p}muta;ns m/
al 2 an ev5 p}muta;n1 _% ,a;n _: is
clos$4 ,! id5t;y is an ev5 p}muta;n &
"!=e is 9 _% ,a;n _:4 ,if _% .s _: is an
ev5 p}muta;n1 !n
_% .s .k .s1.s2 ''' .s;r" _:
1 ": _% .s;i _: is a transposi;n & .2;r
is ev54 ,s9ce ! 9v}se ( any         #cjj
transposi;n is xf1
_% .s~-#1" .k .s;r".s;r-1" ''' .s1 _:
is al 9 _% ,a;n _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,proposi;n  #e4a4ag 4
  ,! numb} ( ev5 p}muta;ns 9 _% ,s;n _:1
_% n .1: #2 _:1 is equal to ! numb} (
odd p}muta;ns2 h;e1 ! ord} ( _% ,a;n _:
is _% n6 _/#2 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,a;n _: 2 ! set ( ev5
p}muta;ns 9 _% ,s;n _: & _% ,b;n _: 2 !
set ( odd p}muta;ns4 ,if we c %{ t "! is
a bijec;n 2t ~! sets1 !y m/ 3ta9 ! same
numb} ( ele;ts4 ,fix a transposi;n
_% .s _: 9 _% ,s;n _:4 ,s9ce _% n .1:
#2 _:1 s* a _% .s _: exi/s4 ,def9e
_% .l;.s"3 ,a;n" $o ,b;n" _:
by
_% l;.s"(.t) .k .s.t _:             #cja
4 ,suppose t _% l;.s"(.t) .k
l;.s"(.m) _:4 ,!n _% .s.t .k .s.m _: & s
_% .t .k .s~-#1".s.t .k .s~-#1".s.m .k
.m _:
4 ,"!=e1 _% .l;.s _: is "o-to-"o4 ,we w
l1ve ! pro( t _% .l;.s _: is surjective
to ! r1d}4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #e4a4ah 4
  ,! gr|p _% ,a4 _: is ! subgr|p (
_% ,s4 _: 3si/+ ( ev5 p}muta;ns4 ,"! >e
twelve ele;ts 9  _% ,a4 _:3
_%
4 ,"o ( ! 5d-(-*apt} ex}cises w 2 to
write d{n all ! subgr|ps ( _% ,a4 _:4 ,y
w f9d t "! is no subgr|p ( ord} #f4
,does ? surprise y8
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #e4a4d ,hi/orical ,note
  ,lagrange  f/ ?"| ( p}muta;ns z
func;ns f a set to xf1 b x 0 ,cau*y :o
develop$ ! basic !orems & nota;n =  #cjb
p}muta;ns4 ,he 0 ! f/ to use cycle
nota;n4 ,augu/9-,l|is ,cau*y
"<#aghi,-#aheg"> 0 born 9 ,p>is at !
hei<t ( ! ,fr5* ,revolu;n4 ,8 family
soon left ,p>is = ! village ( ,>cueil to
escape ! ,reign ( ,t}ror4 ,"o ( !
family's nei<bors "! 0 ,pi}re-,simon
,laplace  "<#agdi,-#ahbg">1 :o 5c|rag$
hm to seek a c>e} 9 ma!matics4 ,cau*y
2gan 8 c>e} z a ma!matician by solv+ a
problem 9 geometry giv5 to hm by
,lagrange4 ,cau*y wrote ov} #hjj pap}s
on s* div}se topics z di6}5tial equa;ns1
f9ite gr|ps1 appli$ ma!matics1 & complex
analysis4 ,he 0 "o ( ! ma!maticians
responsible = mak+ calculus rigor|s4
,p}h m !orems & 3cepts 9 ma!matics h !
"n ,cau*y atta*$ to !m ?an t ( any o!r
ma!matician4

    ,sec;n #e4b ,dih$ral ,gr|ps
  ,ano!r special type ( p}muta;n gr|p is
! dih$ral gr|p4 ,recall ! symmetry gr|p
( an equilat}al triangle 9 ,*apt} #c4
,s* gr|ps 3si/ ( ! rigid mo;ns ( a  #cjc
regul> .2;n-sid$ polygon or .2;n-gon4 ,=
_% n .k #3, #4, ''' _:1 we def9e ! ~7n?
dih$ral gr|p~'  to 2 ! gr|p ( rigid
mo;ns ( a regul> .2;n-gon4 ,we w d5ote ?
gr|p by _% ,d;n _:4  ,we c numb} !
v}tices ( a regul> .2;n-gon by _% #1,
#2, ''' , n _: "<,figure #e4b4a">4
,notice t "! >e exactly .2;n *oices to
replace ! f/ v}tex4 ,if we replace ! f/
v}tex by .2;k1 !n ! second v}tex m/ 2
replac$ ei by v}tex _% k+1 _: or by
v}tex _% k-1 _:2 h;e1 "! >e _% #2n _:
possible rigid mo;ns ( ! .2;n-gon4 ,we
summ>ize ~! results 9 ! foll{+ !orem4
7777777777777777777777777777777777777777
  ,image3 ,an ;n-gon ) v}tex #a at !
top1 foll{$ by #b1 #c1 #d1 4441 ;n - #a1
;n4
  ,,id3 p}mute-ngon
,figure  #e4b4a 4  ,a regul> .2;n-gon
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #e4b4b 4
  ,! dih$ral gr|p1 _% ,d;n _:1 is   #cjd
a subgr|p ( _% ,s;n _: ( ord} _% #2n _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #e4b4c 4
  ,! gr|p _% ,d;n _:1 _% n .1: #3 _:1
3si/s ( all products ( ! two ele;ts .2;r
& .2;s1 satisfy+ ! rela;ns
_%
4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,! possible mo;ns ( a regul> .2;n-gon
>e ei reflec;ns or rota;ns
"<,figure #e4b4d">4 ,"! >e exactly .2;n
possible rota;ns3
_% id, ?360~~.*"/n#, #2*?360~~.*"/n#,
''' , (n-1)*?360~~.*"/n# _:
4 ,we w d5ote ! rota;n
_% #360~~.*"_/n _: by .2;r4 ,! rota;n
.2;r g5}ates all  ( ! o!r rota;ns4 ,t
is1
_% r~k" .k k*?360~~.*"/n# _:        #cje
4
7777777777777777777777777777777777777777
  ,image3 ,rota;ns & reflec;ns ( an
octagon4  ,": ! top octagon "<#a
"<top">1 #b1 #c1 #d1 #e1 #f1 #g1 #h"> is
rotat$ to an octagon "<#b "<top">1 #c1
#d1 #e1 #f1 #g1 #h1 #a">1 & ! octagon 2l
"<#a "<top">1 #b1 #c1 #d1 #e1 #f1 #g1
#h"> is reflect$ ab a v}tical axis to
"<#a "<top">1 #h1 #g1 #f1 #e1 #d1 #c1
#b">4
  ,,id3 p}mute-mo;ns-ngon
,figure  #e4b4d 4  ,rota;ns & reflec;ns
( a regul> .2;n-gon
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,label ! .2;n reflec;ns _% s1, s2, '''
, s;n" _:1 ": _% s;k _: is ! reflec;n t
l1ves v}tex .2;k fix$4 ,"! >e two cases
( reflec;ns1 dep5d+ on :e!r .2;n is ev5
or odd4 ,if "! >e an ev5 numb} (
v}tices1 !n two v}tices >e left fix$ by
a reflec;n1 & _% s1 .k s;n_/2+1", s2 .k
s;n_/2+2", ''' , s;n_/2" .k s;n" _:4 ,if
"! >e an odd numb} ( v}tices1 !n    #cjf
only a s+le v}tex is left fix$ by a
reflec;n & _% s1, s2, ''' , s;n" _: >e
4t9ct "<,figure #e4b4e">4 ,9 ei case1 !
ord} ( ea* _% s;k _: is two4 ,let _% s
.k s1 _:4 ,!n _% s~2" .k #1 _: & _% r~n"
.k #1 _:4 ,s9ce any rigid mo;n .2;t ( !
.2;n-gon replaces ! f/ v}tex by ! v}tex
.2;k1 ! second v}tex m/ 2 replac$ by ei
_% k+1 _: or by _% k-1 _:4 ,if ! second
v}tex is replac$ by _% k+1 _:1 !n _% t
.k r~k _:4 ,if ! second v}tex is replac$
by _% k-1 _:1 !n _% t .k r~k"s _:4  #a
,h;e1 .2;r & .2;s g5}ate _% ,d;n _:4 ,t
is1 _% ,d;n _: 3si/s ( all f9ite
products ( .2;r & .2;s1
_% ,d;n" .k .(#1, r, r~2", ''' , r~n-1",
s, rs, r~2"s, ''' , r~n-1"s.) _:
4 ,we w l1ve ! pro( t _% srs .k r~-#1 _:
z an ex}cise4
,s9ce we >e 9 an ab/ract gr|p1 we w
adopt ! 3v5;n t gr|p ele;ts >e multipli$
left to "r4
7777777777777777777777777777777777777777
  ,image3 ,! top hexagon "<#a "<top">1
#b1 #c1 #d1 #e1 #f"> is relect$ to  #cjg
"<#a "<top">1 #f1 #e1 #d1 #c14 #b">4  ,!
bottom p5tqgon "<#a "<top">1 #b1 #c1 #d1
#e"> is relect$ to 2come "<#a "<top">1
#e1 #d1 #c1 #b">4
  ,,id3 p}mute-reflec;ns-ngon
,figure  #e4b4e 4  ,types (  reflec;ns (
a regul> .2;n-gon
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,example  #e4b4f 4
  ,! gr|p ( rigid mo;ns ( a squ>e1
_% ,d4 _:1 3si/s ( ei<t ele;ts4 ,) !
v}tices numb}$ _% #1 _:1 _% #2 _:1
_% #3 _:1 _% #4 _: "<,figure #e4b4g">1 !
rota;ns >e
_%
& ! reflec;ns >e
_%
4 ,! ord} ( _% ,d4 _: is _% #8 _:4 ,!
rema9+ two ele;ts >e
_%
4                                   #cjh
7777777777777777777777777777777777777777
  ,image3 ,a squ>e ) diagonal l9es (
symmetries 3nect+ opposite v}tices1 a
horzontal l9e ( symmetry t bisects ! two
v}tical sides ( ! squ>e & a v}tical l9e
( symmetry t bisects ! two horizaontal
sides ( ! squ>e4
  ,,id3 p}mute-dih$ral-f|r
,figure  #e4b4g 4  ,! gr|p _% ,d4 _:
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #e4b4a ,! ,mo;n ,gr|p (
      a ,cube
  ,we c 9ve/igate ! gr|ps ( rigid mo;ns
( geometric objects o!r ?an a regul>
.2;n-sid$ polygon to obta9 9t}e/+
examples ( p}muta;n gr|ps4 ,let u 3sid}
! gr|p ( rigid mo;ns ( a cube4  ,by
rigid mo;n1 we m1n a rota;n ) ! axis (
rota;n ab oppos+ faces1 $ges1 or
v}tices4 ,"o ( ! f/ "qs t we c ask ab ?
gr|p is 8:at is xs ord}80 ,a cube has
_% #6 _: sides4 ,if a "picul> side  #cji
is fac+ upw>d1 !n "! >e f|r possible
rota;ns ( ! cube t w pres}ve !
upw>d-fac+ side4 ,h;e1 ! ord} ( ! gr|p
is _% #6*4 .k #24 _:4 ,we h j prov$ !
foll{+ proposi;n4
7777777777777777777777777777777777777777
,proposi;n  #e4b4h 4
  ,! gr|p ( rigid mo;ns ( a cube 3ta9s
_% #24 _: ele;ts4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,!orem  #e4b4i 4
  ,! gr|p ( rigid mo;ns ( a cube is
_% ,s4 _:4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,pro( 4
  ,f ,proposi;n #e4b4h1 we alr "k t !
mo;n gr|p ( ! cube has _% #24 _: ele;ts1
! same numb} ( ele;ts z "! >e 9
_% ,s4 _:4 ,"! >e exactly f|r diagonals
9 ! cube4 ,if we label ~! diagonals
_% #1 _:1 _% #2 _:1 _% #3 _:1 &     #caj
_% #4 _:1 we m/ %{ t ! mo;n gr|p ( !
cube w give u any p}muta;n ( ! diagonals
"<,figure #e4b4aj">4 ,if we c obta9 all
( ~! p}muta;ns1 !n _% ,s4 _: & ! gr|p (
rigid mo;ns ( ! cube m/ 2 ! same4 ,to
obta9 a transposi;n we c rotate ! cube
_% #180~~.* _: ab ! axis jo9+ ! midpo9ts
( opposite $ges "<,figure #e4b4aa">4 ,"!
>e six s* axes1 giv+ all transposi;ns 9
_% ,s4 _:4 ,s9ce e ele;t 9 _% ,s4 _: is
! product ( a f9ite numb} (
transposi;ns1 ! mo;n gr|p ( a cube m/ 2
_% ,s4 _:4
7777777777777777777777777777777777777777
  ,image3 ,a cube ": ! top vetices >e
labl$ #a1 #b1 #c1 #d & ! bottom v}tices
>e labl$ #c1 #d1 #a1 #b4  ,diagonals
3nect v}tex #a on ! top ) v}tex #a on !
bottom1 v}tex #b on ! top ) v}tex #b on
! bottom1 v}tex #c on ! top ) v}tex #c
on ! bottom1 & v}tex #d on ! top ) v}tex
#d on ! bottom1
  ,,id3 p}mute-mo;ns-cube
,figure  #e4b4aj 4  ,! mo;n gr|p ( a
cube                                #caa
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
  ,image3 ,two cubes ": ! top vetices (
! f/ cube >e labl$ #a1 #b1 #c1 #d & !
bottom v}tices >e labl$ #c1 #d1 #a1 #b &
! top v}tices ( ! second cube >e labl$
#b1 #a1 #c1 #d & ! bottom v}tices >e
labl$ #c1 #d1 #b1 #a4  ,l9es ( symmetry
3nect ! #ab $ge on top ) ! #ab $ge on !
bottom 9 bo? cubes4
  ,,id3 p}mute-transposi;ns-cube
,figure  #e4b4aa 4  ,transposi;ns 9 !
mo;n gr|p ( a cube
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage4
  ,a p}muta;n gr|p is a v 3crete
repres5ta;n ( a gr|p1 & ,sage support =
p}muta;ns gr|ps is v gd ",- mak+ ,sage a
natural place = 2g9n}s to le>n ab gr|p
!ory4                               #cab
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

,r1d+ ,"qs #e4c ,r1d+ ,"qs #a 4
  ,express _% (#134)(354) _: z a cycle1
or a product ( 4jo9t cycles4 "<,9t}pret
! composi;n ( func;ns 9 ! ord} us$ by
,sage1 : is ! rev}se ( ! ord} us$ 9 !
book4">
#b 4
  ,:at is a transposi;n8
#c 4
  ,:at does x m1n = a p}muta;n to 2 ev5
or odd8
#d 4
  ,describe ano!r gr|p t is funda;tally
! same z _% ,a3 _:4
#e 4
  ,write ! ele;ts ( ! symmetry gr|p ( a
p5tagon us+ p}muta;ns 9 cycle nota;n4 ,d
? ex}cise by h&1 & )|t ! assi/.e (
,sage4
,ex}cises #e4d ,ex}cises #a 4
  ,write ! foll{+ p}muta;ns 9 cycle
nota;n4
                                    #cac
a4
  _% ,(#1 2 3 4 5,) ,(2 4 1 5 3,) _:
;b4
  _% ,(#1 2 3 4 5,) ,(4 2 5 1 3,) _:
;c4
  _% ,(#1 2 3 4 5,) ,(3 5 1 4 2,) _:
;d4
  _% ,(#1 2 3 4 5,) ,(1 4 3 2 5,) _:

,h9t3
  "<a"> _% (#12453) _:2 "<;c">
_% (#13)(25) _:4
#b 4
  ,compute ea* ( ! foll{+4

a4
    _% (#1345)(234) _:
;b4
    _% (#12)(1253) _:
;c4
    _% (#143)(23)(24) _:
;d4
    _% (#1423)(34)(56)(1324) _:
;e4
    _% (#1254)(13)(25) _:           #cad
;f4
    _% (#1254)(13)(25)~2 _:
;g4
    _% (#1254)~-#1"(123)(45)(1254) _:
;h4
    _% (#1254)~2"(123)(45) _:
i4
    _% (#123)(45)(1254)~-#2 _:
;j4
    _% (#1254)~100 _:
;k4
    _% |(#1254)| _:
;l4
    _% |(#1254)~2"| _:
;m4
    _% (#12)~-#1 _:
;n4
    _% (#12537)~-#1 _:
o4
    _% `((#12)(34)(12)(47)`)~-#1 _:
;p4
    _% `((#1235)(467)`)~-#1 _:

,h9t3
  "<a"> _% (#135)(24) _:2 "<;c">    #cae
_% (#14)(23) _:2 "<;e"> _% (#1324) _:2
"<;g"> _% (#134)(25) _:2 "<;n">
_% (#17352) _:4
#c 4
  ,express ! foll{+ p}muta;ns z products
( transposi;ns & id5tify !m z ev5 or
odd4

a4
    _% (#14356) _:
;b4
    _% (#156)(234) _:
;c4
    _% (#1426)(142) _:
;d4
    _% (#17254)(1423)(154632) _:
;e4
    _% (#142637) _:

,h9t3
  "<a"> _% (#16)(15)(13)(14) _:2 "<;c">
_% (#16)(14)(12) _:4
#d 4
  ,f9d _% (a1, a2, ''' , a;n")~-#1 _:4
,h9t3                               #caf
  _% (a1, a2, ''' , a;n")~-#1" .k (a1,
a;n", a;n-1", ''' , a2) _:
#e 4
  ,li/ all ( ! subgr|ps ( _% ,s4 _:4
,f9d ea* ( ! foll{+ sets3

a4
    _% .(s `e ,s43 s(#1) .k #3.) _:
;b4
    _% .(s `e ,s43 s(#2) .k #2.) _:
;c4
    _% .( s `e ,s43 s(#1) .k #3 _: &
  _% s(#2) .k #2.) _:4

,>e any ( ~! sets subgr|ps ( _% ,s4 _:;8
,h9t3
  "<a"> _% .((#13), (#13)(24), (#132),
(#134), (#1324), (#1342).) _: is n a
subgr|p4
#f 4
  ,f9d all ( ! subgr|ps 9 _% ,a4 _:4
,:at is ! ord} ( ea* subgr|p8
#g 4
  ,f9d all possible ord}s ( ele;ts 9
_% ,s7 _: & _% ,a7 _:4              #cag
#h 4
  ,%{ t _% ,a10 _: 3ta9s an ele;t ( ord}
_% #15 _:4
,h9t3
  _% (#12345)(678) _:4
#i 4
  ,does _% ,a8 _: 3ta9 an ele;t ( ord}
_% #26 _:;8
#aj 4
  ,f9d an ele;t ( l>ge/ ord} 9
_% ,s;n _: = _% n .k #3, ''' , #10 _:4
#aa 4
  ,:at >e ! possible cycle /ructures (
ele;ts ( _% ,a5 _:;8 ,:at ab _% ,a6 _:;8
,h9t3
  ,p}muta;ns ( ! =m
_% (#1), (a1, a2)(a3, a4), (a1, a2, a3),
(a1, a2, a3, a4, a5) _:
>e possible = _% ,a5 _:4
#ab 4
  ,let _% .s `e ,s;n _: h ord} .2;n4 ,%{
t = all 9teg}s .2i & .2;j1 _% .s~i" .k
.s~j _: if & only if _% i _l j(mod
n) _:4
#ac 4                               #cah
  ,let _% .s .k .s1 ''' .s;m" `e
,s;n" _: 2 ! product ( 4jo9t cycles4
,prove t ! ord} ( _% .s _: is ! l1/
common multiple ( ! l5g?s ( ! cycles
_% .s1, ''' , .s;m" _:4
#ad 4
  ,us+ cycle nota;n1 li/ ! ele;ts 9
_% ,d5 _:4 ,:at >e .2;r & .2;s8 ,write e
ele;t z a product ( .2;r & .2;s4
#ae 4
  ,if ! diagonals ( a cube >e label$ z
,figure #e4b4aj1 to : mo;n ( ! cube does
! p}muta;n _% (#12)(34) _: correspond8
,:at ab ! o!r p}muta;ns ( ! diagonals8
#af 4
  ,f9d ! gr|p ( rigid mo;ns ( a
tetrah$ron4 ,%{ t ? is ! same gr|p z
_% ,a4 _:4
#ag 4
  ,prove t _% ,s;n _: is nonabelian =
_% n .1: #3 _:4
,h9t3
  ,calculate _% (#123)(12) _: &
_% (#12)(123) _:4
#ah 4                               #cai
  ,%{ t _% ,a;n _: is nonabelian = _% n
.1: #4 _:4
#ai 4
  ,prove t _% ,d;n _: is nonabelian =
_% n .1: #3 _:4
#bj 4
  ,let _% .s `e ,s;n _: 2 a cycle4
,prove t _% .s _: c 2 writt5 z ! product
( at mo/ _% n-1 _: transposi;ns4
#ba 4
  ,let _% .s `e ,s;n _:4 ,if _% .s _: is
n a cycle1 prove t _% .s _: c 2 writt5 z
! product ( at mo/ _% n-2 _:
transposi;ns4
#bb 4
  ,if _% .s _: c 2 express$ z an odd
numb} ( transposi;ns1 %{ t any o!r
product ( transposi;ns equal+ _% .s _:
m/ al 2 odd4
#bc 4
  ,if _% .s _: is a cycle ( odd l5g?1
prove t _% .s~2 _: is al a cycle4
#bd 4
  ,%{ t a _% #3 _:-cycle is an ev5
p}muta;n4                           #cbj
#be 4
  ,prove t 9 _% ,a;n _: ) _% n .1:
#3 _:1 any p}muta;n is a product (
cycles ( l5g? _% #3 _:4
,h9t3
  ,3sid} ! cases _% (ab)(bc) _: &
_% (ab)(cd) _:4
#bf 4
  ,prove t any ele;t 9 _% ,s;n _: c 2
writt5 z a f9ite product ( ! foll{+
p}muta;ns4

a4
    _% (#12), (#13), ''' , (#1n) _:
;b4
    _% (#12), (#23), ''' , (n-1, n) _:
;c4
    _% (#12), (#12 ''' n) _:

#bg 4
  ,let .2;,g 2 a gr|p & def9e a map
_% .l;g"3 ,g $o ,g _: by _% l;g"(a) .k
ga _:4 ,prove t _% .l;g _: is a p}muta;n
( .2;,g4
#bh 4                               #cba
  ,prove t "! exi/ _% n& _: p}muta;ns (
a set 3ta9+ .2;n ele;ts4
#bi 4
  ,recall t ! ~1c5t} ( a gr|p .2;,g is
_% ,z(,g) .k .(g `e ,g3 gx .k xgfor allx
`e ,g.) _:
4 ,f9d ! c5t} ( _% ,d8 _:4 ,:at ab !
c5t} ( _% ,d10 _:;8 ,:at is ! c5t} (
_% ,d;n _:;8
#cj 4
  ,let _% .t .k (a1, a2, ''' , a;k") _:
2 a cycle ( l5g? .2;k4

a4
    ,prove t if _% .s _: is any
  p}muta;n1 !n
  _% s.ts~-#1" .k (s(a1), s(a2), ''' ,
  s(a;k")) _:
  is a cycle ( l5g? .2;k4
;b4
    ,let _% .m _: 2 a cycle ( l5g? .2;k4
  ,prove t "! is a p}muta;n _% .s _: s*
  t _% .s.t.s~-#1" .k .m _:4

,h9t3                               #cbb
  ,= "<a">1 %{ t _% s.ts~-#1"(s(a;i"))
.k s(a;i+1") _:4
#ca 4
  ,= _% .a _: & _% .b _: 9 _% ,s;n _:1
def9e _% .a`:.b _: if "! exi/s an _% .s
`e ,s;n _: s* t _% .s.a.s~-#1" .k .b _:4
,%{ t _% `: _: is an equival;e rela;n on
_% ,s;n _:4
#cb 4
  ,let _% .s `e ,s;,x _:4 ,if _% s~n"(x)
.k y _: = "s _% n `e _,z _:1 we w say t
_% x`:y _:4

a4
    ,%{ t _% `: _: is an equival;e
  rela;n on .2;,x4
;b4
    ,def9e ! ~1orbit ( _% x `e ,x _: "u
  _% .s `e ,s;,x _: to 2 ! set
  _% `,o;x, .s" .k .(y3 x`:y.) _:
  4 ,compute ! orbits ( ea* ele;t 9
  _% .(#1, #2, #3, #4, #5.) _: "u ea* (
  ! foll{+ ele;ts 9 _% ,s5 _:3
  _%
  4                                 #cbc
;c4
    ,if _% `,o;x, .s".%`,o;y, .s" /.k
  _0 _:1 prove t _% `,o;x, .s" .k `,o;y,
  .s _:4 ,! orbits "u a p}muta;n
  _% .s _: >e ! equival;e classes
  correspond+ to ! equival;e rela;n
  _% `: _:4
;d4
    ,a subgr|p .2;,h ( _% ,s;,x _: is
  ~1transitive if = e _% x, y `e ,x _:1
  "! exi/s a _% .s `e ,h _: s* t _% s(x)
  .k y _:4 ,prove t _% ..(.s..) _: is
  transitive if & only if _% `,o;x, .s"
  .k ,x _: = "s _% x `e ,x _:4

#cc 4
  ,let _% .a `e ,s;n _: = _% n .1:
#3 _:4 ,if _% .a.b .k .b.a _: = all
_% .b `e ,s;n _:1 prove t _% .a _: m/ 2
! id5t;y p}muta;n2 h;e1 ! c5t} (
_% ,s;n _: is ! trivial subgr|p4
#cd 4
  ,if _% .a _: is ev51 prove t
_% .a~-#1 _: is al ev54 ,does a
correspond+ result hold if          #cbd
_% .a _: is odd8
#ce 4
  ,if _% .s `e ,a;n _: & _% .t `e
,s;n _:1 %{ t _% .t~-#1".s.t `e ,a;n _:4
#cf 4
  ,%{ t _% .a~-#1".b~-#1".a.b _: is ev5
= _% .a, .b `e ,s;n" _:4
#cg 4
  ,let .2;r & .2;s 2 ! ele;ts 9
_% ,d;n _: describ$ 9 ,!orem #e4b4c

a4
    ,%{ t _% srs .k r~-#1 _:4
;b4
    ,%{ t _% r~k"s .k sr~-k _: 9
  _% ,d;n _:4
;c4
    ,prove t ! ord} ( _% r~k" `e ,d;n _:
  is _% n_/gcd (k, n) _:4

    ,sec;n #e4e ,sage
  ,a gd por;n ( ,sage's support = gr|p
!ory is bas$ on r|t9es f ,,gap "<,gr|ps1
,algori?ms1 & ,programm+"> at
www4gap-sy/em4org1 : is 9clud$ 9 e  #cbe
copy ( ,sage4 ,? is a mature op5 s|rce
package1 dat+ back to #aihf4 "<,=w>d
ref};e "h to ,,gap 3sole1 etc4">
  ,z we h se51 gr|ps c 2 describ$ 9 _m
di6}5t ways1 s* z sets ( matrices1 sets
( complex numb}s1 or sets ( symbols
subject to def9+ rela;ns4 ,a v 3crete
way to repres5t gr|ps is via p}muta;ns
"<"o-to-"o & onto func;ns ( ! 9teg}s
_% #1 _: "? .2;n">1 us+ func;n composi;n
z ! op}a;n 9 ! gr|p1 z describ$ 9 ?
*apt}4 ,sage has _m r|t9es design$ to "w
) gr|ps ( ? type & !y >e al a gd way =
~? le>n+ gr|p !ory to ga9 exp}i;e ) !
basic id1s ( gr|p !ory4 ,= bo? ~!
r1sons1 we w 3c5trate on ~! types (
gr|ps4

      ,subsec;n #e4e4a ,p}muta;n ,gr|ps
      & ,ele;ts
  ,! easie/ way to "w ) p}muta;n gr|p
ele;ts 9 ,sage is to write !m 9 cycle
nota;n4 ,s9ce ~! >e products ( 4jo9t
cycles "<: commute">1 we d n ne$ to 3c}n
|rvs ) ! actual ord} ( ! cycles4    #cbf
,if we write "<#a1c">"<#b1d"> we
probably "u/& x to 2 a p}muta;n "<!
topic ( ? *apt}6"> & we "k t x cd 2 an
ele;t ( _% ,s4 _:1 or p}h a symmetric
gr|p on m symbols ?an j #d4 ,sage _c get
/>t$ t easily & ne$s a bit ( 3text1 s we
co}ce a /r+ ( "*s writt5 ) cycle nota;n
9to a symmetric gr|p to make gr|p
ele;ts4 ,"h >e "s examples & "s sample
computa;ns4 ,rememb} t ,sage & yr text
di6} on h{ to 9t}pret ! ord} ( compos+
two p}muta;ns 9 a product4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g = _symmetric_group(5) sigma =
_g("(1,3)(2,5,4)") sigma*sigma
  ,|tput3
(2,4,5)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
rho = _g("(2,4)(1,5)") rho^3        #cbg
  ,|tput3
(1,5)(2,4)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,if ! next ?ree examples seem 3fus+1
or 8backw>ds01 !n n{ wd 2 an excell5t "t
to review ! ,sage 4cus.n ab ! ord} (
p}muta;n composi;n 9 ! subsec;n ,gr|ps (
symmetries4
7777777777777777777777777777777777777777
,sage
  ,9put3
sigma*rho
  ,|tput3
(1,3,5,2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
rho*sigma
  ,|tput3
(1,4,5,3)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #cbh
7777777777777777777777777777777777777777
,sage
  ,9put3
rho^-1*sigma*rho
  ,|tput3
(1,2,4)(3,5)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,"! >e alt}nate ways to cr1te p}muta;n
gr|p ele;ts1 : c 2 use;l 9 "s situa;ns1
b !y >e n q z use;l 9 "e"d use4
7777777777777777777777777777777777777777
,sage
  ,9put3
sigma1 = _g("(1,3)(2,5,4)") sigma1
  ,|tput3
(1,3)(2,5,4)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sigma2 = _g([(1,3),(2,5,4)]) sigma2
  ,|tput3
(1,3)(2,5,4)                        #cbi
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sigma3 = _g([3,5,1,2,4]) sigma3
  ,|tput3
(1,3)(2,5,4)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sigma1 == sigma2
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sigma2 == sigma3
  ,|tput3
_true
                                    #ccj
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sigma2.cycle__tuples()
  ,|tput3
[(1, 3), (2, 5, 4)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
[sigma3(x) for x in _g.domain()]
  ,|tput3
[3, 5, 1, 2, 4]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,! second v}.n ( _% .s _: is a li/ (
8tuples01 : requires a lot ( commas & ~!
m/ 2 5clos$ 9 a li/4  "<,a tuple ( l5g?
"o m/ 2 writt5 l "<#d1"> to 4t+ui% x f
us+ p>5!ses = gr|p+1 z 9 #e"9"<#d">4">
,! ?ird v}.n uses ! 8bottom-r{0 ( ! m
cumb}"s two-r{ nota;n 9troduc$ at   #cca
! 2g9n+ ( ! *apt} ",- x is an ord}$ li/
( ! .1|tput .1values ( ! p}muta;n :5
3sid}$ z a func;n4
  ,s we !n see t despite ?ree di6}5t
9put proc$ures1 all ! v}.ns ( _% .s _:
pr9t ! same way1 & moreso !y >e actually
equal to ea* o!r4 "<,? is a subtle
di6};e ",- :at an object .1is 9 ,sage
v}sus h{ an object .14plays xf4">
  ,we c 2 ev5 m c>e;l ab ! nature ( |r
ele;ts4 ,notice t once we get ,sage
/>t$1 x c promote ! product _% .t.s _:
9to ! l>g} p}muta;n gr|p4 ,we c
8promote0 ele;ts 9to l>g} p}muta;n
gr|ps1 b x is an }ror to try to %oe-horn
an ele;t 9to a too-small symmetric gr|p4
7777777777777777777777777777777777777777
,sage
  ,9put3
_h = _symmetric_group(4) sigma =
_h("(1,2,3,4)") _g = _symmetric_group(6)
tau = _g("(1,2,3,4,5,6)") rho = tau *
sigma rho
  ,|tput3
(1,3)(2,4,5,6)                      #ccb
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sigma.parent()
  ,|tput3
_symmetric group of order 4! as a
permutation group
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
tau.parent()
  ,|tput3
_symmetric group of order 6! as a
permutation group
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
rho.parent()
  ,|tput3                           #ccc
_symmetric group of order 6! as a
permutation group
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
tau.parent() == rho.parent()
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sigma_g = _g(sigma) sigma_g.parent()
  ,|tput3
_symmetric group of order 6! as a
permutation group
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,x is an }ror to try to co}ce a
p}muta;n ) too _m symbols 9to a p}muta;n
gr|p employ+ too few symbols4
                                    #ccd
7777777777777777777777777777777777777777
,sage
  ,9put3
tau_h = _h(tau)
  ,|tput3
_traceback (most recent call last): ...
_value_error: invalid data to initialize
a permutation
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,bett} ?an "w+ ) j ele;ts ( !
symmetric gr|p1 we c cr1te a v>iety (
p}muta;n gr|ps 9 ,sage4 ,"h is a sampl+
= />t}s3
7777777777777777777777777777777777777777
,table  #e4e4a 4  ,"s ,sage p}muta;n
gr|ps
,sage ,comm&2 ,descrip;n4
,symmetric,gr|p"<n">2 ,p}muta;ns on .2;n
  symbols1 _% n& _: ele;ts4
,dih$ral,gr|p"<n">2 ,symmetries ( an
  .2;n-gon1 _% #2n _: ele;ts44
,cyclic,p}muta;n,gr|p"<n">2 ,rota;ns (
  an .2;n-gon "<no flips">1 .2;n ele;ts4
,alt}nat+,gr|p"<n">2 ,alt}nat+      #cce
  gr|p on .2;n symbols1 _% n6 _/#2 _:
  ele;ts4
,kle9,f|r,gr|p"<">2 ,a non-cyclic gr|p (
  ord} #d4
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,y c al locate ,sage p}muta;n gr|ps )
! gr|ps catalog4 ,9 ! next cell place yr
cursor "r af ! f9al dot & hit ! tab-key4
,y w get a li/ ( me?ods y c use to cr1te
p}muta;n gr|ps4 ,z alw1 place a "q-m>k
af a me?od & hit ! tab-key to get onl9e
docu;ta;n ( a me?od4
7777777777777777777777777777777777777777
,sage
  ,9put3
groups.permutation.
                                    #ccf
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #e4e4b ,prop}ties (
      ,p}muta;n ,ele;ts
  ,"s"ts x is easi} to grab an ele;t | (
a li/ ( ele;ts ( a p}muta;n gr|p1 & !n x
is alr atta*$ to a p>5t & "! is no ne$ =
any co}cion4 ,9 ! foll{+1 rotate & flip
>e automatically ele;ts ( ;,g 2c ( ! way
we procur$ !m4
7777777777777777777777777777777777777777
,sage
  ,9put3
_d = _dihedral_group(5) elements =
_d.list(); elements
  ,|tput3
[(), (1,5,4,3,2), (1,4,2,5,3),
(1,3,5,2,4), (1,2,3,4,5), (2,5)(3,4),
(1,5)(2,4), (1,4)(2,3), (1,3)(4,5),
(1,2)(3,5)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3                            #ccg
rotate = elements[4] flip = elements[7]
flip*rotate == rotate* flip
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,s we see f ? f9al /ate;t t ! gr|p (
symmetries ( a p5tagon is n abelian4 ,b
"! is an easi} way4
7777777777777777777777777777777777777777
,sage
  ,9put3
_d = _dihedral_group(5) _d.is__abelian()
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,"! >e _m m me?ods y c use = bo?
p}muta;n gr|ps & _! 9dividual ele;ts4
,use ! blank compute cell 2l to cr1te a
p}muta;n gr|p "<any "o y l"> & an ele;t
( a p}muta;n gr|p "<any "o y l">4 ,!n
use tab-comple;n to see all ! me?ods
available = an ele;t1 or = a gr|p "<"n1
p}iod1 tab-key">4 ,"s "ns y may     #cch
recognize1 "s we w le>n ab 9 ! com+
*apt}s1 "s >e hi<ly-specializ$ rese>*
tools y c use :5 y write yr ,ph4,d4 !sis
9 gr|p !ory4 ,= any ( ~! me?ods1 rememb}
t y c type ! "n1 foll{$ by a "q m>k1 to
see docu;ta;n & examples4 .7,exp}i;t &
explore.' ",- x is r1lly h>d to br1k
any?+4
7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,"h >e "s select$ examples ( v>i|s
me?ods available4
7777777777777777777777777777777777777777
,sage
  ,9put3
_a4 = _alternating_group(4) _a4.order()
  ,|tput3
12
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                    #cci
7777777777777777777777777777777777777777
,sage
  ,9put3
_a4.is__finite()
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_a4.is__abelian()
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
_a4.is__cyclic()
  ,|tput3
_false
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

                                    #cdj
7777777777777777777777777777777777777777
,sage
  ,9put3
sigma = _a4("(1,2,4)") sigma^-1
  ,|tput3
(1,4,2)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sigma.order()
  ,|tput3
_3
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,a v use;l me?od :5 /udy+ ! alt}nat+
gr|p is ! p}muta;n gr|p ele;t me?od
4sign"<">4 ,x w return #a if a p}muta;n
is ev5 & -#a if a p}muta;n is odd4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g = _symmetric_group(3) sigma =
_g("(1,2)") tau = _g("(1,3)") rho   #cda
= sigma*tau sigma.sign()
  ,|tput3
-1
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
rho.sign()
  ,|tput3
_1
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we c cr1te subgr|ps by giv+ ! ma9
gr|p a li/ ( 8g5}ators40 ,~! ele;ts s}ve
to 8g5}ate0 a subgr|p ",- imag9e
multiply+ ~! ele;ts "<& _! 9v}ses"> tgr
ov} & ov}1 cr1t+ new ele;ts t m/ al 2 9
! subgr|p & al 2come 9volv$ 9 new
products1 until y see no new ele;ts4 ,n{
t def9i;n 5ds ) a horribly imprecise
/ate;t1 b x %d su6ice = n{4 ,a bett}
def9i;n is t ! subgr|p g5}at$ by !
ele;ts is ! smalle/ subgr|p ( ! ma9 gr|p
t 3ta9s all ! g5}ators ",- : is     #cdb
f9e if y "k :at all ! subgr|ps mi<t be4
  ,) a s+le g5}ator1 ! rep1t$ products j
2come p{}s ( ! l"o g5}ator4 ,! subgr|p
g5}at$ !n is cyclic4 ,) two "<or m">
g5}ators1 especially 9 a non-abelian
gr|p1 ! situa;n c 2 m*1 m* m complicat$4
,s let u 2g9 ) j a s+le g5}ator4 ,b d n
=get to put x 9 a li/ anyway4
7777777777777777777777777777777777777777
,sage
  ,9put3
_a4 = _alternating_group(4) sigma =
_a4("(1,2,4)") sg =
_a4.subgroup([sigma]) sg
  ,|tput3
_subgroup generated by [(1,2,4)] of
(_alternating group of order 4!/2 as a
permutation group)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sg.order()
  ,|tput3                           #cdc
_3
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sg.list()
  ,|tput3
[(), (1,2,4), (1,4,2)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sg.is__abelian()
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sg.is__cyclic()
  ,|tput3
_true                               #cdd
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
sg.is__subgroup(_a4)
  ,|tput3
_true
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,we c n{ r$o ! example f ! v 2g9n+ ( ?
*apt}4 ,we translate to ele;ts to cycle
nota;n1 3/ruct ! subgr|p f two g5}ators
"<! subgr|p is n cyclic">1 & s9ce !
subgr|p is abelian1 we d n h to view
,sage's ,cayley table z a diagonal
reflec;n ( ! table 9 ! example4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g = _symmetric_group(5) sigma =
_g("(4,5)") tau = _g("(1,3)") _h =
_g.subgroup([sigma, tau]) _h.list()
  ,|tput3
[(), (4,5), (1,3), (1,3)(4,5)]      #cde
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
text__names = ['id', 'sigma', 'tau',
'mu']
_h.cayley__table(names=text__names)
  ,|tput3
*     id sigma   tau    mu
+------------------------    id_\    id
sigma   tau    mu sigma_\ sigma    id
mu   tau   tau_\   tau    mu    id sigma
   mu_\    mu   tau sigma    id
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

      ,subsec;n #e4e4c ,mo;n ,gr|p ( a
      ,cube                         #cdf
  ,we cd mimic ! example 9 ! text &
cr1te ele;ts ( _% ,s4 _: z p}muta;ns ( !
diagonals4 ,a m obvi|s1 b less 9si<t;l1
3/ruc;n is to view ! #h corn}s ( ! cube
z ! items 2+ p}mut$4 ,!n "s obvi|s
symmetries ( ! cube come f runn+ an axis
"? ! c5t} ( a side1 "? to ! c5t} ( !
opposite side1 ) qu>t}-turns or
half-turns ab ~! axes =m+ symmetries4 ,)
?ree s* axes & f|r rota;ns p} axis1 we
get #ab symmetries1 except we h c.t$ !
id5t;y p}muta;n two extra "ts4
  ,label ! f|r corn}s ( ! squ>e top )
_% #1 _: "? _% #4 _:1 plac+ _% #1 _: 9 !
left-front corn}1 & foll{+ >.d clockwise
:5 view$ f abv4 ,use _% #5 _: "?
_% #8 _: = ! bottom squ>e's corn}1 s t
_% #5 _: is directly 2l _% #1 _:1
_% #6 _: 2l _% #2 _:1 etc4 ,we w use
qu>t}-turns1 clockwise1 >.d ea* axis1 :5
view$ f abv1 ! front1 & ! "r4
7777777777777777777777777777777777777777
,sage
  ,9put3
_g = _symmetric_group(8) above =    #cdg
_g("(1,2,3,4)(5,6,7,8)") front =
_g("(1,4,8,5)(2,3,7,6)") right =
_g("(1,2,6,5)(3,7,8,4)") cube =
_g.subgroup([above, front, right])
cube.order()
  ,|tput3
24
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

7777777777777777777777777777777777777777
,sage
  ,9put3
cube.list()
  ,|tput3
[(), (1,3)(2,4)(5,7)(6,8),
(1,6)(2,5)(3,8)(4,7),
(1,8)(2,7)(3,6)(4,5),
(1,4,3,2)(5,8,7,6), (1,2,3,4)(5,6,7,8),
(1,5)(2,8)(3,7)(4,6),
(1,7)(2,6)(3,5)(4,8), (2,5,4)(3,6,8),
(1,3,8)(2,7,5), (1,6,3)(4,5,7),
(1,8,6)(2,4,7), (1,4)(2,8)(3,5)(6,7),
(1,2,6,5)(3,7,8,4), (1,5,6,2)(3,4,8,7),
(1,7)(2,3)(4,6)(5,8), (2,4,5)(3,8,6),
(1,3,6)(4,7,5), (1,6,8)(2,7,4),     #cdh
(1,8,3)(2,5,7), (1,4,8,5)(2,3,7,6),
(1,2)(3,5)(4,6)(7,8),
(1,5,8,4)(2,6,7,3),
(1,7)(2,8)(3,4)(5,6)]
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,s9ce we "k f ! 4cus.n 9 ! text t !
symmetry gr|p has _% #24 _: ele;ts1 we
see t |r ?ree qu>t}-turns >e su6ici5t to
cr1te e symmetry4 ,? prompts s"eal "qs :
y c f9d 9 ,ex}cise #e4f4d4
7777777777777777777777777777777777777777
,sage
  ,9put3
# _practice area (not linked for _sage
_cell use)
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

,ex}cises #e4f ,sage ,ex}cises
  ,~! ex}cises >e design$ to help y
2come famili> ) p}muta;n gr|ps 9 ,sage4
#a 4
  ,cr1te ! full symmetric gr|p
_% ,s10 _: ) ! comm& ;,g "7
,symmetric,gr|p"<#aj">4             #cdi
#b 4
  ,cr1te ele;ts ( ;,g ) ! foll{+
"<v>y+"> syntax4 ,pay att5;n to commas1
quotes1 brackets1 p>5!ses4 ,! f/ two use
a /r+ "<"*s"> z 9put1 mimick+ ! way we
write p}mua;ns "<b ) commas">4 ,! second
two use a li/ ( tuples4

_4
    a "7 ,g"<,7"<#e1g1b1i1c1a1h">,7">
_4
    ;b "7 ,g"<,7"<#a1c">"<#d1e">,7">
_4
    ;c "7 ,g"<.<"<#a1b">1"<#c1d">.>">
_4
    ;d "7
  ,g"<.<"<#a1c">1"<#b1e1h">1"<#d1f1g1i1-
  aj">.>">

a4
    ,compute _% a~3 _:1 _% bc _:1
  _% ad~-#1"b _:4
;b4
    ,compute ! ord}s ( ea* ( ~! f|r
  9dividual ele;ts "< a "? ;d">     #cej
  us+ a s+le p}muta;n gr|p ele;t me?od4
;c4
    ,use ! p}muta;n gr|p ele;t me?od
  4sign"<"> to det}m9e if _% a, b, c,
  d _: >e ev5 or odd p}muta;ns4
;d4
    ,cr1te two cyclic subgr|ps ( .2;,g )
  ! comm&s3

_4
    ;,h "7 ,g4subgr|p"<.<a.>">
_4
    ;,k "7 ,g4subgr|p"<.<d.>">

  ,li/1 & /udy1 ! ele;ts ( ea* subgr|p4
  ,)|t us+ ,sage1 li/ ! ord} ( ea*
  subgr|p ( .2;,k4 ,!n use ,sage to
  3/ruct a subgr|p ( .2;,k ) ord} #aj4
;e4
    ,m complicat$ subgr|ps c 2 =m$ by
  us+ two or m g5}ators4 ,3/ruct a
  subgr|p .2;,l ( .2;,g ) ! comm& ;,l "7
  ,g4subgr|p"<.<b;1c.>">4 ,compute !
  ord} ( .2;,l & li/ all ( ! ele;ts (
  .2;,l4                            #cea
#c 4
  ,3/ruct ! gr|p ( symmetries ( !
tetrah$ron "<al ! alt}nat+ gr|p on #d
symbols1 _% ,a4 _:"> ) ! comm&
,a"7,alt}nat+,gr|p"<#d">4 ,us+ tools s*
z ord}s ( ele;ts1 & g5}ators ( subgr|ps1
see if y c f9d .1all .1( ! subgr|ps (
_% ,a4 _: "<ea* "o exactly once">4 ,d ?
)|t us+ ! 4subgr|ps"<"> me?od to ju/ify
! correct;s ( yr answ} "<?|< x mi<t 2 a
3v5i5t way to *eck yr "w">4
  ,provide a nice summ>y z yr answ}",-n
j piles ( |tput4 ,s use ,sage z a tool1
z ne$$1 b basically yr answ} w 2 a 3cise
p>agraph &_/or table4 ,? is ! "o "p ( ?
assign;t )|t cle>1 precise direc;ns1 s
sp5d "s "t on ? por;n to get x "r4 ,h9t3
no subgr|p ( _% ,a4 _: requires m ?an
two g5}ators4
#d 4
  ,! subsec;n ,mo;n ,gr|p ( a ,cube
describes ! _% #24 _: symmetries ( a
cube z a subgr|p ( ! symmetric gr|p
_% ,s8 _: g5}at$ by ?ree qu>t}-turns4
,answ} ! foll{+ "qs ab ? symmetry   #ceb
gr|p4

a4
    ,f ! li/ ( ele;ts ( ! gr|p1 c y
  locate ! t5 rota;ns ab axes8 "<,h9t3 !
  id5t;y is easy1 ! o!r n9e n"e s5d any
  symbol to xf4">
;b4
    ,c y id5tify ! six symmetries t >e a
  transposi;n ( diagonals8 "<,h9t3 .<;g
  = ;g 9 cube if g4ord}"<"> "7"7 #b.> is
  a gd prelim9>y filt}4">
;c4
    ,v}ify t any two ( ! qu>t}-turns "<
  abv1 front1 "r"> >e su6ici5t to g5}ate
  ! :ole gr|p4 ,h{ d y "k ea* pair
  g5}ates ! 5tire gr|p8
;d4
    ,c y express "o ( ! diagonal
  transposi;ns z a product (
  qu>t}-turns8 ,? c 2 a notori|sly
  di6icult problem1 especially = s(tw>e4
  ,x is "kn z ! 8~w problem40
;e4
    ,numb} ! six faces ( ! cube )   #cec
  ! numb}s _% #1 _: "? _% #6 _: "<any
  way y l">4 ,n{ 3sid} ! same ?ree
  symmetries we us$ 2f "<qu>t}-turns ab
  face-to-face axes">1 b n{ view !m z
  p}muta;ns ( ! six faces4 ,9 ? way1 we
  3/ruct ea* symmetry z an ele;t (
  _% ,s6 _:4 ,v}ify t ! subgr|p g5}at$
  by ~! symmetries is ! :ole symmetry
  gr|p ( ! cube4 ,ag1 r ?an us+ ?ree
  g5}ators1 try us+ j two4

#e 4
  ,save yr "w1 & !n see if y c cra% yr
,sage ses.n by build+ ! subgr|p (
_% ,s10 _: g5}at$ by ! ele;ts ;b & ;d (
ord}s _% #2 _: & _% #30 _: f abv4 .7,d n
submit.' ! li/ ( ele;ts ( ;,n z "p ( yr
submitt$ "w%eet4
7777777777777777777777777777777777777777
,sage
  ,9put3
_n = _g.subgroup([b,d]) _n.list()
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

  ,:at is ! ord} ( .2;,n8           #ced
