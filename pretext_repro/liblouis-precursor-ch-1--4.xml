<?xml version="1.0" encoding="UTF-8"?>
<html>
  <head/>
  <body>
    <section xmlns:svg="http://www.w3.org/2000/svg" class="book" id="aZr">
      <div class="fullpage">Abstract Algebra<br/>Theory and Applications<br/>Thomas W. Judson<br/>Department of Mathematics and Statistics<br/>Stephen F. Austin State University<br/><br/><div class="date">August 3, 2020</div><br/></div>
      <div data-braille="tableofcontents">Contents</div>
      <section class="colophon" id="colophon-1">
        <div class="centerpage">
          <span class="title">Colophon</span>
        </div>
        <p class="credit"><b class="title">Edition</b> Annual Edition 2020</p>
        <p class="credit"><b class="title">Website</b> <a href="http://abstract.pugetsound.edu"><code class="code-inline tex2jax_ignore">abstract.pugetsound.edu</code></a></p>
        <p class="copyright">©1997–2020 Thomas W. Judson, Robert A. Beezer</p>
        <p class="license">Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license is included in the appendix entitled “GNU Free Documentation License.”</p>
      </section>
      <section class="acknowledgement" id="acknowledgement-1">
        <div class="centerpage">
          <span class="title">Acknowledgements</span>
        </div>
        <p id="ewA">I would like to acknowledge the following reviewers for their helpful comments and suggestions.</p>
        <ul class="outerlist">
          <li>• <p id="EeD">David Anderson, University of Tennessee, Knoxville</p></li>
          <li>• <p id="klM">Robert Beezer, University of Puget Sound</p></li>
          <li>• <p id="QsV">Myron Hood, California Polytechnic State University</p></li>
          <li>• <p id="wAe">Herbert Kasube, Bradley University</p></li>
          <li>• <p id="cHn">John Kurtzke, University of Portland</p></li>
          <li>• <p id="IOw">Inessa Levi, University of Louisville</p></li>
          <li>• <p id="oVF">Geoffrey Mason, University of California, Santa Cruz</p></li>
          <li>• <p id="VcO">Bruce Mericle, Mankato State University</p></li>
          <li>• <p id="BjX">Kimmo Rosenthal, Union College</p></li>
          <li>• <p id="hrg">Mark Teply, University of Wisconsin</p></li>
        </ul>
        <p id="KDJ">I would also like to thank Steve Quigley, Marnie Pommett, Cathie Griffin, Kelle Karshick, and the rest of the staff at PWS Publishing for their guidance throughout this project. It has been a pleasure to work with them.</p>
        <p id="qKS">Robert Beezer encouraged me to make <em class="emphasis">Abstract Algebra: Theory and Applications</em> available as an open source textbook, a decision that I have never regretted. With his assistance, the book has been rewritten in PreTeXt (<a class="external" href="https://pretextbook.org" target="_blank"><code class="code-inline tex2jax_ignore">pretextbook.org</code></a>), making it possible to quickly output print, web, <abbr class="acronym">PDF</abbr> versions and more from the same source. The open source version of this book has received support from the National Science Foundation (Awards #DUE-1020957, #DUE–1625223, and #DUE–1821329).</p>
      </section>
      <section class="preface" id="Cpq">
        <div class="centerpage">
          <span class="title">Preface</span>
        </div>
        <p id="Nyp">This text is intended for a one or two-semester undergraduate course in abstract algebra. Traditionally, these courses have covered the theoretical aspects of groups, rings, and fields. However, with the development of computing in the last several decades, applications that involve abstract algebra and discrete mathematics have become increasingly important, and many science, engineering, and computer science students are now electing to minor in mathematics. Though theory still occupies a central role in the subject of abstract algebra and no student should go through such a course without a good notion of what a proof is, the importance of applications such as coding theory and cryptography has grown significantly.</p>
        <p id="tFy">Until recently most abstract algebra texts included few if any applications. However, one of the major problems in teaching an abstract algebra course is that for many students it is their first encounter with an environment that requires them to do rigorous proofs. Such students often find it hard to see the use of learning to prove theorems and propositions; applied examples help the instructor provide motivation.</p>
        <p id="ZMH">This text contains more material than can possibly be covered in a single semester. Certainly there is adequate material for a two-semester course, and perhaps more; however, for a one-semester course it would be quite easy to omit selected chapters and still have a useful text. The order of presentation of topics is standard: groups, then rings, and finally fields. Emphasis can be placed either on theory or on applications. A typical one-semester course might cover groups and rings while briefly touching on field theory, using Chapters 1 through 6, 9, 10, 11, 13 (the first part), 16, 17, 18 (the first part), 20, and 21. Parts of these chapters could be deleted and applications substituted according to the interests of the students and the instructor. A two-semester course emphasizing theory might cover Chapters 1 through 6, 9, 10, 11, 13 through 18, 20, 21, 22 (the first part), and 23. On the other hand, if applications are to be emphasized, the course might cover Chapters 1 through 14, and 16 through 22. In an applied course, some of the more theoretical results could be assumed or omitted. A chapter dependency chart appears below. (A broken line indicates a partial dependency.)</p>
        <div class="sidebyside">
          <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
            <div class="sbspanel" style="width:100%;justify-content:flex-start;">
              <div data-braille="image">
                <p>Image: Chapter dependency graph.  Chapter 23 depends on Chapters 13 and 15. Chapter 22 depends on Chapter 21 and Chapter 8.  Chapter 21 depends on Chapter 20.  Chapters 18-20 depend on Chapter 17.  Chapter 17 depends on Chapter 16.  Chapter 15 depends on Chapter 14.  Chapters 12, 13, 14, and 16 depend on Chapter 11. Chapter 11 depends on Chapter 10, which depends on Chapter 9. Chapters 7-9 depend on Chapters 1-6</p>
                <p>ID: preface-dependencies</p>
              </div>
            </div>
          </div>
        </div>
        <p id="FTQ">Though there are no specific prerequisites for a course in abstract algebra, students who have had other higher-level courses in mathematics will generally be more prepared than those who have not, because they will possess a bit more mathematical sophistication. Occasionally, we shall assume some basic linear algebra; that is, we shall take for granted an elementary knowledge of matrices and determinants. This should present no great problem, since most students taking a course in abstract algebra have been introduced to matrices and determinants elsewhere in their career, if they have not already taken a sophomore or junior-level course in linear algebra.</p>
        <p id="maZ">Exercise sections are the heart of any mathematics text. An exercise set appears at the end of each chapter. The nature of the exercises ranges over several categories; computational, conceptual, and theoretical problems are included. A section presenting hints and solutions to many of the exercises appears at the end of the text. Often in the solutions a proof is only sketched, and it is up to the student to provide the details. The exercises range in difficulty from very easy to very challenging. Many of the more substantial problems require careful thought, so the student should not be discouraged if the solution is not forthcoming after a few minutes of work.</p>
        <p id="Sii">There are additional exercises or computer projects at the ends of many of the chapters. The computer projects usually require a knowledge of programming. All of these exercises and projects are more substantial in nature and allow the exploration of new results and theory.</p>
        <p id="ypr">Sage (<a class="external" href="http://sagemath.org" target="_blank">sagemath.org</a>) is a free, open source, software system for advanced mathematics, which is ideal for assisting with a study of abstract algebra. Sage can be used either on your own computer, a local server, or on CoCalc (<a class="external" href="https://cocalc.com" target="_blank"><code class="code-inline tex2jax_ignore">cocalc.com</code></a>). Robert Beezer has written a comprehensive introduction to Sage and a selection of relevant exercises that appear at the end of each chapter, including live Sage cells in the web version of the book. All of the Sage code has been subject to automated tests of accuracy, using the most recent version available at this time: SageMath Version 9.1 (released 2020-05-20).</p>
        <cite class="attribution">Thomas W. Judson<br/>Nacogdoches, Texas 2020</cite>
      </section>
      <section class="chapter" id="xcu">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">1</span> <span class="title">Preliminaries</span></div>
        <section class="introduction" id="Put">
          <p id="DBN">A certain amount of mathematical maturity is necessary to find and study applications of abstract algebra. A basic knowledge of set theory, mathematical induction, equivalence relations, and matrices is a must. Even more important is the ability to read and understand mathematical proofs. In this chapter we will outline the background needed for a course in abstract algebra.</p>
        </section>
        <section class="section" id="yRH">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">1.1</span> <span class="title">A Short Note on Proofs</span></div>
          <section class="introduction" id="vBC">
            <p id="jIW">Abstract mathematics is different from other sciences. In laboratory sciences such as chemistry and physics, scientists perform experiments to discover new principles and verify theories. Although mathematics is often motivated by physical experimentation or by computer simulations, it is made rigorous through the use of logical arguments. In studying abstract mathematics, we take what is called an axiomatic approach; that is, we take a collection of objects <nemeth class="inline">⠈⠠⠎</nemeth> and assume some rules about their structure. These rules are called <dfn class="terminology">axioms</dfn>. Using the axioms for <nemeth class="inline">⠈⠠⠎</nemeth>, we wish to derive other information about <nemeth class="inline">⠈⠠⠎</nemeth> by using logical arguments. We require that our axioms be consistent; that is, they should not contradict one another. We also demand that there not be too many axioms. If a system of axioms is too restrictive, there will be few examples of the mathematical structure.</p>
            <p id="PQf">A <dfn class="terminology">statement</dfn> in logic or mathematics is an assertion that is either true or false. Consider the following examples:</p>
            <ul class="outerlist">
              <li>• <p id="glA"><nemeth class="inline">⠼⠒⠬⠢⠖⠤⠂⠒⠬⠦⠸⠌⠆</nemeth>.</p></li>
              <li>• <p id="MsJ">All cats are black.</p></li>
              <li>• <p id="szS"><nemeth class="inline">⠼⠆⠬⠒⠀⠨⠅⠀⠼⠢</nemeth>.</p></li>
              <li>• <p id="YHb"><nemeth class="inline">⠼⠆⠭⠀⠨⠅⠀⠼⠖</nemeth> exactly when <nemeth class="inline">⠭⠀⠨⠅⠀⠼⠲</nemeth>.</p></li>
              <li>• <p id="EOk">If <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>, then</p><div class="displaymath"><nemeth>⠭⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth></div><p data-braille="continuation">.</p></li>
              <li>• <p id="kVt"><nemeth class="inline">⠭⠘⠒⠐⠤⠲⠭⠘⠆⠬⠢⠭⠤⠖</nemeth>.</p></li>
            </ul>
            <p data-braille="continuation">All but the first  and last examples are statements, and must be either true or false.</p>
            <p id="vXo">A <dfn class="terminology">mathematical proof</dfn> is nothing more than a convincing argument about the accuracy of a statement. Such an argument should contain enough detail to convince the audience; for instance, we can see that the statement “<nemeth class="inline">⠼⠆⠭⠀⠨⠅⠀⠼⠖</nemeth> exactly when <nemeth class="inline">⠭⠀⠨⠅⠀⠼⠲</nemeth>” is false by evaluating <nemeth class="inline">⠼⠆⠡⠲</nemeth> and noting that <nemeth class="inline">⠼⠖⠀⠌⠨⠅⠀⠼⠦</nemeth>, an argument that would satisfy anyone. Of course, audiences may vary widely: proofs can be addressed to another student, to a professor, or to the reader of a text. If more detail than needed is presented in the proof, then the explanation will be either long-winded or poorly written. If too much detail is omitted, then the proof may not be convincing. Again it is important to keep the audience in mind. High school students require much more detail than do graduate students. A good rule of thumb for an argument in an introductory abstract algebra course is that it should be written to convince one's peers, whether those peers be other students or other readers of the text.</p>
            <p id="cex">Let us examine different types of statements. A statement could be as simple as “<nemeth class="inline">⠼⠂⠴⠸⠌⠢⠀⠨⠅⠀⠼⠆</nemeth>;” however, mathematicians are usually interested in more complex statements such as “If <i class="one-letter">p</i>, then <i class="one-letter">q</i>,” where <i class="one-letter">p</i> and <i class="one-letter">q</i> are both statements. If certain statements are known or assumed to be true, we wish to know what we can say about other statements. Here <i class="one-letter">p</i> is called the <dfn class="terminology">hypothesis</dfn> and <i class="one-letter">q</i> is known as the <dfn class="terminology">conclusion</dfn>. Consider the following statement: If <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">. The hypothesis is <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> and <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth>; the conclusion is</p>
            <div class="displaymath">
              <nemeth>⠭⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">. Notice that the  statement says nothing about whether or not the hypothesis is true. However, if this entire statement is true and we can show that <nemeth class="inline">⠁⠭⠘⠆⠐⠬⠃⠭⠬⠉⠀⠨⠅⠀⠼⠴</nemeth> with <nemeth class="inline">⠁⠀⠌⠨⠅⠀⠼⠴</nemeth> is true, then the conclusion <em class="emphasis">must</em> be true. A proof of this statement might simply be a series of equations:</p>
            <div class="displaymath">
              <nemeth>⠁⠭⠘⠆⠬⠃⠭⠬⠉⠀⠀⠨⠅⠀⠼⠴⠀⠭⠘⠆⠐⠬⠹⠃⠌⠁⠼⠭⠀⠀⠨⠅⠀⠤⠹⠉⠌⠁⠼⠀⠭⠘⠆⠐⠬⠹⠃⠌⠁⠼⠭⠬⠷⠹⠃⠌⠆⠁⠼⠾⠘⠆⠀⠀⠨⠅⠀⠷⠹⠃⠌⠆⠁⠼⠾⠘⠆⠐⠤⠹⠉⠌⠁⠼⠀⠷⠭⠬⠹⠃⠌⠆⠁⠼⠾⠘⠆⠀⠀⠨⠅⠀⠹⠃⠘⠆⠐⠤⠲⠁⠉⠌⠲⠁⠘⠆⠐⠼⠀⠭⠬⠹⠃⠌⠆⠁⠼⠀⠀⠨⠅⠀⠹⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼⠀⠭⠀⠀⠨⠅⠀⠹⠤⠃⠬⠤⠜⠃⠘⠆⠐⠤⠲⠁⠉⠻⠌⠆⠁⠼</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="IlG">If we can prove a statement true, then that statement is called a <dfn class="terminology">proposition</dfn>. A proposition of major importance is called a <dfn class="terminology">theorem</dfn>. Sometimes instead of proving a theorem or proposition all at once, we break the proof down into modules; that is, we prove several supporting propositions, which are called <dfn class="terminology">lemmas</dfn>, and use the results of these propositions to prove the main result. If we can prove a proposition or a theorem, we will often, with very little effort, be able to derive other related propositions called <dfn class="terminology">corollaries</dfn>.</p>
          </section>
          <section class="subsection" id="djD">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.1.1</span> <span class="title">Some Cautions and Suggestions</span></div>
            <p id="IVA">There are several different strategies for proving propositions. In addition to using different methods of proof, students often make some common mistakes when they are first learning how to prove theorems. To aid students who are studying abstract mathematics for the first time, we list here some of the difficulties that they may encounter and some of the strategies of proof available to them. It is a good idea to keep referring back to this list as a reminder. (Other techniques of proof will become apparent throughout this chapter and the remainder of the text.)</p>
            <ul class="outerlist">
              <li>• <p id="RcC">A theorem cannot be proved by example; however, the standard way to show that a statement is not a theorem is to provide a counterexample.</p></li>
              <li>• <p id="xjL">Quantifiers are important. Words and phrases such as <em class="emphasis">only</em>, <em class="emphasis">for all</em>, <em class="emphasis">for every</em>, and <em class="emphasis">for some</em> possess different meanings.</p></li>
              <li>• <p id="dqU">Never assume any hypothesis that is not explicitly stated in the theorem. <em class="emphasis">You cannot take things for granted.</em></p></li>
              <li>• <p id="Jyd">Suppose you wish to show that an object <em class="emphasis">exists</em> and is <em class="emphasis">unique</em>. First show that there actually is such an object. To show that it is unique, assume that there are two such objects, say <i class="one-letter">r</i> and <i class="one-letter">s</i>, and then show that <nemeth class="inline">⠗⠀⠨⠅⠀⠎</nemeth>.</p></li>
              <li>• <p id="pFm">Sometimes it is easier to prove the contrapositive of a statement. Proving the statement “If <i class="one-letter">p</i>, then <i class="one-letter">q</i>” is exactly the same as proving the statement “If not <i class="one-letter">q</i>, then not <i class="one-letter">p</i>.”</p></li>
              <li>• <p id="VMv">Although it is usually better to find a direct proof of a theorem, this task can sometimes be difficult. It may be easier to assume that the theorem that you are trying to prove is false, and to hope that in the course of your argument you are forced to make some statement that cannot possibly be true.</p></li>
            </ul>
            <p data-braille="continuation">Remember that one of the main objectives of higher mathematics is proving theorems. Theorems are tools that make new and productive applications of mathematics possible. We use examples to give insight  into existing theorems and to foster intuitions as to what new theorems might be true. Applications, examples, and proofs are tightly interconnected—much more so than they may seem at first appearance.</p>
          </section>
        </section>
        <section class="section" id="eYQ">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">1.2</span> <span class="title">Sets and Equivalence Relations</span></div>
          <section class="subsection" id="JqM">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.2.1</span> <span class="title">Set Theory</span></div>
            <p id="pcJ">A <dfn class="terminology">set</dfn> is a well-defined collection of objects; that is, it is defined in such a manner that we can determine for any given object <i class="one-letter">x</i> whether or not <i class="one-letter">x</i> belongs to the set. The objects that belong to a set are called its <dfn class="terminology">elements</dfn> or <dfn class="terminology">members</dfn>. We will denote sets by capital letters, such as <i class="one-letter">A</i> or <i class="one-letter">X</i>; if <i class="one-letter">a</i> is an element of the set <i class="one-letter">A</i>, we write <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth>. </p>
            <p id="VjS">A set is usually specified either by listing all of its elements inside a pair of braces or by stating the property that determines whether or not an object <i class="one-letter">x</i> belongs to the set. We might write</p>
            <div class="displaymath">
              <nemeth>⠠⠭⠀⠨⠅⠀⠨⠷⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">for a set containing elements <nemeth class="inline">⠭⠂⠠⠀⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠭⠰⠝⠐</nemeth> or</p>
            <div class="displaymath">
              <nemeth>⠠⠭⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠎⠁⠞⠊⠎⠋⠊⠑⠎⠈⠠⠏⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">if each <i class="one-letter">x</i> in <i class="one-letter">X</i> satisfies a certain property <nemeth class="inline">⠈⠠⠏</nemeth>. For example, if <i class="one-letter">E</i> is the set of even positive integers, we can describe <i class="one-letter">E</i> by writing either</p>
            <div class="displaymath">
              <nemeth>⠠⠑⠀⠨⠅⠀⠨⠷⠼⠆⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠄⠄⠄⠨⠾⠕⠗⠠⠑⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠊⠎⠀⠁⠝⠀⠑⠧⠑⠝⠀⠊⠝⠞⠑⠛⠑⠗⠀⠁⠝⠙⠭⠀⠨⠂⠀⠼⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. We write <nemeth class="inline">⠼⠆⠀⠈⠑⠀⠠⠑</nemeth> when we want to say that 2 is in the set <i class="one-letter">E</i>, and <nemeth class="inline">⠤⠼⠒⠀⠌⠈⠑⠀⠠⠑</nemeth> to say that <nemeth class="inline">⠤⠼⠒</nemeth> is not in the set <i class="one-letter">E</i>.</p>
            <p id="Brb">Some of the more important sets that we will consider are the following:</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠝⠀⠨⠅⠀⠨⠷⠝⠒⠀⠝⠊⠎⠀⠁⠀⠝⠁⠞⠥⠗⠁⠇⠀⠝⠥⠍⠃⠑⠗⠨⠾⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠄⠄⠄⠨⠾⠆⠀⠸⠠⠵⠀⠨⠅⠀⠨⠷⠝⠒⠀⠝⠊⠎⠀⠁⠝⠀⠊⠝⠞⠑⠛⠑⠗⠨⠾⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠨⠾⠆⠀⠸⠠⠟⠀⠨⠅⠀⠨⠷⠗⠒⠀⠗⠊⠎⠀⠁⠀⠗⠁⠞⠊⠕⠝⠁⠇⠀⠝⠥⠍⠃⠑⠗⠨⠾⠀⠨⠅⠀⠨⠷⠏⠸⠌⠟⠒⠀⠏⠠⠀⠟⠀⠈⠑⠀⠸⠠⠵⠺⠓⠑⠗⠑⠟⠀⠌⠨⠅⠀⠼⠴⠨⠾⠆⠀⠸⠠⠗⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠊⠎⠀⠁⠀⠗⠑⠁⠇⠀⠝⠥⠍⠃⠑⠗⠨⠾⠆⠀⠸⠠⠉⠀⠨⠅⠀⠨⠷⠵⠒⠀⠵⠊⠎⠀⠁⠀⠉⠕⠍⠏⠇⠑⠭⠀⠝⠥⠍⠃⠑⠗⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. </p>
            <p id="hyk">We can find various relations between sets as well as perform operations on sets. A set <i class="one-letter">A</i> is a <dfn class="terminology">subset</dfn> of <i class="one-letter">B</i>, written <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠃</nemeth> or <nemeth class="inline">⠠⠃⠀⠸⠨⠂⠀⠠⠁</nemeth>, if every element of <i class="one-letter">A</i> is also an element of <i class="one-letter">B</i>.  For example,</p>
            <div class="displaymath">
              <nemeth>⠨⠷⠼⠲⠠⠀⠼⠢⠠⠀⠼⠦⠨⠾⠀⠸⠐⠅⠀⠨⠷⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠖⠠⠀⠼⠶⠠⠀⠼⠦⠠⠀⠼⠔⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠝⠀⠸⠐⠅⠀⠸⠠⠵⠀⠸⠐⠅⠀⠸⠠⠟⠀⠸⠐⠅⠀⠸⠠⠗⠀⠸⠐⠅⠀⠸⠠⠉</nemeth>
            </div>
            <p data-braille="continuation">. Trivially, every set is a subset of itself. A set <i class="one-letter">B</i> is a <dfn class="terminology">proper subset</dfn> of a set <i class="one-letter">A</i> if <nemeth class="inline">⠠⠃⠀⠸⠐⠅⠀⠠⠁</nemeth> but <nemeth class="inline">⠠⠃⠀⠌⠨⠅⠀⠠⠁</nemeth>. If <i class="one-letter">A</i> is not a subset of <i class="one-letter">B</i>, we write <nemeth class="inline">⠠⠁⠀⠌⠸⠐⠅⠀⠠⠃</nemeth>; for example, <nemeth class="inline">⠨⠷⠼⠲⠠⠀⠼⠶⠠⠀⠼⠔⠨⠾⠀⠌⠸⠐⠅⠀⠨⠷⠼⠆⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠦⠠⠀⠼⠔⠨⠾</nemeth>. Two sets are <dfn class="terminology">equal</dfn>, written <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠠⠃</nemeth>, if we can show that <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠃</nemeth> and <nemeth class="inline">⠠⠃⠀⠸⠐⠅⠀⠠⠁</nemeth>.</p>
            <p id="NFt">It is convenient to have a set with no elements in it. This set is called the <dfn class="terminology">empty set</dfn> and is denoted by <nemeth class="inline">⠸⠴</nemeth>. Note that the empty set is a subset of every set. </p>
            <p id="tMC">To construct new sets out of old sets, we can perform certain operations: the <dfn class="terminology">union</dfn> <nemeth class="inline">⠠⠁⠨⠬⠠⠃</nemeth> of two sets <i class="one-letter">A</i> and <i class="one-letter">B</i> is defined as</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠕⠗⠭⠀⠈⠑⠀⠠⠃⠨⠾⠆</nemeth>
            </div>
            <p data-braille="continuation">the <dfn class="terminology">intersection</dfn> of <i class="one-letter">A</i> and <i class="one-letter">B</i>  is defined by</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠁⠝⠙⠭⠀⠈⠑⠀⠠⠃⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.  If <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠢⠨⠾</nemeth> and <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠔⠨⠾</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠢⠠⠀⠼⠔⠨⠾⠁⠝⠙⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠒⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. We can consider the union and the intersection of more than two sets. In this case we write</p>
            <div class="displaymath">
              <nemeth>⠐⠨⠬⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠠⠁⠰⠊⠐⠀⠨⠅⠀⠠⠁⠂⠨⠬⠄⠄⠄⠨⠬⠠⠁⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠐⠨⠩⠩⠊⠀⠨⠅⠀⠼⠂⠣⠝⠻⠠⠁⠰⠊⠐⠀⠨⠅⠀⠠⠁⠂⠨⠩⠄⠄⠄⠨⠩⠠⠁⠰⠝</nemeth>
            </div>
            <p data-braille="continuation">for the union and intersection, respectively, of the sets <nemeth class="inline">⠠⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠠⠁⠰⠝⠐</nemeth>.</p>
            <p id="ZTL">When two sets have no elements in common, they are said to be <dfn class="terminology">disjoint</dfn>; for example, if <i class="one-letter">E</i> is the set of even integers and <i class="one-letter">O</i> is the set of odd integers, then <i class="one-letter">E</i> and <i class="one-letter">O</i> are disjoint. Two sets <i class="one-letter">A</i> and <i class="one-letter">B</i> are disjoint exactly when <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠸⠴</nemeth>.</p>
            <p id="GaU">Sometimes we will work within one fixed set <i class="one-letter">U</i>, called the <dfn class="terminology">universal set</dfn>. For any set <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠥</nemeth>, we define the <dfn class="terminology">complement</dfn> of <i class="one-letter">A</i>, denoted by <nemeth class="inline">⠠⠁⠄</nemeth>, to be the set </p>
            <div class="displaymath">
              <nemeth>⠠⠁⠘⠄⠐⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠥⠁⠝⠙⠭⠀⠌⠈⠑⠀⠠⠁⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="mid">We define the <dfn class="terminology">difference</dfn> of two sets <i class="one-letter">A</i> and <i class="one-letter">B</i> to be </p>
            <div class="displaymath">
              <nemeth>⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠀⠨⠅⠀⠠⠁⠨⠩⠠⠃⠘⠄⠐⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠁⠝⠙⠭⠀⠌⠈⠑⠀⠠⠃⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="example example-like" data-braille="example-like" id="DBA">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="gew">Let <nemeth class="inline">⠸⠠⠗</nemeth> be the universal set and suppose that</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠴⠀⠐⠅⠀⠭⠀⠐⠅⠱⠀⠼⠒⠨⠾⠁⠝⠙⠠⠃⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠆⠀⠐⠅⠱⠀⠭⠀⠐⠅⠀⠼⠲⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠨⠩⠠⠃⠀⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠆⠀⠐⠅⠱⠀⠭⠀⠐⠅⠱⠀⠼⠒⠨⠾⠀⠠⠁⠨⠬⠠⠃⠀⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠴⠀⠐⠅⠀⠭⠀⠐⠅⠀⠼⠲⠨⠾⠀⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠀⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠼⠴⠀⠐⠅⠀⠭⠀⠐⠅⠀⠼⠆⠨⠾⠀⠠⠁⠄⠀⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠭⠀⠐⠅⠱⠀⠼⠴⠕⠗⠭⠀⠨⠂⠀⠼⠒⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="Xur">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="TQe">Let <i class="one-letter">A</i>, <i class="one-letter">B</i>, and <i class="one-letter">C</i> be sets. Then</p>
              <ol class="outerlist">
                <li>1. <p id="BTE"><nemeth class="inline">⠠⠁⠨⠬⠠⠁⠀⠨⠅⠀⠠⠁</nemeth>, <nemeth class="inline">⠠⠁⠨⠩⠠⠁⠀⠨⠅⠀⠠⠁</nemeth>, and <nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠀⠨⠅⠀⠸⠴</nemeth>;</p></li>
                <li>2. <p id="iaN"><nemeth class="inline">⠠⠁⠨⠬⠸⠴⠀⠨⠅⠀⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠸⠴⠀⠨⠅⠀⠸⠴</nemeth>;</p></li>
                <li>3. <p id="OhW"><nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠬⠠⠉</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠩⠠⠉</nemeth>;</p></li>
                <li>4. <p id="upf"><nemeth class="inline">⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠠⠃⠨⠬⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠠⠃⠨⠩⠠⠁</nemeth>;</p></li>
                <li>5. <p id="awo"><nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>;</p></li>
                <li>6. <p id="GDx"><nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠨⠩⠠⠉⠾</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="gsE">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="tyh">We will prove (1) and (3) and leave the remaining results to be proven in the exercises.</p>
              <p id="ZFq">(1) Observe that</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠨⠬⠠⠁⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠕⠗⠭⠀⠈⠑⠀⠠⠁⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠨⠾⠀⠀⠀⠀⠨⠅⠀⠠⠁</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠨⠩⠠⠁⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠁⠝⠙⠭⠀⠈⠑⠀⠠⠁⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠨⠾⠀⠀⠀⠀⠨⠅⠀⠠⠁</nemeth>
              </div>
              <p data-braille="continuation">. Also, <nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠀⠨⠅⠀⠠⠁⠨⠩⠠⠁⠘⠄⠐⠀⠨⠅⠀⠸⠴</nemeth>.</p>
              <p id="FMz">(3) For sets <i class="one-letter">A</i>, <i class="one-letter">B</i>, and <i class="one-letter">C</i>,</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠨⠬⠷⠠⠃⠨⠬⠠⠉⠾⠀⠀⠨⠅⠀⠠⠁⠨⠬⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠃⠕⠗⠭⠀⠈⠑⠀⠠⠉⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠕⠗⠭⠀⠈⠑⠀⠠⠃⠠⠀⠕⠗⠭⠀⠈⠑⠀⠠⠉⠨⠾⠀⠀⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠠⠁⠕⠗⠭⠀⠈⠑⠀⠠⠃⠨⠾⠨⠬⠠⠉⠀⠀⠀⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠬⠠⠉</nemeth>
              </div>
              <p data-braille="continuation">. A similar argument proves that  <nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠩⠠⠉</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="rni">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.3</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">De Morgan's Laws.</span>
              </h6>
              <p id="vnu">Let <i class="one-letter">A</i> and <i class="one-letter">B</i> be sets. Then</p>
              <ol class="outerlist">
                <li>1. <p id="mKG"><nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠨⠅⠀⠠⠁⠘⠄⠐⠨⠩⠠⠃⠄</nemeth>;</p></li>
                <li>2. <p id="SRP"><nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠘⠄⠐⠀⠨⠅⠀⠠⠁⠘⠄⠐⠨⠬⠠⠃⠄</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="HPU">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="lTI">(1) If <nemeth class="inline">⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠸⠴</nemeth>, then the theorem follows immediately since both <i class="one-letter">A</i> and <i class="one-letter">B</i> are the empty set. Otherwise, we must show that <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠸⠐⠅⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth> and <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠸⠨⠂⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth>. Let <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠄</nemeth>. Then <nemeth class="inline">⠭⠀⠌⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth>. So <i class="one-letter">x</i> is neither in <i class="one-letter">A</i> nor in <i class="one-letter">B</i>, by the definition of the union of sets. By the definition of the complement, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠄</nemeth> and <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠃⠄</nemeth>. Therefore, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth> and we have <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠸⠐⠅⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth>.</p>
              <p id="SaR">To show the reverse inclusion, suppose that <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth>. Then <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠄</nemeth> and <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠃⠄</nemeth>, and so <nemeth class="inline">⠭⠀⠌⠈⠑⠀⠠⠁</nemeth> and <nemeth class="inline">⠭⠀⠌⠈⠑⠀⠠⠃</nemeth>. Thus <nemeth class="inline">⠭⠀⠌⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth> and so <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠄</nemeth>. Hence, <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠸⠨⠂⠀⠠⠁⠄⠨⠩⠠⠃⠄</nemeth> and so <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠘⠄⠐⠀⠨⠅⠀⠠⠁⠘⠄⠐⠨⠩⠠⠃⠄</nemeth>.</p>
              <p id="yia">The proof of (2) is left as an exercise.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="jIJ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="MlF">Other relations between sets often hold true. For example,</p>
              <div class="displaymath">
                <nemeth>⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠨⠅⠀⠸⠴</nemeth>
              </div>
              <p data-braille="continuation">. To see that this is true, observe that</p>
              <div class="displaymath">
                <nemeth>⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠘⠄⠐⠾⠨⠩⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠀⠀⠀⠨⠅⠀⠠⠁⠨⠩⠠⠁⠘⠄⠐⠨⠩⠠⠃⠨⠩⠠⠃⠘⠄⠐⠀⠀⠀⠀⠨⠅⠀⠸⠴</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="pxV">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.2.2</span> <span class="title">Cartesian Products and Mappings</span></div>
            <p id="Spm">Given sets <i class="one-letter">A</i> and <i class="one-letter">B</i>, we can define a new set <nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth>, called the <dfn class="terminology">Cartesian product</dfn> of <i class="one-letter">A</i> and <i class="one-letter">B</i>, as a set of ordered pairs. That is, </p>
            <div class="displaymath">
              <nemeth>⠠⠁⠈⠡⠠⠃⠀⠨⠅⠀⠨⠷⠷⠁⠠⠀⠃⠾⠒⠀⠁⠀⠈⠑⠀⠠⠁⠁⠝⠙⠃⠀⠈⠑⠀⠠⠃⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="example example-like" data-braille="example-like" id="cek">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="ssO">If <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠨⠷⠭⠠⠀⠽⠨⠾</nemeth>, <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, and <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠸⠴</nemeth>, then <nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth> is the set</p>
              <div class="displaymath">
                <nemeth>⠨⠷⠷⠭⠠⠀⠼⠂⠾⠠⠀⠷⠭⠠⠀⠼⠆⠾⠠⠀⠷⠭⠠⠀⠼⠒⠾⠠⠀⠷⠽⠠⠀⠼⠂⠾⠠⠀⠷⠽⠠⠀⠼⠆⠾⠠⠀⠷⠽⠠⠀⠼⠒⠾⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠈⠡⠠⠉⠀⠨⠅⠀⠸⠴</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="ywv">We define the <dfn class="terminology">Cartesian product of <i class="one-letter">n</i> sets</dfn> to be</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠂⠈⠡⠄⠄⠄⠈⠡⠠⠁⠰⠝⠐⠀⠨⠅⠀⠨⠷⠷⠁⠂⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠒⠀⠁⠰⠊⠐⠀⠈⠑⠀⠠⠁⠰⠊⠐⠋⠕⠗⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠠⠁⠂⠀⠨⠅⠀⠠⠁⠆⠀⠨⠅⠀⠄⠄⠄⠀⠨⠅⠀⠠⠁⠰⠝</nemeth>, we often write <nemeth class="inline">⠠⠁⠘⠝</nemeth> for <nemeth class="inline">⠠⠁⠈⠡⠄⠄⠄⠈⠡⠠⠁</nemeth> (where <i class="one-letter">A</i> would be written <i class="one-letter">n</i> times).  For example, the set <nemeth class="inline">⠸⠠⠗⠘⠒</nemeth> consists of all of 3-tuples of real numbers.</p>
            <p id="eDE">Subsets of <nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth> are called <dfn class="terminology">relations</dfn>. We will define a  <dfn class="terminology">mapping</dfn> or <dfn class="terminology">function</dfn> <nemeth class="inline">⠋⠀⠸⠐⠅⠀⠠⠁⠈⠡⠠⠃</nemeth> from a set <i class="one-letter">A</i> to a set <i class="one-letter">B</i> to be the special type of relation where each element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> has a unique element <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> such that <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠋</nemeth>. Another way of saying this is that for every element in <i class="one-letter">A</i>, <i class="one-letter">f</i> assigns a unique element in <i class="one-letter">B</i>. We usually write <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> or <nemeth class="inline">⠠⠁⠐⠀⠫⠕⠀⠣⠋⠻⠠⠃</nemeth>. Instead of writing down ordered pairs  <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠁⠈⠡⠠⠃</nemeth>, we write <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth> or <nemeth class="inline">⠋⠒⠀⠁⠀⠫⠳⠒⠒⠕⠀⠃</nemeth>. The set  <i class="one-letter">A</i> is called the <dfn class="terminology">domain</dfn> of <i class="one-letter">f</i> and</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠠⠁⠾⠀⠨⠅⠀⠨⠷⠋⠷⠁⠾⠒⠀⠁⠀⠈⠑⠀⠠⠁⠨⠾⠀⠸⠐⠅⠀⠠⠃</nemeth>
            </div>
            <p data-braille="continuation">is called the <dfn class="terminology">range</dfn>  or <dfn class="terminology">image</dfn> of <i class="one-letter">f</i>. We can think of the elements in the function's domain as input values and the elements in the function's range as output values.</p>
            <article class="example example-like" data-braille="example-like" id="Ilt">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="YzX">Suppose <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth> and <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>. In Figure 1.2.7 we define relations <i class="one-letter">f</i> and <i class="one-letter">g</i> from <i class="one-letter">A</i> to <i class="one-letter">B</i>. The relation <i class="one-letter">f</i> is a mapping, but <i class="one-letter">g</i> is not because <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠁</nemeth> is not assigned to a unique element in <i class="one-letter">B</i>; that is, <nemeth class="inline">⠛⠷⠼⠂⠾⠀⠨⠅⠀⠁</nemeth> and <nemeth class="inline">⠛⠷⠼⠂⠾⠀⠨⠅⠀⠃</nemeth>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="EHg">
                <div data-braille="image">
                  <p>Image: Two sets of ovals, A and B, relating 1, 2, 3 to a, b, c.  The first mapping, f, sends 1 to b and 2 and 3 to c.  The second relation, g, sends 1 to a and b, 2 to c, and 3 to a</p>
                  <p>ID: sets-mappings</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">1.2.7<span class="period">.</span></span><span class="space"> </span>Mappings and relations</figcaption>
              </figure>
            </article>
            <p id="KKN">Given a function <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth>, it is often possible to write a list describing what the function does to each specific element in the domain. However, not all functions can be described in this manner. For example, the function <nemeth class="inline">⠋⠒⠀⠸⠠⠗⠀⠫⠕⠀⠸⠠⠗</nemeth> that sends each real number to its cube is a mapping that must be described by writing <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒</nemeth> or <nemeth class="inline">⠋⠒⠀⠭⠀⠫⠳⠒⠒⠕⠀⠭⠘⠒</nemeth>.</p>
            <p id="qRW">Consider the relation <nemeth class="inline">⠋⠒⠀⠸⠠⠟⠀⠫⠕⠀⠸⠠⠵</nemeth> given by <nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠏</nemeth>. We know that <nemeth class="inline">⠼⠂⠸⠌⠆⠀⠨⠅⠀⠼⠆⠸⠌⠲</nemeth>, but is <nemeth class="inline">⠋⠷⠂⠸⠌⠆⠾⠀⠨⠅⠀⠼⠂</nemeth> or <nemeth class="inline">⠼⠆</nemeth>? This relation cannot be a mapping because it is not well-defined. A relation is <dfn class="terminology">well-defined</dfn>  if each element in the domain is assigned to a <em class="emphasis">unique</em> element in the range.</p>
            <p id="WZf">If <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> is a map and the image of <i class="one-letter">f</i> is <i class="one-letter">B</i>, i.e., <nemeth class="inline">⠋⠷⠠⠁⠾⠀⠨⠅⠀⠠⠃</nemeth>, then <i class="one-letter">f</i> is said to be <dfn class="terminology">onto</dfn>  or <dfn class="terminology">surjective</dfn>.  In other words, if there exists an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> for each <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth>, then <i class="one-letter">f</i> is onto. A map is <dfn class="terminology">one-to-one</dfn> or <dfn class="terminology">injective</dfn> if <nemeth class="inline">⠁⠂⠀⠌⠨⠅⠀⠁⠆</nemeth> implies <nemeth class="inline">⠋⠷⠁⠂⠾⠀⠌⠨⠅⠀⠋⠷⠁⠆⠾</nemeth>. Equivalently, a function is one-to-one if <nemeth class="inline">⠋⠷⠁⠂⠾⠀⠨⠅⠀⠋⠷⠁⠆⠾</nemeth> implies <nemeth class="inline">⠁⠂⠀⠨⠅⠀⠁⠆</nemeth>. A map that is both one-to-one and onto is called <dfn class="terminology">bijective</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="osC">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="kOp">Let <nemeth class="inline">⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠟</nemeth> be defined by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠝⠸⠌⠂</nemeth>. Then <i class="one-letter">f</i> is one-to-one but not onto. Define <nemeth class="inline">⠛⠒⠀⠸⠠⠟⠀⠫⠕⠀⠸⠠⠵</nemeth> by <nemeth class="inline">⠛⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠏</nemeth> where <nemeth class="inline">⠏⠸⠌⠟</nemeth> is a rational number expressed in its lowest terms with a positive denominator. The function <i class="one-letter">g</i> is onto but not one-to-one.</p>
            </article>
            <p id="Dgo">Given two functions, we can construct a new function by using the range of the first function as the domain of the second function. Let <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> and <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> be mappings. Define a new map, the <dfn class="terminology">composition</dfn> of <i class="one-letter">f</i> and <i class="one-letter">g</i> from <i class="one-letter">A</i> to <i class="one-letter">C</i>, by <nemeth class="inline">⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾</nemeth>.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="PuG">
              <div data-braille="image">
                <p>Image: Two sets of ovals, A and B, relating 1, 2, 3 to a, b, c and a, b, c to X, Y, Z.  The first mapping, f, sends 1 to b, 2  2 to c, and 3 to a.  The second relation, g, sends a and b to Z and c to X.  The bottom map, g circle f, sends 1 and 3 to Z and 2 to X.</p>
                <p>ID: sets-composition</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">1.2.9<span class="period">.</span></span><span class="space"> </span>Composition of maps</figcaption>
            </figure>
            <article class="example example-like" data-braille="example-like" id="UzL">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="QVy">Consider the functions <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> and <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> that are defined in Figure 1.2.9 (top). The composition of these functions, <nemeth class="inline">⠛⠘⠨⠡⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠉</nemeth>, is defined in Figure 1.2.9 (bottom).</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="AGU">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="xcH">Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠼⠆⠭⠬⠢</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠷⠋⠘⠨⠡⠛⠾⠷⠭⠾⠀⠨⠅⠀⠋⠷⠛⠷⠭⠾⠾⠀⠨⠅⠀⠷⠼⠆⠭⠬⠢⠾⠘⠆⠐⠀⠨⠅⠀⠼⠲⠭⠘⠆⠐⠬⠆⠴⠭⠬⠆⠢</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠼⠆⠭⠘⠆⠐⠬⠢</nemeth>
              </div>
              <p data-braille="continuation">. In general, order makes a difference; that is, in most cases <nemeth class="inline">⠋⠘⠨⠡⠛⠀⠌⠨⠅⠀⠛⠘⠨⠡⠋</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="MVm">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.12</span>
                <span class="period">.</span>
              </h6>
              <p id="djQ">Sometimes it is the case that <nemeth class="inline">⠋⠘⠨⠡⠛⠀⠨⠅⠀⠛⠘⠨⠡⠋</nemeth>. Let <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠀⠨⠅⠀⠣⠒⠜⠭⠻</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠷⠋⠘⠨⠡⠛⠾⠷⠭⠾⠀⠨⠅⠀⠋⠷⠛⠷⠭⠾⠾⠀⠨⠅⠀⠋⠷⠣⠒⠜⠭⠻⠾⠀⠨⠅⠀⠷⠣⠒⠜⠭⠻⠾⠘⠒⠐⠀⠨⠅⠀⠭</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠛⠷⠭⠘⠒⠐⠾⠀⠨⠅⠀⠣⠒⠜⠭⠘⠒⠐⠻⠀⠨⠅⠀⠭</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="tcv">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.13</span>
                <span class="period">.</span>
              </h6>
              <p id="JqZ">Given a <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, we can define a map <nemeth class="inline">⠠⠞⠰⠠⠁⠐⠒⠀⠸⠠⠗⠘⠆⠐⠀⠫⠕⠀⠸⠠⠗⠘⠆</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠁⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠁⠭⠬⠃⠽⠠⠀⠉⠭⠬⠙⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">for <nemeth class="inline">⠷⠭⠠⠀⠽⠾</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>. This is actually matrix multiplication; that is,</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾⠭⠀⠽⠀⠨⠅⠀⠁⠭⠬⠃⠽⠀⠉⠭⠬⠙⠽</nemeth>
              </div>
              <p data-braille="continuation">. Maps from <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠍</nemeth> given by matrices are called <dfn class="terminology">linear maps</dfn> or <dfn class="terminology">linear transformations</dfn>. </p>
            </article>
            <article class="example example-like" data-braille="example-like" id="ZjE">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.14</span>
                <span class="period">.</span>
              </h6>
              <p id="pyi">Suppose that <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>. Define a map <nemeth class="inline">⠨⠏⠒⠀⠠⠎⠀⠫⠕⠀⠠⠎</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠏⠷⠼⠂⠾⠀⠨⠅⠀⠼⠆⠠⠀⠏⠷⠼⠆⠾⠀⠨⠅⠀⠼⠂⠠⠀⠏⠷⠼⠒⠾⠀⠨⠅⠀⠼⠒</nemeth>
              </div>
              <p data-braille="continuation">. This is a bijective map. An alternative way to  write <nemeth class="inline">⠨⠏</nemeth> is</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠏⠷⠼⠂⠾⠀⠏⠷⠼⠆⠾⠀⠏⠷⠼⠒⠾⠠⠾⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠆⠀⠂⠀⠒⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. For any set <i class="one-letter">S</i>, a one-to-one and onto mapping <nemeth class="inline">⠨⠏⠒⠀⠠⠎⠀⠫⠕⠀⠠⠎</nemeth> is called a <dfn class="terminology">permutation</dfn> of <i class="one-letter">S</i>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="PPS">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.15</span>
                <span class="period">.</span>
              </h6>
              <p id="buD">Let <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth>, <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth>, and <nemeth class="inline">⠓⠒⠀⠠⠉⠀⠫⠕⠀⠠⠙</nemeth>. Then</p>
              <ol class="outerlist">
                <li>1. <p id="yYY">The composition of mappings is associative; that is, <nemeth class="inline">⠷⠓⠘⠨⠡⠛⠾⠘⠨⠡⠋⠀⠨⠅⠀⠓⠘⠨⠡⠷⠛⠘⠨⠡⠋⠾</nemeth>;</p></li>
                <li>2. <p id="fgh">If <i class="one-letter">f</i> and <i class="one-letter">g</i> are both one-to-one, then the mapping <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one;</p></li>
                <li>3. <p id="Lnq">If <i class="one-letter">f</i> and <i class="one-letter">g</i> are both onto, then the mapping <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is onto;</p></li>
                <li>4. <p id="ruz">If <i class="one-letter">f</i> and <i class="one-letter">g</i> are bijective, then so is <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="nXd">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="epj">We will prove (1) and (3). Part (2) is left as an exercise. Part (4) follows directly from (2) and (3).</p>
              <p id="Kws">(1) We must show that</p>
              <div class="displaymath">
                <nemeth>⠓⠘⠨⠡⠷⠛⠘⠨⠡⠋⠾⠀⠨⠅⠀⠷⠓⠘⠨⠡⠛⠾⠘⠨⠡⠋</nemeth>
              </div>
              <p data-braille="continuation">. For <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> we have</p>
              <div class="displaymath">
                <nemeth>⠷⠓⠘⠨⠡⠷⠛⠘⠨⠡⠋⠾⠾⠷⠁⠾⠀⠀⠨⠅⠀⠓⠷⠷⠛⠘⠨⠡⠋⠾⠷⠁⠾⠾⠀⠀⠀⠀⠨⠅⠀⠓⠷⠛⠷⠋⠷⠁⠾⠾⠾⠀⠀⠀⠀⠨⠅⠀⠷⠓⠘⠨⠡⠛⠾⠷⠋⠷⠁⠾⠾⠀⠀⠀⠀⠨⠅⠀⠷⠷⠓⠘⠨⠡⠛⠾⠘⠨⠡⠋⠾⠷⠁⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <p id="qDB">(3) Assume that <i class="one-letter">f</i> and <i class="one-letter">g</i> are both onto functions. Given <nemeth class="inline">⠉⠀⠈⠑⠀⠠⠉</nemeth>, we must show that there exists an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> such that <nemeth class="inline">⠷⠛⠘⠨⠡⠋⠾⠷⠁⠾⠀⠨⠅⠀⠛⠷⠋⠷⠁⠾⠾⠀⠨⠅⠀⠉</nemeth>. However, since <i class="one-letter">g</i> is onto, there is an element <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth> such that <nemeth class="inline">⠛⠷⠃⠾⠀⠨⠅⠀⠉</nemeth>. Similarly, there is an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth>. Accordingly,</p>
              <div class="displaymath">
                <nemeth>⠷⠛⠘⠨⠡⠋⠾⠷⠁⠾⠀⠨⠅⠀⠛⠷⠋⠷⠁⠾⠾⠀⠨⠅⠀⠛⠷⠃⠾⠀⠨⠅⠀⠉</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="jnx">If <i class="one-letter">S</i> is any set, we will use <nemeth class="inline">⠊⠙⠰⠠⠎</nemeth> or <nemeth class="inline">⠊⠙</nemeth> to denote the <dfn class="terminology">identity mapping</dfn>  from <i class="one-letter">S</i> to itself. Define this map by <nemeth class="inline">⠊⠙⠷⠎⠾⠀⠨⠅⠀⠎</nemeth> for all <nemeth class="inline">⠎⠀⠈⠑⠀⠠⠎</nemeth>. A map <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠁</nemeth> is an <dfn class="terminology">inverse mapping</dfn> of <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> if <nemeth class="inline">⠛⠘⠨⠡⠋⠀⠨⠅⠀⠊⠙⠰⠠⠁</nemeth> and <nemeth class="inline">⠋⠘⠨⠡⠛⠀⠨⠅⠀⠊⠙⠰⠠⠃</nemeth>; in other words, the inverse function of a function simply “undoes” the function. A map is said to be <dfn class="terminology">invertible</dfn> if it has an inverse. We usually write <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth> for the inverse of <i class="one-letter">f</i>. </p>
            <article class="example example-like" data-braille="example-like" id="FqN">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.16</span>
                <span class="period">.</span>
              </h6>
              <p id="VFr">The function <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠒</nemeth> has inverse <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠭⠾⠀⠨⠅⠀⠣⠒⠜⠭⠻</nemeth> by Example 1.2.12.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="lxW">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.17</span>
                <span class="period">.</span>
              </h6>
              <p id="BMA">The natural logarithm and the exponential functions, <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠇⠝⠀⠭</nemeth> and <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠭⠾⠀⠨⠅⠀⠑⠘⠭</nemeth>, are inverses of each other provided that we are careful about choosing domains. Observe that</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠋⠘⠤⠼⠂⠐⠷⠭⠾⠾⠀⠨⠅⠀⠋⠷⠑⠘⠭⠐⠾⠀⠨⠅⠀⠇⠝⠀⠑⠘⠭⠐⠀⠨⠅⠀⠭</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠋⠘⠤⠼⠂⠐⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠋⠘⠤⠼⠂⠐⠷⠇⠝⠀⠭⠾⠀⠨⠅⠀⠑⠘⠇⠝⠀⠭⠐⠀⠨⠅⠀⠭</nemeth>
              </div>
              <p data-braille="continuation">whenever composition makes sense.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="RFf">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.18</span>
                <span class="period">.</span>
              </h6>
              <p id="hTJ">Suppose that</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠒⠀⠂⠠⠾⠀⠠⠷⠢⠀⠆⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then <i class="one-letter">A</i> defines a map from <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠁⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠼⠒⠭⠬⠽⠠⠀⠼⠢⠭⠬⠆⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">. We can find an inverse map of <nemeth class="inline">⠠⠞⠰⠠⠁</nemeth> by simply inverting the matrix <i class="one-letter">A</i>; that is, <nemeth class="inline">⠠⠞⠰⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠞⠰⠠⠁⠰⠘⠤⠼⠂</nemeth>. In this example,</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠼⠆⠀⠤⠼⠂⠠⠾⠀⠠⠷⠤⠼⠢⠀⠒⠠⠾⠆</nemeth>
              </div>
              <p data-braille="continuation">hence, the inverse map is given by</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠁⠘⠤⠼⠂⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠼⠆⠭⠤⠽⠠⠀⠤⠼⠢⠭⠬⠒⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">. It is easy to check that</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠁⠘⠤⠼⠂⠐⠘⠨⠡⠠⠞⠰⠠⠁⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠠⠞⠰⠠⠁⠐⠘⠨⠡⠠⠞⠰⠠⠁⠘⠤⠼⠂⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠭⠠⠀⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">. Not every map has an inverse. If we consider the map</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠃⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠼⠒⠭⠠⠀⠼⠴⠾</nemeth>
              </div>
              <p data-braille="continuation">given by the matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠃⠀⠨⠅⠀⠠⠷⠼⠒⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, then an inverse map would have to be of the form</p>
              <div class="displaymath">
                <nemeth>⠠⠞⠰⠠⠃⠘⠤⠼⠂⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠁⠭⠬⠃⠽⠠⠀⠉⠭⠬⠙⠽⠾</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠠⠞⠰⠠⠃⠐⠘⠨⠡⠠⠞⠰⠠⠃⠘⠤⠼⠂⠐⠷⠭⠠⠀⠽⠾⠀⠨⠅⠀⠷⠼⠒⠁⠭⠬⠒⠃⠽⠠⠀⠼⠴⠾</nemeth>
              </div>
              <p data-braille="continuation">for all <i class="one-letter">x</i> and <i class="one-letter">y</i>. Clearly this is  impossible because <i class="one-letter">y</i> might not be <nemeth class="inline">⠼⠴</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="xMo">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.19</span>
                <span class="period">.</span>
              </h6>
              <p id="OaS">Given the permutation</p>
              <div class="displaymath">
                <nemeth>⠨⠏⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠆⠀⠒⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">on <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, it is easy to see that the permutation defined by</p>
              <div class="displaymath">
                <nemeth>⠨⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠒⠀⠂⠀⠆⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">is the inverse of <nemeth class="inline">⠨⠏</nemeth>. In fact, any bijective mapping possesses an inverse, as we will see in the next theorem.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="vXb">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.20</span>
                <span class="period">.</span>
              </h6>
              <p id="HBM">A mapping is invertible if and only if it is both one-to-one and onto.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Uem">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="WKK">Suppose first that <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> is invertible with inverse <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠁</nemeth>. Then <nemeth class="inline">⠛⠘⠨⠡⠋⠀⠨⠅⠀⠊⠙⠰⠠⠁</nemeth> is the identity map; that is, <nemeth class="inline">⠛⠷⠋⠷⠁⠾⠾⠀⠨⠅⠀⠁</nemeth>. If <nemeth class="inline">⠁⠂⠠⠀⠁⠆⠀⠈⠑⠀⠠⠁</nemeth> with <nemeth class="inline">⠋⠷⠁⠂⠾⠀⠨⠅⠀⠋⠷⠁⠆⠾</nemeth>, then <nemeth class="inline">⠁⠂⠀⠨⠅⠀⠛⠷⠋⠷⠁⠂⠾⠾⠀⠨⠅⠀⠛⠷⠋⠷⠁⠆⠾⠾⠀⠨⠅⠀⠁⠆</nemeth>. Consequently, <i class="one-letter">f</i> is one-to-one. Now suppose that <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth>. To show that <i class="one-letter">f</i> is onto, it is necessary to find an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth>, but <nemeth class="inline">⠋⠷⠛⠷⠃⠾⠾⠀⠨⠅⠀⠃</nemeth> with <nemeth class="inline">⠛⠷⠃⠾⠀⠈⠑⠀⠠⠁</nemeth>. Let <nemeth class="inline">⠁⠀⠨⠅⠀⠛⠷⠃⠾</nemeth>.</p>
              <p id="CRT">Conversely, let <i class="one-letter">f</i> be bijective and let <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠃</nemeth>. Since <i class="one-letter">f</i> is onto, there exists an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠁</nemeth> such that <nemeth class="inline">⠋⠷⠁⠾⠀⠨⠅⠀⠃</nemeth>. Because <i class="one-letter">f</i> is one-to-one, <i class="one-letter">a</i> must be unique. Define <i class="one-letter">g</i> by letting <nemeth class="inline">⠛⠷⠃⠾⠀⠨⠅⠀⠁</nemeth>. We have now constructed the inverse of <i class="one-letter">f</i>.</p>
            </article>
          </section>
          <section class="subsection" id="VFe">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.2.3</span> <span class="title">Equivalence Relations and Partitions</span></div>
            <p id="vBP">A fundamental notion in mathematics is that of equality. We can generalize equality with equivalence relations and equivalence classes. An <dfn class="terminology">equivalence relation</dfn>  on a set <i class="one-letter">X</i> is a relation <nemeth class="inline">⠠⠗⠀⠸⠐⠅⠀⠠⠭⠈⠡⠠⠭</nemeth> such that</p>
            <ul class="outerlist">
              <li>• <p id="XBI"><nemeth class="inline">⠷⠭⠠⠀⠭⠾⠀⠈⠑⠀⠠⠗</nemeth> for all <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> (<dfn class="terminology">reflexive property</dfn>);</p></li>
              <li>• <p id="DIR"><nemeth class="inline">⠷⠭⠠⠀⠽⠾⠀⠈⠑⠀⠠⠗</nemeth> implies <nemeth class="inline">⠷⠽⠠⠀⠭⠾⠀⠈⠑⠀⠠⠗</nemeth> (<dfn class="terminology">symmetric property</dfn>);</p></li>
              <li>• <p id="jQa"><nemeth class="inline">⠷⠭⠠⠀⠽⠾</nemeth> and <nemeth class="inline">⠷⠽⠠⠀⠵⠾⠀⠈⠑⠀⠠⠗</nemeth> imply <nemeth class="inline">⠷⠭⠠⠀⠵⠾⠀⠈⠑⠀⠠⠗</nemeth> (<dfn class="terminology">transitive property</dfn>).</p></li>
            </ul>
            <p data-braille="continuation">Given an equivalence relation <i class="one-letter">R</i> on a set <i class="one-letter">X</i>, we usually write <nemeth class="inline">⠭⠈⠱⠽</nemeth> instead of <nemeth class="inline">⠷⠭⠠⠀⠽⠾⠀⠈⠑⠀⠠⠗</nemeth>. If the equivalence relation already has an associated notation such as <nemeth class="inline">⠀⠨⠅⠀</nemeth>, <nemeth class="inline">⠀⠸⠇⠀</nemeth>, or <nemeth class="inline">⠀⠈⠱⠈⠱⠀</nemeth>, we will use that notation.</p>
            <article class="example example-like" data-braille="example-like" id="qhP">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.21</span>
                <span class="period">.</span>
              </h6>
              <p id="uib">Let <i class="one-letter">p</i>, <i class="one-letter">q</i>, <i class="one-letter">r</i>, and <i class="one-letter">s</i> be integers, where <i class="one-letter">q</i> and <i class="one-letter">s</i> are nonzero. Define <nemeth class="inline">⠏⠸⠌⠟⠈⠱⠗⠸⠌⠎</nemeth> if <nemeth class="inline">⠏⠎⠀⠨⠅⠀⠟⠗</nemeth>. Clearly <nemeth class="inline">⠈⠱</nemeth> is reflexive and symmetric. To show that it is also transitive, suppose that <nemeth class="inline">⠏⠸⠌⠟⠈⠱⠗⠸⠌⠎</nemeth> and <nemeth class="inline">⠗⠸⠌⠎⠈⠱⠞⠸⠌⠥</nemeth>, with <i class="one-letter">q</i>, <i class="one-letter">s</i>, and <i class="one-letter">u</i> all nonzero. Then <nemeth class="inline">⠏⠎⠀⠨⠅⠀⠟⠗</nemeth> and <nemeth class="inline">⠗⠥⠀⠨⠅⠀⠎⠞</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠏⠎⠥⠀⠨⠅⠀⠟⠗⠥⠀⠨⠅⠀⠟⠎⠞</nemeth>
              </div>
              <p data-braille="continuation">. Since <nemeth class="inline">⠎⠀⠌⠨⠅⠀⠼⠴</nemeth>, <nemeth class="inline">⠏⠥⠀⠨⠅⠀⠟⠞</nemeth>. Consequently, <nemeth class="inline">⠏⠸⠌⠟⠈⠱⠞⠸⠌⠥</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="WoY">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.22</span>
                <span class="period">.</span>
              </h6>
              <p id="apk">Suppose that <i class="one-letter">f</i> and <i class="one-letter">g</i> are differentiable functions on <nemeth class="inline">⠸⠠⠗</nemeth>. We can define an equivalence relation on such functions by letting <nemeth class="inline">⠋⠷⠭⠾⠈⠱⠛⠷⠭⠾</nemeth> if <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠛⠘⠄⠐⠷⠭⠾</nemeth>. It is clear that <nemeth class="inline">⠈⠱</nemeth> is both reflexive and symmetric. To demonstrate transitivity, suppose that <nemeth class="inline">⠋⠷⠭⠾⠈⠱⠛⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠈⠱⠓⠷⠭⠾</nemeth>. From calculus we know that <nemeth class="inline">⠋⠷⠭⠾⠤⠛⠷⠭⠾⠀⠨⠅⠀⠉⠂</nemeth> and <nemeth class="inline">⠛⠷⠭⠾⠤⠓⠷⠭⠾⠀⠨⠅⠀⠉⠆</nemeth>, where <nemeth class="inline">⠉⠂</nemeth> and <nemeth class="inline">⠉⠆</nemeth> are both constants. Hence,</p>
              <div class="displaymath">
                <nemeth>⠋⠷⠭⠾⠤⠓⠷⠭⠾⠀⠨⠅⠀⠷⠋⠷⠭⠾⠤⠛⠷⠭⠾⠾⠬⠷⠛⠷⠭⠾⠤⠓⠷⠭⠾⠾⠀⠨⠅⠀⠉⠂⠬⠉⠆</nemeth>
              </div>
              <p data-braille="continuation">and <nemeth class="inline">⠋⠘⠄⠐⠷⠭⠾⠤⠓⠘⠄⠐⠷⠭⠾⠀⠨⠅⠀⠼⠴</nemeth>. Therefore, <nemeth class="inline">⠋⠷⠭⠾⠈⠱⠓⠷⠭⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Cwh">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.23</span>
                <span class="period">.</span>
              </h6>
              <p id="Gwt">For <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾</nemeth> and <nemeth class="inline">⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> in <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>, define <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠈⠱⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> if <nemeth class="inline">⠭⠂⠘⠆⠐⠬⠽⠂⠘⠆⠐⠀⠨⠅⠀⠭⠆⠘⠆⠐⠬⠽⠆⠘⠆</nemeth>. Then <nemeth class="inline">⠈⠱</nemeth> is an equivalence relation on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="iDq">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.24</span>
                <span class="period">.</span>
              </h6>
              <p id="mDC">Let <i class="one-letter">A</i> and <i class="one-letter">B</i> be <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with entries in the real numbers. We can define an equivalence relation on the set of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices, by saying <nemeth class="inline">⠠⠁⠈⠱⠠⠃</nemeth> if there exists an invertible matrix <i class="one-letter">P</i> such that <nemeth class="inline">⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠃</nemeth>. For example, if</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠠⠾⠀⠠⠷⠤⠼⠂⠀⠂⠠⠾⠁⠝⠙⠠⠃⠀⠨⠅⠀⠠⠷⠤⠼⠂⠦⠀⠒⠒⠠⠾⠀⠠⠷⠤⠼⠂⠂⠀⠆⠴⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, then <nemeth class="inline">⠠⠁⠈⠱⠠⠃</nemeth> since <nemeth class="inline">⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠃</nemeth> for</p>
              <div class="displaymath">
                <nemeth>⠠⠏⠀⠨⠅⠀⠠⠷⠼⠆⠀⠢⠠⠾⠀⠠⠷⠂⠀⠒⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Let <i class="one-letter">I</i> be the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> identity matrix; that is,</p>
              <div class="displaymath">
                <nemeth>⠠⠊⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then <nemeth class="inline">⠠⠊⠠⠁⠠⠊⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠊⠠⠁⠠⠊⠀⠨⠅⠀⠠⠁</nemeth>; therefore, the relation is reflexive. To show symmetry, suppose that <nemeth class="inline">⠠⠁⠈⠱⠠⠃</nemeth>. Then there exists an invertible matrix <i class="one-letter">P</i> such that <nemeth class="inline">⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠃</nemeth>. So</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠏⠘⠤⠼⠂⠐⠠⠃⠠⠏⠀⠨⠅⠀⠠⠏⠘⠤⠼⠂⠐⠠⠃⠷⠠⠏⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. Finally, suppose that <nemeth class="inline">⠠⠁⠈⠱⠠⠃</nemeth> and <nemeth class="inline">⠠⠃⠈⠱⠠⠉</nemeth>. Then there exist invertible matrices <i class="one-letter">P</i> and <i class="one-letter">Q</i> such that <nemeth class="inline">⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠃</nemeth> and  <nemeth class="inline">⠠⠟⠠⠃⠠⠟⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠉</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠠⠉⠀⠨⠅⠀⠠⠟⠠⠃⠠⠟⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠟⠠⠏⠠⠁⠠⠏⠘⠤⠼⠂⠐⠠⠟⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠠⠟⠠⠏⠾⠠⠁⠷⠠⠟⠠⠏⠾⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">, the relation is transitive. Two matrices that are equivalent in this manner are said to be <dfn class="terminology">similar</dfn>. </p>
            </article>
            <p id="bIY">A <dfn class="terminology">partition</dfn>  <nemeth class="inline">⠈⠠⠏</nemeth> of a set <i class="one-letter">X</i> is a collection of nonempty sets <nemeth class="inline">⠠⠭⠂⠠⠀⠠⠭⠆⠠⠀⠄⠄⠄</nemeth> such that <nemeth class="inline">⠠⠭⠰⠊⠐⠨⠩⠠⠭⠰⠚⠐⠀⠨⠅⠀⠸⠴</nemeth> for <nemeth class="inline">⠊⠀⠌⠨⠅⠀⠚</nemeth> and <nemeth class="inline">⠐⠨⠬⠩⠅⠻⠠⠭⠰⠅⠐⠀⠨⠅⠀⠠⠭</nemeth>. Let <nemeth class="inline">⠈⠱</nemeth> be an equivalence relation on a set <i class="one-letter">X</i> and let <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>. Then <nemeth class="inline">⠈⠷⠭⠈⠾⠀⠨⠅⠀⠨⠷⠽⠀⠈⠑⠀⠠⠭⠒⠀⠽⠈⠱⠭⠨⠾</nemeth> is called the <dfn class="terminology">equivalence class</dfn>  of <i class="one-letter">x</i>. We will see that an equivalence relation gives rise to a partition via equivalence classes. Also, whenever a partition of a set exists, there is some natural underlying equivalence relation, as the following theorem demonstrates.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="dTx">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.25</span>
                <span class="period">.</span>
              </h6>
              <p id="nIV">Given an equivalence relation <nemeth class="inline">⠈⠱</nemeth> on a set <i class="one-letter">X</i>, the equivalence classes of <i class="one-letter">X</i> form a partition of <i class="one-letter">X</i>. Conversely, if <nemeth class="inline">⠈⠠⠏⠀⠨⠅⠀⠨⠷⠠⠭⠰⠊⠐⠨⠾</nemeth> is a partition of a set <i class="one-letter">X</i>, then there is an equivalence relation on <i class="one-letter">X</i> with equivalence classes <nemeth class="inline">⠠⠭⠰⠊</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Alv">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="iZc">Suppose there exists an equivalence relation <nemeth class="inline">⠈⠱</nemeth> on the set <i class="one-letter">X</i>. For any <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>, the reflexive property shows that <nemeth class="inline">⠭⠀⠈⠑⠀⠈⠷⠭⠈⠾</nemeth> and so <nemeth class="inline">⠈⠷⠭⠈⠾</nemeth> is nonempty. Clearly <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠐⠨⠬⠩⠭⠀⠈⠑⠀⠠⠭⠻⠈⠷⠭⠈⠾</nemeth>. Now let <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠭</nemeth>. We need to show that either <nemeth class="inline">⠈⠷⠭⠈⠾⠀⠨⠅⠀⠈⠷⠽⠈⠾</nemeth> or <nemeth class="inline">⠈⠷⠭⠈⠾⠨⠩⠈⠷⠽⠈⠾⠀⠨⠅⠀⠸⠴</nemeth>. Suppose that the intersection of <nemeth class="inline">⠈⠷⠭⠈⠾</nemeth> and <nemeth class="inline">⠈⠷⠽⠈⠾</nemeth> is not empty and that <nemeth class="inline">⠵⠀⠈⠑⠀⠈⠷⠭⠈⠾⠨⠩⠈⠷⠽⠈⠾</nemeth>. Then <nemeth class="inline">⠵⠈⠱⠭</nemeth> and <nemeth class="inline">⠵⠈⠱⠽</nemeth>. By symmetry and transitivity <nemeth class="inline">⠭⠈⠱⠽</nemeth>; hence, <nemeth class="inline">⠈⠷⠭⠈⠾⠀⠸⠐⠅⠀⠈⠷⠽⠈⠾</nemeth>. Similarly, <nemeth class="inline">⠈⠷⠽⠈⠾⠀⠸⠐⠅⠀⠈⠷⠭⠈⠾</nemeth> and so <nemeth class="inline">⠈⠷⠭⠈⠾⠀⠨⠅⠀⠈⠷⠽⠈⠾</nemeth>. Therefore, any two equivalence classes are either disjoint or exactly the same.</p>
              <p id="Pgl">Conversely, suppose that <nemeth class="inline">⠈⠠⠏⠀⠨⠅⠀⠨⠷⠠⠭⠰⠊⠐⠨⠾</nemeth> is a partition of a set <i class="one-letter">X</i>. Let two elements be equivalent if they are in the same partition. Clearly, the relation is reflexive. If <i class="one-letter">x</i> is in the same partition as <i class="one-letter">y</i>, then <i class="one-letter">y</i> is in the same partition as <i class="one-letter">x</i>, so <nemeth class="inline">⠭⠈⠱⠽</nemeth> implies <nemeth class="inline">⠽⠈⠱⠭</nemeth>. Finally, if <i class="one-letter">x</i> is in the same partition as <i class="one-letter">y</i> and <i class="one-letter">y</i> is in the same partition as <i class="one-letter">z</i>, then <i class="one-letter">x</i> must be in the same partition as <i class="one-letter">z</i>, and transitivity holds.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="KaG">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.26</span>
                <span class="period">.</span>
              </h6>
              <p id="zXn">Two equivalence classes of an equivalence relation are either disjoint or equal.</p>
            </article>
            <p id="HQh">Let us examine some of the partitions given by the equivalence classes in the last set of examples.</p>
            <article class="example example-like" data-braille="example-like" id="OKz">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.27</span>
                <span class="period">.</span>
              </h6>
              <p id="SKL">In the equivalence relation in Example 1.2.21, two pairs of integers, <nemeth class="inline">⠷⠏⠠⠀⠟⠾</nemeth> and <nemeth class="inline">⠷⠗⠠⠀⠎⠾</nemeth>, are in the same equivalence class when they reduce to the same fraction in its lowest terms.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="uRI">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.28</span>
                <span class="period">.</span>
              </h6>
              <p id="yRU">In the equivalence relation in Example 1.2.22, two functions <nemeth class="inline">⠋⠷⠭⠾</nemeth> and <nemeth class="inline">⠛⠷⠭⠾</nemeth> are in the same partition when they differ by a constant.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="aYR">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.29</span>
                <span class="period">.</span>
              </h6>
              <p id="eZd">We defined an equivalence class on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> by <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠈⠱⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> if <nemeth class="inline">⠭⠂⠘⠆⠐⠬⠽⠂⠘⠆⠐⠀⠨⠅⠀⠭⠆⠘⠆⠐⠬⠽⠆⠘⠆</nemeth>. Two pairs of real numbers are in the same partition when they lie on the same circle about the origin.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Hga">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">1.2.30</span>
                <span class="period">.</span>
              </h6>
              <p id="Lgm">Let <i class="one-letter">r</i> and <i class="one-letter">s</i> be two integers and suppose that <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>. We say that <i class="one-letter">r</i> is <dfn class="terminology">congruent</dfn> to <i class="one-letter">s</i> <dfn class="terminology">modulo</dfn> <i class="one-letter">n</i>, or <i class="one-letter">r</i> is congruent to <i class="one-letter">s</i> mod <i class="one-letter">n</i>, if <nemeth class="inline">⠗⠤⠎</nemeth> is evenly divisible by <i class="one-letter">n</i>; that is, <nemeth class="inline">⠗⠤⠎⠀⠨⠅⠀⠝⠅</nemeth>  for some <nemeth class="inline">⠅⠀⠈⠑⠀⠸⠠⠵</nemeth>. In this case we write <nemeth class="inline">⠗⠀⠸⠇⠀⠎⠷⠍⠕⠙⠀⠝⠾</nemeth>.  For example, <nemeth class="inline">⠼⠲⠂⠀⠸⠇⠀⠼⠂⠶⠷⠍⠕⠙⠀⠦⠾</nemeth> since <nemeth class="inline">⠼⠲⠂⠤⠂⠶⠀⠨⠅⠀⠼⠆⠲</nemeth> is divisible by <nemeth class="inline">⠼⠦</nemeth>. We claim that congruence modulo <i class="one-letter">n</i> forms an equivalence relation of <nemeth class="inline">⠸⠠⠵</nemeth>. Certainly any integer <i class="one-letter">r</i> is equivalent to itself since <nemeth class="inline">⠗⠤⠗⠀⠨⠅⠀⠼⠴</nemeth> is divisible by <i class="one-letter">n</i>. We will now show that the relation is symmetric. If <nemeth class="inline">⠗⠀⠸⠇⠀⠎⠷⠍⠕⠙⠀⠝⠾</nemeth>, then <nemeth class="inline">⠗⠤⠎⠀⠨⠅⠀⠤⠷⠎⠤⠗⠾</nemeth> is divisible by <i class="one-letter">n</i>. So <nemeth class="inline">⠎⠤⠗</nemeth> is divisible by <i class="one-letter">n</i> and <nemeth class="inline">⠎⠀⠸⠇⠀⠗⠷⠍⠕⠙⠀⠝⠾</nemeth>. Now suppose that <nemeth class="inline">⠗⠀⠸⠇⠀⠎⠷⠍⠕⠙⠀⠝⠾</nemeth> and <nemeth class="inline">⠎⠀⠸⠇⠀⠞⠷⠍⠕⠙⠀⠝⠾</nemeth>. Then there exist integers <i class="one-letter">k</i> and <i class="one-letter">l</i> such that <nemeth class="inline">⠗⠤⠎⠀⠨⠅⠀⠅⠝</nemeth> and <nemeth class="inline">⠎⠤⠞⠀⠨⠅⠀⠇⠝</nemeth>. To show transitivity, it is necessary to prove that <nemeth class="inline">⠗⠤⠞</nemeth> is divisible by <i class="one-letter">n</i>. However,</p>
              <div class="displaymath">
                <nemeth>⠗⠤⠞⠀⠨⠅⠀⠗⠤⠎⠬⠎⠤⠞⠀⠨⠅⠀⠅⠝⠬⠇⠝⠀⠨⠅⠀⠷⠅⠬⠇⠾⠝</nemeth>
              </div>
              <p data-braille="continuation">, and so <nemeth class="inline">⠗⠤⠞</nemeth> is divisible by <i class="one-letter">n</i>.</p>
              <p id="rnv">If we consider the equivalence relation established by the integers modulo <nemeth class="inline">⠼⠒</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠼⠴⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠒⠠⠀⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠄⠄⠄⠨⠾⠠⠀⠈⠷⠂⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠆⠠⠀⠼⠂⠠⠀⠼⠲⠠⠀⠼⠶⠠⠀⠄⠄⠄⠨⠾⠠⠀⠈⠷⠆⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠆⠠⠀⠼⠢⠠⠀⠼⠦⠠⠀⠄⠄⠄⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Notice that <nemeth class="inline">⠈⠷⠼⠴⠈⠾⠨⠬⠈⠷⠂⠈⠾⠨⠬⠈⠷⠆⠈⠾⠀⠨⠅⠀⠸⠠⠵</nemeth> and also that the sets are disjoint. The sets <nemeth class="inline">⠈⠷⠼⠴⠈⠾</nemeth>, <nemeth class="inline">⠈⠷⠼⠂⠈⠾</nemeth>, and <nemeth class="inline">⠈⠷⠼⠆⠈⠾</nemeth> form a partition of the integers.</p>
              <p id="XuE">The integers modulo <i class="one-letter">n</i> are a very important example in the study of abstract algebra and will become quite useful in our investigation of various algebraic structures such as groups and rings. In our discussion of the integers modulo <i class="one-letter">n</i> we have actually assumed a result known as the division algorithm, which will be stated and proved in Chapter 2.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="ibN">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">1.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="Kix">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="OSq">What do relations and mappings have in common?</p>
          </article>
          <article class="exercise exercise-like" id="qpG">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="uZz">What makes relations and mappings different?</p>
          </article>
          <article class="exercise exercise-like" id="WwP">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="bgI">State carefully the three defining properties of an equivalence relation. In other words, do not just <em class="emphasis">name</em> the properties, give their definitions.</p>
          </article>
          <article class="exercise exercise-like" id="CDY">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="HnR">What is the big deal about equivalence relations? (Hint: Partitions.)</p>
          </article>
          <article class="exercise exercise-like" id="iLh">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="nva">Describe a general technique for proving that two sets are equal.</p>
          </article>
        </section>
        <section class="exercises" id="mDp">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">1.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="nnj">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="AHh">Suppose that</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠸⠠⠝⠁⠝⠙⠭⠊⠎⠀⠑⠧⠑⠝⠨⠾⠠⠀⠠⠃⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠸⠠⠝⠁⠝⠙⠭⠊⠎⠀⠏⠗⠊⠍⠑⠨⠾⠠⠀⠠⠉⠀⠀⠨⠅⠀⠨⠷⠭⠒⠀⠭⠀⠈⠑⠀⠸⠠⠝⠁⠝⠙⠭⠊⠎⠀⠁⠀⠍⠥⠇⠞⠊⠏⠇⠑⠀⠕⠋⠼⠢⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Describe each of the following sets.</p>
            <ol class="outerlist">
              <li>a. <p id="PXj"><nemeth class="inline">⠠⠁⠨⠩⠠⠃</nemeth></p></li>
              <li>b. <p id="wes"><nemeth class="inline">⠠⠃⠨⠩⠠⠉</nemeth></p></li>
              <li>c. <p id="clB"><nemeth class="inline">⠠⠁⠨⠬⠠⠃</nemeth></p></li>
              <li>d. <p id="IsK"><nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="sGW"><span class="type">Hint</span>:<p id="rIU">(a) <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠨⠷⠼⠆⠨⠾</nemeth>; (b) <nemeth class="inline">⠠⠃⠨⠩⠠⠉⠀⠨⠅⠀⠨⠷⠼⠢⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Tus">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="gOq">If <nemeth class="inline">⠠⠁⠀⠨⠅⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠨⠾</nemeth>, <nemeth class="inline">⠠⠃⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠉⠀⠨⠅⠀⠨⠷⠭⠨⠾</nemeth>, and <nemeth class="inline">⠠⠙⠀⠨⠅⠀⠸⠴</nemeth>, list all of the elements in each of the following sets.</p>
            <ol class="outerlist">
              <li>a. <p id="NcD"><nemeth class="inline">⠠⠁⠈⠡⠠⠃</nemeth></p></li>
              <li>b. <p id="tjM"><nemeth class="inline">⠠⠃⠈⠡⠠⠁</nemeth></p></li>
              <li>c. <p id="ZqV"><nemeth class="inline">⠠⠁⠈⠡⠠⠃⠈⠡⠠⠉</nemeth></p></li>
              <li>d. <p id="Fye"><nemeth class="inline">⠠⠁⠈⠡⠠⠙</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="EVo"><span class="type">Hint</span>:<p id="XQd">(a) <nemeth class="inline">⠠⠁⠈⠡⠠⠃⠀⠨⠅⠀⠨⠷⠷⠁⠠⠀⠼⠂⠾⠠⠀⠷⠁⠠⠀⠼⠆⠾⠠⠀⠷⠁⠠⠀⠼⠒⠾⠠⠀⠷⠃⠠⠀⠼⠂⠾⠠⠀⠷⠃⠠⠀⠼⠆⠾⠠⠀⠷⠃⠠⠀⠼⠒⠾⠠⠀⠷⠉⠠⠀⠼⠂⠾⠠⠀⠷⠉⠠⠀⠼⠆⠾⠠⠀⠷⠉⠠⠀⠼⠒⠾⠨⠾</nemeth>; (d) <nemeth class="inline">⠠⠁⠈⠡⠠⠙⠀⠨⠅⠀⠸⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="zBB">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="MVz">Find an example of two nonempty sets <i class="one-letter">A</i> and <i class="one-letter">B</i> for which <nemeth class="inline">⠠⠁⠈⠡⠠⠃⠀⠨⠅⠀⠠⠃⠈⠡⠠⠁</nemeth> is true.</p>
          </article>
          <article class="exercise exercise-like" id="fIK">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="tcI">Prove <nemeth class="inline">⠠⠁⠨⠬⠸⠴⠀⠨⠅⠀⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠸⠴⠀⠨⠅⠀⠸⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LPT">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ZjR">Prove <nemeth class="inline">⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠠⠃⠨⠬⠠⠁</nemeth> and <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠠⠃⠨⠩⠠⠁</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="rXc">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="Fra">Prove <nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="JFh"><span class="type">Hint</span>:<p id="DXm">If <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth>, then either <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth> or <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠃⠨⠩⠠⠉</nemeth>. Thus, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth> and <nemeth class="inline">⠠⠁⠨⠬⠠⠉</nemeth>. Hence, <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>. Therefore, <nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠸⠐⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>. Conversely, if <nemeth class="inline">⠭⠀⠈⠑⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>, then <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠠⠃</nemeth> and <nemeth class="inline">⠠⠁⠨⠬⠠⠉</nemeth>. Thus, <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth> or <i class="one-letter">x</i> is in both <i class="one-letter">B</i> and <i class="one-letter">C</i>. So <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth> and therefore <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾⠀⠸⠐⠅⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾</nemeth>. Hence, <nemeth class="inline">⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠉⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Yel">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="lyj">Prove <nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠨⠩⠠⠉⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Elu">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="RFs">Prove <nemeth class="inline">⠠⠁⠀⠸⠐⠅⠀⠠⠃</nemeth> if and only if <nemeth class="inline">⠠⠁⠨⠩⠠⠃⠀⠨⠅⠀⠠⠁</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ksD">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="xMB">Prove <nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠘⠄⠐⠀⠨⠅⠀⠠⠁⠘⠄⠐⠨⠬⠠⠃⠄</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="QzM">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="dTK">Prove <nemeth class="inline">⠠⠁⠨⠬⠠⠃⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠬⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Opa"><span class="type">Hint</span>:<p id="kev"><nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠬⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠨⠬⠷⠠⠁⠨⠩⠠⠃⠘⠄⠐⠾⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠈⠷⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠃⠘⠄⠐⠾⠈⠾⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠠⠁⠨⠬⠷⠠⠃⠨⠩⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠨⠩⠷⠠⠁⠨⠬⠠⠁⠘⠄⠐⠾⠀⠨⠅⠀⠠⠁⠨⠬⠠⠃</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="wGV">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="KaT">Prove <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠈⠡⠠⠉⠀⠨⠅⠀⠷⠠⠁⠈⠡⠠⠉⠾⠨⠬⠷⠠⠃⠈⠡⠠⠉⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="cOe">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="qic">Prove <nemeth class="inline">⠷⠠⠁⠨⠩⠠⠃⠾⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠀⠨⠅⠀⠸⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="IVn">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="Wpl">Prove <nemeth class="inline">⠷⠠⠁⠨⠬⠠⠃⠾⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠀⠨⠅⠀⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="pcw">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="Cwu">Prove <nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠉⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="SYT"><span class="type">Hint</span>:<p id="QlE"><nemeth class="inline">⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠃⠨⠬⠠⠉⠾⠀⠨⠅⠀⠠⠁⠨⠩⠷⠠⠃⠨⠬⠠⠉⠾⠘⠄⠐⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠁⠾⠨⠩⠷⠠⠃⠘⠄⠐⠨⠩⠠⠉⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠘⠄⠐⠾⠨⠩⠷⠠⠁⠨⠩⠠⠉⠘⠄⠐⠾⠀⠨⠅⠀⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠩⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠉⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="VjF">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="iDD">Prove <nemeth class="inline">⠠⠁⠨⠩⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠉⠾⠀⠨⠅⠀⠷⠠⠁⠨⠩⠠⠃⠾⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠁⠨⠩⠠⠉⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="BqO">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="OKM">Prove <nemeth class="inline">⠷⠠⠁⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠾⠨⠬⠷⠠⠃⠄⡳⠭⠆⠆⠂⠖⠄⠠⠁⠾⠀⠨⠅⠀⠷⠠⠁⠨⠬⠠⠃⠾⠄⡳⠭⠆⠆⠂⠖⠄⠷⠠⠁⠨⠩⠠⠃⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="hxX">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="uRV">Which of the following relations <nemeth class="inline">⠋⠒⠀⠸⠠⠟⠀⠫⠕⠀⠸⠠⠟</nemeth> define a mapping? In each case, supply a reason why <i class="one-letter">f</i> is or is not a mapping.</p>
            <ol class="outerlist">
              <li>a. <p id="KhX"><nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠹⠏⠬⠂⠌⠏⠤⠆⠼</nemeth></p></li>
              <li>b. <p id="qpg"><nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠹⠒⠏⠌⠒⠟⠼</nemeth></p></li>
              <li>c. <p id="Wwp"><nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠹⠏⠬⠟⠌⠟⠘⠆⠐⠼</nemeth></p></li>
              <li>d. <p id="CDy"><nemeth class="inline">⠋⠷⠏⠸⠌⠟⠾⠀⠨⠅⠀⠹⠒⠏⠘⠆⠐⠌⠶⠟⠘⠆⠐⠼⠤⠹⠏⠌⠟⠼</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="rBD"><span class="type">Hint</span>:<p id="wsN">(a) Not a map since <nemeth class="inline">⠋⠷⠆⠸⠌⠒⠾</nemeth> is undefined; (b) this is a map; (c) not a map, since <nemeth class="inline">⠋⠷⠂⠸⠌⠆⠾⠀⠨⠅⠀⠼⠒⠸⠌⠲</nemeth> but <nemeth class="inline">⠋⠷⠆⠸⠌⠲⠾⠀⠨⠅⠀⠼⠒⠸⠌⠦</nemeth>; (d) this is a map.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NFg">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="aZe">Determine which of the following functions are one-to-one and which are onto. If the function is not onto, determine its range.</p>
            <ol class="outerlist">
              <li>a. <p id="iKH"><nemeth class="inline">⠋⠒⠀⠸⠠⠗⠀⠫⠕⠀⠸⠠⠗</nemeth> defined by <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠑⠘⠭</nemeth></p></li>
              <li>b. <p id="ORQ"><nemeth class="inline">⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠵</nemeth> defined by <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠝⠘⠆⠐⠬⠒</nemeth></p></li>
              <li>c. <p id="uYZ"><nemeth class="inline">⠋⠒⠀⠸⠠⠗⠀⠫⠕⠀⠸⠠⠗</nemeth> defined by <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠎⠊⠝⠀⠭</nemeth></p></li>
              <li>d. <p id="bgi"><nemeth class="inline">⠋⠒⠀⠸⠠⠵⠀⠫⠕⠀⠸⠠⠵</nemeth> defined by <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠭⠘⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="DPV"><span class="type">Hint</span>:<p id="czW">(a) <i class="one-letter">f</i> is one-to-one but not onto. <nemeth class="inline">⠋⠷⠸⠠⠗⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠸⠠⠗⠒⠀⠭⠀⠨⠂⠀⠼⠴⠨⠾</nemeth>. (c) <i class="one-letter">f</i> is neither one-to-one nor onto. <nemeth class="inline">⠋⠷⠸⠠⠗⠾⠀⠨⠅⠀⠨⠷⠭⠒⠀⠤⠼⠂⠀⠐⠅⠱⠀⠭⠀⠐⠅⠱⠀⠼⠂⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="tMp">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="Hgn">Let <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> and <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> be invertible mappings; that is, mappings such that <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth> and <nemeth class="inline">⠛⠘⠤⠼⠂</nemeth> exist. Show that <nemeth class="inline">⠷⠛⠘⠨⠡⠋⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠋⠘⠤⠼⠂⠐⠘⠨⠡⠛⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ZTy">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <ol class="outerlist">
              <li>a. <p id="Hnr">Define a function <nemeth class="inline">⠋⠒⠀⠸⠠⠝⠀⠫⠕⠀⠸⠠⠝</nemeth> that is one-to-one but not onto.</p></li>
              <li>b. <p id="nuA">Define a function <nemeth class="inline">⠋⠒⠀⠸⠠⠝⠀⠫⠕⠀⠸⠠⠝</nemeth> that is onto but not one-to-one.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="wlw"><span class="type">Hint</span>:<p id="IHf">(a) <nemeth class="inline">⠋⠷⠝⠾⠀⠨⠅⠀⠝⠬⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GaH">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="TuF">Prove the relation defined on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> by <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠈⠱⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> if <nemeth class="inline">⠭⠂⠘⠆⠐⠬⠽⠂⠘⠆⠐⠀⠨⠅⠀⠭⠆⠘⠆⠐⠬⠽⠆⠘⠆</nemeth> is an equivalence relation.</p>
          </article>
          <article class="exercise exercise-like" id="mhQ">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="zBO">Let <nemeth class="inline">⠋⠒⠀⠠⠁⠀⠫⠕⠀⠠⠃</nemeth> and <nemeth class="inline">⠛⠒⠀⠠⠃⠀⠫⠕⠀⠠⠉</nemeth> be maps.</p>
            <ol class="outerlist">
              <li>a. <p id="TBJ">If <i class="one-letter">f</i> and <i class="one-letter">g</i> are both one-to-one functions, show that <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one.</p></li>
              <li>b. <p id="zIS">If <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is onto, show that <i class="one-letter">g</i> is onto.</p></li>
              <li>c. <p id="fQb">If <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one, show that <i class="one-letter">f</i> is one-to-one.</p></li>
              <li>d. <p id="LXk">If <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one and <i class="one-letter">f</i> is onto, show that <i class="one-letter">g</i> is one-to-one.</p></li>
              <li>e. <p id="set">If <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is onto and <i class="one-letter">g</i> is one-to-one, show that <i class="one-letter">f</i> is onto.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="oGX"><span class="type">Hint</span>:<p id="oOo">(a) Let <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠁</nemeth>. Then <nemeth class="inline">⠛⠷⠋⠷⠭⠾⠾⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠽⠾⠀⠨⠅⠀⠛⠷⠋⠷⠽⠾⠾</nemeth>. Thus, <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠋⠷⠽⠾</nemeth> and <nemeth class="inline">⠭⠀⠨⠅⠀⠽</nemeth>, so <nemeth class="inline">⠛⠘⠨⠡⠋</nemeth> is one-to-one. (b) Let <nemeth class="inline">⠉⠀⠈⠑⠀⠠⠉</nemeth>, then <nemeth class="inline">⠉⠀⠨⠅⠀⠷⠛⠘⠨⠡⠋⠾⠷⠭⠾⠀⠨⠅⠀⠛⠷⠋⠷⠭⠾⠾</nemeth> for some <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁</nemeth>. Since <nemeth class="inline">⠋⠷⠭⠾⠀⠈⠑⠀⠠⠃</nemeth>, <i class="one-letter">g</i> is onto.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="SoZ">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="fIX">Define a function on the real numbers by</p>
            <div class="displaymath">
              <nemeth>⠋⠷⠭⠾⠀⠨⠅⠀⠹⠭⠬⠂⠌⠭⠤⠂⠼</nemeth>
            </div>
            <p data-braille="continuation">. What are the domain and range of <i class="one-letter">f</i>? What is the inverse of <i class="one-letter">f</i>? Compute <nemeth class="inline">⠋⠘⠨⠡⠋⠘⠤⠼⠂</nemeth> and <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠘⠨⠡⠋</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="AVp"><span class="type">Hint</span>:<p id="UVx"><nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠭⠾⠀⠨⠅⠀⠷⠭⠬⠂⠾⠸⠌⠷⠭⠤⠂⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ywi">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="LQg">Let <nemeth class="inline">⠋⠒⠀⠠⠭⠀⠫⠕⠀⠠⠽</nemeth> be a map with <nemeth class="inline">⠠⠁⠂⠠⠀⠠⠁⠆⠀⠸⠐⠅⠀⠠⠭</nemeth> and <nemeth class="inline">⠠⠃⠂⠠⠀⠠⠃⠆⠀⠸⠐⠅⠀⠠⠽</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="cVv">Prove <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾⠀⠨⠅⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>.</p></li>
              <li>b. <p id="JcE">Prove <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠩⠠⠁⠆⠾⠀⠸⠐⠅⠀⠋⠷⠠⠁⠂⠾⠨⠩⠋⠷⠠⠁⠆⠾</nemeth>. Give an example in which equality fails.</p></li>
              <li>c. <p id="pjN">Prove <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠨⠬⠠⠃⠆⠾⠀⠨⠅⠀⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠾⠨⠬⠋⠘⠤⠼⠂⠐⠷⠠⠃⠆⠾</nemeth>, where</p><div class="displaymath"><nemeth>⠋⠘⠤⠼⠂⠐⠷⠠⠃⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠠⠭⠒⠀⠋⠷⠭⠾⠀⠈⠑⠀⠠⠃⠨⠾</nemeth></div><p data-braille="continuation">.</p></li>
              <li>d. <p id="VqW">Prove <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠨⠩⠠⠃⠆⠾⠀⠨⠅⠀⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠾⠨⠩⠋⠘⠤⠼⠂⠐⠷⠠⠃⠆⠾</nemeth>.</p></li>
              <li>e. <p id="Byf">Prove <nemeth class="inline">⠋⠘⠤⠼⠂⠐⠷⠠⠽⠄⡳⠭⠆⠆⠂⠖⠄⠠⠃⠂⠾⠀⠨⠅⠀⠠⠭⠄⡳⠭⠆⠆⠂⠖⠄⠋⠘⠤⠼⠂⠐⠷⠠⠃⠂⠾</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="NjH"><span class="type">Hint</span>:<p id="BcG">(a) Let <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾</nemeth>. Then there exists an <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠂⠨⠬⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Hence, <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾</nemeth> or <nemeth class="inline">⠋⠷⠠⠁⠆⠾</nemeth>. Therefore, <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>. Consequently, <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾⠀⠸⠐⠅⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>. Conversely, if <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>, then <nemeth class="inline">⠽⠀⠈⠑⠀⠋⠷⠠⠁⠂⠾</nemeth> or <nemeth class="inline">⠋⠷⠠⠁⠆⠾</nemeth>. Hence, there exists an <i class="one-letter">x</i> in <nemeth class="inline">⠠⠁⠂</nemeth> or <nemeth class="inline">⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Thus, there exists an <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠁⠂⠨⠬⠠⠁⠆</nemeth> such that <nemeth class="inline">⠋⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Therefore, <nemeth class="inline">⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾⠀⠸⠐⠅⠀⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾</nemeth>, and <nemeth class="inline">⠋⠷⠠⠁⠂⠨⠬⠠⠁⠆⠾⠀⠨⠅⠀⠋⠷⠠⠁⠂⠾⠨⠬⠋⠷⠠⠁⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="eDr">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="rXp">Determine whether or not the following relations are equivalence relations on the given set. If the relation is an equivalence relation, describe the partition given by it. If the relation is not an equivalence relation, state why it fails to be one.</p>
            <ol class="outerlist">
              <li>a. <p id="mph"><nemeth class="inline">⠭⠈⠱⠽</nemeth> in <nemeth class="inline">⠸⠠⠗</nemeth> if <nemeth class="inline">⠭⠀⠨⠂⠱⠀⠽</nemeth></p></li>
              <li>b. <p id="Swq"><nemeth class="inline">⠍⠈⠱⠝</nemeth> in <nemeth class="inline">⠸⠠⠵</nemeth> if <nemeth class="inline">⠍⠝⠀⠨⠂⠀⠼⠴</nemeth></p></li>
              <li>c. <p id="yDz"><nemeth class="inline">⠭⠈⠱⠽</nemeth> in <nemeth class="inline">⠸⠠⠗</nemeth> if <nemeth class="inline">⠳⠭⠤⠽⠳⠀⠐⠅⠱⠀⠼⠲</nemeth></p></li>
              <li>d. <p id="eKI"><nemeth class="inline">⠍⠈⠱⠝</nemeth> in <nemeth class="inline">⠸⠠⠵</nemeth> if <nemeth class="inline">⠍⠀⠸⠇⠀⠝⠷⠍⠕⠙⠀⠼⠖⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ZxZ"><span class="type">Hint</span>:<p id="hjP">(a) The relation fails to be symmetric. (b) The relation is not reflexive, since <nemeth class="inline">⠼⠴</nemeth> is not equivalent to itself. (c) The relation is not transitive.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="KKA">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="Yey">Define a relation <nemeth class="inline">⠈⠱</nemeth> on <nemeth class="inline">⠸⠠⠗⠘⠆</nemeth> by stating that <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠈⠱⠷⠉⠠⠀⠙⠾</nemeth> if and only if <nemeth class="inline">⠁⠘⠆⠐⠬⠃⠘⠆⠐⠀⠐⠅⠱⠀⠉⠘⠆⠐⠬⠙⠘⠆</nemeth>. Show that <nemeth class="inline">⠈⠱</nemeth> is reflexive and transitive but not symmetric.</p>
          </article>
          <article class="exercise exercise-like" id="qRJ">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="ElH">Show that an <nemeth class="inline">⠍⠈⠡⠝</nemeth> matrix gives rise to a well-defined map from <nemeth class="inline">⠸⠠⠗⠘⠝</nemeth> to <nemeth class="inline">⠸⠠⠗⠘⠍</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="WYS">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="ksQ">Find the error in the following argument by providing a counterexample. “The reflexive property is redundant in the axioms for an equivalence relation. If <nemeth class="inline">⠭⠈⠱⠽</nemeth>, then <nemeth class="inline">⠽⠈⠱⠭</nemeth> by the symmetric property. Using the transitive property, we can deduce that <nemeth class="inline">⠭⠈⠱⠭</nemeth>.”</p>
            <div class="solutions">
              <div class="hint solution-like" id="yaJ"><span class="type">Hint</span>:<p id="NqY">Let <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠸⠠⠝⠨⠬⠨⠷⠜⠆⠻⠨⠾</nemeth> and define <nemeth class="inline">⠭⠈⠱⠽</nemeth> if <nemeth class="inline">⠭⠬⠽⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Dgb">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Projective Real Line.</span>
            </h6>
            <p id="QzZ">Define a relation on <nemeth class="inline">⠸⠠⠗⠘⠆⠐⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠨⠾</nemeth> by letting <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠈⠱⠷⠭⠆⠠⠀⠽⠆⠾</nemeth> if there exists a nonzero real number <nemeth class="inline">⠨⠇</nemeth> such that <nemeth class="inline">⠷⠭⠂⠠⠀⠽⠂⠾⠀⠨⠅⠀⠷⠨⠇⠭⠆⠠⠀⠨⠇⠽⠆⠾</nemeth>. Prove that <nemeth class="inline">⠈⠱</nemeth> defines an equivalence relation on <nemeth class="inline">⠸⠠⠗⠘⠆⠐⠄⡳⠭⠆⠆⠂⠖⠄⠷⠼⠴⠠⠀⠼⠴⠾</nemeth>. What are the corresponding equivalence classes? This equivalence relation defines the projective line, denoted by <nemeth class="inline">⠸⠠⠏⠷⠸⠠⠗⠾</nemeth>, which is very important in geometry.</p>
          </article>
        </section>
        <section class="references" id="ztb">
          <div class="none"><span class="type">References</span> <span class="codenumber">1.5</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="fAk"><div class="bibitem">[1]</div>  <div class="bibentry"> Artin, M. <i>Algebra (Classic Version)</i>. 2nd ed. Pearson, Upper Saddle River, NJ, 2018.</div></article>
          <article class="bib" id="LHt"><div class="bibitem">[2]</div>  <div class="bibentry"> Childs, L. <i>A Concrete Introduction to Higher Algebra</i>. 2nd ed. Springer-Verlag, New York, 1995.</div></article>
          <article class="bib" id="rOC"><div class="bibitem">[3]</div>  <div class="bibentry"> Dummit, D. and Foote, R. <i>Abstract Algebra</i>. 3rd ed. Wiley, New York, 2003.</div></article>
          <article class="bib" id="XVL"><div class="bibitem">[4]</div>  <div class="bibentry"> Ehrlich, G. <i>Fundamental Concepts of Algebra</i>. PWS-KENT, Boston, 1991.</div></article>
          <article class="bib" id="EcU"><div class="bibitem">[5]</div>  <div class="bibentry"> Fraleigh, J. B. <i>A First Course in Abstract Algebra</i>. 7th ed. Pearson, Upper Saddle River, NJ, 2003.</div></article>
          <article class="bib" id="kkd"><div class="bibitem">[6]</div>  <div class="bibentry"> Gallian, J. A. <i>Contemporary Abstract Algebra</i>. 7th ed. Brooks/Cole, Belmont, CA, 2009.</div></article>
          <article class="bib" id="Qrm"><div class="bibitem">[7]</div>  <div class="bibentry"> Halmos, P. <i>Naive Set Theory</i>.  Springer, New York, 1991. One of the best references for set theory.</div></article>
          <article class="bib" id="wyv"><div class="bibitem">[8]</div>  <div class="bibentry"> Herstein, I. N. <i>Abstract Algebra</i>. 3rd ed. Wiley, New York, 1996.</div></article>
          <article class="bib" id="cFE"><div class="bibitem">[9]</div>  <div class="bibentry"> Hungerford, T. W. <i>Algebra</i>. Springer, New York, 1974. One of the standard graduate algebra texts.</div></article>
          <article class="bib" id="IMN"><div class="bibitem">[10]</div>  <div class="bibentry"> Lang, S. <i>Algebra</i>. 3rd ed. Springer, New York, 2002. Another standard graduate text.</div></article>
          <article class="bib" id="oTW"><div class="bibitem">[11]</div>  <div class="bibentry"> Lidl, R. and Pilz, G. <i>Applied Abstract Algebra</i>. 2nd ed. Springer, New York, 1998.</div></article>
          <article class="bib" id="Vbf"><div class="bibitem">[12]</div>  <div class="bibentry"> Mackiw, G. <i>Applications of Abstract Algebra</i>. Wiley, New York, 1985.</div></article>
          <article class="bib" id="Bio"><div class="bibitem">[13]</div>  <div class="bibentry"> Nickelson, W. K.  <i>Introduction to Abstract Algebra</i>. 3rd ed. Wiley, New York, 2006.</div></article>
          <article class="bib" id="hpx"><div class="bibitem">[14]</div>  <div class="bibentry"> Solow, D. <i>How to Read and Do Proofs</i>. 5th ed. Wiley, New York, 2009.</div></article>
          <article class="bib" id="NwG"><div class="bibitem">[15]</div>  <div class="bibentry"> van der Waerden, B. L. <i>A History of Algebra</i>. Springer-Verlag, New York, 1985. An account of the historical development of algebra.</div></article>
        </section>
        <section class="section" id="LfZ">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">1.6</span> <span class="title">Sage</span></div>
          <section class="introduction" id="bIL">
            <p id="osP">Sage is a powerful system for studying and exploring many different areas of mathematics. In this textbook, you will study a variety of algebraic structures, such as groups, rings and fields. Sage does an excellent job of implementing many features of these objects as we will see in the chapters ahead. But here and now, in this initial chapter, we will concentrate on a few general ways of getting the most out of working with Sage.</p>
            <p id="UzY">You may use Sage several different ways. It may be used as a command-line program when installed on your own computer. Or it might be a web application such as the SageMathCloud. Our writing will assume that you are reading this as a worksheet within the Sage Notebook (a web browser interface), or this is a section of the entire book presented as web pages, and you are employing the Sage Cell Server via those pages. After the first few chapters the explanations should work equally well for whatever vehicle you use to execute Sage commands.</p>
          </section>
          <section class="subsection" id="BMn">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.1</span> <span class="title">Executing Sage Commands</span></div>
            <p id="nXq">Most of your interaction will be by typing commands into a <em class="emphasis">compute cell</em>. If you are reading this in the Sage Notebook or as a webpage version of the book, then you will see a compute cell just below this paragraph. Click once inside the compute cell and if you are in the Sage Notebook, you will get a more distinctive border around it, a blinking cursor inside, plus a cute little “evaluate” link below.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"> 
</div>
            </article>
            <p id="Uez">At the cursor, type <code class="code-inline tex2jax_ignore">2+2</code> and then click on the evaluate link. Did a <code class="code-inline tex2jax_ignore">4</code> appear below the cell? If so, you have successfully sent a command off for Sage to evaluate and you have received back the (correct) answer.</p>
            <p id="AlI">Here is another compute cell. Try evaluating the command <code class="code-inline tex2jax_ignore">factorial(300)</code> here.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"> 
</div>
            </article>
            <p id="gsR">Hmmmmm. That is quite a big integer! If you see slashes at the end of each line, this means the result is continued onto the next line, since there are 615 total digits in the result.</p>
            <p id="MAa">To make new compute cells in the Sage Notebook (only), hover your mouse just above another compute cell, or just below some output from a compute cell. When you see a skinny blue bar across the width of your worksheet, click and you will open up a new compute cell, ready for input. Note that your worksheet will remember any calculations you make, in the order you make them, no matter where you put the cells, so it is best to stay organized and add new cells at the bottom.</p>
            <p id="sHj">Try placing your cursor just below the monstrous value of <nemeth class="inline">⠼⠒⠴⠴⠯</nemeth> that you have. Click on the blue bar and try another factorial computation in the new compute cell.</p>
            <p id="YOs">Each compute cell will show output due to only the very last command in the cell. Try to predict the following output before evaluating the cell.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 10
b = 6
b = b - 10
a = a + 20
a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">30
</div>
            </article>
            <p id="EVB">The following compute cell will not print anything since the one command does not create output. But it will have an effect, as you can see when you execute the subsequent cell. Notice how this uses the value of <code class="code-inline tex2jax_ignore">b</code> from above. Execute this compute cell <em class="emphasis">once</em>. Exactly once. Even if it <em class="emphasis">appears</em> to do nothing. If you execute the cell twice, your credit card may be charged twice.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = b + 50
</div>
            </article>
            <p id="lcK">Now execute this cell, which will produce some output.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b + 20
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">66
</div>
            </article>
            <p id="RjT">So <code class="code-inline tex2jax_ignore">b</code> came into existence as <code class="code-inline tex2jax_ignore">6</code>. We subtracted <nemeth class="inline">⠼⠂⠴</nemeth> immediately afterward. Then a subsequent cell added <code class="code-inline tex2jax_ignore">50</code>. This assumes you executed this cell <em class="emphasis">exactly</em> once! In the last cell we create <code class="code-inline tex2jax_ignore">b+20</code> (but do not save it) and it is this value (<nemeth class="inline">⠼⠖⠖</nemeth>) that is output, while <code class="code-inline tex2jax_ignore">b</code> is still <nemeth class="inline">⠼⠲⠖</nemeth>.</p>
            <p id="xrc">You can combine several commands on one line with a semi-colon. This is a great way to get multiple outputs from a compute cell. The syntax for building a matrix should be somewhat obvious when you see the output, but if not, it is not particularly important to understand now.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A = matrix([[3, 1], [5,2]]); A
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3 1]
[5 2]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">print(A); print(); print(A.inverse())
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3 1]
[5 2]
&lt;BLANKLINE&gt;
[ 2 -1]
[-5  3]
</div>
            </article>
          </section>
          <section class="subsection" id="hTw">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.2</span> <span class="title">Immediate Help</span></div>
            <p id="dyl">Some commands in Sage are “functions,” an example is <code class="code-inline tex2jax_ignore">factorial()</code> above. Other commands are “methods” of an object and are like characteristics of objects, an example is <code class="code-inline tex2jax_ignore">.inverse()</code> as a method of a matrix. Once you know how to create an object (such as a matrix), then it is easy to see all the available methods. Write the name of the object, place a period (“dot”) and hit the TAB key. If you have <code class="code-inline tex2jax_ignore">A</code> defined from above, then the compute cell below is ready to go, click into it and then hit TAB (not “evaluate”!). You should get a long list of possible methods.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.
</div>
            </article>
            <p id="JFu">To get some help on how to use a method with an object, write its name after a dot (with no parentheses) and then use a question-mark and hit TAB. (Hit the escape key “ESC” to remove the list, or click on the text for a method.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.inverse?
</div>
            </article>
            <p id="pMD">With one more question-mark and a TAB you can see the actual computer instructions that were programmed into Sage to make the method work, once you scoll down past the documentation delimited by the triple quotes (<code class="code-inline tex2jax_ignore">"""</code>):</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A.inverse??
</div>
            </article>
            <p id="VTM">It is worthwhile to see what Sage does when there is an error. You will probably see a lot of these at first, and initially they will be a bit intimidating. But with time, you will learn how to use them effectively and you will also become more proficient with Sage and see them less often. Execute the compute cell below, it asks for the inverse of a matrix that has no inverse. Then reread the commentary.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">B = matrix([[2, 20], [5, 50]])
B.inverse()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
ZeroDivisionError: matrix must be nonsingular
</div>
            </article>
            <p id="CaV">Click just to the left of the error message to expand it fully (another click hides it totally, and a third click brings back the abbreviated form). Read the bottom of an error message first, it is your best explanation. Here a <code class="code-inline tex2jax_ignore">ZeroDivisionError</code> is not 100% accurate, but is close. The matrix is not invertible, not dissimilar to how we cannot divide scalars by zero. The remainder of the message begins at the top showing were the error first happened in your code and then the various places where intermediate functions were called, until the actual piece of Sage where the problem occurred. Sometimes this information will give you some clues, sometimes it is totally undecipherable. So do not let it scare you if it seems mysterious, but do remember to always read the last line first, then go back and read the first few lines for something that looks like your code.</p>
          </section>
          <section class="subsection" id="OaF">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.3</span> <span class="title">Annotating Your Work</span></div>
            <p id="iie">It is easy to comment on your work when you use the Sage Notebook. (The following only applies if you are reading this within a Sage Notebook. If you are not, then perhaps you can go open up a worksheet in the Sage Notebook and experiment there.) You can open up a small word-processor by hovering your mouse until you get a skinny blue bar again, but now when you click, also hold the SHIFT key at the same time. Experiment with fonts, colors, bullet lists, etc and then click the “Save changes” button to exit. Double-click on your text if you need to go back and edit it later.</p>
            <p id="Opn">Open the word-processor again to create a new bit of text (maybe next to the empty compute cell just below). Type all of the following <em class="emphasis">exactly,</em></p>
            <pre class="code-block tex2jax_ignore">Pythagorean Theorem: $c^2=a^2+b^2$
</pre>
            <p data-braille="continuation">and save your changes. The symbols between the dollar signs are written according to the mathematical typesetting language known as <span class="latex-logo">T<span class="E">e</span>X</span> — cruise the internet to learn more about this very popular tool. (Well, it is extremely popular among mathematicians and physical scientists.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"> 
</div>
            </article>
          </section>
          <section class="subsection" id="uhO">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.4</span> <span class="title">Lists</span></div>
            <p id="uww">Much of our interaction with sets will be through Sage lists. These are not really sets — they allow duplicates, and order matters. But they are so close to sets, and so easy and powerful to use that we will use them regularly. We will use a fun made-up list for practice, the quote marks mean the items are just text, with no special mathematical meaning. Execute these compute cells as we work through them.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo = ['snake', 'parrot', 'elephant', 'baboon', 'beetle']
zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['snake', 'parrot', 'elephant', 'baboon', 'beetle']
</div>
            </article>
            <p id="aDF">So the square brackets define the boundaries of our list, commas separate items, and we can give the list a name. To work with just one element of the list, we use the name and a pair of brackets with an index. Notice that lists have indices that <em class="emphasis">begin counting at zero</em>. This will seem odd at first and will seem very natural later.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo[2]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">'elephant'
</div>
            </article>
            <p id="GKO">We can add a new creature to the zoo, it is joined up at the far right end.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo.append('ostrich'); zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['snake', 'parrot', 'elephant', 'baboon', 'beetle', 'ostrich']
</div>
            </article>
            <p id="mRX">We can remove a creature.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo.remove('parrot')
zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['snake', 'elephant', 'baboon', 'beetle', 'ostrich']
</div>
            </article>
            <p id="SZg">We can extract a sublist. Here we start with element 1 (the elephant) and go all the way up to, <em class="emphasis">but not including</em>, element 3 (the beetle). Again a bit odd, but it will feel natural later. For now, notice that we are extracting two elements of the lists, exactly <nemeth class="inline">⠼⠒⠤⠂⠀⠨⠅⠀⠼⠆</nemeth> elements.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">mammals = zoo[1:3]
mammals
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['elephant', 'baboon']
</div>
            </article>
            <p id="zgp">Often we will want to see if two lists are equal. To do that we will need to sort a list first. A function creates a new, sorted list, leaving the original alone. So we need to save the new one with a new name.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">newzoo = sorted(zoo)
newzoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['baboon', 'beetle', 'elephant', 'ostrich', 'snake']
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">zoo.sort()
zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['baboon', 'beetle', 'elephant', 'ostrich', 'snake']
</div>
            </article>
            <p id="fny">Notice that if you run this last compute cell your zoo has changed and some commands above will not necessarily execute the same way. If you want to experiment, go all the way back to the first creation of the zoo and start executing cells again from there with a fresh zoo.</p>
            <p id="LuH">A construction called a <dfn class="terminology">list comprehension</dfn> is especially powerful, especially since it almost exactly mirrors notation we use to describe sets. Suppose we want to form the plural of the names of the creatures in our zoo. We build a new list, based on all of the elements of our old list.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">plurality_zoo = [animal+'s' for animal in zoo]
plurality_zoo
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">['baboons', 'beetles', 'elephants', 'ostrichs', 'snakes']
</div>
            </article>
            <p id="rBQ">Almost like it says: we add an “s” to each animal name, for each animal in the zoo, and place them in a new list. Perfect. (Except for getting the plural of “ostrich” wrong.)</p>
          </section>
          <section class="subsection" id="aoX">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.5</span> <span class="title">Lists of Integers</span></div>
            <p id="XIZ">One final type of list, with numbers this time. The <code class="code-inline tex2jax_ignore">srange()</code> function will create lists of integers. (The “s” in the name stands for “Sage” and so will produce integers that Sage understands best. Many early difficulties with Sage and group theory can be alleviated by using only this command to create lists of integers.) In its simplest form an invocation like <code class="code-inline tex2jax_ignore">srange(12)</code> will create a list of 12 integers, <em class="emphasis">starting at zero</em> and working up to, <em class="emphasis">but not including</em>, 12. Does this sound familiar?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">dozen = srange(12); dozen
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
</div>
            </article>
            <p id="DQi">Here are two other forms, that you should be able to understand by studying the examples.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">teens = srange(13, 20); teens
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[13, 14, 15, 16, 17, 18, 19]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">decades = srange(1900, 2000, 10); decades
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990]
</div>
            </article>
          </section>
          <section class="subsection" id="Gwg">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">1.6.6</span> <span class="title">Saving and Sharing Your Work</span></div>
            <p id="jXr">There is a “Save” button in the upper-right corner of the Sage Notebook. This will save a current copy of your worksheet that you can retrieve your work from within your notebook again later, though you have to re-execute all the cells when you re-open the worksheet.</p>
            <p id="QeA">There is also a “File” drop-down list, on the left, just above your very top compute cell (not be confused with your browser's File menu item!). You will see a choice here labeled “Save worksheet to a file...” When you do this, you are creating a copy of your worksheet in the <code class="code-inline tex2jax_ignore">sws</code> format (short for “Sage WorkSheet”). You can email this file, or post it on a website, for other Sage users and they can use the “Upload” link on the homepage of their notebook to incorporate a copy of your worksheet into their notebook.</p>
            <p id="wlJ">There are other ways to share worksheets that you can experiment with, but this gives you one way to share any worksheet with anybody almost anywhere.</p>
            <p id="csS">We have covered a lot here in this section, so come back later to pick up tidbits you might have missed. There are also many more features in the Sage Notebook that we have not covered.</p>
          </section>
        </section>
        <section class="exercises" id="SKy">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">1.7</span> <span class="title">Sage Exercises</span></div>
          <article class="exercise exercise-like" id="jnk">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="wHi">This exercise is just about making sure you know how to use Sage. You may be using the Sage Notebook server the online CoCalc service through your web browser. In either event, create a new worksheet. Do some non-trivial computation, maybe a pretty plot or some gruesome numerical computation to an insane precision. Create an interesting list and experiment with it some. Maybe include some nicely formatted text or <span class="latex-logo">T<span class="E">e</span>X</span> using the included mini-word-processor of the Sage Notebook (hover until a blue bar appears between cells and then shift-click) or create commentary in cells within CoCalc using the <dfn class="terminology">magics</dfn> <code class="code-inline tex2jax_ignore">%html</code> or <code class="code-inline tex2jax_ignore">%md</code> on a line of their own followed by text in <abbr class="initialism">HTML</abbr> or Markdown syntax (respectively).</p>
            <p id="cOr">Use whatever mechanism your instructor has in place for submitting your work. Or save your worksheet and then trade with a classmate.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="mtY">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">2</span> <span class="title">The Integers</span></div>
        <section class="introduction" id="Ace">
          <p id="vVb">The integers are the building blocks of mathematics. In this chapter we will investigate the fundamental properties of the integers, including mathematical induction, the division algorithm, and the Fundamental Theorem of Arithmetic.</p>
        </section>
        <section class="section" id="bUT">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">2.1</span> <span class="title">Mathematical Induction</span></div>
          <p id="xoP">Suppose we wish to show that</p>
          <div class="displaymath">
            <nemeth>⠼⠂⠬⠆⠬⠄⠄⠄⠬⠝⠀⠨⠅⠀⠹⠝⠷⠝⠬⠂⠾⠌⠆⠼</nemeth>
          </div>
          <p data-braille="continuation">for any natural number <i class="one-letter">n</i>. This formula is easily  verified for small numbers such as <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, or <nemeth class="inline">⠼⠲</nemeth>, but it is impossible to verify for all natural numbers on a case-by-case basis. To prove the formula true in general, a more generic method is required.</p>
          <p id="dvY">Suppose we have verified the equation for the first <i class="one-letter">n</i> cases. We will attempt to show that we can generate the formula for the <nemeth class="inline">⠷⠝⠬⠂⠾</nemeth>th case from this knowledge. The formula is true for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth> since</p>
          <div class="displaymath">
            <nemeth>⠼⠂⠀⠨⠅⠀⠹⠂⠷⠂⠬⠂⠾⠌⠆⠼</nemeth>
          </div>
          <p data-braille="continuation">. If we have verified the first <i class="one-letter">n</i> cases, then</p>
          <div class="displaymath">
            <nemeth>⠼⠂⠬⠆⠬⠄⠄⠄⠬⠝⠬⠷⠝⠬⠂⠾⠀⠀⠨⠅⠀⠹⠝⠷⠝⠬⠂⠾⠌⠆⠼⠬⠝⠬⠂⠀⠀⠀⠀⠨⠅⠀⠹⠝⠘⠆⠐⠬⠒⠝⠬⠆⠌⠆⠼⠀⠀⠀⠀⠨⠅⠀⠹⠷⠝⠬⠂⠾⠈⠷⠷⠝⠬⠂⠾⠬⠂⠈⠾⠌⠆⠼</nemeth>
          </div>
          <p data-braille="continuation">. This is exactly the formula for the <nemeth class="inline">⠷⠝⠬⠂⠾</nemeth>th case.</p>
          <p id="JDh">This method of proof is known as <dfn class="terminology">mathematical induction</dfn>. Instead of attempting to verify a statement about some subset <i class="one-letter">S</i> of the positive integers <nemeth class="inline">⠸⠠⠝</nemeth> on a case-by-case basis, an impossible task if <i class="one-letter">S</i> is an infinite set, we give a specific proof for the smallest integer being considered, followed by a generic argument showing that if the statement holds for a given case, then it must also hold for the next case in the sequence. We summarize mathematical induction in the following axiom.</p>
          <article class="principle theorem-like" data-braille="theorem-like" id="Plc">
            <h6 class="heading">
              <span class="type">Principle</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.1</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">First Principle of Mathematical Induction.</span>
            </h6>
            <p id="yPH">Let <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> be a statement about integers for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth> and suppose <nemeth class="inline">⠠⠎⠷⠝⠴⠾</nemeth> is true for some integer <nemeth class="inline">⠝⠴</nemeth>. If for all integers <i class="one-letter">k</i> with <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠝⠴</nemeth>, <nemeth class="inline">⠠⠎⠷⠅⠾</nemeth> implies that <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true, then <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all integers <i class="one-letter">n</i> greater than or equal to <nemeth class="inline">⠝⠴</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="HGD">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.2</span>
              <span class="period">.</span>
            </h6>
            <p id="rli">For all integers <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>, <nemeth class="inline">⠼⠆⠘⠝⠐⠀⠨⠂⠀⠝⠬⠲</nemeth>. Since</p>
            <div class="displaymath">
              <nemeth>⠼⠦⠀⠨⠅⠀⠼⠆⠘⠒⠐⠀⠨⠂⠀⠼⠒⠬⠲⠀⠨⠅⠀⠼⠶</nemeth>
            </div>
            <p data-braille="continuation">, the statement is true for <nemeth class="inline">⠝⠴⠀⠨⠅⠀⠼⠒</nemeth>. Assume that <nemeth class="inline">⠼⠆⠘⠅⠐⠀⠨⠂⠀⠅⠬⠲</nemeth> for <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠼⠒</nemeth>. Then <nemeth class="inline">⠼⠆⠘⠅⠬⠂⠐⠀⠨⠅⠀⠼⠆⠡⠆⠘⠅⠐⠀⠨⠂⠀⠼⠆⠷⠅⠬⠲⠾</nemeth>. But</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠷⠅⠬⠲⠾⠀⠨⠅⠀⠼⠆⠅⠬⠦⠀⠨⠂⠀⠅⠬⠢⠀⠨⠅⠀⠷⠅⠬⠂⠾⠬⠲</nemeth>
            </div>
            <p data-braille="continuation">since <i class="one-letter">k</i> is positive. Hence, by induction, the statement holds for all integers <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="nNM">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.3</span>
              <span class="period">.</span>
            </h6>
            <p id="Xsr">Every integer <nemeth class="inline">⠼⠂⠴⠘⠝⠬⠂⠐⠬⠒⠡⠂⠴⠘⠝⠬⠢</nemeth> is divisible by <nemeth class="inline">⠼⠔</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>. For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>,</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠴⠘⠂⠬⠂⠐⠬⠒⠡⠂⠴⠬⠢⠀⠨⠅⠀⠼⠂⠒⠢⠀⠨⠅⠀⠼⠔⠡⠂⠢</nemeth>
            </div>
            <p data-braille="continuation">is divisible by <nemeth class="inline">⠼⠔</nemeth>. Suppose that <nemeth class="inline">⠼⠂⠴⠘⠅⠬⠂⠐⠬⠒⠡⠂⠴⠘⠅⠬⠢</nemeth> is divisible by <nemeth class="inline">⠼⠔</nemeth> for <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠼⠂</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠴⠘⠷⠅⠬⠂⠾⠬⠂⠐⠬⠒⠡⠂⠴⠘⠅⠬⠂⠬⠢⠀⠀⠨⠅⠀⠼⠂⠴⠘⠅⠬⠆⠐⠬⠒⠡⠂⠴⠘⠅⠬⠂⠐⠬⠢⠴⠤⠲⠢⠀⠀⠀⠀⠨⠅⠀⠼⠂⠴⠷⠂⠴⠘⠅⠬⠂⠐⠬⠒⠡⠂⠴⠘⠅⠐⠬⠢⠾⠤⠲⠢</nemeth>
            </div>
            <p data-braille="continuation">is divisible by <nemeth class="inline">⠼⠔</nemeth>.</p>
          </article>
          <article class="example example-like" data-braille="example-like" id="TUV">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.4</span>
              <span class="period">.</span>
            </h6>
            <p id="DzA">We will prove the binomial theorem using mathematical induction; that is,</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠾⠘⠝⠐⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠁⠘⠅⠐⠃⠘⠝⠤⠅</nemeth>
            </div>
            <p data-braille="continuation">, where <i class="one-letter">a</i> and <i class="one-letter">b</i> are real numbers, <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>, and</p>
            <div class="displaymath">
              <nemeth>⠝⠀⠅⠀⠨⠅⠀⠹⠝⠯⠌⠅⠖⠀⠷⠝⠤⠅⠾⠯⠼</nemeth>
            </div>
            <p data-braille="continuation">is the binomial coefficient.  We first show that</p>
            <div class="displaymath">
              <nemeth>⠝⠬⠂⠀⠅⠀⠨⠅⠀⠝⠀⠅⠬⠝⠀⠅⠤⠂</nemeth>
            </div>
            <p data-braille="continuation">. This result follows from</p>
            <div class="displaymath">
              <nemeth>⠝⠀⠅⠬⠝⠀⠅⠤⠂⠀⠀⠨⠅⠀⠹⠝⠯⠌⠅⠖⠀⠷⠝⠤⠅⠾⠯⠼⠬⠹⠝⠯⠌⠷⠅⠤⠂⠾⠖⠀⠷⠝⠤⠅⠬⠂⠾⠯⠼⠀⠀⠀⠀⠨⠅⠀⠹⠷⠝⠬⠂⠾⠯⠌⠅⠖⠀⠷⠝⠬⠂⠤⠅⠾⠯⠼⠀⠀⠀⠀⠨⠅⠀⠝⠬⠂⠀⠅</nemeth>
            </div>
            <p data-braille="continuation">. If <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth>, the binomial theorem is easy to verify. Now assume that the result is true for <i class="one-letter">n</i> greater than or equal to <nemeth class="inline">⠼⠂</nemeth>. Then</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠾⠘⠝⠬⠂⠀⠀⠨⠅⠀⠷⠁⠬⠃⠾⠷⠁⠬⠃⠾⠘⠝⠐⠀⠀⠀⠀⠨⠅⠀⠷⠁⠬⠃⠾⠷⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠁⠘⠅⠐⠃⠘⠝⠤⠅⠐⠾⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠁⠘⠅⠬⠂⠐⠃⠘⠝⠤⠅⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅⠐⠀⠀⠀⠀⠨⠅⠀⠁⠘⠝⠬⠂⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠝⠀⠅⠤⠂⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠝⠀⠅⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅⠐⠬⠃⠘⠝⠬⠂⠐⠀⠀⠀⠀⠨⠅⠀⠁⠘⠝⠬⠂⠐⠬⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠈⠷⠝⠀⠅⠤⠂⠬⠝⠀⠅⠈⠾⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅⠐⠬⠃⠘⠝⠬⠂⠐⠀⠀⠀⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠬⠂⠻⠝⠬⠂⠀⠅⠁⠘⠅⠐⠃⠘⠝⠬⠂⠤⠅</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="pKq">We have an equivalent statement of the Principle of Mathematical Induction that is often very useful.</p>
          <article class="principle theorem-like" data-braille="theorem-like" id="vsl">
            <h6 class="heading">
              <span class="type">Principle</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.5</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Second Principle of Mathematical Induction.</span>
            </h6>
            <p id="eWQ">Let <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> be a statement about integers for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth> and suppose <nemeth class="inline">⠠⠎⠷⠝⠴⠾</nemeth> is true for some integer <nemeth class="inline">⠝⠴</nemeth>. If <nemeth class="inline">⠠⠎⠷⠝⠴⠾⠠⠀⠠⠎⠷⠝⠴⠬⠂⠾⠠⠀⠄⠄⠄⠀⠠⠀⠠⠎⠷⠅⠾</nemeth> imply that <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> for <nemeth class="inline">⠅⠀⠨⠂⠱⠀⠝⠴</nemeth>, then the statement <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all integers <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠝⠴</nemeth>.</p>
          </article>
          <p id="VRz">A nonempty subset <i class="one-letter">S</i> of <nemeth class="inline">⠸⠠⠵</nemeth> is <dfn class="terminology">well-ordered</dfn>  if <i class="one-letter">S</i> contains a least element. Notice that the set <nemeth class="inline">⠸⠠⠵</nemeth> is not well-ordered since it does not contain a smallest element. However, the natural numbers are well-ordered.</p>
          <article class="principle theorem-like" data-braille="theorem-like" id="bzu">
            <h6 class="heading">
              <span class="type">Principle</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.6</span>
              <span class="period">.</span>
              <span class="space"> </span>
              <span class="title">Principle of Well-Ordering.</span>
            </h6>
            <p id="LdZ">Every nonempty subset of the natural numbers is well-ordered.</p>
          </article>
          <p id="BYI">The Principle of Well-Ordering is equivalent to the Principle of Mathematical Induction.</p>
          <article class="lemma theorem-like" data-braille="theorem-like" id="CWK">
            <h6 class="heading">
              <span class="type">Lemma</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.7</span>
              <span class="period">.</span>
            </h6>
            <p id="Gug">The Principle of Mathematical Induction implies that <nemeth class="inline">⠼⠂</nemeth> is the least positive natural number.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="xhy">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="Mjs">Let <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠝⠀⠈⠑⠀⠸⠠⠝⠒⠀⠝⠀⠨⠂⠱⠀⠼⠂⠨⠾</nemeth>. Then <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠎</nemeth>. Assume that <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠎</nemeth>. Since <nemeth class="inline">⠼⠴⠀⠐⠅⠀⠼⠂</nemeth>, it must be the case that <nemeth class="inline">⠝⠀⠨⠅⠀⠝⠬⠴⠀⠐⠅⠀⠝⠬⠂</nemeth>. Therefore, <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠝⠀⠐⠅⠀⠝⠬⠂</nemeth>. Consequently, if <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠎</nemeth>, then <nemeth class="inline">⠝⠬⠂</nemeth> must also be in <i class="one-letter">S</i>, and by the Principle of Mathematical Induction, and <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="theorem theorem-like" data-braille="theorem-like" id="KBj">
            <h6 class="heading">
              <span class="type">Theorem</span>
              <span class="space"> </span>
              <span class="codenumber">2.1.8</span>
              <span class="period">.</span>
            </h6>
            <p id="BKn">The Principle of Mathematical Induction implies the Principle of Well-Ordering. That is, every nonempty subset of <nemeth class="inline">⠸⠠⠝</nemeth> contains a least element.</p>
          </article>
          <article class="hiddenproof" data-braille="proof" id="sxF">
            <h6 class="heading">
              <span class="type">Proof<span class="period">.</span></span>
            </h6>
            <p id="sqB">We must show that if <i class="one-letter">S</i> is a nonempty subset of the natural numbers, then <i class="one-letter">S</i> contains a least element. If <i class="one-letter">S</i> contains 1, then the theorem is true by Lemma 2.1.7. Assume that if <i class="one-letter">S</i> contains an integer <i class="one-letter">k</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠱⠀⠝</nemeth>, then <i class="one-letter">S</i> contains a least element. We will show that if a set <i class="one-letter">S</i> contains an integer less than or equal to <nemeth class="inline">⠝⠬⠂</nemeth>, then <i class="one-letter">S</i> has a least element. If <i class="one-letter">S</i> does not contain an integer less than <nemeth class="inline">⠝⠬⠂</nemeth>, then <nemeth class="inline">⠝⠬⠂</nemeth> is the smallest integer in <i class="one-letter">S</i>. Otherwise, since <i class="one-letter">S</i> is nonempty, <i class="one-letter">S</i> must contain an integer less than or equal to <i class="one-letter">n</i>. In this case, by induction, <i class="one-letter">S</i> contains a least element.</p>
          </article>
          <p id="ifR">Induction can also be very useful in formulating definitions. For instance, there are two ways to define <nemeth class="inline">⠝⠯</nemeth>, the factorial of a positive integer <i class="one-letter">n</i>.</p>
          <ul class="outerlist">
            <li>• <p id="Dlf">The <em class="emphasis">explicit</em> definition: <nemeth class="inline">⠝⠖⠀⠀⠨⠅⠀⠼⠂⠡⠆⠡⠒⠀⠄⠄⠄⠀⠷⠝⠤⠂⠾⠡⠝</nemeth>.</p></li>
            <li>• <p id="jso">The <em class="emphasis">inductive</em> or <em class="emphasis">recursive</em> definition: <nemeth class="inline">⠼⠂⠖⠀⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠝⠖⠀⠀⠨⠅⠀⠝⠷⠝⠤⠂⠾⠯</nemeth> for <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth>.</p></li>
          </ul>
          <p data-braille="continuation">Every good mathematician or computer scientist knows that looking at problems recursively, as opposed to explicitly, often results in better understanding of complex issues.</p>
        </section>
        <section class="section" id="Icc">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">2.2</span> <span class="title">The Division Algorithm</span></div>
          <section class="introduction" id="gjn">
            <p id="cck">An application of the Principle of Well-Ordering that we will use often is the division algorithm.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="qIs">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.1</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Division Algorithm.</span>
              </h6>
              <p id="hRw">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be integers, with <nemeth class="inline">⠃⠀⠨⠂⠀⠼⠴</nemeth>. Then there exist unique integers <i class="one-letter">q</i> and <i class="one-letter">r</i> such that</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth>
              </div>
              <p data-braille="continuation">where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠃</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="YEO">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="YxK">This is a perfect example of the existence-and-uniqueness type of proof. We must first prove that the numbers <i class="one-letter">q</i> and <i class="one-letter">r</i> actually exist. Then we must show that if <nemeth class="inline">⠟⠄</nemeth> and <nemeth class="inline">⠗⠄</nemeth> are two other such numbers, then <nemeth class="inline">⠟⠀⠨⠅⠀⠟⠄</nemeth> and <nemeth class="inline">⠗⠀⠨⠅⠀⠗⠄</nemeth>.</p>
              <p id="EET"><em class="emphasis">Existence of <i class="one-letter">q</i> and <i class="one-letter">r</i>.</em> Let</p>
              <div class="displaymath">
                <nemeth>⠠⠎⠀⠨⠅⠀⠨⠷⠁⠤⠃⠅⠒⠀⠅⠀⠈⠑⠀⠸⠠⠵⠁⠝⠙⠁⠤⠃⠅⠀⠨⠂⠱⠀⠼⠴⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. If <nemeth class="inline">⠼⠴⠀⠈⠑⠀⠠⠎</nemeth>, then <i class="one-letter">b</i> divides <i class="one-letter">a</i>, and  we can let <nemeth class="inline">⠟⠀⠨⠅⠀⠁⠸⠌⠃</nemeth> and <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth>. If <nemeth class="inline">⠼⠴⠀⠌⠈⠑⠀⠠⠎</nemeth>, we can use the Well-Ordering Principle. We must first show that <i class="one-letter">S</i> is nonempty. If <nemeth class="inline">⠁⠀⠨⠂⠀⠼⠴</nemeth>, then <nemeth class="inline">⠁⠤⠃⠡⠴⠀⠈⠑⠀⠠⠎</nemeth>. If <nemeth class="inline">⠁⠀⠐⠅⠀⠼⠴</nemeth>, then <nemeth class="inline">⠁⠤⠃⠷⠼⠆⠁⠾⠀⠨⠅⠀⠁⠷⠂⠤⠆⠃⠾⠀⠈⠑⠀⠠⠎</nemeth>. In either case <nemeth class="inline">⠠⠎⠀⠌⠨⠅⠀⠸⠴</nemeth>. By the Well-Ordering Principle, <i class="one-letter">S</i> must have a smallest member, say <nemeth class="inline">⠗⠀⠨⠅⠀⠁⠤⠃⠟</nemeth>. Therefore, <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth>, <nemeth class="inline">⠗⠀⠨⠂⠱⠀⠼⠴</nemeth>. We now show that <nemeth class="inline">⠗⠀⠐⠅⠀⠃</nemeth>. Suppose that <nemeth class="inline">⠗⠀⠨⠂⠀⠃</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠁⠤⠃⠷⠟⠬⠂⠾⠀⠨⠅⠀⠁⠤⠃⠟⠤⠃⠀⠨⠅⠀⠗⠤⠃⠀⠨⠂⠀⠼⠴</nemeth>
              </div>
              <p data-braille="continuation">. In this case we would have <nemeth class="inline">⠁⠤⠃⠷⠟⠬⠂⠾</nemeth> in the set <i class="one-letter">S</i>. But then <nemeth class="inline">⠁⠤⠃⠷⠟⠬⠂⠾⠀⠐⠅⠀⠁⠤⠃⠟</nemeth>, which would contradict the fact that <nemeth class="inline">⠗⠀⠨⠅⠀⠁⠤⠃⠟</nemeth> is the smallest member  of <i class="one-letter">S</i>. So <nemeth class="inline">⠗⠀⠐⠅⠱⠀⠃</nemeth>. Since <nemeth class="inline">⠼⠴⠀⠌⠈⠑⠀⠠⠎</nemeth>, <nemeth class="inline">⠗⠀⠌⠨⠅⠀⠃</nemeth> and so <nemeth class="inline">⠗⠀⠐⠅⠀⠃</nemeth>.</p>
              <p id="kMc"><em class="emphasis">Uniqueness of <i class="one-letter">q</i> and <i class="one-letter">r</i>.</em> Suppose there exist integers <i class="one-letter">r</i>, <nemeth class="inline">⠗⠄</nemeth>, <i class="one-letter">q</i>, and <nemeth class="inline">⠟⠄</nemeth> such that</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠃⠟⠬⠗⠠⠀⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠃⠁⠝⠙⠁⠀⠨⠅⠀⠃⠟⠘⠄⠐⠬⠗⠘⠄⠐⠠⠀⠼⠴⠀⠐⠅⠱⠀⠗⠘⠄⠐⠀⠐⠅⠀⠃</nemeth>
              </div>
              <p data-braille="continuation">. Then <nemeth class="inline">⠃⠟⠬⠗⠀⠨⠅⠀⠃⠟⠘⠄⠐⠬⠗⠄</nemeth>. Assume that <nemeth class="inline">⠗⠘⠄⠐⠀⠨⠂⠱⠀⠗</nemeth>. From the last equation we have <nemeth class="inline">⠃⠷⠟⠤⠟⠘⠄⠐⠾⠀⠨⠅⠀⠗⠘⠄⠐⠤⠗</nemeth>; therefore, <i class="one-letter">b</i> must divide <nemeth class="inline">⠗⠘⠄⠐⠤⠗</nemeth> and <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠘⠄⠐⠤⠗⠀⠐⠅⠱⠀⠗⠘⠄⠐⠀⠐⠅⠀⠃</nemeth>. This is possible only if <nemeth class="inline">⠗⠘⠄⠐⠤⠗⠀⠨⠅⠀⠼⠴</nemeth>. Hence, <nemeth class="inline">⠗⠀⠨⠅⠀⠗⠄</nemeth> and  <nemeth class="inline">⠟⠀⠨⠅⠀⠟⠄</nemeth>.</p>
            </article>
            <p id="Ijt">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be integers. If <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠅</nemeth> for some integer <i class="one-letter">k</i>, we write <nemeth class="inline">⠁⠳⠃</nemeth>. An integer <i class="one-letter">d</i> is called a <dfn class="terminology">common divisor</dfn> of <i class="one-letter">a</i> and <i class="one-letter">b</i> if <nemeth class="inline">⠙⠳⠁</nemeth> and <nemeth class="inline">⠙⠳⠃</nemeth>. The <dfn class="terminology">greatest common divisor</dfn> of integers <i class="one-letter">a</i> and <i class="one-letter">b</i> is a positive integer <i class="one-letter">d</i> such that <i class="one-letter">d</i> is a common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> and if <nemeth class="inline">⠙⠄</nemeth> is any other common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>, then <nemeth class="inline">⠙⠘⠄⠐⠳⠙</nemeth>.  We write <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth>; for example, <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠆⠲⠠⠀⠼⠒⠖⠾⠀⠨⠅⠀⠼⠂⠆</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠂⠆⠴⠠⠀⠼⠂⠴⠆⠾⠀⠨⠅⠀⠼⠖</nemeth>. We say that two integers <i class="one-letter">a</i> and <i class="one-letter">b</i> are <dfn class="terminology">relatively prime</dfn> if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="WPB">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="NYF">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be nonzero integers. Then there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that</p>
              <div class="displaymath">
                <nemeth>⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠁⠗⠬⠃⠎</nemeth>
              </div>
              <p data-braille="continuation">. Furthermore, the greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> is unique.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ELX">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="QTl">Let</p>
              <div class="displaymath">
                <nemeth>⠠⠎⠀⠨⠅⠀⠨⠷⠁⠍⠬⠃⠝⠒⠀⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵⠁⠝⠙⠁⠍⠬⠃⠝⠀⠨⠂⠀⠼⠴⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. Clearly, the set <i class="one-letter">S</i> is nonempty; hence, by the Well-Ordering Principle <i class="one-letter">S</i> must have a smallest member, say <nemeth class="inline">⠙⠀⠨⠅⠀⠁⠗⠬⠃⠎</nemeth>. We claim that <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth>. Write <nemeth class="inline">⠁⠀⠨⠅⠀⠙⠟⠬⠗⠄</nemeth> where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠘⠄⠐⠀⠐⠅⠀⠙</nemeth>. If <nemeth class="inline">⠗⠘⠄⠐⠀⠨⠂⠀⠼⠴</nemeth>, then </p>
              <div class="displaymath">
                <nemeth>⠗⠄⠀⠀⠨⠅⠀⠁⠤⠙⠟⠀⠀⠀⠀⠨⠅⠀⠁⠤⠷⠁⠗⠬⠃⠎⠾⠟⠀⠀⠀⠀⠨⠅⠀⠁⠤⠁⠗⠟⠤⠃⠎⠟⠀⠀⠀⠀⠨⠅⠀⠁⠷⠂⠤⠗⠟⠾⠬⠃⠷⠤⠎⠟⠾</nemeth>
              </div>
              <p data-braille="continuation">, which is in <i class="one-letter">S</i>. But this would contradict the fact that <i class="one-letter">d</i> is the smallest member of <i class="one-letter">S</i>. Hence, <nemeth class="inline">⠗⠘⠄⠐⠀⠨⠅⠀⠼⠴</nemeth> and <i class="one-letter">d</i> divides <i class="one-letter">a</i>. A similar argument shows that <i class="one-letter">d</i> divides <i class="one-letter">b</i>. Therefore, <i class="one-letter">d</i> is a common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>.</p>
              <p id="xau">Suppose that <nemeth class="inline">⠙⠄</nemeth> is another common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>, and we want to show that <nemeth class="inline">⠙⠘⠄⠐⠳⠙</nemeth>. If we let <nemeth class="inline">⠁⠀⠨⠅⠀⠙⠘⠄⠐⠓</nemeth> and <nemeth class="inline">⠃⠀⠨⠅⠀⠙⠘⠄⠐⠅</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠙⠀⠨⠅⠀⠁⠗⠬⠃⠎⠀⠨⠅⠀⠙⠘⠄⠐⠓⠗⠬⠙⠘⠄⠐⠅⠎⠀⠨⠅⠀⠙⠘⠄⠐⠷⠓⠗⠬⠅⠎⠾</nemeth>
              </div>
              <p data-braille="continuation">. So <nemeth class="inline">⠙⠄</nemeth> must divide <i class="one-letter">d</i>. Hence, <i class="one-letter">d</i> must be the unique greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="jdT">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="SIy">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be two integers that are relatively prime. Then there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="SBh">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.2.1</span> <span class="title">The Euclidean Algorithm</span></div>
            <p id="mfQ">Among other things, Theorem 2.2.2 allows us to compute the greatest common divisor of two integers.</p>
            <article class="example example-like" data-braille="example-like" id="Uqu">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="jGJ">Let us compute the greatest common divisor of <nemeth class="inline">⠼⠔⠲⠢</nemeth> and <nemeth class="inline">⠼⠆⠲⠂⠢</nemeth>. First observe that</p>
              <div class="displaymath">
                <nemeth>⠼⠆⠲⠂⠢⠀⠀⠨⠅⠀⠼⠔⠲⠢⠡⠆⠬⠢⠆⠢⠀⠔⠲⠢⠀⠀⠨⠅⠀⠼⠢⠆⠢⠡⠂⠬⠲⠆⠴⠀⠢⠆⠢⠀⠀⠨⠅⠀⠼⠲⠆⠴⠡⠂⠬⠂⠴⠢⠀⠲⠆⠴⠀⠀⠨⠅⠀⠼⠂⠴⠢⠡⠲⠬⠴</nemeth>
              </div>
              <p data-braille="continuation">. Reversing our steps, <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides <nemeth class="inline">⠼⠲⠆⠴</nemeth>, <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides <nemeth class="inline">⠼⠢⠆⠢</nemeth>, <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides <nemeth class="inline">⠼⠔⠲⠢</nemeth>, and <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides <nemeth class="inline">⠼⠆⠲⠂⠢</nemeth>. Hence, <nemeth class="inline">⠼⠂⠴⠢</nemeth> divides both <nemeth class="inline">⠼⠔⠲⠢</nemeth> and <nemeth class="inline">⠼⠆⠲⠂⠢</nemeth>. If <i class="one-letter">d</i> were another common divisor of <nemeth class="inline">⠼⠔⠲⠢</nemeth> and <nemeth class="inline">⠼⠆⠲⠂⠢</nemeth>, then <i class="one-letter">d</i> would also have to divide <nemeth class="inline">⠼⠂⠴⠢</nemeth>. Therefore, <nemeth class="inline">⠛⠉⠙⠀⠷⠼⠔⠲⠢⠠⠀⠼⠆⠲⠂⠢⠾⠀⠨⠅⠀⠼⠂⠴⠢</nemeth>.</p>
              <p id="PNS">If we work backward through the above sequence of equations, we can also obtain numbers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠼⠔⠲⠢⠗⠬⠆⠲⠂⠢⠎⠀⠨⠅⠀⠼⠂⠴⠢</nemeth>. Observe that</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠴⠢⠀⠀⠨⠅⠀⠼⠢⠆⠢⠬⠷⠤⠼⠂⠾⠡⠲⠆⠴⠀⠀⠀⠀⠨⠅⠀⠼⠢⠆⠢⠬⠷⠤⠼⠂⠾⠡⠈⠷⠔⠲⠢⠬⠷⠤⠼⠂⠾⠡⠢⠆⠢⠈⠾⠀⠀⠀⠀⠨⠅⠀⠼⠆⠡⠢⠆⠢⠬⠷⠤⠼⠂⠾⠡⠔⠲⠢⠀⠀⠀⠀⠨⠅⠀⠼⠆⠡⠈⠷⠆⠲⠂⠢⠬⠷⠤⠼⠆⠾⠡⠔⠲⠢⠈⠾⠬⠷⠤⠼⠂⠾⠡⠔⠲⠢⠀⠀⠀⠀⠨⠅⠀⠼⠆⠡⠆⠲⠂⠢⠬⠷⠤⠼⠢⠾⠡⠔⠲⠢</nemeth>
              </div>
              <p data-braille="continuation">. So <nemeth class="inline">⠗⠀⠨⠅⠀⠤⠼⠢</nemeth> and <nemeth class="inline">⠎⠀⠨⠅⠀⠼⠆</nemeth>. Notice that <i class="one-letter">r</i> and <i class="one-letter">s</i> are not unique, since <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠲⠂</nemeth> and <nemeth class="inline">⠎⠀⠨⠅⠀⠤⠼⠂⠖</nemeth> would also work.</p>
            </article>
            <p id="SmZ">To compute <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠙</nemeth>, we are using repeated divisions to obtain a decreasing sequence of positive integers <nemeth class="inline">⠗⠂⠀⠨⠂⠀⠗⠆⠀⠨⠂⠀⠄⠄⠄⠀⠨⠂⠀⠗⠰⠝⠐⠀⠨⠅⠀⠙</nemeth>; that is,</p>
            <div class="displaymath">
              <nemeth>⠃⠀⠀⠨⠅⠀⠁⠟⠂⠬⠗⠂⠀⠁⠀⠀⠨⠅⠀⠗⠂⠟⠆⠬⠗⠆⠀⠗⠂⠀⠀⠨⠅⠀⠗⠆⠟⠒⠬⠗⠒⠀⠀⠀⠣⠄⠄⠄⠀⠗⠰⠝⠤⠆⠀⠀⠨⠅⠀⠗⠰⠝⠤⠂⠐⠟⠰⠝⠐⠬⠗⠰⠝⠐⠀⠗⠰⠝⠤⠂⠀⠀⠨⠅⠀⠗⠰⠝⠐⠟⠰⠝⠬⠂</nemeth>
            </div>
            <p data-braille="continuation">. To find <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠙</nemeth>, we begin with this last equation and substitute results obtained from the previous equations:</p>
            <div class="displaymath">
              <nemeth>⠙⠀⠀⠨⠅⠀⠗⠰⠝⠐⠀⠀⠀⠀⠨⠅⠀⠗⠰⠝⠤⠆⠐⠤⠗⠰⠝⠤⠂⠐⠟⠰⠝⠐⠀⠀⠀⠀⠨⠅⠀⠗⠰⠝⠤⠆⠐⠤⠟⠰⠝⠐⠷⠗⠰⠝⠤⠒⠐⠤⠟⠰⠝⠤⠂⠐⠗⠰⠝⠤⠆⠐⠾⠀⠀⠀⠀⠨⠅⠀⠤⠟⠰⠝⠐⠗⠰⠝⠤⠒⠐⠬⠷⠂⠬⠟⠰⠝⠐⠟⠰⠝⠤⠂⠐⠾⠗⠰⠝⠤⠆⠐⠀⠀⠀⠣⠄⠄⠄⠀⠀⠀⠀⠨⠅⠀⠗⠁⠬⠎⠃</nemeth>
            </div>
            <p data-braille="continuation">. The algorithm that we have just used to find the greatest common divisor <i class="one-letter">d</i> of two integers <i class="one-letter">a</i> and <i class="one-letter">b</i> and to write <i class="one-letter">d</i> as the linear combination of <i class="one-letter">a</i> and <i class="one-letter">b</i> is known as the <dfn class="terminology">Euclidean algorithm</dfn>. </p>
          </section>
          <section class="subsection" id="yIq">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.2.2</span> <span class="title">Prime Numbers</span></div>
            <p id="yui">Let <i class="one-letter">p</i> be an integer such that <nemeth class="inline">⠏⠀⠨⠂⠀⠼⠂</nemeth>. We say that <i class="one-letter">p</i> is a <dfn class="terminology">prime number</dfn>,  or simply <i class="one-letter">p</i> is <dfn class="terminology">prime</dfn>, if the only positive numbers that divide <i class="one-letter">p</i> are <nemeth class="inline">⠼⠂</nemeth> and <i class="one-letter">p</i> itself. An integer <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth> that is not prime is said to be <dfn class="terminology">composite</dfn>. </p>
            <article class="lemma theorem-like" data-braille="theorem-like" id="MLV">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.5</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Euclid.</span>
              </h6>
              <p id="mBp">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be integers and <i class="one-letter">p</i> be a prime number. If <nemeth class="inline">⠏⠳⠁⠃</nemeth>, then either <nemeth class="inline">⠏⠳⠁</nemeth> or <nemeth class="inline">⠏⠳⠃</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="doH">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="dhD">Suppose that <i class="one-letter">p</i> does not divide <i class="one-letter">a</i>. We must show that <nemeth class="inline">⠏⠳⠃</nemeth>. Since <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠏⠾⠀⠨⠅⠀⠼⠂</nemeth>, there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠏⠎⠀⠨⠅⠀⠼⠂</nemeth>. So</p>
              <div class="displaymath">
                <nemeth>⠃⠀⠨⠅⠀⠃⠷⠁⠗⠬⠏⠎⠾⠀⠨⠅⠀⠷⠁⠃⠾⠗⠬⠏⠷⠃⠎⠾</nemeth>
              </div>
              <p data-braille="continuation">. Since <i class="one-letter">p</i> divides both <nemeth class="inline">⠁⠃</nemeth> and itself, <i class="one-letter">p</i> must divide <nemeth class="inline">⠃⠀⠨⠅⠀⠷⠁⠃⠾⠗⠬⠏⠷⠃⠎⠾</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="AxD">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.6</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Euclid.</span>
              </h6>
              <p id="ufO">There exist an infinite number of primes.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="kTg">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="JoM">We will prove this theorem by contradiction. Suppose that there are only a finite number of primes, say <nemeth class="inline">⠏⠂⠠⠀⠏⠆⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠝⠐</nemeth>. Let <nemeth class="inline">⠠⠏⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠝⠐⠬⠂</nemeth>. Then <i class="one-letter">P</i> must be divisible by some <nemeth class="inline">⠏⠰⠊</nemeth> for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠊⠀⠐⠅⠱⠀⠝</nemeth>. In this case, <nemeth class="inline">⠏⠰⠊</nemeth> must divide <nemeth class="inline">⠠⠏⠤⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>, which is a contradiction. Hence, either <i class="one-letter">P</i> is prime or there exists an additional prime number <nemeth class="inline">⠏⠀⠌⠨⠅⠀⠏⠰⠊</nemeth> that divides <i class="one-letter">P</i>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="gEM">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">2.2.7</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">Fundamental Theorem of Arithmetic.</span>
              </h6>
              <p id="amX">Let <i class="one-letter">n</i> be an integer such that <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠂</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠅⠐</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠏⠂⠠⠀⠄⠄⠄⠀⠠⠀⠏⠰⠅⠐</nemeth> are  primes (not necessarily distinct). Furthermore, this factorization is unique; that is, if</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠨⠅⠀⠟⠂⠟⠆⠀⠄⠄⠄⠀⠟⠰⠇⠐</nemeth>
              </div>
              <p data-braille="continuation">, then <nemeth class="inline">⠅⠀⠨⠅⠀⠇</nemeth> and the <nemeth class="inline">⠟⠰⠊</nemeth>'s are just the <nemeth class="inline">⠏⠰⠊</nemeth>'s rearranged.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Rap">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="pvV"><em class="emphasis">Uniqueness.</em>  To show uniqueness we will use induction on <i class="one-letter">n</i>. The theorem is certainly true for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠆</nemeth> since in this case <i class="one-letter">n</i> is prime. Now assume that the result holds for all integers <i class="one-letter">m</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠍⠀⠐⠅⠀⠝</nemeth>, and</p>
              <div class="displaymath">
                <nemeth>⠝⠀⠨⠅⠀⠏⠂⠏⠆⠀⠄⠄⠄⠀⠏⠰⠅⠐⠀⠨⠅⠀⠟⠂⠟⠆⠀⠄⠄⠄⠀⠟⠰⠇⠐</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠏⠂⠀⠐⠅⠱⠀⠏⠆⠀⠐⠅⠱⠀⠄⠄⠄⠀⠐⠅⠱⠀⠏⠰⠅</nemeth> and <nemeth class="inline">⠟⠂⠀⠐⠅⠱⠀⠟⠆⠀⠐⠅⠱⠀⠄⠄⠄⠀⠐⠅⠱⠀⠟⠰⠇</nemeth>. By Lemma 2.2.5, <nemeth class="inline">⠏⠂⠳⠟⠰⠊</nemeth> for some <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠇</nemeth> and <nemeth class="inline">⠟⠂⠳⠏⠰⠚</nemeth> for some <nemeth class="inline">⠚⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠅</nemeth>. Since all of the <nemeth class="inline">⠏⠰⠊</nemeth>'s and <nemeth class="inline">⠟⠰⠊</nemeth>'s are prime, <nemeth class="inline">⠏⠂⠀⠨⠅⠀⠟⠰⠊</nemeth> and  <nemeth class="inline">⠟⠂⠀⠨⠅⠀⠏⠰⠚</nemeth>. Hence, <nemeth class="inline">⠏⠂⠀⠨⠅⠀⠟⠂</nemeth> since <nemeth class="inline">⠏⠂⠀⠐⠅⠱⠀⠏⠰⠚⠐⠀⠨⠅⠀⠟⠂⠀⠐⠅⠱⠀⠟⠰⠊⠐⠀⠨⠅⠀⠏⠂</nemeth>. By the induction hypothesis,</p>
              <div class="displaymath">
                <nemeth>⠝⠘⠄⠐⠀⠨⠅⠀⠏⠆⠀⠄⠄⠄⠀⠏⠰⠅⠐⠀⠨⠅⠀⠟⠆⠀⠄⠄⠄⠀⠟⠰⠇⠐</nemeth>
              </div>
              <p data-braille="continuation">has a unique factorization. Hence, <nemeth class="inline">⠅⠀⠨⠅⠀⠇</nemeth> and <nemeth class="inline">⠟⠰⠊⠐⠀⠨⠅⠀⠏⠰⠊</nemeth> for <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠅</nemeth>.</p>
              <p id="VDe"><em class="emphasis">Existence.</em> To show existence, suppose that there is some integer that cannot be written as the product of primes. Let <i class="one-letter">S</i> be the set of all such numbers. By the Principle of Well-Ordering, <i class="one-letter">S</i> has a smallest number, say <i class="one-letter">a</i>. If the only positive factors of <i class="one-letter">a</i> are <i class="one-letter">a</i> and <nemeth class="inline">⠼⠂</nemeth>, then <i class="one-letter">a</i> is prime, which is a contradiction. Hence, <nemeth class="inline">⠁⠀⠨⠅⠀⠁⠂⠁⠆</nemeth> where <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠁⠂⠀⠐⠅⠀⠁</nemeth> and <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠁⠆⠀⠐⠅⠀⠁</nemeth>. Neither <nemeth class="inline">⠁⠂⠀⠈⠑⠀⠠⠎</nemeth> nor <nemeth class="inline">⠁⠆⠀⠈⠑⠀⠠⠎</nemeth>, since <i class="one-letter">a</i> is the smallest element in <i class="one-letter">S</i>. So</p>
              <div class="displaymath">
                <nemeth>⠁⠂⠀⠀⠨⠅⠀⠏⠂⠀⠄⠄⠄⠀⠏⠰⠗⠐⠀⠁⠆⠀⠀⠨⠅⠀⠟⠂⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>
              </div>
              <p data-braille="continuation">. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠁⠂⠁⠆⠀⠨⠅⠀⠏⠂⠀⠄⠄⠄⠀⠏⠰⠗⠐⠟⠂⠀⠄⠄⠄⠀⠟⠰⠎⠐</nemeth>
              </div>
              <p data-braille="continuation">. So <nemeth class="inline">⠁⠀⠌⠈⠑⠀⠠⠎</nemeth>, which is a contradiction.</p>
            </article>
          </section>
          <section class="subsection" id="ePz">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.2.3</span> <span class="title">Historical Note</span></div>
            <p id="eBr">Prime numbers were first studied by the ancient Greeks. Two important results from antiquity are Euclid's proof that an infinite number of primes exist and the Sieve of Eratosthenes, a method of computing all of the prime numbers less than a fixed positive integer <i class="one-letter">n</i>. One problem in number theory is to find a function <i class="one-letter">f</i> such that <nemeth class="inline">⠋⠷⠝⠾</nemeth> is prime for each integer <i class="one-letter">n</i>. Pierre Fermat (1601?–1665) conjectured that <nemeth class="inline">⠼⠆⠘⠆⠘⠘⠝⠐⠬⠂</nemeth> was prime for all <i class="one-letter">n</i>, but later it was shown by Leonhard Euler (1707–1783) that</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠘⠆⠘⠘⠢⠐⠬⠂⠀⠨⠅⠀⠼⠲⠠⠆⠔⠲⠠⠔⠖⠶⠠⠆⠔⠶</nemeth>
            </div>
            <p data-braille="continuation">is a composite number. One of the many unproven conjectures about prime numbers is Goldbach's Conjecture. In a letter to Euler in 1742, Christian Goldbach stated the conjecture that every even integer with the exception of <nemeth class="inline">⠼⠆</nemeth> seemed to be the sum of two primes: <nemeth class="inline">⠼⠲⠀⠨⠅⠀⠼⠆⠬⠆</nemeth>, <nemeth class="inline">⠼⠖⠀⠨⠅⠀⠼⠒⠬⠒</nemeth>, <nemeth class="inline">⠼⠦⠀⠨⠅⠀⠼⠒⠬⠢</nemeth>, <nemeth class="inline">⠄⠄⠄</nemeth>. Although the conjecture has been verified for the numbers up through <nemeth class="inline">⠼⠲⠈⠡⠂⠴⠘⠂⠦</nemeth>, it has yet to be proven in general. Since prime numbers play an important role in public key cryptography, there is currently a great deal of interest in determining whether or not a large number is prime.</p>
            <article class="paragraphs" id="vNK">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="KIA">Sage's original purpose was to support research in number theory, so it is perfect for the types of computations with the integers that we have in this chapter.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="kWt">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">2.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="aSn">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="fCg">Use Sage to express <nemeth class="inline">⠼⠂⠆⠒⠲⠢⠖⠶⠔⠆</nemeth> as a product of prime numbers.</p>
          </article>
          <article class="exercise exercise-like" id="GZw">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="LJp">Find the greatest common divisor of <nemeth class="inline">⠼⠦⠲</nemeth> and <nemeth class="inline">⠼⠢⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ngF">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="rQy">Find integers <i class="one-letter">r</i> and <i class="one-letter">s</i> so that <nemeth class="inline">⠗⠷⠼⠦⠲⠾⠬⠎⠷⠼⠢⠆⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠼⠦⠲⠠⠀⠼⠢⠆⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="TnO">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="XXH">Explain the use of the term “induction hypothesis.”</p>
          </article>
          <article class="exercise exercise-like" id="zuX">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="EeQ">What is Goldbach's Conjecture? And why is it called a “conjecture”?</p>
          </article>
        </section>
        <section class="exercises" id="Dsj">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">2.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="sTe">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="AEU">Prove that</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠘⠆⠐⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠝⠘⠆⠐⠀⠨⠅⠀⠹⠝⠷⠝⠬⠂⠾⠷⠆⠝⠬⠂⠾⠌⠖⠼</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="pCZ"><span class="type">Hint</span>:<p id="iWP">The base case, <nemeth class="inline">⠠⠎⠷⠼⠂⠾⠒⠀⠈⠷⠼⠂⠷⠂⠬⠂⠾⠷⠆⠷⠂⠾⠬⠂⠾⠈⠾⠸⠌⠖⠀⠨⠅⠀⠼⠂⠀⠨⠅⠀⠼⠂⠘⠆</nemeth> is true. Assume that <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠼⠂⠘⠆⠐⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠅⠘⠆⠐⠀⠨⠅⠀⠈⠷⠅⠷⠅⠬⠂⠾⠷⠆⠅⠬⠂⠾⠈⠾⠸⠌⠖</nemeth> is true. Then</p><div class="displaymath"><nemeth>⠼⠂⠘⠆⠐⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠅⠘⠆⠐⠬⠷⠅⠬⠂⠾⠘⠆⠀⠀⠨⠅⠀⠈⠷⠅⠷⠅⠬⠂⠾⠷⠆⠅⠬⠂⠾⠈⠾⠸⠌⠖⠬⠷⠅⠬⠂⠾⠘⠆⠐⠀⠀⠀⠀⠨⠅⠀⠈⠷⠷⠅⠬⠂⠾⠷⠷⠅⠬⠂⠾⠬⠂⠾⠷⠆⠷⠅⠬⠂⠾⠬⠂⠾⠈⠾⠸⠌⠖</nemeth></div><p data-braille="continuation">, and so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Thus, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Zan">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="gMd">Prove that</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠘⠒⠐⠬⠆⠘⠒⠐⠬⠄⠄⠄⠬⠝⠘⠒⠐⠀⠨⠅⠀⠹⠝⠘⠆⠐⠷⠝⠬⠂⠾⠘⠆⠐⠌⠲⠼</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Fhw">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="MTm">Prove that <nemeth class="inline">⠝⠖⠀⠀⠨⠂⠀⠼⠆⠘⠝</nemeth> for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠲</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="hYA"><span class="type">Hint</span>:<p id="PdY">The base case, <nemeth class="inline">⠠⠎⠷⠼⠲⠾⠒⠀⠼⠲⠖⠀⠀⠨⠅⠀⠼⠆⠲⠀⠨⠂⠀⠼⠂⠖⠀⠨⠅⠀⠼⠆⠘⠲</nemeth> is true. Assume <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠅⠖⠀⠀⠨⠂⠀⠼⠆⠘⠅</nemeth> is true. Then <nemeth class="inline">⠷⠅⠬⠂⠾⠖⠀⠀⠨⠅⠀⠅⠖⠀⠷⠅⠬⠂⠾⠀⠨⠂⠀⠼⠆⠘⠅⠐⠡⠆⠀⠨⠅⠀⠼⠆⠘⠅⠬⠂</nemeth>, so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Thus, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="loF">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="tav">Prove that</p>
            <div class="displaymath">
              <nemeth>⠭⠬⠲⠭⠬⠶⠭⠬⠄⠄⠄⠬⠷⠒⠝⠤⠆⠾⠭⠀⠨⠅⠀⠹⠝⠷⠒⠝⠤⠂⠾⠭⠌⠆⠼</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="RvO">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ZhE">Prove that <nemeth class="inline">⠼⠂⠴⠘⠝⠬⠂⠐⠬⠂⠴⠘⠝⠐⠬⠂</nemeth> is divisible by <nemeth class="inline">⠼⠒</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="xCX">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="FoN">Prove that <nemeth class="inline">⠼⠲⠡⠂⠴⠘⠆⠝⠬⠔⠡⠂⠴⠘⠆⠝⠤⠂⠬⠢</nemeth> is divisible by <nemeth class="inline">⠼⠔⠔</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="dKg">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="lvW">Show that</p>
            <div class="displaymath">
              <nemeth>⠣⠝⠜⠁⠂⠁⠆⠀⠄⠄⠄⠀⠁⠰⠝⠐⠻⠀⠐⠅⠱⠀⠹⠂⠌⠝⠼⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠂⠣⠝⠻⠁⠰⠅</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="JRp">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="RDf">Prove the Leibniz rule for <nemeth class="inline">⠋⠘⠷⠝⠾⠐⠷⠭⠾</nemeth>, where <nemeth class="inline">⠋⠘⠷⠝⠾</nemeth> is the <i class="one-letter">n</i>th derivative of <i class="one-letter">f</i>; that is, show that</p>
            <div class="displaymath">
              <nemeth>⠷⠋⠛⠾⠘⠷⠝⠾⠐⠷⠭⠾⠀⠨⠅⠀⠐⠨⠠⠎⠩⠅⠀⠨⠅⠀⠼⠴⠣⠝⠻⠝⠀⠅⠋⠘⠷⠅⠾⠐⠷⠭⠾⠛⠘⠷⠝⠤⠅⠾⠐⠷⠭⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <div class="solutions">
              <div class="hint solution-like" id="SPC"><span class="type">Hint</span>:<p id="vlh">Follow the proof in Example 2.1.4.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="pYy">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="xKo">Use induction to prove that <nemeth class="inline">⠼⠂⠬⠆⠬⠆⠘⠆⠐⠬⠄⠄⠄⠬⠆⠘⠝⠐⠀⠨⠅⠀⠼⠆⠘⠝⠬⠂⠐⠤⠂</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="WfH">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="dRx">Prove that</p>
            <div class="displaymath">
              <nemeth>⠹⠂⠌⠆⠼⠬⠹⠂⠌⠖⠼⠬⠄⠄⠄⠬⠹⠂⠌⠝⠷⠝⠬⠂⠾⠼⠀⠨⠅⠀⠹⠝⠌⠝⠬⠂⠼</nemeth>
            </div>
            <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="CmQ">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="JYG">If <i class="one-letter">x</i> is a nonnegative real number, then show that <nemeth class="inline">⠷⠼⠂⠬⠭⠾⠘⠝⠐⠤⠂⠀⠨⠂⠱⠀⠝⠭</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="rsm"><span class="type">Hint</span>:<p id="bsq">The base case, <nemeth class="inline">⠠⠎⠷⠼⠴⠾⠒⠀⠷⠼⠂⠬⠭⠾⠘⠴⠐⠤⠂⠀⠨⠅⠀⠼⠴⠀⠨⠂⠱⠀⠼⠴⠀⠨⠅⠀⠼⠴⠡⠭</nemeth> is true. Assume <nemeth class="inline">⠠⠎⠷⠅⠾⠒⠀⠷⠼⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠨⠂⠱⠀⠅⠭</nemeth> is true. Then</p><div class="displaymath"><nemeth>⠷⠼⠂⠬⠭⠾⠘⠅⠬⠂⠐⠤⠂⠀⠀⠨⠅⠀⠷⠼⠂⠬⠭⠾⠷⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠀⠀⠀⠨⠅⠀⠷⠼⠂⠬⠭⠾⠘⠅⠐⠬⠭⠷⠂⠬⠭⠾⠘⠅⠐⠤⠂⠀⠀⠀⠀⠨⠂⠱⠀⠅⠭⠬⠭⠷⠂⠬⠭⠾⠘⠅⠐⠀⠀⠀⠀⠨⠂⠱⠀⠅⠭⠬⠭⠀⠀⠀⠀⠨⠅⠀⠷⠅⠬⠂⠾⠭</nemeth></div><p data-braille="continuation">, so <nemeth class="inline">⠠⠎⠷⠅⠬⠂⠾</nemeth> is true. Therefore, <nemeth class="inline">⠠⠎⠷⠝⠾</nemeth> is true for all positive integers <i class="one-letter">n</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="itZ">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Power Sets.</span>
            </h6>
            <p id="qfP">Let <i class="one-letter">X</i> be a set. Define the <dfn class="terminology">power set</dfn> of <i class="one-letter">X</i>, denoted <nemeth class="inline">⠈⠠⠏⠷⠠⠭⠾</nemeth>, to be the set of all subsets  of <i class="one-letter">X</i>.  For example,</p>
            <div class="displaymath">
              <nemeth>⠈⠠⠏⠷⠨⠷⠁⠠⠀⠃⠨⠾⠾⠀⠨⠅⠀⠨⠷⠸⠴⠠⠀⠨⠷⠁⠨⠾⠠⠀⠨⠷⠃⠨⠾⠠⠀⠨⠷⠁⠠⠀⠃⠨⠾⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. For every positive integer <i class="one-letter">n</i>, show that a set with exactly <i class="one-letter">n</i> elements has a power set with exactly <nemeth class="inline">⠼⠆⠘⠝</nemeth> elements.</p>
          </article>
          <article class="exercise exercise-like" id="OBi">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="WmY">Prove that the two principles of mathematical induction stated in Section 2.1 are equivalent.</p>
          </article>
          <article class="exercise exercise-like" id="uIr">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="Cuh">Show that the Principle of Well-Ordering for the natural numbers implies that 1 is the smallest natural number. Use this result to show that the Principle of Well-Ordering implies the Principle of Mathematical Induction; that is, show that if <nemeth class="inline">⠠⠎⠀⠸⠐⠅⠀⠸⠠⠝</nemeth> such that <nemeth class="inline">⠼⠂⠀⠈⠑⠀⠠⠎</nemeth> and <nemeth class="inline">⠝⠬⠂⠀⠈⠑⠀⠠⠎</nemeth> whenever <nemeth class="inline">⠝⠀⠈⠑⠀⠠⠎</nemeth>, then <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠸⠠⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="aPA">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="iBq">For each of the following pairs of numbers <i class="one-letter">a</i> and <i class="one-letter">b</i>, calculate <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth> and find integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠗⠁⠬⠎⠃</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="bNP"><nemeth class="inline">⠼⠂⠲</nemeth> and <nemeth class="inline">⠼⠒⠔</nemeth></p></li>
              <li>b. <p id="HUY"><nemeth class="inline">⠼⠆⠒⠲</nemeth> and <nemeth class="inline">⠼⠂⠖⠢</nemeth></p></li>
              <li>c. <p id="och"><nemeth class="inline">⠼⠂⠶⠒⠔</nemeth> and <nemeth class="inline">⠼⠔⠔⠆⠒</nemeth></p></li>
              <li>d. <p id="Ujq"><nemeth class="inline">⠼⠲⠶⠂</nemeth> and <nemeth class="inline">⠼⠢⠖⠆</nemeth></p></li>
              <li>e. <p id="Aqz"><nemeth class="inline">⠼⠆⠒⠶⠶⠂</nemeth> and <nemeth class="inline">⠼⠂⠔⠔⠲⠢</nemeth></p></li>
              <li>f. <p id="gxI"><nemeth class="inline">⠤⠼⠲⠒⠢⠶</nemeth> and <nemeth class="inline">⠼⠒⠶⠢⠲</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="GWJ">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="OIz">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be nonzero integers. If there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>, show that <i class="one-letter">a</i> and <i class="one-letter">b</i> are relatively prime.</p>
          </article>
          <article class="exercise exercise-like" id="ndS">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">Fibonacci Numbers.</span>
            </h6>
            <p id="uPI">The Fibonacci numbers are</p>
            <div class="displaymath">
              <nemeth>⠼⠂⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠢⠠⠀⠼⠦⠠⠀⠼⠂⠒⠠⠀⠼⠆⠂⠠⠀⠄⠄⠄</nemeth>
            </div>
            <p data-braille="continuation">. We can define them inductively by <nemeth class="inline">⠋⠂⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠋⠆⠀⠨⠅⠀⠼⠂</nemeth>, and <nemeth class="inline">⠋⠰⠝⠬⠆⠐⠀⠨⠅⠀⠋⠰⠝⠬⠂⠐⠬⠋⠰⠝</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="xvT">Prove that <nemeth class="inline">⠋⠰⠝⠐⠀⠐⠅⠀⠼⠆⠘⠝</nemeth>.</p></li>
              <li>b. <p id="dDc">Prove that <nemeth class="inline">⠋⠰⠝⠬⠂⠐⠋⠰⠝⠤⠂⠐⠀⠨⠅⠀⠋⠰⠝⠘⠆⠐⠬⠷⠤⠼⠂⠾⠘⠝</nemeth>, <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>.</p></li>
              <li>c. <p id="JKl">Prove that <nemeth class="inline">⠋⠰⠝⠐⠀⠨⠅⠀⠈⠷⠷⠼⠂⠬⠜⠢⠻⠾⠘⠝⠐⠤⠷⠂⠤⠜⠢⠻⠾⠘⠝⠐⠈⠾⠸⠌⠆⠘⠝⠐⠜⠢⠻</nemeth>.</p></li>
              <li>d. <p id="pRu">Show that <nemeth class="inline">⠐⠇⠊⠍⠩⠝⠀⠫⠕⠀⠠⠿⠻⠀⠋⠰⠝⠐⠸⠌⠋⠰⠝⠬⠂⠐⠀⠨⠅⠀⠷⠜⠢⠻⠤⠂⠾⠸⠌⠆</nemeth>.</p></li>
              <li>e. <p id="VYD">Prove that <nemeth class="inline">⠋⠰⠝</nemeth> and <nemeth class="inline">⠋⠰⠝⠬⠂</nemeth> are relatively prime.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Iqx"><span class="type">Hint</span>:<p id="Hzz">For (a) and (b) use mathematical induction. (c) Show that <nemeth class="inline">⠋⠂⠀⠨⠅⠀⠼⠂</nemeth>, <nemeth class="inline">⠋⠆⠀⠨⠅⠀⠼⠂</nemeth>, and <nemeth class="inline">⠋⠰⠝⠬⠆⠐⠀⠨⠅⠀⠋⠰⠝⠬⠂⠐⠬⠋⠰⠝</nemeth>. (d) Use part (c). (e) Use part (b) and Exercise 2.4.16.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Tlb">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="aWR">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be integers such that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>. Let <i class="one-letter">r</i> and <i class="one-letter">s</i> be integers such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>. Prove that</p>
            <div class="displaymath">
              <nemeth>⠛⠉⠙⠀⠷⠁⠠⠀⠎⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠗⠠⠀⠃⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠗⠠⠀⠎⠾⠀⠨⠅⠀⠼⠂</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="zsk">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="Hea">Let <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠸⠠⠝</nemeth> be relatively prime. If <nemeth class="inline">⠭⠽</nemeth> is a perfect square, prove that <i class="one-letter">x</i> and <i class="one-letter">y</i> must both be perfect squares.</p>
            <div class="solutions">
              <div class="hint solution-like" id="ALY"><span class="type">Hint</span>:<p id="nGI">Use the Fundamental Theorem of Arithmetic.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="fzt">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="nlj">Using the division algorithm, show that every perfect square is of the form <nemeth class="inline">⠼⠲⠅</nemeth> or <nemeth class="inline">⠼⠲⠅⠬⠂</nemeth> for some nonnegative integer <i class="one-letter">k</i>.</p>
          </article>
          <article class="exercise exercise-like" id="LGC">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="Tss">Suppose that <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠗⠠⠀⠎</nemeth> are pairwise relatively prime and that</p>
            <div class="displaymath">
              <nemeth>⠁⠘⠆⠐⠬⠃⠘⠆⠀⠀⠨⠅⠀⠗⠘⠆⠐⠀⠁⠘⠆⠐⠤⠃⠘⠆⠀⠀⠨⠅⠀⠎⠘⠆</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <i class="one-letter">a</i>, <i class="one-letter">r</i>, and <i class="one-letter">s</i> are odd and <i class="one-letter">b</i> is even.</p>
          </article>
          <article class="exercise exercise-like" id="rNL">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="zzB">Let <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>. Use the division algorithm to prove that every integer is congruent mod <i class="one-letter">n</i> to precisely one of the integers <nemeth class="inline">⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠂</nemeth>. Conclude that if <i class="one-letter">r</i> is an integer, then there is exactly one <i class="one-letter">s</i> in <nemeth class="inline">⠸⠠⠵</nemeth> such that <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠎⠀⠐⠅⠀⠝</nemeth> and <nemeth class="inline">⠈⠷⠗⠈⠾⠀⠨⠅⠀⠈⠷⠎⠈⠾</nemeth>. Hence, the integers are indeed partitioned by congruence mod <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="XUU">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="fGK">Define the <dfn class="terminology">least common multiple</dfn> of two nonzero integers <i class="one-letter">a</i> and <i class="one-letter">b</i>, denoted by <nemeth class="inline">⠇⠉⠍⠷⠁⠠⠀⠃⠾</nemeth>, to be the nonnegative integer <i class="one-letter">m</i> such that both <i class="one-letter">a</i> and <i class="one-letter">b</i> divide <i class="one-letter">m</i>, and if <i class="one-letter">a</i> and <i class="one-letter">b</i> divide any other integer <i class="one-letter">n</i>, then <i class="one-letter">m</i> also divides <i class="one-letter">n</i>.  Prove there exists a unique least common multiple for any two integers <i class="one-letter">a</i> and <i class="one-letter">b</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="FvR"><span class="type">Hint</span>:<p id="TNR">Use the Principle of Well-Ordering and the division algorithm.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Ecd">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="LNT">If <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth> and <nemeth class="inline">⠍⠀⠨⠅⠀⠇⠉⠍⠷⠁⠠⠀⠃⠾</nemeth>, prove that <nemeth class="inline">⠙⠍⠀⠨⠅⠀⠳⠁⠃⠳</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="kjm">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="rVc">Show that <nemeth class="inline">⠇⠉⠍⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠁⠃</nemeth> if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Qqv">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="Ycl">Prove that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠉⠾⠀⠨⠅⠀⠛⠉⠙⠀⠷⠃⠠⠀⠉⠾⠀⠨⠅⠀⠼⠂</nemeth> if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠃⠠⠀⠉⠾⠀⠨⠅⠀⠼⠂</nemeth> for integers <i class="one-letter">a</i>, <i class="one-letter">b</i>, and <i class="one-letter">c</i>.</p>
          </article>
          <article class="exercise exercise-like" id="wxE">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="Eju">Let <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠸⠠⠵</nemeth>. Prove that if <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠁⠳⠃⠉</nemeth>, then <nemeth class="inline">⠁⠳⠉</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="KfK"><span class="type">Hint</span>:<p id="zVa">Since <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠼⠂</nemeth>, there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠃⠎⠀⠨⠅⠀⠼⠂</nemeth>. Thus, <nemeth class="inline">⠁⠉⠗⠬⠃⠉⠎⠀⠨⠅⠀⠉</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="cEN">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="kqD">Let <nemeth class="inline">⠏⠀⠨⠂⠱⠀⠼⠆</nemeth>. Prove that if <nemeth class="inline">⠼⠆⠘⠏⠐⠤⠂</nemeth> is prime, then <i class="one-letter">p</i> must also be prime.</p>
          </article>
          <article class="exercise exercise-like" id="ILW">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="QxM">Prove that there are an infinite number of primes of the form <nemeth class="inline">⠼⠖⠝⠬⠢</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="CBl"><span class="type">Hint</span>:<p id="gcj">Every prime must be of the form <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠖⠝⠬⠂</nemeth>, or <nemeth class="inline">⠼⠖⠝⠬⠢</nemeth>. Suppose there are only finitely many primes of the form <nemeth class="inline">⠼⠖⠅⠬⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="oTf">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="wEV">Prove that there are an infinite number of primes of the form <nemeth class="inline">⠼⠲⠝⠤⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Vao">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="cMe">Using the fact that <nemeth class="inline">⠼⠆</nemeth> is prime, show that there do not exist integers <i class="one-letter">p</i> and <i class="one-letter">q</i> such that <nemeth class="inline">⠏⠘⠆⠐⠀⠨⠅⠀⠼⠆⠟⠘⠆</nemeth>. Demonstrate that therefore <nemeth class="inline">⠜⠆⠻</nemeth> cannot be a rational number.</p>
          </article>
        </section>
        <section class="exercises" id="jzs">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">2.5</span> <span class="title">Programming Exercises</span></div>
          <article class="exercise exercise-like" id="Bhx">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title">The Sieve of Eratosthenes.</span>
            </h6>
            <p id="ITn">One method of computing all of the prime numbers less than a certain fixed positive integer <i class="one-letter">N</i> is to list all of the numbers <i class="one-letter">n</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠀⠝⠀⠐⠅⠀⠠⠝</nemeth>. Begin by eliminating all of the multiples of <nemeth class="inline">⠼⠆</nemeth>. Next eliminate all of the multiples of <nemeth class="inline">⠼⠒</nemeth>. Now eliminate all of the multiples of <nemeth class="inline">⠼⠢</nemeth>. Notice that <nemeth class="inline">⠼⠲</nemeth> has already been crossed out. Continue in this manner, noticing that we do not have to go all the way to <i class="one-letter">N</i>; it suffices to stop at <nemeth class="inline">⠜⠠⠝⠻</nemeth>. Using this method, compute all of the prime numbers less than <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠼⠆⠢⠴</nemeth>. We can also use this method to find all of the integers that are relatively prime to an integer <i class="one-letter">N</i>. Simply eliminate the prime factors of <i class="one-letter">N</i> and all of their multiples. Using this method, find all of the numbers that are relatively prime to <nemeth class="inline">⠠⠝⠀⠨⠅⠀⠼⠂⠆⠴</nemeth>. Using the Sieve of Eratosthenes, write a program that will compute all of the primes less than an integer <i class="one-letter">N</i>.</p>
          </article>
          <article class="exercise exercise-like" id="hoG">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="paw">Let <nemeth class="inline">⠸⠠⠝⠘⠴⠐⠀⠨⠅⠀⠸⠠⠝⠨⠬⠨⠷⠴⠨⠾</nemeth>. Ackermann's function is the function <nemeth class="inline">⠠⠁⠒⠀⠸⠠⠝⠘⠴⠐⠈⠡⠸⠠⠝⠘⠴⠐⠀⠫⠕⠀⠸⠠⠝⠘⠴</nemeth> defined by the equations</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠷⠼⠴⠠⠀⠽⠾⠀⠀⠨⠅⠀⠽⠬⠂⠠⠀⠠⠁⠷⠭⠬⠂⠠⠀⠼⠴⠾⠀⠀⠨⠅⠀⠠⠁⠷⠭⠠⠀⠼⠂⠾⠠⠀⠠⠁⠷⠭⠬⠂⠠⠀⠽⠬⠂⠾⠀⠀⠨⠅⠀⠠⠁⠷⠭⠠⠀⠠⠁⠷⠭⠬⠂⠠⠀⠽⠾⠾</nemeth>
            </div>
            <p data-braille="continuation">. Use this definition to compute <nemeth class="inline">⠠⠁⠷⠼⠒⠠⠀⠼⠂⠾</nemeth>. Write a program to evaluate Ackermann's function. Modify the  program to count the number of statements executed in the program when Ackermann's function is evaluated. How many statements are executed in the evaluation of <nemeth class="inline">⠠⠁⠷⠼⠲⠠⠀⠼⠂⠾</nemeth>? What about <nemeth class="inline">⠠⠁⠷⠼⠢⠠⠀⠼⠂⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="NvP">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="VhF">Write a computer program that will implement the Euclidean algorithm. The program should accept two positive integers <i class="one-letter">a</i> and <i class="one-letter">b</i> as input and should output <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth> as well as integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that</p>
            <div class="displaymath">
              <nemeth>⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾⠀⠨⠅⠀⠗⠁⠬⠎⠃</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
        </section>
        <section class="references" id="Dta">
          <div class="none"><span class="type">References</span> <span class="codenumber">2.6</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="jAj"><div class="bibitem">[1]</div>  <div class="bibentry"> Brookshear, J. G. <i>Theory of Computation: Formal Languages, Automata, and Complexity</i>.  Benjamin/Cummings, Redwood City, CA, 1989. Shows the relationships of the theoretical aspects of computer science to set theory and the integers.</div></article>
          <article class="bib" id="PHs"><div class="bibitem">[2]</div>  <div class="bibentry"> Hardy, G. H. and Wright, E. M. <i>An Introduction to the Theory of Numbers</i>.  6th ed. Oxford University Press, New York, 2008.</div></article>
          <article class="bib" id="vOB"><div class="bibitem">[3]</div>  <div class="bibentry"> Niven, I. and Zuckerman, H. S. <i>An Introduction to the Theory of Numbers</i>.  5th ed. Wiley, New York, 1991.</div></article>
          <article class="bib" id="bVK"><div class="bibitem">[4]</div>  <div class="bibentry"> Vanden Eynden, C. <i>Elementary Number Theory</i>. 2nd ed.  Waveland Press, Long Grove IL, 2001.</div></article>
        </section>
        <section class="section" id="ojl">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">2.7</span> <span class="title">Sage</span></div>
          <section class="introduction" id="Mqw">
            <p id="oqC">Many properties of the algebraic objects we will study can be determined from properties of associated integers. And Sage has many powerful functions for analyzing integers.</p>
          </section>
          <section class="subsection" id="KWI">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.7.1</span> <span class="title">Division Algorithm</span></div>
            <p id="qPJ">The code <code class="code-inline tex2jax_ignore">a % b</code> will return the remainder upon division of <i class="one-letter">a</i> by <i class="one-letter">b</i>. In other words, the result is the unique integer <i class="one-letter">r</i> such that (1) <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠃</nemeth>, and (2) <nemeth class="inline">⠁⠀⠨⠅⠀⠃⠟⠬⠗</nemeth> for some integer <i class="one-letter">q</i> (the quotient), as guaranteed by the Division Algorithm (Theorem 2.2.1). Then <nemeth class="inline">⠷⠁⠤⠗⠾⠸⠌⠃</nemeth> will equal <i class="one-letter">q</i>. For example,</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">r = 14 % 3
r
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">q = (14 - r)/3
q
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4
</div>
            </article>
            <p id="WWS">It is also possible to get both the quotient and remainder at the same time with the <code class="code-inline tex2jax_ignore">.quo_rem()</code> method (quotient and remainder).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 14
b = 3
a.quo_rem(b)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4, 2)
</div>
            </article>
            <p id="Deb">A remainder of zero indicates divisibility. So <code class="code-inline tex2jax_ignore">(a % b) == 0</code> will return <code class="code-inline tex2jax_ignore">True</code> if <i class="one-letter">b</i> divides <i class="one-letter">a</i>, and will otherwise return <code class="code-inline tex2jax_ignore">False</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(20 % 5) == 0
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">(17 % 4) == 0
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="jlk">The <code class="code-inline tex2jax_ignore">.divides()</code> method is another option.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = 5
c.divides(20)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d = 4
d.divides(17)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
          </section>
          <section class="subsection" id="rdR">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.7.2</span> <span class="title">Greatest Common Divisor</span></div>
            <p id="Pst">The greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> is obtained with the command <code class="code-inline tex2jax_ignore">gcd(a, b)</code>, where in our first uses, <i class="one-letter">a</i> and <i class="one-letter">b</i> are integers. Later, <i class="one-letter">a</i> and <i class="one-letter">b</i> can be other objects with a notion of divisibility and “greatness,” such as polynomials. For example,</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">gcd(2776, 2452)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">4
</div>
            </article>
            <p id="vzC">We can use the <code class="code-inline tex2jax_ignore">gcd</code> command to determine if a pair of integers are relatively prime.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 31049
b = 2105
gcd(a, b) == 1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 3563
b = 2947
gcd(a, b) == 1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="bGL">The command <code class="code-inline tex2jax_ignore">xgcd(a,b)</code>(“eXtended GCD”) returns a triple where the first element is the greatest common divisor of <i class="one-letter">a</i> and <i class="one-letter">b</i> (as with the <code class="code-inline tex2jax_ignore">gcd(a,b)</code> command above), but the next two elements are values of <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠗⠁⠬⠎⠃⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠃⠾</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">xgcd(633,331)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, -137, 262)
</div>
            </article>
            <p id="HNU">Portions of the triple can be extracted using <code class="code-inline tex2jax_ignore">[ ]</code>(“indexing”) to access the entries of the triple, starting with the first as number <code class="code-inline tex2jax_ignore">0</code>. For example, the following should always return the result <code class="code-inline tex2jax_ignore">True</code>, even if you change the values of <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code>. Try changing the values of <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code> below, to see that the result is always <code class="code-inline tex2jax_ignore">True</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 633
b = 331
extended = xgcd(a, b)
g = extended[0]
r = extended[1]
s = extended[2]
g == r*a + s*b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="nVd">Studying this block of code will go a long way towards helping you get the most out of Sage's output. Note that <code class="code-inline tex2jax_ignore">=</code> is how a value is <em class="emphasis">assigned</em> to a variable, while as in the last line, <code class="code-inline tex2jax_ignore">==</code> is how we compare two items for <em class="emphasis">equality</em>.</p>
          </section>
          <section class="subsection" id="Xla">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">2.7.3</span> <span class="title">Primes and Factoring</span></div>
            <p id="Ucm">The method <code class="code-inline tex2jax_ignore">.is_prime()</code> will determine if an integer is prime or not.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 117371
a.is_prime()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = 14547073
b.is_prime()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b == 1597 * 9109
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="Ajv">The command <code class="code-inline tex2jax_ignore">random_prime(a, proof=True)</code> will generate a random prime number between <nemeth class="inline">⠼⠆</nemeth> and <i class="one-letter">a</i>. Experiment by executing the following two compute cells several times. (Replacing <code class="code-inline tex2jax_ignore">proof=True</code> by <code class="code-inline tex2jax_ignore">proof=False</code> will speed up the search, but there will be a very, very, very small probability the result will not be prime.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = random_prime(10^21, proof=True)
a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">424729101793542195193
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.is_prime()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="gqE">The command <code class="code-inline tex2jax_ignore">prime_range(a, b)</code> returns an ordered list of all the primes from <i class="one-letter">a</i> to <nemeth class="inline">⠃⠤⠂</nemeth>, inclusive. For example,</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">prime_range(500, 550)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[503, 509, 521, 523, 541, 547]
</div>
            </article>
            <p id="MxN">The commands <code class="code-inline tex2jax_ignore">next_prime(a)</code> and <code class="code-inline tex2jax_ignore">previous_prime(a)</code> are other ways to get a single prime number of a desired size. Give them a try below if you have an empty compute cell there (as you will if you are reading in the Sage Notebook, or are reading the online version). (The hash symbol, <code class="code-inline tex2jax_ignore">#</code>, is used to indicate a “comment” line, which will not be evaluated by Sage. So erase this line, or start on the one below it.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
            <p id="sEW">In addition to checking if integers are prime or not, or generating prime numbers, Sage can also decompose any integer into its prime factors, as described by the Fundamental Theorem of Arithmetic (Theorem 2.2.7).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 2600
a.factor()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2^3 * 5^2 * 13
</div>
            </article>
            <p id="YMf">So <nemeth class="inline">⠼⠆⠖⠴⠴⠀⠨⠅⠀⠼⠆⠘⠒⠐⠈⠡⠢⠘⠆⠐⠈⠡⠂⠒</nemeth> and this is the unique way to write <nemeth class="inline">⠼⠆⠖⠴⠴</nemeth> as a product of prime numbers (other than rearranging the order of the primes themselves in the product).</p>
            <p id="ETo">While Sage will print a factorization nicely, it is carried internally as a list of pairs of integers, with each pair being a base (a prime number) and an exponent (a positive integer). Study the following carefully, as it is another good exercise in working with Sage output in the form of lists.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 2600
factored = a.factor()
first_term = factored[0]
first_term
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2, 3)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">second_term = factored[1]
second_term
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(5, 2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">third_term = factored[2]
third_term
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(13, 1)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">first_prime = first_term[0]
first_prime
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">first_exponent = first_term[1]
first_exponent
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <p id="lax">The next compute cell reveals the internal version of the factorization by asking for the actual list. And we show how you could determine exactly how many terms the factorization has by using the length command, <code class="code-inline tex2jax_ignore">len()</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">list(factored)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(2, 3), (5, 2), (13, 1)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">len(factored)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <p id="RhG">Can you extract the next two primes, and their exponents, from <code class="code-inline tex2jax_ignore">a</code>?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="PGB">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">2.8</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="tCY">
            <p id="UxL">These exercises are about investigating basic properties of the integers, something we will frequently do when investigating groups. Sage worksheets have extensive capabilities for making new cells with carefully formatted text, include support for <span class="latex-logo">L<span class="A">a</span>T<span class="E">e</span>X</span> syntax to express mathematics. So when a question asks for explanation or commentary, make a new cell and communicate clearly with your audience.</p>
          </section>
          <article class="exercise exercise-like" id="ZKh">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="BoO">Use the <code class="code-inline tex2jax_ignore">next_prime()</code> command to construct two different 8-digit prime numbers and save them in variables named <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code>.</p>
          </article>
          <article class="exercise exercise-like" id="FRq">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="hvX">Use the <code class="code-inline tex2jax_ignore">.is_prime()</code> method to verify that your primes <code class="code-inline tex2jax_ignore">a</code> and <code class="code-inline tex2jax_ignore">b</code> are really prime.</p>
          </article>
          <article class="exercise exercise-like" id="lYz">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="NDg">Verify that <nemeth class="inline">⠼⠂</nemeth> is the greatest common divisor of your two primes from the previous exercises.</p>
          </article>
          <article class="exercise exercise-like" id="SfI">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="tKp">Find two integers that make a “linear combination” of your two primes equal to <nemeth class="inline">⠼⠂</nemeth>. Include a verification of your result.</p>
          </article>
          <article class="exercise exercise-like" id="ymR">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ZRy">Determine a factorization into powers of primes for <nemeth class="inline">⠉⠀⠨⠅⠀⠼⠲⠢⠔⠦⠴⠒⠶⠆⠒⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="eua">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="FYH">Write a compute cell that defines the same value of <code class="code-inline tex2jax_ignore">c</code> again, and then defines a candidate divisor of <code class="code-inline tex2jax_ignore">c</code> named <code class="code-inline tex2jax_ignore">d</code>. The third line of the cell should return <code class="code-inline tex2jax_ignore">True</code> if and only if <code class="code-inline tex2jax_ignore">d</code> is a divisor of <code class="code-inline tex2jax_ignore">c</code>. Illustrate the use of your cell by testing your code with <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠶</nemeth> and in a new copy of the cell, testing your code with <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠂⠂</nemeth>.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="ZbN">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">3</span> <span class="title">Groups</span></div>
        <section class="introduction" id="sdG">
          <p id="nfF">We begin our study of algebraic structures by investigating sets associated with single operations that satisfy certain reasonable axioms; that is, we want to define an operation on a set in a way that will generalize such familiar structures as the integers <nemeth class="inline">⠸⠠⠵</nemeth> together with the single operation of addition, or invertible <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices together with the single operation of matrix multiplication. The integers and the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices, together with their respective single operations, are examples of algebraic structures known as groups.</p>
          <p id="TmO">The theory of groups occupies a central position in mathematics. Modern group theory arose from an attempt to find the roots of a polynomial in terms of its coefficients. Groups now play a central role in such areas as coding theory, counting, and the study of symmetries; many areas of biology, chemistry, and physics have benefited from group theory.</p>
        </section>
        <section class="section" id="nfs">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">3.1</span> <span class="title">Integer Equivalence Classes and Symmetries</span></div>
          <section class="introduction" id="YkP">
            <p id="ztX">Let us now investigate some mathematical structures that can be viewed as sets with single operations.</p>
          </section>
          <section class="subsection" id="FiW">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.1.1</span> <span class="title">The Integers mod <i class="one-letter">n</i></span></div>
            <p id="RLW">The integers mod <i class="one-letter">n</i> have become indispensable in the theory and applications of algebra. In mathematics they are used in cryptography, coding theory, and the detection of errors in identification codes.</p>
            <p id="xTf">We have already seen that two integers <i class="one-letter">a</i> and <i class="one-letter">b</i> are equivalent mod <i class="one-letter">n</i> if <i class="one-letter">n</i> divides <nemeth class="inline">⠁⠤⠃</nemeth>. The integers mod <i class="one-letter">n</i> also partition <nemeth class="inline">⠸⠠⠵</nemeth> into <i class="one-letter">n</i> different equivalence classes; we will denote the set of these equivalence classes by <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>.  Consider the integers modulo <nemeth class="inline">⠼⠂⠆</nemeth> and the corresponding partition of the integers:</p>
            <div class="displaymath">
              <nemeth>⠈⠷⠼⠴⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠆⠠⠀⠼⠴⠠⠀⠼⠂⠆⠠⠀⠼⠆⠲⠠⠀⠄⠄⠄⠨⠾⠠⠀⠈⠷⠂⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠂⠠⠀⠼⠂⠠⠀⠼⠂⠒⠠⠀⠼⠆⠢⠠⠀⠄⠄⠄⠨⠾⠠⠀⠀⠀⠣⠄⠄⠄⠀⠈⠷⠂⠂⠈⠾⠀⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠂⠂⠠⠀⠼⠆⠒⠠⠀⠼⠒⠢⠠⠀⠄⠄⠄⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. When no confusion can arise, we will use <nemeth class="inline">⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠂</nemeth> to indicate the equivalence classes  <nemeth class="inline">⠈⠷⠼⠴⠈⠾⠠⠀⠈⠷⠼⠂⠈⠾⠠⠀⠄⠄⠄⠀⠠⠀⠈⠷⠼⠂⠂⠈⠾</nemeth> respectively. We can do arithmetic on <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. For two integers <i class="one-letter">a</i> and <i class="one-letter">b</i>, define addition modulo <i class="one-letter">n</i> to be <nemeth class="inline">⠷⠁⠬⠃⠾⠷⠍⠕⠙⠀⠝⠾</nemeth>; that is, the remainder when <nemeth class="inline">⠁⠬⠃</nemeth> is divided by <i class="one-letter">n</i>. Similarly, multiplication modulo <i class="one-letter">n</i> is defined as <nemeth class="inline">⠷⠁⠃⠾⠷⠍⠕⠙⠀⠝⠾</nemeth>, the remainder when <nemeth class="inline">⠁⠃</nemeth> is divided by <i class="one-letter">n</i>.</p>
            <article class="example example-like" data-braille="example-like" id="rPl">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="gGz">The following examples illustrate integer arithmetic modulo <i class="one-letter">n</i>:</p>
              <div class="displaymath">
                <nemeth>⠼⠶⠬⠲⠀⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠢⠾⠀⠶⠡⠒⠀⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠢⠾⠀⠒⠬⠢⠀⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠦⠾⠀⠒⠡⠢⠀⠀⠸⠇⠀⠼⠶⠷⠍⠕⠙⠀⠦⠾⠀⠒⠬⠲⠀⠀⠸⠇⠀⠼⠶⠷⠍⠕⠙⠀⠂⠆⠾⠀⠒⠡⠲⠀⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠂⠆⠾</nemeth>
              </div>
              <p data-braille="continuation">. In particular, notice that it is possible that the product of two nonzero numbers modulo <i class="one-letter">n</i> can be equivalent to <nemeth class="inline">⠼⠴</nemeth> modulo <i class="one-letter">n</i>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="XWu">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="MNI">Most, but not all, of the usual laws of arithmetic hold for addition and multiplication in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. For instance, it is not necessarily true that there is a multiplicative inverse. Consider the multiplication table for <nemeth class="inline">⠸⠠⠵⠦</nemeth> in Figure 3.1.3. Notice that <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠲</nemeth>, and <nemeth class="inline">⠼⠖</nemeth> do not have multiplicative inverses; that is, for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠆</nemeth>, <nemeth class="inline">⠼⠲</nemeth>, or <nemeth class="inline">⠼⠖</nemeth>, there is no integer <i class="one-letter">k</i> such that <nemeth class="inline">⠅⠝⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠦⠾</nemeth>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="PPF">
                <div class="displaymath">
                  <nemeth>⠡⠀⠴⠀⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠀⠶⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠴⠀⠂⠀⠴⠀⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠀⠶⠀⠆⠀⠴⠀⠆⠀⠲⠀⠖⠀⠴⠀⠆⠀⠲⠀⠖⠀⠒⠀⠴⠀⠒⠀⠖⠀⠂⠀⠲⠀⠶⠀⠆⠀⠢⠀⠲⠀⠴⠀⠲⠀⠴⠀⠲⠀⠴⠀⠲⠀⠴⠀⠲⠀⠢⠀⠴⠀⠢⠀⠆⠀⠶⠀⠲⠀⠂⠀⠖⠀⠒⠀⠖⠀⠴⠀⠖⠀⠲⠀⠆⠀⠴⠀⠖⠀⠲⠀⠆⠀⠶⠀⠴⠀⠶⠀⠖⠀⠢⠀⠲⠀⠒⠀⠆⠀⠂</nemeth>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.1.3<span class="period">.</span></span><span class="space"> </span>Multiplication table for <nemeth class="inline">⠸⠠⠵⠦</nemeth></figcaption>
              </figure>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="LIc">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="DtW">Let <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> be the set of equivalence classes of the integers mod <i class="one-letter">n</i> and <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠸⠠⠵⠰⠝⠐</nemeth>.</p>
              <ol class="outerlist">
                <li>1. <p id="CvH">Addition and multiplication are commutative:</p><div class="displaymath"><nemeth>⠁⠬⠃⠀⠀⠸⠇⠀⠃⠬⠁⠷⠍⠕⠙⠀⠝⠾⠀⠁⠃⠀⠀⠸⠇⠀⠃⠁⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>2. <p id="iCQ">Addition and multiplication are associative:</p><div class="displaymath"><nemeth>⠷⠁⠬⠃⠾⠬⠉⠀⠀⠸⠇⠀⠁⠬⠷⠃⠬⠉⠾⠷⠍⠕⠙⠀⠝⠾⠀⠷⠁⠃⠾⠉⠀⠀⠸⠇⠀⠁⠷⠃⠉⠾⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>3. <p id="OJZ">There are both additive and multiplicative identities:</p><div class="displaymath"><nemeth>⠁⠬⠴⠀⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠾⠀⠁⠡⠂⠀⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>4. <p id="uRi">Multiplication distributes over addition:</p><div class="displaymath"><nemeth>⠁⠷⠃⠬⠉⠾⠀⠸⠇⠀⠁⠃⠬⠁⠉⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>5. <p id="aYr">For every integer <i class="one-letter">a</i> there is an additive inverse <nemeth class="inline">⠤⠁</nemeth>:</p><div class="displaymath"><nemeth>⠁⠬⠷⠤⠁⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
                <li>6. <p id="HfA">Let <i class="one-letter">a</i> be a nonzero integer. Then <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth> if and only if there exists a multiplicative inverse <i class="one-letter">b</i> for <nemeth class="inline">⠁⠷⠍⠕⠙⠀⠝⠾</nemeth>; that is, a nonzero integer <i class="one-letter">b</i> such that</p><div class="displaymath"><nemeth>⠁⠃⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth></div><p data-braille="continuation">.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="QGq">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="VxA">We will prove (1) and (6) and leave the remaining properties to be proven in the exercises.</p>
              <p id="BEJ">(1) Addition and multiplication are commutative modulo <i class="one-letter">n</i> since the remainder of <nemeth class="inline">⠁⠬⠃</nemeth> divided by <i class="one-letter">n</i> is the same as the remainder of <nemeth class="inline">⠃⠬⠁</nemeth> divided by <i class="one-letter">n</i>.</p>
              <p id="hLS">(6) Suppose that <nemeth class="inline">⠛⠉⠙⠀⠷⠁⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>. Then there exist integers <i class="one-letter">r</i> and <i class="one-letter">s</i> such that <nemeth class="inline">⠁⠗⠬⠝⠎⠀⠨⠅⠀⠼⠂</nemeth>. Since <nemeth class="inline">⠝⠎⠀⠨⠅⠀⠼⠂⠤⠁⠗</nemeth>, it must be the case that <nemeth class="inline">⠁⠗⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>. Letting <i class="one-letter">b</i> be the equivalence class of <i class="one-letter">r</i>, <nemeth class="inline">⠁⠃⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>.</p>
              <p id="NTb">Conversely, suppose that there exists an integer <i class="one-letter">b</i> such that <nemeth class="inline">⠁⠃⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠝⠾</nemeth>. Then <i class="one-letter">n</i> divides <nemeth class="inline">⠁⠃⠤⠂</nemeth>, so there is an integer <i class="one-letter">k</i> such that <nemeth class="inline">⠁⠃⠤⠝⠅⠀⠨⠅⠀⠼⠂</nemeth>. Let <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠁⠠⠀⠝⠾</nemeth>. Since <i class="one-letter">d</i> divides <nemeth class="inline">⠁⠃⠤⠝⠅</nemeth>, <i class="one-letter">d</i> must also divide <nemeth class="inline">⠼⠂</nemeth>; hence, <nemeth class="inline">⠙⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="lqf">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.1.2</span> <span class="title">Symmetries</span></div>
            <figure class="figure figure-like" data-braille="figure-like" id="iKh">
              <div data-braille="image">
                <p>Image: The four symmetries ot a rectangle: (1) sending rectangle ABCD to rectangle ABCD, (2) sending rectangle ABCD to rectangle CDAB, (3) sending rectangle ABCD to rectangle BADC, and (4) sending rectangle ABCD to rectangle DCBA.</p>
                <p>ID: groups-rectangle</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.1.5<span class="period">.</span></span><span class="space"> </span>Rigid motions of a rectangle</figcaption>
            </figure>
            <p id="eao">A <dfn class="terminology">symmetry</dfn> of a geometric figure is a rearrangement of the figure preserving the arrangement of its sides and vertices as well as its distances and angles. A map from the plane to itself preserving the symmetry of an object is called a <dfn class="terminology">rigid motion</dfn>.  For example, if we look at the rectangle in Figure 3.1.5, it is easy to see that a rotation of <nemeth class="inline">⠼⠂⠦⠴⠘⠘⠨⠡</nemeth> or <nemeth class="inline">⠼⠒⠖⠴⠘⠘⠨⠡</nemeth> returns a rectangle in the plane with the same orientation as the original rectangle and the same relationship among the vertices. A reflection of the rectangle across either the vertical axis or the horizontal axis can also be seen to be a symmetry. However, a <nemeth class="inline">⠼⠔⠴⠘⠘⠨⠡</nemeth> rotation in either direction cannot be a symmetry unless the rectangle is a square.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="ORq">
              <div data-braille="image">
                <p>Image: The six symmetries of a triangle: (1) triangle ABC to triangle ABC, (2) ABC to CAB, (3) ABC to BCA, (4) ABC to ACB, (5) ABC to CBA, and (6) ABC to BAC</p>
                <p>ID: groups-s3-symmetry</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.1.6<span class="period">.</span></span><span class="space"> </span>Symmetries of a triangle</figcaption>
            </figure>
            <p id="Khx">Let us find the symmetries of the equilateral triangle <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth>. To find a symmetry of <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth>, we must first examine the permutations of the vertices <i class="one-letter">A</i>, <i class="one-letter">B</i>, and <i class="one-letter">C</i> and then ask if a permutation extends to a symmetry of the triangle. Recall that a <dfn class="terminology">permutation</dfn> of a set <i class="one-letter">S</i> is a one-to-one and onto map <nemeth class="inline">⠨⠏⠒⠀⠠⠎⠀⠫⠕⠀⠠⠎</nemeth>. The three vertices have <nemeth class="inline">⠼⠒⠖⠀⠀⠨⠅⠀⠼⠖</nemeth> permutations, so the triangle has at most six symmetries. To see that there are six permutations, observe there are three different possibilities for the first vertex, and two for the second, and the remaining vertex is determined by the placement of the first two. So we have <nemeth class="inline">⠼⠒⠡⠆⠡⠂⠀⠨⠅⠀⠼⠒⠖⠀⠀⠨⠅⠀⠼⠖</nemeth> different arrangements. To denote the permutation of the vertices of an equilateral triangle that sends <i class="one-letter">A</i> to <i class="one-letter">B</i>, <i class="one-letter">B</i> to <i class="one-letter">C</i>, and <i class="one-letter">C</i> to <i class="one-letter">A</i>, we write the array</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠃⠀⠠⠉⠀⠠⠁⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">. Notice that this particular permutation corresponds to the rigid motion of rotating the triangle by <nemeth class="inline">⠼⠂⠆⠴⠘⠘⠨⠡</nemeth> in a clockwise direction. In fact, every permutation gives rise to a symmetry of the triangle. All of these symmetries are shown in Figure 3.1.6.</p>
            <p id="qoG">A natural question to ask is what happens if one motion of the triangle <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth> is followed by another. Which symmetry is <nemeth class="inline">⠨⠍⠂⠨⠗⠂</nemeth>; that is, what happens when we do the permutation <nemeth class="inline">⠨⠗⠂</nemeth> and then the permutation <nemeth class="inline">⠨⠍⠂</nemeth>? <em class="emphasis">Remember that we are composing functions here. Although we usually multiply left to right, we compose functions right to left.</em> We have</p>
            <div class="displaymath">
              <nemeth>⠷⠍⠂⠗⠂⠾⠷⠠⠁⠾⠀⠀⠨⠅⠀⠍⠂⠷⠗⠂⠷⠠⠁⠾⠾⠀⠨⠅⠀⠍⠂⠷⠠⠃⠾⠀⠨⠅⠀⠠⠉⠀⠷⠍⠂⠗⠂⠾⠷⠠⠃⠾⠀⠀⠨⠅⠀⠍⠂⠷⠗⠂⠷⠠⠃⠾⠾⠀⠨⠅⠀⠍⠂⠷⠠⠉⠾⠀⠨⠅⠀⠠⠃⠀⠷⠍⠂⠗⠂⠾⠷⠠⠉⠾⠀⠀⠨⠅⠀⠍⠂⠷⠗⠂⠷⠠⠉⠾⠾⠀⠨⠅⠀⠍⠂⠷⠠⠁⠾⠀⠨⠅⠀⠠⠁</nemeth>
            </div>
            <p data-braille="continuation">. This is the same symmetry as <nemeth class="inline">⠨⠍⠆</nemeth>. Suppose we do these motions in the opposite order, <nemeth class="inline">⠨⠗⠂</nemeth> then <nemeth class="inline">⠨⠍⠂</nemeth>. It is easy to determine that this is the same as the symmetry <nemeth class="inline">⠨⠍⠒</nemeth>; hence, <nemeth class="inline">⠨⠗⠂⠨⠍⠂⠀⠌⠨⠅⠀⠨⠍⠂⠨⠗⠂</nemeth>. A multiplication table for the symmetries of an equilateral triangle <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth> is given in Figure 3.1.7.</p>
            <p id="WvP">Notice that in the multiplication table for the symmetries of an equilateral triangle, for every motion of the triangle <nemeth class="inline">⠨⠁</nemeth> there is another motion <nemeth class="inline">⠨⠃</nemeth> such that <nemeth class="inline">⠨⠁⠨⠃⠀⠨⠅⠀⠊⠙</nemeth>; that is, for every motion there is another motion that takes the triangle back to its original orientation.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="osp">
              <div class="displaymath">
                <nemeth>⠘⠨⠡⠀⠊⠙⠀⠨⠗⠂⠀⠨⠗⠆⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠍⠒⠀⠊⠙⠀⠊⠙⠀⠨⠗⠂⠀⠨⠗⠆⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠍⠒⠀⠨⠗⠂⠀⠨⠗⠂⠀⠨⠗⠆⠀⠊⠙⠀⠨⠍⠒⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠗⠆⠀⠨⠗⠆⠀⠊⠙⠀⠨⠗⠂⠀⠨⠍⠆⠀⠨⠍⠒⠀⠨⠍⠂⠀⠨⠍⠂⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠍⠒⠀⠊⠙⠀⠨⠗⠂⠀⠨⠗⠆⠀⠨⠍⠆⠀⠨⠍⠆⠀⠨⠍⠒⠀⠨⠍⠂⠀⠨⠗⠆⠀⠊⠙⠀⠨⠗⠂⠀⠨⠍⠒⠀⠨⠍⠒⠀⠨⠍⠂⠀⠨⠍⠆⠀⠨⠗⠂⠀⠨⠗⠆⠀⠊⠙</nemeth>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.1.7<span class="period">.</span></span><span class="space"> </span>Symmetries of an equilateral triangle</figcaption>
            </figure>
          </section>
        </section>
        <section class="section" id="TmB">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">3.2</span> <span class="title">Definitions and Examples</span></div>
          <section class="introduction" id="ErY">
            <p id="fBg">The integers mod <i class="one-letter">n</i> and the symmetries of a triangle or a rectangle are examples of groups. A <dfn class="terminology">binary operation</dfn>  or <dfn class="terminology">law of composition</dfn> on a set <i class="one-letter">G</i> is a function <nemeth class="inline">⠠⠛⠈⠡⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> that assigns to each pair <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠈⠑⠀⠠⠛⠈⠡⠠⠛</nemeth> a unique element <nemeth class="inline">⠁⠘⠨⠡⠃</nemeth>, or <nemeth class="inline">⠁⠃</nemeth> in <i class="one-letter">G</i>, called the composition of <i class="one-letter">a</i> and <i class="one-letter">b</i>. A <dfn class="terminology">group</dfn> <nemeth class="inline">⠷⠠⠛⠠⠀⠘⠨⠡⠾</nemeth> is a set <i class="one-letter">G</i> together with a law of composition <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠀⠫⠳⠒⠒⠕⠀⠁⠘⠨⠡⠃</nemeth> that satisfies the following axioms.</p>
            <ul class="outerlist">
              <li>• <p id="nmJ">The law of composition is <dfn class="terminology">associative</dfn>. That is,</p><div class="displaymath"><nemeth>⠷⠁⠘⠨⠡⠃⠾⠘⠨⠡⠉⠀⠨⠅⠀⠁⠘⠨⠡⠷⠃⠘⠨⠡⠉⠾</nemeth></div><p data-braille="continuation">for <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠛</nemeth>.</p></li>
              <li>• <p id="TtS">There exists an element <nemeth class="inline">⠑⠀⠈⠑⠀⠠⠛</nemeth>, called the <dfn class="terminology">identity element</dfn>,  such that for any element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth></p><div class="displaymath"><nemeth>⠑⠘⠨⠡⠁⠀⠨⠅⠀⠁⠘⠨⠡⠑⠀⠨⠅⠀⠁</nemeth></div><p data-braille="continuation">.</p></li>
              <li>• <p id="zBb">For each element <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>, there exists an <dfn class="terminology">inverse element</dfn>  in G, denoted by <nemeth class="inline">⠁⠘⠤⠼⠂</nemeth>, such that</p><div class="displaymath"><nemeth>⠁⠘⠨⠡⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠘⠨⠡⠁⠀⠨⠅⠀⠑</nemeth></div><p data-braille="continuation">.</p></li>
            </ul>
            <p id="LIp">A group <i class="one-letter">G</i> with the property that <nemeth class="inline">⠁⠘⠨⠡⠃⠀⠨⠅⠀⠃⠘⠨⠡⠁</nemeth> for all <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth> is called <dfn class="terminology">abelian</dfn>  or <dfn class="terminology">commutative</dfn>.  Groups not satisfying this property are said to be <dfn class="terminology">nonabelian</dfn>  or <dfn class="terminology">noncommutative</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="bfv">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="Zca">The integers <nemeth class="inline">⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠂⠠⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠨⠾</nemeth> form a group under the operation of addition. The binary operation on two integers <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth> is just their sum. Since the integers under addition already have a well-established notation, we will use the operator <nemeth class="inline">⠬</nemeth> instead of <nemeth class="inline">⠘⠨⠡</nemeth>; that is, we shall write <nemeth class="inline">⠍⠬⠝</nemeth> instead of <nemeth class="inline">⠍⠘⠨⠡⠝</nemeth>. The identity is <nemeth class="inline">⠼⠴</nemeth>, and the inverse of <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth> is written as <nemeth class="inline">⠤⠝</nemeth> instead of <nemeth class="inline">⠝⠘⠤⠼⠂</nemeth>. Notice that the set of integers under addition have the additional property that <nemeth class="inline">⠍⠬⠝⠀⠨⠅⠀⠝⠬⠍</nemeth> and therefore form an abelian group.</p>
            </article>
            <p id="rPy">Most of the time we will write <nemeth class="inline">⠁⠃</nemeth> instead of <nemeth class="inline">⠁⠘⠨⠡⠃</nemeth>; however, if the group already has a natural operation such as addition in the integers, we will use that operation. That is, if we are adding two integers, we still write <nemeth class="inline">⠍⠬⠝</nemeth>, <nemeth class="inline">⠤⠝</nemeth> for the inverse, and 0 for the identity as usual. We also write <nemeth class="inline">⠍⠤⠝</nemeth> instead of <nemeth class="inline">⠍⠬⠷⠤⠝⠾</nemeth>.</p>
            <p id="XWH">It is often convenient to describe a group in terms of an addition or multiplication table. Such a table is called a <dfn class="terminology">Cayley table</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="HmE">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="Fjj">The integers mod <i class="one-letter">n</i> form a group under addition modulo <i class="one-letter">n</i>. Consider <nemeth class="inline">⠸⠠⠵⠢</nemeth>, consisting of the equivalence classes of the integers <nemeth class="inline">⠼⠴</nemeth>, <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, and <nemeth class="inline">⠼⠲</nemeth>. We define the group operation on <nemeth class="inline">⠸⠠⠵⠢</nemeth> by modular addition. We write the binary operation on the group additively; that is, we write <nemeth class="inline">⠍⠬⠝</nemeth>. The element 0 is the identity of the group and each element in <nemeth class="inline">⠸⠠⠵⠢</nemeth> has an inverse. For instance, <nemeth class="inline">⠼⠆⠬⠒⠀⠨⠅⠀⠼⠒⠬⠆⠀⠨⠅⠀⠼⠴</nemeth>. Figure 3.2.3 is a Cayley table for <nemeth class="inline">⠸⠠⠵⠢</nemeth>. By Proposition 3.1.4, <nemeth class="inline">⠸⠠⠵⠰⠝⠐⠀⠨⠅⠀⠨⠷⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠂⠨⠾</nemeth> is a group under the binary operation of addition mod <i class="one-letter">n</i>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="vWO">
                <div class="displaymath">
                  <nemeth>⠬⠀⠴⠀⠂⠀⠆⠀⠒⠀⠲⠀⠴⠀⠴⠀⠂⠀⠆⠀⠒⠀⠲⠀⠂⠀⠂⠀⠆⠀⠒⠀⠲⠀⠴⠀⠆⠀⠆⠀⠒⠀⠲⠀⠴⠀⠂⠀⠒⠀⠒⠀⠲⠀⠴⠀⠂⠀⠆⠀⠲⠀⠲⠀⠴⠀⠂⠀⠆⠀⠒</nemeth>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.2.3<span class="period">.</span></span><span class="space"> </span>Cayley table for <nemeth class="inline">⠷⠸⠠⠵⠢⠠⠀⠬⠾</nemeth></figcaption>
              </figure>
            </article>
            <article class="example example-like" data-braille="example-like" id="ntN">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="RxB">Not every set with a binary operation is a group. For example, if we let modular multiplication be the binary operation on <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, then <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> fails to be a group. The element 1 acts as a group identity since <nemeth class="inline">⠼⠂⠡⠅⠀⠨⠅⠀⠅⠡⠂⠀⠨⠅⠀⠅</nemeth> for any <nemeth class="inline">⠅⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth>; however, a multiplicative inverse for <nemeth class="inline">⠼⠴</nemeth> does not exist since <nemeth class="inline">⠼⠴⠡⠅⠀⠨⠅⠀⠅⠡⠴⠀⠨⠅⠀⠼⠴</nemeth> for every <i class="one-letter">k</i> in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. Even if we consider the set <nemeth class="inline">⠸⠠⠵⠰⠝⠐⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠴⠨⠾</nemeth>, we still may not have a group. For instance, let <nemeth class="inline">⠼⠆⠀⠈⠑⠀⠸⠠⠵⠖</nemeth>. Then 2 has no multiplicative inverse since</p>
              <div class="displaymath">
                <nemeth>⠼⠴⠡⠆⠀⠀⠨⠅⠀⠼⠴⠂⠡⠆⠀⠨⠅⠀⠼⠆⠀⠆⠡⠆⠀⠀⠨⠅⠀⠼⠲⠒⠡⠆⠀⠨⠅⠀⠼⠴⠀⠲⠡⠆⠀⠀⠨⠅⠀⠼⠆⠢⠡⠆⠀⠨⠅⠀⠼⠲</nemeth>
              </div>
              <p data-braille="continuation">. By Proposition 3.1.4, every nonzero <i class="one-letter">k</i> does have an inverse in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> if <i class="one-letter">k</i> is relatively prime to <i class="one-letter">n</i>. Denote the set of all such nonzero elements in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> by <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth>.  Then <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> is a group called the <dfn class="terminology">group of units</dfn>  of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. Figure 3.2.5 is a Cayley table for the group <nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="cdX">
                <div class="displaymath">
                  <nemeth>⠡⠀⠂⠀⠒⠀⠢⠀⠶⠀⠂⠀⠂⠀⠒⠀⠢⠀⠶⠀⠒⠀⠒⠀⠂⠀⠶⠀⠢⠀⠢⠀⠢⠀⠶⠀⠂⠀⠒⠀⠶⠀⠶⠀⠢⠀⠒⠀⠂</nemeth>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.2.5<span class="period">.</span></span><span class="space"> </span>Multiplication table for <nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth></figcaption>
              </figure>
            </article>
            <article class="example example-like" data-braille="example-like" id="TAW">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="dLT">The symmetries of an equilateral triangle described in Section 3.1 form a nonabelian group. As we observed, it is not necessarily true that <nemeth class="inline">⠨⠁⠨⠃⠀⠨⠅⠀⠨⠃⠨⠁</nemeth> for two symmetries <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth>. Using Figure 3.1.7, which is a Cayley table for this group, we can easily check that the symmetries of an equilateral triangle are indeed a group. We will denote this group by either <nemeth class="inline">⠠⠎⠒</nemeth> or <nemeth class="inline">⠠⠙⠒</nemeth>, for reasons that will be explained later.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="zIf">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.7</span>
                <span class="period">.</span>
              </h6>
              <p id="JTc">We use  <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> to denote the set of all <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices. Let <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> be the subset of <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> consisting of invertible matrices; that is, a matrix </p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">is in  <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> if there exists a matrix <nemeth class="inline">⠠⠁⠘⠤⠼⠂</nemeth> such that <nemeth class="inline">⠠⠁⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠁⠘⠤⠼⠂⠐⠠⠁⠀⠨⠅⠀⠠⠊</nemeth>, where <i class="one-letter">I</i> is the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> identity matrix. For <i class="one-letter">A</i> to have an inverse is equivalent to requiring that the determinant of <i class="one-letter">A</i> be nonzero; that is, <nemeth class="inline">⠙⠑⠞⠀⠠⠁⠀⠨⠅⠀⠁⠙⠤⠃⠉⠀⠌⠨⠅⠀⠼⠴</nemeth>.  The set of invertible matrices forms a group called the <dfn class="terminology">general linear group</dfn>.  The identity of the group is the identity matrix</p>
              <div class="displaymath">
                <nemeth>⠠⠊⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. The inverse of <nemeth class="inline">⠠⠁⠀⠈⠑⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠹⠂⠌⠁⠙⠤⠃⠉⠼⠠⠷⠙⠀⠤⠃⠠⠾⠀⠠⠷⠤⠉⠀⠁⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. The product of two invertible matrices is again invertible. Matrix multiplication is associative, satisfying the other group axiom. For matrices it is not true in general that <nemeth class="inline">⠠⠁⠠⠃⠀⠨⠅⠀⠠⠃⠠⠁</nemeth>; hence, <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is another example of a nonabelian group.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="fPo">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="qal">Let</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠊⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠚⠀⠀⠨⠅⠀⠠⠷⠼⠴⠀⠊⠠⠾⠀⠠⠷⠊⠀⠴⠠⠾⠠⠅⠀⠨⠅⠀⠠⠷⠊⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠊⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>. Then the relations <nemeth class="inline">⠠⠊⠘⠆⠐⠀⠨⠅⠀⠠⠚⠘⠆⠐⠀⠨⠅⠀⠠⠅⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>, <nemeth class="inline">⠠⠊⠠⠚⠀⠨⠅⠀⠠⠅</nemeth>, <nemeth class="inline">⠠⠚⠠⠅⠀⠨⠅⠀⠠⠊</nemeth>, <nemeth class="inline">⠠⠅⠠⠊⠀⠨⠅⠀⠠⠚</nemeth>, <nemeth class="inline">⠠⠚⠠⠊⠀⠨⠅⠀⠤⠠⠅</nemeth>, <nemeth class="inline">⠠⠅⠠⠚⠀⠨⠅⠀⠤⠠⠊</nemeth>, and <nemeth class="inline">⠠⠊⠠⠅⠀⠨⠅⠀⠤⠠⠚</nemeth> hold. The set  <nemeth class="inline">⠠⠟⠦⠀⠨⠅⠀⠨⠷⠬⠤⠼⠂⠠⠀⠬⠤⠠⠊⠠⠀⠬⠤⠠⠚⠠⠀⠬⠤⠠⠅⠨⠾</nemeth> is a group called the <dfn class="terminology">quaternion group</dfn>.  Notice that <nemeth class="inline">⠠⠟⠦</nemeth> is noncommutative.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="LWx">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="Whu">Let <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> be the set of nonzero complex numbers.  Under the operation of multiplication <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> forms a group. The identity is <nemeth class="inline">⠼⠂</nemeth>. If <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> is a nonzero complex number, then</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠹⠁⠤⠃⠊⠌⠁⠘⠆⠐⠬⠃⠘⠆⠐⠼</nemeth>
              </div>
              <p data-braille="continuation">is the inverse of <i class="one-letter">z</i>. It is easy to see that the remaining group axioms hold.</p>
            </article>
            <p id="EdQ">A group is <dfn class="terminology">finite</dfn>,  or has <dfn class="terminology">finite order</dfn>, if it contains a finite number of elements; otherwise, the group is said to be <dfn class="terminology">infinite</dfn> or to have <dfn class="terminology">infinite order</dfn>.  The <dfn class="terminology">order</dfn>  of a finite group is the number of elements that it contains. If <i class="one-letter">G</i> is a group containing <i class="one-letter">n</i> elements, we write <nemeth class="inline">⠳⠠⠛⠳⠀⠨⠅⠀⠝</nemeth>.  The group <nemeth class="inline">⠸⠠⠵⠢</nemeth> is a finite group of order <nemeth class="inline">⠼⠢</nemeth>; the integers <nemeth class="inline">⠸⠠⠵</nemeth> form an infinite group under addition, and we sometimes write <nemeth class="inline">⠳⠸⠠⠵⠳⠀⠨⠅⠀⠠⠿</nemeth>.</p>
          </section>
          <section class="subsection" id="Rxo">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.2.1</span> <span class="title">Basic Properties of Groups</span></div>
            <article class="proposition theorem-like" data-braille="theorem-like" id="kkM">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="jBf">The identity element in a group <i class="one-letter">G</i> is unique; that is, there exists only one element <nemeth class="inline">⠑⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠑⠛⠀⠨⠅⠀⠛⠑⠀⠨⠅⠀⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="wNz">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="uak">Suppose that <i class="one-letter">e</i> and <nemeth class="inline">⠑⠄</nemeth> are both identities in <i class="one-letter">G</i>. Then <nemeth class="inline">⠑⠛⠀⠨⠅⠀⠛⠑⠀⠨⠅⠀⠛</nemeth> and <nemeth class="inline">⠑⠘⠄⠐⠛⠀⠨⠅⠀⠛⠑⠘⠄⠐⠀⠨⠅⠀⠛</nemeth> for all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. We need to show that <nemeth class="inline">⠑⠀⠨⠅⠀⠑⠄</nemeth>. If we think of <i class="one-letter">e</i> as the identity, then <nemeth class="inline">⠑⠑⠘⠄⠐⠀⠨⠅⠀⠑⠄</nemeth>; but if <nemeth class="inline">⠑⠄</nemeth> is the identity, then <nemeth class="inline">⠑⠑⠘⠄⠐⠀⠨⠅⠀⠑</nemeth>. Combining these two equations, we have <nemeth class="inline">⠑⠀⠨⠅⠀⠑⠑⠘⠄⠐⠀⠨⠅⠀⠑⠄</nemeth>.</p>
            </article>
            <p id="uYz">Inverses in a group are also unique. If <nemeth class="inline">⠛⠄</nemeth> and <nemeth class="inline">⠛⠄⠄</nemeth> are both inverses of an element <i class="one-letter">g</i> in a group <i class="one-letter">G</i>, then <nemeth class="inline">⠛⠛⠘⠄⠐⠀⠨⠅⠀⠛⠘⠄⠐⠛⠀⠨⠅⠀⠑</nemeth> and <nemeth class="inline">⠛⠛⠘⠄⠄⠐⠀⠨⠅⠀⠛⠘⠄⠄⠐⠛⠀⠨⠅⠀⠑</nemeth>. We want to show that <nemeth class="inline">⠛⠘⠄⠐⠀⠨⠅⠀⠛⠄⠄</nemeth>, but <nemeth class="inline">⠛⠘⠄⠐⠀⠨⠅⠀⠛⠘⠄⠐⠑⠀⠨⠅⠀⠛⠘⠄⠐⠷⠛⠛⠘⠄⠄⠐⠾⠀⠨⠅⠀⠷⠛⠘⠄⠐⠛⠾⠛⠘⠄⠄⠐⠀⠨⠅⠀⠑⠛⠘⠄⠄⠐⠀⠨⠅⠀⠛⠄⠄</nemeth>. We summarize this fact in the following proposition.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="QrV">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="PIo">If <i class="one-letter">g</i> is any element in a group <i class="one-letter">G</i>, then the inverse of <i class="one-letter">g</i>, denoted by <nemeth class="inline">⠛⠘⠤⠼⠂</nemeth>, is unique.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="wze">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.12</span>
                <span class="period">.</span>
              </h6>
              <p id="vPx">Let <i class="one-letter">G</i> be a group. If <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>, then <nemeth class="inline">⠷⠁⠃⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="cUI">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="aht">Let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>. Then <nemeth class="inline">⠁⠃⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠑⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠑</nemeth>. Similarly, <nemeth class="inline">⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂⠐⠁⠃⠀⠨⠅⠀⠑</nemeth>. But by the previous proposition, inverses are unique; hence, <nemeth class="inline">⠷⠁⠃⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠃⠘⠤⠼⠂⠐⠁⠘⠤⠼⠂</nemeth>.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="cGn">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.13</span>
                <span class="period">.</span>
              </h6>
              <p id="bWG">Let <i class="one-letter">G</i> be a group. For any <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>, <nemeth class="inline">⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="JbR">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="GoC">Observe that <nemeth class="inline">⠁⠘⠤⠼⠂⠐⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠑</nemeth>. Consequently, multiplying both sides of this equation by <i class="one-letter">a</i>, we have</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠑⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠁⠘⠤⠼⠂⠐⠷⠁⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠑⠀⠨⠅⠀⠁</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <p id="bfI">It makes sense to write equations with group elements and group operations. If <i class="one-letter">a</i> and <i class="one-letter">b</i> are two elements in a group <i class="one-letter">G</i>, does there exist an element <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠛</nemeth> such that <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth>? If such an <i class="one-letter">x</i> does exist, is it unique? The following proposition answers both of these questions positively.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="INw">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.14</span>
                <span class="period">.</span>
              </h6>
              <p id="IdP">Let <i class="one-letter">G</i> be a group and <i class="one-letter">a</i> and <i class="one-letter">b</i> be any two elements in <i class="one-letter">G</i>. Then the equations <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth> and <nemeth class="inline">⠭⠁⠀⠨⠅⠀⠃</nemeth> have unique solutions in <i class="one-letter">G</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="pja">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="mvL">Suppose that <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth>. We must show that such an <i class="one-letter">x</i> exists. We can multiply both sides of <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth> by <nemeth class="inline">⠁⠘⠤⠼⠂</nemeth> to find <nemeth class="inline">⠭⠀⠨⠅⠀⠑⠭⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠁⠭⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠃</nemeth>.</p>
              <p id="SCU">To show uniqueness, suppose that <nemeth class="inline">⠭⠂</nemeth> and <nemeth class="inline">⠭⠆</nemeth> are both solutions of <nemeth class="inline">⠁⠭⠀⠨⠅⠀⠃</nemeth>; then <nemeth class="inline">⠁⠭⠂⠀⠨⠅⠀⠃⠀⠨⠅⠀⠁⠭⠆</nemeth>. So <nemeth class="inline">⠭⠂⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠁⠭⠂⠀⠨⠅⠀⠁⠘⠤⠼⠂⠐⠁⠭⠆⠀⠨⠅⠀⠭⠆</nemeth>. The proof for the existence and uniqueness of the solution of <nemeth class="inline">⠭⠁⠀⠨⠅⠀⠃</nemeth> is similar.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="oUF">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.15</span>
                <span class="period">.</span>
              </h6>
              <p id="okY">If <i class="one-letter">G</i> is a group and <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠛</nemeth>, then <nemeth class="inline">⠃⠁⠀⠨⠅⠀⠉⠁</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth> and <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠁⠉</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth>.</p>
            </article>
            <p id="HmR">This proposition tells us that the <dfn class="terminology">right and left cancellation laws</dfn> are true in groups. We leave the proof as an exercise.</p>
            <p id="nua">We can use exponential notation for groups just as we do in ordinary algebra. If <i class="one-letter">G</i> is a group and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, then we define <nemeth class="inline">⠛⠘⠴⠐⠀⠨⠅⠀⠑</nemeth>. For <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠝</nemeth>, we define</p>
            <div class="displaymath">
              <nemeth>⠛⠘⠝⠐⠀⠨⠅⠀⠐⠐⠛⠡⠛⠀⠄⠄⠄⠀⠛⠩⠄⡳⠭⠆⠒⠙⠋⠄⠻⠩⠝⠞⠊⠍⠑⠎⠻</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠛⠘⠤⠝⠐⠀⠨⠅⠀⠐⠐⠛⠘⠤⠼⠂⠐⠡⠛⠘⠤⠼⠂⠐⠀⠄⠄⠄⠀⠛⠘⠤⠼⠂⠐⠩⠄⡳⠭⠆⠒⠙⠋⠄⠻⠩⠝⠞⠊⠍⠑⠎⠻</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="EdD">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">3.2.16</span>
                <span class="period">.</span>
              </h6>
              <p id="XmN">In a group, the usual laws of exponents hold; that is, for all <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠛</nemeth>,</p>
              <ol class="outerlist">
                <li>1. <p id="fIk"><nemeth class="inline">⠛⠘⠍⠐⠛⠘⠝⠐⠀⠨⠅⠀⠛⠘⠍⠬⠝</nemeth> for all <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>;</p></li>
                <li>2. <p id="LPt"><nemeth class="inline">⠷⠛⠘⠍⠐⠾⠘⠝⠐⠀⠨⠅⠀⠛⠘⠍⠝</nemeth> for all <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>;</p></li>
                <li>3. <p id="rWC"><nemeth class="inline">⠷⠛⠓⠾⠘⠝⠐⠀⠨⠅⠀⠷⠓⠘⠤⠼⠂⠐⠛⠘⠤⠼⠂⠐⠾⠘⠤⠝</nemeth> for all <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>. Furthermore, if <i class="one-letter">G</i> is abelian, then <nemeth class="inline">⠷⠛⠓⠾⠘⠝⠐⠀⠨⠅⠀⠛⠘⠝⠐⠓⠘⠝</nemeth>.</p></li>
              </ol>
            </article>
            <p id="TBj">We will leave the proof of this theorem as an exercise. Notice that <nemeth class="inline">⠷⠛⠓⠾⠘⠝⠐⠀⠌⠨⠅⠀⠛⠘⠝⠐⠓⠘⠝</nemeth> in general, since the group may not be abelian. If the group is <nemeth class="inline">⠸⠠⠵</nemeth> or <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, we write the group operation additively and the exponential operation multiplicatively; that is, we write <nemeth class="inline">⠝⠛</nemeth> instead of <nemeth class="inline">⠛⠘⠝</nemeth>. The laws of exponents now become</p>
            <ol class="outerlist">
              <li>1. <p id="YdL"><nemeth class="inline">⠍⠛⠬⠝⠛⠀⠨⠅⠀⠷⠍⠬⠝⠾⠛</nemeth> for all <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>;</p></li>
              <li>2. <p id="EkU"><nemeth class="inline">⠍⠷⠝⠛⠾⠀⠨⠅⠀⠷⠍⠝⠾⠛</nemeth> for all <nemeth class="inline">⠍⠠⠀⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>;</p></li>
              <li>3. <p id="ksd"><nemeth class="inline">⠍⠷⠛⠬⠓⠾⠀⠨⠅⠀⠍⠛⠬⠍⠓</nemeth> for all <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>.</p></li>
            </ol>
            <p id="zIs">It is important to realize that the last statement can be made only because <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> are commutative groups.</p>
          </section>
          <section class="subsection" id="xEx">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.2.2</span> <span class="title">Historical Note</span></div>
            <p id="fPB">Although the first clear axiomatic definition of a group was not given until the late 1800s, group-theoretic methods had been employed before this time in the development of many areas of mathematics, including geometry and the theory of algebraic equations.</p>
            <p id="LWK">Joseph-Louis Lagrange  used group-theoretic methods in a 1770–1771 memoir to study methods of solving polynomial equations. Later, Évariste Galois  (1811–1832) succeeded in developing the mathematics necessary to determine exactly which polynomial equations could be solved in terms of the coefficients of the polynomial. Galois' primary tool was group theory.</p>
            <p id="sdT">The study of geometry was revolutionized in 1872 when Felix Klein  proposed that geometric spaces should be studied by examining those properties that are invariant under a transformation of the space. Sophus Lie,  a contemporary of Klein, used group theory to study solutions of partial differential equations. One of the first modern treatments of group theory appeared in William Burnside's  <span class="booktitle">The Theory of Groups of Finite Order</span> [1], first published in 1897.</p>
          </section>
        </section>
        <section class="section" id="ztK">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">3.3</span> <span class="title">Subgroups</span></div>
          <section class="subsection" id="dLG">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.3.1</span> <span class="title">Definitions and Examples</span></div>
            <p id="Ylc">Sometimes we wish to investigate smaller groups sitting inside a larger group. The set of even integers <nemeth class="inline">⠼⠆⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠆⠠⠀⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠄⠄⠄⠨⠾</nemeth> is a group under the operation of addition. This smaller group sits naturally inside of the group of integers under addition. We define a <dfn class="terminology">subgroup</dfn> <i class="one-letter">H</i> of a group <i class="one-letter">G</i> to be a subset <i class="one-letter">H</i> of <i class="one-letter">G</i> such that when the group operation of <i class="one-letter">G</i> is restricted to <i class="one-letter">H</i>, <i class="one-letter">H</i> is a group in its own right. Observe that every group <i class="one-letter">G</i> with at least two elements will always have at least two subgroups, the subgroup consisting of the identity element alone and the entire group itself. The subgroup <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth> of a group <i class="one-letter">G</i> is called the <dfn class="terminology">trivial subgroup</dfn>.  A subgroup that is a proper subset of <i class="one-letter">G</i> is called a <dfn class="terminology">proper subgroup</dfn>.  In many of the examples that we have investigated up to this point, there exist other subgroups besides the trivial and improper subgroups.</p>
            <article class="example example-like" data-braille="example-like" id="VbO">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.1</span>
                <span class="period">.</span>
              </h6>
              <p id="CoD">Consider the set of nonzero real numbers, <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth>, with the group operation of multiplication.  The identity of this group is <nemeth class="inline">⠼⠂</nemeth> and the inverse of any element <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠗⠘⠈⠼</nemeth> is just <nemeth class="inline">⠼⠂⠸⠌⠁</nemeth>. We will show that</p>
              <div class="displaymath">
                <nemeth>⠸⠠⠟⠘⠈⠼⠐⠀⠨⠅⠀⠨⠷⠏⠸⠌⠟⠒⠀⠏⠁⠝⠙⠟⠁⠗⠑⠀⠝⠕⠝⠵⠑⠗⠕⠀⠊⠝⠞⠑⠛⠑⠗⠎⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">is a subgroup of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth>.  The identity of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> is <nemeth class="inline">⠼⠂</nemeth>; however,  <nemeth class="inline">⠼⠂⠀⠨⠅⠀⠼⠂⠸⠌⠂</nemeth> is the quotient of two nonzero integers. Hence, the identity of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> is in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>. Given two elements in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>, say <nemeth class="inline">⠏⠸⠌⠟</nemeth> and <nemeth class="inline">⠗⠸⠌⠎</nemeth>, their product <nemeth class="inline">⠏⠗⠸⠌⠟⠎</nemeth> is also in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>. The inverse of any element <nemeth class="inline">⠏⠸⠌⠟⠀⠈⠑⠀⠸⠠⠟⠘⠈⠼</nemeth> is again in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> since <nemeth class="inline">⠷⠏⠸⠌⠟⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠟⠸⠌⠏</nemeth>. Since multiplication in <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> is associative, multiplication in <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> is associative.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="BiX">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.2</span>
                <span class="period">.</span>
              </h6>
              <p id="ivM">Recall that <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> is the multiplicative group of nonzero complex numbers. Let <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠤⠼⠂⠠⠀⠊⠠⠀⠤⠊⠨⠾</nemeth>. Then <i class="one-letter">H</i> is a subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>. It is quite easy to verify that <i class="one-letter">H</i> is a group under multiplication and that <nemeth class="inline">⠠⠓⠀⠸⠐⠅⠀⠸⠠⠉⠘⠈⠼</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="hqg">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.3</span>
                <span class="period">.</span>
              </h6>
              <p id="OCV">Let <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> be the subset of <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> consisting of matrices of determinant one; that is, a matrix </p>
              <div class="displaymath">
                <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">is in <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> exactly when <nemeth class="inline">⠁⠙⠤⠃⠉⠀⠨⠅⠀⠼⠂</nemeth>. To show that <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is a subgroup of the general linear group, we must show that it is a group under matrix multiplication. The <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> identity matrix is in <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>, as is the inverse of the matrix <i class="one-letter">A</i>:</p>
              <div class="displaymath">
                <nemeth>⠠⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠠⠷⠙⠀⠤⠃⠠⠾⠀⠠⠷⠤⠉⠀⠁⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. It remains to show that multiplication is closed; that is, that the product of two matrices of determinant one also has determinant one. We will leave this task as an exercise. The group <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is called the <dfn class="terminology">special linear group</dfn>. </p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Nxp">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.4</span>
                <span class="period">.</span>
              </h6>
              <p id="uKe">It is important to realize that a subset <i class="one-letter">H</i> of a group <i class="one-letter">G</i> can be a group without being a subgroup of <i class="one-letter">G</i>. For <i class="one-letter">H</i> to be a subgroup of <i class="one-letter">G</i>, it must inherit the binary operation of <i class="one-letter">G</i>. The set of all <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices, <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth>, forms a group under the operation of addition. The <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> general linear group is a subset of <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth> and is a group under matrix multiplication, but it is not a subgroup of <nemeth class="inline">⠸⠠⠍⠆⠷⠸⠠⠗⠾</nemeth>. If we add two invertible matrices, we do not necessarily obtain another invertible matrix. Observe that</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠬⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾⠀⠨⠅⠀⠠⠷⠼⠴⠀⠴⠠⠾⠀⠠⠷⠴⠀⠴⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, but the zero matrix is not in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="tEy">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.5</span>
                <span class="period">.</span>
              </h6>
              <p id="aRn">One way of telling whether or not two groups are the same is by examining their subgroups. Other than the trivial subgroup and the group itself, the group <nemeth class="inline">⠸⠠⠵⠲</nemeth> has a single subgroup consisting of the elements <nemeth class="inline">⠼⠴</nemeth> and <nemeth class="inline">⠼⠆</nemeth>. From the group <nemeth class="inline">⠸⠠⠵⠆</nemeth>, we can form another group of four elements as follows. As a set this group is <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>. We perform the group operation coordinatewise; that is, <nemeth class="inline">⠷⠁⠠⠀⠃⠾⠬⠷⠉⠠⠀⠙⠾⠀⠨⠅⠀⠷⠁⠬⠉⠠⠀⠃⠬⠙⠾</nemeth>. Figure 3.3.6 is an addition table for <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>. Since there are three nontrivial proper subgroups of <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth>, <nemeth class="inline">⠠⠓⠂⠀⠨⠅⠀⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠠⠀⠷⠼⠴⠠⠀⠼⠂⠾⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠆⠀⠨⠅⠀⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠠⠀⠷⠼⠂⠠⠀⠼⠴⠾⠨⠾</nemeth>, and <nemeth class="inline">⠠⠓⠒⠀⠨⠅⠀⠨⠷⠷⠼⠴⠠⠀⠼⠴⠾⠠⠀⠷⠼⠂⠠⠀⠼⠂⠾⠨⠾</nemeth>, <nemeth class="inline">⠸⠠⠵⠲</nemeth> and <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth> must be different groups.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="Ilg">
                <div class="displaymath">
                  <nemeth>⠬⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠂⠾⠀⠷⠼⠂⠠⠀⠼⠴⠾⠀⠷⠼⠴⠠⠀⠼⠂⠾⠀⠷⠼⠴⠠⠀⠼⠴⠾</nemeth>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.3.6<span class="period">.</span></span><span class="space"> </span>Addition table for <nemeth class="inline">⠸⠠⠵⠆⠈⠡⠸⠠⠵⠆</nemeth></figcaption>
              </figure>
            </article>
          </section>
          <section class="subsection" id="JSP">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.3.2</span> <span class="title">Some Subgroup Theorems</span></div>
            <p id="Esl">Let us examine some criteria for determining exactly when a subset of a group is a subgroup.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="ZLH">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.7</span>
                <span class="period">.</span>
              </h6>
              <p id="Ush">A subset <i class="one-letter">H</i> of <i class="one-letter">G</i> is a subgroup if and only if it satisfies the following conditions.</p>
              <ol class="outerlist">
                <li>1. <p id="Qzm">The identity <i class="one-letter">e</i> of <i class="one-letter">G</i> is in <i class="one-letter">H</i>.</p></li>
                <li>2. <p id="wGv">If <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>, then <nemeth class="inline">⠓⠂⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>.</p></li>
                <li>3. <p id="cNE">If <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth>, then <nemeth class="inline">⠓⠘⠤⠼⠂⠐⠀⠈⠑⠀⠠⠓</nemeth>.</p></li>
              </ol>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Vqj">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="yKd">First suppose that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>. We must show that the three conditions hold. Since <i class="one-letter">H</i> is a group, it must have an identity <nemeth class="inline">⠑⠰⠠⠓</nemeth>. We must show that <nemeth class="inline">⠑⠰⠠⠓⠐⠀⠨⠅⠀⠑</nemeth>, where <i class="one-letter">e</i> is the identity of <i class="one-letter">G</i>. We know that <nemeth class="inline">⠑⠰⠠⠓⠐⠑⠰⠠⠓⠐⠀⠨⠅⠀⠑⠰⠠⠓</nemeth> and that <nemeth class="inline">⠑⠑⠰⠠⠓⠐⠀⠨⠅⠀⠑⠰⠠⠓⠐⠑⠀⠨⠅⠀⠑⠰⠠⠓</nemeth>; hence, <nemeth class="inline">⠑⠑⠰⠠⠓⠐⠀⠨⠅⠀⠑⠰⠠⠓⠐⠑⠰⠠⠓</nemeth>. By right-hand cancellation, <nemeth class="inline">⠑⠀⠨⠅⠀⠑⠰⠠⠓</nemeth>. The second condition holds since a subgroup <i class="one-letter">H</i> is a group. To prove the third condition, let <nemeth class="inline">⠓⠀⠈⠑⠀⠠⠓</nemeth>. Since <i class="one-letter">H</i> is a group, there is an element <nemeth class="inline">⠓⠘⠄⠐⠀⠈⠑⠀⠠⠓</nemeth> such that <nemeth class="inline">⠓⠓⠘⠄⠐⠀⠨⠅⠀⠓⠘⠄⠐⠓⠀⠨⠅⠀⠑</nemeth>. By the uniqueness of the inverse in <i class="one-letter">G</i>, <nemeth class="inline">⠓⠘⠄⠐⠀⠨⠅⠀⠓⠘⠤⠼⠂</nemeth>.</p>
              <p id="eRm">Conversely, if the three conditions hold, we must show that <i class="one-letter">H</i> is a group under the same operation as <i class="one-letter">G</i>; however, these conditions plus the associativity of the binary operation are exactly the axioms stated in the definition of a group.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="FSQ">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">3.3.8</span>
                <span class="period">.</span>
              </h6>
              <p id="Azq">Let <i class="one-letter">H</i> be a subset of a group <i class="one-letter">G</i>. Then <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i> if and only if <nemeth class="inline">⠠⠓⠀⠌⠨⠅⠀⠸⠴</nemeth>, and whenever <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠓</nemeth> then <nemeth class="inline">⠛⠓⠘⠤⠼⠂</nemeth> is in <i class="one-letter">H</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Bxs">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="KYv">First assume that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>. We wish to show that <nemeth class="inline">⠛⠓⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓</nemeth> whenever <i class="one-letter">g</i> and <i class="one-letter">h</i> are in <i class="one-letter">H</i>. Since <i class="one-letter">h</i> is in <i class="one-letter">H</i>, its inverse <nemeth class="inline">⠓⠘⠤⠼⠂</nemeth> must also be in <i class="one-letter">H</i>. Because of the closure of the group operation, <nemeth class="inline">⠛⠓⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓</nemeth>.</p>
              <p id="rfE">Conversely, suppose that <nemeth class="inline">⠠⠓⠀⠸⠐⠅⠀⠠⠛</nemeth> such that <nemeth class="inline">⠠⠓⠀⠌⠨⠅⠀⠸⠴</nemeth> and <nemeth class="inline">⠛⠓⠘⠤⠼⠂⠀⠈⠑⠀⠠⠓</nemeth> whenever <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠓</nemeth>. If <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠓</nemeth>, then <nemeth class="inline">⠛⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠑</nemeth> is in <i class="one-letter">H</i>. If <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠓</nemeth>, then <nemeth class="inline">⠑⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠛⠘⠤⠼⠂</nemeth> is also in <i class="one-letter">H</i>. Now let <nemeth class="inline">⠓⠂⠠⠀⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>. We must show that their product is also in <i class="one-letter">H</i>. However, <nemeth class="inline">⠓⠂⠷⠓⠆⠘⠤⠼⠂⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠓⠂⠓⠆⠀⠈⠑⠀⠠⠓</nemeth>. Hence, <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>.</p>
            </article>
            <article class="paragraphs" id="GYj">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="kzu">The first half of this text is about group theory. Sage includes Groups, Algorithms and Programming (<abbr class="acronym">GAP</abbr>), a program designed primarly for just group theory, and in continuous development since 1986. Many of Sage's computations for groups ultimately are performed by GAP.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="VNv">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">3.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="fgH">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="PXJ">In the group <nemeth class="inline">⠸⠠⠵⠦</nemeth> compute, (a) <nemeth class="inline">⠼⠖⠬⠶</nemeth>, and (b) <nemeth class="inline">⠼⠆⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LnQ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="weS">In the group <nemeth class="inline">⠠⠥⠷⠼⠂⠖⠾</nemeth> compute, (a) <nemeth class="inline">⠼⠢⠡⠶</nemeth>, and (b) <nemeth class="inline">⠼⠒⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ruZ">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="cmb">State the definition of a group.</p>
          </article>
          <article class="exercise exercise-like" id="XCi">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="Itk">Explain a single method that will decide if a subset of a group is itself a subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="DJr">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="oAt">Explain the origin of the term “abelian” for a commutative group.</p>
          </article>
          <article class="exercise exercise-like" id="jQA">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="UHC">Give an example of a group you have seen in your previous mathematical experience, but that is not an example in this chapter.</p>
          </article>
        </section>
        <section class="exercises" id="OCI">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">3.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="lZZ">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="wzr">Find all <nemeth class="inline">⠭⠀⠈⠑⠀⠸⠠⠵</nemeth> satisfying each of the following equations.</p>
            <ol class="outerlist">
              <li>a. <p id="IUN"><nemeth class="inline">⠼⠒⠭⠀⠸⠇⠀⠼⠆⠷⠍⠕⠙⠀⠶⠾</nemeth></p></li>
              <li>b. <p id="pbW"><nemeth class="inline">⠼⠢⠭⠬⠂⠀⠸⠇⠀⠼⠂⠒⠷⠍⠕⠙⠀⠆⠒⠾</nemeth></p></li>
              <li>c. <p id="Vjf"><nemeth class="inline">⠼⠢⠭⠬⠂⠀⠸⠇⠀⠼⠂⠒⠷⠍⠕⠙⠀⠆⠖⠾</nemeth></p></li>
              <li>d. <p id="Bqo"><nemeth class="inline">⠼⠔⠭⠀⠸⠇⠀⠼⠒⠷⠍⠕⠙⠀⠢⠾</nemeth></p></li>
              <li>e. <p id="hxx"><nemeth class="inline">⠼⠢⠭⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠖⠾</nemeth></p></li>
              <li>f. <p id="NEG"><nemeth class="inline">⠼⠒⠭⠀⠸⠇⠀⠼⠂⠷⠍⠕⠙⠀⠖⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="NLK"><span class="type">Hint</span>:<p id="nBe">(a) <nemeth class="inline">⠼⠒⠬⠶⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠲⠠⠀⠼⠒⠠⠀⠼⠂⠴⠠⠀⠄⠄⠄⠨⠾</nemeth>; (c) <nemeth class="inline">⠼⠂⠦⠬⠆⠖⠸⠠⠵</nemeth>; (e) <nemeth class="inline">⠼⠢⠬⠖⠸⠠⠵</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Shi">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="cGA">Which of the following multiplication tables defined on the set <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠷⠁⠠⠀⠃⠠⠀⠉⠠⠀⠙⠨⠾</nemeth> form a group? Support your answer in each case.</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠘⠨⠡⠀⠁⠀⠃⠀⠉⠀⠙⠀⠁⠀⠁⠀⠉⠀⠙⠀⠁⠀⠃⠀⠃⠀⠃⠀⠉⠀⠙⠀⠉⠀⠉⠀⠙⠀⠁⠀⠃⠀⠙⠀⠙⠀⠁⠀⠃⠀⠉</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠘⠨⠡⠀⠁⠀⠃⠀⠉⠀⠙⠀⠁⠀⠁⠀⠃⠀⠉⠀⠙⠀⠃⠀⠃⠀⠁⠀⠙⠀⠉⠀⠉⠀⠉⠀⠙⠀⠁⠀⠃⠀⠙⠀⠙⠀⠉⠀⠃⠀⠁</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠘⠨⠡⠀⠁⠀⠃⠀⠉⠀⠙⠀⠁⠀⠁⠀⠃⠀⠉⠀⠙⠀⠃⠀⠃⠀⠉⠀⠙⠀⠁⠀⠉⠀⠉⠀⠙⠀⠁⠀⠃⠀⠙⠀⠙⠀⠁⠀⠃⠀⠉</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠘⠨⠡⠀⠁⠀⠃⠀⠉⠀⠙⠀⠁⠀⠁⠀⠃⠀⠉⠀⠙⠀⠃⠀⠃⠀⠁⠀⠉⠀⠙⠀⠉⠀⠉⠀⠃⠀⠁⠀⠙⠀⠙⠀⠙⠀⠙⠀⠃⠀⠉</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="aac"><span class="type">Hint</span>:<p id="TIn">(a) Not a group; (c) a group.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="yor">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="INJ">Write out Cayley tables for groups formed by the symmetries of a rectangle and for <nemeth class="inline">⠷⠸⠠⠵⠲⠠⠀⠬⠾</nemeth>. How many elements are in each group? Are the groups the same? Why or why not?</p>
          </article>
          <article class="exercise exercise-like" id="evA">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="oUS">Describe the symmetries of a rhombus and prove that the set of symmetries forms a group. Give Cayley tables for both the symmetries of a rectangle and the symmetries of a rhombus. Are the symmetries of a rectangle and those of a rhombus the same?</p>
          </article>
          <article class="exercise exercise-like" id="KCJ">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Vcb">Describe the symmetries of a square and prove that the set of symmetries is a group. Give a Cayley table for the symmetries. How many ways can the vertices of a square be permuted? Is each permutation necessarily a symmetry of the square? The symmetry group of the square is denoted by <nemeth class="inline">⠠⠙⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="qJS">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="Bjk">Give a multiplication table for the group <nemeth class="inline">⠠⠥⠷⠼⠂⠆⠾</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="eJV"><span class="type">Hint</span>:<div class="displaymath"><nemeth>⠡⠀⠂⠀⠢⠀⠶⠀⠂⠂⠀⠂⠀⠂⠀⠢⠀⠶⠀⠂⠂⠀⠢⠀⠢⠀⠂⠀⠂⠂⠀⠶⠀⠶⠀⠶⠀⠂⠂⠀⠂⠀⠢⠀⠂⠂⠀⠂⠂⠀⠶⠀⠢⠀⠂</nemeth></div></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="WRb">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="hqt">Let <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠸⠠⠗⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠤⠼⠂⠨⠾</nemeth> and define a binary operation on <i class="one-letter">S</i> by <nemeth class="inline">⠁⠈⠼⠃⠀⠨⠅⠀⠁⠬⠃⠬⠁⠃</nemeth>. Prove that <nemeth class="inline">⠷⠠⠎⠠⠀⠈⠼⠾</nemeth> is an abelian group.</p>
          </article>
          <article class="exercise exercise-like" id="CYk">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="NxC">Give an example of two elements <i class="one-letter">A</i> and <i class="one-letter">B</i> in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> with <nemeth class="inline">⠠⠁⠠⠃⠀⠌⠨⠅⠀⠠⠃⠠⠁</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Xfw"><span class="type">Hint</span>:<p id="fWF">Pick two matrices. Almost any pair will work.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="jft">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="tEL">Prove that the product of two matrices in <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> has determinant one.</p>
          </article>
          <article class="exercise exercise-like" id="PmC">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="ZLU">Prove that the set of matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠭⠀⠽⠠⠾⠀⠠⠷⠴⠀⠂⠀⠵⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">is a group under matrix multiplication. This group, known as the <dfn class="terminology">Heisenberg group</dfn>, is important in quantum physics. Matrix multiplication in the Heisenberg group is defined by</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠼⠂⠀⠭⠀⠽⠠⠾⠀⠠⠷⠴⠀⠂⠀⠵⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠠⠷⠂⠀⠭⠘⠄⠐⠀⠽⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠂⠀⠵⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾⠀⠨⠅⠀⠠⠷⠼⠂⠀⠭⠬⠭⠘⠄⠐⠀⠽⠬⠽⠘⠄⠐⠬⠭⠵⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠂⠀⠵⠬⠵⠘⠄⠐⠠⠾⠀⠠⠷⠴⠀⠴⠀⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="vtL">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="FTd">Prove that <nemeth class="inline">⠙⠑⠞⠀⠷⠠⠁⠠⠃⠾⠀⠨⠅⠀⠙⠑⠞⠀⠷⠠⠁⠾⠙⠑⠞⠀⠷⠠⠃⠾</nemeth> in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>. Use this result to show that the binary operation in the group <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> is closed; that is, if <i class="one-letter">A</i> and <i class="one-letter">B</i> are in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>, then <nemeth class="inline">⠠⠁⠠⠃⠀⠈⠑⠀⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="bAU">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="mam">Let <nemeth class="inline">⠸⠠⠵⠆⠘⠝⠐⠀⠨⠅⠀⠨⠷⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠒⠀⠁⠰⠊⠐⠀⠈⠑⠀⠸⠠⠵⠆⠨⠾</nemeth>. Define a binary operation on <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> by</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠬⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠝⠐⠾⠀⠨⠅⠀⠷⠁⠂⠬⠃⠂⠠⠀⠁⠆⠬⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠬⠃⠰⠝⠐⠾</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <nemeth class="inline">⠸⠠⠵⠆⠘⠝</nemeth> is a group under this operation. This group is important in algebraic coding theory.</p>
          </article>
          <article class="exercise exercise-like" id="HId">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="Shv">Show that <nemeth class="inline">⠸⠠⠗⠘⠈⠼⠐⠀⠨⠅⠀⠸⠠⠗⠄⡳⠭⠆⠆⠂⠖⠄⠨⠷⠴⠨⠾</nemeth> is a group under the operation of multiplication.</p>
          </article>
          <article class="exercise exercise-like" id="nPm">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="yoE">Given the groups <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> and <nemeth class="inline">⠸⠠⠵</nemeth>, let <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠸⠠⠗⠘⠈⠼⠐⠈⠡⠸⠠⠵</nemeth>. Define a binary operation <nemeth class="inline">⠘⠨⠡</nemeth> on <i class="one-letter">G</i> by <nemeth class="inline">⠷⠁⠠⠀⠍⠾⠘⠨⠡⠷⠃⠠⠀⠝⠾⠀⠨⠅⠀⠷⠁⠃⠠⠀⠍⠬⠝⠾</nemeth>. Show that <i class="one-letter">G</i> is a group under this operation.</p>
          </article>
          <article class="exercise exercise-like" id="TWv">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="evN">Prove or disprove that every group containing six elements is abelian.</p>
            <div class="solutions">
              <div class="hint solution-like" id="UkQ"><span class="type">Hint</span>:<p id="MdO">There is a nonabelian group containing six elements.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="AdE">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="KCW">Give a specific example of some group <i class="one-letter">G</i> and elements <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠛</nemeth> where <nemeth class="inline">⠷⠛⠓⠾⠘⠝⠐⠀⠌⠨⠅⠀⠛⠘⠝⠐⠓⠘⠝</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="gzi"><span class="type">Hint</span>:<p id="skX">Look at the symmetry group of an equilateral triangle or a square.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="gkN">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="qKf">Give an example of three different groups with eight elements. Why are the groups different?</p>
            <div class="solutions">
              <div class="hint solution-like" id="sNA"><span class="type">Hint</span>:<p id="Ysg">The are five different groups of order 8.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="MrW">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="WRo">Show that there are <nemeth class="inline">⠝⠯</nemeth> permutations of a set containing <i class="one-letter">n</i> items.</p>
            <div class="solutions">
              <div class="hint solution-like" id="FbS"><span class="type">Hint</span>:<p id="Ezp">Let</p><div class="displaymath"><nemeth>⠨⠎⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠄⠄⠄⠀⠝⠠⠾⠀⠠⠷⠁⠂⠀⠁⠆⠀⠄⠄⠄⠀⠁⠰⠝⠠⠾</nemeth></div><p data-braille="continuation">be in <nemeth class="inline">⠠⠎⠰⠝</nemeth>. All of the <nemeth class="inline">⠁⠰⠊</nemeth>s must be distinct. There are <i class="one-letter">n</i> ways to choose <nemeth class="inline">⠁⠂</nemeth>, <nemeth class="inline">⠝⠤⠂</nemeth> ways to choose <nemeth class="inline">⠁⠆⠠⠀⠄⠄⠄</nemeth>, 2 ways to choose <nemeth class="inline">⠁⠰⠝⠤⠂</nemeth>, and only one way to choose <nemeth class="inline">⠁⠰⠝</nemeth>. Therefore, we can form <nemeth class="inline">⠨⠎</nemeth> in <nemeth class="inline">⠝⠷⠝⠤⠂⠾⠀⠄⠄⠄⠀⠼⠆⠡⠂⠀⠨⠅⠀⠝⠯</nemeth> ways.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="szf">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="CYx">Show that</p>
            <div class="displaymath">
              <nemeth>⠼⠴⠬⠁⠀⠸⠇⠀⠁⠬⠴⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">for all <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="YGo">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="jfG">Prove that there is a multiplicative identity for the integers modulo <i class="one-letter">n</i>:</p>
            <div class="displaymath">
              <nemeth>⠁⠡⠂⠀⠸⠇⠀⠁⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="ENx">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="PmP">For each <nemeth class="inline">⠁⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth> find an element <nemeth class="inline">⠃⠀⠈⠑⠀⠸⠠⠵⠰⠝</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠁⠬⠃⠀⠸⠇⠀⠃⠬⠁⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="kUG">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="vtY">Show that addition and multiplication mod <i class="one-letter">n</i> are well defined operations. That is, show that the operations do not depend on the choice of the representative from the equivalence classes mod <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="RbP">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="bBh">Show that addition and multiplication mod <i class="one-letter">n</i> are associative operations.</p>
          </article>
          <article class="exercise exercise-like" id="xiY">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="HIq">Show that multiplication distributes over addition modulo <i class="one-letter">n</i>:</p>
            <div class="displaymath">
              <nemeth>⠁⠷⠃⠬⠉⠾⠀⠸⠇⠀⠁⠃⠬⠁⠉⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="dqh">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="nPz">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be elements in a group <i class="one-letter">G</i>. Prove that <nemeth class="inline">⠁⠃⠘⠝⠐⠁⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠘⠝</nemeth> for <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Chm"><span class="type">Hint</span>:<div class="displaymath"><nemeth>⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠘⠝⠀⠀⠨⠅⠀⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠀⠄⠄⠄⠀⠷⠁⠃⠁⠘⠤⠼⠂⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠀⠄⠄⠄⠀⠃⠷⠁⠁⠘⠤⠼⠂⠐⠾⠃⠁⠘⠤⠼⠂⠐⠀⠀⠀⠀⠨⠅⠀⠁⠃⠘⠝⠐⠁⠘⠤⠼⠂</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Jxq">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="TWI">Let <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> be the group of units in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>. If <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠆</nemeth>, prove that there is an element <nemeth class="inline">⠅⠀⠈⠑⠀⠠⠥⠷⠝⠾</nemeth> such that <nemeth class="inline">⠅⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠅⠀⠌⠨⠅⠀⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="pEz">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="AdR">Prove that the inverse of <nemeth class="inline">⠛⠂⠛⠆⠀⠄⠄⠄⠀⠛⠰⠝⠐</nemeth> is <nemeth class="inline">⠛⠰⠝⠘⠤⠼⠂⠐⠛⠰⠝⠤⠂⠘⠤⠼⠂⠐⠀⠄⠄⠄⠀⠛⠂⠘⠤⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="VLI">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="gla">Prove the remainder of Proposition 3.2.14: if <i class="one-letter">G</i> is a group and <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>, then the equation <nemeth class="inline">⠭⠁⠀⠨⠅⠀⠃</nemeth> has a unique solution in <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="BSR">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="Msj">Prove Theorem 3.2.16.</p>
          </article>
          <article class="exercise exercise-like" id="iaa">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="szs">Prove the right and left cancellation laws for a group <i class="one-letter">G</i>; that is, show that in the group <i class="one-letter">G</i>, <nemeth class="inline">⠃⠁⠀⠨⠅⠀⠉⠁</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth> and <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠁⠉</nemeth> implies <nemeth class="inline">⠃⠀⠨⠅⠀⠉</nemeth> for elements <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠀⠈⠑⠀⠠⠛</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Ohj">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="YGB">Show that if <nemeth class="inline">⠁⠘⠆⠐⠀⠨⠅⠀⠑</nemeth> for all elements <i class="one-letter">a</i> in a group <i class="one-letter">G</i>, then <i class="one-letter">G</i> must be abelian.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Tfx"><span class="type">Hint</span>:<p id="QNH">Since <nemeth class="inline">⠁⠃⠁⠃⠀⠨⠅⠀⠷⠁⠃⠾⠘⠆⠐⠀⠨⠅⠀⠑⠀⠨⠅⠀⠁⠘⠆⠐⠃⠘⠆⠐⠀⠨⠅⠀⠁⠁⠃⠃</nemeth>, we know that <nemeth class="inline">⠃⠁⠀⠨⠅⠀⠁⠃</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uos">
            <h6 class="heading">
              <span class="codenumber">32<span class="period">.</span></span>
            </h6>
            <p id="ENK">Show that if <i class="one-letter">G</i> is a finite group of even order, then there is an <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> such that <i class="one-letter">a</i> is not the identity and <nemeth class="inline">⠁⠘⠆⠐⠀⠨⠅⠀⠑</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="avB">
            <h6 class="heading">
              <span class="codenumber">33<span class="period">.</span></span>
            </h6>
            <p id="kUT">Let <i class="one-letter">G</i> be a group and suppose that <nemeth class="inline">⠷⠁⠃⠾⠘⠆⠐⠀⠨⠅⠀⠁⠘⠆⠐⠃⠘⠆</nemeth> for all <i class="one-letter">a</i> and <i class="one-letter">b</i> in <i class="one-letter">G</i>. Prove that <i class="one-letter">G</i> is an abelian group.</p>
          </article>
          <article class="exercise exercise-like" id="GCK">
            <h6 class="heading">
              <span class="codenumber">34<span class="period">.</span></span>
            </h6>
            <p id="Rcc">Find all the subgroups of <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒</nemeth>. Use this information to show that <nemeth class="inline">⠸⠠⠵⠒⠈⠡⠸⠠⠵⠒</nemeth> is not the same group as <nemeth class="inline">⠸⠠⠵⠔</nemeth>. (See Example 3.3.5 for a short description of the product of groups.)</p>
          </article>
          <article class="exercise exercise-like" id="mJT">
            <h6 class="heading">
              <span class="codenumber">35<span class="period">.</span></span>
            </h6>
            <p id="xjl">Find all the subgroups of the symmetry group of an equilateral triangle.</p>
            <div class="solutions">
              <div class="hint solution-like" id="DWz"><span class="type">Hint</span>:<p id="wUQ"><nemeth class="inline">⠠⠓⠂⠀⠨⠅⠀⠨⠷⠊⠙⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠆⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠗⠂⠠⠀⠨⠗⠆⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠒⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠂⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠲⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠆⠨⠾</nemeth>, <nemeth class="inline">⠠⠓⠢⠀⠨⠅⠀⠨⠷⠊⠙⠠⠀⠨⠍⠒⠨⠾</nemeth>, <nemeth class="inline">⠠⠎⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="SRc">
            <h6 class="heading">
              <span class="codenumber">36<span class="period">.</span></span>
            </h6>
            <p id="dqu">Compute the subgroups of the symmetry group of a square.</p>
          </article>
          <article class="exercise exercise-like" id="yYl">
            <h6 class="heading">
              <span class="codenumber">37<span class="period">.</span></span>
            </h6>
            <p id="JxD">Let <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠆⠘⠅⠐⠒⠀⠅⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>. Show that <i class="one-letter">H</i> is a subgroup of <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ffu">
            <h6 class="heading">
              <span class="codenumber">38<span class="period">.</span></span>
            </h6>
            <p id="pEM">Let <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth> and <nemeth class="inline">⠝⠸⠠⠵⠀⠨⠅⠀⠨⠷⠝⠅⠒⠀⠅⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>. Prove that <nemeth class="inline">⠝⠸⠠⠵</nemeth> is a subgroup of <nemeth class="inline">⠸⠠⠵</nemeth>. Show that these subgroups are the only subgroups of <nemeth class="inline">⠸⠠⠵</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="LmD">
            <h6 class="heading">
              <span class="codenumber">39<span class="period">.</span></span>
            </h6>
            <p id="VLV">Let <nemeth class="inline">⠸⠠⠞⠀⠨⠅⠀⠨⠷⠵⠀⠈⠑⠀⠸⠠⠉⠘⠈⠼⠐⠒⠀⠳⠵⠳⠀⠨⠅⠀⠼⠂⠨⠾</nemeth>. Prove that <nemeth class="inline">⠸⠠⠞</nemeth> is a subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="rtM">
            <h6 class="heading">
              <span class="codenumber">40<span class="period">.</span></span>
            </h6>
            <p id="BTe">Let <i class="one-letter">G</i> consist of the <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices of the form</p>
            <div class="displaymath">
              <nemeth>⠠⠷⠉⠕⠎⠀⠨⠹⠀⠤⠎⠊⠝⠀⠨⠹⠠⠾⠀⠠⠷⠎⠊⠝⠀⠨⠹⠀⠉⠕⠎⠀⠨⠹⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠨⠹⠀⠈⠑⠀⠸⠠⠗</nemeth>. Prove that <i class="one-letter">G</i> is a subgroup of <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="XAV">
            <h6 class="heading">
              <span class="codenumber">41<span class="period">.</span></span>
            </h6>
            <p id="ian">Prove that</p>
            <div class="displaymath">
              <nemeth>⠠⠛⠀⠨⠅⠀⠨⠷⠁⠬⠃⠜⠆⠻⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠟⠁⠝⠙⠁⠁⠝⠙⠃⠁⠗⠑⠀⠝⠕⠞⠀⠃⠕⠞⠓⠀⠵⠑⠗⠕⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a subgroup of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> under the group operation of multiplication.</p>
            <div class="solutions">
              <div class="hint solution-like" id="UUK"><span class="type">Hint</span>:<p id="dbZ">The identity of <i class="one-letter">G</i> is <nemeth class="inline">⠼⠂⠀⠨⠅⠀⠼⠂⠬⠴⠜⠆⠻</nemeth>. Since <nemeth class="inline">⠷⠁⠬⠃⠜⠆⠻⠾⠷⠉⠬⠙⠜⠆⠻⠾⠀⠨⠅⠀⠷⠁⠉⠬⠆⠃⠙⠾⠬⠷⠁⠙⠬⠃⠉⠾⠜⠆⠻</nemeth>, <i class="one-letter">G</i> is closed under multiplication. Finally, <nemeth class="inline">⠷⠁⠬⠃⠜⠆⠻⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠸⠌⠷⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠾⠤⠃⠜⠆⠻⠸⠌⠷⠁⠘⠆⠐⠤⠆⠃⠘⠆⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="jPn">
            <h6 class="heading">
              <span class="codenumber">42<span class="period">.</span></span>
            </h6>
            <p id="Ohw">Let <i class="one-letter">G</i> be the group of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices under addition and</p>
            <div class="displaymath">
              <nemeth>⠠⠓⠀⠨⠅⠀⠨⠷⠠⠷⠁⠀⠃⠠⠾⠀⠠⠷⠉⠀⠙⠠⠾⠒⠀⠁⠬⠙⠀⠨⠅⠀⠼⠴⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Prove that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="PWw">
            <h6 class="heading">
              <span class="codenumber">43<span class="period">.</span></span>
            </h6>
            <p id="uoF">Prove or disprove: <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠵⠾</nemeth>, the set of <nemeth class="inline">⠼⠆⠈⠡⠆</nemeth> matrices with integer entries and determinant one, is a subgroup of <nemeth class="inline">⠠⠎⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="wdF">
            <h6 class="heading">
              <span class="codenumber">44<span class="period">.</span></span>
            </h6>
            <p id="avO">List the subgroups of the quaternion group, <nemeth class="inline">⠠⠟⠦</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="ckO">
            <h6 class="heading">
              <span class="codenumber">45<span class="period">.</span></span>
            </h6>
            <p id="GCX">Prove that the intersection of two subgroups of a group <i class="one-letter">G</i> is also a subgroup of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="IrX">
            <h6 class="heading">
              <span class="codenumber">46<span class="period">.</span></span>
            </h6>
            <p id="mKg">Prove or disprove: If <i class="one-letter">H</i> and <i class="one-letter">K</i> are subgroups of a group <i class="one-letter">G</i>, then <nemeth class="inline">⠠⠓⠨⠬⠠⠅</nemeth> is a subgroup of <i class="one-letter">G</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="FLM"><span class="type">Hint</span>:<p id="Jji">Look at <nemeth class="inline">⠠⠎⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="ozg">
            <h6 class="heading">
              <span class="codenumber">47<span class="period">.</span></span>
            </h6>
            <p id="SRp">Prove or disprove: If <i class="one-letter">H</i> and <i class="one-letter">K</i> are subgroups of a group <i class="one-letter">G</i>, then <nemeth class="inline">⠠⠓⠠⠅⠀⠨⠅⠀⠨⠷⠓⠅⠒⠀⠓⠀⠈⠑⠀⠠⠓⠁⠝⠙⠅⠀⠈⠑⠀⠠⠅⠨⠾</nemeth> is a subgroup of <i class="one-letter">G</i>. What if <i class="one-letter">G</i> is abelian?</p>
          </article>
          <article class="exercise exercise-like" id="UGp">
            <h6 class="heading">
              <span class="codenumber">48<span class="period">.</span></span>
            </h6>
            <p id="yYy">Let <i class="one-letter">G</i> be a group and <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>. Show that</p>
            <div class="displaymath">
              <nemeth>⠠⠵⠷⠠⠛⠾⠀⠨⠅⠀⠨⠷⠭⠀⠈⠑⠀⠠⠛⠒⠀⠛⠭⠀⠨⠅⠀⠭⠛⠋⠕⠗⠀⠁⠇⠇⠛⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">is a subgroup of <i class="one-letter">G</i>. This subgroup is called the <dfn class="terminology">center</dfn> of <i class="one-letter">G</i>. </p>
          </article>
          <article class="exercise exercise-like" id="ANy">
            <h6 class="heading">
              <span class="codenumber">49<span class="period">.</span></span>
            </h6>
            <p id="ffH">Let <i class="one-letter">a</i> and <i class="one-letter">b</i> be elements of a group <i class="one-letter">G</i>. If <nemeth class="inline">⠁⠘⠲⠐⠃⠀⠨⠅⠀⠃⠁</nemeth> and <nemeth class="inline">⠁⠘⠒⠐⠀⠨⠅⠀⠑</nemeth>, prove that <nemeth class="inline">⠁⠃⠀⠨⠅⠀⠃⠁</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="eow"><span class="type">Hint</span>:<p id="pqr"><nemeth class="inline">⠃⠁⠀⠨⠅⠀⠁⠘⠲⠐⠃⠀⠨⠅⠀⠁⠘⠒⠐⠁⠃⠀⠨⠅⠀⠁⠃</nemeth></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="gUH">
            <h6 class="heading">
              <span class="codenumber">50<span class="period">.</span></span>
            </h6>
            <p id="LmQ">Give an example of an infinite group in which every nontrivial subgroup is infinite.</p>
          </article>
          <article class="exercise exercise-like" id="NbQ">
            <h6 class="heading">
              <span class="codenumber">51<span class="period">.</span></span>
            </h6>
            <p id="rtZ">If <nemeth class="inline">⠭⠽⠀⠨⠅⠀⠭⠘⠤⠼⠂⠐⠽⠘⠤⠼⠂</nemeth> for all <i class="one-letter">x</i> and <i class="one-letter">y</i> in <i class="one-letter">G</i>, prove that <i class="one-letter">G</i> must be abelian.</p>
          </article>
          <article class="exercise exercise-like" id="tiZ">
            <h6 class="heading">
              <span class="codenumber">52<span class="period">.</span></span>
            </h6>
            <p id="XBi">Prove or disprove: Every proper subgroup of a nonabelian group is nonabelian.</p>
          </article>
          <article class="exercise exercise-like" id="Zqi">
            <h6 class="heading">
              <span class="codenumber">53<span class="period">.</span></span>
            </h6>
            <p id="DIr">Let <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i> and</p>
            <div class="displaymath">
              <nemeth>⠠⠉⠷⠠⠓⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠓⠀⠨⠅⠀⠓⠛⠋⠕⠗⠀⠁⠇⠇⠓⠀⠈⠑⠀⠠⠓⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Prove <nemeth class="inline">⠠⠉⠷⠠⠓⠾</nemeth> is a subgroup of <i class="one-letter">G</i>. This subgroup is called the <dfn class="terminology">centralizer</dfn> of <i class="one-letter">H</i> in <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="Fxr">
            <h6 class="heading">
              <span class="codenumber">54<span class="period">.</span></span>
            </h6>
            <p id="jPA">Let <i class="one-letter">H</i> be a subgroup of <i class="one-letter">G</i>. If <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, show that <nemeth class="inline">⠛⠠⠓⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠷⠛⠓⠛⠘⠤⠼⠂⠐⠒⠀⠓⠀⠈⠑⠀⠠⠓⠨⠾</nemeth> is also a subgroup of <i class="one-letter">G</i>.</p>
          </article>
        </section>
        <section class="exercises" id="uJR">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">3.6</span> <span class="title">Additional Exercises: Detecting Errors</span></div>
          <article class="exercise exercise-like" id="lEA">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title"><abbr class="acronym">UPC</abbr> Symbols.</span>
            </h6>
            <p id="PWJ">Universal Product Code  (<abbr class="acronym">UPC</abbr>) symbols are found on most products in grocery and retail stores. The <abbr class="acronym">UPC</abbr> symbol is a 12-digit code identifying the manufacturer of a product and the product itself (Figure 3.6.1). The first 11 digits contain information about the product; the twelfth digit is used for error detection. If <nemeth class="inline">⠙⠂⠙⠆⠀⠄⠄⠄⠀⠙⠂⠆</nemeth> is a valid <abbr class="acronym">UPC</abbr> number, then</p>
            <div class="displaymath">
              <nemeth>⠼⠒⠡⠙⠂⠬⠂⠡⠙⠆⠬⠒⠡⠙⠒⠬⠄⠄⠄⠬⠒⠡⠙⠂⠂⠬⠂⠡⠙⠂⠆⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠂⠴⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <ol class="outerlist">
              <li>a. <p id="Soz">Show that the <abbr class="acronym">UPC</abbr> number 0-50000-30042-6, which appears in Figure 3.6.1, is a valid <abbr class="acronym">UPC</abbr> number.</p></li>
              <li>b. <p id="yvI">Show that the number 0-50000-30043-6 is not a valid <abbr class="acronym">UPC</abbr> number.</p></li>
              <li>c. <p id="eCR">Write a formula to calculate the check digit, <nemeth class="inline">⠙⠂⠆</nemeth>, in the <abbr class="acronym">UPC</abbr> number.</p></li>
              <li>d. <p id="KKa">The <abbr class="acronym">UPC</abbr> error detection scheme can detect most transposition errors; that is, it can determine if two digits have been interchanged. Show that the transposition error 0-05000-30042-6 is not detected. Find a transposition error that is detected. Can you find a general rule for the types of transposition errors that can be detected?</p></li>
              <li>e. <p id="qRj">Write a program that will determine whether or not a <abbr class="acronym">UPC</abbr> number is valid.</p></li>
            </ol>
            <figure class="figure figure-like" data-braille="figure-like" id="wdS">
              <div data-braille="image">
                <p>Image: The vertical lines of a UPC bar scan code for 0-05000-30042-6</p>
                <p>ID: image-6</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">3.6.1<span class="period">.</span></span><span class="space"> </span>A <abbr class="acronym">UPC</abbr> code</figcaption>
            </figure>
          </article>
          <article class="exercise exercise-like" id="RLJ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="clb">It is often useful to use an inner product notation for this type of error detection scheme; hence, we will use the notion</p>
            <div class="displaymath">
              <nemeth>⠷⠙⠂⠠⠀⠙⠆⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠅⠐⠾⠡⠷⠺⠂⠠⠀⠺⠆⠠⠀⠄⠄⠄⠀⠠⠀⠺⠰⠅⠐⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">to mean</p>
            <div class="displaymath">
              <nemeth>⠙⠂⠺⠂⠬⠙⠆⠺⠆⠬⠄⠄⠄⠬⠙⠰⠅⠐⠺⠰⠅⠐⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="Isk">Suppose that <nemeth class="inline">⠷⠙⠂⠠⠀⠙⠆⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠅⠐⠾⠡⠷⠺⠂⠠⠀⠺⠆⠠⠀⠄⠄⠄⠀⠠⠀⠺⠰⠅⠐⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth> is an error detection scheme for the <i class="one-letter">k</i>-digit identification number <nemeth class="inline">⠙⠂⠙⠆⠀⠄⠄⠄⠀⠙⠰⠅⠐</nemeth>, where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠙⠰⠊⠐⠀⠐⠅⠀⠝</nemeth>. Prove that all single-digit errors are detected if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠺⠰⠊⠐⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠊⠀⠐⠅⠱⠀⠅</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="xSS">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="ozt">Let <nemeth class="inline">⠷⠙⠂⠠⠀⠙⠆⠠⠀⠄⠄⠄⠀⠠⠀⠙⠰⠅⠐⠾⠡⠷⠺⠂⠠⠀⠺⠆⠠⠀⠄⠄⠄⠀⠠⠀⠺⠰⠅⠐⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠝⠾</nemeth> be an error detection scheme for the <i class="one-letter">k</i>-digit identification number <nemeth class="inline">⠙⠂⠙⠆⠀⠄⠄⠄⠀⠙⠰⠅⠐</nemeth>, where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠙⠰⠊⠐⠀⠐⠅⠀⠝</nemeth>. Prove that all transposition errors of two digits <nemeth class="inline">⠙⠰⠊</nemeth> and <nemeth class="inline">⠙⠰⠚</nemeth> are detected if and only if <nemeth class="inline">⠛⠉⠙⠀⠷⠺⠰⠊⠐⠤⠺⠰⠚⠐⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth> for <i class="one-letter">i</i> and <i class="one-letter">j</i> between <nemeth class="inline">⠼⠂</nemeth> and <i class="one-letter">k</i>.</p>
          </article>
          <article class="exercise exercise-like" id="eab">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
              <span class="space"> </span>
              <span class="title"><abbr class="acronym">ISBN</abbr> Codes.</span>
            </h6>
            <p id="UGC">Every book has an International Standard Book Number (<abbr class="acronym">ISBN</abbr>) code. This is a 10-digit code indicating the book's publisher and title. The tenth digit is a check digit satisfying</p>
            <div class="displaymath">
              <nemeth>⠷⠙⠂⠠⠀⠙⠆⠠⠀⠄⠄⠄⠀⠠⠀⠙⠂⠴⠾⠡⠷⠼⠂⠴⠠⠀⠼⠔⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠾⠀⠸⠇⠀⠼⠴⠷⠍⠕⠙⠀⠂⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. One problem is that <nemeth class="inline">⠙⠂⠴</nemeth> might have to be a 10 to make the inner product zero; in this case, 11 digits would be  needed to make this scheme work. Therefore, the character X is used for the eleventh digit. So <abbr class="acronym">ISBN</abbr> 3-540-96035-X is a valid <abbr class="acronym">ISBN</abbr> code.</p>
            <ol class="outerlist">
              <li>a. <p id="WYs">Is <abbr class="acronym">ISBN</abbr> 0-534-91500-0 a valid <abbr class="acronym">ISBN</abbr> code? What about <abbr class="acronym">ISBN</abbr> 0-534-91700-0 and <abbr class="acronym">ISBN</abbr> 0-534-19500-0?</p></li>
              <li>b. <p id="DfB">Does this method detect all single-digit errors? What about all transposition errors?</p></li>
              <li>c. <p id="jmK">How many different <abbr class="acronym">ISBN</abbr> codes are there?</p></li>
              <li>d. <p id="PtT">Write a computer program that will calculate the check digit for the first nine digits of an <abbr class="acronym">ISBN</abbr> code.</p></li>
              <li>e. <p id="vBc">A publisher has houses in Germany and the United States. Its German prefix is 3-540. If its United States prefix will be 0-<code class="code-inline tex2jax_ignore">abc</code>, find <code class="code-inline tex2jax_ignore">abc</code> such that the rest of the <abbr class="acronym">ISBN</abbr> code will be the same for a book printed in Germany and in the United States. Under the <abbr class="acronym">ISBN</abbr> coding method the first digit identifies the language; German is 3 and English is 0. The next group of numbers identifies the publisher, and the last group identifies the specific book.</p></li>
            </ol>
          </article>
        </section>
        <section class="references" id="muP">
          <div class="none"><span class="type">References</span> <span class="codenumber">3.7</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="SBY"><div class="bibitem">[1]</div>  <div class="bibentry">Burnside, W. <i>Theory of Groups of Finite Order</i>. 2nd ed. Cambridge University Press, Cambridge, 1911; Dover, New York, 1953.  A classic.  Also available at books.google.com.</div></article>
          <article class="bib" id="yJh"><div class="bibitem">[2]</div>  <div class="bibentry">Gallian, J. A. and Winters, S. “Modular Arithmetic in the Marketplace,” <i>The American Mathematical Monthly</i> <b>95</b> (1988): 548–51.</div></article>
          <article class="bib" id="eQq"><div class="bibitem">[3]</div>  <div class="bibentry">Gallian, J. A. <i>Contemporary Abstract Algebra</i>. 7th ed. Brooks/Cole, Belmont, CA, 2009.</div></article>
          <article class="bib" id="KXz"><div class="bibitem">[4]</div>  <div class="bibentry">Hall, M. <i>Theory of Groups</i>. 2nd ed. American Mathematical Society, Providence, 1959.</div></article>
          <article class="bib" id="reI"><div class="bibitem">[5]</div>  <div class="bibentry">Kurosh, A. E. <i>The Theory of Groups</i>, vols. I and II. American Mathematical Society, Providence, 1979.</div></article>
          <article class="bib" id="XlR"><div class="bibitem">[6]</div>  <div class="bibentry">Rotman, J. J. <i>An Introduction to the Theory of Groups</i>. 4th ed. Springer, New York, 1995.</div></article>
        </section>
        <section class="section" id="fAT">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">3.8</span> <span class="title">Sage</span></div>
          <section class="introduction" id="kzh">
            <p id="kkZ">Many of the groups discussed in this chapter are available for study in Sage. It is important to understand that sets that form algebraic objects (groups in this chapter) are called “parents” in Sage, and elements of these objects are called, well, “elements.” So every element belongs to a parent (in other words, is contained in some set). We can ask about properties of parents (finite? order? abelian?), and we can ask about properties of individual elements (identity? inverse?). In the following we will show you how to create some of these common groups and begin to explore their properties with Sage.</p>
          </section>
          <section class="subsection" id="pZY">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.8.1</span> <span class="title">Integers mod n</span></div>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z8 = Integers(8)
Z8
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z8.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[0, 1, 2, 3, 4, 5, 6, 7]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = Z8.an_element(); a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 8
</div>
            </article>
            <p id="QGD">We would like to work with elements of <code class="code-inline tex2jax_ignore">Z8</code>. If you were to type a <code class="code-inline tex2jax_ignore">6</code> into a compute cell right now, what would you mean? The integer <nemeth class="inline">⠼⠖</nemeth>, the rational number <nemeth class="inline">⠹⠖⠌⠂⠼</nemeth>, the real number <nemeth class="inline">⠼⠖⠨⠴⠴⠴⠴⠴</nemeth>, or the complex number <nemeth class="inline">⠼⠖⠨⠴⠴⠴⠴⠴⠬⠴⠨⠴⠴⠴⠴⠴⠊</nemeth>? Or perhaps you really do want the integer <nemeth class="inline">⠼⠖</nemeth> mod <nemeth class="inline">⠼⠦</nemeth>? Sage really has no idea what you mean or want. To make this clear, you can “coerce” <code class="code-inline tex2jax_ignore">6</code> into <code class="code-inline tex2jax_ignore">Z8</code> with the syntax <code class="code-inline tex2jax_ignore">Z8(6)</code>. Without this, Sage will treat a input number like <code class="code-inline tex2jax_ignore">6</code> as an integer, the simplest possible interpretation in some sense. Study the following carefully, where we first work with “normal” integers and then with integers mod 8.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = 6
a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Integer Ring
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = 7
c = a + b; c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">13
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d = Z8(6)
d
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">6
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">d.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Ring of integers modulo 8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">e = Z8(7)
f = d+e; f
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">5
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">g = Z8(85); g
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">5
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">f == g
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="wNM"><code class="code-inline tex2jax_ignore">Z8</code> is a bit unusual as a first example, since it has two operations defined, both addition and multiplication, with addition forming a group, and multiplication not forming a group. Still, we can work with the additive portion, here forming the Cayley table for the addition.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Z8.addition_table(names='elements')
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">+  0 1 2 3 4 5 6 7
 +----------------
0| 0 1 2 3 4 5 6 7
1| 1 2 3 4 5 6 7 0
2| 2 3 4 5 6 7 0 1
3| 3 4 5 6 7 0 1 2
4| 4 5 6 7 0 1 2 3
5| 5 6 7 0 1 2 3 4
6| 6 7 0 1 2 3 4 5
7| 7 0 1 2 3 4 5 6
</div>
            </article>
            <p id="cUV">When <i class="one-letter">n</i> is a prime number, the multipicative structure (excluding zero), will also form a group.</p>
            <p id="Jce">The integers mod <i class="one-letter">n</i> are very important, so Sage implements both addition and multiplication together. Groups of symmetries are a better example of how Sage implements groups, since there is just one operation present.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="Whh">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.8.2</span> <span class="title">Groups of symmetries</span></div>
            <p id="pjn">The symmetries of some geometric shapes are already defined in Sage, albeit with different names. They are implemented as “permutation groups” which we will begin to study carefully in Chapter 5.</p>
            <p id="Vqw">Sage uses integers to label vertices, starting the count at <code class="code-inline tex2jax_ignore">1</code>, instead of letters. Elements by default are printed using “cycle notation” which we will see described carefully in Chapter 5. Here is an example, with both the mathematics and Sage. For the Sage part, we create the group of symmetries and then create the symmetry <nemeth class="inline">⠨⠗⠆</nemeth> with coercion, followed by outputting the element in cycle notation. Then we create just the <em class="emphasis">bottom row</em> of the notation we are using for permutations.</p>
            <div class="displaymath">
              <nemeth>⠨⠗⠆⠀⠨⠅⠀⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠉⠀⠠⠁⠀⠠⠃⠠⠾⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠠⠾⠀⠠⠷⠒⠀⠂⠀⠆⠠⠾</nemeth>
            </div>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">triangle = SymmetricGroup(3)
rho2 = triangle([3,1,2])
rho2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3,2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[rho2(x) for x in triangle.domain()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3, 1, 2]
</div>
            </article>
            <p id="BxF">The final list comprehension deserves comment. The <code class="code-inline tex2jax_ignore">.domain()</code> method gives a list of the symbols used for the permutation group <code class="code-inline tex2jax_ignore">triangle</code> and then <code class="code-inline tex2jax_ignore">rho2</code> is employed with syntax like it is a function (it <em class="emphasis">is</em> a function) to create the images that would occupy the bottom row.</p>
            <p id="hEO">With a double list comprehension we can list all six elements of the group in the “bottom row” format. A good exercise would be to pair up each element with its name as given in Figure 3.1.6.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[[a(x) for x in triangle.domain()] for a in triangle]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[1, 2, 3], [3, 1, 2], [2, 3, 1], [1, 3, 2], [3, 2, 1], [2, 1, 3]]
</div>
            </article>
            <p id="NLX">Different books, different authors, different software all have different ideas about the order in which to write multiplication of functions. This textbook builds on the idea of composition of functions, so that <nemeth class="inline">⠋⠛</nemeth> is the composition <nemeth class="inline">⠷⠋⠛⠾⠷⠭⠾⠀⠨⠅⠀⠋⠷⠛⠷⠭⠾⠾</nemeth> and it is natural to apply <i class="one-letter">g</i> first. Sage takes the opposite view and since we write <nemeth class="inline">⠋⠛</nemeth>, Sage will understand that we want to do <i class="one-letter">f</i> first. Neither approach is wrong, and neither is necessarily superior, they are just different and there are good arguments for either one. When you consult other books that work with permutation groups, you want to first determine which approach it takes. (Be aware that this discussion of Sage function composition is limited to permutations only—“regular” functions in Sage compose in the order you might be familiar with from a calculus course.)</p>
            <p id="tTg">The translation here between the text and Sage will be worthwhile practice. Here we will reprise the discussion at the end of Section 3.1, but reverse the order on each product to compute Sage-style and exactly mirror what the text does.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">mu1 = triangle([1,3,2])
mu2 = triangle([3,2,1])
mu3 = triangle([2,1,3])
rho1 = triangle([2,3,1])
product = rho1*mu1
product == mu2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[product(x) for x in triangle.domain()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3, 2, 1]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho1*mu1 == mu1*rho1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">mu1*rho1 == mu3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="aap">Now that we understand that Sage does multiplication in reverse, we can compute the Cayley table for this group. Default behavior is to just name elements of a group as letters, <code class="code-inline tex2jax_ignore">a,
        b, c</code>, <nemeth class="inline">⠄⠄⠄</nemeth> in the same order that the <code class="code-inline tex2jax_ignore">.list()</code> command would produce the elements of the group. But you can also print the elements in the table as themselves (that uses cycle notation here), or you can give the elements names. We will use <code class="code-inline tex2jax_ignore">u</code> as shorthand for <nemeth class="inline">⠨⠍</nemeth> and <code class="code-inline tex2jax_ignore">r</code> as shorthand for <nemeth class="inline">⠨⠗</nemeth>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">triangle.cayley_table()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*  a b c d e f
 +------------
a| a b c d e f
b| b a d c f e
c| c e a f b d
d| d f b e a c
e| e c f a d b
f| f d e b c a
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">triangle.cayley_table(names='elements')
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">      *       ()   (2,3)   (1,2) (1,2,3) (1,3,2)   (1,3)
       +------------------------------------------------
     ()|      ()   (2,3)   (1,2) (1,2,3) (1,3,2)   (1,3)
  (2,3)|   (2,3)      () (1,2,3)   (1,2)   (1,3) (1,3,2)
  (1,2)|   (1,2) (1,3,2)      ()   (1,3)   (2,3) (1,2,3)
(1,2,3)| (1,2,3)   (1,3)   (2,3) (1,3,2)      ()   (1,2)
(1,3,2)| (1,3,2)   (1,2)   (1,3)      () (1,2,3)   (2,3)
  (1,3)|   (1,3) (1,2,3) (1,3,2)   (2,3)   (1,2)      ()
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">triangle.cayley_table(names=['id','u3','r1','r2','u1','u2'])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb"> *  id u3 r1 r2 u1 u2
  +------------------
id| id u3 r1 r2 u1 u2
u3| u3 id r2 r1 u2 u1
r1| r1 u1 id u2 u3 r2
r2| r2 u2 u3 u1 id r1
u1| u1 r1 u2 id r2 u3
u2| u2 r2 u1 u3 r1 id
</div>
            </article>
            <p id="Ghy">You should verify that the table above is correct, just like Table 3.2 is correct. Remember that the convention is to multiply a row label times a column label, in that order. However, to do a check across the two tables, you will need to recall the difference in ordering between your textbook and Sage.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="Coq">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.8.3</span> <span class="title">Quaternions</span></div>
            <p id="moH">Sage implements the quaternions, but the elements are not matrices, but rather are permutations. Despite appearances the structure is identical. It should not matter which version you have in mind (matrices or permutations) if you build the Cayley table and use the default behavior of using letters to name the elements. As permutations, or as letters, can you identify <nemeth class="inline">⠤⠼⠂</nemeth>, <i class="one-letter">I</i>, <i class="one-letter">J</i> and <i class="one-letter">K</i>?</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q = QuaternionGroup()
[[a(x) for x in Q.domain()] for a in Q]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[[1, 2, 3, 4, 5, 6, 7, 8], [3, 4, 1, 2, 7, 8, 5, 6],
 [4, 1, 2, 3, 8, 5, 6, 7], [2, 3, 4, 1, 6, 7, 8, 5],
 [7, 6, 5, 8, 1, 4, 3, 2], [5, 8, 7, 6, 3, 2, 1, 4],
 [8, 7, 6, 5, 2, 1, 4, 3], [6, 5, 8, 7, 4, 3, 2, 1]]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.cayley_table()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*  a b c d e f g h
 +----------------
a| a b c d e f g h
b| b c d a h e f g
c| c d a b g h e f
d| d a b c f g h e
e| e f g h c d a b
f| f g h e b c d a
g| g h e f a b c d
h| h e f g d a b c
</div>
            </article>
            <p id="SvQ">It should be fairly obvious that <code class="code-inline tex2jax_ignore">a</code> is the identity element of the group (<nemeth class="inline">⠼⠂</nemeth>), either from its behavior in the table, or from its “bottom row” representation as the first element of the list above. And if you prefer, you can ask Sage for a list of its outputs when viewed as a function.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">id = Q.identity()
[id(x) for x in Q.domain()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, 2, 3, 4, 5, 6, 7, 8]
</div>
            </article>
            <p id="yCZ">Now <nemeth class="inline">⠤⠼⠂</nemeth> should have the property that <nemeth class="inline">⠤⠼⠂⠡⠤⠼⠂⠀⠨⠅⠀⠼⠂</nemeth>. We see that the identity element <code class="code-inline tex2jax_ignore">a</code> is on the diagonal of the Cayley table only when we compute <code class="code-inline tex2jax_ignore">d*d</code>. We can verify this easily, borrowing the fourth “bottom row” element from the list above. With this information, once we locate <i class="one-letter">I</i>, we can easily compute <nemeth class="inline">⠤⠠⠊</nemeth>, and so on.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">minus_one = Q([3, 4, 1, 2, 7, 8, 5, 6])
minus_one*minus_one == Q.identity()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="eKi">See if you can pair up the letters with all eight elements of the quaternions. Be a bit careful with your names, the symbol <code class="code-inline tex2jax_ignore">I</code> is used by Sage for the imaginary number <nemeth class="inline">⠊⠀⠨⠅⠀⠜⠤⠂⠻</nemeth> (which we will use below), but Sage will silently let you redefine it to be anything you like. Same goes for using lower-case <code class="code-inline tex2jax_ignore">i</code> in Sage. So call your elements of the quaternions something like <code class="code-inline tex2jax_ignore">QI, QJ, QK</code> to avoid confusion.</p>
            <p id="KRr">As we begin to work with groups it is instructive to work with the actual elements. But many properties of groups are totally independent of the order we use for multiplication, or the names or representations we use for the elements. Here are facts about the quaternions we can compute without any knowledge of just how the elements are written or multiplied.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_finite()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">8
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="ivz">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">3.8.4</span> <span class="title">Subgroups</span></div>
            <p id="qYA">The best techniques for creating subgroups will come in future chapters, but we can create some groups that are naturally subgroups of other groups.</p>
            <p id="XfJ">Elements of the quaternions were represented by certain permutations of the integers 1 through 8. We can also build the group of <em class="emphasis">all</em> permutations of these eight integers. It gets pretty big, so do not list it unless you want a lot of output! (I dare you.)</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S8 = SymmetricGroup(8)
a = S8.random_element()
[a(x) for x in S8.domain()]     # random
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[5, 2, 6, 4, 1, 8, 3, 7]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">S8.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">40320
</div>
            </article>
            <p id="DmS">The quaternions, <code class="code-inline tex2jax_ignore">Q</code>, is a subgroup of the full group of all permutations, the symmetric group <nemeth class="inline">⠠⠎⠦</nemeth> or <code class="code-inline tex2jax_ignore">S8</code>, and Sage regards this as a property of <code class="code-inline tex2jax_ignore">Q</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">Q.is_subgroup(S8)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="jub">In Sage the complex numbers are known by the name <code class="code-inline tex2jax_ignore">CC</code>. We can create a list of the elements in the subgroup described in Example 3.2.9. Then we can verify that this set is a subgroup by examining the Cayley table, using multiplication as the operation.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = [CC(1), CC(-1), CC(I), CC(-I)]
CC.multiplication_table(elements=H,
                        names=['1', '-1', 'i', '-i'])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*   1 -1  i -i
  +------------
 1|  1 -1  i -i
-1| -1  1 -i  i
 i|  i -i -1  1
-i| -i  i  1 -1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="aRa">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">3.9</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="Khk">
            <p id="Qsi">These exercises are about becoming comfortable working with groups in Sage. Sage worksheets have extensive capabilities for making new cells with carefully formatted text, include support for <span class="latex-logo">L<span class="A">a</span>T<span class="E">e</span>X</span> syntax to express mathematics. So when a question asks for explanation or commentary, make a new cell and communicate clearly with your audience.</p>
          </section>
          <article class="exercise exercise-like" id="qot">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="ANL">Create the groups <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(8)</code> and <code class="code-inline tex2jax_ignore">DihedralGroup(4)</code> and name these groups <code class="code-inline tex2jax_ignore">C</code> and <code class="code-inline tex2jax_ignore">D</code>, respectively. We will understand these constructions better shortly, but for now just understand that both objects you create are actually groups.</p>
          </article>
          <article class="exercise exercise-like" id="WvC">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="gUU">Check that <code class="code-inline tex2jax_ignore">C</code> and <code class="code-inline tex2jax_ignore">D</code> have the same size by using the <code class="code-inline tex2jax_ignore">.order()</code> method. Determine which group is abelian, and which is not, by using the <code class="code-inline tex2jax_ignore">.is_abelian()</code> method.</p>
          </article>
          <article class="exercise exercise-like" id="CCL">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="Ncd">Use the <code class="code-inline tex2jax_ignore">.cayley_table()</code> method to create the Cayley table for each group.</p>
          </article>
          <article class="exercise exercise-like" id="iJU">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="tjm">Write a nicely formatted discussion identifying differences between the two groups that are discernible in properties of their Cayley tables. In other words, what is <em class="emphasis">different</em> about these two groups that you can “see” in the Cayley tables? (In the Sage notebook, a Shift-click on a blue bar will bring up a mini-word-processor, and you can use use dollar signs to embed mathematics formatted using <span class="latex-logo">T<span class="E">e</span>X</span> syntax.)</p>
          </article>
          <article class="exercise exercise-like" id="ORd">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Zqv">For <code class="code-inline tex2jax_ignore">C</code> locate the one subgroup of order <nemeth class="inline">⠼⠲</nemeth>. The group <code class="code-inline tex2jax_ignore">D</code> has three subgroups of order <nemeth class="inline">⠼⠲</nemeth>. Select one of the three subgroups of <code class="code-inline tex2jax_ignore">D</code> that has a different structure than the subgroup you obtained from <code class="code-inline tex2jax_ignore">C</code>.</p>
            <p id="FxE">The <code class="code-inline tex2jax_ignore">.subgroups()</code> method will give you a list of all of the subgroups to help you get started. A Cayley table will help you tell the difference between the two subgroups. What properties of these tables did you use to determine the difference in the structure of the subgroups?</p>
          </article>
          <article class="exercise exercise-like" id="uYm">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="lEN">The <code class="code-inline tex2jax_ignore">.subgroup(elt_list)</code> method of a group will create the smallest subgroup containing the specified elements of the group, when given the elements as a list <code class="code-inline tex2jax_ignore">elt_list</code>. Use this command to discover the shortest list of elements necessary to recreate the subgroups you found in the previous exercise. The equality comparison, <code class="code-inline tex2jax_ignore">==</code>, can be used to test if two subgroups are equal.</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="KKE">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">4</span> <span class="title">Cyclic Groups</span></div>
        <section class="introduction" id="vQb">
          <p id="EeH">The groups <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, which are among the most familiar and easily understood groups, are both examples of what are called cyclic groups. In this chapter we will study the properties of cyclic groups and cyclic subgroups, which play a fundamental part in the classification of all abelian groups.</p>
        </section>
        <section class="section" id="MzR">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">4.1</span> <span class="title">Cyclic Subgroups</span></div>
          <section class="introduction" id="bXk">
            <p id="klQ">Often a subgroup will depend entirely on a single element of the group; that is, knowing that particular element will allow us to compute any other element in the subgroup.</p>
            <article class="example example-like" data-braille="example-like" id="Gpg">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="JTT">Suppose that we consider <nemeth class="inline">⠼⠒⠀⠈⠑⠀⠸⠠⠵</nemeth> and look at all multiples (both positive and negative) of <nemeth class="inline">⠼⠒</nemeth>. As a set, this is</p>
              <div class="displaymath">
                <nemeth>⠼⠒⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠒⠠⠀⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠄⠄⠄⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. It is easy to see that <nemeth class="inline">⠼⠒⠸⠠⠵</nemeth> is a subgroup of the integers. This subgroup is completely determined by the element <nemeth class="inline">⠼⠒</nemeth> since we can obtain all of the other elements of the group by taking multiples of <nemeth class="inline">⠼⠒</nemeth>. Every element in the subgroup is “generated” by <nemeth class="inline">⠼⠒</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="mwp">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="qbc">If <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠆⠘⠝⠐⠒⠀⠝⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>, then <i class="one-letter">H</i> is a subgroup of the multiplicative group of nonzero rational numbers, <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth>. If <nemeth class="inline">⠁⠀⠨⠅⠀⠼⠆⠘⠍</nemeth> and <nemeth class="inline">⠃⠀⠨⠅⠀⠼⠆⠘⠝</nemeth> are in <i class="one-letter">H</i>, then <nemeth class="inline">⠁⠃⠘⠤⠼⠂⠐⠀⠨⠅⠀⠼⠆⠘⠍⠐⠆⠘⠤⠝⠐⠀⠨⠅⠀⠼⠆⠘⠍⠤⠝</nemeth> is also in <i class="one-letter">H</i>. By Proposition 3.3.8, <i class="one-letter">H</i> is a subgroup of <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> determined by the element <nemeth class="inline">⠼⠆</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="hMw">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="UsY">Let <i class="one-letter">G</i> be a group and <i class="one-letter">a</i> be any element in <i class="one-letter">G</i>. Then the set </p>
              <div class="displaymath">
                <nemeth>⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠷⠁⠘⠅⠐⠒⠀⠅⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">is a subgroup of <i class="one-letter">G</i>. Furthermore, <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> is the smallest subgroup of <i class="one-letter">G</i> that contains <i class="one-letter">a</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="UsL">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="rgv">The identity is in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> since <nemeth class="inline">⠁⠘⠴⠐⠀⠨⠅⠀⠑</nemeth>. If <i class="one-letter">g</i> and <i class="one-letter">h</i> are any two elements in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>, then by the definition of <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> we can write <nemeth class="inline">⠛⠀⠨⠅⠀⠁⠘⠍</nemeth> and <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠘⠝</nemeth> for some integers <i class="one-letter">m</i> and <i class="one-letter">n</i>. So <nemeth class="inline">⠛⠓⠀⠨⠅⠀⠁⠘⠍⠐⠁⠘⠝⠐⠀⠨⠅⠀⠁⠘⠍⠬⠝</nemeth> is again in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>. Finally, if <nemeth class="inline">⠛⠀⠨⠅⠀⠁⠘⠝</nemeth> in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>, then the inverse <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠘⠤⠝</nemeth> is also in <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>. Clearly, any subgroup <i class="one-letter">H</i> of <i class="one-letter">G</i> containing <i class="one-letter">a</i> must contain all the powers of <i class="one-letter">a</i> by closure; hence, <i class="one-letter">H</i> contains <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth>. Therefore, <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> is the smallest subgroup of <i class="one-letter">G</i> containing <i class="one-letter">a</i>.</p>
            </article>
            <article class="remark remark-like" data-braille="remark-like" id="PIS">
              <h6 class="heading">
                <span class="type">Remark</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="XXy">If we are using the “+” notation, as in the case of the integers under addition, we write <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠀⠨⠅⠀⠨⠷⠝⠁⠒⠀⠝⠀⠈⠑⠀⠸⠠⠵⠨⠾</nemeth>.</p>
            </article>
            <p id="QsZ">For <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth>, we call <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾</nemeth> the <dfn class="terminology">cyclic subgroup</dfn>  generated by <i class="one-letter">a</i>. If <i class="one-letter">G</i> contains some element <i class="one-letter">a</i> such that <nemeth class="inline">⠠⠛⠀⠨⠅⠀⠨⠨⠷⠁⠨⠨⠾</nemeth>, then <i class="one-letter">G</i> is a <dfn class="terminology">cyclic group</dfn>.  In this case <i class="one-letter">a</i> is a <dfn class="terminology">generator</dfn> of <i class="one-letter">G</i>. If <i class="one-letter">a</i> is an element of a group <i class="one-letter">G</i>, we define the <dfn class="terminology">order</dfn>  of <i class="one-letter">a</i> to be the smallest positive integer <i class="one-letter">n</i> such that <nemeth class="inline">⠁⠘⠝⠐⠀⠨⠅⠀⠑</nemeth>, and we write <nemeth class="inline">⠳⠁⠳⠀⠨⠅⠀⠝</nemeth>.  If there is no such integer <i class="one-letter">n</i>, we say that the order of <i class="one-letter">a</i> is infinite and write <nemeth class="inline">⠳⠁⠳⠀⠨⠅⠀⠠⠿</nemeth> to denote the order of <i class="one-letter">a</i>.</p>
            <article class="example example-like" data-braille="example-like" id="SDy">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="Wil">Notice that a cyclic group can have more than a single generator. Both <nemeth class="inline">⠼⠂</nemeth> and <nemeth class="inline">⠼⠢</nemeth> generate <nemeth class="inline">⠸⠠⠵⠖</nemeth>; hence, <nemeth class="inline">⠸⠠⠵⠖</nemeth> is a cyclic group. Not every element in a cyclic group is necessarily a generator of the group. The order of <nemeth class="inline">⠼⠆⠀⠈⠑⠀⠸⠠⠵⠖</nemeth> is <nemeth class="inline">⠼⠒</nemeth>. The cyclic subgroup generated by <nemeth class="inline">⠼⠆</nemeth> is <nemeth class="inline">⠨⠨⠷⠼⠆⠨⠨⠾⠀⠨⠅⠀⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠨⠾</nemeth>.</p>
            </article>
            <p id="wAi">The groups <nemeth class="inline">⠸⠠⠵</nemeth> and <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> are cyclic groups. The elements <nemeth class="inline">⠼⠂</nemeth> and <nemeth class="inline">⠤⠼⠂</nemeth> are generators for <nemeth class="inline">⠸⠠⠵</nemeth>. We can certainly generate <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> with 1 although there may be other generators of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>, as in the case of <nemeth class="inline">⠸⠠⠵⠖</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="yKH">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="Cpu">The group of units, <nemeth class="inline">⠠⠥⠷⠼⠔⠾</nemeth>, in <nemeth class="inline">⠸⠠⠵⠔</nemeth> is a cyclic group. As a set, <nemeth class="inline">⠠⠥⠷⠼⠔⠾</nemeth> is <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠢⠠⠀⠼⠶⠠⠀⠼⠦⠨⠾</nemeth>. The element 2 is a generator for <nemeth class="inline">⠠⠥⠷⠼⠔⠾</nemeth> since</p>
              <div class="displaymath">
                <nemeth>⠼⠆⠘⠂⠀⠀⠨⠅⠀⠼⠆⠆⠘⠆⠐⠀⠨⠅⠀⠼⠲⠀⠆⠘⠒⠀⠀⠨⠅⠀⠼⠦⠆⠘⠲⠐⠀⠨⠅⠀⠼⠶⠀⠆⠘⠢⠀⠀⠨⠅⠀⠼⠢⠆⠘⠖⠐⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="eRQ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="iwD">Not every group is a cyclic group. Consider the symmetry group of an equilateral triangle <nemeth class="inline">⠠⠎⠒</nemeth>. The multiplication table for this group is Figure 3.1.7. The subgroups of <nemeth class="inline">⠠⠎⠒</nemeth> are shown in Figure 4.1.8. Notice that every subgroup is cyclic; however, no single element generates the entire group.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="ODM">
                <div data-braille="image">
                  <p>Image: The lattice of subgroups for S-3: the top is S-3, the second line is the identity, rho-1, rho-2; the identity, mu-1; the identity, mu-2; the identity, mu-3, and the bottom is the identity subgroup.</p>
                  <p>ID: cyclic-s3-subgroups</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">4.1.8<span class="period">.</span></span><span class="space"> </span>Subgroups of <nemeth class="inline">⠠⠎⠒</nemeth></figcaption>
              </figure>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="NTF">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="AAh">Every cyclic group is abelian.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="AzU">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="XnE">Let <i class="one-letter">G</i> be a cyclic group and <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> be a generator for <i class="one-letter">G</i>. If <i class="one-letter">g</i> and <i class="one-letter">h</i> are in <i class="one-letter">G</i>, then they can be written as powers of <i class="one-letter">a</i>, say <nemeth class="inline">⠛⠀⠨⠅⠀⠁⠘⠗</nemeth> and <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠘⠎</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠛⠓⠀⠨⠅⠀⠁⠘⠗⠐⠁⠘⠎⠐⠀⠨⠅⠀⠁⠘⠗⠬⠎⠐⠀⠨⠅⠀⠁⠘⠎⠬⠗⠐⠀⠨⠅⠀⠁⠘⠎⠐⠁⠘⠗⠐⠀⠨⠅⠀⠓⠛</nemeth>
              </div>
              <p data-braille="continuation">, <i class="one-letter">G</i> is abelian.</p>
            </article>
          </section>
          <section class="subsection" id="qRN">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.1.1</span> <span class="title">Subgroups of Cyclic Groups</span></div>
            <p id="lFE">We can ask some interesting questions about cyclic subgroups of a group and subgroups of a cyclic group. If <i class="one-letter">G</i> is a group, which subgroups of <i class="one-letter">G</i> are cyclic? If <i class="one-letter">G</i> is a cyclic group, what type of subgroups does <i class="one-letter">G</i> possess?</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="lcB">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="gHq">Every subgroup of a cyclic group is cyclic.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="gHd">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="DuN">The main tools used in this proof are the division algorithm and the Principle of Well-Ordering. Let <i class="one-letter">G</i> be a cyclic group generated by <i class="one-letter">a</i> and suppose that <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>. If <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>, then trivially <i class="one-letter">H</i> is cyclic. Suppose that <i class="one-letter">H</i> contains some other element <i class="one-letter">g</i> distinct from the identity. Then <i class="one-letter">g</i> can be written as <nemeth class="inline">⠁⠘⠝</nemeth> for some integer <i class="one-letter">n</i>. Since <i class="one-letter">H</i> is a subgroup, <nemeth class="inline">⠛⠘⠤⠼⠂⠐⠀⠨⠅⠀⠁⠘⠤⠝</nemeth> must also be in <i class="one-letter">H</i>. Since either <i class="one-letter">n</i> or <nemeth class="inline">⠤⠝</nemeth> is positive, we can assume that <i class="one-letter">H</i> contains positive powers of <i class="one-letter">a</i> and <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠴</nemeth>. Let <i class="one-letter">m</i> be the smallest natural number such that <nemeth class="inline">⠁⠘⠍⠐⠀⠈⠑⠀⠠⠓</nemeth>. Such an <i class="one-letter">m</i> exists by the Principle of Well-Ordering.</p>
              <p id="jBW">We claim that <nemeth class="inline">⠓⠀⠨⠅⠀⠁⠘⠍</nemeth> is a generator for <i class="one-letter">H</i>. We must show that every <nemeth class="inline">⠓⠘⠄⠐⠀⠈⠑⠀⠠⠓</nemeth> can be written as a power of <i class="one-letter">h</i>. Since <nemeth class="inline">⠓⠘⠄⠐⠀⠈⠑⠀⠠⠓</nemeth> and <i class="one-letter">H</i> is a subgroup of <i class="one-letter">G</i>, <nemeth class="inline">⠓⠘⠄⠐⠀⠨⠅⠀⠁⠘⠅</nemeth> for some integer <i class="one-letter">k</i>. Using the division algorithm, we can find numbers <i class="one-letter">q</i> and <i class="one-letter">r</i> such that <nemeth class="inline">⠅⠀⠨⠅⠀⠍⠟⠬⠗</nemeth> where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠍</nemeth>; hence,</p>
              <div class="displaymath">
                <nemeth>⠁⠘⠅⠐⠀⠨⠅⠀⠁⠘⠍⠟⠬⠗⠐⠀⠨⠅⠀⠷⠁⠘⠍⠐⠾⠘⠟⠐⠁⠘⠗⠐⠀⠨⠅⠀⠓⠘⠟⠐⠁⠘⠗</nemeth>
              </div>
              <p data-braille="continuation">. So <nemeth class="inline">⠁⠘⠗⠐⠀⠨⠅⠀⠁⠘⠅⠐⠓⠘⠤⠟</nemeth>. Since <nemeth class="inline">⠁⠘⠅</nemeth> and <nemeth class="inline">⠓⠘⠤⠟</nemeth> are in <i class="one-letter">H</i>, <nemeth class="inline">⠁⠘⠗</nemeth> must also be in <i class="one-letter">H</i>. However, <i class="one-letter">m</i> was the smallest positive number such that <nemeth class="inline">⠁⠘⠍</nemeth> was in <i class="one-letter">H</i>; consequently, <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth> and so <nemeth class="inline">⠅⠀⠨⠅⠀⠍⠟</nemeth>. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠓⠘⠄⠐⠀⠨⠅⠀⠁⠘⠅⠐⠀⠨⠅⠀⠁⠘⠍⠟⠐⠀⠨⠅⠀⠓⠘⠟</nemeth>
              </div>
              <p data-braille="continuation">and <i class="one-letter">H</i> is generated by <i class="one-letter">h</i>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="dyc">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="xFB">The subgroups of <nemeth class="inline">⠸⠠⠵</nemeth> are exactly <nemeth class="inline">⠝⠸⠠⠵</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="xqT">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.12</span>
                <span class="period">.</span>
              </h6>
              <p id="Fka">Let <i class="one-letter">G</i> be a cyclic group of order <i class="one-letter">n</i> and suppose that <i class="one-letter">a</i> is a generator for <i class="one-letter">G</i>. Then <nemeth class="inline">⠁⠘⠅⠐⠀⠨⠅⠀⠑</nemeth> if and only if <i class="one-letter">n</i> divides <i class="one-letter">k</i>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="FjN">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="PJf">First suppose that <nemeth class="inline">⠁⠘⠅⠐⠀⠨⠅⠀⠑</nemeth>. By the division algorithm, <nemeth class="inline">⠅⠀⠨⠅⠀⠝⠟⠬⠗</nemeth> where <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠝</nemeth>; hence,</p>
              <div class="displaymath">
                <nemeth>⠑⠀⠨⠅⠀⠁⠘⠅⠐⠀⠨⠅⠀⠁⠘⠝⠟⠬⠗⠐⠀⠨⠅⠀⠁⠘⠝⠟⠐⠁⠘⠗⠐⠀⠨⠅⠀⠑⠁⠘⠗⠐⠀⠨⠅⠀⠁⠘⠗</nemeth>
              </div>
              <p data-braille="continuation">. Since the smallest positive integer <i class="one-letter">m</i> such that <nemeth class="inline">⠁⠘⠍⠐⠀⠨⠅⠀⠑</nemeth> is <i class="one-letter">n</i>, <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠴</nemeth>.</p>
              <p id="vQo">Conversely, if <i class="one-letter">n</i> divides <i class="one-letter">k</i>, then <nemeth class="inline">⠅⠀⠨⠅⠀⠝⠎</nemeth> for some integer <i class="one-letter">s</i>. Consequently,</p>
              <div class="displaymath">
                <nemeth>⠁⠘⠅⠐⠀⠨⠅⠀⠁⠘⠝⠎⠐⠀⠨⠅⠀⠷⠁⠘⠝⠐⠾⠘⠎⠐⠀⠨⠅⠀⠑⠘⠎⠐⠀⠨⠅⠀⠑</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="RjK">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.13</span>
                <span class="period">.</span>
              </h6>
              <p id="MOz">Let <i class="one-letter">G</i> be a cyclic group of order <i class="one-letter">n</i> and suppose that <nemeth class="inline">⠁⠀⠈⠑⠀⠠⠛</nemeth> is a generator of the group. If <nemeth class="inline">⠃⠀⠨⠅⠀⠁⠘⠅</nemeth>, then the order of <i class="one-letter">b</i> is <nemeth class="inline">⠝⠸⠌⠙</nemeth>, where <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠅⠠⠀⠝⠾</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="MOm">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="bXx">We wish to find the smallest integer <i class="one-letter">m</i> such that <nemeth class="inline">⠑⠀⠨⠅⠀⠃⠘⠍⠐⠀⠨⠅⠀⠁⠘⠅⠍</nemeth>. By Proposition 4.1.12, this is the smallest integer <i class="one-letter">m</i> such that <i class="one-letter">n</i> divides <nemeth class="inline">⠅⠍</nemeth> or, equivalently, <nemeth class="inline">⠝⠸⠌⠙</nemeth> divides <nemeth class="inline">⠍⠷⠅⠸⠌⠙⠾</nemeth>. Since <i class="one-letter">d</i> is the greatest common divisor of <i class="one-letter">n</i> and <i class="one-letter">k</i>, <nemeth class="inline">⠝⠸⠌⠙</nemeth> and <nemeth class="inline">⠅⠸⠌⠙</nemeth> are relatively prime. Hence, for <nemeth class="inline">⠝⠸⠌⠙</nemeth> to divide <nemeth class="inline">⠍⠷⠅⠸⠌⠙⠾</nemeth> it must divide <i class="one-letter">m</i>. The smallest such <i class="one-letter">m</i> is <nemeth class="inline">⠝⠸⠌⠙</nemeth>.</p>
            </article>
            <article class="corollary theorem-like" data-braille="theorem-like" id="JFl">
              <h6 class="heading">
                <span class="type">Corollary</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.14</span>
                <span class="period">.</span>
              </h6>
              <p id="dMK">The generators of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> are the integers <i class="one-letter">r</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠝</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠗⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="pMu">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.1.15</span>
                <span class="period">.</span>
              </h6>
              <p id="uKV">Let us examine the group <nemeth class="inline">⠸⠠⠵⠂⠖</nemeth>. The numbers <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠢</nemeth>, <nemeth class="inline">⠼⠶</nemeth>, <nemeth class="inline">⠼⠔</nemeth>, <nemeth class="inline">⠼⠂⠂</nemeth>, <nemeth class="inline">⠼⠂⠒</nemeth>, and <nemeth class="inline">⠼⠂⠢</nemeth> are the elements of <nemeth class="inline">⠸⠠⠵⠂⠖</nemeth> that are relatively prime to <nemeth class="inline">⠼⠂⠖</nemeth>. Each of these elements generates <nemeth class="inline">⠸⠠⠵⠂⠖</nemeth>. For example,</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠡⠔⠀⠀⠨⠅⠀⠼⠔⠀⠆⠡⠔⠀⠀⠨⠅⠀⠼⠆⠀⠒⠡⠔⠀⠀⠨⠅⠀⠼⠂⠂⠀⠲⠡⠔⠀⠀⠨⠅⠀⠼⠲⠀⠢⠡⠔⠀⠀⠨⠅⠀⠼⠂⠒⠀⠖⠡⠔⠀⠀⠨⠅⠀⠼⠖⠀⠶⠡⠔⠀⠀⠨⠅⠀⠼⠂⠢⠀⠦⠡⠔⠀⠀⠨⠅⠀⠼⠦⠀⠔⠡⠔⠀⠀⠨⠅⠀⠼⠂⠀⠂⠴⠡⠔⠀⠀⠨⠅⠀⠼⠂⠴⠀⠂⠂⠡⠔⠀⠀⠨⠅⠀⠼⠒⠀⠂⠆⠡⠔⠀⠀⠨⠅⠀⠼⠂⠆⠀⠂⠒⠡⠔⠀⠀⠨⠅⠀⠼⠢⠀⠂⠲⠡⠔⠀⠀⠨⠅⠀⠼⠂⠲⠀⠂⠢⠡⠔⠀⠀⠨⠅⠀⠼⠶</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
        </section>
        <section class="section" id="sHa">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">4.2</span> <span class="title">Multiplicative Group of Complex Numbers</span></div>
          <section class="introduction" id="Iet">
            <p id="cHr">The <dfn class="terminology">complex numbers</dfn> are defined as</p>
            <div class="displaymath">
              <nemeth>⠸⠠⠉⠀⠨⠅⠀⠨⠷⠁⠬⠃⠊⠒⠀⠁⠠⠀⠃⠀⠈⠑⠀⠸⠠⠗⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">, where <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>. If <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth>, then <i class="one-letter">a</i> is the <dfn class="terminology">real part</dfn> of <i class="one-letter">z</i> and <i class="one-letter">b</i> is the <dfn class="terminology">imaginary part</dfn> of <i class="one-letter">z</i>.</p>
            <p id="IOA">To add two complex numbers <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠉⠬⠙⠊</nemeth>, we just add the corresponding real and imaginary parts:</p>
            <div class="displaymath">
              <nemeth>⠵⠬⠺⠀⠨⠅⠀⠷⠁⠬⠃⠊⠾⠬⠷⠉⠬⠙⠊⠾⠀⠨⠅⠀⠷⠁⠬⠉⠾⠬⠷⠃⠬⠙⠾⠊</nemeth>
            </div>
            <p data-braille="continuation">. Remembering that <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth>, we multiply complex numbers just like polynomials. The product of <i class="one-letter">z</i> and <i class="one-letter">w</i> is</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠬⠃⠊⠾⠷⠉⠬⠙⠊⠾⠀⠨⠅⠀⠁⠉⠬⠃⠙⠊⠘⠆⠐⠬⠁⠙⠊⠬⠃⠉⠊⠀⠨⠅⠀⠷⠁⠉⠤⠃⠙⠾⠬⠷⠁⠙⠬⠃⠉⠾⠊</nemeth>
            </div>
            <p data-braille="continuation">.</p>
            <p id="oVJ">Every nonzero complex number <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> has a multiplicative inverse; that is, there exists a <nemeth class="inline">⠵⠘⠤⠼⠂⠐⠀⠈⠑⠀⠸⠠⠉⠘⠈⠼</nemeth> such that <nemeth class="inline">⠵⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠵⠘⠤⠼⠂⠐⠵⠀⠨⠅⠀⠼⠂</nemeth>. If <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth>, then</p>
            <div class="displaymath">
              <nemeth>⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠹⠁⠤⠃⠊⠌⠁⠘⠆⠐⠬⠃⠘⠆⠐⠼</nemeth>
            </div>
            <p data-braille="continuation">. The <dfn class="terminology">complex conjugate</dfn>  of a complex number <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> is defined to be <nemeth class="inline">⠐⠵⠣⠱⠻⠀⠨⠅⠀⠁⠤⠃⠊</nemeth>. The <dfn class="terminology">absolute value</dfn> or <dfn class="terminology">modulus</dfn> of  <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth>  is <nemeth class="inline">⠳⠵⠳⠀⠨⠅⠀⠜⠁⠘⠆⠐⠬⠃⠘⠆⠐⠻</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="KYZ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.1</span>
                <span class="period">.</span>
              </h6>
              <p id="aSe">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠆⠬⠒⠊</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠼⠂⠤⠆⠊</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠵⠬⠺⠀⠨⠅⠀⠷⠼⠆⠬⠒⠊⠾⠬⠷⠂⠤⠆⠊⠾⠀⠨⠅⠀⠼⠒⠬⠊</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠵⠺⠀⠨⠅⠀⠷⠼⠆⠬⠒⠊⠾⠷⠂⠤⠆⠊⠾⠀⠨⠅⠀⠼⠦⠤⠊</nemeth>
              </div>
              <p data-braille="continuation">. Also,</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠤⠼⠂⠀⠀⠨⠅⠀⠹⠆⠌⠂⠒⠼⠤⠹⠒⠌⠂⠒⠼⠊⠀⠳⠵⠳⠀⠀⠨⠅⠀⠜⠂⠒⠻⠀⠐⠵⠣⠱⠻⠀⠀⠨⠅⠀⠼⠆⠤⠒⠊</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <figure class="figure figure-like" data-braille="figure-like" id="Nyt">
              <div data-braille="image">
                <p>Image: The complex plane where the horizontal axis is the x-axis or real axis and the verticle axis is the y-axis or imaginary axis. The point z1 = 2 + 3i is in the upper right quadrant, the point z2 = 1- 2i in the lower right quadrant, and z3 = -3 + 2i in the upper right quadrant.</p>
                <p>ID: cyclic-complex-rectangular</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">4.2.2<span class="period">.</span></span><span class="space"> </span>Rectangular coordinates of a complex number</figcaption>
            </figure>
            <p id="VcS">There are several ways of graphically representing complex numbers. We can represent a complex number <nemeth class="inline">⠵⠀⠨⠅⠀⠁⠬⠃⠊</nemeth> as an ordered pair on the <nemeth class="inline">⠭⠽</nemeth> plane where <i class="one-letter">a</i> is the <i class="one-letter">x</i> (or real) coordinate and <i class="one-letter">b</i> is the <i class="one-letter">y</i> (or imaginary) coordinate. This is called the <dfn class="terminology">rectangular</dfn> or <dfn class="terminology">Cartesian</dfn> representation. The rectangular representations of <nemeth class="inline">⠵⠂⠀⠨⠅⠀⠼⠆⠬⠒⠊</nemeth>, <nemeth class="inline">⠵⠆⠀⠨⠅⠀⠼⠂⠤⠆⠊</nemeth>, and <nemeth class="inline">⠵⠒⠀⠨⠅⠀⠤⠼⠒⠬⠆⠊</nemeth> are depicted in Figure 4.2.2.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="tFC">
              <div data-braille="image">
                <p>Image: The complex plane where the horizontal axis is the x-axis or real axis and the verticle axis is the y-axis or imaginary axis.  The point a + bi is in the upper right quadrant.  The point is also determined by a ray that at an angle of theta counterclockwise from the horizontal axis having a length of r.</p>
                <p>ID: cyclic-complex-polar</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">4.2.3<span class="period">.</span></span><span class="space"> </span>Polar coordinates of a complex number</figcaption>
            </figure>
            <p id="Bkb">Nonzero complex numbers can also be represented using <dfn class="terminology">polar coordinates</dfn>. To specify any nonzero point on the plane, it suffices to give an angle <nemeth class="inline">⠨⠹</nemeth> from the positive <i class="one-letter">x</i> axis in the counterclockwise direction and a distance <i class="one-letter">r</i> from the origin, as in  Figure 4.2.3. We can see that</p>
            <div class="displaymath">
              <nemeth>⠵⠀⠨⠅⠀⠁⠬⠃⠊⠀⠨⠅⠀⠗⠷⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹⠾</nemeth>
            </div>
            <p data-braille="continuation">. Hence,</p>
            <div class="displaymath">
              <nemeth>⠗⠀⠨⠅⠀⠳⠵⠳⠀⠨⠅⠀⠜⠁⠘⠆⠐⠬⠃⠘⠆⠐⠻</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠁⠀⠀⠨⠅⠀⠗⠉⠕⠎⠀⠨⠹⠀⠃⠀⠀⠨⠅⠀⠗⠎⠊⠝⠀⠨⠹</nemeth>
            </div>
            <p data-braille="continuation">. We sometimes abbreviate <nemeth class="inline">⠗⠷⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹⠾</nemeth> as <nemeth class="inline">⠗⠉⠊⠎⠨⠹</nemeth>.  To assure that the representation of <i class="one-letter">z</i> is  well-defined, we also require that <nemeth class="inline">⠼⠴⠘⠘⠨⠡⠐⠀⠐⠅⠱⠀⠨⠹⠀⠐⠅⠀⠼⠒⠖⠴⠘⠘⠨⠡</nemeth>. If the measurement is in radians, then <nemeth class="inline">⠼⠴⠀⠐⠅⠱⠀⠨⠹⠀⠐⠅⠀⠼⠆⠨⠏</nemeth>.</p>
            <article class="example example-like" data-braille="example-like" id="rgi">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.4</span>
                <span class="period">.</span>
              </h6>
              <p id="GZn">Suppose that <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠆⠉⠊⠎⠼⠖⠴⠘⠘⠨⠡</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠁⠀⠨⠅⠀⠼⠆⠉⠕⠎⠀⠼⠖⠴⠘⠘⠨⠡⠐⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠃⠀⠨⠅⠀⠼⠆⠎⠊⠝⠀⠼⠖⠴⠘⠘⠨⠡⠐⠀⠨⠅⠀⠜⠒⠻</nemeth>
              </div>
              <p data-braille="continuation">. Hence, the rectangular representation is <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠂⠬⠜⠒⠻⠊</nemeth>.</p>
              <p id="ngw">Conversely, if we are given a rectangular representation of a complex number, it is often useful to know the number's polar representation. If <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠒⠜⠆⠻⠤⠒⠜⠆⠻⠊</nemeth>, then</p>
              <div class="displaymath">
                <nemeth>⠗⠀⠨⠅⠀⠜⠁⠘⠆⠐⠬⠃⠘⠆⠐⠻⠀⠨⠅⠀⠜⠒⠖⠻⠀⠨⠅⠀⠼⠖</nemeth>
              </div>
              <p data-braille="continuation">and</p>
              <div class="displaymath">
                <nemeth>⠨⠹⠀⠨⠅⠀⠁⠗⠉⠞⠁⠝⠀⠷⠹⠃⠌⠁⠼⠾⠀⠨⠅⠀⠁⠗⠉⠞⠁⠝⠀⠷⠤⠼⠂⠾⠀⠨⠅⠀⠼⠒⠂⠢⠘⠘⠨⠡</nemeth>
              </div>
              <p data-braille="continuation">, so <nemeth class="inline">⠼⠒⠜⠆⠻⠤⠒⠜⠆⠻⠊⠀⠨⠅⠀⠼⠖⠉⠊⠎⠼⠒⠂⠢⠘⠘⠨⠡</nemeth>.</p>
            </article>
            <p id="hrk">The polar representation of a complex number makes it easy to find products and powers of complex numbers. The proof of the following proposition is straightforward and is left as an exercise.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="ahX">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.5</span>
                <span class="period">.</span>
              </h6>
              <p id="lrj">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠗⠉⠊⠎⠨⠹</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠎⠉⠊⠎⠨⠋</nemeth> be two nonzero complex numbers. Then</p>
              <div class="displaymath">
                <nemeth>⠵⠺⠀⠨⠅⠀⠗⠎⠉⠊⠎⠷⠨⠹⠬⠨⠋⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Xnr">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="TnF">If <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠒⠉⠊⠎⠷⠨⠏⠸⠌⠒⠾</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠼⠆⠉⠊⠎⠷⠨⠏⠸⠌⠖⠾</nemeth>, then <nemeth class="inline">⠵⠺⠀⠨⠅⠀⠼⠖⠉⠊⠎⠷⠨⠏⠸⠌⠆⠾⠀⠨⠅⠀⠼⠖⠊</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="uaO">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.7</span>
                <span class="period">.</span>
                <span class="space"> </span>
                <span class="title">DeMoivre.</span>
              </h6>
              <p id="sVI">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠗⠉⠊⠎⠨⠹</nemeth> be a nonzero complex number. Then</p>
              <div class="displaymath">
                <nemeth>⠈⠷⠗⠉⠊⠎⠨⠹⠈⠾⠘⠝⠐⠀⠨⠅⠀⠗⠘⠝⠐⠉⠊⠎⠷⠝⠨⠹⠾</nemeth>
              </div>
              <p data-braille="continuation">for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="sVv">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="IeG">We will use induction on <i class="one-letter">n</i>. For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠂</nemeth> the theorem is trivial. Assume that the theorem is true for all <i class="one-letter">k</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠅⠀⠐⠅⠱⠀⠝</nemeth>. Then</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠝⠬⠂⠀⠀⠨⠅⠀⠵⠘⠝⠐⠵⠀⠀⠀⠀⠨⠅⠀⠗⠘⠝⠐⠷⠉⠕⠎⠀⠝⠨⠹⠬⠊⠎⠊⠝⠀⠝⠨⠹⠾⠗⠷⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹⠾⠀⠀⠀⠀⠨⠅⠀⠗⠘⠝⠬⠂⠐⠈⠷⠷⠉⠕⠎⠀⠝⠨⠹⠉⠕⠎⠀⠨⠹⠤⠎⠊⠝⠀⠝⠨⠹⠎⠊⠝⠀⠨⠹⠾⠬⠊⠷⠎⠊⠝⠀⠝⠨⠹⠉⠕⠎⠀⠨⠹⠬⠉⠕⠎⠀⠝⠨⠹⠎⠊⠝⠀⠨⠹⠾⠈⠾⠀⠀⠀⠀⠨⠅⠀⠗⠘⠝⠬⠂⠐⠈⠷⠉⠕⠎⠀⠷⠝⠨⠹⠬⠨⠹⠾⠬⠊⠎⠊⠝⠀⠷⠝⠨⠹⠬⠨⠹⠾⠈⠾⠀⠀⠀⠀⠨⠅⠀⠗⠘⠝⠬⠂⠐⠈⠷⠉⠕⠎⠀⠷⠝⠬⠂⠾⠨⠹⠬⠊⠎⠊⠝⠀⠷⠝⠬⠂⠾⠨⠹⠈⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="DuA">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="zuO">Suppose that <nemeth class="inline">⠵⠀⠨⠅⠀⠼⠂⠬⠊</nemeth> and we wish to compute <nemeth class="inline">⠵⠘⠂⠴</nemeth>. Rather than computing <nemeth class="inline">⠷⠼⠂⠬⠊⠾⠘⠂⠴</nemeth> directly, it is much easier to switch to polar coordinates and calculate <nemeth class="inline">⠵⠘⠂⠴</nemeth> using DeMoivre's Theorem:</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠂⠴⠀⠀⠨⠅⠀⠷⠼⠂⠬⠊⠾⠘⠂⠴⠐⠀⠀⠀⠀⠨⠅⠀⠷⠜⠆⠻⠉⠊⠎⠷⠹⠨⠏⠌⠲⠼⠾⠾⠘⠂⠴⠐⠀⠀⠀⠀⠨⠅⠀⠷⠜⠆⠻⠾⠘⠂⠴⠐⠉⠊⠎⠷⠹⠢⠨⠏⠌⠆⠼⠾⠀⠀⠀⠀⠨⠅⠀⠼⠒⠆⠉⠊⠎⠷⠹⠨⠏⠌⠆⠼⠾⠀⠀⠀⠀⠨⠅⠀⠼⠒⠆⠊</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="WYW">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.2.1</span> <span class="title">The Circle Group and the Roots of Unity</span></div>
            <p id="RMN">The multiplicative group of the complex numbers, <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>, possesses some interesting subgroups. Whereas <nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth> and <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> have no interesting subgroups of finite order, <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> has many. We first consider the <dfn class="terminology">circle group</dfn>, </p>
            <div class="displaymath">
              <nemeth>⠸⠠⠞⠀⠨⠅⠀⠨⠷⠵⠀⠈⠑⠀⠸⠠⠉⠒⠀⠳⠵⠳⠀⠨⠅⠀⠼⠂⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. The following proposition is a direct result of Proposition 4.2.5.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="CaM">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="Rys">The circle group is a subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>.</p>
            </article>
            <p id="xTW">Although the circle group has infinite order, it has many interesting finite subgroups. Suppose that <nemeth class="inline">⠠⠓⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠤⠼⠂⠠⠀⠊⠠⠀⠤⠊⠨⠾</nemeth>. Then <i class="one-letter">H</i> is a subgroup of the circle group. Also, <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠤⠼⠂</nemeth>, <i class="one-letter">i</i>, and <nemeth class="inline">⠤⠊</nemeth> are exactly those complex numbers that satisfy the equation <nemeth class="inline">⠵⠘⠲⠐⠀⠨⠅⠀⠼⠂</nemeth>. The complex numbers satisfying the equation <nemeth class="inline">⠵⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth> are called the <dfn class="terminology"><i class="one-letter">n</i>th roots of unity</dfn>. </p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="VTD">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.10</span>
                <span class="period">.</span>
              </h6>
              <p id="ZcR">If <nemeth class="inline">⠵⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>, then the <i class="one-letter">n</i>th roots of unity are</p>
              <div class="displaymath">
                <nemeth>⠵⠀⠨⠅⠀⠉⠊⠎⠷⠹⠆⠅⠨⠏⠌⠝⠼⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠅⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠄⠄⠄⠀⠠⠀⠝⠤⠂</nemeth>. Furthermore, the <i class="one-letter">n</i>th roots of unity form a cyclic subgroup of <nemeth class="inline">⠸⠠⠞</nemeth> of order <i class="one-letter">n</i></p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZcE">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="olP">By DeMoivre's Theorem,</p>
              <div class="displaymath">
                <nemeth>⠵⠘⠝⠐⠀⠨⠅⠀⠉⠊⠎⠷⠝⠹⠆⠅⠨⠏⠌⠝⠼⠾⠀⠨⠅⠀⠉⠊⠎⠷⠼⠆⠅⠨⠏⠾⠀⠨⠅⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">. The <i class="one-letter">z</i>'s are distinct since the numbers <nemeth class="inline">⠼⠆⠅⠨⠏⠸⠌⠝</nemeth> are all distinct and are greater than or equal to 0 but less than <nemeth class="inline">⠼⠆⠨⠏</nemeth>. The fact that these are all of the roots of the equation <nemeth class="inline">⠵⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth> follows from from Corollary 17.2.4, which states that a polynomial of degree <i class="one-letter">n</i> can have at most <i class="one-letter">n</i> roots. We will leave the proof that the <i class="one-letter">n</i>th roots of unity form a cyclic subgroup of <nemeth class="inline">⠸⠠⠞</nemeth> as an exercise.</p>
            </article>
            <p id="ebf">A generator for the group of the <i class="one-letter">n</i>th roots of unity is called a <dfn class="terminology">primitive <i class="one-letter">n</i>th root of unity</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="ihV">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">4.2.11</span>
                <span class="period">.</span>
              </h6>
              <p id="fBX">The 8th roots of unity can be represented as eight equally spaced points on the unit circle (Figure 4.2.12). The primitive 8th roots of unity are</p>
              <div class="displaymath">
                <nemeth>⠨⠕⠀⠀⠨⠅⠀⠹⠜⠆⠻⠌⠆⠼⠬⠹⠜⠆⠻⠌⠆⠼⠊⠀⠨⠕⠘⠒⠀⠀⠨⠅⠀⠤⠹⠜⠆⠻⠌⠆⠼⠬⠹⠜⠆⠻⠌⠆⠼⠊⠀⠨⠕⠘⠢⠀⠀⠨⠅⠀⠤⠹⠜⠆⠻⠌⠆⠼⠤⠹⠜⠆⠻⠌⠆⠼⠊⠀⠨⠕⠘⠶⠀⠀⠨⠅⠀⠹⠜⠆⠻⠌⠆⠼⠤⠹⠜⠆⠻⠌⠆⠼⠊</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="LJg">
                <div data-braille="image">
                  <p>Image: The 8 roots of unity are spaced evenly around the unit circle beginning with 1 on the positive horizontal axis and followed by omega, i, the cube of omega, -1, omega to the fifth power, -i, and omega to the seventh power.</p>
                  <p>ID: cyclic-roots-unity</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">4.2.12<span class="period">.</span></span><span class="space"> </span>8th roots of unity</figcaption>
              </figure>
            </article>
          </section>
        </section>
        <section class="section" id="YOj">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">4.3</span> <span class="title">The Method of Repeated Squares</span></div>
          <p id="cVM">Computing large powers can be very time-consuming. Just as anyone can compute <nemeth class="inline">⠼⠆⠘⠆</nemeth> or <nemeth class="inline">⠼⠆⠘⠦</nemeth>, everyone knows how to compute</p>
          <div class="displaymath">
            <nemeth>⠼⠆⠘⠆⠘⠘⠂⠠⠴⠴⠴⠠⠴⠴⠴</nemeth>
          </div>
          <p data-braille="continuation">. However, such numbers are so large that we do not want to attempt the calculations; moreover, past a certain point the computations would not be feasible even if we had every computer in the world at our disposal. Even writing down the decimal representation of a very large number may not be reasonable. It could be thousands or even millions of digits long. However, if we could compute something like</p>
          <div class="displaymath">
            <nemeth>⠼⠆⠘⠒⠶⠠⠒⠔⠦⠠⠒⠒⠆⠐⠷⠍⠕⠙⠀⠲⠖⠠⠒⠦⠔⠾</nemeth>
          </div>
          <p data-braille="continuation">, we could very easily write the result down since it would be a number between <nemeth class="inline">⠼⠴</nemeth> and <nemeth class="inline">⠼⠲⠖⠠⠒⠦⠦</nemeth>. If we want to compute powers modulo <i class="one-letter">n</i> quickly and efficiently, we will have to be clever.<a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-1" id="fn-1"><sup> 1 </sup></a></p>
          <div class="hidden-content tex2jax_ignore" id="hk-fn-1">
            <div class="fn">The results in this section are needed only in Chapter 7</div>
          </div>
          <p id="JcV">The first thing to notice is that any number <i class="one-letter">a</i> can be written as the sum of distinct powers of <nemeth class="inline">⠼⠆</nemeth>; that is, we can write</p>
          <div class="displaymath">
            <nemeth>⠁⠀⠨⠅⠀⠼⠆⠘⠅⠂⠐⠬⠆⠘⠅⠆⠐⠬⠄⠄⠄⠬⠆⠘⠅⠘⠰⠝</nemeth>
          </div>
          <p data-braille="continuation">, where <nemeth class="inline">⠅⠂⠀⠐⠅⠀⠅⠆⠀⠐⠅⠀⠄⠄⠄⠀⠐⠅⠀⠅⠰⠝</nemeth>. This is just the binary representation of <i class="one-letter">a</i>. For example, the binary representation of 57 is 111001, since we can write <nemeth class="inline">⠼⠢⠶⠀⠨⠅⠀⠼⠆⠘⠴⠐⠬⠆⠘⠒⠐⠬⠆⠘⠲⠐⠬⠆⠘⠢</nemeth>.</p>
          <p id="pke">The laws of exponents still work in <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth>; that is, if <nemeth class="inline">⠃⠀⠸⠇⠀⠁⠘⠭⠐⠷⠍⠕⠙⠀⠝⠾</nemeth> and <nemeth class="inline">⠉⠀⠸⠇⠀⠁⠘⠽⠐⠷⠍⠕⠙⠀⠝⠾</nemeth>, then <nemeth class="inline">⠃⠉⠀⠸⠇⠀⠁⠘⠭⠬⠽⠐⠷⠍⠕⠙⠀⠝⠾</nemeth>. We can compute <nemeth class="inline">⠁⠘⠆⠘⠘⠅⠐⠷⠍⠕⠙⠀⠝⠾</nemeth> in <i class="one-letter">k</i> multiplications by computing</p>
          <div class="displaymath">
            <nemeth>⠁⠘⠆⠘⠘⠴⠐⠷⠍⠕⠙⠀⠝⠾⠀⠁⠘⠆⠘⠘⠂⠐⠷⠍⠕⠙⠀⠝⠾⠀⠣⠄⠄⠄⠀⠁⠘⠆⠘⠘⠅⠐⠷⠍⠕⠙⠀⠝⠾</nemeth>
          </div>
          <p data-braille="continuation">. Each step involves squaring the answer obtained in the previous step, dividing by <i class="one-letter">n</i>, and taking the remainder.</p>
          <article class="example example-like" data-braille="example-like" id="jBJ">
            <h6 class="heading">
              <span class="type">Example</span>
              <span class="space"> </span>
              <span class="codenumber">4.3.1</span>
              <span class="period">.</span>
            </h6>
            <p id="rQp">We will compute <nemeth class="inline">⠼⠆⠶⠂⠘⠒⠆⠂⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>. Notice that</p>
            <div class="displaymath">
              <nemeth>⠼⠒⠆⠂⠀⠨⠅⠀⠼⠆⠘⠴⠐⠬⠆⠘⠖⠐⠬⠆⠘⠦⠐⠆</nemeth>
            </div>
            <p data-braille="continuation">hence, computing <nemeth class="inline">⠼⠆⠶⠂⠘⠒⠆⠂⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth> is the same as computing</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠴⠘⠬⠆⠘⠘⠖⠘⠬⠆⠘⠘⠦⠐⠀⠸⠇⠀⠼⠆⠶⠂⠘⠆⠘⠘⠴⠐⠡⠆⠶⠂⠘⠆⠘⠘⠖⠐⠡⠆⠶⠂⠘⠆⠘⠘⠦⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. So it will suffice to compute <nemeth class="inline">⠼⠆⠶⠂⠘⠆⠘⠘⠊⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth> where <nemeth class="inline">⠊⠀⠨⠅⠀⠼⠴⠠⠀⠼⠖⠠⠀⠼⠦</nemeth>. It is very easy to see that</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠂⠐⠀⠨⠅⠀⠼⠶⠒⠠⠲⠲⠂⠀⠸⠇⠀⠼⠒⠆⠔⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. We can square this result to obtain a value for <nemeth class="inline">⠼⠆⠶⠂⠘⠆⠘⠘⠆⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>:</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠆⠀⠀⠸⠇⠀⠷⠼⠆⠶⠂⠘⠆⠘⠘⠂⠘⠐⠾⠘⠆⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠷⠼⠒⠆⠔⠾⠘⠆⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠂⠴⠦⠠⠆⠲⠂⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠂⠖⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. We are using the fact that <nemeth class="inline">⠷⠁⠘⠆⠘⠘⠝⠘⠐⠾⠘⠆⠐⠀⠸⠇⠀⠁⠘⠆⠡⠆⠘⠘⠝⠐⠀⠸⠇⠀⠁⠘⠆⠘⠘⠝⠬⠂⠐⠷⠍⠕⠙⠀⠝⠾</nemeth>. Continuing, we can calculate</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠖⠐⠀⠸⠇⠀⠼⠲⠂⠔⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">and</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠆⠘⠘⠦⠐⠀⠸⠇⠀⠼⠂⠖⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">. Therefore,</p>
            <div class="displaymath">
              <nemeth>⠼⠆⠶⠂⠘⠒⠆⠂⠀⠀⠸⠇⠀⠼⠆⠶⠂⠘⠆⠘⠘⠴⠘⠬⠆⠘⠘⠖⠘⠬⠆⠘⠘⠦⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠆⠶⠂⠘⠆⠘⠘⠴⠐⠡⠆⠶⠂⠘⠆⠘⠘⠖⠐⠡⠆⠶⠂⠘⠆⠘⠘⠦⠐⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠆⠶⠂⠡⠲⠂⠔⠡⠂⠖⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠂⠠⠦⠂⠖⠠⠶⠦⠲⠷⠍⠕⠙⠀⠲⠦⠂⠾⠀⠀⠀⠀⠸⠇⠀⠼⠲⠶⠷⠍⠕⠙⠀⠲⠦⠂⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <p id="Vrn">The method of repeated squares will prove to be a very useful tool when we explore <abbr class="acronym">RSA</abbr> cryptography in Chapter 7. To encode and decode messages in a reasonable manner under this scheme, it is necessary to be able to quickly compute large powers of integers mod <i class="one-letter">n</i>.</p>
          <article class="paragraphs" id="gsI">
            <h5 class="heading">
              <span class="title">Sage.</span>
            </h5>
            <p id="wOD">Sage support for cyclic groups is a little spotty — but we can still make effective use of Sage and perhaps this situation could change soon.</p>
          </article>
        </section>
        <section class="reading-questions" id="CZX">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">4.4</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="HgA">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="LQt">What is the order of the element <nemeth class="inline">⠼⠒</nemeth> in <nemeth class="inline">⠠⠥⠷⠼⠆⠴⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="nnJ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="rXC">What is the order of the element <nemeth class="inline">⠼⠢</nemeth> in <nemeth class="inline">⠠⠥⠷⠼⠆⠒⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="TuS">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="YeL">Find three generators of <nemeth class="inline">⠸⠠⠵⠦</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="zCb">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="ElU">Find three generators of the <nemeth class="inline">⠼⠢⠘⠞⠓</nemeth> roots of unity.</p>
          </article>
          <article class="exercise exercise-like" id="fJk">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="ktd">Show how to compute <nemeth class="inline">⠼⠂⠢⠘⠲⠴⠐⠷⠍⠕⠙⠀⠆⠒⠾</nemeth> efficiently by hand. Check your answer with Sage.</p>
          </article>
        </section>
        <section class="exercises" id="nXh">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">4.5</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="Ope">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Sim">Prove or disprove each of the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="iZg">All of the generators of <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth> are prime.</p></li>
              <li>b. <p id="Pgp"><nemeth class="inline">⠠⠥⠷⠼⠦⠾</nemeth> is cyclic.</p></li>
              <li>c. <p id="vny"><nemeth class="inline">⠸⠠⠟</nemeth> is cyclic.</p></li>
              <li>d. <p id="buH">If every proper subgroup of a group <i class="one-letter">G</i> is cyclic, then <i class="one-letter">G</i> is a cyclic group.</p></li>
              <li>e. <p id="HBQ">A group with a finite number of subgroups is finite.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Ryf"><span class="type">Hint</span>:<p id="dcQ">(a) False; (c) false; (e) true.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="uwn">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="ypv">Find the order of each of the following elements.</p>
            <ol class="outerlist">
              <li>a. <p id="nIZ"><nemeth class="inline">⠼⠢⠀⠈⠑⠀⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>b. <p id="TQi"><nemeth class="inline">⠜⠒⠻⠀⠈⠑⠀⠸⠠⠗</nemeth></p></li>
              <li>c. <p id="zXr"><nemeth class="inline">⠜⠒⠻⠀⠈⠑⠀⠸⠠⠗⠘⠈⠼</nemeth></p></li>
              <li>d. <p id="geA"><nemeth class="inline">⠤⠊⠀⠈⠑⠀⠸⠠⠉⠘⠈⠼</nemeth></p></li>
              <li>e. <p id="MlJ"><nemeth class="inline">⠼⠶⠆⠀⠈⠑⠀⠸⠠⠵⠆⠲⠴</nemeth></p></li>
              <li>f. <p id="ssS"><nemeth class="inline">⠼⠒⠂⠆⠀⠈⠑⠀⠸⠠⠵⠲⠶⠂</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="dMx"><span class="type">Hint</span>:<p id="JjZ">(a) <nemeth class="inline">⠼⠂⠆</nemeth>; (c) infinite; (e) <nemeth class="inline">⠼⠂⠴</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="aDw">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="ewE">List all of the elements in each of the following subgroups.</p>
            <ol class="outerlist">
              <li>a. <p id="YAb">The subgroup of <nemeth class="inline">⠸⠠⠵</nemeth> generated by <nemeth class="inline">⠼⠶</nemeth></p></li>
              <li>b. <p id="EHk">The subgroup of <nemeth class="inline">⠸⠠⠵⠆⠲</nemeth> generated by <nemeth class="inline">⠼⠂⠢</nemeth></p></li>
              <li>c. <p id="kOt">All subgroups of <nemeth class="inline">⠸⠠⠵⠂⠆</nemeth></p></li>
              <li>d. <p id="QVC">All subgroups of <nemeth class="inline">⠸⠠⠵⠖⠴</nemeth></p></li>
              <li>e. <p id="xcL">All subgroups of <nemeth class="inline">⠸⠠⠵⠂⠒</nemeth></p></li>
              <li>f. <p id="djU">All subgroups of <nemeth class="inline">⠸⠠⠵⠲⠦</nemeth></p></li>
              <li>g. <p id="Jrd">The subgroup generated by 3 in <nemeth class="inline">⠠⠥⠷⠼⠆⠴⠾</nemeth></p></li>
              <li>h. <p id="pym">The subgroup generated by 5 in <nemeth class="inline">⠠⠥⠷⠼⠂⠦⠾</nemeth></p></li>
              <li>i. <p id="VFv">The subgroup of <nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth> generated by <nemeth class="inline">⠼⠶</nemeth></p></li>
              <li>j. <p id="BME">The subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> generated by <i class="one-letter">i</i> where <nemeth class="inline">⠊⠘⠆⠐⠀⠨⠅⠀⠤⠼⠂</nemeth></p></li>
              <li>k. <p id="hTN">The subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> generated by <nemeth class="inline">⠼⠆⠊</nemeth></p></li>
              <li>l. <p id="OaW">The subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> generated by <nemeth class="inline">⠷⠼⠂⠬⠊⠾⠸⠌⠜⠆⠻</nemeth></p></li>
              <li>m. <p id="uif">The subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> generated by <nemeth class="inline">⠷⠼⠂⠬⠜⠒⠻⠊⠾⠸⠌⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="qaP"><span class="type">Hint</span>:<p id="pri">(a) <nemeth class="inline">⠼⠶⠸⠠⠵⠀⠨⠅⠀⠨⠷⠀⠄⠄⠄⠀⠠⠀⠤⠼⠶⠠⠀⠼⠴⠠⠀⠼⠶⠠⠀⠼⠂⠲⠠⠀⠄⠄⠄⠨⠾</nemeth>; (b) <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠠⠀⠼⠂⠆⠠⠀⠼⠂⠢⠠⠀⠼⠂⠦⠠⠀⠼⠆⠂⠨⠾</nemeth>; (c) <nemeth class="inline">⠨⠷⠼⠴⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠖⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠲⠠⠀⠼⠦⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠒⠠⠀⠼⠖⠠⠀⠼⠔⠨⠾</nemeth>, <nemeth class="inline">⠨⠷⠼⠴⠠⠀⠼⠆⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠴⠨⠾</nemeth>; (g) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠒⠠⠀⠼⠶⠠⠀⠼⠔⠨⠾</nemeth>; (j) <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠤⠼⠂⠠⠀⠊⠠⠀⠤⠊⠨⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GKF">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="KDN">Find the subgroups of <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth> generated by each of the following matrices.</p>
            <ol class="outerlist">
              <li>a. <p id="ceB"><nemeth class="inline">⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾</nemeth></p></li>
              <li>b. <p id="IlK"><nemeth class="inline">⠠⠷⠼⠴⠀⠂⠸⠌⠒⠠⠾⠀⠠⠷⠒⠀⠴⠠⠾</nemeth></p></li>
              <li>c. <p id="osT"><nemeth class="inline">⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾</nemeth></p></li>
              <li>d. <p id="UAc"><nemeth class="inline">⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾</nemeth></p></li>
              <li>e. <p id="AHl"><nemeth class="inline">⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾</nemeth></p></li>
              <li>f. <p id="gOu"><nemeth class="inline">⠠⠷⠜⠒⠻⠸⠌⠆⠀⠂⠸⠌⠆⠠⠾⠀⠠⠷⠤⠼⠂⠸⠌⠆⠀⠜⠒⠻⠸⠌⠆⠠⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Cph"><span class="type">Hint</span>:<p id="Vyr">(a)</p><div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾</nemeth></div><p data-braille="continuation">.</p><p id="BFA">(c)</p><div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠂⠠⠾⠠⠀⠠⠷⠼⠂⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠴⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠠⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠂⠠⠾⠠⠀⠠⠷⠼⠴⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠤⠼⠂⠠⠾⠠⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠀⠠⠷⠴⠀⠤⠼⠂⠠⠾</nemeth></div><p data-braille="continuation">.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="mRO">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="qKW">Find the order of every element in <nemeth class="inline">⠸⠠⠵⠂⠦</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="SYX">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="WSf">Find the order of every element in the symmetry group of the square, <nemeth class="inline">⠠⠙⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="zgg">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="CZo">What are all of the cyclic subgroups of the quaternion group, <nemeth class="inline">⠠⠟⠦</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="fnp">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="jgx">List all of the cyclic subgroups of <nemeth class="inline">⠠⠥⠷⠼⠒⠴⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Luy">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="PnG">List every generator of each subgroup of order 8 in <nemeth class="inline">⠸⠠⠵⠒⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="rBH">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="vuP">Find all elements of finite order in each of the following groups. Here the “<nemeth class="inline">⠈⠼</nemeth>” indicates the set with zero removed.</p>
            <ol class="outerlist">
              <li>a. <p id="xMF"><nemeth class="inline">⠸⠠⠵</nemeth></p></li>
              <li>b. <p id="dTO"><nemeth class="inline">⠸⠠⠟⠘⠈⠼</nemeth></p></li>
              <li>c. <p id="KaX"><nemeth class="inline">⠸⠠⠗⠘⠈⠼</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Tns"><span class="type">Hint</span>:<p id="hMJ">(a) <nemeth class="inline">⠼⠴</nemeth>; (b) <nemeth class="inline">⠼⠂⠠⠀⠤⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="XIQ">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="bBY">If <nemeth class="inline">⠁⠘⠆⠲⠐⠀⠨⠅⠀⠑</nemeth> in a group <i class="one-letter">G</i>, what are the possible orders of <i class="one-letter">a</i>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="fBK"><span class="type">Hint</span>:<p id="NTS"><nemeth class="inline">⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠖⠠⠀⠼⠦⠠⠀⠼⠂⠆⠠⠀⠼⠆⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="DPZ">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="HJh">Find a cyclic group with exactly one generator. Can you find cyclic groups with exactly two generators? Four generators? How about <i class="one-letter">n</i> generators?</p>
          </article>
          <article class="exercise exercise-like" id="jXi">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="nQq">For <nemeth class="inline">⠝⠀⠐⠅⠱⠀⠼⠆⠴</nemeth>, which groups <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> are cyclic? Make a conjecture as to what is true in general. Can you prove your conjecture?</p>
          </article>
          <article class="exercise exercise-like" id="Qer">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="TXz">Let</p>
            <div class="displaymath">
              <nemeth>⠠⠁⠀⠨⠅⠀⠠⠷⠼⠴⠀⠂⠠⠾⠀⠠⠷⠤⠼⠂⠀⠴⠠⠾⠁⠝⠙⠠⠃⠀⠨⠅⠀⠠⠷⠼⠴⠀⠤⠼⠂⠠⠾⠀⠠⠷⠂⠀⠤⠼⠂⠠⠾</nemeth>
            </div>
            <p data-braille="continuation">be elements in <nemeth class="inline">⠠⠛⠠⠇⠆⠷⠸⠠⠗⠾</nemeth>. Show that <i class="one-letter">A</i> and <i class="one-letter">B</i> have finite orders but <nemeth class="inline">⠠⠁⠠⠃</nemeth> does not.</p>
          </article>
          <article class="exercise exercise-like" id="wlA">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="AeI">Evaluate each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="qig"><nemeth class="inline">⠷⠼⠒⠤⠆⠊⠾⠬⠷⠢⠊⠤⠖⠾</nemeth></p></li>
              <li>b. <p id="Wpp"><nemeth class="inline">⠷⠼⠲⠤⠢⠊⠾⠤⠐⠷⠲⠊⠤⠲⠾⠣⠱⠻</nemeth></p></li>
              <li>c. <p id="Cwy"><nemeth class="inline">⠷⠼⠢⠤⠲⠊⠾⠷⠶⠬⠆⠊⠾</nemeth></p></li>
              <li>d. <p id="iDH"><nemeth class="inline">⠷⠼⠔⠤⠊⠾⠐⠷⠔⠤⠊⠾⠣⠱⠻</nemeth></p></li>
              <li>e. <p id="OKQ"><nemeth class="inline">⠊⠘⠲⠢</nemeth></p></li>
              <li>f. <p id="uRZ"><nemeth class="inline">⠷⠼⠂⠬⠊⠾⠬⠐⠷⠂⠬⠊⠾⠣⠱⠻</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="klD"><span class="type">Hint</span>:<p id="ubb">(a) <nemeth class="inline">⠤⠼⠒⠬⠒⠊</nemeth>; (c) <nemeth class="inline">⠼⠲⠒⠤⠂⠦⠊</nemeth>; (e) <i class="one-letter">i</i></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="csJ">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="glR">Convert the following complex numbers to the form <nemeth class="inline">⠁⠬⠃⠊</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="aZi"><nemeth class="inline">⠼⠆⠉⠊⠎⠷⠨⠏⠸⠌⠖⠾</nemeth></p></li>
              <li>b. <p id="Hgr"><nemeth class="inline">⠼⠢⠉⠊⠎⠷⠼⠔⠨⠏⠸⠌⠲⠾</nemeth></p></li>
              <li>c. <p id="nnA"><nemeth class="inline">⠼⠒⠉⠊⠎⠷⠨⠏⠾</nemeth></p></li>
              <li>d. <p id="TuJ"><nemeth class="inline">⠉⠊⠎⠷⠼⠶⠨⠏⠸⠌⠲⠾⠸⠌⠆</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="wzV"><span class="type">Hint</span>:<p id="aik">(a) <nemeth class="inline">⠜⠒⠻⠬⠊</nemeth>; (c) <nemeth class="inline">⠤⠼⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="IzS">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="Mta">Change the following complex numbers to polar representation.</p>
            <ol class="outerlist">
              <li>a. <p id="zBS"><nemeth class="inline">⠼⠂⠤⠊</nemeth></p></li>
              <li>b. <p id="fJb"><nemeth class="inline">⠤⠼⠢</nemeth></p></li>
              <li>c. <p id="LQk"><nemeth class="inline">⠼⠆⠬⠆⠊</nemeth></p></li>
              <li>d. <p id="rXt"><nemeth class="inline">⠜⠒⠻⠬⠊</nemeth></p></li>
              <li>e. <p id="YeC"><nemeth class="inline">⠤⠼⠒⠊</nemeth></p></li>
              <li>f. <p id="ElL"><nemeth class="inline">⠼⠆⠊⠬⠆⠜⠒⠻</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="IOn"><span class="type">Hint</span>:<p id="Gpt">(a) <nemeth class="inline">⠜⠆⠻⠉⠊⠎⠷⠼⠶⠨⠏⠸⠌⠲⠾</nemeth>; (c) <nemeth class="inline">⠼⠆⠜⠆⠻⠉⠊⠎⠷⠨⠏⠸⠌⠲⠾</nemeth>; (e) <nemeth class="inline">⠼⠒⠉⠊⠎⠷⠼⠒⠨⠏⠸⠌⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="oHb">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="sAj">Calculate each of the following expressions.</p>
            <ol class="outerlist">
              <li>a. <p id="ksU"><nemeth class="inline">⠷⠼⠂⠬⠊⠾⠘⠤⠼⠂</nemeth></p></li>
              <li>b. <p id="QAd"><nemeth class="inline">⠷⠼⠂⠤⠊⠾⠘⠖</nemeth></p></li>
              <li>c. <p id="wHm"><nemeth class="inline">⠷⠜⠒⠻⠬⠊⠾⠘⠢</nemeth></p></li>
              <li>d. <p id="cOv"><nemeth class="inline">⠷⠤⠊⠾⠘⠂⠴</nemeth></p></li>
              <li>e. <p id="IVE"><nemeth class="inline">⠷⠷⠼⠂⠤⠊⠾⠸⠌⠆⠾⠘⠲</nemeth></p></li>
              <li>f. <p id="pcN"><nemeth class="inline">⠷⠤⠜⠆⠻⠤⠜⠆⠻⠊⠾⠘⠂⠆</nemeth></p></li>
              <li>g. <p id="VjW"><nemeth class="inline">⠷⠤⠼⠆⠬⠆⠊⠾⠘⠤⠼⠢</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="VcF"><span class="type">Hint</span>:<p id="mwC">(a) <nemeth class="inline">⠷⠼⠂⠤⠊⠾⠸⠌⠆</nemeth>; (c) <nemeth class="inline">⠼⠂⠖⠷⠊⠤⠜⠒⠻⠾</nemeth>; (e) <nemeth class="inline">⠤⠼⠂⠸⠌⠲</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="UOk">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="YHs">Prove each of the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="Brf"><nemeth class="inline">⠳⠵⠳⠀⠨⠅⠀⠳⠐⠵⠣⠱⠻⠳</nemeth></p></li>
              <li>b. <p id="hyo"><nemeth class="inline">⠵⠐⠵⠣⠱⠻⠀⠨⠅⠀⠳⠵⠳⠘⠆</nemeth></p></li>
              <li>c. <p id="NFx"><nemeth class="inline">⠵⠘⠤⠼⠂⠐⠀⠨⠅⠀⠐⠵⠣⠱⠻⠸⠌⠳⠵⠳⠘⠆</nemeth></p></li>
              <li>d. <p id="tMG"><nemeth class="inline">⠳⠵⠬⠺⠳⠀⠐⠅⠱⠀⠳⠵⠳⠬⠳⠺⠳</nemeth></p></li>
              <li>e. <p id="ZTP"><nemeth class="inline">⠳⠵⠤⠺⠳⠀⠨⠂⠱⠀⠳⠳⠵⠳⠤⠳⠺⠳⠳</nemeth></p></li>
              <li>f. <p id="mih"><nemeth class="inline">⠳⠵⠺⠳⠀⠨⠅⠀⠳⠵⠳⠳⠺⠳</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="AVt">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="EOB">List and graph the 6th roots of unity. What are the generators of this group? What are the primitive 6th roots of unity?</p>
          </article>
          <article class="exercise exercise-like" id="hcC">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="kVK">List and graph the 5th roots of unity. What are the generators of this group? What are the primitive 5th roots of unity?</p>
          </article>
          <article class="exercise exercise-like" id="NjL">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="RcT">Calculate each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="Dgs"><nemeth class="inline">⠼⠆⠔⠆⠘⠒⠂⠶⠂⠐⠷⠍⠕⠙⠀⠢⠦⠆⠾</nemeth></p></li>
              <li>b. <p id="jnB"><nemeth class="inline">⠼⠆⠢⠢⠶⠘⠒⠲⠂⠐⠷⠍⠕⠙⠀⠢⠖⠦⠂⠾</nemeth></p></li>
              <li>c. <p id="PuK"><nemeth class="inline">⠼⠆⠴⠶⠂⠘⠔⠢⠆⠂⠐⠷⠍⠕⠙⠀⠲⠶⠆⠲⠾</nemeth></p></li>
              <li>d. <p id="vBT"><nemeth class="inline">⠼⠔⠶⠂⠘⠒⠆⠂⠐⠷⠍⠕⠙⠀⠶⠖⠢⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="ZMy"><span class="type">Hint</span>:<p id="SDL">(a) <nemeth class="inline">⠼⠆⠔⠆</nemeth>; (c) <nemeth class="inline">⠼⠂⠢⠆⠒</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="tqU">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="xkc">Let <nemeth class="inline">⠁⠠⠀⠃⠀⠈⠑⠀⠠⠛</nemeth>. Prove the following statements.</p>
            <ol class="outerlist">
              <li>a. <p id="bJc">The order of <i class="one-letter">a</i> is the same as the order of <nemeth class="inline">⠁⠘⠤⠼⠂</nemeth>.</p></li>
              <li>b. <p id="HQl">For all <nemeth class="inline">⠛⠀⠈⠑⠀⠠⠛</nemeth>, <nemeth class="inline">⠳⠁⠳⠀⠨⠅⠀⠳⠛⠘⠤⠼⠂⠐⠁⠛⠳</nemeth>.</p></li>
              <li>c. <p id="nXu">The order of <nemeth class="inline">⠁⠃</nemeth> is the same as the order of <nemeth class="inline">⠃⠁</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Zyd">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="drl">Let <i class="one-letter">p</i> and <i class="one-letter">q</i> be distinct primes. How many generators does <nemeth class="inline">⠸⠠⠵⠰⠏⠟</nemeth> have?</p>
          </article>
          <article class="exercise exercise-like" id="FFm">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="Jyu">Let <i class="one-letter">p</i> be prime and <i class="one-letter">r</i> be a positive integer. How many generators does <nemeth class="inline">⠸⠠⠵⠰⠏⠰⠘⠗</nemeth> have?</p>
          </article>
          <article class="exercise exercise-like" id="lMv">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="pFD">Prove that <nemeth class="inline">⠸⠠⠵⠰⠏</nemeth> has no nontrivial subgroups if <i class="one-letter">p</i> is prime.</p>
          </article>
          <article class="exercise exercise-like" id="RTE">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="VMM">If <i class="one-letter">g</i> and <i class="one-letter">h</i> have orders <nemeth class="inline">⠼⠂⠢</nemeth> and <nemeth class="inline">⠼⠂⠖</nemeth> respectively in a group <i class="one-letter">G</i>, what is the order of <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾⠨⠩⠨⠨⠷⠓⠨⠨⠾</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="KDA"><span class="type">Hint</span>:<p id="yKU"><nemeth class="inline">⠳⠨⠨⠷⠛⠨⠨⠾⠨⠩⠨⠨⠷⠓⠨⠨⠾⠳⠀⠨⠅⠀⠼⠂</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="yaN">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="BTV">Let <i class="one-letter">a</i> be an element in a group <i class="one-letter">G</i>. What is a generator for the subgroup <nemeth class="inline">⠨⠨⠷⠁⠘⠍⠐⠨⠨⠾⠨⠩⠨⠨⠷⠁⠘⠝⠐⠨⠨⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="ehW">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="ibe">Prove that <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> has an even number of generators for <nemeth class="inline">⠝⠀⠨⠂⠀⠼⠆</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Kpf">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="Oin">Suppose that <i class="one-letter">G</i> is a group and let <i class="one-letter">a</i>, <nemeth class="inline">⠃⠀⠈⠑⠀⠠⠛</nemeth>. Prove that if <nemeth class="inline">⠳⠁⠳⠀⠨⠅⠀⠍</nemeth> and <nemeth class="inline">⠳⠃⠳⠀⠨⠅⠀⠝</nemeth> with <nemeth class="inline">⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <nemeth class="inline">⠨⠨⠷⠁⠨⠨⠾⠨⠩⠨⠨⠷⠃⠨⠨⠾⠀⠨⠅⠀⠨⠷⠑⠨⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="qwo">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="upw">Let <i class="one-letter">G</i> be an abelian group. Show that the elements of finite order in <i class="one-letter">G</i> form a subgroup. This subgroup is called the <dfn class="terminology">torsion subgroup</dfn> of <i class="one-letter">G</i>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="Pnt"><span class="type">Hint</span>:<p id="eSd">The identity element in any group has finite order. Let <nemeth class="inline">⠛⠠⠀⠓⠀⠈⠑⠀⠠⠛</nemeth> have orders <i class="one-letter">m</i> and <i class="one-letter">n</i>, respectively. Since <nemeth class="inline">⠷⠛⠘⠤⠼⠂⠐⠾⠘⠍⠐⠀⠨⠅⠀⠑</nemeth> and <nemeth class="inline">⠷⠛⠓⠾⠘⠍⠝⠐⠀⠨⠅⠀⠑</nemeth>, the elements of finite order in <i class="one-letter">G</i> form a subgroup of <i class="one-letter">G</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="WDx">
            <h6 class="heading">
              <span class="codenumber">32<span class="period">.</span></span>
            </h6>
            <p id="awF">Let <i class="one-letter">G</i> be a finite cyclic group of order <i class="one-letter">n</i> generated by <i class="one-letter">x</i>. Show that if <nemeth class="inline">⠽⠀⠨⠅⠀⠭⠘⠅</nemeth> where <nemeth class="inline">⠛⠉⠙⠀⠷⠅⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>, then <i class="one-letter">y</i> must be a generator of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="CKG">
            <h6 class="heading">
              <span class="codenumber">33<span class="period">.</span></span>
            </h6>
            <p id="GDO">If <i class="one-letter">G</i> is an abelian group that contains a pair of cyclic subgroups of order <nemeth class="inline">⠼⠆</nemeth>, show that <i class="one-letter">G</i> must contain a subgroup of order <nemeth class="inline">⠼⠲</nemeth>. Does this subgroup have to be cyclic?</p>
          </article>
          <article class="exercise exercise-like" id="iRP">
            <h6 class="heading">
              <span class="codenumber">34<span class="period">.</span></span>
            </h6>
            <p id="mKX">Let <i class="one-letter">G</i> be an abelian group of order <nemeth class="inline">⠏⠟</nemeth> where <nemeth class="inline">⠛⠉⠙⠀⠷⠏⠠⠀⠟⠾⠀⠨⠅⠀⠼⠂</nemeth>. If <i class="one-letter">G</i> contains elements <i class="one-letter">a</i> and <i class="one-letter">b</i> of order <i class="one-letter">p</i> and <i class="one-letter">q</i> respectively, then show that <i class="one-letter">G</i> is cyclic.</p>
          </article>
          <article class="exercise exercise-like" id="OYY">
            <h6 class="heading">
              <span class="codenumber">35<span class="period">.</span></span>
            </h6>
            <p id="SSg">Prove that the subgroups of <nemeth class="inline">⠸⠠⠵</nemeth> are exactly <nemeth class="inline">⠝⠸⠠⠵</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠴⠠⠀⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="vgh">
            <h6 class="heading">
              <span class="codenumber">36<span class="period">.</span></span>
            </h6>
            <p id="yZp">Prove that the generators of <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> are the integers <i class="one-letter">r</i> such that <nemeth class="inline">⠼⠂⠀⠐⠅⠱⠀⠗⠀⠐⠅⠀⠝</nemeth> and <nemeth class="inline">⠛⠉⠙⠀⠷⠗⠠⠀⠝⠾⠀⠨⠅⠀⠼⠂</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="bnq">
            <h6 class="heading">
              <span class="codenumber">37<span class="period">.</span></span>
            </h6>
            <p id="fgy">Prove that if <i class="one-letter">G</i> has no proper nontrivial subgroups, then <i class="one-letter">G</i> is a cyclic group.</p>
            <div class="solutions">
              <div class="hint solution-like" id="glE"><span class="type">Hint</span>:<p id="KZm">If <i class="one-letter">g</i> is an element distinct from the identity in <i class="one-letter">G</i>, <i class="one-letter">g</i> must generate <i class="one-letter">G</i>; otherwise, <nemeth class="inline">⠨⠨⠷⠛⠨⠨⠾</nemeth> is a nontrivial proper subgroup of <i class="one-letter">G</i>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="Huz">
            <h6 class="heading">
              <span class="codenumber">38<span class="period">.</span></span>
            </h6>
            <p id="LnH">Prove that the order of an element in a cyclic group <i class="one-letter">G</i> must divide the order of the group.</p>
          </article>
          <article class="exercise exercise-like" id="nBI">
            <h6 class="heading">
              <span class="codenumber">39<span class="period">.</span></span>
            </h6>
            <p id="ruQ">Prove that if <i class="one-letter">G</i> is a cyclic group of order <i class="one-letter">m</i> and <nemeth class="inline">⠙⠳⠍</nemeth>, then <i class="one-letter">G</i> must have a subgroup of order <i class="one-letter">d</i>.</p>
          </article>
          <article class="exercise exercise-like" id="TIR">
            <h6 class="heading">
              <span class="codenumber">40<span class="period">.</span></span>
            </h6>
            <p id="XBZ">For what integers <i class="one-letter">n</i> is <nemeth class="inline">⠤⠼⠂</nemeth> an <i class="one-letter">n</i>th root of unity?</p>
          </article>
          <article class="exercise exercise-like" id="zQa">
            <h6 class="heading">
              <span class="codenumber">41<span class="period">.</span></span>
            </h6>
            <p id="DJi">If <nemeth class="inline">⠵⠀⠨⠅⠀⠗⠷⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹⠾</nemeth> and <nemeth class="inline">⠺⠀⠨⠅⠀⠎⠷⠉⠕⠎⠀⠨⠋⠬⠊⠎⠊⠝⠀⠨⠋⠾</nemeth> are two nonzero complex numbers, show that</p>
            <div class="displaymath">
              <nemeth>⠵⠺⠀⠨⠅⠀⠗⠎⠈⠷⠉⠕⠎⠀⠷⠨⠹⠬⠨⠋⠾⠬⠊⠎⠊⠝⠀⠷⠨⠹⠬⠨⠋⠾⠈⠾</nemeth>
            </div>
            <p data-braille="continuation">.</p>
          </article>
          <article class="exercise exercise-like" id="fXj">
            <h6 class="heading">
              <span class="codenumber">42<span class="period">.</span></span>
            </h6>
            <p id="jQr">Prove that the circle group is a subgroup of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Mes">
            <h6 class="heading">
              <span class="codenumber">43<span class="period">.</span></span>
            </h6>
            <p id="PXA">Prove that the <i class="one-letter">n</i>th roots of unity form a cyclic subgroup of <nemeth class="inline">⠸⠠⠞</nemeth> of order <i class="one-letter">n</i>.</p>
          </article>
          <article class="exercise exercise-like" id="slB">
            <h6 class="heading">
              <span class="codenumber">44<span class="period">.</span></span>
            </h6>
            <p id="weJ">Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠸⠠⠞</nemeth>. Prove that <nemeth class="inline">⠨⠁⠘⠍⠐⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠨⠁⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth> if and only if <nemeth class="inline">⠨⠁⠘⠙⠐⠀⠨⠅⠀⠼⠂</nemeth> for <nemeth class="inline">⠙⠀⠨⠅⠀⠛⠉⠙⠀⠷⠍⠠⠀⠝⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="YsK">
            <h6 class="heading">
              <span class="codenumber">45<span class="period">.</span></span>
            </h6>
            <p id="clS">Let <nemeth class="inline">⠵⠀⠈⠑⠀⠸⠠⠉⠘⠈⠼</nemeth>. If <nemeth class="inline">⠳⠵⠳⠀⠌⠨⠅⠀⠼⠂</nemeth>, prove that the order of <i class="one-letter">z</i> is infinite.</p>
          </article>
          <article class="exercise exercise-like" id="EzT">
            <h6 class="heading">
              <span class="codenumber">46<span class="period">.</span></span>
            </h6>
            <p id="Itb">Let <nemeth class="inline">⠵⠀⠨⠅⠀⠉⠕⠎⠀⠨⠹⠬⠊⠎⠊⠝⠀⠨⠹</nemeth> be in <nemeth class="inline">⠸⠠⠞</nemeth> where <nemeth class="inline">⠨⠹⠀⠈⠑⠀⠸⠠⠟</nemeth>. Prove that the order of <i class="one-letter">z</i> is infinite.</p>
          </article>
        </section>
        <section class="exercises" id="Ueq">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">4.6</span> <span class="title">Programming Exercises</span></div>
          <article class="exercise exercise-like" id="kHc">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="oAk">Write a computer program that will write any decimal number as the sum of distinct powers of <nemeth class="inline">⠼⠆</nemeth>. What is the largest integer that your program will handle?</p>
          </article>
          <article class="exercise exercise-like" id="QOl">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="UHt">Write a computer program to calculate <nemeth class="inline">⠁⠘⠭⠐⠷⠍⠕⠙⠀⠝⠾</nemeth> by the method of repeated squares. What are the largest values of <i class="one-letter">n</i> and <i class="one-letter">x</i> that your program will accept?</p>
          </article>
        </section>
        <section class="references" id="KnF">
          <div class="none"><span class="type">References</span> <span class="codenumber">4.7</span> <span class="title">References and Suggested Readings</span></div>
          <article class="bib" id="quO"><div class="bibitem">[1]</div>  <div class="bibentry">Koblitz, N. <i>A Course in Number Theory and Cryptography</i>. 2nd ed. Springer, New York, 1994.</div></article>
          <article class="bib" id="WBX"><div class="bibitem">[2]</div>  <div class="bibentry">Pomerance, C. “Cryptology and Computational Number Theory—An Introduction,” in <i>Cryptology and Computational Number Theory</i>, Pomerance, C., ed. Proceedings of Symposia in Applied Mathematics, vol. 42, American Mathematical Society, Providence, RI, 1990. This book gives an excellent account of how the method of repeated squares is used in cryptography.</div></article>
        </section>
        <section class="section" id="EVs">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">4.8</span> <span class="title">Sage</span></div>
          <section class="introduction" id="olC">
            <p id="ZML">Cyclic groups are very important, so it is no surprise that they appear in many different forms in Sage. Each is slightly different, and no one implementation is ideal for an introduction, but together they can illustrate most of the important ideas. Here is a guide to the various ways to construct, and study, a cyclic group in Sage.</p>
          </section>
          <section class="subsection" id="Dgf">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.1</span> <span class="title">Infinite Cyclic Groups</span></div>
            <p id="Kio">In Sage, the integers <nemeth class="inline">⠸⠠⠵</nemeth> are constructed with <code class="code-inline tex2jax_ignore">ZZ</code>. To build the infinite cyclic group such as <nemeth class="inline">⠼⠒⠸⠠⠵</nemeth> from Example 4.1.1, simply use <code class="code-inline tex2jax_ignore">3*ZZ</code>. As an infinite set, there is not a whole lot you can do with this. You can test if integers are in this set, or not. You can also recall the generator with the <code class="code-inline tex2jax_ignore">.gen()</code> command.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = 3*ZZ
-12 in G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">37 in G
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.gen()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
          </section>
          <section class="subsection" id="jno">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.2</span> <span class="title">Additive Cyclic Groups</span></div>
            <p id="qpx">The additive cyclic group <nemeth class="inline">⠸⠠⠵⠰⠝</nemeth> can be built as a special case of a more general Sage construction. First we build <nemeth class="inline">⠸⠠⠵⠂⠲</nemeth> and capture its generator. Throughout, pay close attention to the use of parentheses and square brackets for when you experiment on your own.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = AdditiveAbelianGroup([14])
G.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(0), (1), (2), (3), (4), (5), (6), (7),
 (8), (9), (10), (11), (12), (13)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a = G.gen(0)
a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1)
</div>
            </article>
            <p id="WwG">You can compute in this group, by using the generator, or by using new elements formed by coercing integers into the group, or by taking the result of operations on other elements. And we can compute the order of elements in this group. Notice that we can perform repeated additions with the shortcut of taking integer multiples of an element.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a + a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a + a + a + a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">4*a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">37*a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(9)
</div>
            </article>
            <p id="CDP">We can create, and then compute with, new elements of the group by coercing an integer (in a list of length <nemeth class="inline">⠼⠂</nemeth>) into the group. You may get a <code class="code-inline tex2jax_ignore">DeprecationWarning</code> the first time you use this syntax if you are using an old version of Sage. The mysterious warning can be safely ignored.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G([2])
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = G([2]); b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b + b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">2*b == 4*a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">7*b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(0)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = a - 6*b; c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(3)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c + c + c + c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(12)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <p id="iKY">It is possible to create cyclic subgroups, from an element designated to be the new generator. Unfortunately, to do this requires the <code class="code-inline tex2jax_ignore">.submodule()</code> method (which should be renamed in Sage).</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = G.submodule([b]); H
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Additive abelian group isomorphic to Z/7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(0), (2), (4), (6), (8), (10), (12)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">e = H.gen(0); e
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">3*e
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(6)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">e.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <p id="OSh">The cyclic subgroup <code class="code-inline tex2jax_ignore">H</code> just created has more than one generator. We can test this by building a new subgroup and comparing the two subgroups.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">f = 12*a; f
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(12)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">f.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K = G.submodule([f]); K
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Additive abelian group isomorphic to Z/7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(0), (2), (4), (6), (8), (10), (12)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.gen(0)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H == K
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="uZq">Certainly the list of elements, and the common generator of <code class="code-inline tex2jax_ignore">(2)</code> lead us to belive that <code class="code-inline tex2jax_ignore">H</code> and <code class="code-inline tex2jax_ignore">K</code> are the same, but the comparison in the last line leaves no doubt.</p>
            <p id="bgz">Results in this section, especially Theorem 4.1.13 and Corollary 4.1.14, can be investigated by creating generators of subgroups from a generator of one additive cyclic group, creating the subgroups, and computing the orders of both elements and orders of groups.</p>
          </section>
          <section class="subsection" id="Pux">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.3</span> <span class="title">Abstract Multiplicative Cyclic Groups</span></div>
            <p id="HnI">We can create an abstract cyclic group in the style of Theorem 4.1.3, Theorem 4.1.9, and Theorem 4.1.10. In the syntax below <code class="code-inline tex2jax_ignore">a</code> is a name for the generator, and <code class="code-inline tex2jax_ignore">14</code> is the order of the element. Notice that the notation is now multiplicative, so we multiply elements, and repeated products can be written as powers.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.&lt;a&gt; = AbelianGroup([14])
G.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1, a, a^2, a^3, a^4, a^5, a^6, a^7, a^8, a^9, a^10, a^11, a^12, a^13)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <p id="nuR">Computations in the group are similar to before, only with different notation. Now products, with repeated products written as exponentiation.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = a^2
b.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b*b*b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a^6
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = a^7
c.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c^2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b*c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a^9
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b^37*c^42
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">a^4
</div>
            </article>
            <p id="TCa">Subgroups can be formed with a <code class="code-inline tex2jax_ignore">.subgroup()</code> command. But do not try to list the contents of a subgroup, it'll look strangely unfamiliar. Also, comparison of subgroups is not implemented.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = G.subgroup([a^2])
H.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K = G.subgroup([a^12])
K.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">L = G.subgroup([a^4])
H == L
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="zJj">One advantage of this implementation is the possibility to create all possible subgroups. Here we create the list of subgroups, extract one in particular (the third), and check its order.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">allsg = G.subgroups(); allsg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[Multiplicative Abelian subgroup isomorphic to C2 x C7 generated by {a},
 Multiplicative Abelian subgroup isomorphic to C7 generated by {a^2},
 Multiplicative Abelian subgroup isomorphic to C2 generated by {a^7},
 Trivial Abelian subgroup]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sub = allsg[2]
sub.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2
</div>
            </article>
          </section>
          <section class="subsection" id="vBG">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.4</span> <span class="title">Cyclic Permutation Groups</span></div>
            <p id="fQs">We will learn more about permutation groups in the next chapter. But we will mention here that it is easy to create cyclic groups as permutation groups, and a variety of methods are available for working with them, even if the actual elements get a bit cumbersome to work with. As before, notice that the notation and syntax is multiplicative.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G=CyclicPermutationGroup(14)
a = G.gen(0); a
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,2,3,4,5,6,7,8,9,10,11,12,13,14)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = a^2
b = a^2; b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3,5,7,9,11,13)(2,4,6,8,10,12,14)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">a*a*b*b*b
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,9,3,11,5,13,7)(2,10,4,12,6,14,8)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = a^37*b^26; c
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,6,11,2,7,12,3,8,13,4,9,14,5,10)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">14
</div>
            </article>
            <p id="LXB">We can create subgroups, check their orders, and list their elements.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = G.subgroup([a^2])
H.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.gen(0)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3,5,7,9,11,13)(2,4,6,8,10,12,14)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(),
 (1,3,5,7,9,11,13)(2,4,6,8,10,12,14),
 (1,5,9,13,3,7,11)(2,6,10,14,4,8,12),
 (1,7,13,5,11,3,9)(2,8,14,6,12,4,10),
 (1,9,3,11,5,13,7)(2,10,4,12,6,14,8),
 (1,11,7,3,13,9,5)(2,12,8,4,14,10,6),
 (1,13,11,9,7,5,3)(2,14,12,10,8,6,4)]
</div>
            </article>
            <p id="seK">It could help to visualize this group, and the subgroup, as rotations of a regular <nemeth class="inline">⠼⠂⠆</nemeth>-gon with the vertices labeled with the integers <nemeth class="inline">⠼⠂</nemeth> through <nemeth class="inline">⠼⠂⠆</nemeth>. This is not the full group of symmetries, since it does not include reflections, just the <nemeth class="inline">⠼⠂⠆</nemeth> rotations.</p>
          </section>
          <section class="subsection" id="bIP">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.5</span> <span class="title">Cayley Tables</span></div>
            <p id="YlT">As groups, each of the examples above (groups and subgroups) have Cayley tables implemented. Since the groups are cyclic, and their subgroups are therefore cyclic, the Cayley tables should have a similar “cyclic” pattern. Note that the letters used in the default table are generic, and are not related to the letters used above for specific elements — they just match up with the group elements in the order given by <code class="code-inline tex2jax_ignore">.list()</code>.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.&lt;a&gt; = AbelianGroup([14])
G.cayley_table()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*  a b c d e f g h i j k l m n
 +----------------------------
a| a b c d e f g h i j k l m n
b| b c d e f g h i j k l m n a
c| c d e f g h i j k l m n a b
d| d e f g h i j k l m n a b c
e| e f g h i j k l m n a b c d
f| f g h i j k l m n a b c d e
g| g h i j k l m n a b c d e f
h| h i j k l m n a b c d e f g
i| i j k l m n a b c d e f g h
j| j k l m n a b c d e f g h i
k| k l m n a b c d e f g h i j
l| l m n a b c d e f g h i j k
m| m n a b c d e f g h i j k l
n| n a b c d e f g h i j k l m
</div>
            </article>
            <p id="Etc">If the real names of the elements are not too complicated, the table could be more informative using these names.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">K.&lt;b&gt; = AbelianGroup([10])
K.cayley_table(names='elements')
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">  *    1   b b^2 b^3 b^4 b^5 b^6 b^7 b^8 b^9
   +----------------------------------------
  1|   1   b b^2 b^3 b^4 b^5 b^6 b^7 b^8 b^9
  b|   b b^2 b^3 b^4 b^5 b^6 b^7 b^8 b^9   1
b^2| b^2 b^3 b^4 b^5 b^6 b^7 b^8 b^9   1   b
b^3| b^3 b^4 b^5 b^6 b^7 b^8 b^9   1   b b^2
b^4| b^4 b^5 b^6 b^7 b^8 b^9   1   b b^2 b^3
b^5| b^5 b^6 b^7 b^8 b^9   1   b b^2 b^3 b^4
b^6| b^6 b^7 b^8 b^9   1   b b^2 b^3 b^4 b^5
b^7| b^7 b^8 b^9   1   b b^2 b^3 b^4 b^5 b^6
b^8| b^8 b^9   1   b b^2 b^3 b^4 b^5 b^6 b^7
b^9| b^9   1   b b^2 b^3 b^4 b^5 b^6 b^7 b^8
</div>
            </article>
          </section>
          <section class="subsection" id="HPY">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">4.8.6</span> <span class="title">Complex Roots of Unity</span></div>
            <p id="kAl">The finite cyclic subgroups of <nemeth class="inline">⠸⠠⠞</nemeth>, generated by a primitive <i class="one-letter">n</i>th root of unity are implemented as a more general construction in Sage, known as a cyclotomic field. If you concentrate on just the multiplication of powers of a generator (and ignore the infinitely many other elements) then this is a finite cyclic group. Since this is not implemented directly in Sage as a group, <i class="foreign">per se</i>, it is a bit harder to construct things like subgroups, but it is an excellent exercise to try. It is a nice example since the complex numbers are a concrete and familiar construction. Here are a few sample calculations to provide you with some exploratory tools. See the notes following the computations.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = CyclotomicField(14)
w = G.gen(0); w
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">zeta14
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">wc = CDF(w)
wc.abs()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1.0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">wc.arg()/N(2*pi/14)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1.0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">b = w^2
b.multiplicative_order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">7
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">bc = CDF(b); bc
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">0.62348980185... + 0.781831482468...*I
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">bc.abs()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1.0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">bc.arg()/N(2*pi/14)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">2.0
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg = [b^i for i in range(7)]; sg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[1, zeta14^2, zeta14^4,
zeta14^5 - zeta14^4 + zeta14^3 - zeta14^2 + zeta14 - 1,
-zeta14, -zeta14^3, -zeta14^5]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = sg[3]; d = sg[5]
c*d
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">zeta14^2
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c = sg[3]; d = sg[6]
c*d in sg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">c*d == sg[2]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg[5]*sg[6] == sg[4]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G.multiplication_table(elements=sg)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">*  a b c d e f g
 +--------------
a| a b c d e f g
b| b c d e f g a
c| c d e f g a b
d| d e f g a b c
e| e f g a b c d
f| f g a b c d e
g| g a b c d e f
</div>
            </article>
            <p id="QHu">Notes:</p>
            <ol class="outerlist">
              <li>1. <p id="MAe"><code class="code-inline tex2jax_ignore">zeta14</code> is the name of the generator used for the cyclotomic field, it is a primitive root of unity (a <nemeth class="inline">⠼⠂⠲</nemeth>th root of unity in this case). We have captured it as <code class="code-inline tex2jax_ignore">w</code>.</p></li>
              <li>2. <p id="sHn">The syntax <code class="code-inline tex2jax_ignore">CDF(w)</code> will convert the complex number <code class="code-inline tex2jax_ignore">w</code> into the more familiar form with real and imaginary parts.</p></li>
              <li>3. <p id="YOw">The method <code class="code-inline tex2jax_ignore">.abs()</code> will return the modulus of a complex number, <i class="one-letter">r</i> as described in the text. For elements of <nemeth class="inline">⠸⠠⠉⠘⠈⠼</nemeth> this should always equal <nemeth class="inline">⠼⠂</nemeth>.</p></li>
              <li>4. <p id="EVF">The method <code class="code-inline tex2jax_ignore">.arg()</code> will return the argument of a complex number, <nemeth class="inline">⠨⠹</nemeth> as described in the text. Every element of the cyclic group in this example should have an argument that is an integer multiple of <nemeth class="inline">⠹⠆⠨⠏⠌⠂⠲⠼</nemeth>. The <code class="code-inline tex2jax_ignore">N()</code> syntax converts the symbolic value of <code class="code-inline tex2jax_ignore">pi</code> to a numerical approximation.</p></li>
              <li>5. <p id="lcO"><code class="code-inline tex2jax_ignore">sg</code> is a list of elements that form a cyclic subgroup of order 7, composed of the first 7 powers of <code class="code-inline tex2jax_ignore">b = w^2</code>. So, for example, the last comparison multiplies the fifth power of <code class="code-inline tex2jax_ignore">b</code> with the sixth power of <code class="code-inline tex2jax_ignore">b</code>, which would be the eleventh power of <code class="code-inline tex2jax_ignore">b</code>. But since <code class="code-inline tex2jax_ignore">b</code> has order 7, this reduces to the fourth power.</p></li>
              <li>6. <p id="RjX">If you know a subset of an infinite group forms a subgroup, then you can produce its Cayley table by specifying the list of elements you want to use. Here we ask for a multiplication table, since that is the relevant operation.</p></li>
            </ol>
          </section>
        </section>
        <section class="exercises" id="Alz">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">4.9</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="wVu">
            <p id="FTU">This group of exercises is about the group of units mod <i class="one-letter">n</i>, <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth>, which is sometimes cyclic, sometimes not. There are some commands in Sage that will answer some of these questions very quickly, but instead of using those now, just use the basic techniques described. The idea here is to just work with elements, and lists of elements, to discern the subgroup structure of these groups.</p>
            <p id="mbd">Sage worksheets have extensive capabilities for making new cells with carefully formatted text, include support for <span class="latex-logo">L<span class="A">a</span>T<span class="E">e</span>X</span> syntax to express mathematics. So when a question asks for explanation or commentary, make a new cell and communicate clearly with your audience. Continue this practice in subsequent exercise sets.</p>
          </section>
          <article class="exercise exercise-like" id="dcD">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="AOC">Execute the statement <code class="code-inline tex2jax_ignore">R = Integers(40)</code> to create the set <code class="code-inline tex2jax_ignore">[0,1,2,...,39]</code>This is a group under addition mod <nemeth class="inline">⠼⠲⠴</nemeth>, which we will ignore. Instead we are interested in the subset of elements which have an inverse under <em class="emphasis">multiplication</em> mod <nemeth class="inline">⠼⠲⠴</nemeth>. Determine how big this subgroup is by executing the command <code class="code-inline tex2jax_ignore">R.unit_group_order()</code>, and then obtain a list of these elements with <code class="code-inline tex2jax_ignore">R.list_of_elements_of_multiplicative_group()</code>.</p>
          </article>
          <article class="exercise exercise-like" id="JjM">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="gVL">You can create elements of this group by coercing regular integers into <code class="code-inline tex2jax_ignore">U</code>, such as with the statement <code class="code-inline tex2jax_ignore">a = U(7)</code>. (Don't confuse this with our mathematical notation <nemeth class="inline">⠠⠥⠷⠼⠲⠴⠾</nemeth>.) This will tell Sage that you want to view <nemeth class="inline">⠼⠶</nemeth> as an element of <i class="one-letter">U</i>, subject to the corresponding operations. Determine the elements of the cyclic subgroup of <i class="one-letter">U</i> generated by <nemeth class="inline">⠼⠶</nemeth> with a list comprehension as follows:</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">R = Integers(40)
a = R(7)
[a^i for i in srange(16)]
</div>
            </article>
            <p id="NcU">What is the order of <nemeth class="inline">⠼⠶</nemeth> in <nemeth class="inline">⠠⠥⠷⠼⠲⠴⠾</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="pqV">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="tkd">The group <nemeth class="inline">⠠⠥⠷⠼⠲⠔⠾</nemeth> is cyclic. Using only the Sage commands described previously, use Sage to find a generator for this group. Now using <em class="emphasis">only</em> theorems about the structure of cyclic groups, describe each of the subgroups of <nemeth class="inline">⠠⠥⠷⠼⠲⠔⠾</nemeth> by specifying its order and by giving an explicit generator. Do not repeat any of the subgroups — in other words, present each subgroup <em class="emphasis">exactly</em> once. You can use Sage to check your work on the subgroups, but your answer about the subgroups should rely only on theorems and be a nicely written paragraph with a table, etc.</p>
          </article>
          <article class="exercise exercise-like" id="Vye">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="Zrm">The group <nemeth class="inline">⠠⠥⠷⠼⠒⠢⠾</nemeth> is not cyclic. Again, using only the Sage commands described previously, use computations to provide irrefutable evidence of this. How many of the <nemeth class="inline">⠼⠂⠖</nemeth> different subgroups of <nemeth class="inline">⠠⠥⠷⠼⠒⠢⠾</nemeth> can you list?</p>
          </article>
          <article class="exercise exercise-like" id="BFn">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Fyv">Again, using only the Sage commands described previously, explore the structure of <nemeth class="inline">⠠⠥⠷⠝⠾</nemeth> for various values of <i class="one-letter">n</i> and see if you can formulate an interesting conjecture about some basic property of this group. (Yes, this is a <em class="emphasis">very</em> open-ended question, but this is ultimately the real power of exploring mathematics with Sage.)</p>
          </article>
        </section>
      </section>
      <section class="chapter" id="AQc">
        <div class="centerpage"><span class="type">Chapter</span> <span class="codenumber">5</span> <span class="title">Permutation Groups</span></div>
        <section class="introduction" id="DZd">
          <p id="ogy">Permutation groups are central to the study of geometric symmetries and to Galois theory, the study of finding solutions of polynomial equations. They also provide abundant examples of nonabelian groups.</p>
          <p id="UnH">Let us recall for a moment the symmetries of the equilateral triangle <nemeth class="inline">⠫⠞⠠⠁⠠⠃⠠⠉</nemeth> from Chapter 3. The symmetries actually consist of permutations of the three vertices, where a <dfn class="terminology">permutation</dfn> of the set <nemeth class="inline">⠠⠎⠀⠨⠅⠀⠨⠷⠠⠁⠠⠀⠠⠃⠠⠀⠠⠉⠨⠾</nemeth> is a one-to-one and onto map <nemeth class="inline">⠨⠏⠒⠀⠠⠎⠀⠫⠕⠀⠠⠎</nemeth>. The three vertices have the following six permutations.</p>
          <div class="displaymath">
            <nemeth>⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠉⠀⠠⠁⠀⠠⠃⠠⠾⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠃⠀⠠⠉⠀⠠⠁⠠⠾⠀⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠁⠀⠠⠉⠀⠠⠃⠠⠾⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠉⠀⠠⠃⠀⠠⠁⠠⠾⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠃⠀⠠⠁⠀⠠⠉⠠⠾</nemeth>
          </div>
          <p id="AuQ">We have used the array</p>
          <div class="displaymath">
            <nemeth>⠠⠷⠠⠁⠀⠠⠃⠀⠠⠉⠠⠾⠀⠠⠷⠠⠃⠀⠠⠉⠀⠠⠁⠠⠾</nemeth>
          </div>
          <p data-braille="continuation">to denote the permutation that sends <i class="one-letter">A</i> to <i class="one-letter">B</i>, <i class="one-letter">B</i> to <i class="one-letter">C</i>, and <i class="one-letter">C</i> to <i class="one-letter">A</i>. That is,</p>
          <div class="displaymath">
            <nemeth>⠠⠁⠀⠀⠫⠳⠒⠒⠕⠀⠠⠃⠀⠠⠃⠀⠀⠫⠳⠒⠒⠕⠀⠠⠉⠀⠠⠉⠀⠀⠫⠳⠒⠒⠕⠀⠠⠁</nemeth>
          </div>
          <p data-braille="continuation">. The symmetries of a triangle form a group. In this chapter we will study groups of this type.</p>
        </section>
        <section class="section" id="Wyg">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">5.1</span> <span class="title">Definitions and Notation</span></div>
          <section class="introduction" id="kgm">
            <p id="gBZ">In general, the permutations of a set <i class="one-letter">X</i> form a group <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>. If <i class="one-letter">X</i> is a finite set, we can assume <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝⠨⠾</nemeth>. In this case we write <nemeth class="inline">⠠⠎⠰⠝</nemeth> instead of <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>.  The following theorem says that <nemeth class="inline">⠠⠎⠰⠝</nemeth> is a group. We call this group the <dfn class="terminology">symmetric group</dfn>  on <i class="one-letter">n</i> letters.</p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="GTJ">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.1</span>
                <span class="period">.</span>
              </h6>
              <p id="kBY">The symmetric group on <i class="one-letter">n</i> letters, <nemeth class="inline">⠠⠎⠰⠝</nemeth>, is a group with <nemeth class="inline">⠝⠯</nemeth> elements, where the binary operation is the composition of maps.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="cBN">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Kkb">The identity of <nemeth class="inline">⠠⠎⠰⠝</nemeth> is just the identity map that sends <nemeth class="inline">⠼⠂</nemeth> to <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth> to <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠄⠄⠄</nemeth>, <i class="one-letter">n</i> to <i class="one-letter">n</i>. If <nemeth class="inline">⠋⠒⠀⠠⠎⠰⠝⠐⠀⠫⠕⠀⠠⠎⠰⠝⠐</nemeth> is a permutation, then <nemeth class="inline">⠋⠘⠤⠼⠂</nemeth> exists, since <i class="one-letter">f</i> is one-to-one and onto; hence, every permutation has an inverse. Composition of maps is associative, which makes the group operation associative. We leave the proof that <nemeth class="inline">⠳⠠⠎⠰⠝⠐⠳⠀⠨⠅⠀⠝⠯</nemeth> as an exercise.</p>
            </article>
            <p id="MJi">A subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth> is called a <dfn class="terminology">permutation group</dfn>. </p>
            <article class="example example-like" data-braille="example-like" id="zpk">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.2</span>
                <span class="period">.</span>
              </h6>
              <p id="Gkc">Consider the subgroup <i class="one-letter">G</i> of <nemeth class="inline">⠠⠎⠢</nemeth> consisting of the identity permutation <nemeth class="inline">⠊⠙</nemeth> and the permutations</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠂⠀⠆⠀⠒⠀⠢⠀⠲⠠⠾⠀⠨⠞⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠒⠀⠆⠀⠂⠀⠲⠀⠢⠠⠾⠀⠨⠍⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠒⠀⠆⠀⠂⠀⠢⠀⠲⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. The following table tells us how to multiply elements in the permutation group <i class="one-letter">G</i>.</p>
              <div class="sidebyside">
                <div class="sbsrow" style="margin-left:0%;margin-right:0%;">
                  <div class="sbspanel" style="width:100%;justify-content:flex-start;">
                    <div class="displaymath">
                      <nemeth>⠘⠨⠡⠀⠊⠙⠀⠨⠎⠀⠨⠞⠀⠨⠍⠀⠊⠙⠀⠊⠙⠀⠨⠎⠀⠨⠞⠀⠨⠍⠀⠨⠎⠀⠨⠎⠀⠊⠙⠀⠨⠍⠀⠨⠞⠀⠨⠞⠀⠨⠞⠀⠨⠍⠀⠊⠙⠀⠨⠎⠀⠨⠍⠀⠨⠍⠀⠨⠞⠀⠨⠎⠀⠊⠙</nemeth>
                    </div>
                  </div>
                </div>
              </div>
            </article>
            <article class="remark remark-like" data-braille="remark-like" id="rKL">
              <h6 class="heading">
                <span class="type">Remark</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.3</span>
                <span class="period">.</span>
              </h6>
              <p id="bSg">Though it is natural to multiply elements in a group from left to right, functions are composed from right to left. Let <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> be permutations on a set <i class="one-letter">X</i>. To compose <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> as functions, we calculate <nemeth class="inline">⠷⠎⠘⠨⠡⠞⠾⠷⠭⠾⠀⠨⠅⠀⠎⠷⠞⠷⠭⠾⠾</nemeth>. That is, we do <nemeth class="inline">⠨⠞</nemeth> first, then <nemeth class="inline">⠨⠎</nemeth>. There are several ways to approach this inconsistency. <em class="emphasis">We will adopt the convention of multiplying permutations right to left. To compute <nemeth class="inline">⠨⠎⠨⠞</nemeth>, do <nemeth class="inline">⠨⠞</nemeth> first and then <nemeth class="inline">⠨⠎</nemeth>.</em> That is, by <nemeth class="inline">⠨⠎⠞⠷⠭⠾</nemeth> we mean <nemeth class="inline">⠎⠷⠞⠷⠭⠾⠾</nemeth>. (Another way of solving this problem would be to write functions on the right; that is, instead of writing <nemeth class="inline">⠎⠷⠭⠾</nemeth>, we could write <nemeth class="inline">⠷⠭⠾⠨⠎</nemeth>. We could also multiply permutations left to right to agree with the usual way of multiplying elements in a group. Certainly all of these methods have been used.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="fwt">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.4</span>
                <span class="period">.</span>
              </h6>
              <p id="Syu">Permutation multiplication is not usually commutative. Let</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠠⠾⠀⠠⠷⠲⠀⠂⠀⠆⠀⠒⠠⠾⠀⠨⠞⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠠⠾⠀⠠⠷⠆⠀⠂⠀⠲⠀⠒⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Then</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠨⠞⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠠⠾⠀⠠⠷⠂⠀⠲⠀⠒⠀⠆⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">, but</p>
              <div class="displaymath">
                <nemeth>⠨⠞⠨⠎⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠠⠾⠀⠠⠷⠒⠀⠆⠀⠂⠀⠲⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
          </section>
          <section class="subsection" id="gXl">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.1.1</span> <span class="title">Cycle Notation</span></div>
            <p id="bwH">The notation that we have used to represent permutations up to this point is cumbersome, to say the least. To work effectively with permutation groups, we need a more streamlined method of writing down and manipulating permutations.</p>
            <p id="HDQ">A permutation <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠠⠭</nemeth> is a <dfn class="terminology">cycle of length</dfn> <i class="one-letter">k</i> if there exist elements <nemeth class="inline">⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠀⠈⠑⠀⠠⠭</nemeth> such that</p>
            <div class="displaymath">
              <nemeth>⠎⠷⠁⠂⠾⠀⠀⠨⠅⠀⠁⠆⠀⠎⠷⠁⠆⠾⠀⠀⠨⠅⠀⠁⠒⠀⠀⠀⠣⠄⠄⠄⠀⠎⠷⠁⠰⠅⠐⠾⠀⠀⠨⠅⠀⠁⠂</nemeth>
            </div>
            <p data-braille="continuation">and <nemeth class="inline">⠎⠷⠭⠾⠀⠨⠅⠀⠭</nemeth> for all other elements <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>. We will write <nemeth class="inline">⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> to denote the cycle <nemeth class="inline">⠨⠎</nemeth>.  Cycles are the building blocks of all permutations.</p>
            <article class="example example-like" data-braille="example-like" id="bhZ">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.5</span>
                <span class="period">.</span>
              </h6>
              <p id="yFD">The permutation</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠀⠶⠠⠾⠀⠠⠷⠖⠀⠒⠀⠢⠀⠂⠀⠲⠀⠆⠀⠶⠠⠾⠀⠨⠅⠀⠷⠼⠂⠖⠆⠒⠢⠲⠾</nemeth>
              </div>
              <p data-braille="continuation">is a cycle of length <nemeth class="inline">⠼⠖</nemeth>, whereas</p>
              <div class="displaymath">
                <nemeth>⠨⠞⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠠⠾⠀⠠⠷⠂⠀⠲⠀⠆⠀⠒⠀⠢⠀⠖⠠⠾⠀⠨⠅⠀⠷⠼⠆⠲⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">is a cycle of length <nemeth class="inline">⠼⠒</nemeth>.</p>
              <p id="eMM">Not every permutation is a cycle. Consider the permutation</p>
              <div class="displaymath">
                <nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠠⠾⠀⠠⠷⠆⠀⠲⠀⠂⠀⠒⠀⠖⠀⠢⠠⠾⠀⠨⠅⠀⠷⠼⠂⠆⠲⠒⠾⠷⠢⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">. This permutation actually contains a cycle of length 2 and a cycle of length <nemeth class="inline">⠼⠲</nemeth>.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Hpi">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.6</span>
                <span class="period">.</span>
              </h6>
              <p id="KTV">It is very easy to compute products of cycles. Suppose that</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠷⠼⠂⠒⠢⠆⠾⠁⠝⠙⠨⠞⠀⠨⠅⠀⠷⠼⠆⠢⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">. If we think of <nemeth class="inline">⠨⠎</nemeth> as</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠀⠫⠳⠒⠒⠕⠀⠼⠒⠠⠀⠼⠒⠀⠫⠳⠒⠒⠕⠀⠼⠢⠠⠀⠼⠢⠀⠫⠳⠒⠒⠕⠀⠼⠆⠠⠀⠼⠆⠀⠫⠳⠒⠒⠕⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">, and <nemeth class="inline">⠨⠞</nemeth> as</p>
              <div class="displaymath">
                <nemeth>⠼⠆⠀⠫⠳⠒⠒⠕⠀⠼⠢⠠⠀⠼⠢⠀⠫⠳⠒⠒⠕⠀⠼⠖⠠⠀⠼⠖⠀⠫⠳⠒⠒⠕⠀⠼⠆</nemeth>
              </div>
              <p data-braille="continuation">, then for <nemeth class="inline">⠨⠎⠨⠞</nemeth> remembering that we apply <nemeth class="inline">⠨⠞</nemeth> first and then <nemeth class="inline">⠨⠎</nemeth>, it must be the case that</p>
              <div class="displaymath">
                <nemeth>⠼⠂⠀⠫⠳⠒⠒⠕⠀⠼⠒⠠⠀⠼⠒⠀⠫⠳⠒⠒⠕⠀⠼⠢⠠⠀⠼⠢⠀⠫⠳⠒⠒⠕⠀⠼⠖⠠⠀⠼⠖⠀⠫⠳⠒⠒⠕⠀⠼⠆⠀⠫⠳⠒⠒⠕⠀⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">, or <nemeth class="inline">⠨⠎⠨⠞⠀⠨⠅⠀⠷⠼⠂⠒⠢⠖⠾</nemeth>. If <nemeth class="inline">⠨⠍⠀⠨⠅⠀⠷⠼⠂⠖⠒⠲⠾</nemeth>, then <nemeth class="inline">⠨⠎⠨⠍⠀⠨⠅⠀⠷⠼⠂⠖⠢⠆⠾⠷⠒⠲⠾</nemeth>.</p>
            </article>
            <p id="nKZ">Two cycles in <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>, <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> and <nemeth class="inline">⠨⠞⠀⠨⠅⠀⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠇⠐⠾</nemeth>, are <dfn class="terminology">disjoint</dfn>  if <nemeth class="inline">⠁⠰⠊⠐⠀⠌⠨⠅⠀⠃⠰⠚</nemeth> for all <i class="one-letter">i</i> and <i class="one-letter">j</i>.</p>
            <article class="example example-like" data-braille="example-like" id="nwr">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.7</span>
                <span class="period">.</span>
              </h6>
              <p id="rbe">The cycles <nemeth class="inline">⠷⠼⠂⠒⠢⠾</nemeth> and <nemeth class="inline">⠷⠼⠆⠶⠾</nemeth> are disjoint; however, the cycles <nemeth class="inline">⠷⠼⠂⠒⠢⠾</nemeth> and <nemeth class="inline">⠷⠼⠒⠲⠶⠾</nemeth> are not. Calculating their products, we find that</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠂⠒⠢⠾⠷⠆⠶⠾⠀⠀⠨⠅⠀⠷⠼⠂⠒⠢⠾⠷⠆⠶⠾⠀⠷⠂⠒⠢⠾⠷⠒⠲⠶⠾⠀⠀⠨⠅⠀⠷⠼⠂⠒⠲⠶⠢⠾</nemeth>
              </div>
              <p data-braille="continuation">. The product of two cycles that are not disjoint may reduce to something less complicated; the product of disjoint cycles cannot be simplified.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="vaQ">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.8</span>
                <span class="period">.</span>
              </h6>
              <p id="BAj">Let <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> be two disjoint cycles in <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth>. Then <nemeth class="inline">⠨⠎⠨⠞⠀⠨⠅⠀⠨⠞⠨⠎</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="NsP">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="qrk">Let <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> and <nemeth class="inline">⠨⠞⠀⠨⠅⠀⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠇⠐⠾</nemeth>. We must show that <nemeth class="inline">⠎⠞⠷⠭⠾⠀⠨⠅⠀⠞⠎⠷⠭⠾</nemeth> for all <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>. If <i class="one-letter">x</i> is neither in <nemeth class="inline">⠨⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠨⠾</nemeth> nor <nemeth class="inline">⠨⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠇⠐⠨⠾</nemeth>, then both <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> fix <i class="one-letter">x</i>. That is, <nemeth class="inline">⠎⠷⠭⠾⠀⠨⠅⠀⠭</nemeth> and <nemeth class="inline">⠞⠷⠭⠾⠀⠨⠅⠀⠭</nemeth>. Hence,</p>
              <div class="displaymath">
                <nemeth>⠎⠞⠷⠭⠾⠀⠨⠅⠀⠎⠷⠞⠷⠭⠾⠾⠀⠨⠅⠀⠎⠷⠭⠾⠀⠨⠅⠀⠭⠀⠨⠅⠀⠞⠷⠭⠾⠀⠨⠅⠀⠞⠷⠎⠷⠭⠾⠾⠀⠨⠅⠀⠞⠎⠷⠭⠾</nemeth>
              </div>
              <p data-braille="continuation">. <em class="emphasis">Do not forget that we are multiplying permutations right to left, which is the opposite of the order in which we usually multiply group elements.</em> Now suppose that <nemeth class="inline">⠭⠀⠈⠑⠀⠨⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠨⠾</nemeth>. Then <nemeth class="inline">⠎⠷⠁⠰⠊⠐⠾⠀⠨⠅⠀⠁⠰⠷⠊⠍⠕⠙⠀⠅⠾⠬⠂</nemeth>; that is,</p>
              <div class="displaymath">
                <nemeth>⠁⠂⠀⠀⠫⠳⠒⠒⠕⠀⠁⠆⠀⠁⠆⠀⠀⠫⠳⠒⠒⠕⠀⠁⠒⠀⠀⠀⠣⠄⠄⠄⠀⠁⠰⠅⠤⠂⠀⠀⠫⠳⠒⠒⠕⠀⠁⠰⠅⠐⠀⠁⠰⠅⠀⠀⠫⠳⠒⠒⠕⠀⠁⠂</nemeth>
              </div>
              <p data-braille="continuation">. However, <nemeth class="inline">⠞⠷⠁⠰⠊⠐⠾⠀⠨⠅⠀⠁⠰⠊</nemeth> since <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> are disjoint. Therefore,</p>
              <div class="displaymath">
                <nemeth>⠎⠞⠷⠁⠰⠊⠐⠾⠀⠀⠨⠅⠀⠎⠷⠞⠷⠁⠰⠊⠐⠾⠾⠀⠀⠀⠀⠨⠅⠀⠎⠷⠁⠰⠊⠐⠾⠀⠀⠀⠀⠨⠅⠀⠁⠰⠷⠊⠍⠕⠙⠀⠅⠾⠬⠂⠐⠀⠀⠀⠀⠨⠅⠀⠞⠷⠁⠰⠷⠊⠍⠕⠙⠀⠅⠾⠬⠂⠐⠾⠀⠀⠀⠀⠨⠅⠀⠞⠷⠎⠷⠁⠰⠊⠐⠾⠾⠀⠀⠀⠀⠨⠅⠀⠞⠎⠷⠁⠰⠊⠐⠾</nemeth>
              </div>
              <p data-braille="continuation">. Similarly, if <nemeth class="inline">⠭⠀⠈⠑⠀⠨⠷⠃⠂⠠⠀⠃⠆⠠⠀⠄⠄⠄⠀⠠⠀⠃⠰⠇⠐⠨⠾</nemeth>, then <nemeth class="inline">⠨⠎</nemeth> and <nemeth class="inline">⠨⠞</nemeth> also commute.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="OTH">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.9</span>
                <span class="period">.</span>
              </h6>
              <p id="QJh">Every permutation in <nemeth class="inline">⠠⠎⠰⠝</nemeth> can be written as the product of disjoint cycles.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="IIW">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Wyt">We can assume that <nemeth class="inline">⠠⠭⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝⠨⠾</nemeth>. If <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> and we define <nemeth class="inline">⠠⠭⠂</nemeth> to be <nemeth class="inline">⠨⠷⠎⠷⠼⠂⠾⠠⠀⠎⠘⠆⠐⠷⠼⠂⠾⠠⠀⠄⠄⠄⠨⠾</nemeth>, then the set <nemeth class="inline">⠠⠭⠂</nemeth> is finite since <i class="one-letter">X</i> is finite. Now let <i class="one-letter">i</i> be the first integer in <i class="one-letter">X</i> that is not in <nemeth class="inline">⠠⠭⠂</nemeth> and define <nemeth class="inline">⠠⠭⠆</nemeth> by <nemeth class="inline">⠨⠷⠎⠷⠊⠾⠠⠀⠎⠘⠆⠐⠷⠊⠾⠠⠀⠄⠄⠄⠨⠾</nemeth>. Again, <nemeth class="inline">⠠⠭⠆</nemeth> is a finite set. Continuing in this manner, we can define finite disjoint sets <nemeth class="inline">⠠⠭⠒⠠⠀⠠⠭⠲⠠⠀⠄⠄⠄</nemeth>. Since <i class="one-letter">X</i> is a finite set, we are guaranteed that this process will end and there will be only a finite number of these sets, say <i class="one-letter">r</i>. If <nemeth class="inline">⠨⠎⠰⠊</nemeth> is the cycle defined by</p>
              <div class="displaymath">
                <nemeth>⠎⠰⠊⠐⠷⠭⠾⠀⠨⠅⠀⠀⠨⠅⠀⠨⠠⠷⠎⠷⠭⠾⠀⠭⠀⠈⠑⠀⠠⠭⠰⠊⠐⠀⠨⠠⠷⠭⠀⠭⠀⠌⠈⠑⠀⠠⠭⠰⠊⠐</nemeth>
              </div>
              <p data-braille="continuation">, then <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠨⠎⠂⠨⠎⠆⠀⠄⠄⠄⠀⠨⠎⠰⠗⠐</nemeth>. Since the sets <nemeth class="inline">⠠⠭⠂⠠⠀⠠⠭⠆⠠⠀⠄⠄⠄⠀⠠⠀⠠⠭⠰⠗⠐</nemeth> are disjoint, the cycles <nemeth class="inline">⠨⠎⠂⠠⠀⠨⠎⠆⠠⠀⠄⠄⠄⠀⠠⠀⠨⠎⠰⠗⠐</nemeth> must also be disjoint.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="TDA">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.10</span>
                <span class="period">.</span>
              </h6>
              <p id="Xin">Let</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠠⠾⠀⠠⠷⠖⠀⠲⠀⠒⠀⠂⠀⠢⠀⠆⠠⠾⠀⠨⠞⠀⠀⠨⠅⠀⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠀⠖⠠⠾⠀⠠⠷⠒⠀⠆⠀⠂⠀⠢⠀⠖⠀⠲⠠⠾</nemeth>
              </div>
              <p data-braille="continuation">. Using cycle notation, we can write</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠀⠨⠅⠀⠷⠼⠂⠖⠆⠲⠾⠀⠨⠞⠀⠀⠨⠅⠀⠷⠼⠂⠒⠾⠷⠲⠢⠖⠾⠀⠨⠎⠨⠞⠀⠀⠨⠅⠀⠷⠼⠂⠒⠖⠾⠷⠆⠲⠢⠾⠀⠨⠞⠨⠎⠀⠀⠨⠅⠀⠷⠼⠂⠲⠒⠾⠷⠆⠢⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="remark remark-like" data-braille="remark-like" id="zKJ">
              <h6 class="heading">
                <span class="type">Remark</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.11</span>
                <span class="period">.</span>
              </h6>
              <p id="HZp">From this point forward we will find it convenient to use cycle notation to represent permutations. When using cycle notation, we often denote the identity permutation by <nemeth class="inline">⠷⠼⠂⠾</nemeth>.</p>
            </article>
          </section>
          <section class="subsection" id="Neu">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.1.2</span> <span class="title">Transpositions</span></div>
            <p id="TSi">The simplest permutation is a cycle of length <nemeth class="inline">⠼⠆</nemeth>. Such cycles are called <dfn class="terminology">transpositions</dfn>.  Since</p>
            <div class="displaymath">
              <nemeth>⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠀⠨⠅⠀⠷⠁⠂⠁⠰⠝⠐⠾⠷⠁⠂⠁⠰⠝⠤⠂⠐⠾⠀⠄⠄⠄⠀⠷⠁⠂⠁⠒⠾⠷⠁⠂⠁⠆⠾</nemeth>
            </div>
            <p data-braille="continuation">, any cycle can be written as the product of transpositions, leading to the following proposition.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="LZb">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.12</span>
                <span class="period">.</span>
              </h6>
              <p id="hHs">Any permutation of a finite set containing at least two elements can be written as the product of transpositions.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="Ynt">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.13</span>
                <span class="period">.</span>
              </h6>
              <p id="Dpw">Consider the permutation</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠂⠖⠾⠷⠆⠢⠒⠾⠀⠨⠅⠀⠷⠼⠂⠖⠾⠷⠆⠒⠾⠷⠆⠢⠾⠀⠨⠅⠀⠷⠼⠂⠖⠾⠷⠲⠢⠾⠷⠆⠒⠾⠷⠲⠢⠾⠷⠆⠢⠾</nemeth>
              </div>
              <p data-braille="continuation">. As we can see, there is no unique way to represent permutation as the product of transpositions. For instance, we can write the identity permutation as <nemeth class="inline">⠷⠼⠂⠆⠾⠷⠂⠆⠾</nemeth>, as <nemeth class="inline">⠷⠼⠂⠒⠾⠷⠆⠲⠾⠷⠂⠒⠾⠷⠆⠲⠾</nemeth>, and in many other ways. However, as it turns out, no permutation can be written as the product of both an even number of transpositions and an odd number of transpositions. For instance, we could represent the permutation <nemeth class="inline">⠷⠼⠂⠖⠾</nemeth> by</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠆⠒⠾⠷⠂⠖⠾⠷⠆⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">or by</p>
              <div class="displaymath">
                <nemeth>⠷⠼⠒⠢⠾⠷⠂⠖⠾⠷⠂⠒⠾⠷⠂⠖⠾⠷⠂⠒⠾⠷⠒⠢⠾⠷⠢⠖⠾</nemeth>
              </div>
              <p data-braille="continuation">, but <nemeth class="inline">⠷⠼⠂⠖⠾</nemeth> will always be the product of an odd number of transpositions.</p>
            </article>
            <article class="lemma theorem-like" data-braille="theorem-like" id="sgk">
              <h6 class="heading">
                <span class="type">Lemma</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.14</span>
                <span class="period">.</span>
              </h6>
              <p id="acT">If the identity is written as the product of <i class="one-letter">r</i> transpositions,</p>
              <div class="displaymath">
                <nemeth>⠊⠙⠀⠨⠅⠀⠨⠞⠂⠨⠞⠆⠀⠄⠄⠄⠀⠨⠞⠰⠗⠐</nemeth>
              </div>
              <p data-braille="continuation">, then <i class="one-letter">r</i> is an even number.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="ZHh">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="CFC">We will employ induction  on <i class="one-letter">r</i>. A transposition cannot be the identity; hence, <nemeth class="inline">⠗⠀⠨⠂⠀⠼⠂</nemeth>. If <nemeth class="inline">⠗⠀⠨⠅⠀⠼⠆</nemeth>, then we are done. Suppose that <nemeth class="inline">⠗⠀⠨⠂⠀⠼⠆</nemeth>. In this case the product of the last two transpositions, <nemeth class="inline">⠨⠞⠰⠗⠤⠂⠐⠨⠞⠰⠗</nemeth>, must be one of the following cases:</p>
              <div class="displaymath">
                <nemeth>⠷⠁⠃⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠊⠙⠀⠷⠃⠉⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠷⠁⠉⠾⠷⠃⠉⠾⠀⠷⠉⠙⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠷⠁⠃⠾⠷⠉⠙⠾⠀⠷⠁⠉⠾⠷⠁⠃⠾⠀⠀⠨⠅⠀⠷⠁⠃⠾⠷⠃⠉⠾</nemeth>
              </div>
              <p data-braille="continuation">, where <i class="one-letter">a</i>, <i class="one-letter">b</i>, <i class="one-letter">c</i>, and <i class="one-letter">d</i> are distinct.</p>
              <p id="iML">The first equation simply says that a transposition is its own inverse. If this case occurs, delete <nemeth class="inline">⠨⠞⠰⠗⠤⠂⠐⠨⠞⠰⠗</nemeth> from the product to obtain</p>
              <div class="displaymath">
                <nemeth>⠊⠙⠀⠨⠅⠀⠨⠞⠂⠨⠞⠆⠀⠄⠄⠄⠀⠨⠞⠰⠗⠤⠒⠐⠨⠞⠰⠗⠤⠆⠐</nemeth>
              </div>
              <p data-braille="continuation">. By induction <nemeth class="inline">⠗⠤⠆</nemeth> is even; hence, <i class="one-letter">r</i> must be even.</p>
              <p id="OTU">In each of the other three cases, we can replace <nemeth class="inline">⠨⠞⠰⠗⠤⠂⠐⠨⠞⠰⠗</nemeth> with the right-hand side of the corresponding equation to obtain a new product of <i class="one-letter">r</i> transpositions for the identity. In this new product the last occurrence of <i class="one-letter">a</i> will be in the next-to-the-last transposition. We can continue this process with <nemeth class="inline">⠨⠞⠰⠗⠤⠆⠐⠨⠞⠰⠗⠤⠂</nemeth> to obtain either a product of <nemeth class="inline">⠗⠤⠆</nemeth> transpositions or a new product of <i class="one-letter">r</i> transpositions where the last occurrence of <i class="one-letter">a</i> is in <nemeth class="inline">⠨⠞⠰⠗⠤⠆</nemeth>. If the identity is the product of <nemeth class="inline">⠗⠤⠆</nemeth> transpositions, then again we are done, by our induction hypothesis; otherwise, we will repeat the procedure with <nemeth class="inline">⠨⠞⠰⠗⠤⠒⠐⠨⠞⠰⠗⠤⠆</nemeth>.</p>
              <p id="vbd">At some point either we will have two adjacent, identical transpositions canceling each other out or <i class="one-letter">a</i> will be shuffled so that it will appear only in the first transposition. However, the latter case cannot occur, because the identity would not fix <i class="one-letter">a</i> in this instance. Therefore, the identity permutation must be the product of <nemeth class="inline">⠗⠤⠆</nemeth> transpositions and, again by our induction hypothesis, we are done.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="fRS">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.15</span>
                <span class="period">.</span>
              </h6>
              <p id="wQq">If a permutation <nemeth class="inline">⠨⠎</nemeth> can be expressed as the product of an even number of transpositions, then any other product of transpositions equaling <nemeth class="inline">⠨⠎</nemeth> must also contain an even number of transpositions. Similarly, if <nemeth class="inline">⠨⠎</nemeth> can be expressed as the product of an odd number of transpositions, then any other product of transpositions equaling <nemeth class="inline">⠨⠎</nemeth> must also contain an odd number of transpositions.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="oQf">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="bim">Suppose that</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠨⠎⠂⠨⠎⠆⠀⠄⠄⠄⠀⠨⠎⠰⠍⠐⠀⠨⠅⠀⠨⠞⠂⠨⠞⠆⠀⠄⠄⠄⠀⠨⠞⠰⠝⠐</nemeth>
              </div>
              <p data-braille="continuation">, where <i class="one-letter">m</i> is even. We must show that <i class="one-letter">n</i> is also an even number. The inverse of <nemeth class="inline">⠨⠎</nemeth> is <nemeth class="inline">⠨⠎⠰⠍⠐⠀⠄⠄⠄⠀⠨⠎⠂</nemeth>. Since</p>
              <div class="displaymath">
                <nemeth>⠊⠙⠀⠨⠅⠀⠨⠎⠨⠎⠰⠍⠐⠀⠄⠄⠄⠀⠨⠎⠂⠀⠨⠅⠀⠨⠞⠂⠀⠄⠄⠄⠀⠨⠞⠰⠝⠐⠨⠎⠰⠍⠐⠀⠄⠄⠄⠀⠨⠎⠂</nemeth>
              </div>
              <p data-braille="continuation">, <i class="one-letter">n</i> must be even by Lemma 5.1.14. The proof for the case in which <nemeth class="inline">⠨⠎</nemeth> can be expressed as an odd number of transpositions is left as an exercise.</p>
            </article>
            <p id="zZr">In light of Theorem 5.1.15, we define a permutation to be <dfn class="terminology">even</dfn>  if it can be expressed as an even number of transpositions and <dfn class="terminology">odd</dfn>  if it can be expressed as an odd number of transpositions.</p>
          </section>
          <section class="subsection" id="tlD">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.1.3</span> <span class="title">The Alternating Groups</span></div>
            <p id="ggA">One of the most important subgroups of <nemeth class="inline">⠠⠎⠰⠝</nemeth> is the set of all even permutations, <nemeth class="inline">⠠⠁⠰⠝</nemeth>.  The group <nemeth class="inline">⠠⠁⠰⠝</nemeth> is called the <dfn class="terminology">alternating group on <i class="one-letter">n</i> letters</dfn>. </p>
            <article class="theorem theorem-like" data-braille="theorem-like" id="EuC">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.16</span>
                <span class="period">.</span>
              </h6>
              <p id="cXz">The set <nemeth class="inline">⠠⠁⠰⠝</nemeth> is a subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="UXo">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="Hpv">Since the product of two even permutations must also be an even permutation, <nemeth class="inline">⠠⠁⠰⠝</nemeth> is closed. The identity is an even permutation and therefore is in <nemeth class="inline">⠠⠁⠰⠝</nemeth>. If <nemeth class="inline">⠨⠎</nemeth> is an even permutation, then</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠀⠨⠅⠀⠨⠎⠂⠨⠎⠆⠀⠄⠄⠄⠀⠨⠎⠰⠗⠐</nemeth>
              </div>
              <p data-braille="continuation">, where <nemeth class="inline">⠨⠎⠰⠊</nemeth> is a transposition and <i class="one-letter">r</i> is even. Since the inverse of any transposition is itself,</p>
              <div class="displaymath">
                <nemeth>⠨⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠎⠰⠗⠐⠨⠎⠰⠗⠤⠂⠐⠀⠄⠄⠄⠀⠨⠎⠂</nemeth>
              </div>
              <p data-braille="continuation">is also in <nemeth class="inline">⠠⠁⠰⠝</nemeth>.</p>
            </article>
            <article class="proposition theorem-like" data-braille="theorem-like" id="kBL">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.17</span>
                <span class="period">.</span>
              </h6>
              <p id="NOB">The number of even permutations in <nemeth class="inline">⠠⠎⠰⠝</nemeth>, <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>, is equal to the number of odd permutations; hence, the order of <nemeth class="inline">⠠⠁⠰⠝</nemeth> is <nemeth class="inline">⠝⠖⠀⠸⠌⠼⠆</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="tzY">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="nwE">Let <nemeth class="inline">⠠⠁⠰⠝</nemeth> be the set of even permutations in <nemeth class="inline">⠠⠎⠰⠝</nemeth> and <nemeth class="inline">⠠⠃⠰⠝</nemeth> be the set of odd permutations. If we can show that there is a bijection between these sets, they must contain the same number of elements. Fix a transposition <nemeth class="inline">⠨⠎</nemeth> in <nemeth class="inline">⠠⠎⠰⠝</nemeth>. Since <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠆</nemeth>, such a <nemeth class="inline">⠨⠎</nemeth> exists. Define</p>
              <div class="displaymath">
                <nemeth>⠨⠇⠰⠨⠎⠐⠒⠀⠠⠁⠰⠝⠐⠀⠫⠕⠀⠠⠃⠰⠝⠐</nemeth>
              </div>
              <p data-braille="continuation">by</p>
              <div class="displaymath">
                <nemeth>⠇⠰⠨⠎⠐⠷⠨⠞⠾⠀⠨⠅⠀⠨⠎⠨⠞</nemeth>
              </div>
              <p data-braille="continuation">. Suppose that <nemeth class="inline">⠇⠰⠨⠎⠐⠷⠨⠞⠾⠀⠨⠅⠀⠇⠰⠨⠎⠐⠷⠨⠍⠾</nemeth>. Then <nemeth class="inline">⠨⠎⠨⠞⠀⠨⠅⠀⠨⠎⠨⠍</nemeth> and so</p>
              <div class="displaymath">
                <nemeth>⠨⠞⠀⠨⠅⠀⠨⠎⠘⠤⠼⠂⠐⠨⠎⠨⠞⠀⠨⠅⠀⠨⠎⠘⠤⠼⠂⠐⠨⠎⠨⠍⠀⠨⠅⠀⠨⠍</nemeth>
              </div>
              <p data-braille="continuation">. Therefore, <nemeth class="inline">⠨⠇⠰⠨⠎</nemeth> is one-to-one. We will leave the proof that <nemeth class="inline">⠨⠇⠰⠨⠎</nemeth> is surjective to the reader.</p>
            </article>
            <article class="example example-like" data-braille="example-like" id="QIU">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.1.18</span>
                <span class="period">.</span>
              </h6>
              <p id="jwF">The group <nemeth class="inline">⠠⠁⠲</nemeth> is the subgroup of <nemeth class="inline">⠠⠎⠲</nemeth> consisting of even permutations. There are twelve elements in  <nemeth class="inline">⠠⠁⠲</nemeth>:</p>
              <div class="displaymath">
                <nemeth>⠀⠀⠷⠂⠾⠀⠀⠀⠷⠂⠆⠾⠷⠒⠲⠾⠀⠀⠀⠷⠂⠒⠾⠷⠆⠲⠾⠀⠀⠀⠷⠂⠲⠾⠷⠆⠒⠾⠀⠀⠀⠷⠂⠆⠒⠾⠀⠀⠀⠷⠂⠒⠆⠾⠀⠀⠀⠷⠂⠆⠲⠾⠀⠀⠀⠷⠂⠲⠆⠾⠀⠀⠀⠷⠂⠒⠲⠾⠀⠀⠀⠷⠂⠲⠒⠾⠀⠀⠀⠷⠆⠒⠲⠾⠀⠀⠀⠷⠆⠲⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">. One of the end-of-chapter exercises will be to write down all the subgroups of <nemeth class="inline">⠠⠁⠲</nemeth>. You will find that there is no subgroup of order 6. Does this surprise you?</p>
            </article>
          </section>
          <section class="subsection" id="ZsM">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.1.4</span> <span class="title">Historical Note</span></div>
            <p id="MnJ">Lagrange  first thought of permutations as functions from a set to itself, but it was Cauchy who developed the basic theorems and notation for permutations. He was the first to use cycle notation. Augustin-Louis Cauchy  (1789–1857) was born in Paris at the height of the French Revolution. His family soon left Paris for the village of Arcueil to escape the Reign of Terror. One of the family's neighbors there was Pierre-Simon Laplace  (1749–1827), who encouraged him to seek a career in mathematics. Cauchy began his career as a mathematician by solving a problem in geometry given to him by Lagrange. Cauchy wrote over 800 papers on such diverse topics as differential equations, finite groups, applied mathematics, and complex analysis. He was one of the mathematicians responsible for making calculus rigorous. Perhaps more theorems and concepts in mathematics have the name Cauchy attached to them than that of any other mathematician.</p>
          </section>
        </section>
        <section class="section" id="CFp">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">5.2</span> <span class="title">Dihedral Groups</span></div>
          <section class="introduction" id="Qnv">
            <p id="sQr">Another special type of permutation group is the dihedral group. Recall the symmetry group of an equilateral triangle in Chapter 3. Such groups consist of the rigid motions of a regular <i class="one-letter">n</i>-sided polygon or <i class="one-letter">n</i>-gon. For <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠒⠠⠀⠼⠲⠠⠀⠄⠄⠄</nemeth>, we define the <dfn class="terminology">nth dihedral group</dfn>  to be the group of rigid motions of a regular <i class="one-letter">n</i>-gon. We will denote this group by <nemeth class="inline">⠠⠙⠰⠝</nemeth>.  We can number the vertices of a regular <i class="one-letter">n</i>-gon by <nemeth class="inline">⠼⠂⠠⠀⠼⠆⠠⠀⠄⠄⠄⠀⠠⠀⠝</nemeth> (Figure 5.2.1). Notice that there are exactly <i class="one-letter">n</i> choices to replace the first vertex. If we replace the first vertex by <i class="one-letter">k</i>, then the second vertex must be replaced either by vertex <nemeth class="inline">⠅⠬⠂</nemeth> or by vertex <nemeth class="inline">⠅⠤⠂</nemeth>; hence, there are <nemeth class="inline">⠼⠆⠝</nemeth> possible rigid motions of the <i class="one-letter">n</i>-gon. We summarize these results in the following theorem.</p>
            <figure class="figure figure-like" data-braille="figure-like" id="YXA">
              <div data-braille="image">
                <p>Image: An n-gon with vertex 1 at the top, followed by 2, 3, 4, ..., n - 1, n.</p>
                <p>ID: permute-ngon</p>
              </div>
              <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.1<span class="period">.</span></span><span class="space"> </span>A regular <i class="one-letter">n</i>-gon</figcaption>
            </figure>
            <article class="theorem theorem-like" data-braille="theorem-like" id="naS">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.2</span>
                <span class="period">.</span>
              </h6>
              <p id="JeI">The dihedral group, <nemeth class="inline">⠠⠙⠰⠝</nemeth>, is a subgroup of <nemeth class="inline">⠠⠎⠰⠝</nemeth> of order <nemeth class="inline">⠼⠆⠝</nemeth>.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="Tib">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.3</span>
                <span class="period">.</span>
              </h6>
              <p id="plR">The group <nemeth class="inline">⠠⠙⠰⠝</nemeth>, <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>, consists of all products of the two elements <i class="one-letter">r</i> and <i class="one-letter">s</i>, satisfying the relations</p>
              <div class="displaymath">
                <nemeth>⠗⠘⠝⠀⠀⠨⠅⠀⠼⠂⠀⠎⠘⠆⠀⠀⠨⠅⠀⠼⠂⠀⠎⠗⠎⠀⠀⠨⠅⠀⠗⠘⠤⠼⠂</nemeth>
              </div>
              <p data-braille="continuation">.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="Bex">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="TDN">The possible motions of a regular <i class="one-letter">n</i>-gon are either reflections or rotations (Figure 5.2.4). There are exactly <i class="one-letter">n</i> possible rotations:</p>
              <div class="displaymath">
                <nemeth>⠊⠙⠠⠀⠹⠒⠖⠴⠘⠘⠨⠡⠐⠌⠝⠼⠠⠀⠼⠆⠡⠹⠒⠖⠴⠘⠘⠨⠡⠐⠌⠝⠼⠠⠀⠄⠄⠄⠀⠠⠀⠷⠝⠤⠂⠾⠡⠹⠒⠖⠴⠘⠘⠨⠡⠐⠌⠝⠼</nemeth>
              </div>
              <p data-braille="continuation">. We will denote the rotation <nemeth class="inline">⠼⠒⠖⠴⠘⠘⠨⠡⠐⠸⠌⠝</nemeth> by <i class="one-letter">r</i>. The rotation <i class="one-letter">r</i> generates all  of the other rotations. That is,</p>
              <div class="displaymath">
                <nemeth>⠗⠘⠅⠐⠀⠨⠅⠀⠅⠡⠹⠒⠖⠴⠘⠘⠨⠡⠐⠌⠝⠼</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="fSf">
                <div data-braille="image">
                  <p>Image: Rotations and reflections of an octagon.  Where the top octagon (1 (top), 2, 3, 4, 5, 6, 7, 8) is rotated to an octagon (2 (top), 3, 4, 5, 6, 7, 8, 1), and the octagon below (1 (top), 2, 3, 4, 5, 6, 7, 8) is reflected about a vertical axis to (1 (top), 8, 7, 6, 5, 4, 3, 2).</p>
                  <p>ID: permute-motions-ngon</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.4<span class="period">.</span></span><span class="space"> </span>Rotations and reflections of a regular <i class="one-letter">n</i>-gon</figcaption>
              </figure>
              <p id="zKW">Label the <i class="one-letter">n</i> reflections <nemeth class="inline">⠎⠂⠠⠀⠎⠆⠠⠀⠄⠄⠄⠀⠠⠀⠎⠰⠝⠐</nemeth>, where <nemeth class="inline">⠎⠰⠅</nemeth> is the reflection that leaves vertex <i class="one-letter">k</i> fixed. There are two cases of reflections, depending on whether <i class="one-letter">n</i> is even or odd. If there are an even number of vertices, then two vertices are left fixed by a reflection, and <nemeth class="inline">⠎⠂⠀⠨⠅⠀⠎⠰⠝⠸⠌⠆⠬⠂⠐⠠⠀⠎⠆⠀⠨⠅⠀⠎⠰⠝⠸⠌⠆⠬⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠎⠰⠝⠸⠌⠆⠐⠀⠨⠅⠀⠎⠰⠝⠐</nemeth>. If there are an odd number of vertices, then only a single vertex is left fixed by a reflection and <nemeth class="inline">⠎⠂⠠⠀⠎⠆⠠⠀⠄⠄⠄⠀⠠⠀⠎⠰⠝⠐</nemeth> are distinct (Figure 5.2.5). In either case, the order of each <nemeth class="inline">⠎⠰⠅</nemeth> is two. Let <nemeth class="inline">⠎⠀⠨⠅⠀⠎⠂</nemeth>. Then <nemeth class="inline">⠎⠘⠆⠐⠀⠨⠅⠀⠼⠂</nemeth> and <nemeth class="inline">⠗⠘⠝⠐⠀⠨⠅⠀⠼⠂</nemeth>. Since any rigid motion <i class="one-letter">t</i> of the <i class="one-letter">n</i>-gon replaces the first vertex by the vertex <i class="one-letter">k</i>, the second vertex must be replaced by either <nemeth class="inline">⠅⠬⠂</nemeth> or by <nemeth class="inline">⠅⠤⠂</nemeth>. If the second vertex is replaced by <nemeth class="inline">⠅⠬⠂</nemeth>, then <nemeth class="inline">⠞⠀⠨⠅⠀⠗⠘⠅</nemeth>. If the second vertex is replaced by <nemeth class="inline">⠅⠤⠂</nemeth>, then <nemeth class="inline">⠞⠀⠨⠅⠀⠗⠘⠅⠐⠎</nemeth>.<a data-knowl="" class="id-ref fn-knowl original" data-refid="hk-fn-2" id="fn-2"><sup> 1 </sup></a> Hence, <i class="one-letter">r</i> and <i class="one-letter">s</i> generate <nemeth class="inline">⠠⠙⠰⠝</nemeth>. That is, <nemeth class="inline">⠠⠙⠰⠝</nemeth> consists of all finite products of <i class="one-letter">r</i> and <i class="one-letter">s</i>,</p>
              <div class="displaymath">
                <nemeth>⠠⠙⠰⠝⠐⠀⠨⠅⠀⠨⠷⠼⠂⠠⠀⠗⠠⠀⠗⠘⠆⠐⠠⠀⠄⠄⠄⠀⠠⠀⠗⠘⠝⠤⠂⠐⠠⠀⠎⠠⠀⠗⠎⠠⠀⠗⠘⠆⠐⠎⠠⠀⠄⠄⠄⠀⠠⠀⠗⠘⠝⠤⠂⠐⠎⠨⠾</nemeth>
              </div>
              <p data-braille="continuation">. We will leave the proof that <nemeth class="inline">⠎⠗⠎⠀⠨⠅⠀⠗⠘⠤⠼⠂</nemeth> as an exercise.</p>
              <div class="hidden-content tex2jax_ignore" id="hk-fn-2">
                <div class="fn">Since we are in an abstract group, we will adopt the convention that group elements are multiplied left to right.</div>
              </div>
              <figure class="figure figure-like" data-braille="figure-like" id="LZo">
                <div data-braille="image">
                  <p>Image: The top hexagon (1 (top), 2, 3, 4, 5, 6) is relected to (1 (top), 6, 5, 4, 3,. 2).  The bottom pentqgon (1 (top), 2, 3, 4, 5) is relected to become (1 (top), 5, 4, 3, 2).</p>
                  <p>ID: permute-reflections-ngon</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.5<span class="period">.</span></span><span class="space"> </span>Types of  reflections of a regular <i class="one-letter">n</i>-gon</figcaption>
              </figure>
            </article>
            <article class="example example-like" data-braille="example-like" id="LDC">
              <h6 class="heading">
                <span class="type">Example</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.6</span>
                <span class="period">.</span>
              </h6>
              <p id="PDO">The group of rigid motions of a square, <nemeth class="inline">⠠⠙⠲</nemeth>, consists of eight elements. With the vertices numbered <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, <nemeth class="inline">⠼⠲</nemeth> (Figure 5.2.7), the rotations are</p>
              <div class="displaymath">
                <nemeth>⠗⠀⠀⠨⠅⠀⠷⠼⠂⠆⠒⠲⠾⠀⠗⠘⠆⠀⠀⠨⠅⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠀⠗⠘⠒⠀⠀⠨⠅⠀⠷⠼⠂⠲⠒⠆⠾⠀⠗⠘⠲⠀⠀⠨⠅⠀⠷⠼⠂⠾</nemeth>
              </div>
              <p data-braille="continuation">and the reflections are</p>
              <div class="displaymath">
                <nemeth>⠎⠂⠀⠀⠨⠅⠀⠷⠼⠆⠲⠾⠀⠎⠆⠀⠀⠨⠅⠀⠷⠼⠂⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">. The order of <nemeth class="inline">⠠⠙⠲</nemeth> is <nemeth class="inline">⠼⠦</nemeth>. The remaining two elements are</p>
              <div class="displaymath">
                <nemeth>⠗⠎⠂⠀⠀⠨⠅⠀⠷⠼⠂⠆⠾⠷⠒⠲⠾⠀⠗⠘⠒⠐⠎⠂⠀⠀⠨⠅⠀⠷⠼⠂⠲⠾⠷⠆⠒⠾</nemeth>
              </div>
              <p data-braille="continuation">.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="vKX">
                <div data-braille="image">
                  <p>Image: A square with diagonal lines of symmetries connecting opposite vertices, a horzontal line of symmetry that bisects the two vertical sides of the square and a vertical line of symmetry that bisects the two horizaontal sides of the square.</p>
                  <p>ID: permute-dihedral-four</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.7<span class="period">.</span></span><span class="space"> </span>The group <nemeth class="inline">⠠⠙⠲</nemeth></figcaption>
              </figure>
            </article>
          </section>
          <section class="subsection" id="FzV">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.2.1</span> <span class="title">The Motion Group of a Cube</span></div>
            <p id="suS">We can investigate the groups of rigid motions of geometric objects other than a regular <i class="one-letter">n</i>-sided polygon to obtain interesting examples of permutation groups. Let us consider the group of rigid motions of a cube.  By rigid motion, we mean a rotation with the axis of rotation about opposing faces, edges, or vertices. One of the first questions that we can ask about this group is “what is its order?” A cube has <nemeth class="inline">⠼⠖</nemeth> sides. If a particular side is facing upward, then there are four possible rotations of the cube that will preserve the upward-facing side. Hence, the order of the group is <nemeth class="inline">⠼⠖⠡⠲⠀⠨⠅⠀⠼⠆⠲</nemeth>. We have just proved the following proposition.</p>
            <article class="proposition theorem-like" data-braille="theorem-like" id="cXm">
              <h6 class="heading">
                <span class="type">Proposition</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.8</span>
                <span class="period">.</span>
              </h6>
              <p id="tVK">The group of rigid motions of a cube contains <nemeth class="inline">⠼⠆⠲</nemeth> elements.</p>
            </article>
            <article class="theorem theorem-like" data-braille="theorem-like" id="wQd">
              <h6 class="heading">
                <span class="type">Theorem</span>
                <span class="space"> </span>
                <span class="codenumber">5.2.9</span>
                <span class="period">.</span>
              </h6>
              <p id="Vta">The group of rigid motions of a cube is <nemeth class="inline">⠠⠎⠲</nemeth>.</p>
            </article>
            <article class="hiddenproof" data-braille="proof" id="hlG">
              <h6 class="heading">
                <span class="type">Proof<span class="period">.</span></span>
              </h6>
              <p id="sgx">From Proposition 5.2.8, we already know that the motion group of the cube has <nemeth class="inline">⠼⠆⠲</nemeth> elements, the same number of elements as there are in <nemeth class="inline">⠠⠎⠲</nemeth>. There are exactly four diagonals in the cube. If we label these diagonals <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠆</nemeth>, <nemeth class="inline">⠼⠒</nemeth>, and <nemeth class="inline">⠼⠲</nemeth>, we must show that the motion group of the cube will give us any permutation of the diagonals (Figure 5.2.10). If we can obtain all of these permutations, then <nemeth class="inline">⠠⠎⠲</nemeth> and the group of rigid motions of the cube must be the same. To obtain a transposition we can rotate the cube <nemeth class="inline">⠼⠂⠦⠴⠘⠘⠨⠡</nemeth> about the axis joining the midpoints of opposite edges (Figure 5.2.11). There are six such axes, giving all transpositions in <nemeth class="inline">⠠⠎⠲</nemeth>. Since every element in <nemeth class="inline">⠠⠎⠲</nemeth> is the product of a finite number of transpositions, the motion group of a cube must be <nemeth class="inline">⠠⠎⠲</nemeth>.</p>
              <figure class="figure figure-like" data-braille="figure-like" id="YnG">
                <div data-braille="image">
                  <p>Image: A cube where the top vetices are labled 1, 2, 3, 4 and the bottom vertices are labled 3, 4, 1, 2.  Diagonals connect vertex 1 on the top with vertex 1 on the bottom, vertex 2 on the top with vertex 2 on the bottom, vertex 3 on the top with vertex 3 on the bottom, and vertex 4 on the top with vertex 4 on the bottom,</p>
                  <p>ID: permute-motions-cube</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.10<span class="period">.</span></span><span class="space"> </span>The motion group of a cube</figcaption>
              </figure>
              <figure class="figure figure-like" data-braille="figure-like" id="EuP">
                <div data-braille="image">
                  <p>Image: Two cubes where the top vetices of the first cube are labled 1, 2, 3, 4 and the bottom vertices are labled 3, 4, 1, 2 and the top vertices of the second cube are labled 2, 1, 3, 4 and the bottom vertices are labled 3, 4, 2, 1.  Lines of symmetry connect the 12 edge on top with the 12 edge on the bottom in both cubes.</p>
                  <p>ID: permute-transpositions-cube</p>
                </div>
                <figcaption><span class="type">Figure</span><span class="space"> </span><span class="codenumber">5.2.11<span class="period">.</span></span><span class="space"> </span>Transpositions in the motion group of a cube</figcaption>
              </figure>
            </article>
            <article class="paragraphs" id="qqX">
              <h5 class="heading">
                <span class="title">Sage.</span>
              </h5>
              <p id="YCb">A permutation group is a very concrete representation of a group, and Sage support for permutations groups is very good — making Sage a natural place for beginners to learn about group theory.</p>
            </article>
          </section>
        </section>
        <section class="reading-questions" id="HJQ">
          <div class="none"><span class="type">Reading Questions</span> <span class="codenumber">5.3</span> <span class="title">Reading Questions</span></div>
          <article class="exercise exercise-like" id="Cbi">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="GLb">Express <nemeth class="inline">⠷⠼⠂⠒⠲⠾⠷⠒⠢⠲⠾</nemeth> as a cycle, or a product of disjoint cycles. (Interpret the composition of functions in the order used by Sage, which is the reverse of the order used in the book.)</p>
          </article>
          <article class="exercise exercise-like" id="iir">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="mSk">What is a transposition?</p>
          </article>
          <article class="exercise exercise-like" id="OpA">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="SZt">What does it mean for a permutation to be even or odd?</p>
          </article>
          <article class="exercise exercise-like" id="uwJ">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="zgC">Describe another group that is fundamentally the same as <nemeth class="inline">⠠⠁⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="aDS">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="fnL">Write the elements of the symmetry group of a pentagon using permutations in cycle notation. Do this exercise by hand, and without the assistance of Sage.</p>
          </article>
        </section>
        <section class="exercises" id="ecF">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">5.4</span> <span class="title">Exercises</span></div>
          <article class="exercise exercise-like" id="Jev">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="xAk">Write the following permutations in cycle notation.</p>
            <ol class="outerlist">
              <li>a. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠆⠀⠲⠀⠂⠀⠢⠀⠒⠠⠾</nemeth></div></li>
              <li>b. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠲⠀⠆⠀⠢⠀⠂⠀⠒⠠⠾</nemeth></div></li>
              <li>c. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠒⠀⠢⠀⠂⠀⠲⠀⠆⠠⠾</nemeth></div></li>
              <li>d. <div class="displaymath"><nemeth>⠠⠷⠼⠂⠀⠆⠀⠒⠀⠲⠀⠢⠠⠾⠀⠠⠷⠂⠀⠲⠀⠒⠀⠆⠀⠢⠠⠾</nemeth></div></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="lVz"><span class="type">Hint</span>:<p id="AQp">(a) <nemeth class="inline">⠷⠼⠂⠆⠲⠢⠒⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠒⠾⠷⠆⠢⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="plE">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="dHt">Compute each of the following.</p>
            <ol class="outerlist">
              <li>a. <p id="TKR"><nemeth class="inline">⠷⠼⠂⠒⠲⠢⠾⠷⠆⠒⠲⠾</nemeth></p></li>
              <li>b. <p id="zSa"><nemeth class="inline">⠷⠼⠂⠆⠾⠷⠂⠆⠢⠒⠾</nemeth></p></li>
              <li>c. <p id="fZj"><nemeth class="inline">⠷⠼⠂⠲⠒⠾⠷⠆⠒⠾⠷⠆⠲⠾</nemeth></p></li>
              <li>d. <p id="Mgs"><nemeth class="inline">⠷⠼⠂⠲⠆⠒⠾⠷⠒⠲⠾⠷⠢⠖⠾⠷⠂⠒⠆⠲⠾</nemeth></p></li>
              <li>e. <p id="snB"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠷⠂⠒⠾⠷⠆⠢⠾</nemeth></p></li>
              <li>f. <p id="YuK"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠷⠂⠒⠾⠷⠆⠢⠾⠘⠆</nemeth></p></li>
              <li>g. <p id="EBT"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠘⠤⠼⠂⠐⠷⠂⠆⠒⠾⠷⠲⠢⠾⠷⠂⠆⠢⠲⠾</nemeth></p></li>
              <li>h. <p id="kJc"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠘⠆⠐⠷⠂⠆⠒⠾⠷⠲⠢⠾</nemeth></p></li>
              <li>i. <p id="QQl"><nemeth class="inline">⠷⠼⠂⠆⠒⠾⠷⠲⠢⠾⠷⠂⠆⠢⠲⠾⠘⠤⠼⠆</nemeth></p></li>
              <li>j. <p id="wXu"><nemeth class="inline">⠷⠼⠂⠆⠢⠲⠾⠘⠂⠴⠴</nemeth></p></li>
              <li>k. <p id="deD"><nemeth class="inline">⠳⠷⠼⠂⠆⠢⠲⠾⠳</nemeth></p></li>
              <li>l. <p id="JlM"><nemeth class="inline">⠳⠷⠼⠂⠆⠢⠲⠾⠘⠆⠐⠳</nemeth></p></li>
              <li>m. <p id="psV"><nemeth class="inline">⠷⠼⠂⠆⠾⠘⠤⠼⠂</nemeth></p></li>
              <li>n. <p id="VAe"><nemeth class="inline">⠷⠼⠂⠆⠢⠒⠶⠾⠘⠤⠼⠂</nemeth></p></li>
              <li>o. <p id="BHn"><nemeth class="inline">⠈⠷⠷⠼⠂⠆⠾⠷⠒⠲⠾⠷⠂⠆⠾⠷⠲⠶⠾⠈⠾⠘⠤⠼⠂</nemeth></p></li>
              <li>p. <p id="hOw"><nemeth class="inline">⠈⠷⠷⠼⠂⠆⠒⠢⠾⠷⠲⠖⠶⠾⠈⠾⠘⠤⠼⠂</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="yjR"><span class="type">Hint</span>:<p id="gXy">(a) <nemeth class="inline">⠷⠼⠂⠒⠢⠾⠷⠆⠲⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠲⠾⠷⠆⠒⠾</nemeth>; (e) <nemeth class="inline">⠷⠼⠂⠒⠆⠲⠾</nemeth>; (g) <nemeth class="inline">⠷⠼⠂⠒⠲⠾⠷⠆⠢⠾</nemeth>; (n) <nemeth class="inline">⠷⠼⠂⠶⠒⠢⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="VsN">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="JOC">Express the following permutations as products of transpositions and identify them as even or odd.</p>
            <ol class="outerlist">
              <li>a. <p id="NVF"><nemeth class="inline">⠷⠼⠂⠲⠒⠢⠖⠾</nemeth></p></li>
              <li>b. <p id="ucO"><nemeth class="inline">⠷⠼⠂⠢⠖⠾⠷⠆⠒⠲⠾</nemeth></p></li>
              <li>c. <p id="ajX"><nemeth class="inline">⠷⠼⠂⠲⠆⠖⠾⠷⠂⠲⠆⠾</nemeth></p></li>
              <li>d. <p id="Grg"><nemeth class="inline">⠷⠼⠂⠶⠆⠢⠲⠾⠷⠂⠲⠆⠒⠾⠷⠂⠢⠲⠖⠒⠆⠾</nemeth></p></li>
              <li>e. <p id="myp"><nemeth class="inline">⠷⠼⠂⠲⠆⠖⠒⠶⠾</nemeth></p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Kyj"><span class="type">Hint</span>:<p id="NeH">(a) <nemeth class="inline">⠷⠼⠂⠖⠾⠷⠂⠢⠾⠷⠂⠒⠾⠷⠂⠲⠾</nemeth>; (c) <nemeth class="inline">⠷⠼⠂⠖⠾⠷⠂⠲⠾⠷⠂⠆⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="BzW">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="pVL">Find <nemeth class="inline">⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠘⠤⠼⠂</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="WMB"><span class="type">Hint</span>:<p id="tlQ"><nemeth class="inline">⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠝⠐⠾⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠰⠝⠐⠠⠀⠁⠰⠝⠤⠂⠐⠠⠀⠄⠄⠄⠀⠠⠀⠁⠆⠾</nemeth></p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="hHf">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="WcU">List all of the subgroups of <nemeth class="inline">⠠⠎⠲</nemeth>. Find each of the following sets:</p>
            <ol class="outerlist">
              <li>a. <p id="SFy"><nemeth class="inline">⠨⠷⠎⠀⠈⠑⠀⠠⠎⠲⠒⠀⠎⠷⠼⠂⠾⠀⠨⠅⠀⠼⠒⠨⠾</nemeth></p></li>
              <li>b. <p id="yMH"><nemeth class="inline">⠨⠷⠎⠀⠈⠑⠀⠠⠎⠲⠒⠀⠎⠷⠼⠆⠾⠀⠨⠅⠀⠼⠆⠨⠾</nemeth></p></li>
              <li>c. <p id="eTQ"><nemeth class="inline">⠨⠷⠀⠎⠀⠈⠑⠀⠠⠎⠲⠒⠀⠎⠷⠼⠂⠾⠀⠨⠅⠀⠼⠒</nemeth> and <nemeth class="inline">⠎⠷⠼⠆⠾⠀⠨⠅⠀⠼⠆⠨⠾</nemeth>.</p></li>
            </ol>
            <p data-braille="continuation">Are any of these sets subgroups of <nemeth class="inline">⠠⠎⠲</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="jaT"><span class="type">Hint</span>:<p id="ZsZ">(a) <nemeth class="inline">⠨⠷⠷⠼⠂⠒⠾⠠⠀⠷⠼⠂⠒⠾⠷⠆⠲⠾⠠⠀⠷⠼⠂⠒⠆⠾⠠⠀⠷⠼⠂⠒⠲⠾⠠⠀⠷⠼⠂⠒⠆⠲⠾⠠⠀⠷⠼⠂⠒⠲⠆⠾⠨⠾</nemeth> is not a subgroup.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="NOo">
            <h6 class="heading">
              <span class="codenumber">6<span class="period">.</span></span>
            </h6>
            <p id="Ckd">Find all of the subgroups in <nemeth class="inline">⠠⠁⠲</nemeth>. What is the order of each subgroup?</p>
          </article>
          <article class="exercise exercise-like" id="tVx">
            <h6 class="heading">
              <span class="codenumber">7<span class="period">.</span></span>
            </h6>
            <p id="irm">Find all possible orders of elements in <nemeth class="inline">⠠⠎⠶</nemeth> and <nemeth class="inline">⠠⠁⠶</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="acG">
            <h6 class="heading">
              <span class="codenumber">8<span class="period">.</span></span>
            </h6>
            <p id="Oyv">Show that <nemeth class="inline">⠠⠁⠂⠴</nemeth> contains an element of order <nemeth class="inline">⠼⠂⠢</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="HDD"><span class="type">Hint</span>:<p id="FAi"><nemeth class="inline">⠷⠼⠂⠆⠒⠲⠢⠾⠷⠖⠶⠦⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="GjP">
            <h6 class="heading">
              <span class="codenumber">9<span class="period">.</span></span>
            </h6>
            <p id="uFE">Does <nemeth class="inline">⠠⠁⠦</nemeth> contain an element of order <nemeth class="inline">⠼⠆⠖</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="mqY">
            <h6 class="heading">
              <span class="codenumber">10<span class="period">.</span></span>
            </h6>
            <p id="aMN">Find an element of largest order in <nemeth class="inline">⠠⠎⠰⠝</nemeth> for <nemeth class="inline">⠝⠀⠨⠅⠀⠼⠒⠠⠀⠄⠄⠄⠀⠠⠀⠼⠂⠴</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Syh">
            <h6 class="heading">
              <span class="codenumber">11<span class="period">.</span></span>
            </h6>
            <p id="GTW">What are the possible cycle structures of elements of <nemeth class="inline">⠠⠁⠢</nemeth>? What about <nemeth class="inline">⠠⠁⠖</nemeth>?</p>
            <div class="solutions">
              <div class="hint solution-like" id="ggn"><span class="type">Hint</span>:<p id="lHr">Permutations of the form</p><div class="displaymath"><nemeth>⠷⠼⠂⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠾⠷⠁⠒⠠⠀⠁⠲⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠁⠒⠾⠠⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠁⠒⠠⠀⠁⠲⠠⠀⠁⠢⠾</nemeth></div><p data-braille="continuation">are possible for <nemeth class="inline">⠠⠁⠢</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="yFq">
            <h6 class="heading">
              <span class="codenumber">12<span class="period">.</span></span>
            </h6>
            <p id="nbf">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> have order <i class="one-letter">n</i>. Show that for all integers <i class="one-letter">i</i> and <i class="one-letter">j</i>, <nemeth class="inline">⠨⠎⠘⠊⠐⠀⠨⠅⠀⠨⠎⠘⠚</nemeth> if and only if <nemeth class="inline">⠊⠀⠸⠇⠀⠚⠷⠍⠕⠙⠀⠝⠾</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="eMz">
            <h6 class="heading">
              <span class="codenumber">13<span class="period">.</span></span>
            </h6>
            <p id="Tio">Let <nemeth class="inline">⠨⠎⠀⠨⠅⠀⠨⠎⠂⠀⠄⠄⠄⠀⠨⠎⠰⠍⠐⠀⠈⠑⠀⠠⠎⠰⠝⠐</nemeth> be the product of disjoint cycles. Prove that the order of <nemeth class="inline">⠨⠎</nemeth> is the least common multiple of the lengths of the cycles <nemeth class="inline">⠨⠎⠂⠠⠀⠄⠄⠄⠀⠠⠀⠨⠎⠰⠍⠐</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="KTI">
            <h6 class="heading">
              <span class="codenumber">14<span class="period">.</span></span>
            </h6>
            <p id="zpx">Using cycle notation, list the elements in <nemeth class="inline">⠠⠙⠢</nemeth>. What are <i class="one-letter">r</i> and <i class="one-letter">s</i>? Write every element as a product of <i class="one-letter">r</i> and <i class="one-letter">s</i>.</p>
          </article>
          <article class="exercise exercise-like" id="raR">
            <h6 class="heading">
              <span class="codenumber">15<span class="period">.</span></span>
            </h6>
            <p id="fwG">If the diagonals of a cube are labeled as Figure 5.2.10, to which motion of the cube does the permutation <nemeth class="inline">⠷⠼⠂⠆⠾⠷⠒⠲⠾</nemeth> correspond? What about the other permutations of the diagonals?</p>
          </article>
          <article class="exercise exercise-like" id="Xia">
            <h6 class="heading">
              <span class="codenumber">16<span class="period">.</span></span>
            </h6>
            <p id="LDP">Find the group of rigid motions of a tetrahedron. Show that this is the same group as <nemeth class="inline">⠠⠁⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="Dpj">
            <h6 class="heading">
              <span class="codenumber">17<span class="period">.</span></span>
            </h6>
            <p id="rKY">Prove that <nemeth class="inline">⠠⠎⠰⠝</nemeth> is nonabelian for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="xey"><span class="type">Hint</span>:<p id="ROA">Calculate <nemeth class="inline">⠷⠼⠂⠆⠒⠾⠷⠂⠆⠾</nemeth> and <nemeth class="inline">⠷⠼⠂⠆⠾⠷⠂⠆⠒⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="jws">
            <h6 class="heading">
              <span class="codenumber">18<span class="period">.</span></span>
            </h6>
            <p id="XSh">Show that <nemeth class="inline">⠠⠁⠰⠝</nemeth> is nonabelian for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠲</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="PDB">
            <h6 class="heading">
              <span class="codenumber">19<span class="period">.</span></span>
            </h6>
            <p id="DZq">Prove that <nemeth class="inline">⠠⠙⠰⠝</nemeth> is nonabelian for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="vKK">
            <h6 class="heading">
              <span class="codenumber">20<span class="period">.</span></span>
            </h6>
            <p id="kgz">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> be a cycle. Prove that <nemeth class="inline">⠨⠎</nemeth> can be written as the product of at most <nemeth class="inline">⠝⠤⠂</nemeth> transpositions.</p>
          </article>
          <article class="exercise exercise-like" id="bRT">
            <h6 class="heading">
              <span class="codenumber">21<span class="period">.</span></span>
            </h6>
            <p id="QnI">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>. If <nemeth class="inline">⠨⠎</nemeth> is not a cycle, prove that <nemeth class="inline">⠨⠎</nemeth> can be written as the product of at most <nemeth class="inline">⠝⠤⠆</nemeth> transpositions.</p>
          </article>
          <article class="exercise exercise-like" id="HZc">
            <h6 class="heading">
              <span class="codenumber">22<span class="period">.</span></span>
            </h6>
            <p id="wuR">If <nemeth class="inline">⠨⠎</nemeth> can be expressed as an odd number of transpositions, show that any other product of transpositions equaling <nemeth class="inline">⠨⠎</nemeth> must also be odd.</p>
          </article>
          <article class="exercise exercise-like" id="ogl">
            <h6 class="heading">
              <span class="codenumber">23<span class="period">.</span></span>
            </h6>
            <p id="cCa">If <nemeth class="inline">⠨⠎</nemeth> is a cycle of odd length, prove that <nemeth class="inline">⠨⠎⠘⠆</nemeth> is also a cycle.</p>
          </article>
          <article class="exercise exercise-like" id="Unu">
            <h6 class="heading">
              <span class="codenumber">24<span class="period">.</span></span>
            </h6>
            <p id="IJj">Show that a <nemeth class="inline">⠼⠒</nemeth>-cycle is an even permutation.</p>
          </article>
          <article class="exercise exercise-like" id="AuD">
            <h6 class="heading">
              <span class="codenumber">25<span class="period">.</span></span>
            </h6>
            <p id="oQs">Prove that in <nemeth class="inline">⠠⠁⠰⠝</nemeth> with <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>, any permutation is a product of cycles of length <nemeth class="inline">⠼⠒</nemeth>.</p>
            <div class="solutions">
              <div class="hint solution-like" id="arb"><span class="type">Hint</span>:<p id="xVJ">Consider the cases <nemeth class="inline">⠷⠁⠃⠾⠷⠃⠉⠾</nemeth> and <nemeth class="inline">⠷⠁⠃⠾⠷⠉⠙⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="gBM">
            <h6 class="heading">
              <span class="codenumber">26<span class="period">.</span></span>
            </h6>
            <p id="UXB">Prove that any element in <nemeth class="inline">⠠⠎⠰⠝</nemeth> can be written as a finite product of the following permutations.</p>
            <ol class="outerlist">
              <li>a. <p id="ZeE"><nemeth class="inline">⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠒⠾⠠⠀⠄⠄⠄⠀⠠⠀⠷⠼⠂⠝⠾</nemeth></p></li>
              <li>b. <p id="FlN"><nemeth class="inline">⠷⠼⠂⠆⠾⠠⠀⠷⠼⠆⠒⠾⠠⠀⠄⠄⠄⠀⠠⠀⠷⠝⠤⠂⠠⠀⠝⠾</nemeth></p></li>
              <li>c. <p id="lsW"><nemeth class="inline">⠷⠼⠂⠆⠾⠠⠀⠷⠼⠂⠆⠀⠄⠄⠄⠀⠝⠾</nemeth></p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="MIV">
            <h6 class="heading">
              <span class="codenumber">27<span class="period">.</span></span>
            </h6>
            <p id="BeK">Let <i class="one-letter">G</i> be a group and define a map <nemeth class="inline">⠨⠇⠰⠛⠐⠒⠀⠠⠛⠀⠫⠕⠀⠠⠛</nemeth> by <nemeth class="inline">⠇⠰⠛⠐⠷⠁⠾⠀⠨⠅⠀⠛⠁</nemeth>. Prove that <nemeth class="inline">⠨⠇⠰⠛</nemeth> is a permutation of <i class="one-letter">G</i>.</p>
          </article>
          <article class="exercise exercise-like" id="sQe">
            <h6 class="heading">
              <span class="codenumber">28<span class="period">.</span></span>
            </h6>
            <p id="hlT">Prove that there exist <nemeth class="inline">⠝⠯</nemeth> permutations of a set containing <i class="one-letter">n</i> elements.</p>
          </article>
          <article class="exercise exercise-like" id="YXn">
            <h6 class="heading">
              <span class="codenumber">29<span class="period">.</span></span>
            </h6>
            <p id="Ntc">Recall that the <dfn class="terminology">center</dfn> of a group <i class="one-letter">G</i> is</p>
            <div class="displaymath">
              <nemeth>⠠⠵⠷⠠⠛⠾⠀⠨⠅⠀⠨⠷⠛⠀⠈⠑⠀⠠⠛⠒⠀⠛⠭⠀⠨⠅⠀⠭⠛⠋⠕⠗⠀⠁⠇⠇⠭⠀⠈⠑⠀⠠⠛⠨⠾</nemeth>
            </div>
            <p data-braille="continuation">. Find the center of <nemeth class="inline">⠠⠙⠦</nemeth>. What about the center of <nemeth class="inline">⠠⠙⠂⠴</nemeth>? What is the center of <nemeth class="inline">⠠⠙⠰⠝</nemeth>?</p>
          </article>
          <article class="exercise exercise-like" id="Few">
            <h6 class="heading">
              <span class="codenumber">30<span class="period">.</span></span>
            </h6>
            <p id="tAl">Let <nemeth class="inline">⠨⠞⠀⠨⠅⠀⠷⠁⠂⠠⠀⠁⠆⠠⠀⠄⠄⠄⠀⠠⠀⠁⠰⠅⠐⠾</nemeth> be a cycle of length <i class="one-letter">k</i>.</p>
            <ol class="outerlist">
              <li>a. <p id="JVG">Prove that if <nemeth class="inline">⠨⠎</nemeth> is any permutation, then</p><div class="displaymath"><nemeth>⠎⠨⠞⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠷⠎⠷⠁⠂⠾⠠⠀⠎⠷⠁⠆⠾⠠⠀⠄⠄⠄⠀⠠⠀⠎⠷⠁⠰⠅⠐⠾⠾</nemeth></div><p data-braille="continuation">is a cycle of length <i class="one-letter">k</i>.</p></li>
              <li>b. <p id="qcP">Let <nemeth class="inline">⠨⠍</nemeth> be a cycle of length <i class="one-letter">k</i>. Prove that there is a permutation <nemeth class="inline">⠨⠎</nemeth> such that <nemeth class="inline">⠨⠎⠨⠞⠨⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠍</nemeth>.</p></li>
            </ol>
            <div class="solutions">
              <div class="hint solution-like" id="Lid"><span class="type">Hint</span>:<p id="ecS">For (a), show that <nemeth class="inline">⠎⠨⠞⠎⠘⠤⠼⠂⠐⠷⠎⠷⠁⠰⠊⠐⠾⠾⠀⠨⠅⠀⠎⠷⠁⠰⠊⠬⠂⠐⠾</nemeth>.</p></div>
            </div>
          </article>
          <article class="exercise exercise-like" id="llF">
            <h6 class="heading">
              <span class="codenumber">31<span class="period">.</span></span>
            </h6>
            <p id="ZHu">For <nemeth class="inline">⠨⠁</nemeth> and <nemeth class="inline">⠨⠃</nemeth> in <nemeth class="inline">⠠⠎⠰⠝</nemeth>, define <nemeth class="inline">⠨⠁⠈⠱⠨⠃</nemeth> if there exists an <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> such that <nemeth class="inline">⠨⠎⠨⠁⠨⠎⠘⠤⠼⠂⠐⠀⠨⠅⠀⠨⠃</nemeth>. Show that <nemeth class="inline">⠈⠱</nemeth> is an equivalence relation on <nemeth class="inline">⠠⠎⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="RsO">
            <h6 class="heading">
              <span class="codenumber">32<span class="period">.</span></span>
            </h6>
            <p id="FOD">Let <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠠⠭</nemeth>. If <nemeth class="inline">⠎⠘⠝⠐⠷⠭⠾⠀⠨⠅⠀⠽</nemeth> for some <nemeth class="inline">⠝⠀⠈⠑⠀⠸⠠⠵</nemeth>, we will say that <nemeth class="inline">⠭⠈⠱⠽</nemeth>.</p>
            <ol class="outerlist">
              <li>a. <p id="iyq">Show that <nemeth class="inline">⠈⠱</nemeth> is an equivalence relation on <i class="one-letter">X</i>.</p></li>
              <li>b. <p id="uMI">Define the <dfn class="terminology">orbit</dfn> of <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth> under <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠎⠰⠠⠭</nemeth> to be the set</p><div class="displaymath"><nemeth>⠈⠠⠕⠰⠭⠠⠀⠨⠎⠐⠀⠨⠅⠀⠨⠷⠽⠒⠀⠭⠈⠱⠽⠨⠾</nemeth></div><p data-braille="continuation">. Compute the orbits of each element in <nemeth class="inline">⠨⠷⠼⠂⠠⠀⠼⠆⠠⠀⠼⠒⠠⠀⠼⠲⠠⠀⠼⠢⠨⠾</nemeth> under each of the following elements in <nemeth class="inline">⠠⠎⠢</nemeth>:</p><div class="displaymath"><nemeth>⠨⠁⠀⠀⠨⠅⠀⠷⠼⠂⠆⠢⠲⠾⠀⠨⠃⠀⠀⠨⠅⠀⠷⠼⠂⠆⠒⠾⠷⠲⠢⠾⠀⠨⠛⠀⠀⠨⠅⠀⠷⠼⠂⠒⠾⠷⠆⠢⠾</nemeth></div><p data-braille="continuation">.</p></li>
              <li>c. <p id="aTR">If <nemeth class="inline">⠈⠠⠕⠰⠭⠠⠀⠨⠎⠐⠨⠩⠈⠠⠕⠰⠽⠠⠀⠨⠎⠐⠀⠌⠨⠅⠀⠸⠴</nemeth>, prove that <nemeth class="inline">⠈⠠⠕⠰⠭⠠⠀⠨⠎⠐⠀⠨⠅⠀⠈⠠⠕⠰⠽⠠⠀⠨⠎</nemeth>. The orbits under a permutation <nemeth class="inline">⠨⠎</nemeth> are the equivalence classes corresponding to the equivalence relation <nemeth class="inline">⠈⠱</nemeth>.</p></li>
              <li>d. <p id="Hba">A subgroup <i class="one-letter">H</i> of <nemeth class="inline">⠠⠎⠰⠠⠭</nemeth> is <dfn class="terminology">transitive</dfn> if for every <nemeth class="inline">⠭⠠⠀⠽⠀⠈⠑⠀⠠⠭</nemeth>, there exists a <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠓</nemeth> such that <nemeth class="inline">⠎⠷⠭⠾⠀⠨⠅⠀⠽</nemeth>. Prove that <nemeth class="inline">⠨⠨⠷⠨⠎⠨⠨⠾</nemeth> is transitive if and only if <nemeth class="inline">⠈⠠⠕⠰⠭⠠⠀⠨⠎⠐⠀⠨⠅⠀⠠⠭</nemeth> for some <nemeth class="inline">⠭⠀⠈⠑⠀⠠⠭</nemeth>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="xzX">
            <h6 class="heading">
              <span class="codenumber">33<span class="period">.</span></span>
            </h6>
            <p id="lVM">Let <nemeth class="inline">⠨⠁⠀⠈⠑⠀⠠⠎⠰⠝</nemeth> for <nemeth class="inline">⠝⠀⠨⠂⠱⠀⠼⠒</nemeth>. If <nemeth class="inline">⠨⠁⠨⠃⠀⠨⠅⠀⠨⠃⠨⠁</nemeth> for all <nemeth class="inline">⠨⠃⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>, prove that <nemeth class="inline">⠨⠁</nemeth> must be the identity permutation; hence, the center of <nemeth class="inline">⠠⠎⠰⠝</nemeth> is the trivial subgroup.</p>
          </article>
          <article class="exercise exercise-like" id="dHg">
            <h6 class="heading">
              <span class="codenumber">34<span class="period">.</span></span>
            </h6>
            <p id="ScV">If <nemeth class="inline">⠨⠁</nemeth> is even, prove that <nemeth class="inline">⠨⠁⠘⠤⠼⠂</nemeth> is also even. Does a corresponding result hold if <nemeth class="inline">⠨⠁</nemeth> is odd?</p>
          </article>
          <article class="exercise exercise-like" id="permute-exercise-conjugate-An">
            <h6 class="heading">
              <span class="codenumber">35<span class="period">.</span></span>
            </h6>
            <p id="p-941">If <nemeth class="inline">⠨⠎⠀⠈⠑⠀⠠⠁⠰⠝</nemeth> and <nemeth class="inline">⠨⠞⠀⠈⠑⠀⠠⠎⠰⠝</nemeth>, show that <nemeth class="inline">⠨⠞⠘⠤⠼⠂⠐⠨⠎⠨⠞⠀⠈⠑⠀⠠⠁⠰⠝</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="JOp">
            <h6 class="heading">
              <span class="codenumber">36<span class="period">.</span></span>
            </h6>
            <p id="yke">Show that <nemeth class="inline">⠨⠁⠘⠤⠼⠂⠐⠨⠃⠘⠤⠼⠂⠐⠨⠁⠨⠃</nemeth> is even for <nemeth class="inline">⠨⠁⠠⠀⠨⠃⠀⠈⠑⠀⠠⠎⠰⠝⠐</nemeth>.</p>
          </article>
          <article class="exercise exercise-like" id="pVy">
            <h6 class="heading">
              <span class="codenumber">37<span class="period">.</span></span>
            </h6>
            <p id="ern">Let <i class="one-letter">r</i> and <i class="one-letter">s</i> be the elements in <nemeth class="inline">⠠⠙⠰⠝</nemeth> described in Theorem 5.2.3</p>
            <ol class="outerlist">
              <li>a. <p id="rSc">Show that <nemeth class="inline">⠎⠗⠎⠀⠨⠅⠀⠗⠘⠤⠼⠂</nemeth>.</p></li>
              <li>b. <p id="XZl">Show that <nemeth class="inline">⠗⠘⠅⠐⠎⠀⠨⠅⠀⠎⠗⠘⠤⠅</nemeth> in <nemeth class="inline">⠠⠙⠰⠝</nemeth>.</p></li>
              <li>c. <p id="Egu">Prove that the order of <nemeth class="inline">⠗⠘⠅⠐⠀⠈⠑⠀⠠⠙⠰⠝</nemeth> is <nemeth class="inline">⠝⠸⠌⠛⠉⠙⠀⠷⠅⠠⠀⠝⠾</nemeth>.</p></li>
            </ol>
          </article>
        </section>
        <section class="section" id="iMy">
          <div class="cell5"><span class="type">Section</span> <span class="codenumber">5.5</span> <span class="title">Sage</span></div>
          <section class="introduction" id="wuE">
            <p id="FeJ">A good portion of Sage's support for group theory is based on routines from <abbr class="acronym">GAP</abbr> (Groups, Algorithms, and Programming) at <a class="external" href="http://www.gap-system.org/" target="_blank">www.gap-system.org</a>, which is included in every copy of Sage. This is a mature open source package, dating back to 1986. (Forward reference here to <abbr class="acronym">GAP</abbr> console, etc.)</p>
            <p id="llS">As we have seen, groups can be described in many different ways, such as sets of matrices, sets of complex numbers, or sets of symbols subject to defining relations. A very concrete way to represent groups is via permutations (one-to-one and onto functions of the integers <nemeth class="inline">⠼⠂</nemeth> through <i class="one-letter">n</i>), using function composition as the operation in the group, as described in this chapter. Sage has many routines designed to work with groups of this type and they are also a good way for those learning group theory to gain experience with the basic ideas of group theory. For both these reasons, we will concentrate on these types of groups.</p>
          </section>
          <section class="subsection" id="lHe">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.5.1</span> <span class="title">Permutation Groups and Elements</span></div>
            <p id="EJk">The easiest way to work with permutation group elements in Sage is to write them in cycle notation. Since these are products of disjoint cycles (which commute), we do not need to concern ourselves with the actual order of the cycles. If we write <code class="code-inline tex2jax_ignore">(1,3)(2,4)</code> we probably understand it to be a permutation (the topic of this chapter!) and we know that it could be an element of <nemeth class="inline">⠠⠎⠲</nemeth>, or perhaps a symmetric group on more symbols than just 4. Sage cannot get started that easily and needs a bit of context, so we coerce a string of characters written with cycle notation into a symmetric group to make group elements. Here are some examples and some sample computations. Remember that Sage and your text differ on how to interpret the order of composing two permutations in a product.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(5)
sigma = G("(1,3)(2,5,4)")
sigma*sigma
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(2,4,5)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho = G("(2,4)(1,5)")
rho^3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,5)(2,4)
</div>
            </article>
            <p id="kQt">If the next three examples seem confusing, or “backwards”, then now would be an excellent time to review the Sage discussion about the order of permutation composition in the subsection Groups of symmetries.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma*rho
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3,5,2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho*sigma
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,4,5,3)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho^-1*sigma*rho
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,2,4)(3,5)
</div>
            </article>
            <p id="QXC">There are alternate ways to create permutation group elements, which can be useful in some situations, but they are not quite as useful in everday use.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma1 = G("(1,3)(2,5,4)")
sigma1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3)(2,5,4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma2 = G([(1,3),(2,5,4)])
sigma2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3)(2,5,4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma3 = G([3,5,1,2,4])
sigma3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3)(2,5,4)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma1 == sigma2
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma2 == sigma3
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma2.cycle_tuples()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(1, 3), (2, 5, 4)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">[sigma3(x) for x in G.domain()]
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[3, 5, 1, 2, 4]
</div>
            </article>
            <p id="xeL">The second version of <nemeth class="inline">⠨⠎</nemeth> is a list of “tuples”, which requires a lot of commas and these must be enclosed in a list.  (A tuple of length one must be written like <code class="code-inline tex2jax_ignore">(4,)</code> to distinguish it from using parentheses for grouping, as in <code class="code-inline tex2jax_ignore">5*(4)</code>.)  The third version uses the “bottom-row” of the more cumbersome two-row notation introduced at the beginning of the chapter — it is an ordered list of the <em class="emphasis">output values</em> of the permutation when considered as a function.</p>
            <p id="dlU">So we then see that despite three different input procedures, all the versions of <nemeth class="inline">⠨⠎</nemeth> print the same way, and moreso they are actually equal to each other. (This is a subtle difference — what an object <em class="emphasis">is</em> in Sage versus how an object <em class="emphasis">displays</em> itself.)</p>
            <p id="Jtd">We can be even more careful about the nature of our elements. Notice that once we get Sage started, it can promote the product <nemeth class="inline">⠨⠞⠨⠎</nemeth> into the larger permutation group. We can “promote” elements into larger permutation groups, but it is an error to try to shoe-horn an element into a too-small symmetric group.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">H = SymmetricGroup(4)
sigma = H("(1,2,3,4)")
G = SymmetricGroup(6)
tau = G("(1,2,3,4,5,6)")
rho = tau * sigma
rho
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,3)(2,4,5,6)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Symmetric group of order 4! as a permutation group
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Symmetric group of order 6! as a permutation group
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Symmetric group of order 6! as a permutation group
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tau.parent() == rho.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigmaG = G(sigma)
sigmaG.parent()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Symmetric group of order 6! as a permutation group
</div>
            </article>
            <p id="pAm">It is an error to try to coerce a permutation with too many symbols into a permutation group employing too few symbols.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">tauH = H(tau)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Traceback (most recent call last):
...
ValueError: invalid data to initialize a permutation
</div>
            </article>
            <p id="VHv">Better than working with just elements of the symmetric group, we can create a variety of permutation groups in Sage. Here is a sampling for starters:</p>
            <figure class="table table-like" data-braille="figure-like" id="RlX">
              <figcaption><span class="type">Table</span><span class="space"> </span><span class="codenumber">5.5.1<span class="period">.</span></span><span class="space"> </span>Some Sage permutation groups</figcaption>
              <table>
                <tr>
                  <td class="l m b2 r0 l0 t2 lines">Sage Command</td>
                  <td class="l m b2 r0 l0 t2 lines" data-braille="last-cell">Description</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">SymmetricGroup(n)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Permutations on <i class="one-letter">n</i> symbols, <nemeth class="inline">⠝⠯</nemeth> elements</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">DihedralGroup(n)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Symmetries of an <i class="one-letter">n</i>-gon, <nemeth class="inline">⠼⠆⠝</nemeth> elements.</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">CyclicPermutationGroup(n)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Rotations of an <i class="one-letter">n</i>-gon (no flips), <i class="one-letter">n</i> elements</td>
                </tr>
                <tr>
                  <td class="l m b0 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">AlternatingGroup(n)</code>
                  </td>
                  <td class="l m b0 r0 l0 t0 lines" data-braille="last-cell">Alternating group on <i class="one-letter">n</i> symbols, <nemeth class="inline">⠝⠖⠀⠸⠌⠼⠆</nemeth> elements</td>
                </tr>
                <tr>
                  <td class="l m b2 r0 l0 t0 lines">
                    <code class="code-inline tex2jax_ignore">KleinFourGroup()</code>
                  </td>
                  <td class="l m b2 r0 l0 t0 lines" data-braille="last-cell">A non-cyclic group of order 4</td>
                </tr>
              </table>
            </figure>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
            <p id="BOE">You can also locate Sage permutation groups with the <code class="code-inline tex2jax_ignore">groups</code> catalog. In the next cell place your cursor right after the final dot and hit the tab-key. You will get a list of methods you can use to create permutation groups. As always, place a question-mark after a method and hit the tab-key to get online documentation of a method.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">groups.permutation.
</div>
            </article>
          </section>
          <section class="subsection" id="ROn">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.5.2</span> <span class="title">Properties of Permutation Elements</span></div>
            <p id="hVN">Sometimes it is easier to grab an element out of a list of elements of a permutation group, and then it is already attached to a parent and there is no need for any coercion. In the following, <code class="code-inline tex2jax_ignore">rotate</code> and <code class="code-inline tex2jax_ignore">flip</code> are automatically elements of <code class="code-inline tex2jax_ignore">G</code> because of the way we procured them.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D = DihedralGroup(5)
elements = D.list(); elements
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,5,4,3,2), (1,4,2,5,3), (1,3,5,2,4), (1,2,3,4,5), (2,5)(3,4),
 (1,5)(2,4), (1,4)(2,3), (1,3)(4,5), (1,2)(3,5)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rotate = elements[4]
flip = elements[7]
flip*rotate == rotate* flip
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="OcW">So we see from this final statement that the group of symmetries of a pentagon is not abelian. But there is an easier way.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">D = DihedralGroup(5)
D.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <p id="ukf">There are many more methods you can use for both permutation groups and their individual elements. Use the blank compute cell below to create a permutation group (any one you like) and an element of a permutation group (any one you like). Then use tab-completion to see all the methods available for an element, or for a group (name, period, tab-key). Some names you may recognize, some we will learn about in the coming chapters, some are highly-specialized research tools you can use when you write your Ph.D. thesis in group theory. For any of these methods, remember that you can type the name, followed by a question mark, to see documentation and examples. <em class="emphasis">Experiment and explore</em> — it is really hard to break anything.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
            <p id="aro">Here are some selected examples of various methods available.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4 = AlternatingGroup(4)
A4.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">12
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4.is_finite()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4.is_cyclic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">False
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma = A4("(1,2,4)")
sigma^-1
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">(1,4,2)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sigma.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <p id="Gyx">A very useful method when studying the alternating group is the permutation group element method <code class="code-inline tex2jax_ignore">.sign()</code>. It will return <code class="code-inline tex2jax_ignore">1</code> if a permutation is even and <code class="code-inline tex2jax_ignore">-1</code> if a permutation is odd.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(3)
sigma = G("(1,2)")
tau = G("(1,3)")
rho = sigma*tau
sigma.sign()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">-1
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">rho.sign()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">1
</div>
            </article>
            <p id="mFG">We can create subgroups by giving the main group a list of “generators.” These elements serve to “generate” a subgroup — imagine multiplying these elements (and their inverses) together over and over, creating new elements that must also be in the subgroup and also become involved in new products, until you see no new elements. Now that definition ends with a horribly imprecise statement, but it should suffice for now. A better definition is that the subgroup generated by the elements is the smallest subgroup of the main group that contains all the generators — which is fine if you know what all the subgroups might be.</p>
            <p id="SMP">With a single generator, the repeated products just become powers of the lone generator. The subgroup generated then is cyclic. With two (or more) generators, especially in a non-abelian group, the situation can be much, much more complicated. So let us begin with just a single generator. But do not forget to put it in a list anyway.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">A4 = AlternatingGroup(4)
sigma = A4("(1,2,4)")
sg = A4.subgroup([sigma])
sg
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">Subgroup generated by [(1,2,4)]
of (Alternating group of order 4!/2 as a permutation group)
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">3
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,2,4), (1,4,2)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.is_abelian()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.is_cyclic()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">sg.is_subgroup(A4)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">True
</div>
            </article>
            <p id="yTY">We can now redo the example from the very beginning of this chapter. We translate to elements to cycle notation, construct the subgroup from two generators (the subgroup is not cyclic), and since the subgroup is abelian, we do not have to view Sage's Cayley table as a diagonal reflection of the table in the example.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(5)
sigma = G("(4,5)")
tau = G("(1,3)")
H = G.subgroup([sigma, tau])
H.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (4,5), (1,3), (1,3)(4,5)]
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">text_names = ['id', 'sigma', 'tau', 'mu']
H.cayley_table(names=text_names)
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">    *     id sigma   tau    mu
     +------------------------
   id|    id sigma   tau    mu
sigma| sigma    id    mu   tau
  tau|   tau    mu    id sigma
   mu|    mu   tau sigma    id
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
          <section class="subsection" id="xVw">
            <div class="cell7"><span class="type">Subsection</span> <span class="codenumber">5.5.3</span> <span class="title">Motion Group of a Cube</span></div>
            <p id="fbh">We could mimic the example in the text and create elements of <nemeth class="inline">⠠⠎⠲</nemeth> as permutations of the diagonals. A more obvious, but less insightful, construction is to view the 8 corners of the cube as the items being permuted. Then some obvious symmetries of the cube come from running an axis through the center of a side, through to the center of the opposite side, with quarter-turns or half-turns about these axes forming symmetries. With three such axes and four rotations per axis, we get 12 symmetries, except we have counted the identity permutation two extra times.</p>
            <p id="Liq">Label the four corners of the square top with <nemeth class="inline">⠼⠂</nemeth> through <nemeth class="inline">⠼⠲</nemeth>, placing <nemeth class="inline">⠼⠂</nemeth> in the left-front corner, and following around clockwise when viewed from above. Use <nemeth class="inline">⠼⠢</nemeth> through <nemeth class="inline">⠼⠦</nemeth> for the bottom square's corner, so that <nemeth class="inline">⠼⠢</nemeth> is directly below <nemeth class="inline">⠼⠂</nemeth>, <nemeth class="inline">⠼⠖</nemeth> below <nemeth class="inline">⠼⠆</nemeth>, etc. We will use quarter-turns, clockwise, around each axis, when viewed from above, the front, and the right.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">G = SymmetricGroup(8)
above = G("(1,2,3,4)(5,6,7,8)")
front = G("(1,4,8,5)(2,3,7,6)")
right = G("(1,2,6,5)(3,7,8,4)")
cube = G.subgroup([above, front, right])
cube.order()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">24
</div>
            </article>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">cube.list()
</div>
              <p>Output:</p>
              <div sage-code="en-us-comp6.ctb">[(), (1,3)(2,4)(5,7)(6,8), (1,6)(2,5)(3,8)(4,7), (1,8)(2,7)(3,6)(4,5),
 (1,4,3,2)(5,8,7,6), (1,2,3,4)(5,6,7,8), (1,5)(2,8)(3,7)(4,6),
 (1,7)(2,6)(3,5)(4,8), (2,5,4)(3,6,8), (1,3,8)(2,7,5), (1,6,3)(4,5,7),
 (1,8,6)(2,4,7), (1,4)(2,8)(3,5)(6,7), (1,2,6,5)(3,7,8,4), (1,5,6,2)(3,4,8,7),
 (1,7)(2,3)(4,6)(5,8), (2,4,5)(3,8,6), (1,3,6)(4,7,5), (1,6,8)(2,7,4),
 (1,8,3)(2,5,7), (1,4,8,5)(2,3,7,6), (1,2)(3,5)(4,6)(7,8), (1,5,8,4)(2,6,7,3),
 (1,7)(2,8)(3,4)(5,6)]
</div>
            </article>
            <p id="rpz">Since we know from the discussion in the text that the symmetry group has <nemeth class="inline">⠼⠆⠲</nemeth> elements, we see that our three quarter-turns are sufficient to create every symmetry. This prompts several questions which you can find in Exercise 5.6.4.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb"># Practice area (not linked for Sage Cell use)
</div>
            </article>
          </section>
        </section>
        <section class="exercises" id="KjO">
          <div class="none"><span class="type">Exercises</span> <span class="codenumber">5.6</span> <span class="title">Sage Exercises</span></div>
          <section class="introduction" id="WcH">
            <p id="Rtb">These exercises are designed to help you become familiar with permutation groups in Sage.</p>
          </section>
          <article class="exercise exercise-like" id="CjQ">
            <h6 class="heading">
              <span class="codenumber">1<span class="period">.</span></span>
            </h6>
            <p id="Kyw">Create the full symmetric group <nemeth class="inline">⠠⠎⠂⠴</nemeth> with the command <code class="code-inline tex2jax_ignore">G = SymmetricGroup(10)</code>.</p>
          </article>
          <article class="exercise exercise-like" id="iqZ">
            <h6 class="heading">
              <span class="codenumber">2<span class="period">.</span></span>
            </h6>
            <p id="qFF">Create elements of <code class="code-inline tex2jax_ignore">G</code> with the following (varying) syntax. Pay attention to commas, quotes, brackets, parentheses. The first two use a string (characters) as input, mimicking the way we write permuations (but with commas). The second two use a list of tuples.</p>
            <ul class="outerlist">
              <li>• <p id="cJe"><code class="code-inline tex2jax_ignore">a = G("(5,7,2,9,3,1,8)")</code></p></li>
              <li>• <p id="IQn"><code class="code-inline tex2jax_ignore">b = G("(1,3)(4,5)")</code></p></li>
              <li>• <p id="oXw"><code class="code-inline tex2jax_ignore">c = G([(1,2),(3,4)])</code></p></li>
              <li>• <p id="VeF"><code class="code-inline tex2jax_ignore">d = G([(1,3),(2,5,8),(4,6,7,9,10)])</code></p></li>
            </ul>
            <ol class="outerlist">
              <li>a. <p id="BlO">Compute <nemeth class="inline">⠁⠘⠒</nemeth>, <nemeth class="inline">⠃⠉</nemeth>, <nemeth class="inline">⠁⠙⠘⠤⠼⠂⠐⠃</nemeth>.</p></li>
              <li>b. <p id="hsX">Compute the orders of each of these four individual elements (<code class="code-inline tex2jax_ignore">a</code> through <code class="code-inline tex2jax_ignore">d</code>) using a single permutation group element method.</p></li>
              <li>c. <p id="NAg">Use the permutation group element method <code class="code-inline tex2jax_ignore">.sign()</code> to determine if <nemeth class="inline">⠁⠠⠀⠃⠠⠀⠉⠠⠀⠙</nemeth> are even or odd permutations.</p></li>
              <li>d. <p id="tHp">Create two cyclic subgroups of <i class="one-letter">G</i> with the commands:</p><ul class="outerlist"><li>• <p id="qMJ"><code class="code-inline tex2jax_ignore">H = G.subgroup([a])</code></p></li><li>• <p id="ZOy"><code class="code-inline tex2jax_ignore">K = G.subgroup([d])</code></p></li></ul><p data-braille="continuation">List, and study, the elements of each subgroup. Without using Sage, list the order of each subgroup of <i class="one-letter">K</i>. Then use Sage to construct a subgroup of <i class="one-letter">K</i> with order 10.</p></li>
              <li>e. <p id="FVH">More complicated subgroups can be formed by using two or more generators. Construct a subgroup <i class="one-letter">L</i> of <i class="one-letter">G</i> with the command <code class="code-inline tex2jax_ignore">L = G.subgroup([b,c])</code>. Compute the order of <i class="one-letter">L</i> and list all of the elements of <i class="one-letter">L</i>.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="Oyi">
            <h6 class="heading">
              <span class="codenumber">3<span class="period">.</span></span>
            </h6>
            <p id="WMO">Construct the group of symmetries of the tetrahedron (also the alternating group on 4 symbols, <nemeth class="inline">⠠⠁⠲</nemeth>) with the command <code class="code-inline tex2jax_ignore">A=AlternatingGroup(4)</code>. Using tools such as orders of elements, and generators of subgroups, see if you can find <em class="emphasis">all of</em> the subgroups of <nemeth class="inline">⠠⠁⠲</nemeth> (each one exactly once). Do this without using the <code class="code-inline tex2jax_ignore">.subgroups()</code> method to justify the correctness of your answer (though it might be a convenient way to check your work).</p>
            <p id="CTX">Provide a nice summary as your answer—not just piles of output. So use Sage as a tool, as needed, but basically your answer will be a concise paragraph and/or table. This is the one part of this assignment without clear, precise directions, so spend some time on this portion to get it right. Hint: no subgroup of <nemeth class="inline">⠠⠁⠲</nemeth> requires more than two generators.</p>
          </article>
          <article class="exercise exercise-like" id="uFr">
            <h6 class="heading">
              <span class="codenumber">4<span class="period">.</span></span>
            </h6>
            <p id="jbg">The subsection Motion Group of a Cube describes the <nemeth class="inline">⠼⠆⠲</nemeth> symmetries of a cube as a subgroup of the symmetric group <nemeth class="inline">⠠⠎⠦</nemeth> generated by three quarter-turns. Answer the following questions about this symmetry group.</p>
            <ol class="outerlist">
              <li>a. <p id="mcQ">From the list of elements of the group, can you locate the ten rotations about axes? (Hint: the identity is easy, the other nine never send any symbol to itself.)</p></li>
              <li>b. <p id="SjZ">Can you identify the six symmetries that are a transposition of diagonals? (Hint: <code class="code-inline tex2jax_ignore">[g for g in cube if g.order() == 2]</code> is a good preliminary filter.)</p></li>
              <li>c. <p id="yri">Verify that any two of the quarter-turns (<code class="code-inline tex2jax_ignore">above</code>, <code class="code-inline tex2jax_ignore">front</code>, <code class="code-inline tex2jax_ignore">right</code>) are sufficient to generate the whole group. How do you know each pair generates the entire group?</p></li>
              <li>d. <p id="eyr">Can you express one of the diagonal transpositions as a product of quarter-turns? This can be a notoriously difficult problem, especially for software. It is known as the “word problem.”</p></li>
              <li>e. <p id="KFA">Number the six faces of the cube with the numbers <nemeth class="inline">⠼⠂</nemeth> through <nemeth class="inline">⠼⠖</nemeth> (any way you like). Now consider the same three symmetries we used before (quarter-turns about face-to-face axes), but now view them as permutations of the six faces. In this way, we construct each symmetry as an element of <nemeth class="inline">⠠⠎⠖</nemeth>. Verify that the subgroup generated by these symmetries is the whole symmetry group of the cube. Again, rather than using three generators, try using just two.</p></li>
            </ol>
          </article>
          <article class="exercise exercise-like" id="aMA">
            <h6 class="heading">
              <span class="codenumber">5<span class="period">.</span></span>
            </h6>
            <p id="Pip">Save your work, and then see if you can crash your Sage session by building the subgroup of <nemeth class="inline">⠠⠎⠂⠴</nemeth> generated by the elements <code class="code-inline tex2jax_ignore">b</code> and <code class="code-inline tex2jax_ignore">d</code> of orders <nemeth class="inline">⠼⠆</nemeth> and <nemeth class="inline">⠼⠒⠴</nemeth> from above. <em class="emphasis">Do not submit</em> the list of elements of <code class="code-inline tex2jax_ignore">N</code> as part of your submitted worksheet.</p>
            <article data-braille="sage">
              <h6 class="heading">
                <span class="type">Sage</span>
              </h6>
              <p>Input:</p>
              <div sage-code="en-us-comp6.ctb">N = G.subgroup([b,d])
N.list()
</div>
            </article>
            <p id="vpy">What is the order of <i class="one-letter">N</i>?</p>
          </article>
        </section>
      </section>
    </section>
  </body>
</html>
